This is Ultimate 0.1.24-f1553f5-m
[2020-11-24 23:46:11,477 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-24 23:46:11,479 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-24 23:46:11,489 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-24 23:46:11,489 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-24 23:46:11,489 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-24 23:46:11,490 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-24 23:46:11,492 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-24 23:46:11,493 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-24 23:46:11,494 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-24 23:46:11,494 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-24 23:46:11,495 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-24 23:46:11,495 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-24 23:46:11,496 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-24 23:46:11,497 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-24 23:46:11,497 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-24 23:46:11,498 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-24 23:46:11,499 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-24 23:46:11,500 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-24 23:46:11,501 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-24 23:46:11,502 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-24 23:46:11,503 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-24 23:46:11,504 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-24 23:46:11,505 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-24 23:46:11,505 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-24 23:46:11,505 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-24 23:46:11,505 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-24 23:46:11,506 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-24 23:46:11,506 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-24 23:46:11,506 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-24 23:46:11,507 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-24 23:46:11,507 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-24 23:46:11,508 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-24 23:46:11,508 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-24 23:46:11,509 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-24 23:46:11,509 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-24 23:46:11,510 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-24 23:46:11,510 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-24 23:46:11,510 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-24 23:46:11,511 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-24 23:46:11,511 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-24 23:46:11,511 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-24 23:46:11,518 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-24 23:46:11,519 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-24 23:46:11,519 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-24 23:46:11,519 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-24 23:46:11,520 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-24 23:46:11,520 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-24 23:46:11,520 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-24 23:46:11,520 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-24 23:46:11,520 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-24 23:46:11,520 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-24 23:46:11,520 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-24 23:46:11,520 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-24 23:46:11,520 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-24 23:46:11,521 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-24 23:46:11,521 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-24 23:46:11,521 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-24 23:46:11,521 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-24 23:46:11,521 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-24 23:46:11,521 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-24 23:46:11,521 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-24 23:46:11,521 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-24 23:46:11,521 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-24 23:46:11,521 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-24 23:46:11,522 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-24 23:46:11,522 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-24 23:46:11,522 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-24 23:46:11,545 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-24 23:46:11,561 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-24 23:46:11,565 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-24 23:46:11,566 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-24 23:46:11,567 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-24 23:46:11,568 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/AlitaToken_0x7f509e1a5114073adcab062ef26a199511926071_transfer-fail.bpl
[2020-11-24 23:46:11,569 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/AlitaToken_0x7f509e1a5114073adcab062ef26a199511926071_transfer-fail.bpl'
[2020-11-24 23:46:11,655 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-24 23:46:11,656 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-24 23:46:11,657 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-24 23:46:11,657 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-24 23:46:11,657 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-24 23:46:11,667 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "AlitaToken_0x7f509e1a5114073adcab062ef26a199511926071_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 11:46:11" (1/1) ...
[2020-11-24 23:46:11,669 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "AlitaToken_0x7f509e1a5114073adcab062ef26a199511926071_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 11:46:11" (1/1) ...
[2020-11-24 23:46:11,703 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "AlitaToken_0x7f509e1a5114073adcab062ef26a199511926071_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 11:46:11" (1/1) ...
[2020-11-24 23:46:11,704 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "AlitaToken_0x7f509e1a5114073adcab062ef26a199511926071_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 11:46:11" (1/1) ...
[2020-11-24 23:46:11,730 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "AlitaToken_0x7f509e1a5114073adcab062ef26a199511926071_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 11:46:11" (1/1) ...
[2020-11-24 23:46:11,743 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "AlitaToken_0x7f509e1a5114073adcab062ef26a199511926071_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 11:46:11" (1/1) ...
[2020-11-24 23:46:11,754 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "AlitaToken_0x7f509e1a5114073adcab062ef26a199511926071_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 11:46:11" (1/1) ...
[2020-11-24 23:46:11,769 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-24 23:46:11,770 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-24 23:46:11,770 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-24 23:46:11,772 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-24 23:46:11,778 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "AlitaToken_0x7f509e1a5114073adcab062ef26a199511926071_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 11:46:11" (1/1) ...
[2020-11-24 23:46:11,803 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(AlitaToken.transfer(to, value), msg.sender != to && (value > balances_BasicToken[this][msg.sender] || balances_BasicToken[this][to] + value >= 0x10000000000000000000000000000000000000000000000000000000000000000) && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_BasicToken[this][to] >= 0 && balances_BasicToken[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_BasicToken[this][msg.sender] >= 0 &&  balances_BasicToken[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(reverted(AlitaToken.transfer)))
[2020-11-24 23:46:11,809 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(AlitaToken.transfer(to, value), msg.sender != to && (value > balances_BasicToken[this][msg.sender] || balances_BasicToken[this][to] + value >= 0x10000000000000000000000000000000000000000000000000000000000000000) && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_BasicToken[this][to] >= 0 && balances_BasicToken[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_BasicToken[this][msg.sender] >= 0 &&  balances_BasicToken[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(reverted(AlitaToken.transfer)))
[2020-11-24 23:46:11,816 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(AlitaToken.transfer(to, value), msg.sender != to && (value > balances_BasicToken[this][msg.sender] || balances_BasicToken[this][to] + value >= 0x10000000000000000000000000000000000000000000000000000000000000000) && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_BasicToken[this][to] >= 0 && balances_BasicToken[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_BasicToken[this][msg.sender] >= 0 &&  balances_BasicToken[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(reverted(AlitaToken.transfer)))
[2020-11-24 23:46:11,826 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( msg.sender!=_to_s754 && ( _value_s754>balances_BasicToken[this][msg.sender] || ( balances_BasicToken[this][_to_s754] + _value_s754 )>=115792089237316195423570985008687907853269984665640564039457584007913129639936 ) ) && _value_s754>=0 ) && _value_s754<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && balances_BasicToken[this][_to_s754]>=0 ) && balances_BasicToken[this][_to_s754]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && balances_BasicToken[this][msg.sender]>=0 ) && balances_BasicToken[this][msg.sender]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPNEQ,IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_AlitaToken>],IdentifierExpression[_to_s754,<IMPLEMENTATION_INPARAM,transfer~address~uint256_AlitaToken>]],BinaryExpression[LOGICOR,BinaryExpression[COMPGT,IdentifierExpression[_value_s754,<IMPLEMENTATION_INPARAM,transfer~address~uint256_AlitaToken>],ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_BasicToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_AlitaToken>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_AlitaToken>]]]],BinaryExpression[COMPGEQ,BinaryExpression[ARITHPLUS,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_BasicToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_AlitaToken>]]],[IdentifierExpression[_to_s754,<IMPLEMENTATION_INPARAM,transfer~address~uint256_AlitaToken>]]],IdentifierExpression[_value_s754,<IMPLEMENTATION_INPARAM,transfer~address~uint256_AlitaToken>]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]]],BinaryExpression[COMPGEQ,IdentifierExpression[_value_s754,<IMPLEMENTATION_INPARAM,transfer~address~uint256_AlitaToken>],IntegerLiteral[0]]],BinaryExpression[COMPLT,IdentifierExpression[_value_s754,<IMPLEMENTATION_INPARAM,transfer~address~uint256_AlitaToken>],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_BasicToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_AlitaToken>]]],[IdentifierExpression[_to_s754,<IMPLEMENTATION_INPARAM,transfer~address~uint256_AlitaToken>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_BasicToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_AlitaToken>]]],[IdentifierExpression[_to_s754,<IMPLEMENTATION_INPARAM,transfer~address~uint256_AlitaToken>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_BasicToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_AlitaToken>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_AlitaToken>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_BasicToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_AlitaToken>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_AlitaToken>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]]
[2020-11-24 23:46:11,834 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(AlitaToken.transfer(to, value), msg.sender != to && (value > balances_BasicToken[this][msg.sender] || balances_BasicToken[this][to] + value >= 0x10000000000000000000000000000000000000000000000000000000000000000) && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_BasicToken[this][to] >= 0 && balances_BasicToken[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_BasicToken[this][msg.sender] >= 0 &&  balances_BasicToken[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(reverted(AlitaToken.transfer)))
[2020-11-24 23:46:11,835 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_transfer_AlitaToken0) ==> ( <>AP(fail_transfer_AlitaToken0) ) ) )
Executed UtopiaSpecLang
[2020-11-24 23:46:11,853 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 11:46:11 PropertyContainer
[2020-11-24 23:46:11,853 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-24 23:46:11,853 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-24 23:46:11,853 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-24 23:46:11,853 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-24 23:46:11,854 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "AlitaToken_0x7f509e1a5114073adcab062ef26a199511926071_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 11:46:11" (1/2) ...
[2020-11-24 23:46:11,855 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-24 23:46:11,855 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-24 23:46:11,876 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 11:46:11" (2/2) ...
[2020-11-24 23:46:11,877 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-24 23:46:11,877 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-24 23:46:11,877 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-24 23:46:11,877 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-24 23:46:11,878 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "AlitaToken_0x7f509e1a5114073adcab062ef26a199511926071_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 11:46:11" (1/2) ...
[2020-11-24 23:46:11,934 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-24 23:46:11,934 INFO  L130     BoogieDeclarations]: Found specification of procedure Ownable_Ownable_NoBaseCtor__success
[2020-11-24 23:46:11,934 INFO  L130     BoogieDeclarations]: Found specification of procedure Ownable_Ownable
[2020-11-24 23:46:11,934 INFO  L138     BoogieDeclarations]: Found implementation of procedure Ownable_Ownable
[2020-11-24 23:46:11,934 INFO  L130     BoogieDeclarations]: Found specification of procedure transferOwnership~address_Ownable
[2020-11-24 23:46:11,935 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferOwnership~address_Ownable
[2020-11-24 23:46:11,935 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_Ownable
[2020-11-24 23:46:11,935 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_Ownable
[2020-11-24 23:46:11,935 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Basic_ERC20Basic_NoBaseCtor__success
[2020-11-24 23:46:11,935 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Basic_ERC20Basic
[2020-11-24 23:46:11,935 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Basic_ERC20Basic
[2020-11-24 23:46:11,935 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20Basic
[2020-11-24 23:46:11,935 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20Basic
[2020-11-24 23:46:11,935 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20Basic
[2020-11-24 23:46:11,936 INFO  L130     BoogieDeclarations]: Found specification of procedure BasicToken_BasicToken_NoBaseCtor__success
[2020-11-24 23:46:11,936 INFO  L130     BoogieDeclarations]: Found specification of procedure BasicToken_BasicToken
[2020-11-24 23:46:11,936 INFO  L138     BoogieDeclarations]: Found implementation of procedure BasicToken_BasicToken
[2020-11-24 23:46:11,936 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_BasicToken
[2020-11-24 23:46:11,937 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_BasicToken
[2020-11-24 23:46:11,937 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_BasicToken
[2020-11-24 23:46:11,937 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_BasicToken
[2020-11-24 23:46:11,937 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_BasicToken
[2020-11-24 23:46:11,937 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_BasicToken
[2020-11-24 23:46:11,937 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20_NoBaseCtor__success
[2020-11-24 23:46:11,937 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20
[2020-11-24 23:46:11,937 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20
[2020-11-24 23:46:11,937 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20
[2020-11-24 23:46:11,937 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20
[2020-11-24 23:46:11,938 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20
[2020-11-24 23:46:11,938 INFO  L130     BoogieDeclarations]: Found specification of procedure StandardToken_StandardToken_NoBaseCtor__success
[2020-11-24 23:46:11,938 INFO  L130     BoogieDeclarations]: Found specification of procedure StandardToken_StandardToken
[2020-11-24 23:46:11,938 INFO  L138     BoogieDeclarations]: Found implementation of procedure StandardToken_StandardToken
[2020-11-24 23:46:11,938 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_StandardToken
[2020-11-24 23:46:11,938 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_StandardToken
[2020-11-24 23:46:11,938 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_StandardToken
[2020-11-24 23:46:11,938 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_StandardToken
[2020-11-24 23:46:11,938 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_StandardToken
[2020-11-24 23:46:11,939 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_StandardToken
[2020-11-24 23:46:11,939 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseApproval~address~uint256_StandardToken
[2020-11-24 23:46:11,939 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseApproval~address~uint256_StandardToken
[2020-11-24 23:46:11,939 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseApproval~address~uint256_StandardToken
[2020-11-24 23:46:11,939 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseApproval~address~uint256_StandardToken
[2020-11-24 23:46:11,939 INFO  L130     BoogieDeclarations]: Found specification of procedure Pausable_Pausable_NoBaseCtor__success
[2020-11-24 23:46:11,939 INFO  L130     BoogieDeclarations]: Found specification of procedure Pausable_Pausable
[2020-11-24 23:46:11,939 INFO  L138     BoogieDeclarations]: Found implementation of procedure Pausable_Pausable
[2020-11-24 23:46:11,939 INFO  L130     BoogieDeclarations]: Found specification of procedure pause_Pausable
[2020-11-24 23:46:11,939 INFO  L138     BoogieDeclarations]: Found implementation of procedure pause_Pausable
[2020-11-24 23:46:11,940 INFO  L130     BoogieDeclarations]: Found specification of procedure unpause_Pausable
[2020-11-24 23:46:11,940 INFO  L138     BoogieDeclarations]: Found implementation of procedure unpause_Pausable
[2020-11-24 23:46:11,940 INFO  L130     BoogieDeclarations]: Found specification of procedure paused_Pausable
[2020-11-24 23:46:11,940 INFO  L138     BoogieDeclarations]: Found implementation of procedure paused_Pausable
[2020-11-24 23:46:11,940 INFO  L130     BoogieDeclarations]: Found specification of procedure UpgradedStandardToken_UpgradedStandardToken_NoBaseCtor__success
[2020-11-24 23:46:11,940 INFO  L130     BoogieDeclarations]: Found specification of procedure UpgradedStandardToken_UpgradedStandardToken
[2020-11-24 23:46:11,940 INFO  L138     BoogieDeclarations]: Found implementation of procedure UpgradedStandardToken_UpgradedStandardToken
[2020-11-24 23:46:11,940 INFO  L130     BoogieDeclarations]: Found specification of procedure transferByLegacy~address~address~uint256_UpgradedStandardToken
[2020-11-24 23:46:11,940 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFromByLegacy~address~address~address~uint256_UpgradedStandardToken
[2020-11-24 23:46:11,940 INFO  L130     BoogieDeclarations]: Found specification of procedure approveByLegacy~address~address~uint256_UpgradedStandardToken
[2020-11-24 23:46:11,941 INFO  L130     BoogieDeclarations]: Found specification of procedure BlackList_BlackList_NoBaseCtor__success
[2020-11-24 23:46:11,941 INFO  L130     BoogieDeclarations]: Found specification of procedure BlackList_BlackList
[2020-11-24 23:46:11,941 INFO  L138     BoogieDeclarations]: Found implementation of procedure BlackList_BlackList
[2020-11-24 23:46:11,941 INFO  L130     BoogieDeclarations]: Found specification of procedure getBlackListStatus~address_BlackList
[2020-11-24 23:46:11,941 INFO  L138     BoogieDeclarations]: Found implementation of procedure getBlackListStatus~address_BlackList
[2020-11-24 23:46:11,941 INFO  L130     BoogieDeclarations]: Found specification of procedure getOwner_BlackList
[2020-11-24 23:46:11,941 INFO  L138     BoogieDeclarations]: Found implementation of procedure getOwner_BlackList
[2020-11-24 23:46:11,941 INFO  L130     BoogieDeclarations]: Found specification of procedure addBlackList~address_BlackList
[2020-11-24 23:46:11,941 INFO  L138     BoogieDeclarations]: Found implementation of procedure addBlackList~address_BlackList
[2020-11-24 23:46:11,941 INFO  L130     BoogieDeclarations]: Found specification of procedure removeBlackList~address_BlackList
[2020-11-24 23:46:11,942 INFO  L138     BoogieDeclarations]: Found implementation of procedure removeBlackList~address_BlackList
[2020-11-24 23:46:11,942 INFO  L130     BoogieDeclarations]: Found specification of procedure destroyBlackFunds~address_BlackList
[2020-11-24 23:46:11,942 INFO  L138     BoogieDeclarations]: Found implementation of procedure destroyBlackFunds~address_BlackList
[2020-11-24 23:46:11,942 INFO  L130     BoogieDeclarations]: Found specification of procedure isBlackListed~address_BlackList
[2020-11-24 23:46:11,942 INFO  L138     BoogieDeclarations]: Found implementation of procedure isBlackListed~address_BlackList
[2020-11-24 23:46:11,942 INFO  L130     BoogieDeclarations]: Found specification of procedure AlitaToken_AlitaToken_NoBaseCtor__success
[2020-11-24 23:46:11,942 INFO  L130     BoogieDeclarations]: Found specification of procedure AlitaToken_AlitaToken
[2020-11-24 23:46:11,942 INFO  L138     BoogieDeclarations]: Found implementation of procedure AlitaToken_AlitaToken
[2020-11-24 23:46:11,942 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_AlitaToken
[2020-11-24 23:46:11,942 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_AlitaToken
[2020-11-24 23:46:11,943 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_AlitaToken
[2020-11-24 23:46:11,943 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_AlitaToken
[2020-11-24 23:46:11,943 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_AlitaToken
[2020-11-24 23:46:11,943 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_AlitaToken
[2020-11-24 23:46:11,943 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_AlitaToken
[2020-11-24 23:46:11,943 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_AlitaToken
[2020-11-24 23:46:11,943 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseApproval~address~uint256_AlitaToken
[2020-11-24 23:46:11,943 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseApproval~address~uint256_AlitaToken
[2020-11-24 23:46:11,943 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseApproval~address~uint256_AlitaToken
[2020-11-24 23:46:11,943 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseApproval~address~uint256_AlitaToken
[2020-11-24 23:46:11,944 INFO  L130     BoogieDeclarations]: Found specification of procedure deprecate~address_AlitaToken
[2020-11-24 23:46:11,944 INFO  L138     BoogieDeclarations]: Found implementation of procedure deprecate~address_AlitaToken
[2020-11-24 23:46:11,944 INFO  L130     BoogieDeclarations]: Found specification of procedure name_AlitaToken
[2020-11-24 23:46:11,944 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_AlitaToken
[2020-11-24 23:46:11,944 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_AlitaToken
[2020-11-24 23:46:11,944 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_AlitaToken
[2020-11-24 23:46:11,944 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_AlitaToken
[2020-11-24 23:46:11,944 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_AlitaToken
[2020-11-24 23:46:11,944 INFO  L130     BoogieDeclarations]: Found specification of procedure init_Supply_AlitaToken
[2020-11-24 23:46:11,944 INFO  L138     BoogieDeclarations]: Found implementation of procedure init_Supply_AlitaToken
[2020-11-24 23:46:11,945 INFO  L130     BoogieDeclarations]: Found specification of procedure upgradedAddress_AlitaToken
[2020-11-24 23:46:11,945 INFO  L138     BoogieDeclarations]: Found implementation of procedure upgradedAddress_AlitaToken
[2020-11-24 23:46:11,945 INFO  L130     BoogieDeclarations]: Found specification of procedure deprecated_AlitaToken
[2020-11-24 23:46:11,945 INFO  L138     BoogieDeclarations]: Found implementation of procedure deprecated_AlitaToken
[2020-11-24 23:46:11,945 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-24 23:46:11,945 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath
[2020-11-24 23:46:11,945 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath
[2020-11-24 23:46:11,945 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__success
[2020-11-24 23:46:11,945 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256_SafeMath__success
[2020-11-24 23:46:11,945 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__success
[2020-11-24 23:46:11,945 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__success
[2020-11-24 23:46:11,946 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-24 23:46:11,946 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-24 23:46:11,946 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-24 23:46:11,946 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__success
[2020-11-24 23:46:11,946 INFO  L130     BoogieDeclarations]: Found specification of procedure whenNotPaused_pre__success
[2020-11-24 23:46:11,946 INFO  L130     BoogieDeclarations]: Found specification of procedure whenPaused_pre__success
[2020-11-24 23:46:11,946 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_Ownable
[2020-11-24 23:46:11,946 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_Ownable
[2020-11-24 23:46:11,946 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20Basic
[2020-11-24 23:46:11,947 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20Basic
[2020-11-24 23:46:11,947 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_BasicToken
[2020-11-24 23:46:11,947 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_BasicToken
[2020-11-24 23:46:11,947 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20
[2020-11-24 23:46:11,947 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20
[2020-11-24 23:46:11,947 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_StandardToken
[2020-11-24 23:46:11,947 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_StandardToken
[2020-11-24 23:46:11,947 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_Pausable
[2020-11-24 23:46:11,947 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_Pausable
[2020-11-24 23:46:11,947 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_UpgradedStandardToken
[2020-11-24 23:46:11,948 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_UpgradedStandardToken
[2020-11-24 23:46:11,948 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_BlackList
[2020-11-24 23:46:11,948 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_BlackList
[2020-11-24 23:46:11,948 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_AlitaToken
[2020-11-24 23:46:11,948 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-24 23:46:11,948 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_SafeMath
[2020-11-24 23:46:11,948 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_SafeMath
[2020-11-24 23:46:11,948 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-24 23:46:11,948 INFO  L130     BoogieDeclarations]: Found specification of procedure Ownable_Ownable_NoBaseCtor__fail
[2020-11-24 23:46:11,949 INFO  L130     BoogieDeclarations]: Found specification of procedure Ownable_Ownable__success
[2020-11-24 23:46:11,949 INFO  L130     BoogieDeclarations]: Found specification of procedure Ownable_Ownable__fail
[2020-11-24 23:46:11,949 INFO  L130     BoogieDeclarations]: Found specification of procedure transferOwnership~address_Ownable__success
[2020-11-24 23:46:11,949 INFO  L130     BoogieDeclarations]: Found specification of procedure transferOwnership~address_Ownable__fail
[2020-11-24 23:46:11,949 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_Ownable__success
[2020-11-24 23:46:11,949 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_Ownable__fail
[2020-11-24 23:46:11,949 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Basic_ERC20Basic_NoBaseCtor__fail
[2020-11-24 23:46:11,949 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Basic_ERC20Basic__success
[2020-11-24 23:46:11,949 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Basic_ERC20Basic__fail
[2020-11-24 23:46:11,950 INFO  L130     BoogieDeclarations]: Found specification of procedure BasicToken_BasicToken_NoBaseCtor__fail
[2020-11-24 23:46:11,950 INFO  L130     BoogieDeclarations]: Found specification of procedure BasicToken_BasicToken__success
[2020-11-24 23:46:11,950 INFO  L130     BoogieDeclarations]: Found specification of procedure BasicToken_BasicToken__fail
[2020-11-24 23:46:11,950 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_BasicToken__success
[2020-11-24 23:46:11,950 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_BasicToken__fail
[2020-11-24 23:46:11,950 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_BasicToken__success
[2020-11-24 23:46:11,950 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_BasicToken__fail
[2020-11-24 23:46:11,950 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_BasicToken__success
[2020-11-24 23:46:11,950 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_BasicToken__fail
[2020-11-24 23:46:11,950 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20_NoBaseCtor__fail
[2020-11-24 23:46:11,951 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20__success
[2020-11-24 23:46:11,951 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20__fail
[2020-11-24 23:46:11,951 INFO  L130     BoogieDeclarations]: Found specification of procedure StandardToken_StandardToken_NoBaseCtor__fail
[2020-11-24 23:46:11,951 INFO  L130     BoogieDeclarations]: Found specification of procedure StandardToken_StandardToken__success
[2020-11-24 23:46:11,951 INFO  L130     BoogieDeclarations]: Found specification of procedure StandardToken_StandardToken__fail
[2020-11-24 23:46:11,951 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_StandardToken__success
[2020-11-24 23:46:11,951 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_StandardToken__fail
[2020-11-24 23:46:11,951 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_StandardToken__success
[2020-11-24 23:46:11,951 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_StandardToken__fail
[2020-11-24 23:46:11,951 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_StandardToken__success
[2020-11-24 23:46:11,951 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_StandardToken__fail
[2020-11-24 23:46:11,952 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseApproval~address~uint256_StandardToken__success
[2020-11-24 23:46:11,952 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseApproval~address~uint256_StandardToken__fail
[2020-11-24 23:46:11,952 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseApproval~address~uint256_StandardToken__success
[2020-11-24 23:46:11,952 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseApproval~address~uint256_StandardToken__fail
[2020-11-24 23:46:11,952 INFO  L130     BoogieDeclarations]: Found specification of procedure Pausable_Pausable_NoBaseCtor__fail
[2020-11-24 23:46:11,952 INFO  L130     BoogieDeclarations]: Found specification of procedure Pausable_Pausable__success
[2020-11-24 23:46:11,952 INFO  L130     BoogieDeclarations]: Found specification of procedure Pausable_Pausable__fail
[2020-11-24 23:46:11,952 INFO  L130     BoogieDeclarations]: Found specification of procedure pause_Pausable__success
[2020-11-24 23:46:11,952 INFO  L130     BoogieDeclarations]: Found specification of procedure pause_Pausable__fail
[2020-11-24 23:46:11,952 INFO  L130     BoogieDeclarations]: Found specification of procedure unpause_Pausable__success
[2020-11-24 23:46:11,953 INFO  L130     BoogieDeclarations]: Found specification of procedure unpause_Pausable__fail
[2020-11-24 23:46:11,953 INFO  L130     BoogieDeclarations]: Found specification of procedure paused_Pausable__success
[2020-11-24 23:46:11,953 INFO  L130     BoogieDeclarations]: Found specification of procedure paused_Pausable__fail
[2020-11-24 23:46:11,953 INFO  L130     BoogieDeclarations]: Found specification of procedure UpgradedStandardToken_UpgradedStandardToken_NoBaseCtor__fail
[2020-11-24 23:46:11,953 INFO  L130     BoogieDeclarations]: Found specification of procedure UpgradedStandardToken_UpgradedStandardToken__success
[2020-11-24 23:46:11,953 INFO  L130     BoogieDeclarations]: Found specification of procedure UpgradedStandardToken_UpgradedStandardToken__fail
[2020-11-24 23:46:11,953 INFO  L130     BoogieDeclarations]: Found specification of procedure BlackList_BlackList_NoBaseCtor__fail
[2020-11-24 23:46:11,953 INFO  L130     BoogieDeclarations]: Found specification of procedure BlackList_BlackList__success
[2020-11-24 23:46:11,953 INFO  L130     BoogieDeclarations]: Found specification of procedure BlackList_BlackList__fail
[2020-11-24 23:46:11,953 INFO  L130     BoogieDeclarations]: Found specification of procedure getBlackListStatus~address_BlackList__success
[2020-11-24 23:46:11,953 INFO  L130     BoogieDeclarations]: Found specification of procedure getBlackListStatus~address_BlackList__fail
[2020-11-24 23:46:11,953 INFO  L130     BoogieDeclarations]: Found specification of procedure getOwner_BlackList__success
[2020-11-24 23:46:11,954 INFO  L130     BoogieDeclarations]: Found specification of procedure getOwner_BlackList__fail
[2020-11-24 23:46:11,954 INFO  L130     BoogieDeclarations]: Found specification of procedure addBlackList~address_BlackList__success
[2020-11-24 23:46:11,954 INFO  L130     BoogieDeclarations]: Found specification of procedure addBlackList~address_BlackList__fail
[2020-11-24 23:46:11,954 INFO  L130     BoogieDeclarations]: Found specification of procedure removeBlackList~address_BlackList__success
[2020-11-24 23:46:11,954 INFO  L130     BoogieDeclarations]: Found specification of procedure removeBlackList~address_BlackList__fail
[2020-11-24 23:46:11,954 INFO  L130     BoogieDeclarations]: Found specification of procedure destroyBlackFunds~address_BlackList__success
[2020-11-24 23:46:11,954 INFO  L130     BoogieDeclarations]: Found specification of procedure destroyBlackFunds~address_BlackList__fail
[2020-11-24 23:46:11,954 INFO  L130     BoogieDeclarations]: Found specification of procedure isBlackListed~address_BlackList__success
[2020-11-24 23:46:11,954 INFO  L130     BoogieDeclarations]: Found specification of procedure isBlackListed~address_BlackList__fail
[2020-11-24 23:46:11,954 INFO  L130     BoogieDeclarations]: Found specification of procedure AlitaToken_AlitaToken_NoBaseCtor__fail
[2020-11-24 23:46:11,954 INFO  L130     BoogieDeclarations]: Found specification of procedure AlitaToken_AlitaToken__success
[2020-11-24 23:46:11,955 INFO  L130     BoogieDeclarations]: Found specification of procedure AlitaToken_AlitaToken__fail
[2020-11-24 23:46:11,955 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_AlitaToken__success
[2020-11-24 23:46:11,955 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_AlitaToken__fail
[2020-11-24 23:46:11,955 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_AlitaToken__success
[2020-11-24 23:46:11,955 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_AlitaToken__fail
[2020-11-24 23:46:11,955 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_AlitaToken__success
[2020-11-24 23:46:11,955 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_AlitaToken__fail
[2020-11-24 23:46:11,955 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_AlitaToken__success
[2020-11-24 23:46:11,955 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_AlitaToken__fail
[2020-11-24 23:46:11,955 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseApproval~address~uint256_AlitaToken__success
[2020-11-24 23:46:11,955 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseApproval~address~uint256_AlitaToken__fail
[2020-11-24 23:46:11,955 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseApproval~address~uint256_AlitaToken__success
[2020-11-24 23:46:11,956 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseApproval~address~uint256_AlitaToken__fail
[2020-11-24 23:46:11,956 INFO  L130     BoogieDeclarations]: Found specification of procedure deprecate~address_AlitaToken__success
[2020-11-24 23:46:11,956 INFO  L130     BoogieDeclarations]: Found specification of procedure deprecate~address_AlitaToken__fail
[2020-11-24 23:46:11,956 INFO  L130     BoogieDeclarations]: Found specification of procedure name_AlitaToken__success
[2020-11-24 23:46:11,956 INFO  L130     BoogieDeclarations]: Found specification of procedure name_AlitaToken__fail
[2020-11-24 23:46:11,956 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_AlitaToken__success
[2020-11-24 23:46:11,956 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_AlitaToken__fail
[2020-11-24 23:46:11,956 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_AlitaToken__success
[2020-11-24 23:46:11,956 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_AlitaToken__fail
[2020-11-24 23:46:11,956 INFO  L130     BoogieDeclarations]: Found specification of procedure init_Supply_AlitaToken__success
[2020-11-24 23:46:11,956 INFO  L130     BoogieDeclarations]: Found specification of procedure init_Supply_AlitaToken__fail
[2020-11-24 23:46:11,956 INFO  L130     BoogieDeclarations]: Found specification of procedure upgradedAddress_AlitaToken__success
[2020-11-24 23:46:11,957 INFO  L130     BoogieDeclarations]: Found specification of procedure upgradedAddress_AlitaToken__fail
[2020-11-24 23:46:11,957 INFO  L130     BoogieDeclarations]: Found specification of procedure deprecated_AlitaToken__success
[2020-11-24 23:46:11,957 INFO  L130     BoogieDeclarations]: Found specification of procedure deprecated_AlitaToken__fail
[2020-11-24 23:46:11,957 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-24 23:46:11,957 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__success
[2020-11-24 23:46:11,957 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__fail
[2020-11-24 23:46:11,957 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-24 23:46:11,957 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256_SafeMath__fail
[2020-11-24 23:46:11,957 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-24 23:46:11,957 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__fail
[2020-11-24 23:46:11,957 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-24 23:46:11,957 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-24 23:46:11,958 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-24 23:46:11,958 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__fail
[2020-11-24 23:46:11,958 INFO  L130     BoogieDeclarations]: Found specification of procedure whenNotPaused_pre__fail
[2020-11-24 23:46:11,958 INFO  L130     BoogieDeclarations]: Found specification of procedure whenPaused_pre__fail
[2020-11-24 23:46:11,958 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-24 23:46:11,958 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-24 23:46:11,958 INFO  L138     BoogieDeclarations]: Found implementation of procedure Ownable_Ownable_NoBaseCtor__fail
[2020-11-24 23:46:11,958 INFO  L138     BoogieDeclarations]: Found implementation of procedure Ownable_Ownable_NoBaseCtor__success
[2020-11-24 23:46:11,958 INFO  L138     BoogieDeclarations]: Found implementation of procedure Ownable_Ownable__fail
[2020-11-24 23:46:11,958 INFO  L138     BoogieDeclarations]: Found implementation of procedure Ownable_Ownable__success
[2020-11-24 23:46:11,958 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferOwnership~address_Ownable__fail
[2020-11-24 23:46:11,958 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferOwnership~address_Ownable__success
[2020-11-24 23:46:11,959 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_Ownable__fail
[2020-11-24 23:46:11,959 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_Ownable__success
[2020-11-24 23:46:11,959 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Basic_ERC20Basic_NoBaseCtor__fail
[2020-11-24 23:46:11,959 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Basic_ERC20Basic_NoBaseCtor__success
[2020-11-24 23:46:11,959 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Basic_ERC20Basic__fail
[2020-11-24 23:46:11,959 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Basic_ERC20Basic__success
[2020-11-24 23:46:11,959 INFO  L138     BoogieDeclarations]: Found implementation of procedure BasicToken_BasicToken_NoBaseCtor__fail
[2020-11-24 23:46:11,959 INFO  L138     BoogieDeclarations]: Found implementation of procedure BasicToken_BasicToken_NoBaseCtor__success
[2020-11-24 23:46:11,959 INFO  L138     BoogieDeclarations]: Found implementation of procedure BasicToken_BasicToken__fail
[2020-11-24 23:46:11,959 INFO  L138     BoogieDeclarations]: Found implementation of procedure BasicToken_BasicToken__success
[2020-11-24 23:46:11,959 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_BasicToken__fail
[2020-11-24 23:46:11,959 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_BasicToken__success
[2020-11-24 23:46:11,960 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_BasicToken__fail
[2020-11-24 23:46:11,960 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_BasicToken__success
[2020-11-24 23:46:11,960 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_BasicToken__fail
[2020-11-24 23:46:11,960 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_BasicToken__success
[2020-11-24 23:46:11,960 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20_NoBaseCtor__fail
[2020-11-24 23:46:11,960 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20_NoBaseCtor__success
[2020-11-24 23:46:11,960 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20__fail
[2020-11-24 23:46:11,960 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20__success
[2020-11-24 23:46:11,960 INFO  L138     BoogieDeclarations]: Found implementation of procedure StandardToken_StandardToken_NoBaseCtor__fail
[2020-11-24 23:46:11,960 INFO  L138     BoogieDeclarations]: Found implementation of procedure StandardToken_StandardToken_NoBaseCtor__success
[2020-11-24 23:46:11,960 INFO  L138     BoogieDeclarations]: Found implementation of procedure StandardToken_StandardToken__fail
[2020-11-24 23:46:11,961 INFO  L138     BoogieDeclarations]: Found implementation of procedure StandardToken_StandardToken__success
[2020-11-24 23:46:11,961 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_StandardToken__fail
[2020-11-24 23:46:11,961 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_StandardToken__success
[2020-11-24 23:46:11,961 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_StandardToken__fail
[2020-11-24 23:46:11,961 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_StandardToken__success
[2020-11-24 23:46:11,961 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_StandardToken__fail
[2020-11-24 23:46:11,961 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_StandardToken__success
[2020-11-24 23:46:11,961 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseApproval~address~uint256_StandardToken__fail
[2020-11-24 23:46:11,961 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseApproval~address~uint256_StandardToken__success
[2020-11-24 23:46:11,961 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseApproval~address~uint256_StandardToken__fail
[2020-11-24 23:46:11,961 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseApproval~address~uint256_StandardToken__success
[2020-11-24 23:46:11,962 INFO  L138     BoogieDeclarations]: Found implementation of procedure Pausable_Pausable_NoBaseCtor__fail
[2020-11-24 23:46:11,962 INFO  L138     BoogieDeclarations]: Found implementation of procedure Pausable_Pausable_NoBaseCtor__success
[2020-11-24 23:46:11,962 INFO  L138     BoogieDeclarations]: Found implementation of procedure Pausable_Pausable__fail
[2020-11-24 23:46:11,962 INFO  L138     BoogieDeclarations]: Found implementation of procedure Pausable_Pausable__success
[2020-11-24 23:46:11,962 INFO  L138     BoogieDeclarations]: Found implementation of procedure pause_Pausable__fail
[2020-11-24 23:46:11,962 INFO  L138     BoogieDeclarations]: Found implementation of procedure pause_Pausable__success
[2020-11-24 23:46:11,962 INFO  L138     BoogieDeclarations]: Found implementation of procedure unpause_Pausable__fail
[2020-11-24 23:46:11,962 INFO  L138     BoogieDeclarations]: Found implementation of procedure unpause_Pausable__success
[2020-11-24 23:46:11,962 INFO  L138     BoogieDeclarations]: Found implementation of procedure paused_Pausable__fail
[2020-11-24 23:46:11,962 INFO  L138     BoogieDeclarations]: Found implementation of procedure paused_Pausable__success
[2020-11-24 23:46:11,962 INFO  L138     BoogieDeclarations]: Found implementation of procedure UpgradedStandardToken_UpgradedStandardToken_NoBaseCtor__fail
[2020-11-24 23:46:11,963 INFO  L138     BoogieDeclarations]: Found implementation of procedure UpgradedStandardToken_UpgradedStandardToken_NoBaseCtor__success
[2020-11-24 23:46:11,963 INFO  L138     BoogieDeclarations]: Found implementation of procedure UpgradedStandardToken_UpgradedStandardToken__fail
[2020-11-24 23:46:11,963 INFO  L138     BoogieDeclarations]: Found implementation of procedure UpgradedStandardToken_UpgradedStandardToken__success
[2020-11-24 23:46:11,963 INFO  L138     BoogieDeclarations]: Found implementation of procedure BlackList_BlackList_NoBaseCtor__fail
[2020-11-24 23:46:11,963 INFO  L138     BoogieDeclarations]: Found implementation of procedure BlackList_BlackList_NoBaseCtor__success
[2020-11-24 23:46:11,963 INFO  L138     BoogieDeclarations]: Found implementation of procedure BlackList_BlackList__fail
[2020-11-24 23:46:11,963 INFO  L138     BoogieDeclarations]: Found implementation of procedure BlackList_BlackList__success
[2020-11-24 23:46:11,963 INFO  L138     BoogieDeclarations]: Found implementation of procedure getBlackListStatus~address_BlackList__fail
[2020-11-24 23:46:11,963 INFO  L138     BoogieDeclarations]: Found implementation of procedure getBlackListStatus~address_BlackList__success
[2020-11-24 23:46:11,963 INFO  L138     BoogieDeclarations]: Found implementation of procedure getOwner_BlackList__fail
[2020-11-24 23:46:11,963 INFO  L138     BoogieDeclarations]: Found implementation of procedure getOwner_BlackList__success
[2020-11-24 23:46:11,963 INFO  L138     BoogieDeclarations]: Found implementation of procedure addBlackList~address_BlackList__fail
[2020-11-24 23:46:11,964 INFO  L138     BoogieDeclarations]: Found implementation of procedure addBlackList~address_BlackList__success
[2020-11-24 23:46:11,964 INFO  L138     BoogieDeclarations]: Found implementation of procedure removeBlackList~address_BlackList__fail
[2020-11-24 23:46:11,964 INFO  L138     BoogieDeclarations]: Found implementation of procedure removeBlackList~address_BlackList__success
[2020-11-24 23:46:11,964 INFO  L138     BoogieDeclarations]: Found implementation of procedure destroyBlackFunds~address_BlackList__fail
[2020-11-24 23:46:11,964 INFO  L138     BoogieDeclarations]: Found implementation of procedure destroyBlackFunds~address_BlackList__success
[2020-11-24 23:46:11,964 INFO  L138     BoogieDeclarations]: Found implementation of procedure isBlackListed~address_BlackList__fail
[2020-11-24 23:46:11,964 INFO  L138     BoogieDeclarations]: Found implementation of procedure isBlackListed~address_BlackList__success
[2020-11-24 23:46:11,964 INFO  L138     BoogieDeclarations]: Found implementation of procedure AlitaToken_AlitaToken_NoBaseCtor__fail
[2020-11-24 23:46:11,964 INFO  L138     BoogieDeclarations]: Found implementation of procedure AlitaToken_AlitaToken_NoBaseCtor__success
[2020-11-24 23:46:11,964 INFO  L138     BoogieDeclarations]: Found implementation of procedure AlitaToken_AlitaToken__fail
[2020-11-24 23:46:11,964 INFO  L138     BoogieDeclarations]: Found implementation of procedure AlitaToken_AlitaToken__success
[2020-11-24 23:46:11,964 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_AlitaToken__fail
[2020-11-24 23:46:11,965 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_AlitaToken__success
[2020-11-24 23:46:11,965 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_AlitaToken__fail
[2020-11-24 23:46:11,965 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_AlitaToken__success
[2020-11-24 23:46:11,965 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_AlitaToken__fail
[2020-11-24 23:46:11,965 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_AlitaToken__success
[2020-11-24 23:46:11,965 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_AlitaToken__fail
[2020-11-24 23:46:11,965 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_AlitaToken__success
[2020-11-24 23:46:11,965 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseApproval~address~uint256_AlitaToken__fail
[2020-11-24 23:46:11,965 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseApproval~address~uint256_AlitaToken__success
[2020-11-24 23:46:11,965 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseApproval~address~uint256_AlitaToken__fail
[2020-11-24 23:46:11,965 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseApproval~address~uint256_AlitaToken__success
[2020-11-24 23:46:11,965 INFO  L138     BoogieDeclarations]: Found implementation of procedure deprecate~address_AlitaToken__fail
[2020-11-24 23:46:11,966 INFO  L138     BoogieDeclarations]: Found implementation of procedure deprecate~address_AlitaToken__success
[2020-11-24 23:46:11,966 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_AlitaToken__fail
[2020-11-24 23:46:11,966 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_AlitaToken__success
[2020-11-24 23:46:11,966 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_AlitaToken__fail
[2020-11-24 23:46:11,966 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_AlitaToken__success
[2020-11-24 23:46:11,966 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_AlitaToken__fail
[2020-11-24 23:46:11,966 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_AlitaToken__success
[2020-11-24 23:46:11,966 INFO  L138     BoogieDeclarations]: Found implementation of procedure init_Supply_AlitaToken__fail
[2020-11-24 23:46:11,966 INFO  L138     BoogieDeclarations]: Found implementation of procedure init_Supply_AlitaToken__success
[2020-11-24 23:46:11,966 INFO  L138     BoogieDeclarations]: Found implementation of procedure upgradedAddress_AlitaToken__fail
[2020-11-24 23:46:11,966 INFO  L138     BoogieDeclarations]: Found implementation of procedure upgradedAddress_AlitaToken__success
[2020-11-24 23:46:11,966 INFO  L138     BoogieDeclarations]: Found implementation of procedure deprecated_AlitaToken__fail
[2020-11-24 23:46:11,966 INFO  L138     BoogieDeclarations]: Found implementation of procedure deprecated_AlitaToken__success
[2020-11-24 23:46:11,967 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-24 23:46:11,967 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-24 23:46:11,967 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__fail
[2020-11-24 23:46:11,967 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__success
[2020-11-24 23:46:11,967 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-24 23:46:11,967 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__success
[2020-11-24 23:46:11,967 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256_SafeMath__fail
[2020-11-24 23:46:11,967 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256_SafeMath__success
[2020-11-24 23:46:11,967 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-24 23:46:11,967 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__success
[2020-11-24 23:46:11,967 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__fail
[2020-11-24 23:46:11,967 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__success
[2020-11-24 23:46:11,968 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-24 23:46:11,968 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-24 23:46:11,968 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-24 23:46:11,968 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-24 23:46:11,968 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-24 23:46:11,968 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-24 23:46:11,968 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__fail
[2020-11-24 23:46:11,968 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__success
[2020-11-24 23:46:11,968 INFO  L138     BoogieDeclarations]: Found implementation of procedure whenNotPaused_pre__fail
[2020-11-24 23:46:11,968 INFO  L138     BoogieDeclarations]: Found implementation of procedure whenNotPaused_pre__success
[2020-11-24 23:46:11,968 INFO  L138     BoogieDeclarations]: Found implementation of procedure whenPaused_pre__fail
[2020-11-24 23:46:11,968 INFO  L138     BoogieDeclarations]: Found implementation of procedure whenPaused_pre__success
[2020-11-24 23:46:11,968 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_Ownable
[2020-11-24 23:46:11,969 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_Ownable
[2020-11-24 23:46:11,969 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20Basic
[2020-11-24 23:46:11,969 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20Basic
[2020-11-24 23:46:11,969 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_BasicToken
[2020-11-24 23:46:11,969 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_BasicToken
[2020-11-24 23:46:11,969 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20
[2020-11-24 23:46:11,969 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20
[2020-11-24 23:46:11,969 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_StandardToken
[2020-11-24 23:46:11,969 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_StandardToken
[2020-11-24 23:46:11,969 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_Pausable
[2020-11-24 23:46:11,969 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_Pausable
[2020-11-24 23:46:11,970 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_UpgradedStandardToken
[2020-11-24 23:46:11,970 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_UpgradedStandardToken
[2020-11-24 23:46:11,970 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_BlackList
[2020-11-24 23:46:11,970 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_BlackList
[2020-11-24 23:46:11,970 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_AlitaToken
[2020-11-24 23:46:11,970 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-24 23:46:11,970 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_SafeMath
[2020-11-24 23:46:11,970 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_SafeMath
[2020-11-24 23:46:11,970 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-24 23:46:11,970 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-24 23:46:12,743 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 23:46:12,744 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 23:46:13,094 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-24 23:46:13,094 INFO  L286             CfgBuilder]: Removed 10 assue(true) statements.
[2020-11-24 23:46:13,098 INFO  L202        PluginConnector]: Adding new model AlitaToken_0x7f509e1a5114073adcab062ef26a199511926071_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 11:46:13 BoogieIcfgContainer
[2020-11-24 23:46:13,098 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 11:46:11" (2/2) ...
[2020-11-24 23:46:13,098 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-24 23:46:13,098 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@77dbbb0f and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 11:46:13, skipping insertion in model container
[2020-11-24 23:46:13,098 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-24 23:46:13,098 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-24 23:46:13,098 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-24 23:46:13,100 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-24 23:46:13,100 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "AlitaToken_0x7f509e1a5114073adcab062ef26a199511926071_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 11:46:11" (1/3) ...
[2020-11-24 23:46:13,100 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@c02368 and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 11:46:13, skipping insertion in model container
[2020-11-24 23:46:13,101 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 11:46:11" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-24 23:46:13,138 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 11:46:13 NWAContainer
[2020-11-24 23:46:13,138 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-24 23:46:13,138 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-24 23:46:13,138 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-24 23:46:13,139 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-24 23:46:13,139 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "AlitaToken_0x7f509e1a5114073adcab062ef26a199511926071_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 11:46:13" (3/4) ...
[2020-11-24 23:46:13,140 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@64f47d0 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 11:46:13, skipping insertion in model container
[2020-11-24 23:46:13,140 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 11:46:13" (4/4) ...
[2020-11-24 23:46:13,143 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-24 23:46:13,149 INFO  L110   BuchiProductObserver]: Initial RCFG 3163 locations, 4236 edges
[2020-11-24 23:46:13,149 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-24 23:46:13,162 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-24 23:46:15,554 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-24 23:46:15,563 INFO  L110   BuchiProductObserver]: BuchiProgram size 7754 locations, 13823 edges
[2020-11-24 23:46:15,564 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 11:46:15 BoogieIcfgContainer
[2020-11-24 23:46:15,564 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-24 23:46:15,564 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-24 23:46:15,564 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-24 23:46:15,565 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-24 23:46:15,566 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 11:46:15" (1/1) ...
[2020-11-24 23:46:15,706 INFO  L313           BlockEncoder]: Initial Icfg 7754 locations, 13823 edges
[2020-11-24 23:46:15,707 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-24 23:46:15,707 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-24 23:46:15,707 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-24 23:46:15,708 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-24 23:46:15,723 INFO  L70    emoveInfeasibleEdges]: Removed 162 edges and 24 locations because of local infeasibility
[2020-11-24 23:46:15,736 INFO  L70        RemoveSinkStates]: Removed 172 edges and 96 locations by removing sink states
[2020-11-24 23:46:15,750 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-24 23:46:15,755 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-24 23:46:15,759 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-24 23:46:15,759 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-24 23:46:15,763 INFO  L313           BlockEncoder]: Encoded RCFG 7592 locations, 13427 edges
[2020-11-24 23:46:15,764 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 24.11 11:46:15 BasicIcfg
[2020-11-24 23:46:15,764 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-24 23:46:15,764 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-24 23:46:15,764 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-24 23:46:15,766 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-24 23:46:15,766 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 23:46:15,766 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "AlitaToken_0x7f509e1a5114073adcab062ef26a199511926071_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 11:46:11" (1/6) ...
[2020-11-24 23:46:15,767 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@4eae26b9 and model type AlitaToken_0x7f509e1a5114073adcab062ef26a199511926071_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 24.11 11:46:15, skipping insertion in model container
[2020-11-24 23:46:15,767 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 23:46:15,768 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 11:46:11" (2/6) ...
[2020-11-24 23:46:15,768 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@4eae26b9 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 24.11 11:46:15, skipping insertion in model container
[2020-11-24 23:46:15,768 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 23:46:15,768 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "AlitaToken_0x7f509e1a5114073adcab062ef26a199511926071_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 11:46:13" (3/6) ...
[2020-11-24 23:46:15,768 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@4eae26b9 and model type AlitaToken_0x7f509e1a5114073adcab062ef26a199511926071_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 24.11 11:46:15, skipping insertion in model container
[2020-11-24 23:46:15,768 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 23:46:15,768 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 11:46:13" (4/6) ...
[2020-11-24 23:46:15,768 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@4eae26b9 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 24.11 11:46:15, skipping insertion in model container
[2020-11-24 23:46:15,768 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 23:46:15,768 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 11:46:15" (5/6) ...
[2020-11-24 23:46:15,769 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@4eae26b9 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 24.11 11:46:15, skipping insertion in model container
[2020-11-24 23:46:15,769 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 23:46:15,769 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 24.11 11:46:15" (6/6) ...
[2020-11-24 23:46:15,770 INFO  L404   chiAutomizerObserver]: Analyzing ICFG AlitaToken_0x7f509e1a5114073adcab062ef26a199511926071_transfer-fail.bpl_BEv2
[2020-11-24 23:46:15,795 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-24 23:46:15,795 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-24 23:46:15,795 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-24 23:46:15,795 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-24 23:46:15,795 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-24 23:46:15,795 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-24 23:46:15,795 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-24 23:46:15,796 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-24 23:46:15,796 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-24 23:46:15,844 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 7592 states.
[2020-11-24 23:46:15,898 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-24 23:46:15,898 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 23:46:15,898 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 23:46:15,905 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 23:46:15,905 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 23:46:15,905 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-24 23:46:15,905 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 7592 states.
[2020-11-24 23:46:15,930 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-24 23:46:15,930 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 23:46:15,930 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 23:46:15,932 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 23:46:15,932 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transfer_AlitaToken0 := false;
[L2]                 call_transfer_AlitaToken0 := false;
[L2]     CALL        call main();
[L8663]              assume null == 0;
[L8664]  CALL        call this := FreshRefGenerator__success();
[L3958]              havoc newRef;
[L3959]              assume Alloc[newRef] == false;
[L3960]              Alloc[newRef] := true;
[L3961]              assume newRef != null;
[L8664]  RET         call this := FreshRefGenerator__success();
[L8665]              assume now >= 0;
[L8666]              assume DType[this] == AlitaToken;
[L8667]              assume msgvalue_MSG == 0;
[L8668]              gas := gas - 53000;
[L8669]  CALL        call AlitaToken_AlitaToken(this, msgsender_MSG, msgvalue_MSG);
[L1981]              havoc __exception;
[L1982]              revert := false;
[L1983]  COND FALSE  !(__exception)
[L2012]  CALL        call AlitaToken_AlitaToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4942]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3994]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3977]              assume msgsender_MSG != null;
[L3978]              Balance[this] := 0;
[L3979]              owner_Ownable[this] := null;
[L3981]              owner_Ownable[this] := msgsender_MSG;
[L3994]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3995]  COND FALSE  !(revert)
[L4942]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4943]  COND TRUE   revert
[L2012]  RET         call AlitaToken_AlitaToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2013]              assume !revert && gas >= 0;
[L8669]  RET         call AlitaToken_AlitaToken(this, msgsender_MSG, msgvalue_MSG);
[L8670]              assume !revert && gas >= 0;

Loop:
[L8673]  CALL        call CorralChoice_AlitaToken(this);
[L8433]              havoc msgsender_MSG;
[L8434]              havoc msgvalue_MSG;
[L8435]              havoc choice;
[L8436]              havoc __ret_0_owner;
[L8437]              havoc newOwner_s42;
[L8438]              havoc __ret_0_totalSupply;
[L8439]              havoc _owner_s166;
[L8440]              havoc __ret_0_balanceOf;
[L8441]              havoc _to_s754;
[L8442]              havoc _value_s754;
[L8443]              havoc __ret_0_transfer;
[L8444]              havoc _owner_s885;
[L8445]              havoc _spender_s885;
[L8446]              havoc __ret_0_allowance;
[L8447]              havoc _from_s812;
[L8448]              havoc _to_s812;
[L8449]              havoc _value_s812;
[L8450]              havoc __ret_0_transferFrom;
[L8451]              havoc _spender_s857;
[L8452]              havoc _value_s857;
[L8453]              havoc __ret_0_approve;
[L8454]              havoc _spender_s913;
[L8455]              havoc _addedValue_s913;
[L8456]              havoc __ret_0_increaseApproval;
[L8457]              havoc _spender_s941;
[L8458]              havoc _subtractedValue_s941;
[L8459]              havoc __ret_0_decreaseApproval;
[L8460]              havoc __ret_0_paused;
[L8461]              havoc _maker_s564;
[L8462]              havoc __ret_0_getBlackListStatus;
[L8463]              havoc __ret_0_getOwner;
[L8464]              havoc arg1060_s0;
[L8465]              havoc __ret_0_isBlackListed;
[L8466]              havoc _evilUser_s594;
[L8467]              havoc _clearedUser_s612;
[L8468]              havoc _blackListedUser_s647;
[L8469]              havoc __ret_0_name;
[L8470]              havoc __ret_0_symbol;
[L8471]              havoc __ret_0_decimals;
[L8472]              havoc __ret_0_init_Supply;
[L8473]              havoc __ret_0_upgradedAddress;
[L8474]              havoc __ret_0_deprecated;
[L8475]              havoc _upgradedAddress_s961;
[L8476]              havoc tmpNow;
[L8477]              havoc gas;
[L8478]              assume gas > 4000000 && gas <= 8000000;
[L8479]              tmpNow := now;
[L8480]              havoc now;
[L8481]              assume now > tmpNow;
[L8482]              assume msgsender_MSG != null;
[L8483]              assume DType[msgsender_MSG] != Ownable;
[L8484]              assume DType[msgsender_MSG] != ERC20Basic;
[L8485]              assume DType[msgsender_MSG] != BasicToken;
[L8486]              assume DType[msgsender_MSG] != ERC20;
[L8487]              assume DType[msgsender_MSG] != StandardToken;
[L8488]              assume DType[msgsender_MSG] != Pausable;
[L8489]              assume DType[msgsender_MSG] != UpgradedStandardToken;
[L8490]              assume DType[msgsender_MSG] != BlackList;
[L8491]              assume DType[msgsender_MSG] != AlitaToken;
[L8492]              assume DType[msgsender_MSG] != SafeMath;
[L8493]              Alloc[msgsender_MSG] := true;
[L8494]  COND TRUE   choice == 26
[L8495]              gas := gas - 21000;
[L8496]  COND FALSE  !(gas >= 0)
[L8673]  RET         call CorralChoice_AlitaToken(this);

[2020-11-24 23:46:15,947 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 23:46:15,947 INFO  L82        PathProgramCache]: Analyzing trace with hash 1338811453, now seen corresponding path program 1 times
[2020-11-24 23:46:15,953 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 23:46:15,978 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 23:46:16,018 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 23:46:16,020 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 23:46:16,020 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-24 23:46:16,387 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 23:46:16,395 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-24 23:46:16,395 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-24 23:46:16,397 INFO  L87              Difference]: Start difference. First operand 7592 states. Second operand 4 states.
[2020-11-24 23:46:17,636 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 23:46:17,636 INFO  L93              Difference]: Finished difference Result 5646 states and 8876 transitions.
[2020-11-24 23:46:17,636 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-24 23:46:17,637 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 5646 states and 8876 transitions.
[2020-11-24 23:46:17,686 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-24 23:46:17,727 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 5646 states to 5458 states and 8569 transitions.
[2020-11-24 23:46:17,728 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 13
[2020-11-24 23:46:17,732 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 1624
[2020-11-24 23:46:17,733 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 5458 states and 8569 transitions.
[2020-11-24 23:46:17,752 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 23:46:17,752 INFO  L728         BuchiCegarLoop]: Abstraction has 5458 states and 8569 transitions.
[2020-11-24 23:46:17,772 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 5458 states and 8569 transitions.
[2020-11-24 23:46:17,853 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 5458 to 4780.
[2020-11-24 23:46:17,854 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 4780 states.
[2020-11-24 23:46:17,862 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 4780 states to 4780 states and 7331 transitions.
[2020-11-24 23:46:17,862 INFO  L751         BuchiCegarLoop]: Abstraction has 4780 states and 7331 transitions.
[2020-11-24 23:46:17,862 INFO  L631         BuchiCegarLoop]: Abstraction has 4780 states and 7331 transitions.
[2020-11-24 23:46:17,863 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-24 23:46:17,863 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 4780 states and 7331 transitions.
[2020-11-24 23:46:17,874 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-24 23:46:17,874 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 23:46:17,874 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 23:46:17,877 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [8, 8, 8, 8, 8, 8, 8, 8, 8, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 23:46:17,877 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transfer_AlitaToken0 := false;
[L2]                 call_transfer_AlitaToken0 := false;
[L2]     CALL        call main();
[L8663]              assume null == 0;
[L8664]  CALL        call this := FreshRefGenerator__success();
[L3958]              havoc newRef;
[L3959]              assume Alloc[newRef] == false;
[L3960]              Alloc[newRef] := true;
[L3961]              assume newRef != null;
[L8664]  RET         call this := FreshRefGenerator__success();
[L8665]              assume now >= 0;
[L8666]              assume DType[this] == AlitaToken;
[L8667]              assume msgvalue_MSG == 0;
[L8668]              gas := gas - 53000;
[L8669]  CALL        call AlitaToken_AlitaToken(this, msgsender_MSG, msgvalue_MSG);
[L1981]              havoc __exception;
[L1982]              revert := false;
[L1983]  COND FALSE  !(__exception)
[L2012]  CALL        call AlitaToken_AlitaToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4942]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3994]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3977]              assume msgsender_MSG != null;
[L3978]              Balance[this] := 0;
[L3979]              owner_Ownable[this] := null;
[L3981]              owner_Ownable[this] := msgsender_MSG;
[L3994]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3995]  COND FALSE  !(revert)
[L4942]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4943]  COND FALSE  !(revert)
[L4946]  CALL        call Pausable_Pausable__success(this, msgsender_MSG, msgvalue_MSG);
[L4531]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3994]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3977]              assume msgsender_MSG != null;
[L3978]              Balance[this] := 0;
[L3979]              owner_Ownable[this] := null;
[L3981]              owner_Ownable[this] := msgsender_MSG;
[L3994]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3995]  COND FALSE  !(revert)
[L4531]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4532]  COND FALSE  !(revert)
[L4535]  CALL        call Pausable_Pausable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4511]              assume msgsender_MSG != null;
[L4512]              Balance[this] := 0;
[L4513]              paused_Pausable[this] := false;
[L4535]  RET         call Pausable_Pausable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4536]  COND FALSE  !(revert)
[L4946]  RET         call Pausable_Pausable__success(this, msgsender_MSG, msgvalue_MSG);
[L4947]  COND FALSE  !(revert)
[L4950]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4064]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4049]              assume msgsender_MSG != null;
[L4050]              Balance[this] := 0;
[L4064]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  COND FALSE  !(revert)
[L4950]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4951]  COND FALSE  !(revert)
[L4954]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4235]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4064]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4049]              assume msgsender_MSG != null;
[L4050]              Balance[this] := 0;
[L4064]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  COND FALSE  !(revert)
[L4235]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4236]  COND FALSE  !(revert)
[L4239]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4216]              assume msgsender_MSG != null;
[L4217]              Balance[this] := 0;
[L4239]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4240]  COND FALSE  !(revert)
[L4954]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4955]  COND FALSE  !(revert)
[L4958]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4106]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4064]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4049]              assume msgsender_MSG != null;
[L4050]              Balance[this] := 0;
[L4064]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  COND FALSE  !(revert)
[L4106]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4107]  COND FALSE  !(revert)
[L4110]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4084]              assume msgsender_MSG != null;
[L4085]              Balance[this] := 0;
[L4086]              balances_BasicToken[this] := zeroRefintArr();
[L4087]              sum_balances0[this] := 0;
[L4088]              totalSupply__BasicToken[this] := 0;
[L4110]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4111]  COND FALSE  !(revert)
[L4958]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4959]  COND FALSE  !(revert)
[L4962]  CALL        call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4287]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4064]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4049]              assume msgsender_MSG != null;
[L4050]              Balance[this] := 0;
[L4064]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  COND FALSE  !(revert)
[L4287]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4288]  COND FALSE  !(revert)
[L4291]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4235]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4064]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4049]              assume msgsender_MSG != null;
[L4050]              Balance[this] := 0;
[L4064]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  COND FALSE  !(revert)
[L4235]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4236]  COND FALSE  !(revert)
[L4239]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4216]              assume msgsender_MSG != null;
[L4217]              Balance[this] := 0;
[L4239]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4240]  COND FALSE  !(revert)
[L4291]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4292]  COND FALSE  !(revert)
[L4295]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4106]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4064]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4049]              assume msgsender_MSG != null;
[L4050]              Balance[this] := 0;
[L4064]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  COND FALSE  !(revert)
[L4106]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4107]  COND FALSE  !(revert)
[L4110]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4084]              assume msgsender_MSG != null;
[L4085]              Balance[this] := 0;
[L4086]              balances_BasicToken[this] := zeroRefintArr();
[L4087]              sum_balances0[this] := 0;
[L4088]              totalSupply__BasicToken[this] := 0;
[L4110]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4111]  COND FALSE  !(revert)
[L4295]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4296]  COND FALSE  !(revert)
[L4299]  CALL        call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4258]              assume msgsender_MSG != null;
[L4259]              Balance[this] := 0;
[L4260]              allowed_StandardToken[this] := zeroRefRefintArr();
[L4261]              sum_allowed1[this] := 0;
[L4299]  RET         call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4300]  COND FALSE  !(revert)
[L4962]  RET         call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4963]  COND FALSE  !(revert)
[L4966]  CALL        call BlackList_BlackList__success(this, msgsender_MSG, msgvalue_MSG);
[L4711]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3994]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3977]              assume msgsender_MSG != null;
[L3978]              Balance[this] := 0;
[L3979]              owner_Ownable[this] := null;
[L3981]              owner_Ownable[this] := msgsender_MSG;
[L3994]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3995]  COND FALSE  !(revert)
[L4711]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4712]  COND FALSE  !(revert)
[L4715]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4064]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4049]              assume msgsender_MSG != null;
[L4050]              Balance[this] := 0;
[L4064]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  COND FALSE  !(revert)
[L4715]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4716]  COND FALSE  !(revert)
[L4719]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4106]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4064]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4049]              assume msgsender_MSG != null;
[L4050]              Balance[this] := 0;
[L4064]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  COND FALSE  !(revert)
[L4106]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4107]  COND FALSE  !(revert)
[L4110]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4084]              assume msgsender_MSG != null;
[L4085]              Balance[this] := 0;
[L4086]              balances_BasicToken[this] := zeroRefintArr();
[L4087]              sum_balances0[this] := 0;
[L4088]              totalSupply__BasicToken[this] := 0;
[L4110]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4111]  COND FALSE  !(revert)
[L4719]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4720]  COND FALSE  !(revert)
[L4723]  CALL        call BlackList_BlackList_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4683]              assume msgsender_MSG != null;
[L4684]              Balance[this] := 0;
[L4685]              isBlackListed_BlackList[this] := zeroRefboolArr();
[L4723]  RET         call BlackList_BlackList_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4724]  COND FALSE  !(revert)
[L4966]  RET         call BlackList_BlackList__success(this, msgsender_MSG, msgvalue_MSG);
[L4967]  COND FALSE  !(revert)
[L4970]  CALL        call AlitaToken_AlitaToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4888]              assume msgsender_MSG != null;
[L4889]              Balance[this] := 0;
[L4890]              name_AlitaToken[this] := -1110093910;
[L4891]              symbol_AlitaToken[this] := 1234648092;
[L4892]              decimals_AlitaToken[this] := 18;
[L4893]              init_Supply_AlitaToken[this] := 1000000000 * (1000000000000000000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L4894]              upgradedAddress_AlitaToken[this] := null;
[L4895]              deprecated_AlitaToken[this] := false;
[L4897]              totalSupply__BasicToken[this] := init_Supply_AlitaToken[this];
[L4898]              sum_balances0[this] := sum_balances0[this] - balances_BasicToken[this][msgsender_MSG];
[L4899]              balances_BasicToken[this][msgsender_MSG] := totalSupply__BasicToken[this];
[L4900]              sum_balances0[this] := sum_balances0[this] + balances_BasicToken[this][msgsender_MSG];
[L4901]              deprecated_AlitaToken[this] := false;
[L4970]  RET         call AlitaToken_AlitaToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4971]  COND FALSE  !(revert)
[L2012]  RET         call AlitaToken_AlitaToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2013]              assume !revert && gas >= 0;
[L8669]  RET         call AlitaToken_AlitaToken(this, msgsender_MSG, msgvalue_MSG);
[L8670]              assume !revert && gas >= 0;

Loop:
[L8673]  CALL        call CorralChoice_AlitaToken(this);
[L8433]              havoc msgsender_MSG;
[L8434]              havoc msgvalue_MSG;
[L8435]              havoc choice;
[L8436]              havoc __ret_0_owner;
[L8437]              havoc newOwner_s42;
[L8438]              havoc __ret_0_totalSupply;
[L8439]              havoc _owner_s166;
[L8440]              havoc __ret_0_balanceOf;
[L8441]              havoc _to_s754;
[L8442]              havoc _value_s754;
[L8443]              havoc __ret_0_transfer;
[L8444]              havoc _owner_s885;
[L8445]              havoc _spender_s885;
[L8446]              havoc __ret_0_allowance;
[L8447]              havoc _from_s812;
[L8448]              havoc _to_s812;
[L8449]              havoc _value_s812;
[L8450]              havoc __ret_0_transferFrom;
[L8451]              havoc _spender_s857;
[L8452]              havoc _value_s857;
[L8453]              havoc __ret_0_approve;
[L8454]              havoc _spender_s913;
[L8455]              havoc _addedValue_s913;
[L8456]              havoc __ret_0_increaseApproval;
[L8457]              havoc _spender_s941;
[L8458]              havoc _subtractedValue_s941;
[L8459]              havoc __ret_0_decreaseApproval;
[L8460]              havoc __ret_0_paused;
[L8461]              havoc _maker_s564;
[L8462]              havoc __ret_0_getBlackListStatus;
[L8463]              havoc __ret_0_getOwner;
[L8464]              havoc arg1060_s0;
[L8465]              havoc __ret_0_isBlackListed;
[L8466]              havoc _evilUser_s594;
[L8467]              havoc _clearedUser_s612;
[L8468]              havoc _blackListedUser_s647;
[L8469]              havoc __ret_0_name;
[L8470]              havoc __ret_0_symbol;
[L8471]              havoc __ret_0_decimals;
[L8472]              havoc __ret_0_init_Supply;
[L8473]              havoc __ret_0_upgradedAddress;
[L8474]              havoc __ret_0_deprecated;
[L8475]              havoc _upgradedAddress_s961;
[L8476]              havoc tmpNow;
[L8477]              havoc gas;
[L8478]              assume gas > 4000000 && gas <= 8000000;
[L8479]              tmpNow := now;
[L8480]              havoc now;
[L8481]              assume now > tmpNow;
[L8482]              assume msgsender_MSG != null;
[L8483]              assume DType[msgsender_MSG] != Ownable;
[L8484]              assume DType[msgsender_MSG] != ERC20Basic;
[L8485]              assume DType[msgsender_MSG] != BasicToken;
[L8486]              assume DType[msgsender_MSG] != ERC20;
[L8487]              assume DType[msgsender_MSG] != StandardToken;
[L8488]              assume DType[msgsender_MSG] != Pausable;
[L8489]              assume DType[msgsender_MSG] != UpgradedStandardToken;
[L8490]              assume DType[msgsender_MSG] != BlackList;
[L8491]              assume DType[msgsender_MSG] != AlitaToken;
[L8492]              assume DType[msgsender_MSG] != SafeMath;
[L8493]              Alloc[msgsender_MSG] := true;
[L8494]  COND TRUE   choice == 26
[L8495]              gas := gas - 21000;
[L8496]  COND FALSE  !(gas >= 0)
[L8673]  RET         call CorralChoice_AlitaToken(this);

[2020-11-24 23:46:17,883 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 23:46:17,883 INFO  L82        PathProgramCache]: Analyzing trace with hash -674540979, now seen corresponding path program 1 times
[2020-11-24 23:46:17,884 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 23:46:17,901 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 23:46:17,956 INFO  L134       CoverageAnalysis]: Checked inductivity of 357 backedges. 0 proven. 1 refuted. 0 times theorem prover too weak. 356 trivial. 0 not checked.
[2020-11-24 23:46:17,956 INFO  L312   seRefinementStrategy]: Constructing automaton from 0 perfect and 1 imperfect interpolant sequences.
[2020-11-24 23:46:17,957 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [] imperfect sequences [4] total 4
[2020-11-24 23:46:17,958 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 23:46:17,958 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-24 23:46:17,958 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-24 23:46:17,958 INFO  L87              Difference]: Start difference. First operand 4780 states and 7331 transitions. cyclomatic complexity: 2561 Second operand 4 states.
[2020-11-24 23:46:18,823 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 23:46:18,823 INFO  L93              Difference]: Finished difference Result 4263 states and 4630 transitions.
[2020-11-24 23:46:18,823 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-24 23:46:18,824 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 4263 states and 4630 transitions.
[2020-11-24 23:46:18,836 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-24 23:46:18,851 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 4263 states to 4263 states and 4630 transitions.
[2020-11-24 23:46:18,852 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 1286
[2020-11-24 23:46:18,852 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 1296
[2020-11-24 23:46:18,853 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 4263 states and 4630 transitions.
[2020-11-24 23:46:18,856 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 23:46:18,856 INFO  L728         BuchiCegarLoop]: Abstraction has 4263 states and 4630 transitions.
[2020-11-24 23:46:18,861 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 4263 states and 4630 transitions.
[2020-11-24 23:46:18,889 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 4263 to 4253.
[2020-11-24 23:46:18,889 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 4253 states.
[2020-11-24 23:46:18,894 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 4253 states to 4253 states and 4620 transitions.
[2020-11-24 23:46:18,894 INFO  L751         BuchiCegarLoop]: Abstraction has 4253 states and 4620 transitions.
[2020-11-24 23:46:18,894 INFO  L631         BuchiCegarLoop]: Abstraction has 4253 states and 4620 transitions.
[2020-11-24 23:46:18,894 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-24 23:46:18,894 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 4253 states and 4620 transitions.
[2020-11-24 23:46:18,924 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-24 23:46:18,924 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 23:46:18,924 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 23:46:18,929 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [8, 8, 8, 8, 8, 8, 8, 8, 8, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 23:46:18,929 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transfer_AlitaToken0 := false;
[L2]                 call_transfer_AlitaToken0 := false;
[L2]     CALL        call main();
[L8663]              assume null == 0;
[L8664]  CALL        call this := FreshRefGenerator__success();
[L3958]              havoc newRef;
[L3959]              assume Alloc[newRef] == false;
[L3960]              Alloc[newRef] := true;
[L3961]              assume newRef != null;
[L8664]  RET         call this := FreshRefGenerator__success();
[L8665]              assume now >= 0;
[L8666]              assume DType[this] == AlitaToken;
[L8667]              assume msgvalue_MSG == 0;
[L8668]              gas := gas - 53000;
[L8669]  CALL        call AlitaToken_AlitaToken(this, msgsender_MSG, msgvalue_MSG);
[L1981]              havoc __exception;
[L1982]              revert := false;
[L1983]  COND FALSE  !(__exception)
[L2012]  CALL        call AlitaToken_AlitaToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4942]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3994]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3977]              assume msgsender_MSG != null;
[L3978]              Balance[this] := 0;
[L3979]              owner_Ownable[this] := null;
[L3981]              owner_Ownable[this] := msgsender_MSG;
[L3994]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3995]  COND FALSE  !(revert)
[L4942]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4943]  COND FALSE  !(revert)
[L4946]  CALL        call Pausable_Pausable__success(this, msgsender_MSG, msgvalue_MSG);
[L4531]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3994]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3977]              assume msgsender_MSG != null;
[L3978]              Balance[this] := 0;
[L3979]              owner_Ownable[this] := null;
[L3981]              owner_Ownable[this] := msgsender_MSG;
[L3994]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3995]  COND FALSE  !(revert)
[L4531]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4532]  COND FALSE  !(revert)
[L4535]  CALL        call Pausable_Pausable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4511]              assume msgsender_MSG != null;
[L4512]              Balance[this] := 0;
[L4513]              paused_Pausable[this] := false;
[L4535]  RET         call Pausable_Pausable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4536]  COND FALSE  !(revert)
[L4946]  RET         call Pausable_Pausable__success(this, msgsender_MSG, msgvalue_MSG);
[L4947]  COND FALSE  !(revert)
[L4950]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4064]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4049]              assume msgsender_MSG != null;
[L4050]              Balance[this] := 0;
[L4064]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  COND FALSE  !(revert)
[L4950]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4951]  COND FALSE  !(revert)
[L4954]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4235]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4064]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4049]              assume msgsender_MSG != null;
[L4050]              Balance[this] := 0;
[L4064]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  COND FALSE  !(revert)
[L4235]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4236]  COND FALSE  !(revert)
[L4239]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4216]              assume msgsender_MSG != null;
[L4217]              Balance[this] := 0;
[L4239]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4240]  COND FALSE  !(revert)
[L4954]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4955]  COND FALSE  !(revert)
[L4958]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4106]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4064]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4049]              assume msgsender_MSG != null;
[L4050]              Balance[this] := 0;
[L4064]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  COND FALSE  !(revert)
[L4106]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4107]  COND FALSE  !(revert)
[L4110]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4084]              assume msgsender_MSG != null;
[L4085]              Balance[this] := 0;
[L4086]              balances_BasicToken[this] := zeroRefintArr();
[L4087]              sum_balances0[this] := 0;
[L4088]              totalSupply__BasicToken[this] := 0;
[L4110]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4111]  COND FALSE  !(revert)
[L4958]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4959]  COND FALSE  !(revert)
[L4962]  CALL        call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4287]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4064]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4049]              assume msgsender_MSG != null;
[L4050]              Balance[this] := 0;
[L4064]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  COND FALSE  !(revert)
[L4287]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4288]  COND FALSE  !(revert)
[L4291]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4235]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4064]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4049]              assume msgsender_MSG != null;
[L4050]              Balance[this] := 0;
[L4064]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  COND FALSE  !(revert)
[L4235]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4236]  COND FALSE  !(revert)
[L4239]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4216]              assume msgsender_MSG != null;
[L4217]              Balance[this] := 0;
[L4239]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4240]  COND FALSE  !(revert)
[L4291]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4292]  COND FALSE  !(revert)
[L4295]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4106]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4064]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4049]              assume msgsender_MSG != null;
[L4050]              Balance[this] := 0;
[L4064]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  COND FALSE  !(revert)
[L4106]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4107]  COND FALSE  !(revert)
[L4110]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4084]              assume msgsender_MSG != null;
[L4085]              Balance[this] := 0;
[L4086]              balances_BasicToken[this] := zeroRefintArr();
[L4087]              sum_balances0[this] := 0;
[L4088]              totalSupply__BasicToken[this] := 0;
[L4110]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4111]  COND FALSE  !(revert)
[L4295]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4296]  COND FALSE  !(revert)
[L4299]  CALL        call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4258]              assume msgsender_MSG != null;
[L4259]              Balance[this] := 0;
[L4260]              allowed_StandardToken[this] := zeroRefRefintArr();
[L4261]              sum_allowed1[this] := 0;
[L4299]  RET         call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4300]  COND FALSE  !(revert)
[L4962]  RET         call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4963]  COND FALSE  !(revert)
[L4966]  CALL        call BlackList_BlackList__success(this, msgsender_MSG, msgvalue_MSG);
[L4711]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3994]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3977]              assume msgsender_MSG != null;
[L3978]              Balance[this] := 0;
[L3979]              owner_Ownable[this] := null;
[L3981]              owner_Ownable[this] := msgsender_MSG;
[L3994]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3995]  COND FALSE  !(revert)
[L4711]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4712]  COND FALSE  !(revert)
[L4715]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4064]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4049]              assume msgsender_MSG != null;
[L4050]              Balance[this] := 0;
[L4064]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  COND FALSE  !(revert)
[L4715]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4716]  COND FALSE  !(revert)
[L4719]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4106]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4064]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4049]              assume msgsender_MSG != null;
[L4050]              Balance[this] := 0;
[L4064]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  COND FALSE  !(revert)
[L4106]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4107]  COND FALSE  !(revert)
[L4110]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4084]              assume msgsender_MSG != null;
[L4085]              Balance[this] := 0;
[L4086]              balances_BasicToken[this] := zeroRefintArr();
[L4087]              sum_balances0[this] := 0;
[L4088]              totalSupply__BasicToken[this] := 0;
[L4110]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4111]  COND FALSE  !(revert)
[L4719]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4720]  COND FALSE  !(revert)
[L4723]  CALL        call BlackList_BlackList_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4683]              assume msgsender_MSG != null;
[L4684]              Balance[this] := 0;
[L4685]              isBlackListed_BlackList[this] := zeroRefboolArr();
[L4723]  RET         call BlackList_BlackList_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4724]  COND FALSE  !(revert)
[L4966]  RET         call BlackList_BlackList__success(this, msgsender_MSG, msgvalue_MSG);
[L4967]  COND FALSE  !(revert)
[L4970]  CALL        call AlitaToken_AlitaToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4888]              assume msgsender_MSG != null;
[L4889]              Balance[this] := 0;
[L4890]              name_AlitaToken[this] := -1110093910;
[L4891]              symbol_AlitaToken[this] := 1234648092;
[L4892]              decimals_AlitaToken[this] := 18;
[L4893]              init_Supply_AlitaToken[this] := 1000000000 * (1000000000000000000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L4894]              upgradedAddress_AlitaToken[this] := null;
[L4895]              deprecated_AlitaToken[this] := false;
[L4897]              totalSupply__BasicToken[this] := init_Supply_AlitaToken[this];
[L4898]              sum_balances0[this] := sum_balances0[this] - balances_BasicToken[this][msgsender_MSG];
[L4899]              balances_BasicToken[this][msgsender_MSG] := totalSupply__BasicToken[this];
[L4900]              sum_balances0[this] := sum_balances0[this] + balances_BasicToken[this][msgsender_MSG];
[L4901]              deprecated_AlitaToken[this] := false;
[L4970]  RET         call AlitaToken_AlitaToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4971]  COND FALSE  !(revert)
[L2012]  RET         call AlitaToken_AlitaToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2013]              assume !revert && gas >= 0;
[L8669]  RET         call AlitaToken_AlitaToken(this, msgsender_MSG, msgvalue_MSG);
[L8670]              assume !revert && gas >= 0;
[L8673]  CALL        call CorralChoice_AlitaToken(this);
[L8433]              havoc msgsender_MSG;
[L8434]              havoc msgvalue_MSG;
[L8435]              havoc choice;
[L8436]              havoc __ret_0_owner;
[L8437]              havoc newOwner_s42;
[L8438]              havoc __ret_0_totalSupply;
[L8439]              havoc _owner_s166;
[L8440]              havoc __ret_0_balanceOf;
[L8441]              havoc _to_s754;
[L8442]              havoc _value_s754;
[L8443]              havoc __ret_0_transfer;
[L8444]              havoc _owner_s885;
[L8445]              havoc _spender_s885;
[L8446]              havoc __ret_0_allowance;
[L8447]              havoc _from_s812;
[L8448]              havoc _to_s812;
[L8449]              havoc _value_s812;
[L8450]              havoc __ret_0_transferFrom;
[L8451]              havoc _spender_s857;
[L8452]              havoc _value_s857;
[L8453]              havoc __ret_0_approve;
[L8454]              havoc _spender_s913;
[L8455]              havoc _addedValue_s913;
[L8456]              havoc __ret_0_increaseApproval;
[L8457]              havoc _spender_s941;
[L8458]              havoc _subtractedValue_s941;
[L8459]              havoc __ret_0_decreaseApproval;
[L8460]              havoc __ret_0_paused;
[L8461]              havoc _maker_s564;
[L8462]              havoc __ret_0_getBlackListStatus;
[L8463]              havoc __ret_0_getOwner;
[L8464]              havoc arg1060_s0;
[L8465]              havoc __ret_0_isBlackListed;
[L8466]              havoc _evilUser_s594;
[L8467]              havoc _clearedUser_s612;
[L8468]              havoc _blackListedUser_s647;
[L8469]              havoc __ret_0_name;
[L8470]              havoc __ret_0_symbol;
[L8471]              havoc __ret_0_decimals;
[L8472]              havoc __ret_0_init_Supply;
[L8473]              havoc __ret_0_upgradedAddress;
[L8474]              havoc __ret_0_deprecated;
[L8475]              havoc _upgradedAddress_s961;
[L8476]              havoc tmpNow;
[L8477]              havoc gas;
[L8478]              assume gas > 4000000 && gas <= 8000000;
[L8479]              tmpNow := now;
[L8480]              havoc now;
[L8481]              assume now > tmpNow;
[L8482]              assume msgsender_MSG != null;
[L8483]              assume DType[msgsender_MSG] != Ownable;
[L8484]              assume DType[msgsender_MSG] != ERC20Basic;
[L8485]              assume DType[msgsender_MSG] != BasicToken;
[L8486]              assume DType[msgsender_MSG] != ERC20;
[L8487]              assume DType[msgsender_MSG] != StandardToken;
[L8488]              assume DType[msgsender_MSG] != Pausable;
[L8489]              assume DType[msgsender_MSG] != UpgradedStandardToken;
[L8490]              assume DType[msgsender_MSG] != BlackList;
[L8491]              assume DType[msgsender_MSG] != AlitaToken;
[L8492]              assume DType[msgsender_MSG] != SafeMath;
[L8493]              Alloc[msgsender_MSG] := true;
[L8494]  COND FALSE  !(choice == 26)
[L8500]  COND FALSE  !(choice == 25)
[L8506]  COND FALSE  !(choice == 24)
[L8512]  COND FALSE  !(choice == 23)
[L8518]  COND TRUE   choice == 22
[L8519]              gas := gas - 21000;
[L8520]  COND TRUE   gas >= 0
[L8521]              assume _value_s754 >= 0 && _value_s754 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L8522]              assume msgvalue_MSG == 0;
[L8523]  CALL        call __ret_0_transfer := transfer~address~uint256_AlitaToken(this, msgsender_MSG, msgvalue_MSG, _to_s754, _value_s754);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG != _to_s754 && (_value_s754 > balances_BasicToken[this][msgsender_MSG] || balances_BasicToken[this][_to_s754] + _value_s754 >= 115792089237316195423570985008687907853269984665640564039457584007913129639936)) && _value_s754 >= 0) && _value_s754 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BasicToken[this][_to_s754] >= 0) && balances_BasicToken[this][_to_s754] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BasicToken[this][msgsender_MSG] >= 0) && balances_BasicToken[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_AlitaToken0 := true;
[L2]                 call_transfer_AlitaToken0 := false;
[L2]                 revert := revert_hold;
[L2049]              havoc __exception;
[L2050]              revert := false;
[L2051]  COND FALSE  !(__exception)
[L2080]  CALL        call __ret_0_ := transfer~address~uint256_AlitaToken__success(this, msgsender_MSG, msgvalue_MSG, _to_s754, _value_s754);
[L5022]  CALL        call whenNotPaused_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L7448]  COND FALSE  !(!!paused_Pausable[this])
[L5022]  RET         call whenNotPaused_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L5023]  COND FALSE  !(revert)
[L5026]  COND FALSE  !(!!isBlackListed_BlackList[this][msgsender_MSG])
[L5030]  COND FALSE  !(!!isBlackListed_BlackList[this][_to_s754])
[L5034]  COND TRUE   deprecated_AlitaToken[this]
[L5035]              assume DType[upgradedAddress_AlitaToken[this]] == UpgradedStandardToken;
[L5036]              __var_12 := upgradedAddress_AlitaToken[this];
[L5038]              __ret_0_ := __var_11;
[L2080]  RET         call __ret_0_ := transfer~address~uint256_AlitaToken__success(this, msgsender_MSG, msgvalue_MSG, _to_s754, _value_s754);
[L2081]              assume !revert && gas >= 0;
[L8523]  RET         call __ret_0_transfer := transfer~address~uint256_AlitaToken(this, msgsender_MSG, msgvalue_MSG, _to_s754, _value_s754);
[L8673]  RET         call CorralChoice_AlitaToken(this);

Loop:
[L8673]  CALL        call CorralChoice_AlitaToken(this);
[L8433]              havoc msgsender_MSG;
[L8434]              havoc msgvalue_MSG;
[L8435]              havoc choice;
[L8436]              havoc __ret_0_owner;
[L8437]              havoc newOwner_s42;
[L8438]              havoc __ret_0_totalSupply;
[L8439]              havoc _owner_s166;
[L8440]              havoc __ret_0_balanceOf;
[L8441]              havoc _to_s754;
[L8442]              havoc _value_s754;
[L8443]              havoc __ret_0_transfer;
[L8444]              havoc _owner_s885;
[L8445]              havoc _spender_s885;
[L8446]              havoc __ret_0_allowance;
[L8447]              havoc _from_s812;
[L8448]              havoc _to_s812;
[L8449]              havoc _value_s812;
[L8450]              havoc __ret_0_transferFrom;
[L8451]              havoc _spender_s857;
[L8452]              havoc _value_s857;
[L8453]              havoc __ret_0_approve;
[L8454]              havoc _spender_s913;
[L8455]              havoc _addedValue_s913;
[L8456]              havoc __ret_0_increaseApproval;
[L8457]              havoc _spender_s941;
[L8458]              havoc _subtractedValue_s941;
[L8459]              havoc __ret_0_decreaseApproval;
[L8460]              havoc __ret_0_paused;
[L8461]              havoc _maker_s564;
[L8462]              havoc __ret_0_getBlackListStatus;
[L8463]              havoc __ret_0_getOwner;
[L8464]              havoc arg1060_s0;
[L8465]              havoc __ret_0_isBlackListed;
[L8466]              havoc _evilUser_s594;
[L8467]              havoc _clearedUser_s612;
[L8468]              havoc _blackListedUser_s647;
[L8469]              havoc __ret_0_name;
[L8470]              havoc __ret_0_symbol;
[L8471]              havoc __ret_0_decimals;
[L8472]              havoc __ret_0_init_Supply;
[L8473]              havoc __ret_0_upgradedAddress;
[L8474]              havoc __ret_0_deprecated;
[L8475]              havoc _upgradedAddress_s961;
[L8476]              havoc tmpNow;
[L8477]              havoc gas;
[L8478]              assume gas > 4000000 && gas <= 8000000;
[L8479]              tmpNow := now;
[L8480]              havoc now;
[L8481]              assume now > tmpNow;
[L8482]              assume msgsender_MSG != null;
[L8483]              assume DType[msgsender_MSG] != Ownable;
[L8484]              assume DType[msgsender_MSG] != ERC20Basic;
[L8485]              assume DType[msgsender_MSG] != BasicToken;
[L8486]              assume DType[msgsender_MSG] != ERC20;
[L8487]              assume DType[msgsender_MSG] != StandardToken;
[L8488]              assume DType[msgsender_MSG] != Pausable;
[L8489]              assume DType[msgsender_MSG] != UpgradedStandardToken;
[L8490]              assume DType[msgsender_MSG] != BlackList;
[L8491]              assume DType[msgsender_MSG] != AlitaToken;
[L8492]              assume DType[msgsender_MSG] != SafeMath;
[L8493]              Alloc[msgsender_MSG] := true;
[L8494]  COND FALSE  !(choice == 26)
[L8500]  COND FALSE  !(choice == 25)
[L8506]  COND FALSE  !(choice == 24)
[L8512]  COND FALSE  !(choice == 23)
[L8518]  COND TRUE   choice == 22
[L8519]              gas := gas - 21000;
[L8520]  COND TRUE   gas >= 0
[L8521]              assume _value_s754 >= 0 && _value_s754 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L8522]              assume msgvalue_MSG == 0;
[L8523]  CALL        call __ret_0_transfer := transfer~address~uint256_AlitaToken(this, msgsender_MSG, msgvalue_MSG, _to_s754, _value_s754);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG != _to_s754 && (_value_s754 > balances_BasicToken[this][msgsender_MSG] || balances_BasicToken[this][_to_s754] + _value_s754 >= 115792089237316195423570985008687907853269984665640564039457584007913129639936)) && _value_s754 >= 0) && _value_s754 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BasicToken[this][_to_s754] >= 0) && balances_BasicToken[this][_to_s754] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BasicToken[this][msgsender_MSG] >= 0) && balances_BasicToken[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_AlitaToken0 := true;
[L2]                 call_transfer_AlitaToken0 := false;
[L2]                 revert := revert_hold;
[L2049]              havoc __exception;
[L2050]              revert := false;
[L2051]  COND FALSE  !(__exception)
[L2080]  CALL        call __ret_0_ := transfer~address~uint256_AlitaToken__success(this, msgsender_MSG, msgvalue_MSG, _to_s754, _value_s754);
[L5022]  CALL        call whenNotPaused_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L7448]  COND FALSE  !(!!paused_Pausable[this])
[L5022]  RET         call whenNotPaused_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L5023]  COND FALSE  !(revert)
[L5026]  COND FALSE  !(!!isBlackListed_BlackList[this][msgsender_MSG])
[L5030]  COND FALSE  !(!!isBlackListed_BlackList[this][_to_s754])
[L5034]  COND TRUE   deprecated_AlitaToken[this]
[L5035]              assume DType[upgradedAddress_AlitaToken[this]] == UpgradedStandardToken;
[L5036]              __var_12 := upgradedAddress_AlitaToken[this];
[L5038]              __ret_0_ := __var_11;
[L2080]  RET         call __ret_0_ := transfer~address~uint256_AlitaToken__success(this, msgsender_MSG, msgvalue_MSG, _to_s754, _value_s754);
[L2081]              assume !revert && gas >= 0;
[L8523]  RET         call __ret_0_transfer := transfer~address~uint256_AlitaToken(this, msgsender_MSG, msgvalue_MSG, _to_s754, _value_s754);
[L8673]  RET         call CorralChoice_AlitaToken(this);

[2020-11-24 23:46:18,983 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 23:46:18,984 INFO  L82        PathProgramCache]: Analyzing trace with hash -131709066, now seen corresponding path program 1 times
[2020-11-24 23:46:18,985 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 23:46:19,006 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 23:46:19,111 INFO  L134       CoverageAnalysis]: Checked inductivity of 381 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 381 trivial. 0 not checked.
[2020-11-24 23:46:19,111 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 23:46:19,111 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [9] imperfect sequences [] total 9
[2020-11-24 23:46:19,112 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 23:46:19,112 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 10 interpolants.
[2020-11-24 23:46:19,112 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=17, Invalid=73, Unknown=0, NotChecked=0, Total=90
[2020-11-24 23:46:19,112 INFO  L87              Difference]: Start difference. First operand 4253 states and 4620 transitions. cyclomatic complexity: 377 Second operand 10 states.
[2020-11-24 23:46:20,793 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 23:46:20,793 INFO  L93              Difference]: Finished difference Result 4293 states and 4675 transitions.
[2020-11-24 23:46:20,793 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 10 states. 
[2020-11-24 23:46:20,793 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 4293 states and 4675 transitions.
[2020-11-24 23:46:20,802 INFO  L131   ngComponentsAnalysis]: Automaton has 3 accepting balls. 6
[2020-11-24 23:46:20,811 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 4293 states to 4293 states and 4675 transitions.
[2020-11-24 23:46:20,811 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 1314
[2020-11-24 23:46:20,812 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 1314
[2020-11-24 23:46:20,812 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 4293 states and 4675 transitions.
[2020-11-24 23:46:20,816 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 23:46:20,816 INFO  L728         BuchiCegarLoop]: Abstraction has 4293 states and 4675 transitions.
[2020-11-24 23:46:20,820 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 4293 states and 4675 transitions.
[2020-11-24 23:46:20,846 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 4293 to 4289.
[2020-11-24 23:46:20,846 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 4289 states.
[2020-11-24 23:46:20,850 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 4289 states to 4289 states and 4663 transitions.
[2020-11-24 23:46:20,850 INFO  L751         BuchiCegarLoop]: Abstraction has 4289 states and 4663 transitions.
[2020-11-24 23:46:20,850 INFO  L631         BuchiCegarLoop]: Abstraction has 4289 states and 4663 transitions.
[2020-11-24 23:46:20,850 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-24 23:46:20,850 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 4289 states and 4663 transitions.
[2020-11-24 23:46:20,855 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 4
[2020-11-24 23:46:20,855 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 23:46:20,855 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 23:46:20,857 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [8, 8, 8, 8, 8, 8, 8, 8, 8, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 23:46:20,857 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transfer_AlitaToken0 := false;
[L2]                 call_transfer_AlitaToken0 := false;
[L2]     CALL        call main();
[L8663]              assume null == 0;
[L8664]  CALL        call this := FreshRefGenerator__success();
[L3958]              havoc newRef;
[L3959]              assume Alloc[newRef] == false;
[L3960]              Alloc[newRef] := true;
[L3961]              assume newRef != null;
[L8664]  RET         call this := FreshRefGenerator__success();
[L8665]              assume now >= 0;
[L8666]              assume DType[this] == AlitaToken;
[L8667]              assume msgvalue_MSG == 0;
[L8668]              gas := gas - 53000;
[L8669]  CALL        call AlitaToken_AlitaToken(this, msgsender_MSG, msgvalue_MSG);
[L1981]              havoc __exception;
[L1982]              revert := false;
[L1983]  COND FALSE  !(__exception)
[L2012]  CALL        call AlitaToken_AlitaToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4942]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3994]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3977]              assume msgsender_MSG != null;
[L3978]              Balance[this] := 0;
[L3979]              owner_Ownable[this] := null;
[L3981]              owner_Ownable[this] := msgsender_MSG;
[L3994]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3995]  COND FALSE  !(revert)
[L4942]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4943]  COND FALSE  !(revert)
[L4946]  CALL        call Pausable_Pausable__success(this, msgsender_MSG, msgvalue_MSG);
[L4531]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3994]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3977]              assume msgsender_MSG != null;
[L3978]              Balance[this] := 0;
[L3979]              owner_Ownable[this] := null;
[L3981]              owner_Ownable[this] := msgsender_MSG;
[L3994]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3995]  COND FALSE  !(revert)
[L4531]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4532]  COND FALSE  !(revert)
[L4535]  CALL        call Pausable_Pausable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4511]              assume msgsender_MSG != null;
[L4512]              Balance[this] := 0;
[L4513]              paused_Pausable[this] := false;
[L4535]  RET         call Pausable_Pausable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4536]  COND FALSE  !(revert)
[L4946]  RET         call Pausable_Pausable__success(this, msgsender_MSG, msgvalue_MSG);
[L4947]  COND FALSE  !(revert)
[L4950]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4064]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4049]              assume msgsender_MSG != null;
[L4050]              Balance[this] := 0;
[L4064]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  COND FALSE  !(revert)
[L4950]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4951]  COND FALSE  !(revert)
[L4954]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4235]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4064]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4049]              assume msgsender_MSG != null;
[L4050]              Balance[this] := 0;
[L4064]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  COND FALSE  !(revert)
[L4235]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4236]  COND FALSE  !(revert)
[L4239]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4216]              assume msgsender_MSG != null;
[L4217]              Balance[this] := 0;
[L4239]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4240]  COND FALSE  !(revert)
[L4954]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4955]  COND FALSE  !(revert)
[L4958]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4106]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4064]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4049]              assume msgsender_MSG != null;
[L4050]              Balance[this] := 0;
[L4064]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  COND FALSE  !(revert)
[L4106]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4107]  COND FALSE  !(revert)
[L4110]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4084]              assume msgsender_MSG != null;
[L4085]              Balance[this] := 0;
[L4086]              balances_BasicToken[this] := zeroRefintArr();
[L4087]              sum_balances0[this] := 0;
[L4088]              totalSupply__BasicToken[this] := 0;
[L4110]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4111]  COND FALSE  !(revert)
[L4958]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4959]  COND FALSE  !(revert)
[L4962]  CALL        call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4287]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4064]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4049]              assume msgsender_MSG != null;
[L4050]              Balance[this] := 0;
[L4064]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  COND FALSE  !(revert)
[L4287]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4288]  COND FALSE  !(revert)
[L4291]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4235]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4064]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4049]              assume msgsender_MSG != null;
[L4050]              Balance[this] := 0;
[L4064]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  COND FALSE  !(revert)
[L4235]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4236]  COND FALSE  !(revert)
[L4239]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4216]              assume msgsender_MSG != null;
[L4217]              Balance[this] := 0;
[L4239]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4240]  COND FALSE  !(revert)
[L4291]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4292]  COND FALSE  !(revert)
[L4295]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4106]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4064]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4049]              assume msgsender_MSG != null;
[L4050]              Balance[this] := 0;
[L4064]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  COND FALSE  !(revert)
[L4106]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4107]  COND FALSE  !(revert)
[L4110]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4084]              assume msgsender_MSG != null;
[L4085]              Balance[this] := 0;
[L4086]              balances_BasicToken[this] := zeroRefintArr();
[L4087]              sum_balances0[this] := 0;
[L4088]              totalSupply__BasicToken[this] := 0;
[L4110]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4111]  COND FALSE  !(revert)
[L4295]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4296]  COND FALSE  !(revert)
[L4299]  CALL        call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4258]              assume msgsender_MSG != null;
[L4259]              Balance[this] := 0;
[L4260]              allowed_StandardToken[this] := zeroRefRefintArr();
[L4261]              sum_allowed1[this] := 0;
[L4299]  RET         call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4300]  COND FALSE  !(revert)
[L4962]  RET         call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4963]  COND FALSE  !(revert)
[L4966]  CALL        call BlackList_BlackList__success(this, msgsender_MSG, msgvalue_MSG);
[L4711]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3994]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3977]              assume msgsender_MSG != null;
[L3978]              Balance[this] := 0;
[L3979]              owner_Ownable[this] := null;
[L3981]              owner_Ownable[this] := msgsender_MSG;
[L3994]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3995]  COND FALSE  !(revert)
[L4711]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4712]  COND FALSE  !(revert)
[L4715]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4064]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4049]              assume msgsender_MSG != null;
[L4050]              Balance[this] := 0;
[L4064]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  COND FALSE  !(revert)
[L4715]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4716]  COND FALSE  !(revert)
[L4719]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4106]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4064]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4049]              assume msgsender_MSG != null;
[L4050]              Balance[this] := 0;
[L4064]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  COND FALSE  !(revert)
[L4106]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4107]  COND FALSE  !(revert)
[L4110]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4084]              assume msgsender_MSG != null;
[L4085]              Balance[this] := 0;
[L4086]              balances_BasicToken[this] := zeroRefintArr();
[L4087]              sum_balances0[this] := 0;
[L4088]              totalSupply__BasicToken[this] := 0;
[L4110]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4111]  COND FALSE  !(revert)
[L4719]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4720]  COND FALSE  !(revert)
[L4723]  CALL        call BlackList_BlackList_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4683]              assume msgsender_MSG != null;
[L4684]              Balance[this] := 0;
[L4685]              isBlackListed_BlackList[this] := zeroRefboolArr();
[L4723]  RET         call BlackList_BlackList_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4724]  COND FALSE  !(revert)
[L4966]  RET         call BlackList_BlackList__success(this, msgsender_MSG, msgvalue_MSG);
[L4967]  COND FALSE  !(revert)
[L4970]  CALL        call AlitaToken_AlitaToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4888]              assume msgsender_MSG != null;
[L4889]              Balance[this] := 0;
[L4890]              name_AlitaToken[this] := -1110093910;
[L4891]              symbol_AlitaToken[this] := 1234648092;
[L4892]              decimals_AlitaToken[this] := 18;
[L4893]              init_Supply_AlitaToken[this] := 1000000000 * (1000000000000000000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L4894]              upgradedAddress_AlitaToken[this] := null;
[L4895]              deprecated_AlitaToken[this] := false;
[L4897]              totalSupply__BasicToken[this] := init_Supply_AlitaToken[this];
[L4898]              sum_balances0[this] := sum_balances0[this] - balances_BasicToken[this][msgsender_MSG];
[L4899]              balances_BasicToken[this][msgsender_MSG] := totalSupply__BasicToken[this];
[L4900]              sum_balances0[this] := sum_balances0[this] + balances_BasicToken[this][msgsender_MSG];
[L4901]              deprecated_AlitaToken[this] := false;
[L4970]  RET         call AlitaToken_AlitaToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4971]  COND FALSE  !(revert)
[L2012]  RET         call AlitaToken_AlitaToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2013]              assume !revert && gas >= 0;
[L8669]  RET         call AlitaToken_AlitaToken(this, msgsender_MSG, msgvalue_MSG);
[L8670]              assume !revert && gas >= 0;
[L8673]  CALL        call CorralChoice_AlitaToken(this);
[L8433]              havoc msgsender_MSG;
[L8434]              havoc msgvalue_MSG;
[L8435]              havoc choice;
[L8436]              havoc __ret_0_owner;
[L8437]              havoc newOwner_s42;
[L8438]              havoc __ret_0_totalSupply;
[L8439]              havoc _owner_s166;
[L8440]              havoc __ret_0_balanceOf;
[L8441]              havoc _to_s754;
[L8442]              havoc _value_s754;
[L8443]              havoc __ret_0_transfer;
[L8444]              havoc _owner_s885;
[L8445]              havoc _spender_s885;
[L8446]              havoc __ret_0_allowance;
[L8447]              havoc _from_s812;
[L8448]              havoc _to_s812;
[L8449]              havoc _value_s812;
[L8450]              havoc __ret_0_transferFrom;
[L8451]              havoc _spender_s857;
[L8452]              havoc _value_s857;
[L8453]              havoc __ret_0_approve;
[L8454]              havoc _spender_s913;
[L8455]              havoc _addedValue_s913;
[L8456]              havoc __ret_0_increaseApproval;
[L8457]              havoc _spender_s941;
[L8458]              havoc _subtractedValue_s941;
[L8459]              havoc __ret_0_decreaseApproval;
[L8460]              havoc __ret_0_paused;
[L8461]              havoc _maker_s564;
[L8462]              havoc __ret_0_getBlackListStatus;
[L8463]              havoc __ret_0_getOwner;
[L8464]              havoc arg1060_s0;
[L8465]              havoc __ret_0_isBlackListed;
[L8466]              havoc _evilUser_s594;
[L8467]              havoc _clearedUser_s612;
[L8468]              havoc _blackListedUser_s647;
[L8469]              havoc __ret_0_name;
[L8470]              havoc __ret_0_symbol;
[L8471]              havoc __ret_0_decimals;
[L8472]              havoc __ret_0_init_Supply;
[L8473]              havoc __ret_0_upgradedAddress;
[L8474]              havoc __ret_0_deprecated;
[L8475]              havoc _upgradedAddress_s961;
[L8476]              havoc tmpNow;
[L8477]              havoc gas;
[L8478]              assume gas > 4000000 && gas <= 8000000;
[L8479]              tmpNow := now;
[L8480]              havoc now;
[L8481]              assume now > tmpNow;
[L8482]              assume msgsender_MSG != null;
[L8483]              assume DType[msgsender_MSG] != Ownable;
[L8484]              assume DType[msgsender_MSG] != ERC20Basic;
[L8485]              assume DType[msgsender_MSG] != BasicToken;
[L8486]              assume DType[msgsender_MSG] != ERC20;
[L8487]              assume DType[msgsender_MSG] != StandardToken;
[L8488]              assume DType[msgsender_MSG] != Pausable;
[L8489]              assume DType[msgsender_MSG] != UpgradedStandardToken;
[L8490]              assume DType[msgsender_MSG] != BlackList;
[L8491]              assume DType[msgsender_MSG] != AlitaToken;
[L8492]              assume DType[msgsender_MSG] != SafeMath;
[L8493]              Alloc[msgsender_MSG] := true;
[L8494]  COND FALSE  !(choice == 26)
[L8500]  COND FALSE  !(choice == 25)
[L8506]  COND FALSE  !(choice == 24)
[L8512]  COND FALSE  !(choice == 23)
[L8518]  COND TRUE   choice == 22
[L8519]              gas := gas - 21000;
[L8520]  COND TRUE   gas >= 0
[L8521]              assume _value_s754 >= 0 && _value_s754 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L8522]              assume msgvalue_MSG == 0;
[L8523]  CALL        call __ret_0_transfer := transfer~address~uint256_AlitaToken(this, msgsender_MSG, msgvalue_MSG, _to_s754, _value_s754);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG != _to_s754 && (_value_s754 > balances_BasicToken[this][msgsender_MSG] || balances_BasicToken[this][_to_s754] + _value_s754 >= 115792089237316195423570985008687907853269984665640564039457584007913129639936)) && _value_s754 >= 0) && _value_s754 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BasicToken[this][_to_s754] >= 0) && balances_BasicToken[this][_to_s754] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BasicToken[this][msgsender_MSG] >= 0) && balances_BasicToken[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_AlitaToken0 := true;
[L2]                 call_transfer_AlitaToken0 := false;
[L2]                 revert := revert_hold;
[L2049]              havoc __exception;
[L2050]              revert := false;
[L2051]  COND FALSE  !(__exception)
[L2080]  CALL        call __ret_0_ := transfer~address~uint256_AlitaToken__success(this, msgsender_MSG, msgvalue_MSG, _to_s754, _value_s754);
[L5022]  CALL        call whenNotPaused_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L7448]  COND FALSE  !(!!paused_Pausable[this])
[L5022]  RET         call whenNotPaused_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L5023]  COND FALSE  !(revert)
[L5026]  COND FALSE  !(!!isBlackListed_BlackList[this][msgsender_MSG])
[L5030]  COND FALSE  !(!!isBlackListed_BlackList[this][_to_s754])
[L5034]  COND FALSE  !(deprecated_AlitaToken[this])
[L5041]  COND TRUE   DType[this] == AlitaToken
[L5042]  CALL        call __var_14 := transfer~address~uint256_BasicToken__success(this, msgsender_MSG, msgvalue_MSG, _to_s754, _value_s754);
[L4165]              __var_2 := null;
[L4166]  COND FALSE  !(!(_to_s154 != null))
[L4170]  COND FALSE  !(!(_value_s154 <= balances_BasicToken[this][msgsender_MSG]))
[L4174]  CALL        call __var_3 := sub~uint256~uint256_SafeMath__success(this, this, 0, balances_BasicToken[this][msgsender_MSG], _value_s154);
[L5646]              assert b_s1033 <= a_s1033;
[L5647]              __ret_0_ := (a_s1033 - b_s1033) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4174]  RET         call __var_3 := sub~uint256~uint256_SafeMath__success(this, this, 0, balances_BasicToken[this][msgsender_MSG], _value_s154);
[L4175]  COND FALSE  !(revert)
[L4178]              sum_balances0[this] := sum_balances0[this] - balances_BasicToken[this][msgsender_MSG];
[L4179]              balances_BasicToken[this][msgsender_MSG] := __var_3;
[L4180]              sum_balances0[this] := sum_balances0[this] + balances_BasicToken[this][msgsender_MSG];
[L4181]  CALL        call __var_4 := add~uint256~uint256_SafeMath__success(this, this, 0, balances_BasicToken[this][_to_s154], _value_s154);
[L5660]              c_s1057 := (a_s1057 + b_s1057) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L5661]              assert c_s1057 >= a_s1057;
[L5662]              c_s1057 := c_s1057;
[L4181]  RET         call __var_4 := add~uint256~uint256_SafeMath__success(this, this, 0, balances_BasicToken[this][_to_s154], _value_s154);
[L4182]  COND FALSE  !(revert)
[L4185]              sum_balances0[this] := sum_balances0[this] - balances_BasicToken[this][_to_s154];
[L4186]              balances_BasicToken[this][_to_s154] := __var_4;
[L4187]              sum_balances0[this] := sum_balances0[this] + balances_BasicToken[this][_to_s154];
[L4188]              assert { :EventEmitted "Transfer_BasicToken" } true;
[L4189]              __ret_0_ := true;
[L5042]  RET         call __var_14 := transfer~address~uint256_BasicToken__success(this, msgsender_MSG, msgvalue_MSG, _to_s754, _value_s754);
[L5043]  COND FALSE  !(revert)
[L5049]              __ret_0_ := __var_14;
[L2080]  RET         call __ret_0_ := transfer~address~uint256_AlitaToken__success(this, msgsender_MSG, msgvalue_MSG, _to_s754, _value_s754);
[L2081]              assume !revert && gas >= 0;
[L8523]  RET         call __ret_0_transfer := transfer~address~uint256_AlitaToken(this, msgsender_MSG, msgvalue_MSG, _to_s754, _value_s754);
[L8673]  RET         call CorralChoice_AlitaToken(this);

Loop:
[L8673]  CALL        call CorralChoice_AlitaToken(this);
[L8433]              havoc msgsender_MSG;
[L8434]              havoc msgvalue_MSG;
[L8435]              havoc choice;
[L8436]              havoc __ret_0_owner;
[L8437]              havoc newOwner_s42;
[L8438]              havoc __ret_0_totalSupply;
[L8439]              havoc _owner_s166;
[L8440]              havoc __ret_0_balanceOf;
[L8441]              havoc _to_s754;
[L8442]              havoc _value_s754;
[L8443]              havoc __ret_0_transfer;
[L8444]              havoc _owner_s885;
[L8445]              havoc _spender_s885;
[L8446]              havoc __ret_0_allowance;
[L8447]              havoc _from_s812;
[L8448]              havoc _to_s812;
[L8449]              havoc _value_s812;
[L8450]              havoc __ret_0_transferFrom;
[L8451]              havoc _spender_s857;
[L8452]              havoc _value_s857;
[L8453]              havoc __ret_0_approve;
[L8454]              havoc _spender_s913;
[L8455]              havoc _addedValue_s913;
[L8456]              havoc __ret_0_increaseApproval;
[L8457]              havoc _spender_s941;
[L8458]              havoc _subtractedValue_s941;
[L8459]              havoc __ret_0_decreaseApproval;
[L8460]              havoc __ret_0_paused;
[L8461]              havoc _maker_s564;
[L8462]              havoc __ret_0_getBlackListStatus;
[L8463]              havoc __ret_0_getOwner;
[L8464]              havoc arg1060_s0;
[L8465]              havoc __ret_0_isBlackListed;
[L8466]              havoc _evilUser_s594;
[L8467]              havoc _clearedUser_s612;
[L8468]              havoc _blackListedUser_s647;
[L8469]              havoc __ret_0_name;
[L8470]              havoc __ret_0_symbol;
[L8471]              havoc __ret_0_decimals;
[L8472]              havoc __ret_0_init_Supply;
[L8473]              havoc __ret_0_upgradedAddress;
[L8474]              havoc __ret_0_deprecated;
[L8475]              havoc _upgradedAddress_s961;
[L8476]              havoc tmpNow;
[L8477]              havoc gas;
[L8478]              assume gas > 4000000 && gas <= 8000000;
[L8479]              tmpNow := now;
[L8480]              havoc now;
[L8481]              assume now > tmpNow;
[L8482]              assume msgsender_MSG != null;
[L8483]              assume DType[msgsender_MSG] != Ownable;
[L8484]              assume DType[msgsender_MSG] != ERC20Basic;
[L8485]              assume DType[msgsender_MSG] != BasicToken;
[L8486]              assume DType[msgsender_MSG] != ERC20;
[L8487]              assume DType[msgsender_MSG] != StandardToken;
[L8488]              assume DType[msgsender_MSG] != Pausable;
[L8489]              assume DType[msgsender_MSG] != UpgradedStandardToken;
[L8490]              assume DType[msgsender_MSG] != BlackList;
[L8491]              assume DType[msgsender_MSG] != AlitaToken;
[L8492]              assume DType[msgsender_MSG] != SafeMath;
[L8493]              Alloc[msgsender_MSG] := true;
[L8494]  COND FALSE  !(choice == 26)
[L8500]  COND FALSE  !(choice == 25)
[L8506]  COND FALSE  !(choice == 24)
[L8512]  COND FALSE  !(choice == 23)
[L8518]  COND TRUE   choice == 22
[L8519]              gas := gas - 21000;
[L8520]  COND TRUE   gas >= 0
[L8521]              assume _value_s754 >= 0 && _value_s754 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L8522]              assume msgvalue_MSG == 0;
[L8523]  CALL        call __ret_0_transfer := transfer~address~uint256_AlitaToken(this, msgsender_MSG, msgvalue_MSG, _to_s754, _value_s754);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG != _to_s754 && (_value_s754 > balances_BasicToken[this][msgsender_MSG] || balances_BasicToken[this][_to_s754] + _value_s754 >= 115792089237316195423570985008687907853269984665640564039457584007913129639936)) && _value_s754 >= 0) && _value_s754 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BasicToken[this][_to_s754] >= 0) && balances_BasicToken[this][_to_s754] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BasicToken[this][msgsender_MSG] >= 0) && balances_BasicToken[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_AlitaToken0 := true;
[L2]                 call_transfer_AlitaToken0 := false;
[L2]                 revert := revert_hold;
[L2049]              havoc __exception;
[L2050]              revert := false;
[L2051]  COND FALSE  !(__exception)
[L2080]  CALL        call __ret_0_ := transfer~address~uint256_AlitaToken__success(this, msgsender_MSG, msgvalue_MSG, _to_s754, _value_s754);
[L5022]  CALL        call whenNotPaused_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L7448]  COND FALSE  !(!!paused_Pausable[this])
[L5022]  RET         call whenNotPaused_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L5023]  COND FALSE  !(revert)
[L5026]  COND FALSE  !(!!isBlackListed_BlackList[this][msgsender_MSG])
[L5030]  COND FALSE  !(!!isBlackListed_BlackList[this][_to_s754])
[L5034]  COND FALSE  !(deprecated_AlitaToken[this])
[L5041]  COND TRUE   DType[this] == AlitaToken
[L5042]  CALL        call __var_14 := transfer~address~uint256_BasicToken__success(this, msgsender_MSG, msgvalue_MSG, _to_s754, _value_s754);
[L4165]              __var_2 := null;
[L4166]  COND FALSE  !(!(_to_s154 != null))
[L4170]  COND FALSE  !(!(_value_s154 <= balances_BasicToken[this][msgsender_MSG]))
[L4174]  CALL        call __var_3 := sub~uint256~uint256_SafeMath__success(this, this, 0, balances_BasicToken[this][msgsender_MSG], _value_s154);
[L5646]              assert b_s1033 <= a_s1033;
[L5647]              __ret_0_ := (a_s1033 - b_s1033) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4174]  RET         call __var_3 := sub~uint256~uint256_SafeMath__success(this, this, 0, balances_BasicToken[this][msgsender_MSG], _value_s154);
[L4175]  COND FALSE  !(revert)
[L4178]              sum_balances0[this] := sum_balances0[this] - balances_BasicToken[this][msgsender_MSG];
[L4179]              balances_BasicToken[this][msgsender_MSG] := __var_3;
[L4180]              sum_balances0[this] := sum_balances0[this] + balances_BasicToken[this][msgsender_MSG];
[L4181]  CALL        call __var_4 := add~uint256~uint256_SafeMath__success(this, this, 0, balances_BasicToken[this][_to_s154], _value_s154);
[L5660]              c_s1057 := (a_s1057 + b_s1057) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L5661]              assert c_s1057 >= a_s1057;
[L5662]              c_s1057 := c_s1057;
[L4181]  RET         call __var_4 := add~uint256~uint256_SafeMath__success(this, this, 0, balances_BasicToken[this][_to_s154], _value_s154);
[L4182]  COND FALSE  !(revert)
[L4185]              sum_balances0[this] := sum_balances0[this] - balances_BasicToken[this][_to_s154];
[L4186]              balances_BasicToken[this][_to_s154] := __var_4;
[L4187]              sum_balances0[this] := sum_balances0[this] + balances_BasicToken[this][_to_s154];
[L4188]              assert { :EventEmitted "Transfer_BasicToken" } true;
[L4189]              __ret_0_ := true;
[L5042]  RET         call __var_14 := transfer~address~uint256_BasicToken__success(this, msgsender_MSG, msgvalue_MSG, _to_s754, _value_s754);
[L5043]  COND FALSE  !(revert)
[L5049]              __ret_0_ := __var_14;
[L2080]  RET         call __ret_0_ := transfer~address~uint256_AlitaToken__success(this, msgsender_MSG, msgvalue_MSG, _to_s754, _value_s754);
[L2081]              assume !revert && gas >= 0;
[L8523]  RET         call __ret_0_transfer := transfer~address~uint256_AlitaToken(this, msgsender_MSG, msgvalue_MSG, _to_s754, _value_s754);
[L8673]  RET         call CorralChoice_AlitaToken(this);

[2020-11-24 23:46:20,862 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 23:46:20,862 INFO  L82        PathProgramCache]: Analyzing trace with hash -2093412921, now seen corresponding path program 1 times
[2020-11-24 23:46:20,863 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 23:46:20,881 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 23:46:21,331 INFO  L134       CoverageAnalysis]: Checked inductivity of 381 backedges. 16 proven. 0 refuted. 0 times theorem prover too weak. 365 trivial. 0 not checked.
[2020-11-24 23:46:21,332 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 23:46:21,332 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [20] imperfect sequences [] total 20
[2020-11-24 23:46:21,333 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 23:46:21,333 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 21 interpolants.
[2020-11-24 23:46:21,333 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=46, Invalid=374, Unknown=0, NotChecked=0, Total=420
[2020-11-24 23:46:21,333 INFO  L87              Difference]: Start difference. First operand 4289 states and 4663 transitions. cyclomatic complexity: 386 Second operand 21 states.
[2020-11-24 23:46:26,471 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 23:46:26,471 INFO  L93              Difference]: Finished difference Result 4395 states and 4803 transitions.
[2020-11-24 23:46:26,471 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 21 states. 
[2020-11-24 23:46:26,471 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 4395 states and 4803 transitions.
[2020-11-24 23:46:26,479 INFO  L131   ngComponentsAnalysis]: Automaton has 4 accepting balls. 8
[2020-11-24 23:46:26,490 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 4395 states to 4395 states and 4803 transitions.
[2020-11-24 23:46:26,490 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 1340
[2020-11-24 23:46:26,491 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 1340
[2020-11-24 23:46:26,491 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 4395 states and 4803 transitions.
[2020-11-24 23:46:26,495 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 23:46:26,495 INFO  L728         BuchiCegarLoop]: Abstraction has 4395 states and 4803 transitions.
[2020-11-24 23:46:26,498 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 4395 states and 4803 transitions.
[2020-11-24 23:46:26,524 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 4395 to 4350.
[2020-11-24 23:46:26,524 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 4350 states.
[2020-11-24 23:46:26,529 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 4350 states to 4350 states and 4745 transitions.
[2020-11-24 23:46:26,529 INFO  L751         BuchiCegarLoop]: Abstraction has 4350 states and 4745 transitions.
[2020-11-24 23:46:26,529 INFO  L631         BuchiCegarLoop]: Abstraction has 4350 states and 4745 transitions.
[2020-11-24 23:46:26,529 INFO  L445         BuchiCegarLoop]: ======== Iteration 5============
[2020-11-24 23:46:26,529 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 4350 states and 4745 transitions.
[2020-11-24 23:46:26,533 INFO  L131   ngComponentsAnalysis]: Automaton has 3 accepting balls. 6
[2020-11-24 23:46:26,533 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 23:46:26,533 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 23:46:26,535 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [8, 8, 8, 8, 8, 8, 8, 8, 8, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 23:46:26,535 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transfer_AlitaToken0 := false;
[L2]                 call_transfer_AlitaToken0 := false;
[L2]     CALL        call main();
[L8663]              assume null == 0;
[L8664]  CALL        call this := FreshRefGenerator__success();
[L3958]              havoc newRef;
[L3959]              assume Alloc[newRef] == false;
[L3960]              Alloc[newRef] := true;
[L3961]              assume newRef != null;
[L8664]  RET         call this := FreshRefGenerator__success();
[L8665]              assume now >= 0;
[L8666]              assume DType[this] == AlitaToken;
[L8667]              assume msgvalue_MSG == 0;
[L8668]              gas := gas - 53000;
[L8669]  CALL        call AlitaToken_AlitaToken(this, msgsender_MSG, msgvalue_MSG);
[L1981]              havoc __exception;
[L1982]              revert := false;
[L1983]  COND TRUE   __exception
[L1984]              __tmp__Balance := Balance;
[L1985]              __tmp__DType := DType;
[L1986]              __tmp__Alloc := Alloc;
[L1987]              __tmp__balance_ADDR := balance_ADDR;
[L1988]              __tmp__M_Ref_int := M_Ref_int;
[L1989]              __tmp__sum_balances0 := sum_balances0;
[L1990]              __tmp__alloc_allowed_StandardToken_lvl0 := alloc_allowed_StandardToken_lvl0;
[L1991]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L1992]              __tmp__sum_allowed1 := sum_allowed1;
[L1993]              __tmp__M_Ref_bool := M_Ref_bool;
[L1994]              __tmp__sum_isBlackListed2 := sum_isBlackListed2;
[L1995]              __tmp__Length := Length;
[L1996]              __tmp__now := now;
[L1997]              __tmp__owner_Ownable := owner_Ownable;
[L1998]              __tmp__balances_BasicToken := balances_BasicToken;
[L1999]              __tmp__totalSupply__BasicToken := totalSupply__BasicToken;
[L2000]              __tmp__allowed_StandardToken := allowed_StandardToken;
[L2001]              __tmp__paused_Pausable := paused_Pausable;
[L2002]              __tmp__isBlackListed_BlackList := isBlackListed_BlackList;
[L2003]              __tmp__name_AlitaToken := name_AlitaToken;
[L2004]              __tmp__symbol_AlitaToken := symbol_AlitaToken;
[L2005]              __tmp__decimals_AlitaToken := decimals_AlitaToken;
[L2006]              __tmp__init_Supply_AlitaToken := init_Supply_AlitaToken;
[L2007]              __tmp__upgradedAddress_AlitaToken := upgradedAddress_AlitaToken;
[L2008]              __tmp__deprecated_AlitaToken := deprecated_AlitaToken;
[L2009]  CALL        call AlitaToken_AlitaToken__fail(this, msgsender_MSG, msgvalue_MSG);
[L4906]  CALL        call Ownable_Ownable__fail(this, msgsender_MSG, msgvalue_MSG);
[L3986]  CALL        call Ownable_Ownable_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L3967]              assume msgsender_MSG != null;
[L3968]              __tmp__Balance[this] := 0;
[L3969]              __tmp__owner_Ownable[this] := null;
[L3971]              __tmp__owner_Ownable[this] := msgsender_MSG;
[L3986]  RET         call Ownable_Ownable_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L3987]  COND FALSE  !(revert)
[L4906]  RET         call Ownable_Ownable__fail(this, msgsender_MSG, msgvalue_MSG);
[L4907]  COND FALSE  !(revert)
[L4910]  CALL        call Pausable_Pausable__fail(this, msgsender_MSG, msgvalue_MSG);
[L4519]  CALL        call Ownable_Ownable__fail(this, msgsender_MSG, msgvalue_MSG);
[L3986]  CALL        call Ownable_Ownable_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L3967]              assume msgsender_MSG != null;
[L3968]              __tmp__Balance[this] := 0;
[L3969]              __tmp__owner_Ownable[this] := null;
[L3971]              __tmp__owner_Ownable[this] := msgsender_MSG;
[L3986]  RET         call Ownable_Ownable_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L3987]  COND FALSE  !(revert)
[L4519]  RET         call Ownable_Ownable__fail(this, msgsender_MSG, msgvalue_MSG);
[L4520]  COND FALSE  !(revert)
[L4523]  CALL        call Pausable_Pausable_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L4502]              assume msgsender_MSG != null;
[L4503]              __tmp__Balance[this] := 0;
[L4504]              __tmp__paused_Pausable[this] := false;
[L4523]  RET         call Pausable_Pausable_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L4524]  COND FALSE  !(revert)
[L4910]  RET         call Pausable_Pausable__fail(this, msgsender_MSG, msgvalue_MSG);
[L4911]  COND FALSE  !(revert)
[L4914]  CALL        call ERC20Basic_ERC20Basic__fail(this, msgsender_MSG, msgvalue_MSG);
[L4056]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L4041]              assume msgsender_MSG != null;
[L4042]              __tmp__Balance[this] := 0;
[L4056]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L4057]  COND FALSE  !(revert)
[L4914]  RET         call ERC20Basic_ERC20Basic__fail(this, msgsender_MSG, msgvalue_MSG);
[L4915]  COND FALSE  !(revert)
[L4918]  CALL        call ERC20_ERC20__fail(this, msgsender_MSG, msgvalue_MSG);
[L4223]  CALL        call ERC20Basic_ERC20Basic__fail(this, msgsender_MSG, msgvalue_MSG);
[L4056]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L4041]              assume msgsender_MSG != null;
[L4042]              __tmp__Balance[this] := 0;
[L4056]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L4057]  COND FALSE  !(revert)
[L4223]  RET         call ERC20Basic_ERC20Basic__fail(this, msgsender_MSG, msgvalue_MSG);
[L4224]  COND FALSE  !(revert)
[L4227]  CALL        call ERC20_ERC20_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L4208]              assume msgsender_MSG != null;
[L4209]              __tmp__Balance[this] := 0;
[L4227]  RET         call ERC20_ERC20_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L4228]  COND FALSE  !(revert)
[L4918]  RET         call ERC20_ERC20__fail(this, msgsender_MSG, msgvalue_MSG);
[L4919]  COND FALSE  !(revert)
[L4922]  CALL        call BasicToken_BasicToken__fail(this, msgsender_MSG, msgvalue_MSG);
[L4094]  CALL        call ERC20Basic_ERC20Basic__fail(this, msgsender_MSG, msgvalue_MSG);
[L4056]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L4041]              assume msgsender_MSG != null;
[L4042]              __tmp__Balance[this] := 0;
[L4056]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L4057]  COND FALSE  !(revert)
[L4094]  RET         call ERC20Basic_ERC20Basic__fail(this, msgsender_MSG, msgvalue_MSG);
[L4095]  COND FALSE  !(revert)
[L4098]  CALL        call BasicToken_BasicToken_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L4073]              assume msgsender_MSG != null;
[L4074]              __tmp__Balance[this] := 0;
[L4075]              __tmp__balances_BasicToken[this] := zeroRefintArr();
[L4076]              __tmp__sum_balances0[this] := 0;
[L4077]              __tmp__totalSupply__BasicToken[this] := 0;
[L4098]  RET         call BasicToken_BasicToken_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L4099]  COND FALSE  !(revert)
[L4922]  RET         call BasicToken_BasicToken__fail(this, msgsender_MSG, msgvalue_MSG);
[L4923]  COND FALSE  !(revert)
[L4926]  CALL        call StandardToken_StandardToken__fail(this, msgsender_MSG, msgvalue_MSG);
[L4267]  CALL        call ERC20Basic_ERC20Basic__fail(this, msgsender_MSG, msgvalue_MSG);
[L4056]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L4041]              assume msgsender_MSG != null;
[L4042]              __tmp__Balance[this] := 0;
[L4056]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L4057]  COND FALSE  !(revert)
[L4267]  RET         call ERC20Basic_ERC20Basic__fail(this, msgsender_MSG, msgvalue_MSG);
[L4268]  COND FALSE  !(revert)
[L4271]  CALL        call ERC20_ERC20__fail(this, msgsender_MSG, msgvalue_MSG);
[L4223]  CALL        call ERC20Basic_ERC20Basic__fail(this, msgsender_MSG, msgvalue_MSG);
[L4056]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L4041]              assume msgsender_MSG != null;
[L4042]              __tmp__Balance[this] := 0;
[L4056]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L4057]  COND FALSE  !(revert)
[L4223]  RET         call ERC20Basic_ERC20Basic__fail(this, msgsender_MSG, msgvalue_MSG);
[L4224]  COND FALSE  !(revert)
[L4227]  CALL        call ERC20_ERC20_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L4208]              assume msgsender_MSG != null;
[L4209]              __tmp__Balance[this] := 0;
[L4227]  RET         call ERC20_ERC20_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L4228]  COND FALSE  !(revert)
[L4271]  RET         call ERC20_ERC20__fail(this, msgsender_MSG, msgvalue_MSG);
[L4272]  COND FALSE  !(revert)
[L4275]  CALL        call BasicToken_BasicToken__fail(this, msgsender_MSG, msgvalue_MSG);
[L4094]  CALL        call ERC20Basic_ERC20Basic__fail(this, msgsender_MSG, msgvalue_MSG);
[L4056]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L4041]              assume msgsender_MSG != null;
[L4042]              __tmp__Balance[this] := 0;
[L4056]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L4057]  COND FALSE  !(revert)
[L4094]  RET         call ERC20Basic_ERC20Basic__fail(this, msgsender_MSG, msgvalue_MSG);
[L4095]  COND FALSE  !(revert)
[L4098]  CALL        call BasicToken_BasicToken_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L4073]              assume msgsender_MSG != null;
[L4074]              __tmp__Balance[this] := 0;
[L4075]              __tmp__balances_BasicToken[this] := zeroRefintArr();
[L4076]              __tmp__sum_balances0[this] := 0;
[L4077]              __tmp__totalSupply__BasicToken[this] := 0;
[L4098]  RET         call BasicToken_BasicToken_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L4099]  COND FALSE  !(revert)
[L4275]  RET         call BasicToken_BasicToken__fail(this, msgsender_MSG, msgvalue_MSG);
[L4276]  COND FALSE  !(revert)
[L4279]  CALL        call StandardToken_StandardToken_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L4248]              assume msgsender_MSG != null;
[L4249]              __tmp__Balance[this] := 0;
[L4250]              __tmp__allowed_StandardToken[this] := zeroRefRefintArr();
[L4251]              __tmp__sum_allowed1[this] := 0;
[L4279]  RET         call StandardToken_StandardToken_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L4280]  COND FALSE  !(revert)
[L4926]  RET         call StandardToken_StandardToken__fail(this, msgsender_MSG, msgvalue_MSG);
[L4927]  COND FALSE  !(revert)
[L4930]  CALL        call BlackList_BlackList__fail(this, msgsender_MSG, msgvalue_MSG);
[L4691]  CALL        call Ownable_Ownable__fail(this, msgsender_MSG, msgvalue_MSG);
[L3986]  CALL        call Ownable_Ownable_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L3967]              assume msgsender_MSG != null;
[L3968]              __tmp__Balance[this] := 0;
[L3969]              __tmp__owner_Ownable[this] := null;
[L3971]              __tmp__owner_Ownable[this] := msgsender_MSG;
[L3986]  RET         call Ownable_Ownable_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L3987]  COND FALSE  !(revert)
[L4691]  RET         call Ownable_Ownable__fail(this, msgsender_MSG, msgvalue_MSG);
[L4692]  COND FALSE  !(revert)
[L4695]  CALL        call ERC20Basic_ERC20Basic__fail(this, msgsender_MSG, msgvalue_MSG);
[L4056]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L4041]              assume msgsender_MSG != null;
[L4042]              __tmp__Balance[this] := 0;
[L4056]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L4057]  COND FALSE  !(revert)
[L4695]  RET         call ERC20Basic_ERC20Basic__fail(this, msgsender_MSG, msgvalue_MSG);
[L4696]  COND FALSE  !(revert)
[L4699]  CALL        call BasicToken_BasicToken__fail(this, msgsender_MSG, msgvalue_MSG);
[L4094]  CALL        call ERC20Basic_ERC20Basic__fail(this, msgsender_MSG, msgvalue_MSG);
[L4056]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L4041]              assume msgsender_MSG != null;
[L4042]              __tmp__Balance[this] := 0;
[L4056]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L4057]  COND FALSE  !(revert)
[L4094]  RET         call ERC20Basic_ERC20Basic__fail(this, msgsender_MSG, msgvalue_MSG);
[L4095]  COND FALSE  !(revert)
[L4098]  CALL        call BasicToken_BasicToken_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L4073]              assume msgsender_MSG != null;
[L4074]              __tmp__Balance[this] := 0;
[L4075]              __tmp__balances_BasicToken[this] := zeroRefintArr();
[L4076]              __tmp__sum_balances0[this] := 0;
[L4077]              __tmp__totalSupply__BasicToken[this] := 0;
[L4098]  RET         call BasicToken_BasicToken_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L4099]  COND FALSE  !(revert)
[L4699]  RET         call BasicToken_BasicToken__fail(this, msgsender_MSG, msgvalue_MSG);
[L4700]  COND FALSE  !(revert)
[L4703]  CALL        call BlackList_BlackList_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L4674]              assume msgsender_MSG != null;
[L4675]              __tmp__Balance[this] := 0;
[L4676]              __tmp__isBlackListed_BlackList[this] := zeroRefboolArr();
[L4703]  RET         call BlackList_BlackList_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L4704]  COND FALSE  !(revert)
[L4930]  RET         call BlackList_BlackList__fail(this, msgsender_MSG, msgvalue_MSG);
[L4931]  COND FALSE  !(revert)
[L4934]  CALL        call AlitaToken_AlitaToken_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L4869]              assume msgsender_MSG != null;
[L4870]              __tmp__Balance[this] := 0;
[L4871]              __tmp__name_AlitaToken[this] := -1110093910;
[L4872]              __tmp__symbol_AlitaToken[this] := 1234648092;
[L4873]              __tmp__decimals_AlitaToken[this] := 18;
[L4874]              __tmp__init_Supply_AlitaToken[this] := 1000000000 * (1000000000000000000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L4875]              __tmp__upgradedAddress_AlitaToken[this] := null;
[L4876]              __tmp__deprecated_AlitaToken[this] := false;
[L4878]              __tmp__totalSupply__BasicToken[this] := __tmp__init_Supply_AlitaToken[this];
[L4879]              __tmp__sum_balances0[this] := __tmp__sum_balances0[this] - __tmp__balances_BasicToken[this][msgsender_MSG];
[L4880]              __tmp__balances_BasicToken[this][msgsender_MSG] := __tmp__totalSupply__BasicToken[this];
[L4881]              __tmp__sum_balances0[this] := __tmp__sum_balances0[this] + __tmp__balances_BasicToken[this][msgsender_MSG];
[L4882]              __tmp__deprecated_AlitaToken[this] := false;
[L4934]  RET         call AlitaToken_AlitaToken_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L4935]  COND FALSE  !(revert)
[L2009]  RET         call AlitaToken_AlitaToken__fail(this, msgsender_MSG, msgvalue_MSG);
[L2010]              assume revert || gas < 0;
[L8669]  RET         call AlitaToken_AlitaToken(this, msgsender_MSG, msgvalue_MSG);
[L8670]              assume !revert && gas >= 0;
[L8673]  CALL        call CorralChoice_AlitaToken(this);
[L8433]              havoc msgsender_MSG;
[L8434]              havoc msgvalue_MSG;
[L8435]              havoc choice;
[L8436]              havoc __ret_0_owner;
[L8437]              havoc newOwner_s42;
[L8438]              havoc __ret_0_totalSupply;
[L8439]              havoc _owner_s166;
[L8440]              havoc __ret_0_balanceOf;
[L8441]              havoc _to_s754;
[L8442]              havoc _value_s754;
[L8443]              havoc __ret_0_transfer;
[L8444]              havoc _owner_s885;
[L8445]              havoc _spender_s885;
[L8446]              havoc __ret_0_allowance;
[L8447]              havoc _from_s812;
[L8448]              havoc _to_s812;
[L8449]              havoc _value_s812;
[L8450]              havoc __ret_0_transferFrom;
[L8451]              havoc _spender_s857;
[L8452]              havoc _value_s857;
[L8453]              havoc __ret_0_approve;
[L8454]              havoc _spender_s913;
[L8455]              havoc _addedValue_s913;
[L8456]              havoc __ret_0_increaseApproval;
[L8457]              havoc _spender_s941;
[L8458]              havoc _subtractedValue_s941;
[L8459]              havoc __ret_0_decreaseApproval;
[L8460]              havoc __ret_0_paused;
[L8461]              havoc _maker_s564;
[L8462]              havoc __ret_0_getBlackListStatus;
[L8463]              havoc __ret_0_getOwner;
[L8464]              havoc arg1060_s0;
[L8465]              havoc __ret_0_isBlackListed;
[L8466]              havoc _evilUser_s594;
[L8467]              havoc _clearedUser_s612;
[L8468]              havoc _blackListedUser_s647;
[L8469]              havoc __ret_0_name;
[L8470]              havoc __ret_0_symbol;
[L8471]              havoc __ret_0_decimals;
[L8472]              havoc __ret_0_init_Supply;
[L8473]              havoc __ret_0_upgradedAddress;
[L8474]              havoc __ret_0_deprecated;
[L8475]              havoc _upgradedAddress_s961;
[L8476]              havoc tmpNow;
[L8477]              havoc gas;
[L8478]              assume gas > 4000000 && gas <= 8000000;
[L8479]              tmpNow := now;
[L8480]              havoc now;
[L8481]              assume now > tmpNow;
[L8482]              assume msgsender_MSG != null;
[L8483]              assume DType[msgsender_MSG] != Ownable;
[L8484]              assume DType[msgsender_MSG] != ERC20Basic;
[L8485]              assume DType[msgsender_MSG] != BasicToken;
[L8486]              assume DType[msgsender_MSG] != ERC20;
[L8487]              assume DType[msgsender_MSG] != StandardToken;
[L8488]              assume DType[msgsender_MSG] != Pausable;
[L8489]              assume DType[msgsender_MSG] != UpgradedStandardToken;
[L8490]              assume DType[msgsender_MSG] != BlackList;
[L8491]              assume DType[msgsender_MSG] != AlitaToken;
[L8492]              assume DType[msgsender_MSG] != SafeMath;
[L8493]              Alloc[msgsender_MSG] := true;
[L8494]  COND FALSE  !(choice == 26)
[L8500]  COND FALSE  !(choice == 25)
[L8506]  COND FALSE  !(choice == 24)
[L8512]  COND FALSE  !(choice == 23)
[L8518]  COND TRUE   choice == 22
[L8519]              gas := gas - 21000;
[L8520]  COND TRUE   gas >= 0
[L8521]              assume _value_s754 >= 0 && _value_s754 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L8522]              assume msgvalue_MSG == 0;
[L8523]  CALL        call __ret_0_transfer := transfer~address~uint256_AlitaToken(this, msgsender_MSG, msgvalue_MSG, _to_s754, _value_s754);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG != _to_s754 && (_value_s754 > balances_BasicToken[this][msgsender_MSG] || balances_BasicToken[this][_to_s754] + _value_s754 >= 115792089237316195423570985008687907853269984665640564039457584007913129639936)) && _value_s754 >= 0) && _value_s754 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BasicToken[this][_to_s754] >= 0) && balances_BasicToken[this][_to_s754] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BasicToken[this][msgsender_MSG] >= 0) && balances_BasicToken[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_AlitaToken0 := true;
[L2]                 call_transfer_AlitaToken0 := false;
[L2]                 revert := revert_hold;
[L2049]              havoc __exception;
[L2050]              revert := false;
[L2051]  COND FALSE  !(__exception)
[L2080]  CALL        call __ret_0_ := transfer~address~uint256_AlitaToken__success(this, msgsender_MSG, msgvalue_MSG, _to_s754, _value_s754);
[L5022]  CALL        call whenNotPaused_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L7448]  COND FALSE  !(!!paused_Pausable[this])
[L5022]  RET         call whenNotPaused_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L5023]  COND FALSE  !(revert)
[L5026]  COND FALSE  !(!!isBlackListed_BlackList[this][msgsender_MSG])
[L5030]  COND FALSE  !(!!isBlackListed_BlackList[this][_to_s754])
[L5034]  COND TRUE   deprecated_AlitaToken[this]
[L5035]              assume DType[upgradedAddress_AlitaToken[this]] == UpgradedStandardToken;
[L5036]              __var_12 := upgradedAddress_AlitaToken[this];
[L5038]              __ret_0_ := __var_11;
[L2080]  RET         call __ret_0_ := transfer~address~uint256_AlitaToken__success(this, msgsender_MSG, msgvalue_MSG, _to_s754, _value_s754);
[L2081]              assume !revert && gas >= 0;
[L8523]  RET         call __ret_0_transfer := transfer~address~uint256_AlitaToken(this, msgsender_MSG, msgvalue_MSG, _to_s754, _value_s754);
[L8673]  RET         call CorralChoice_AlitaToken(this);

Loop:
[L8673]  CALL        call CorralChoice_AlitaToken(this);
[L8433]              havoc msgsender_MSG;
[L8434]              havoc msgvalue_MSG;
[L8435]              havoc choice;
[L8436]              havoc __ret_0_owner;
[L8437]              havoc newOwner_s42;
[L8438]              havoc __ret_0_totalSupply;
[L8439]              havoc _owner_s166;
[L8440]              havoc __ret_0_balanceOf;
[L8441]              havoc _to_s754;
[L8442]              havoc _value_s754;
[L8443]              havoc __ret_0_transfer;
[L8444]              havoc _owner_s885;
[L8445]              havoc _spender_s885;
[L8446]              havoc __ret_0_allowance;
[L8447]              havoc _from_s812;
[L8448]              havoc _to_s812;
[L8449]              havoc _value_s812;
[L8450]              havoc __ret_0_transferFrom;
[L8451]              havoc _spender_s857;
[L8452]              havoc _value_s857;
[L8453]              havoc __ret_0_approve;
[L8454]              havoc _spender_s913;
[L8455]              havoc _addedValue_s913;
[L8456]              havoc __ret_0_increaseApproval;
[L8457]              havoc _spender_s941;
[L8458]              havoc _subtractedValue_s941;
[L8459]              havoc __ret_0_decreaseApproval;
[L8460]              havoc __ret_0_paused;
[L8461]              havoc _maker_s564;
[L8462]              havoc __ret_0_getBlackListStatus;
[L8463]              havoc __ret_0_getOwner;
[L8464]              havoc arg1060_s0;
[L8465]              havoc __ret_0_isBlackListed;
[L8466]              havoc _evilUser_s594;
[L8467]              havoc _clearedUser_s612;
[L8468]              havoc _blackListedUser_s647;
[L8469]              havoc __ret_0_name;
[L8470]              havoc __ret_0_symbol;
[L8471]              havoc __ret_0_decimals;
[L8472]              havoc __ret_0_init_Supply;
[L8473]              havoc __ret_0_upgradedAddress;
[L8474]              havoc __ret_0_deprecated;
[L8475]              havoc _upgradedAddress_s961;
[L8476]              havoc tmpNow;
[L8477]              havoc gas;
[L8478]              assume gas > 4000000 && gas <= 8000000;
[L8479]              tmpNow := now;
[L8480]              havoc now;
[L8481]              assume now > tmpNow;
[L8482]              assume msgsender_MSG != null;
[L8483]              assume DType[msgsender_MSG] != Ownable;
[L8484]              assume DType[msgsender_MSG] != ERC20Basic;
[L8485]              assume DType[msgsender_MSG] != BasicToken;
[L8486]              assume DType[msgsender_MSG] != ERC20;
[L8487]              assume DType[msgsender_MSG] != StandardToken;
[L8488]              assume DType[msgsender_MSG] != Pausable;
[L8489]              assume DType[msgsender_MSG] != UpgradedStandardToken;
[L8490]              assume DType[msgsender_MSG] != BlackList;
[L8491]              assume DType[msgsender_MSG] != AlitaToken;
[L8492]              assume DType[msgsender_MSG] != SafeMath;
[L8493]              Alloc[msgsender_MSG] := true;
[L8494]  COND FALSE  !(choice == 26)
[L8500]  COND FALSE  !(choice == 25)
[L8506]  COND FALSE  !(choice == 24)
[L8512]  COND FALSE  !(choice == 23)
[L8518]  COND FALSE  !(choice == 22)
[L8525]  COND FALSE  !(choice == 21)
[L8531]  COND FALSE  !(choice == 20)
[L8538]  COND FALSE  !(choice == 19)
[L8545]  COND FALSE  !(choice == 18)
[L8552]  COND FALSE  !(choice == 17)
[L8559]  COND FALSE  !(choice == 16)
[L8565]  COND FALSE  !(choice == 15)
[L8571]  COND FALSE  !(choice == 14)
[L8577]  COND FALSE  !(choice == 13)
[L8583]  COND FALSE  !(choice == 12)
[L8589]  COND FALSE  !(choice == 11)
[L8595]  COND FALSE  !(choice == 10)
[L8601]  COND FALSE  !(choice == 9)
[L8607]  COND TRUE   choice == 8
[L8608]              gas := gas - 21000;
[L8609]  COND TRUE   gas >= 0
[L8610]              assume msgvalue_MSG == 0;
[L8611]  CALL        call destroyBlackFunds~address_BlackList(this, msgsender_MSG, msgvalue_MSG, _blackListedUser_s647);
[L1817]              havoc __exception;
[L1818]              revert := false;
[L1819]  COND FALSE  !(__exception)
[L1848]  CALL        call destroyBlackFunds~address_BlackList__success(this, msgsender_MSG, msgvalue_MSG, _blackListedUser_s647);
[L4825]  CALL        call onlyOwner_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L7432]  COND FALSE  !(!(msgsender_MSG == owner_Ownable[this]))
[L4825]  RET         call onlyOwner_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L4826]  COND FALSE  !(revert)
[L4829]  COND FALSE  !(!isBlackListed_BlackList[this][_blackListedUser_s647])
[L4833]  COND FALSE  !(DType[this] == AlitaToken)
[L4838]  COND TRUE   DType[this] == BlackList
[L4839]  CALL        call dirtyFunds_s647 := balanceOf~address_BasicToken__success(this, msgsender_MSG, msgvalue_MSG, _blackListedUser_s647);
[L4201]              __ret_0_ := balances_BasicToken[this][_owner_s166];
[L4839]  RET         call dirtyFunds_s647 := balanceOf~address_BasicToken__success(this, msgsender_MSG, msgvalue_MSG, _blackListedUser_s647);
[L4840]  COND FALSE  !(revert)
[L4846]              dirtyFunds_s647 := dirtyFunds_s647;
[L4847]              sum_balances0[this] := sum_balances0[this] - balances_BasicToken[this][_blackListedUser_s647];
[L4848]              balances_BasicToken[this][_blackListedUser_s647] := 0;
[L4849]              sum_balances0[this] := sum_balances0[this] + balances_BasicToken[this][_blackListedUser_s647];
[L4850]              totalSupply__BasicToken[this] := (totalSupply__BasicToken[this] - dirtyFunds_s647) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4851]              assert { :EventEmitted "DestroyedBlackFunds_BlackList" } true;
[L1848]  RET         call destroyBlackFunds~address_BlackList__success(this, msgsender_MSG, msgvalue_MSG, _blackListedUser_s647);
[L1849]              assume !revert && gas >= 0;
[L8611]  RET         call destroyBlackFunds~address_BlackList(this, msgsender_MSG, msgvalue_MSG, _blackListedUser_s647);
[L8673]  RET         call CorralChoice_AlitaToken(this);

[2020-11-24 23:46:26,540 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 23:46:26,540 INFO  L82        PathProgramCache]: Analyzing trace with hash -732505349, now seen corresponding path program 1 times
[2020-11-24 23:46:26,541 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 23:46:26,552 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 23:46:26,611 INFO  L134       CoverageAnalysis]: Checked inductivity of 381 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 381 trivial. 0 not checked.
[2020-11-24 23:46:26,611 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 23:46:26,611 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-24 23:46:26,612 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 23:46:26,612 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-24 23:46:26,612 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=6, Invalid=6, Unknown=0, NotChecked=0, Total=12
[2020-11-24 23:46:26,612 INFO  L87              Difference]: Start difference. First operand 4350 states and 4745 transitions. cyclomatic complexity: 410 Second operand 4 states.
[2020-11-24 23:46:27,024 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 23:46:27,024 INFO  L93              Difference]: Finished difference Result 5290 states and 6021 transitions.
[2020-11-24 23:46:27,024 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-24 23:46:27,024 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 5290 states and 6021 transitions.
[2020-11-24 23:46:27,037 INFO  L131   ngComponentsAnalysis]: Automaton has 3 accepting balls. 18
[2020-11-24 23:46:27,053 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 5290 states to 5093 states and 5815 transitions.
[2020-11-24 23:46:27,053 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 1583
[2020-11-24 23:46:27,053 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 1583
[2020-11-24 23:46:27,053 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 5093 states and 5815 transitions.
[2020-11-24 23:46:27,058 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 23:46:27,058 INFO  L728         BuchiCegarLoop]: Abstraction has 5093 states and 5815 transitions.
[2020-11-24 23:46:27,062 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 5093 states and 5815 transitions.
[2020-11-24 23:46:27,094 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 5093 to 4153.
[2020-11-24 23:46:27,094 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 4153 states.
[2020-11-24 23:46:27,098 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 4153 states to 4153 states and 4538 transitions.
[2020-11-24 23:46:27,098 INFO  L751         BuchiCegarLoop]: Abstraction has 4153 states and 4538 transitions.
[2020-11-24 23:46:27,098 INFO  L631         BuchiCegarLoop]: Abstraction has 4153 states and 4538 transitions.
[2020-11-24 23:46:27,098 INFO  L445         BuchiCegarLoop]: ======== Iteration 6============
[2020-11-24 23:46:27,098 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 4153 states and 4538 transitions.
[2020-11-24 23:46:27,102 INFO  L131   ngComponentsAnalysis]: Automaton has 3 accepting balls. 6
[2020-11-24 23:46:27,103 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 23:46:27,103 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 23:46:27,104 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [8, 8, 8, 8, 8, 8, 8, 8, 8, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 23:46:27,104 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transfer_AlitaToken0 := false;
[L2]                 call_transfer_AlitaToken0 := false;
[L2]     CALL        call main();
[L8663]              assume null == 0;
[L8664]  CALL        call this := FreshRefGenerator__success();
[L3958]              havoc newRef;
[L3959]              assume Alloc[newRef] == false;
[L3960]              Alloc[newRef] := true;
[L3961]              assume newRef != null;
[L8664]  RET         call this := FreshRefGenerator__success();
[L8665]              assume now >= 0;
[L8666]              assume DType[this] == AlitaToken;
[L8667]              assume msgvalue_MSG == 0;
[L8668]              gas := gas - 53000;
[L8669]  CALL        call AlitaToken_AlitaToken(this, msgsender_MSG, msgvalue_MSG);
[L1981]              havoc __exception;
[L1982]              revert := false;
[L1983]  COND FALSE  !(__exception)
[L2012]  CALL        call AlitaToken_AlitaToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4942]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3994]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3977]              assume msgsender_MSG != null;
[L3978]              Balance[this] := 0;
[L3979]              owner_Ownable[this] := null;
[L3981]              owner_Ownable[this] := msgsender_MSG;
[L3994]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3995]  COND FALSE  !(revert)
[L4942]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4943]  COND FALSE  !(revert)
[L4946]  CALL        call Pausable_Pausable__success(this, msgsender_MSG, msgvalue_MSG);
[L4531]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3994]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3977]              assume msgsender_MSG != null;
[L3978]              Balance[this] := 0;
[L3979]              owner_Ownable[this] := null;
[L3981]              owner_Ownable[this] := msgsender_MSG;
[L3994]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3995]  COND FALSE  !(revert)
[L4531]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4532]  COND FALSE  !(revert)
[L4535]  CALL        call Pausable_Pausable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4511]              assume msgsender_MSG != null;
[L4512]              Balance[this] := 0;
[L4513]              paused_Pausable[this] := false;
[L4535]  RET         call Pausable_Pausable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4536]  COND FALSE  !(revert)
[L4946]  RET         call Pausable_Pausable__success(this, msgsender_MSG, msgvalue_MSG);
[L4947]  COND FALSE  !(revert)
[L4950]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4064]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4049]              assume msgsender_MSG != null;
[L4050]              Balance[this] := 0;
[L4064]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  COND FALSE  !(revert)
[L4950]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4951]  COND FALSE  !(revert)
[L4954]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4235]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4064]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4049]              assume msgsender_MSG != null;
[L4050]              Balance[this] := 0;
[L4064]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  COND FALSE  !(revert)
[L4235]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4236]  COND FALSE  !(revert)
[L4239]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4216]              assume msgsender_MSG != null;
[L4217]              Balance[this] := 0;
[L4239]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4240]  COND FALSE  !(revert)
[L4954]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4955]  COND FALSE  !(revert)
[L4958]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4106]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4064]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4049]              assume msgsender_MSG != null;
[L4050]              Balance[this] := 0;
[L4064]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  COND FALSE  !(revert)
[L4106]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4107]  COND FALSE  !(revert)
[L4110]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4084]              assume msgsender_MSG != null;
[L4085]              Balance[this] := 0;
[L4086]              balances_BasicToken[this] := zeroRefintArr();
[L4087]              sum_balances0[this] := 0;
[L4088]              totalSupply__BasicToken[this] := 0;
[L4110]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4111]  COND FALSE  !(revert)
[L4958]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4959]  COND FALSE  !(revert)
[L4962]  CALL        call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4287]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4064]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4049]              assume msgsender_MSG != null;
[L4050]              Balance[this] := 0;
[L4064]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  COND FALSE  !(revert)
[L4287]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4288]  COND FALSE  !(revert)
[L4291]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4235]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4064]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4049]              assume msgsender_MSG != null;
[L4050]              Balance[this] := 0;
[L4064]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  COND FALSE  !(revert)
[L4235]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4236]  COND FALSE  !(revert)
[L4239]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4216]              assume msgsender_MSG != null;
[L4217]              Balance[this] := 0;
[L4239]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4240]  COND FALSE  !(revert)
[L4291]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4292]  COND FALSE  !(revert)
[L4295]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4106]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4064]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4049]              assume msgsender_MSG != null;
[L4050]              Balance[this] := 0;
[L4064]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  COND FALSE  !(revert)
[L4106]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4107]  COND FALSE  !(revert)
[L4110]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4084]              assume msgsender_MSG != null;
[L4085]              Balance[this] := 0;
[L4086]              balances_BasicToken[this] := zeroRefintArr();
[L4087]              sum_balances0[this] := 0;
[L4088]              totalSupply__BasicToken[this] := 0;
[L4110]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4111]  COND FALSE  !(revert)
[L4295]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4296]  COND FALSE  !(revert)
[L4299]  CALL        call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4258]              assume msgsender_MSG != null;
[L4259]              Balance[this] := 0;
[L4260]              allowed_StandardToken[this] := zeroRefRefintArr();
[L4261]              sum_allowed1[this] := 0;
[L4299]  RET         call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4300]  COND FALSE  !(revert)
[L4962]  RET         call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4963]  COND FALSE  !(revert)
[L4966]  CALL        call BlackList_BlackList__success(this, msgsender_MSG, msgvalue_MSG);
[L4711]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3994]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3977]              assume msgsender_MSG != null;
[L3978]              Balance[this] := 0;
[L3979]              owner_Ownable[this] := null;
[L3981]              owner_Ownable[this] := msgsender_MSG;
[L3994]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3995]  COND FALSE  !(revert)
[L4711]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4712]  COND FALSE  !(revert)
[L4715]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4064]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4049]              assume msgsender_MSG != null;
[L4050]              Balance[this] := 0;
[L4064]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  COND FALSE  !(revert)
[L4715]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4716]  COND FALSE  !(revert)
[L4719]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4106]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4064]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4049]              assume msgsender_MSG != null;
[L4050]              Balance[this] := 0;
[L4064]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  COND FALSE  !(revert)
[L4106]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4107]  COND FALSE  !(revert)
[L4110]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4084]              assume msgsender_MSG != null;
[L4085]              Balance[this] := 0;
[L4086]              balances_BasicToken[this] := zeroRefintArr();
[L4087]              sum_balances0[this] := 0;
[L4088]              totalSupply__BasicToken[this] := 0;
[L4110]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4111]  COND FALSE  !(revert)
[L4719]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4720]  COND FALSE  !(revert)
[L4723]  CALL        call BlackList_BlackList_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4683]              assume msgsender_MSG != null;
[L4684]              Balance[this] := 0;
[L4685]              isBlackListed_BlackList[this] := zeroRefboolArr();
[L4723]  RET         call BlackList_BlackList_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4724]  COND FALSE  !(revert)
[L4966]  RET         call BlackList_BlackList__success(this, msgsender_MSG, msgvalue_MSG);
[L4967]  COND FALSE  !(revert)
[L4970]  CALL        call AlitaToken_AlitaToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4888]              assume msgsender_MSG != null;
[L4889]              Balance[this] := 0;
[L4890]              name_AlitaToken[this] := -1110093910;
[L4891]              symbol_AlitaToken[this] := 1234648092;
[L4892]              decimals_AlitaToken[this] := 18;
[L4893]              init_Supply_AlitaToken[this] := 1000000000 * (1000000000000000000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L4894]              upgradedAddress_AlitaToken[this] := null;
[L4895]              deprecated_AlitaToken[this] := false;
[L4897]              totalSupply__BasicToken[this] := init_Supply_AlitaToken[this];
[L4898]              sum_balances0[this] := sum_balances0[this] - balances_BasicToken[this][msgsender_MSG];
[L4899]              balances_BasicToken[this][msgsender_MSG] := totalSupply__BasicToken[this];
[L4900]              sum_balances0[this] := sum_balances0[this] + balances_BasicToken[this][msgsender_MSG];
[L4901]              deprecated_AlitaToken[this] := false;
[L4970]  RET         call AlitaToken_AlitaToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4971]  COND FALSE  !(revert)
[L2012]  RET         call AlitaToken_AlitaToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2013]              assume !revert && gas >= 0;
[L8669]  RET         call AlitaToken_AlitaToken(this, msgsender_MSG, msgvalue_MSG);
[L8670]              assume !revert && gas >= 0;
[L8673]  CALL        call CorralChoice_AlitaToken(this);
[L8433]              havoc msgsender_MSG;
[L8434]              havoc msgvalue_MSG;
[L8435]              havoc choice;
[L8436]              havoc __ret_0_owner;
[L8437]              havoc newOwner_s42;
[L8438]              havoc __ret_0_totalSupply;
[L8439]              havoc _owner_s166;
[L8440]              havoc __ret_0_balanceOf;
[L8441]              havoc _to_s754;
[L8442]              havoc _value_s754;
[L8443]              havoc __ret_0_transfer;
[L8444]              havoc _owner_s885;
[L8445]              havoc _spender_s885;
[L8446]              havoc __ret_0_allowance;
[L8447]              havoc _from_s812;
[L8448]              havoc _to_s812;
[L8449]              havoc _value_s812;
[L8450]              havoc __ret_0_transferFrom;
[L8451]              havoc _spender_s857;
[L8452]              havoc _value_s857;
[L8453]              havoc __ret_0_approve;
[L8454]              havoc _spender_s913;
[L8455]              havoc _addedValue_s913;
[L8456]              havoc __ret_0_increaseApproval;
[L8457]              havoc _spender_s941;
[L8458]              havoc _subtractedValue_s941;
[L8459]              havoc __ret_0_decreaseApproval;
[L8460]              havoc __ret_0_paused;
[L8461]              havoc _maker_s564;
[L8462]              havoc __ret_0_getBlackListStatus;
[L8463]              havoc __ret_0_getOwner;
[L8464]              havoc arg1060_s0;
[L8465]              havoc __ret_0_isBlackListed;
[L8466]              havoc _evilUser_s594;
[L8467]              havoc _clearedUser_s612;
[L8468]              havoc _blackListedUser_s647;
[L8469]              havoc __ret_0_name;
[L8470]              havoc __ret_0_symbol;
[L8471]              havoc __ret_0_decimals;
[L8472]              havoc __ret_0_init_Supply;
[L8473]              havoc __ret_0_upgradedAddress;
[L8474]              havoc __ret_0_deprecated;
[L8475]              havoc _upgradedAddress_s961;
[L8476]              havoc tmpNow;
[L8477]              havoc gas;
[L8478]              assume gas > 4000000 && gas <= 8000000;
[L8479]              tmpNow := now;
[L8480]              havoc now;
[L8481]              assume now > tmpNow;
[L8482]              assume msgsender_MSG != null;
[L8483]              assume DType[msgsender_MSG] != Ownable;
[L8484]              assume DType[msgsender_MSG] != ERC20Basic;
[L8485]              assume DType[msgsender_MSG] != BasicToken;
[L8486]              assume DType[msgsender_MSG] != ERC20;
[L8487]              assume DType[msgsender_MSG] != StandardToken;
[L8488]              assume DType[msgsender_MSG] != Pausable;
[L8489]              assume DType[msgsender_MSG] != UpgradedStandardToken;
[L8490]              assume DType[msgsender_MSG] != BlackList;
[L8491]              assume DType[msgsender_MSG] != AlitaToken;
[L8492]              assume DType[msgsender_MSG] != SafeMath;
[L8493]              Alloc[msgsender_MSG] := true;
[L8494]  COND FALSE  !(choice == 26)
[L8500]  COND FALSE  !(choice == 25)
[L8506]  COND FALSE  !(choice == 24)
[L8512]  COND FALSE  !(choice == 23)
[L8518]  COND FALSE  !(choice == 22)
[L8525]  COND FALSE  !(choice == 21)
[L8531]  COND FALSE  !(choice == 20)
[L8538]  COND FALSE  !(choice == 19)
[L8545]  COND FALSE  !(choice == 18)
[L8552]  COND FALSE  !(choice == 17)
[L8559]  COND FALSE  !(choice == 16)
[L8565]  COND FALSE  !(choice == 15)
[L8571]  COND FALSE  !(choice == 14)
[L8577]  COND FALSE  !(choice == 13)
[L8583]  COND FALSE  !(choice == 12)
[L8589]  COND FALSE  !(choice == 11)
[L8595]  COND FALSE  !(choice == 10)
[L8601]  COND FALSE  !(choice == 9)
[L8607]  COND FALSE  !(choice == 8)
[L8613]  COND FALSE  !(choice == 7)
[L8619]  COND FALSE  !(choice == 6)
[L8625]  COND FALSE  !(choice == 5)
[L8631]  COND FALSE  !(choice == 4)
[L8637]  COND FALSE  !(choice == 3)
[L8643]  COND FALSE  !(choice == 2)
[L8649]  COND TRUE   choice == 1
[L8650]              gas := gas - 21000;
[L8651]  COND TRUE   gas >= 0
[L8652]              assume msgvalue_MSG == 0;
[L8653]  CALL        call deprecate~address_AlitaToken(this, msgsender_MSG, msgvalue_MSG, _upgradedAddress_s961);
[L2457]              havoc __exception;
[L2458]              revert := false;
[L2459]  COND FALSE  !(__exception)
[L2488]  CALL        call deprecate~address_AlitaToken__success(this, msgsender_MSG, msgvalue_MSG, _upgradedAddress_s961);
[L5490]  CALL        call onlyOwner_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L7432]  COND FALSE  !(!(msgsender_MSG == owner_Ownable[this]))
[L5490]  RET         call onlyOwner_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L5491]  COND FALSE  !(revert)
[L5494]              deprecated_AlitaToken[this] := true;
[L5495]              upgradedAddress_AlitaToken[this] := _upgradedAddress_s961;
[L5496]              assert { :EventEmitted "Deprecate_AlitaToken" } true;
[L2488]  RET         call deprecate~address_AlitaToken__success(this, msgsender_MSG, msgvalue_MSG, _upgradedAddress_s961);
[L2489]              assume !revert && gas >= 0;
[L8653]  RET         call deprecate~address_AlitaToken(this, msgsender_MSG, msgvalue_MSG, _upgradedAddress_s961);
[L8673]  RET         call CorralChoice_AlitaToken(this);
[L8673]  CALL        call CorralChoice_AlitaToken(this);
[L8433]              havoc msgsender_MSG;
[L8434]              havoc msgvalue_MSG;
[L8435]              havoc choice;
[L8436]              havoc __ret_0_owner;
[L8437]              havoc newOwner_s42;
[L8438]              havoc __ret_0_totalSupply;
[L8439]              havoc _owner_s166;
[L8440]              havoc __ret_0_balanceOf;
[L8441]              havoc _to_s754;
[L8442]              havoc _value_s754;
[L8443]              havoc __ret_0_transfer;
[L8444]              havoc _owner_s885;
[L8445]              havoc _spender_s885;
[L8446]              havoc __ret_0_allowance;
[L8447]              havoc _from_s812;
[L8448]              havoc _to_s812;
[L8449]              havoc _value_s812;
[L8450]              havoc __ret_0_transferFrom;
[L8451]              havoc _spender_s857;
[L8452]              havoc _value_s857;
[L8453]              havoc __ret_0_approve;
[L8454]              havoc _spender_s913;
[L8455]              havoc _addedValue_s913;
[L8456]              havoc __ret_0_increaseApproval;
[L8457]              havoc _spender_s941;
[L8458]              havoc _subtractedValue_s941;
[L8459]              havoc __ret_0_decreaseApproval;
[L8460]              havoc __ret_0_paused;
[L8461]              havoc _maker_s564;
[L8462]              havoc __ret_0_getBlackListStatus;
[L8463]              havoc __ret_0_getOwner;
[L8464]              havoc arg1060_s0;
[L8465]              havoc __ret_0_isBlackListed;
[L8466]              havoc _evilUser_s594;
[L8467]              havoc _clearedUser_s612;
[L8468]              havoc _blackListedUser_s647;
[L8469]              havoc __ret_0_name;
[L8470]              havoc __ret_0_symbol;
[L8471]              havoc __ret_0_decimals;
[L8472]              havoc __ret_0_init_Supply;
[L8473]              havoc __ret_0_upgradedAddress;
[L8474]              havoc __ret_0_deprecated;
[L8475]              havoc _upgradedAddress_s961;
[L8476]              havoc tmpNow;
[L8477]              havoc gas;
[L8478]              assume gas > 4000000 && gas <= 8000000;
[L8479]              tmpNow := now;
[L8480]              havoc now;
[L8481]              assume now > tmpNow;
[L8482]              assume msgsender_MSG != null;
[L8483]              assume DType[msgsender_MSG] != Ownable;
[L8484]              assume DType[msgsender_MSG] != ERC20Basic;
[L8485]              assume DType[msgsender_MSG] != BasicToken;
[L8486]              assume DType[msgsender_MSG] != ERC20;
[L8487]              assume DType[msgsender_MSG] != StandardToken;
[L8488]              assume DType[msgsender_MSG] != Pausable;
[L8489]              assume DType[msgsender_MSG] != UpgradedStandardToken;
[L8490]              assume DType[msgsender_MSG] != BlackList;
[L8491]              assume DType[msgsender_MSG] != AlitaToken;
[L8492]              assume DType[msgsender_MSG] != SafeMath;
[L8493]              Alloc[msgsender_MSG] := true;
[L8494]  COND FALSE  !(choice == 26)
[L8500]  COND FALSE  !(choice == 25)
[L8506]  COND FALSE  !(choice == 24)
[L8512]  COND FALSE  !(choice == 23)
[L8518]  COND TRUE   choice == 22
[L8519]              gas := gas - 21000;
[L8520]  COND TRUE   gas >= 0
[L8521]              assume _value_s754 >= 0 && _value_s754 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L8522]              assume msgvalue_MSG == 0;
[L8523]  CALL        call __ret_0_transfer := transfer~address~uint256_AlitaToken(this, msgsender_MSG, msgvalue_MSG, _to_s754, _value_s754);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG != _to_s754 && (_value_s754 > balances_BasicToken[this][msgsender_MSG] || balances_BasicToken[this][_to_s754] + _value_s754 >= 115792089237316195423570985008687907853269984665640564039457584007913129639936)) && _value_s754 >= 0) && _value_s754 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BasicToken[this][_to_s754] >= 0) && balances_BasicToken[this][_to_s754] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BasicToken[this][msgsender_MSG] >= 0) && balances_BasicToken[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_AlitaToken0 := true;
[L2]                 call_transfer_AlitaToken0 := false;
[L2]                 revert := revert_hold;
[L2049]              havoc __exception;
[L2050]              revert := false;
[L2051]  COND FALSE  !(__exception)
[L2080]  CALL        call __ret_0_ := transfer~address~uint256_AlitaToken__success(this, msgsender_MSG, msgvalue_MSG, _to_s754, _value_s754);
[L5022]  CALL        call whenNotPaused_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L7448]  COND FALSE  !(!!paused_Pausable[this])
[L5022]  RET         call whenNotPaused_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L5023]  COND FALSE  !(revert)
[L5026]  COND FALSE  !(!!isBlackListed_BlackList[this][msgsender_MSG])
[L5030]  COND FALSE  !(!!isBlackListed_BlackList[this][_to_s754])
[L5034]  COND TRUE   deprecated_AlitaToken[this]
[L5035]              assume DType[upgradedAddress_AlitaToken[this]] == UpgradedStandardToken;
[L5036]              __var_12 := upgradedAddress_AlitaToken[this];
[L5038]              __ret_0_ := __var_11;
[L2080]  RET         call __ret_0_ := transfer~address~uint256_AlitaToken__success(this, msgsender_MSG, msgvalue_MSG, _to_s754, _value_s754);
[L2081]              assume !revert && gas >= 0;
[L8523]  RET         call __ret_0_transfer := transfer~address~uint256_AlitaToken(this, msgsender_MSG, msgvalue_MSG, _to_s754, _value_s754);
[L8673]  RET         call CorralChoice_AlitaToken(this);

Loop:
[L8673]  CALL        call CorralChoice_AlitaToken(this);
[L8433]              havoc msgsender_MSG;
[L8434]              havoc msgvalue_MSG;
[L8435]              havoc choice;
[L8436]              havoc __ret_0_owner;
[L8437]              havoc newOwner_s42;
[L8438]              havoc __ret_0_totalSupply;
[L8439]              havoc _owner_s166;
[L8440]              havoc __ret_0_balanceOf;
[L8441]              havoc _to_s754;
[L8442]              havoc _value_s754;
[L8443]              havoc __ret_0_transfer;
[L8444]              havoc _owner_s885;
[L8445]              havoc _spender_s885;
[L8446]              havoc __ret_0_allowance;
[L8447]              havoc _from_s812;
[L8448]              havoc _to_s812;
[L8449]              havoc _value_s812;
[L8450]              havoc __ret_0_transferFrom;
[L8451]              havoc _spender_s857;
[L8452]              havoc _value_s857;
[L8453]              havoc __ret_0_approve;
[L8454]              havoc _spender_s913;
[L8455]              havoc _addedValue_s913;
[L8456]              havoc __ret_0_increaseApproval;
[L8457]              havoc _spender_s941;
[L8458]              havoc _subtractedValue_s941;
[L8459]              havoc __ret_0_decreaseApproval;
[L8460]              havoc __ret_0_paused;
[L8461]              havoc _maker_s564;
[L8462]              havoc __ret_0_getBlackListStatus;
[L8463]              havoc __ret_0_getOwner;
[L8464]              havoc arg1060_s0;
[L8465]              havoc __ret_0_isBlackListed;
[L8466]              havoc _evilUser_s594;
[L8467]              havoc _clearedUser_s612;
[L8468]              havoc _blackListedUser_s647;
[L8469]              havoc __ret_0_name;
[L8470]              havoc __ret_0_symbol;
[L8471]              havoc __ret_0_decimals;
[L8472]              havoc __ret_0_init_Supply;
[L8473]              havoc __ret_0_upgradedAddress;
[L8474]              havoc __ret_0_deprecated;
[L8475]              havoc _upgradedAddress_s961;
[L8476]              havoc tmpNow;
[L8477]              havoc gas;
[L8478]              assume gas > 4000000 && gas <= 8000000;
[L8479]              tmpNow := now;
[L8480]              havoc now;
[L8481]              assume now > tmpNow;
[L8482]              assume msgsender_MSG != null;
[L8483]              assume DType[msgsender_MSG] != Ownable;
[L8484]              assume DType[msgsender_MSG] != ERC20Basic;
[L8485]              assume DType[msgsender_MSG] != BasicToken;
[L8486]              assume DType[msgsender_MSG] != ERC20;
[L8487]              assume DType[msgsender_MSG] != StandardToken;
[L8488]              assume DType[msgsender_MSG] != Pausable;
[L8489]              assume DType[msgsender_MSG] != UpgradedStandardToken;
[L8490]              assume DType[msgsender_MSG] != BlackList;
[L8491]              assume DType[msgsender_MSG] != AlitaToken;
[L8492]              assume DType[msgsender_MSG] != SafeMath;
[L8493]              Alloc[msgsender_MSG] := true;
[L8494]  COND TRUE   choice == 26
[L8495]              gas := gas - 21000;
[L8496]  COND FALSE  !(gas >= 0)
[L8673]  RET         call CorralChoice_AlitaToken(this);

[2020-11-24 23:46:27,108 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 23:46:27,108 INFO  L82        PathProgramCache]: Analyzing trace with hash -1618309405, now seen corresponding path program 1 times
[2020-11-24 23:46:27,109 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 23:46:27,124 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 23:46:27,140 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 23:46:27,235 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 23:46:27,235 INFO  L82        PathProgramCache]: Analyzing trace with hash -3189301, now seen corresponding path program 1 times
[2020-11-24 23:46:27,236 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 23:46:27,239 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 23:46:27,246 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 23:46:27,246 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 23:46:27,246 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-24 23:46:27,246 INFO  L1008  eck$LassoCheckResult]: loop already infeasible
[2020-11-24 23:46:27,247 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-24 23:46:27,247 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=6, Invalid=6, Unknown=0, NotChecked=0, Total=12
[2020-11-24 23:46:27,247 INFO  L87              Difference]: Start difference. First operand 4153 states and 4538 transitions. cyclomatic complexity: 400 Second operand 4 states.
[2020-11-24 23:46:27,744 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 23:46:27,745 INFO  L93              Difference]: Finished difference Result 4310 states and 4692 transitions.
[2020-11-24 23:46:27,745 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-24 23:46:27,745 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 4310 states and 4692 transitions.
[2020-11-24 23:46:27,789 INFO  L131   ngComponentsAnalysis]: Automaton has 3 accepting balls. 12
[2020-11-24 23:46:27,803 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 4310 states to 4310 states and 4692 transitions.
[2020-11-24 23:46:27,803 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 1346
[2020-11-24 23:46:27,804 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 1346
[2020-11-24 23:46:27,804 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 4310 states and 4692 transitions.
[2020-11-24 23:46:27,806 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 23:46:27,806 INFO  L728         BuchiCegarLoop]: Abstraction has 4310 states and 4692 transitions.
[2020-11-24 23:46:27,810 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 4310 states and 4692 transitions.
[2020-11-24 23:46:27,831 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 4310 to 4153.
[2020-11-24 23:46:27,831 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 4153 states.
[2020-11-24 23:46:27,835 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 4153 states to 4153 states and 4486 transitions.
[2020-11-24 23:46:27,835 INFO  L751         BuchiCegarLoop]: Abstraction has 4153 states and 4486 transitions.
[2020-11-24 23:46:27,835 INFO  L631         BuchiCegarLoop]: Abstraction has 4153 states and 4486 transitions.
[2020-11-24 23:46:27,835 INFO  L445         BuchiCegarLoop]: ======== Iteration 7============
[2020-11-24 23:46:27,835 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 4153 states and 4486 transitions.
[2020-11-24 23:46:27,841 INFO  L131   ngComponentsAnalysis]: Automaton has 3 accepting balls. 6
[2020-11-24 23:46:27,841 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 23:46:27,841 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 23:46:27,843 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [8, 8, 8, 8, 8, 8, 8, 8, 8, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 23:46:27,843 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transfer_AlitaToken0 := false;
[L2]                 call_transfer_AlitaToken0 := false;
[L2]     CALL        call main();
[L8663]              assume null == 0;
[L8664]  CALL        call this := FreshRefGenerator__success();
[L3958]              havoc newRef;
[L3959]              assume Alloc[newRef] == false;
[L3960]              Alloc[newRef] := true;
[L3961]              assume newRef != null;
[L8664]  RET         call this := FreshRefGenerator__success();
[L8665]              assume now >= 0;
[L8666]              assume DType[this] == AlitaToken;
[L8667]              assume msgvalue_MSG == 0;
[L8668]              gas := gas - 53000;
[L8669]  CALL        call AlitaToken_AlitaToken(this, msgsender_MSG, msgvalue_MSG);
[L1981]              havoc __exception;
[L1982]              revert := false;
[L1983]  COND FALSE  !(__exception)
[L2012]  CALL        call AlitaToken_AlitaToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4942]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3994]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3977]              assume msgsender_MSG != null;
[L3978]              Balance[this] := 0;
[L3979]              owner_Ownable[this] := null;
[L3981]              owner_Ownable[this] := msgsender_MSG;
[L3994]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3995]  COND FALSE  !(revert)
[L4942]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4943]  COND FALSE  !(revert)
[L4946]  CALL        call Pausable_Pausable__success(this, msgsender_MSG, msgvalue_MSG);
[L4531]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3994]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3977]              assume msgsender_MSG != null;
[L3978]              Balance[this] := 0;
[L3979]              owner_Ownable[this] := null;
[L3981]              owner_Ownable[this] := msgsender_MSG;
[L3994]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3995]  COND FALSE  !(revert)
[L4531]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4532]  COND FALSE  !(revert)
[L4535]  CALL        call Pausable_Pausable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4511]              assume msgsender_MSG != null;
[L4512]              Balance[this] := 0;
[L4513]              paused_Pausable[this] := false;
[L4535]  RET         call Pausable_Pausable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4536]  COND FALSE  !(revert)
[L4946]  RET         call Pausable_Pausable__success(this, msgsender_MSG, msgvalue_MSG);
[L4947]  COND FALSE  !(revert)
[L4950]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4064]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4049]              assume msgsender_MSG != null;
[L4050]              Balance[this] := 0;
[L4064]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  COND FALSE  !(revert)
[L4950]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4951]  COND FALSE  !(revert)
[L4954]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4235]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4064]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4049]              assume msgsender_MSG != null;
[L4050]              Balance[this] := 0;
[L4064]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  COND FALSE  !(revert)
[L4235]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4236]  COND FALSE  !(revert)
[L4239]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4216]              assume msgsender_MSG != null;
[L4217]              Balance[this] := 0;
[L4239]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4240]  COND FALSE  !(revert)
[L4954]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4955]  COND FALSE  !(revert)
[L4958]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4106]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4064]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4049]              assume msgsender_MSG != null;
[L4050]              Balance[this] := 0;
[L4064]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  COND FALSE  !(revert)
[L4106]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4107]  COND FALSE  !(revert)
[L4110]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4084]              assume msgsender_MSG != null;
[L4085]              Balance[this] := 0;
[L4086]              balances_BasicToken[this] := zeroRefintArr();
[L4087]              sum_balances0[this] := 0;
[L4088]              totalSupply__BasicToken[this] := 0;
[L4110]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4111]  COND FALSE  !(revert)
[L4958]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4959]  COND FALSE  !(revert)
[L4962]  CALL        call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4287]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4064]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4049]              assume msgsender_MSG != null;
[L4050]              Balance[this] := 0;
[L4064]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  COND FALSE  !(revert)
[L4287]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4288]  COND FALSE  !(revert)
[L4291]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4235]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4064]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4049]              assume msgsender_MSG != null;
[L4050]              Balance[this] := 0;
[L4064]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  COND FALSE  !(revert)
[L4235]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4236]  COND FALSE  !(revert)
[L4239]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4216]              assume msgsender_MSG != null;
[L4217]              Balance[this] := 0;
[L4239]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4240]  COND FALSE  !(revert)
[L4291]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4292]  COND FALSE  !(revert)
[L4295]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4106]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4064]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4049]              assume msgsender_MSG != null;
[L4050]              Balance[this] := 0;
[L4064]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  COND FALSE  !(revert)
[L4106]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4107]  COND FALSE  !(revert)
[L4110]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4084]              assume msgsender_MSG != null;
[L4085]              Balance[this] := 0;
[L4086]              balances_BasicToken[this] := zeroRefintArr();
[L4087]              sum_balances0[this] := 0;
[L4088]              totalSupply__BasicToken[this] := 0;
[L4110]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4111]  COND FALSE  !(revert)
[L4295]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4296]  COND FALSE  !(revert)
[L4299]  CALL        call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4258]              assume msgsender_MSG != null;
[L4259]              Balance[this] := 0;
[L4260]              allowed_StandardToken[this] := zeroRefRefintArr();
[L4261]              sum_allowed1[this] := 0;
[L4299]  RET         call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4300]  COND FALSE  !(revert)
[L4962]  RET         call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4963]  COND FALSE  !(revert)
[L4966]  CALL        call BlackList_BlackList__success(this, msgsender_MSG, msgvalue_MSG);
[L4711]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3994]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3977]              assume msgsender_MSG != null;
[L3978]              Balance[this] := 0;
[L3979]              owner_Ownable[this] := null;
[L3981]              owner_Ownable[this] := msgsender_MSG;
[L3994]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3995]  COND FALSE  !(revert)
[L4711]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4712]  COND FALSE  !(revert)
[L4715]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4064]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4049]              assume msgsender_MSG != null;
[L4050]              Balance[this] := 0;
[L4064]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  COND FALSE  !(revert)
[L4715]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4716]  COND FALSE  !(revert)
[L4719]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4106]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4064]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4049]              assume msgsender_MSG != null;
[L4050]              Balance[this] := 0;
[L4064]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  COND FALSE  !(revert)
[L4106]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4107]  COND FALSE  !(revert)
[L4110]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4084]              assume msgsender_MSG != null;
[L4085]              Balance[this] := 0;
[L4086]              balances_BasicToken[this] := zeroRefintArr();
[L4087]              sum_balances0[this] := 0;
[L4088]              totalSupply__BasicToken[this] := 0;
[L4110]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4111]  COND FALSE  !(revert)
[L4719]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4720]  COND FALSE  !(revert)
[L4723]  CALL        call BlackList_BlackList_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4683]              assume msgsender_MSG != null;
[L4684]              Balance[this] := 0;
[L4685]              isBlackListed_BlackList[this] := zeroRefboolArr();
[L4723]  RET         call BlackList_BlackList_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4724]  COND FALSE  !(revert)
[L4966]  RET         call BlackList_BlackList__success(this, msgsender_MSG, msgvalue_MSG);
[L4967]  COND FALSE  !(revert)
[L4970]  CALL        call AlitaToken_AlitaToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4888]              assume msgsender_MSG != null;
[L4889]              Balance[this] := 0;
[L4890]              name_AlitaToken[this] := -1110093910;
[L4891]              symbol_AlitaToken[this] := 1234648092;
[L4892]              decimals_AlitaToken[this] := 18;
[L4893]              init_Supply_AlitaToken[this] := 1000000000 * (1000000000000000000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L4894]              upgradedAddress_AlitaToken[this] := null;
[L4895]              deprecated_AlitaToken[this] := false;
[L4897]              totalSupply__BasicToken[this] := init_Supply_AlitaToken[this];
[L4898]              sum_balances0[this] := sum_balances0[this] - balances_BasicToken[this][msgsender_MSG];
[L4899]              balances_BasicToken[this][msgsender_MSG] := totalSupply__BasicToken[this];
[L4900]              sum_balances0[this] := sum_balances0[this] + balances_BasicToken[this][msgsender_MSG];
[L4901]              deprecated_AlitaToken[this] := false;
[L4970]  RET         call AlitaToken_AlitaToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4971]  COND FALSE  !(revert)
[L2012]  RET         call AlitaToken_AlitaToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2013]              assume !revert && gas >= 0;
[L8669]  RET         call AlitaToken_AlitaToken(this, msgsender_MSG, msgvalue_MSG);
[L8670]              assume !revert && gas >= 0;
[L8673]  CALL        call CorralChoice_AlitaToken(this);
[L8433]              havoc msgsender_MSG;
[L8434]              havoc msgvalue_MSG;
[L8435]              havoc choice;
[L8436]              havoc __ret_0_owner;
[L8437]              havoc newOwner_s42;
[L8438]              havoc __ret_0_totalSupply;
[L8439]              havoc _owner_s166;
[L8440]              havoc __ret_0_balanceOf;
[L8441]              havoc _to_s754;
[L8442]              havoc _value_s754;
[L8443]              havoc __ret_0_transfer;
[L8444]              havoc _owner_s885;
[L8445]              havoc _spender_s885;
[L8446]              havoc __ret_0_allowance;
[L8447]              havoc _from_s812;
[L8448]              havoc _to_s812;
[L8449]              havoc _value_s812;
[L8450]              havoc __ret_0_transferFrom;
[L8451]              havoc _spender_s857;
[L8452]              havoc _value_s857;
[L8453]              havoc __ret_0_approve;
[L8454]              havoc _spender_s913;
[L8455]              havoc _addedValue_s913;
[L8456]              havoc __ret_0_increaseApproval;
[L8457]              havoc _spender_s941;
[L8458]              havoc _subtractedValue_s941;
[L8459]              havoc __ret_0_decreaseApproval;
[L8460]              havoc __ret_0_paused;
[L8461]              havoc _maker_s564;
[L8462]              havoc __ret_0_getBlackListStatus;
[L8463]              havoc __ret_0_getOwner;
[L8464]              havoc arg1060_s0;
[L8465]              havoc __ret_0_isBlackListed;
[L8466]              havoc _evilUser_s594;
[L8467]              havoc _clearedUser_s612;
[L8468]              havoc _blackListedUser_s647;
[L8469]              havoc __ret_0_name;
[L8470]              havoc __ret_0_symbol;
[L8471]              havoc __ret_0_decimals;
[L8472]              havoc __ret_0_init_Supply;
[L8473]              havoc __ret_0_upgradedAddress;
[L8474]              havoc __ret_0_deprecated;
[L8475]              havoc _upgradedAddress_s961;
[L8476]              havoc tmpNow;
[L8477]              havoc gas;
[L8478]              assume gas > 4000000 && gas <= 8000000;
[L8479]              tmpNow := now;
[L8480]              havoc now;
[L8481]              assume now > tmpNow;
[L8482]              assume msgsender_MSG != null;
[L8483]              assume DType[msgsender_MSG] != Ownable;
[L8484]              assume DType[msgsender_MSG] != ERC20Basic;
[L8485]              assume DType[msgsender_MSG] != BasicToken;
[L8486]              assume DType[msgsender_MSG] != ERC20;
[L8487]              assume DType[msgsender_MSG] != StandardToken;
[L8488]              assume DType[msgsender_MSG] != Pausable;
[L8489]              assume DType[msgsender_MSG] != UpgradedStandardToken;
[L8490]              assume DType[msgsender_MSG] != BlackList;
[L8491]              assume DType[msgsender_MSG] != AlitaToken;
[L8492]              assume DType[msgsender_MSG] != SafeMath;
[L8493]              Alloc[msgsender_MSG] := true;
[L8494]  COND FALSE  !(choice == 26)
[L8500]  COND FALSE  !(choice == 25)
[L8506]  COND FALSE  !(choice == 24)
[L8512]  COND FALSE  !(choice == 23)
[L8518]  COND FALSE  !(choice == 22)
[L8525]  COND FALSE  !(choice == 21)
[L8531]  COND FALSE  !(choice == 20)
[L8538]  COND FALSE  !(choice == 19)
[L8545]  COND FALSE  !(choice == 18)
[L8552]  COND FALSE  !(choice == 17)
[L8559]  COND FALSE  !(choice == 16)
[L8565]  COND FALSE  !(choice == 15)
[L8571]  COND FALSE  !(choice == 14)
[L8577]  COND FALSE  !(choice == 13)
[L8583]  COND FALSE  !(choice == 12)
[L8589]  COND FALSE  !(choice == 11)
[L8595]  COND FALSE  !(choice == 10)
[L8601]  COND FALSE  !(choice == 9)
[L8607]  COND FALSE  !(choice == 8)
[L8613]  COND FALSE  !(choice == 7)
[L8619]  COND FALSE  !(choice == 6)
[L8625]  COND FALSE  !(choice == 5)
[L8631]  COND FALSE  !(choice == 4)
[L8637]  COND FALSE  !(choice == 3)
[L8643]  COND FALSE  !(choice == 2)
[L8649]  COND TRUE   choice == 1
[L8650]              gas := gas - 21000;
[L8651]  COND TRUE   gas >= 0
[L8652]              assume msgvalue_MSG == 0;
[L8653]  CALL        call deprecate~address_AlitaToken(this, msgsender_MSG, msgvalue_MSG, _upgradedAddress_s961);
[L2457]              havoc __exception;
[L2458]              revert := false;
[L2459]  COND FALSE  !(__exception)
[L2488]  CALL        call deprecate~address_AlitaToken__success(this, msgsender_MSG, msgvalue_MSG, _upgradedAddress_s961);
[L5490]  CALL        call onlyOwner_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L7432]  COND FALSE  !(!(msgsender_MSG == owner_Ownable[this]))
[L5490]  RET         call onlyOwner_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L5491]  COND FALSE  !(revert)
[L5494]              deprecated_AlitaToken[this] := true;
[L5495]              upgradedAddress_AlitaToken[this] := _upgradedAddress_s961;
[L5496]              assert { :EventEmitted "Deprecate_AlitaToken" } true;
[L2488]  RET         call deprecate~address_AlitaToken__success(this, msgsender_MSG, msgvalue_MSG, _upgradedAddress_s961);
[L2489]              assume !revert && gas >= 0;
[L8653]  RET         call deprecate~address_AlitaToken(this, msgsender_MSG, msgvalue_MSG, _upgradedAddress_s961);
[L8673]  RET         call CorralChoice_AlitaToken(this);
[L8673]  CALL        call CorralChoice_AlitaToken(this);
[L8433]              havoc msgsender_MSG;
[L8434]              havoc msgvalue_MSG;
[L8435]              havoc choice;
[L8436]              havoc __ret_0_owner;
[L8437]              havoc newOwner_s42;
[L8438]              havoc __ret_0_totalSupply;
[L8439]              havoc _owner_s166;
[L8440]              havoc __ret_0_balanceOf;
[L8441]              havoc _to_s754;
[L8442]              havoc _value_s754;
[L8443]              havoc __ret_0_transfer;
[L8444]              havoc _owner_s885;
[L8445]              havoc _spender_s885;
[L8446]              havoc __ret_0_allowance;
[L8447]              havoc _from_s812;
[L8448]              havoc _to_s812;
[L8449]              havoc _value_s812;
[L8450]              havoc __ret_0_transferFrom;
[L8451]              havoc _spender_s857;
[L8452]              havoc _value_s857;
[L8453]              havoc __ret_0_approve;
[L8454]              havoc _spender_s913;
[L8455]              havoc _addedValue_s913;
[L8456]              havoc __ret_0_increaseApproval;
[L8457]              havoc _spender_s941;
[L8458]              havoc _subtractedValue_s941;
[L8459]              havoc __ret_0_decreaseApproval;
[L8460]              havoc __ret_0_paused;
[L8461]              havoc _maker_s564;
[L8462]              havoc __ret_0_getBlackListStatus;
[L8463]              havoc __ret_0_getOwner;
[L8464]              havoc arg1060_s0;
[L8465]              havoc __ret_0_isBlackListed;
[L8466]              havoc _evilUser_s594;
[L8467]              havoc _clearedUser_s612;
[L8468]              havoc _blackListedUser_s647;
[L8469]              havoc __ret_0_name;
[L8470]              havoc __ret_0_symbol;
[L8471]              havoc __ret_0_decimals;
[L8472]              havoc __ret_0_init_Supply;
[L8473]              havoc __ret_0_upgradedAddress;
[L8474]              havoc __ret_0_deprecated;
[L8475]              havoc _upgradedAddress_s961;
[L8476]              havoc tmpNow;
[L8477]              havoc gas;
[L8478]              assume gas > 4000000 && gas <= 8000000;
[L8479]              tmpNow := now;
[L8480]              havoc now;
[L8481]              assume now > tmpNow;
[L8482]              assume msgsender_MSG != null;
[L8483]              assume DType[msgsender_MSG] != Ownable;
[L8484]              assume DType[msgsender_MSG] != ERC20Basic;
[L8485]              assume DType[msgsender_MSG] != BasicToken;
[L8486]              assume DType[msgsender_MSG] != ERC20;
[L8487]              assume DType[msgsender_MSG] != StandardToken;
[L8488]              assume DType[msgsender_MSG] != Pausable;
[L8489]              assume DType[msgsender_MSG] != UpgradedStandardToken;
[L8490]              assume DType[msgsender_MSG] != BlackList;
[L8491]              assume DType[msgsender_MSG] != AlitaToken;
[L8492]              assume DType[msgsender_MSG] != SafeMath;
[L8493]              Alloc[msgsender_MSG] := true;
[L8494]  COND FALSE  !(choice == 26)
[L8500]  COND FALSE  !(choice == 25)
[L8506]  COND FALSE  !(choice == 24)
[L8512]  COND FALSE  !(choice == 23)
[L8518]  COND TRUE   choice == 22
[L8519]              gas := gas - 21000;
[L8520]  COND TRUE   gas >= 0
[L8521]              assume _value_s754 >= 0 && _value_s754 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L8522]              assume msgvalue_MSG == 0;
[L8523]  CALL        call __ret_0_transfer := transfer~address~uint256_AlitaToken(this, msgsender_MSG, msgvalue_MSG, _to_s754, _value_s754);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG != _to_s754 && (_value_s754 > balances_BasicToken[this][msgsender_MSG] || balances_BasicToken[this][_to_s754] + _value_s754 >= 115792089237316195423570985008687907853269984665640564039457584007913129639936)) && _value_s754 >= 0) && _value_s754 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BasicToken[this][_to_s754] >= 0) && balances_BasicToken[this][_to_s754] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BasicToken[this][msgsender_MSG] >= 0) && balances_BasicToken[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_AlitaToken0 := true;
[L2]                 call_transfer_AlitaToken0 := false;
[L2]                 revert := revert_hold;
[L2049]              havoc __exception;
[L2050]              revert := false;
[L2051]  COND FALSE  !(__exception)
[L2080]  CALL        call __ret_0_ := transfer~address~uint256_AlitaToken__success(this, msgsender_MSG, msgvalue_MSG, _to_s754, _value_s754);
[L5022]  CALL        call whenNotPaused_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L7448]  COND FALSE  !(!!paused_Pausable[this])
[L5022]  RET         call whenNotPaused_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L5023]  COND FALSE  !(revert)
[L5026]  COND FALSE  !(!!isBlackListed_BlackList[this][msgsender_MSG])
[L5030]  COND FALSE  !(!!isBlackListed_BlackList[this][_to_s754])
[L5034]  COND TRUE   deprecated_AlitaToken[this]
[L5035]              assume DType[upgradedAddress_AlitaToken[this]] == UpgradedStandardToken;
[L5036]              __var_12 := upgradedAddress_AlitaToken[this];
[L5038]              __ret_0_ := __var_11;
[L2080]  RET         call __ret_0_ := transfer~address~uint256_AlitaToken__success(this, msgsender_MSG, msgvalue_MSG, _to_s754, _value_s754);
[L2081]              assume !revert && gas >= 0;
[L8523]  RET         call __ret_0_transfer := transfer~address~uint256_AlitaToken(this, msgsender_MSG, msgvalue_MSG, _to_s754, _value_s754);
[L8673]  RET         call CorralChoice_AlitaToken(this);

Loop:
[L8673]  CALL        call CorralChoice_AlitaToken(this);
[L8433]              havoc msgsender_MSG;
[L8434]              havoc msgvalue_MSG;
[L8435]              havoc choice;
[L8436]              havoc __ret_0_owner;
[L8437]              havoc newOwner_s42;
[L8438]              havoc __ret_0_totalSupply;
[L8439]              havoc _owner_s166;
[L8440]              havoc __ret_0_balanceOf;
[L8441]              havoc _to_s754;
[L8442]              havoc _value_s754;
[L8443]              havoc __ret_0_transfer;
[L8444]              havoc _owner_s885;
[L8445]              havoc _spender_s885;
[L8446]              havoc __ret_0_allowance;
[L8447]              havoc _from_s812;
[L8448]              havoc _to_s812;
[L8449]              havoc _value_s812;
[L8450]              havoc __ret_0_transferFrom;
[L8451]              havoc _spender_s857;
[L8452]              havoc _value_s857;
[L8453]              havoc __ret_0_approve;
[L8454]              havoc _spender_s913;
[L8455]              havoc _addedValue_s913;
[L8456]              havoc __ret_0_increaseApproval;
[L8457]              havoc _spender_s941;
[L8458]              havoc _subtractedValue_s941;
[L8459]              havoc __ret_0_decreaseApproval;
[L8460]              havoc __ret_0_paused;
[L8461]              havoc _maker_s564;
[L8462]              havoc __ret_0_getBlackListStatus;
[L8463]              havoc __ret_0_getOwner;
[L8464]              havoc arg1060_s0;
[L8465]              havoc __ret_0_isBlackListed;
[L8466]              havoc _evilUser_s594;
[L8467]              havoc _clearedUser_s612;
[L8468]              havoc _blackListedUser_s647;
[L8469]              havoc __ret_0_name;
[L8470]              havoc __ret_0_symbol;
[L8471]              havoc __ret_0_decimals;
[L8472]              havoc __ret_0_init_Supply;
[L8473]              havoc __ret_0_upgradedAddress;
[L8474]              havoc __ret_0_deprecated;
[L8475]              havoc _upgradedAddress_s961;
[L8476]              havoc tmpNow;
[L8477]              havoc gas;
[L8478]              assume gas > 4000000 && gas <= 8000000;
[L8479]              tmpNow := now;
[L8480]              havoc now;
[L8481]              assume now > tmpNow;
[L8482]              assume msgsender_MSG != null;
[L8483]              assume DType[msgsender_MSG] != Ownable;
[L8484]              assume DType[msgsender_MSG] != ERC20Basic;
[L8485]              assume DType[msgsender_MSG] != BasicToken;
[L8486]              assume DType[msgsender_MSG] != ERC20;
[L8487]              assume DType[msgsender_MSG] != StandardToken;
[L8488]              assume DType[msgsender_MSG] != Pausable;
[L8489]              assume DType[msgsender_MSG] != UpgradedStandardToken;
[L8490]              assume DType[msgsender_MSG] != BlackList;
[L8491]              assume DType[msgsender_MSG] != AlitaToken;
[L8492]              assume DType[msgsender_MSG] != SafeMath;
[L8493]              Alloc[msgsender_MSG] := true;
[L8494]  COND FALSE  !(choice == 26)
[L8500]  COND FALSE  !(choice == 25)
[L8506]  COND FALSE  !(choice == 24)
[L8512]  COND FALSE  !(choice == 23)
[L8518]  COND FALSE  !(choice == 22)
[L8525]  COND FALSE  !(choice == 21)
[L8531]  COND FALSE  !(choice == 20)
[L8538]  COND FALSE  !(choice == 19)
[L8545]  COND FALSE  !(choice == 18)
[L8552]  COND FALSE  !(choice == 17)
[L8559]  COND FALSE  !(choice == 16)
[L8565]  COND FALSE  !(choice == 15)
[L8571]  COND FALSE  !(choice == 14)
[L8577]  COND FALSE  !(choice == 13)
[L8583]  COND FALSE  !(choice == 12)
[L8589]  COND FALSE  !(choice == 11)
[L8595]  COND FALSE  !(choice == 10)
[L8601]  COND FALSE  !(choice == 9)
[L8607]  COND FALSE  !(choice == 8)
[L8613]  COND FALSE  !(choice == 7)
[L8619]  COND FALSE  !(choice == 6)
[L8625]  COND FALSE  !(choice == 5)
[L8631]  COND FALSE  !(choice == 4)
[L8637]  COND FALSE  !(choice == 3)
[L8643]  COND FALSE  !(choice == 2)
[L8649]  COND TRUE   choice == 1
[L8650]              gas := gas - 21000;
[L8651]  COND TRUE   gas >= 0
[L8652]              assume msgvalue_MSG == 0;
[L8653]  CALL        call deprecate~address_AlitaToken(this, msgsender_MSG, msgvalue_MSG, _upgradedAddress_s961);
[L2457]              havoc __exception;
[L2458]              revert := false;
[L2459]  COND FALSE  !(__exception)
[L2488]  CALL        call deprecate~address_AlitaToken__success(this, msgsender_MSG, msgvalue_MSG, _upgradedAddress_s961);
[L5490]  CALL        call onlyOwner_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L7432]  COND FALSE  !(!(msgsender_MSG == owner_Ownable[this]))
[L5490]  RET         call onlyOwner_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L5491]  COND FALSE  !(revert)
[L5494]              deprecated_AlitaToken[this] := true;
[L5495]              upgradedAddress_AlitaToken[this] := _upgradedAddress_s961;
[L5496]              assert { :EventEmitted "Deprecate_AlitaToken" } true;
[L2488]  RET         call deprecate~address_AlitaToken__success(this, msgsender_MSG, msgvalue_MSG, _upgradedAddress_s961);
[L2489]              assume !revert && gas >= 0;
[L8653]  RET         call deprecate~address_AlitaToken(this, msgsender_MSG, msgvalue_MSG, _upgradedAddress_s961);
[L8673]  RET         call CorralChoice_AlitaToken(this);

[2020-11-24 23:46:27,859 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 23:46:27,859 INFO  L82        PathProgramCache]: Analyzing trace with hash -1618309405, now seen corresponding path program 2 times
[2020-11-24 23:46:27,860 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 23:46:27,874 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 23:46:27,889 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 23:46:27,938 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 23:46:27,939 INFO  L82        PathProgramCache]: Analyzing trace with hash -1238535493, now seen corresponding path program 1 times
[2020-11-24 23:46:27,940 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 23:46:27,943 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 23:46:27,948 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 23:46:27,957 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 23:46:27,957 INFO  L82        PathProgramCache]: Analyzing trace with hash 2139774361, now seen corresponding path program 1 times
[2020-11-24 23:46:27,958 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 23:46:27,975 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 23:46:27,995 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 139 to 277
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #4: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #1: 71 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 71 to 139
Garbage collection #2: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #3: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #4: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #5: 1093 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1093 to 2179
Garbage collection #6: 2179 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 2179 to 4357
[2020-11-24 23:46:28,240 WARN  L188               SmtUtils]: Spent 102.00 ms on a formula simplification. DAG size of input: 297 DAG size of output: 221
Garbage collection #1: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #2: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #3: 337 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 337 to 673
Garbage collection #4: 673 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 673 to 1327
Garbage collection #5: 1327 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 1327 to 2647
Garbage collection #6: 2647 nodes / 0 free / 0.001s / 0.003s total
Resizing node table from 2647 to 5281
Garbage collection #1: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #2: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #3: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #4: 397 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 397 to 787
Garbage collection #5: 787 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 787 to 1571
[2020-11-24 23:46:28,399 WARN  L188               SmtUtils]: Spent 109.00 ms on a formula simplification that was a NOOP. DAG size: 331
Garbage collection #1: 137 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 137 to 271
Garbage collection #2: 271 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 271 to 541
Garbage collection #3: 541 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 541 to 1069
Garbage collection #4: 1069 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1069 to 2137
Garbage collection #5: 2137 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 2137 to 4273
Garbage collection #6: 4273 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 4273 to 8543
Garbage collection #7: 8543 nodes / 0 free / 0.002s / 0.004s total
Resizing node table from 8543 to 17077
Garbage collection #1: 107 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 107 to 211
Garbage collection #2: 211 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 211 to 421
Garbage collection #3: 421 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 421 to 839
Garbage collection #4: 839 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 839 to 1669
Garbage collection #5: 1669 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 1669 to 3331
Garbage collection #6: 3331 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 3331 to 6661
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 883 to 1759
[2020-11-24 23:46:28,579 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 7 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 7 to 13
Garbage collection #2: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 7 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 7 to 13
Garbage collection #2: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #4: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #5: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 7 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 7 to 13
Garbage collection #2: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #5: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #5: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
[2020-11-24 23:46:29,293 WARN  L188               SmtUtils]: Spent 424.00 ms on a formula simplification. DAG size of input: 271 DAG size of output: 257
Garbage collection #1: 97 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3019 to 6037
Garbage collection #1: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #2: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #3: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #4: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #5: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #1: 41 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 41 to 79
Garbage collection #2: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #3: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #4: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #5: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #1: 107 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 107 to 211
Garbage collection #2: 211 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 211 to 421
Garbage collection #3: 421 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 421 to 839
Garbage collection #4: 839 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 839 to 1669
Garbage collection #5: 1669 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1669 to 3331
Garbage collection #6: 3331 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3331 to 6661
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #4: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #4: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #1: 71 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 71 to 139
Garbage collection #2: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #3: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #4: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #5: 1093 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1093 to 2179
Garbage collection #6: 2179 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2179 to 4357
Garbage collection #1: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #2: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #3: 317 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 317 to 631
Garbage collection #4: 631 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 631 to 1259
Garbage collection #5: 1259 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1259 to 2503
Garbage collection #6: 2503 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2503 to 5003
Garbage collection #1: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #2: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #3: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #4: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #5: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #1: 137 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 137 to 271
Garbage collection #2: 271 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 271 to 541
Garbage collection #3: 541 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 541 to 1069
Garbage collection #4: 1069 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1069 to 2137
Garbage collection #5: 2137 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2137 to 4273
Garbage collection #6: 4273 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4273 to 8543
Garbage collection #7: 8543 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 8543 to 17077
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #4: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 41 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 41 to 79
Garbage collection #2: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #3: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #4: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #5: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #1: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #2: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #3: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #4: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #5: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #6: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #1: 97 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3019 to 6037
[2020-11-24 23:46:31,251 WARN  L188               SmtUtils]: Spent 1.19 s on a formula simplification. DAG size of input: 232 DAG size of output: 222
[2020-11-24 23:46:32,047 WARN  L188               SmtUtils]: Spent 794.00 ms on a formula simplification. DAG size of input: 292 DAG size of output: 277
Garbage collection #1: 107 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 107 to 211
Garbage collection #2: 211 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 211 to 421
Garbage collection #3: 421 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 421 to 839
Garbage collection #4: 839 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 839 to 1669
Garbage collection #5: 1669 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1669 to 3331
Garbage collection #6: 3331 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3331 to 6661
Garbage collection #7: 6661 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 6661 to 13313
Garbage collection #8: 13313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13313 to 26597
Garbage collection #1: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #2: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #3: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #4: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #5: 1093 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1093 to 2179
Garbage collection #6: 2179 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2179 to 4357
Garbage collection #7: 4357 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4357 to 8713
Garbage collection #8: 8713 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 8713 to 17419
Garbage collection #9: 17419 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17419 to 34819
[2020-11-24 23:46:32,312 WARN  L188               SmtUtils]: Spent 228.00 ms on a formula simplification. DAG size of input: 205 DAG size of output: 188
[2020-11-24 23:46:32,581 WARN  L188               SmtUtils]: Spent 268.00 ms on a formula simplification that was a NOOP. DAG size: 366
Garbage collection #1: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #2: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #3: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #4: 1237 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1237 to 2473
Garbage collection #5: 2473 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2473 to 4943
Garbage collection #6: 4943 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4943 to 9883
Garbage collection #7: 9883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 9883 to 19763
[2020-11-24 23:46:33,158 WARN  L188               SmtUtils]: Spent 559.00 ms on a formula simplification. DAG size of input: 307 DAG size of output: 297
[2020-11-24 23:46:34,695 WARN  L188               SmtUtils]: Spent 1.53 s on a formula simplification. DAG size of input: 740 DAG size of output: 717
Garbage collection #1: 307 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 307 to 613
Garbage collection #2: 613 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 613 to 1223
Garbage collection #3: 1223 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 1223 to 2441
Garbage collection #4: 2441 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 2441 to 4877
Garbage collection #5: 4877 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 4877 to 9749
Garbage collection #6: 9749 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 9749 to 19489
Garbage collection #7: 19489 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 19489 to 38977
Garbage collection #1: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #2: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #3: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #4: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #5: 1327 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1327 to 2647
Garbage collection #6: 2647 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2647 to 5281
[2020-11-24 23:46:34,930 WARN  L188               SmtUtils]: Spent 213.00 ms on a formula simplification. DAG size of input: 267 DAG size of output: 264
[2020-11-24 23:46:35,115 WARN  L188               SmtUtils]: Spent 163.00 ms on a formula simplification that was a NOOP. DAG size: 361
Garbage collection #1: 131 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 131 to 257
Garbage collection #2: 257 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 257 to 509
Garbage collection #3: 509 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 509 to 1013
Garbage collection #4: 1013 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1013 to 2017
Garbage collection #5: 2017 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2017 to 4027
Garbage collection #6: 4027 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4027 to 8053
Garbage collection #7: 8053 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 8053 to 16103
Garbage collection #1: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #2: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #3: 317 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 317 to 631
Garbage collection #4: 631 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 631 to 1259
Garbage collection #5: 1259 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1259 to 2503
Garbage collection #6: 2503 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2503 to 5003
[2020-11-24 23:46:35,558 WARN  L188               SmtUtils]: Spent 345.00 ms on a formula simplification. DAG size of input: 363 DAG size of output: 362
Garbage collection #1: 131 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 131 to 257
Garbage collection #2: 257 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 257 to 509
Garbage collection #3: 509 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 509 to 1013
Garbage collection #4: 1013 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1013 to 2017
Garbage collection #5: 2017 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2017 to 4027
Garbage collection #6: 4027 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4027 to 8053
Garbage collection #7: 8053 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 8053 to 16103
Garbage collection #1: 131 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 131 to 257
Garbage collection #2: 257 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 257 to 509
Garbage collection #3: 509 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 509 to 1013
Garbage collection #4: 1013 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1013 to 2017
Garbage collection #5: 2017 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2017 to 4027
Garbage collection #6: 4027 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4027 to 8053
Garbage collection #7: 8053 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 8053 to 16103
[2020-11-24 23:46:35,730 WARN  L188               SmtUtils]: Spent 169.00 ms on a formula simplification that was a NOOP. DAG size: 358
[2020-11-24 23:46:35,747 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 23:46:35,767 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 23:46:35,778 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 24.11 11:46:35 BasicIcfg
[2020-11-24 23:46:35,778 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-24 23:46:35,778 INFO  L168              Benchmark]: Toolchain (without parser) took 24122.24 ms. Allocated memory was 1.0 GB in the beginning and 2.7 GB in the end (delta: 1.7 GB). Free memory was 924.5 MB in the beginning and 911.9 MB in the end (delta: 12.6 MB). Peak memory consumption was 1.8 GB. Max. memory is 15.3 GB.
[2020-11-24 23:46:35,779 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.34 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-24 23:46:35,779 INFO  L168              Benchmark]: Boogie Preprocessor took 113.27 ms. Allocated memory is still 1.0 GB. Free memory was 924.5 MB in the beginning and 908.3 MB in the end (delta: 16.1 MB). Peak memory consumption was 16.1 MB. Max. memory is 15.3 GB.
[2020-11-24 23:46:35,779 INFO  L168              Benchmark]: UtopiaSpecLang took 82.94 ms. Allocated memory is still 1.0 GB. Free memory was 908.3 MB in the beginning and 897.6 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
[2020-11-24 23:46:35,780 INFO  L168              Benchmark]: Boogie Printer took 23.58 ms. Allocated memory is still 1.0 GB. Free memory was 897.6 MB in the beginning and 892.2 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-24 23:46:35,780 INFO  L168              Benchmark]: RCFGBuilder took 1221.11 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 61.9 MB). Free memory was 892.2 MB in the beginning and 931.5 MB in the end (delta: -39.3 MB). Peak memory consumption was 181.3 MB. Max. memory is 15.3 GB.
[2020-11-24 23:46:35,781 INFO  L168              Benchmark]: UtopiaLTL2Aut took 39.39 ms. Allocated memory is still 1.1 GB. Free memory was 931.5 MB in the beginning and 924.6 MB in the end (delta: 6.9 MB). Peak memory consumption was 6.9 MB. Max. memory is 15.3 GB.
[2020-11-24 23:46:35,781 INFO  L168              Benchmark]: BÃ¼chi Program Product took 2426.01 ms. Allocated memory was 1.1 GB in the beginning and 1.3 GB in the end (delta: 192.9 MB). Free memory was 924.6 MB in the beginning and 994.5 MB in the end (delta: -69.8 MB). Peak memory consumption was 506.7 MB. Max. memory is 15.3 GB.
[2020-11-24 23:46:35,782 INFO  L168              Benchmark]: BlockEncodingV2 took 199.60 ms. Allocated memory is still 1.3 GB. Free memory was 994.5 MB in the beginning and 883.5 MB in the end (delta: 111.0 MB). Peak memory consumption was 111.0 MB. Max. memory is 15.3 GB.
[2020-11-24 23:46:35,782 INFO  L168              Benchmark]: BuchiAutomizer took 20013.79 ms. Allocated memory was 1.3 GB in the beginning and 2.7 GB in the end (delta: 1.4 GB). Free memory was 883.5 MB in the beginning and 911.9 MB in the end (delta: -28.4 MB). Peak memory consumption was 1.5 GB. Max. memory is 15.3 GB.
[2020-11-24 23:46:35,786 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    7754 locations, 13823 edges
  - StatisticsResult: Encoded RCFG
    7592 locations, 13427 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.34 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 113.27 ms. Allocated memory is still 1.0 GB. Free memory was 924.5 MB in the beginning and 908.3 MB in the end (delta: 16.1 MB). Peak memory consumption was 16.1 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 82.94 ms. Allocated memory is still 1.0 GB. Free memory was 908.3 MB in the beginning and 897.6 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 23.58 ms. Allocated memory is still 1.0 GB. Free memory was 897.6 MB in the beginning and 892.2 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * RCFGBuilder took 1221.11 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 61.9 MB). Free memory was 892.2 MB in the beginning and 931.5 MB in the end (delta: -39.3 MB). Peak memory consumption was 181.3 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 39.39 ms. Allocated memory is still 1.1 GB. Free memory was 931.5 MB in the beginning and 924.6 MB in the end (delta: 6.9 MB). Peak memory consumption was 6.9 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 2426.01 ms. Allocated memory was 1.1 GB in the beginning and 1.3 GB in the end (delta: 192.9 MB). Free memory was 924.6 MB in the beginning and 994.5 MB in the end (delta: -69.8 MB). Peak memory consumption was 506.7 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 199.60 ms. Allocated memory is still 1.3 GB. Free memory was 994.5 MB in the beginning and 883.5 MB in the end (delta: 111.0 MB). Peak memory consumption was 111.0 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 20013.79 ms. Allocated memory was 1.3 GB in the beginning and 2.7 GB in the end (delta: 1.4 GB). Free memory was 883.5 MB in the beginning and 911.9 MB in the end (delta: -28.4 MB). Peak memory consumption was 1.5 GB. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    3163 locations, 4236 edges
  - StatisticsResult: BuchiProgram size
    7754 locations, 13823 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 6 terminating modules (6 trivial, 0 deterministic, 0 nondeterministic) and one nonterminating remainder module.6 modules have a trivial ranking function, the largest among these consists of 21 locations. The remainder module has 4153 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 19.9s and 7 iterations.  TraceHistogramMax:8. Analysis of lassos took 9.3s. Construction of modules took 7.6s. BÃ¼chi inclusion checks took 2.1s. Highest rank in rank-based complementation 0. Minimization of det autom 6. Minimization of nondet autom 0. Automata minimization 0.2s AutomataMinimizationTime, 6 MinimizatonAttempts, 1834 StatesRemovedByMinimization, 6 NontrivialMinimizations. Non-live state removal took 0.2s Buchi closure took 0.0s. Biggest automaton had 4780 states and ocurred in iteration 1.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 30107 SDtfs, 29546 SDslu, 40863 SDs, 0 SdLazy, 99780 SolverSat, 3711 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 7.6s Time	LassoAnalysisResults: nont1 unkn0 SFLI1 SFLT0 conc0 concLT0 SILN0 SILU5 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - TransactionCounterexample: Violation of LTL property LTL
    Found an infinite, lasso-shaped execution that violates the LTL property LTL.
Stem:
address(1000000000000000000000000012) = (new AlitaToken)({from : 1000000000000000000000000017});
[L1981]              havoc __exception;
[L1982]              revert := false;
[L1983]  COND FALSE  !(__exception)
[L2012]  CALL        call AlitaToken_AlitaToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4942]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3994]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3977]              assume msgsender_MSG != null;
[L3978]              Balance[this] := 0;
[L3979]              owner_Ownable[this] := null;
[L3981]              owner_Ownable[this] := msgsender_MSG;
[L3994]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3995]  COND FALSE  !(revert)
[L4942]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4943]  COND FALSE  !(revert)
[L4946]  CALL        call Pausable_Pausable__success(this, msgsender_MSG, msgvalue_MSG);
[L4531]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3994]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3977]              assume msgsender_MSG != null;
[L3978]              Balance[this] := 0;
[L3979]              owner_Ownable[this] := null;
[L3981]              owner_Ownable[this] := msgsender_MSG;
[L3994]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3995]  COND FALSE  !(revert)
[L4531]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4532]  COND FALSE  !(revert)
[L4535]  CALL        call Pausable_Pausable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4511]              assume msgsender_MSG != null;
[L4512]              Balance[this] := 0;
[L4513]              paused_Pausable[this] := false;
[L4535]  RET         call Pausable_Pausable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4536]  COND FALSE  !(revert)
[L4946]  RET         call Pausable_Pausable__success(this, msgsender_MSG, msgvalue_MSG);
[L4947]  COND FALSE  !(revert)
[L4950]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4064]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4049]              assume msgsender_MSG != null;
[L4050]              Balance[this] := 0;
[L4064]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  COND FALSE  !(revert)
[L4950]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4951]  COND FALSE  !(revert)
[L4954]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4235]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4064]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4049]              assume msgsender_MSG != null;
[L4050]              Balance[this] := 0;
[L4064]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  COND FALSE  !(revert)
[L4235]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4236]  COND FALSE  !(revert)
[L4239]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4216]              assume msgsender_MSG != null;
[L4217]              Balance[this] := 0;
[L4239]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4240]  COND FALSE  !(revert)
[L4954]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4955]  COND FALSE  !(revert)
[L4958]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4106]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4064]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4049]              assume msgsender_MSG != null;
[L4050]              Balance[this] := 0;
[L4064]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  COND FALSE  !(revert)
[L4106]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4107]  COND FALSE  !(revert)
[L4110]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4084]              assume msgsender_MSG != null;
[L4085]              Balance[this] := 0;
[L4086]              balances_BasicToken[this] := zeroRefintArr();
[L4087]              sum_balances0[this] := 0;
[L4088]              totalSupply__BasicToken[this] := 0;
[L4110]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4111]  COND FALSE  !(revert)
[L4958]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4959]  COND FALSE  !(revert)
[L4962]  CALL        call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4287]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4064]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4049]              assume msgsender_MSG != null;
[L4050]              Balance[this] := 0;
[L4064]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  COND FALSE  !(revert)
[L4287]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4288]  COND FALSE  !(revert)
[L4291]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4235]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4064]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4049]              assume msgsender_MSG != null;
[L4050]              Balance[this] := 0;
[L4064]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  COND FALSE  !(revert)
[L4235]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4236]  COND FALSE  !(revert)
[L4239]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4216]              assume msgsender_MSG != null;
[L4217]              Balance[this] := 0;
[L4239]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4240]  COND FALSE  !(revert)
[L4291]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4292]  COND FALSE  !(revert)
[L4295]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4106]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4064]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4049]              assume msgsender_MSG != null;
[L4050]              Balance[this] := 0;
[L4064]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  COND FALSE  !(revert)
[L4106]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4107]  COND FALSE  !(revert)
[L4110]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4084]              assume msgsender_MSG != null;
[L4085]              Balance[this] := 0;
[L4086]              balances_BasicToken[this] := zeroRefintArr();
[L4087]              sum_balances0[this] := 0;
[L4088]              totalSupply__BasicToken[this] := 0;
[L4110]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4111]  COND FALSE  !(revert)
[L4295]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4296]  COND FALSE  !(revert)
[L4299]  CALL        call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4258]              assume msgsender_MSG != null;
[L4259]              Balance[this] := 0;
[L4260]              allowed_StandardToken[this] := zeroRefRefintArr();
[L4261]              sum_allowed1[this] := 0;
[L4299]  RET         call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4300]  COND FALSE  !(revert)
[L4962]  RET         call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4963]  COND FALSE  !(revert)
[L4966]  CALL        call BlackList_BlackList__success(this, msgsender_MSG, msgvalue_MSG);
[L4711]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3994]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3977]              assume msgsender_MSG != null;
[L3978]              Balance[this] := 0;
[L3979]              owner_Ownable[this] := null;
[L3981]              owner_Ownable[this] := msgsender_MSG;
[L3994]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3995]  COND FALSE  !(revert)
[L4711]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4712]  COND FALSE  !(revert)
[L4715]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4064]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4049]              assume msgsender_MSG != null;
[L4050]              Balance[this] := 0;
[L4064]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  COND FALSE  !(revert)
[L4715]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4716]  COND FALSE  !(revert)
[L4719]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4106]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4064]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4049]              assume msgsender_MSG != null;
[L4050]              Balance[this] := 0;
[L4064]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  COND FALSE  !(revert)
[L4106]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4107]  COND FALSE  !(revert)
[L4110]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4084]              assume msgsender_MSG != null;
[L4085]              Balance[this] := 0;
[L4086]              balances_BasicToken[this] := zeroRefintArr();
[L4087]              sum_balances0[this] := 0;
[L4088]              totalSupply__BasicToken[this] := 0;
[L4110]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4111]  COND FALSE  !(revert)
[L4719]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4720]  COND FALSE  !(revert)
[L4723]  CALL        call BlackList_BlackList_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4683]              assume msgsender_MSG != null;
[L4684]              Balance[this] := 0;
[L4685]              isBlackListed_BlackList[this] := zeroRefboolArr();
[L4723]  RET         call BlackList_BlackList_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4724]  COND FALSE  !(revert)
[L4966]  RET         call BlackList_BlackList__success(this, msgsender_MSG, msgvalue_MSG);
[L4967]  COND FALSE  !(revert)
[L4970]  CALL        call AlitaToken_AlitaToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4888]              assume msgsender_MSG != null;
[L4889]              Balance[this] := 0;
[L4890]              name_AlitaToken[this] := -1110093910;
[L4891]              symbol_AlitaToken[this] := 1234648092;
[L4892]              decimals_AlitaToken[this] := 18;
[L4893]              init_Supply_AlitaToken[this] := 1000000000 * (1000000000000000000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L4894]              upgradedAddress_AlitaToken[this] := null;
[L4895]              deprecated_AlitaToken[this] := false;
[L4897]              totalSupply__BasicToken[this] := init_Supply_AlitaToken[this];
[L4898]              sum_balances0[this] := sum_balances0[this] - balances_BasicToken[this][msgsender_MSG];
[L4899]              balances_BasicToken[this][msgsender_MSG] := totalSupply__BasicToken[this];
[L4900]              sum_balances0[this] := sum_balances0[this] + balances_BasicToken[this][msgsender_MSG];
[L4901]              deprecated_AlitaToken[this] := false;
[L4970]  RET         call AlitaToken_AlitaToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4971]  COND FALSE  !(revert)
[L2012]  RET         call AlitaToken_AlitaToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2013]              assume !revert && gas >= 0;
[L8669]  RET         call AlitaToken_AlitaToken(this, msgsender_MSG, msgvalue_MSG);
AlitaToken(1000000000000000000000000012).deprecate~address.gas(3979002)({from : 1000000000000000000000000017, _upgradedAddress : 1000000000000000000000000007});
[L2457]              havoc __exception;
[L2458]              revert := false;
[L2459]  COND FALSE  !(__exception)
[L2488]  CALL        call deprecate~address_AlitaToken__success(this, msgsender_MSG, msgvalue_MSG, _upgradedAddress_s961);
[L5490]  CALL        call onlyOwner_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L7432]  COND FALSE  !(!(msgsender_MSG == owner_Ownable[this]))
[L5490]  RET         call onlyOwner_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L5491]  COND FALSE  !(revert)
[L5494]              deprecated_AlitaToken[this] := true;
[L5495]              upgradedAddress_AlitaToken[this] := _upgradedAddress_s961;
[L5496]              assert { :EventEmitted "Deprecate_AlitaToken" } true;
[L2488]  RET         call deprecate~address_AlitaToken__success(this, msgsender_MSG, msgvalue_MSG, _upgradedAddress_s961);
[L2489]              assume !revert && gas >= 0;
[L8653]  RET         call deprecate~address_AlitaToken(this, msgsender_MSG, msgvalue_MSG, _upgradedAddress_s961);
AlitaToken(1000000000000000000000000012).transfer~address~uint256.gas(3979003)({from : 1000000000000000000000000017, _to : 1000000000000000000000000009, _value : 1000000000000000000000000001});
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG != _to_s754 && (_value_s754 > balances_BasicToken[this][msgsender_MSG] || balances_BasicToken[this][_to_s754] + _value_s754 >= 115792089237316195423570985008687907853269984665640564039457584007913129639936)) && _value_s754 >= 0) && _value_s754 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BasicToken[this][_to_s754] >= 0) && balances_BasicToken[this][_to_s754] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BasicToken[this][msgsender_MSG] >= 0) && balances_BasicToken[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_AlitaToken0 := true;
[L2]                 call_transfer_AlitaToken0 := false;
[L2]                 revert := revert_hold;
[L2049]              havoc __exception;
[L2050]              revert := false;
[L2051]  COND FALSE  !(__exception)
[L2080]  CALL        call __ret_0_ := transfer~address~uint256_AlitaToken__success(this, msgsender_MSG, msgvalue_MSG, _to_s754, _value_s754);
[L5022]  CALL        call whenNotPaused_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L7448]  COND FALSE  !(!!paused_Pausable[this])
[L5022]  RET         call whenNotPaused_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L5023]  COND FALSE  !(revert)
[L5026]  COND FALSE  !(!!isBlackListed_BlackList[this][msgsender_MSG])
[L5030]  COND FALSE  !(!!isBlackListed_BlackList[this][_to_s754])
[L5034]  COND TRUE   deprecated_AlitaToken[this]
[L5035]              assume DType[upgradedAddress_AlitaToken[this]] == UpgradedStandardToken;
[L5036]              __var_12 := upgradedAddress_AlitaToken[this];
[L5038]              __ret_0_ := __var_11;
[L2080]  RET         call __ret_0_ := transfer~address~uint256_AlitaToken__success(this, msgsender_MSG, msgvalue_MSG, _to_s754, _value_s754);
[L2081]              assume !revert && gas >= 0;
[L8523]  RET         call __ret_0_transfer := transfer~address~uint256_AlitaToken(this, msgsender_MSG, msgvalue_MSG, _to_s754, _value_s754);

Loop:
AlitaToken(1000000000000000000000000012).deprecate~address.gas(3979001)({from : 1000000000000000000000000017, _upgradedAddress : 1000000000000000000000000008});
[L2457]              havoc __exception;
[L2458]              revert := false;
[L2459]  COND FALSE  !(__exception)
[L2488]  CALL        call deprecate~address_AlitaToken__success(this, msgsender_MSG, msgvalue_MSG, _upgradedAddress_s961);
[L5490]  CALL        call onlyOwner_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L7432]  COND FALSE  !(!(msgsender_MSG == owner_Ownable[this]))
[L5490]  RET         call onlyOwner_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L5491]  COND FALSE  !(revert)
[L5494]              deprecated_AlitaToken[this] := true;
[L5495]              upgradedAddress_AlitaToken[this] := _upgradedAddress_s961;
[L5496]              assert { :EventEmitted "Deprecate_AlitaToken" } true;
[L2488]  RET         call deprecate~address_AlitaToken__success(this, msgsender_MSG, msgvalue_MSG, _upgradedAddress_s961);
[L2489]              assume !revert && gas >= 0;
[L8653]  RET         call deprecate~address_AlitaToken(this, msgsender_MSG, msgvalue_MSG, _upgradedAddress_s961);

End of lasso representation.
RESULT: Ultimate could not prove your program: Toolchain returned no result.
Received shutdown request...
