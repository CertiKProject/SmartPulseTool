This is Ultimate 0.1.24-f1553f5-m
[2020-11-24 23:45:34,651 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-24 23:45:34,652 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-24 23:45:34,659 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-24 23:45:34,659 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-24 23:45:34,659 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-24 23:45:34,660 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-24 23:45:34,661 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-24 23:45:34,662 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-24 23:45:34,662 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-24 23:45:34,663 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-24 23:45:34,663 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-24 23:45:34,663 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-24 23:45:34,664 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-24 23:45:34,665 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-24 23:45:34,665 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-24 23:45:34,665 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-24 23:45:34,666 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-24 23:45:34,667 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-24 23:45:34,668 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-24 23:45:34,668 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-24 23:45:34,669 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-24 23:45:34,670 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-24 23:45:34,670 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-24 23:45:34,670 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-24 23:45:34,671 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-24 23:45:34,671 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-24 23:45:34,672 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-24 23:45:34,672 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-24 23:45:34,672 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-24 23:45:34,672 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-24 23:45:34,673 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-24 23:45:34,673 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-24 23:45:34,674 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-24 23:45:34,675 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-24 23:45:34,675 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-24 23:45:34,675 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-24 23:45:34,675 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-24 23:45:34,676 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-24 23:45:34,676 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-24 23:45:34,677 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-24 23:45:34,677 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-24 23:45:34,683 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-24 23:45:34,683 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-24 23:45:34,684 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-24 23:45:34,684 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-24 23:45:34,684 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-24 23:45:34,684 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-24 23:45:34,684 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-24 23:45:34,684 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-24 23:45:34,684 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-24 23:45:34,684 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-24 23:45:34,685 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-24 23:45:34,685 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-24 23:45:34,685 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-24 23:45:34,685 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-24 23:45:34,685 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-24 23:45:34,685 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-24 23:45:34,685 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-24 23:45:34,685 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-24 23:45:34,685 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-24 23:45:34,685 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-24 23:45:34,685 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-24 23:45:34,685 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-24 23:45:34,686 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-24 23:45:34,686 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-24 23:45:34,686 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-24 23:45:34,686 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-24 23:45:34,707 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-24 23:45:34,721 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-24 23:45:34,724 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-24 23:45:34,725 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-24 23:45:34,725 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-24 23:45:34,726 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/AlitaToken_0x7f509e1a5114073adcab062ef26a199511926071_transfer-self.bpl
[2020-11-24 23:45:34,726 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/AlitaToken_0x7f509e1a5114073adcab062ef26a199511926071_transfer-self.bpl'
[2020-11-24 23:45:34,833 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-24 23:45:34,834 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-24 23:45:34,835 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-24 23:45:34,835 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-24 23:45:34,835 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-24 23:45:34,852 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "AlitaToken_0x7f509e1a5114073adcab062ef26a199511926071_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 11:45:34" (1/1) ...
[2020-11-24 23:45:34,853 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "AlitaToken_0x7f509e1a5114073adcab062ef26a199511926071_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 11:45:34" (1/1) ...
[2020-11-24 23:45:34,888 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "AlitaToken_0x7f509e1a5114073adcab062ef26a199511926071_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 11:45:34" (1/1) ...
[2020-11-24 23:45:34,889 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "AlitaToken_0x7f509e1a5114073adcab062ef26a199511926071_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 11:45:34" (1/1) ...
[2020-11-24 23:45:34,916 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "AlitaToken_0x7f509e1a5114073adcab062ef26a199511926071_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 11:45:34" (1/1) ...
[2020-11-24 23:45:34,929 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "AlitaToken_0x7f509e1a5114073adcab062ef26a199511926071_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 11:45:34" (1/1) ...
[2020-11-24 23:45:34,940 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "AlitaToken_0x7f509e1a5114073adcab062ef26a199511926071_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 11:45:34" (1/1) ...
[2020-11-24 23:45:34,955 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-24 23:45:34,956 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-24 23:45:34,956 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-24 23:45:34,958 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-24 23:45:34,962 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "AlitaToken_0x7f509e1a5114073adcab062ef26a199511926071_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 11:45:34" (1/1) ...
[2020-11-24 23:45:34,983 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(AlitaToken.transfer(to, value), msg.sender == to && value <= balances_BasicToken[this][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_BasicToken[this][to] >= 0 && balances_BasicToken[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_BasicToken[this][msg.sender] >= 0 &&  balances_BasicToken[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(AlitaToken.transfer(to, value), return == true && totalSupply__BasicToken[this] == old(totalSupply__BasicToken[this]) && balances_BasicToken[this] == old(balances_BasicToken[this]) && allowed_StandardToken[this] == old(allowed_StandardToken[this]) && name_AlitaToken[this] == old(name_AlitaToken[this]) && symbol_AlitaToken[this] == old(symbol_AlitaToken[this]) && decimals_AlitaToken[this] == old(decimals_AlitaToken[this]) && init_Supply_AlitaToken[this] == old(init_Supply_AlitaToken[this]) && upgradedAddress_AlitaToken[this] == old(upgradedAddress_AlitaToken[this]) && deprecated_AlitaToken[this] == old(deprecated_AlitaToken[this]) && isBlackListed_BlackList[this] == old(isBlackListed_BlackList[this]) && paused_Pausable[this] == old(paused_Pausable[this]) && owner_Ownable[this] == old(owner_Ownable[this]))))
[2020-11-24 23:45:34,989 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(AlitaToken.transfer(to, value), msg.sender == to && value <= balances_BasicToken[this][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_BasicToken[this][to] >= 0 && balances_BasicToken[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_BasicToken[this][msg.sender] >= 0 &&  balances_BasicToken[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(AlitaToken.transfer(to, value), return == true && totalSupply__BasicToken[this] == old(totalSupply__BasicToken[this]) && balances_BasicToken[this] == old(balances_BasicToken[this]) && allowed_StandardToken[this] == old(allowed_StandardToken[this]) && name_AlitaToken[this] == old(name_AlitaToken[this]) && symbol_AlitaToken[this] == old(symbol_AlitaToken[this]) && decimals_AlitaToken[this] == old(decimals_AlitaToken[this]) && init_Supply_AlitaToken[this] == old(init_Supply_AlitaToken[this]) && upgradedAddress_AlitaToken[this] == old(upgradedAddress_AlitaToken[this]) && deprecated_AlitaToken[this] == old(deprecated_AlitaToken[this]) && isBlackListed_BlackList[this] == old(isBlackListed_BlackList[this]) && paused_Pausable[this] == old(paused_Pausable[this]) && owner_Ownable[this] == old(owner_Ownable[this]))))
[2020-11-24 23:45:34,996 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(AlitaToken.transfer(to, value), msg.sender == to && value <= balances_BasicToken[this][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_BasicToken[this][to] >= 0 && balances_BasicToken[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_BasicToken[this][msg.sender] >= 0 &&  balances_BasicToken[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(AlitaToken.transfer(to, value), return == true && totalSupply__BasicToken[this] == old(totalSupply__BasicToken[this]) && balances_BasicToken[this] == old(balances_BasicToken[this]) && allowed_StandardToken[this] == old(allowed_StandardToken[this]) && name_AlitaToken[this] == old(name_AlitaToken[this]) && symbol_AlitaToken[this] == old(symbol_AlitaToken[this]) && decimals_AlitaToken[this] == old(decimals_AlitaToken[this]) && init_Supply_AlitaToken[this] == old(init_Supply_AlitaToken[this]) && upgradedAddress_AlitaToken[this] == old(upgradedAddress_AlitaToken[this]) && deprecated_AlitaToken[this] == old(deprecated_AlitaToken[this]) && isBlackListed_BlackList[this] == old(isBlackListed_BlackList[this]) && paused_Pausable[this] == old(paused_Pausable[this]) && owner_Ownable[this] == old(owner_Ownable[this]))))
[2020-11-24 23:45:35,005 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( msg.sender==_to_s754 && _value_s754<=balances_BasicToken[this][msg.sender] ) && _value_s754>=0 ) && _value_s754<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && balances_BasicToken[this][_to_s754]>=0 ) && balances_BasicToken[this][_to_s754]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && balances_BasicToken[this][msg.sender]>=0 ) && balances_BasicToken[this][msg.sender]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_AlitaToken>],IdentifierExpression[_to_s754,<IMPLEMENTATION_INPARAM,transfer~address~uint256_AlitaToken>]],BinaryExpression[COMPLEQ,IdentifierExpression[_value_s754,<IMPLEMENTATION_INPARAM,transfer~address~uint256_AlitaToken>],ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_BasicToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_AlitaToken>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_AlitaToken>]]]]],BinaryExpression[COMPGEQ,IdentifierExpression[_value_s754,<IMPLEMENTATION_INPARAM,transfer~address~uint256_AlitaToken>],IntegerLiteral[0]]],BinaryExpression[COMPLT,IdentifierExpression[_value_s754,<IMPLEMENTATION_INPARAM,transfer~address~uint256_AlitaToken>],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_BasicToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_AlitaToken>]]],[IdentifierExpression[_to_s754,<IMPLEMENTATION_INPARAM,transfer~address~uint256_AlitaToken>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_BasicToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_AlitaToken>]]],[IdentifierExpression[_to_s754,<IMPLEMENTATION_INPARAM,transfer~address~uint256_AlitaToken>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_BasicToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_AlitaToken>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_AlitaToken>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_BasicToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_AlitaToken>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_AlitaToken>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]]
[2020-11-24 23:45:35,009 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( ( ( ( ( __ret_0_==true && totalSupply__BasicToken[this]==( old(totalSupply__BasicToken[this]) ) ) && balances_BasicToken[this]==( old(balances_BasicToken[this]) ) ) && allowed_StandardToken[this]==( old(allowed_StandardToken[this]) ) ) && name_AlitaToken[this]==( old(name_AlitaToken[this]) ) ) && symbol_AlitaToken[this]==( old(symbol_AlitaToken[this]) ) ) && decimals_AlitaToken[this]==( old(decimals_AlitaToken[this]) ) ) && init_Supply_AlitaToken[this]==( old(init_Supply_AlitaToken[this]) ) ) && upgradedAddress_AlitaToken[this]==( old(upgradedAddress_AlitaToken[this]) ) ) && deprecated_AlitaToken[this]==( old(deprecated_AlitaToken[this]) ) ) && isBlackListed_BlackList[this]==( old(isBlackListed_BlackList[this]) ) ) && paused_Pausable[this]==( old(paused_Pausable[this]) ) ) && owner_Ownable[this]==( old(owner_Ownable[this]) ) ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[__ret_0_,<IMPLEMENTATION_OUTPARAM,transfer~address~uint256_AlitaToken>],BooleanLiteral[true]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[totalSupply__BasicToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_AlitaToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[totalSupply__BasicToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_AlitaToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[balances_BasicToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_AlitaToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[balances_BasicToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_AlitaToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[allowed_StandardToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_AlitaToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[allowed_StandardToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_AlitaToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[name_AlitaToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_AlitaToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[name_AlitaToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_AlitaToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[symbol_AlitaToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_AlitaToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[symbol_AlitaToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_AlitaToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[decimals_AlitaToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_AlitaToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[decimals_AlitaToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_AlitaToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[init_Supply_AlitaToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_AlitaToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[init_Supply_AlitaToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_AlitaToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[upgradedAddress_AlitaToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_AlitaToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[upgradedAddress_AlitaToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_AlitaToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[deprecated_AlitaToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_AlitaToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[deprecated_AlitaToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_AlitaToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[isBlackListed_BlackList,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_AlitaToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[isBlackListed_BlackList,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_AlitaToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[paused_Pausable,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_AlitaToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[paused_Pausable,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_AlitaToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[owner_Ownable,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_AlitaToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[owner_Ownable,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_AlitaToken>]]]]]]
[2020-11-24 23:45:35,015 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(AlitaToken.transfer(to, value), msg.sender == to && value <= balances_BasicToken[this][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_BasicToken[this][to] >= 0 && balances_BasicToken[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_BasicToken[this][msg.sender] >= 0 &&  balances_BasicToken[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(AlitaToken.transfer(to, value), return == true && totalSupply__BasicToken[this] == old(totalSupply__BasicToken[this]) && balances_BasicToken[this] == old(balances_BasicToken[this]) && allowed_StandardToken[this] == old(allowed_StandardToken[this]) && name_AlitaToken[this] == old(name_AlitaToken[this]) && symbol_AlitaToken[this] == old(symbol_AlitaToken[this]) && decimals_AlitaToken[this] == old(decimals_AlitaToken[this]) && init_Supply_AlitaToken[this] == old(init_Supply_AlitaToken[this]) && upgradedAddress_AlitaToken[this] == old(upgradedAddress_AlitaToken[this]) && deprecated_AlitaToken[this] == old(deprecated_AlitaToken[this]) && isBlackListed_BlackList[this] == old(isBlackListed_BlackList[this]) && paused_Pausable[this] == old(paused_Pausable[this]) && owner_Ownable[this] == old(owner_Ownable[this]))))
[2020-11-24 23:45:35,016 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_transfer_AlitaToken0) ==> ( <>AP(success_transfer_AlitaToken0) ) ) )
Executed UtopiaSpecLang
[2020-11-24 23:45:35,031 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 11:45:35 PropertyContainer
[2020-11-24 23:45:35,031 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-24 23:45:35,031 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-24 23:45:35,031 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-24 23:45:35,031 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-24 23:45:35,032 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "AlitaToken_0x7f509e1a5114073adcab062ef26a199511926071_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 11:45:34" (1/2) ...
[2020-11-24 23:45:35,032 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-24 23:45:35,033 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-24 23:45:35,053 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 11:45:35" (2/2) ...
[2020-11-24 23:45:35,053 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-24 23:45:35,053 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-24 23:45:35,053 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-24 23:45:35,053 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-24 23:45:35,054 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "AlitaToken_0x7f509e1a5114073adcab062ef26a199511926071_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 11:45:34" (1/2) ...
[2020-11-24 23:45:35,107 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-24 23:45:35,107 INFO  L130     BoogieDeclarations]: Found specification of procedure Ownable_Ownable_NoBaseCtor__success
[2020-11-24 23:45:35,107 INFO  L130     BoogieDeclarations]: Found specification of procedure Ownable_Ownable
[2020-11-24 23:45:35,107 INFO  L138     BoogieDeclarations]: Found implementation of procedure Ownable_Ownable
[2020-11-24 23:45:35,107 INFO  L130     BoogieDeclarations]: Found specification of procedure transferOwnership~address_Ownable
[2020-11-24 23:45:35,107 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferOwnership~address_Ownable
[2020-11-24 23:45:35,108 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_Ownable
[2020-11-24 23:45:35,108 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_Ownable
[2020-11-24 23:45:35,108 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Basic_ERC20Basic_NoBaseCtor__success
[2020-11-24 23:45:35,108 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Basic_ERC20Basic
[2020-11-24 23:45:35,108 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Basic_ERC20Basic
[2020-11-24 23:45:35,108 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20Basic
[2020-11-24 23:45:35,108 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20Basic
[2020-11-24 23:45:35,108 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20Basic
[2020-11-24 23:45:35,108 INFO  L130     BoogieDeclarations]: Found specification of procedure BasicToken_BasicToken_NoBaseCtor__success
[2020-11-24 23:45:35,109 INFO  L130     BoogieDeclarations]: Found specification of procedure BasicToken_BasicToken
[2020-11-24 23:45:35,109 INFO  L138     BoogieDeclarations]: Found implementation of procedure BasicToken_BasicToken
[2020-11-24 23:45:35,109 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_BasicToken
[2020-11-24 23:45:35,109 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_BasicToken
[2020-11-24 23:45:35,109 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_BasicToken
[2020-11-24 23:45:35,109 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_BasicToken
[2020-11-24 23:45:35,110 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_BasicToken
[2020-11-24 23:45:35,110 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_BasicToken
[2020-11-24 23:45:35,110 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20_NoBaseCtor__success
[2020-11-24 23:45:35,110 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20
[2020-11-24 23:45:35,110 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20
[2020-11-24 23:45:35,110 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20
[2020-11-24 23:45:35,110 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20
[2020-11-24 23:45:35,110 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20
[2020-11-24 23:45:35,110 INFO  L130     BoogieDeclarations]: Found specification of procedure StandardToken_StandardToken_NoBaseCtor__success
[2020-11-24 23:45:35,110 INFO  L130     BoogieDeclarations]: Found specification of procedure StandardToken_StandardToken
[2020-11-24 23:45:35,111 INFO  L138     BoogieDeclarations]: Found implementation of procedure StandardToken_StandardToken
[2020-11-24 23:45:35,111 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_StandardToken
[2020-11-24 23:45:35,111 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_StandardToken
[2020-11-24 23:45:35,111 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_StandardToken
[2020-11-24 23:45:35,111 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_StandardToken
[2020-11-24 23:45:35,111 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_StandardToken
[2020-11-24 23:45:35,111 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_StandardToken
[2020-11-24 23:45:35,111 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseApproval~address~uint256_StandardToken
[2020-11-24 23:45:35,111 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseApproval~address~uint256_StandardToken
[2020-11-24 23:45:35,111 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseApproval~address~uint256_StandardToken
[2020-11-24 23:45:35,112 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseApproval~address~uint256_StandardToken
[2020-11-24 23:45:35,112 INFO  L130     BoogieDeclarations]: Found specification of procedure Pausable_Pausable_NoBaseCtor__success
[2020-11-24 23:45:35,112 INFO  L130     BoogieDeclarations]: Found specification of procedure Pausable_Pausable
[2020-11-24 23:45:35,112 INFO  L138     BoogieDeclarations]: Found implementation of procedure Pausable_Pausable
[2020-11-24 23:45:35,112 INFO  L130     BoogieDeclarations]: Found specification of procedure pause_Pausable
[2020-11-24 23:45:35,112 INFO  L138     BoogieDeclarations]: Found implementation of procedure pause_Pausable
[2020-11-24 23:45:35,112 INFO  L130     BoogieDeclarations]: Found specification of procedure unpause_Pausable
[2020-11-24 23:45:35,112 INFO  L138     BoogieDeclarations]: Found implementation of procedure unpause_Pausable
[2020-11-24 23:45:35,113 INFO  L130     BoogieDeclarations]: Found specification of procedure paused_Pausable
[2020-11-24 23:45:35,113 INFO  L138     BoogieDeclarations]: Found implementation of procedure paused_Pausable
[2020-11-24 23:45:35,113 INFO  L130     BoogieDeclarations]: Found specification of procedure UpgradedStandardToken_UpgradedStandardToken_NoBaseCtor__success
[2020-11-24 23:45:35,113 INFO  L130     BoogieDeclarations]: Found specification of procedure UpgradedStandardToken_UpgradedStandardToken
[2020-11-24 23:45:35,113 INFO  L138     BoogieDeclarations]: Found implementation of procedure UpgradedStandardToken_UpgradedStandardToken
[2020-11-24 23:45:35,113 INFO  L130     BoogieDeclarations]: Found specification of procedure transferByLegacy~address~address~uint256_UpgradedStandardToken
[2020-11-24 23:45:35,113 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFromByLegacy~address~address~address~uint256_UpgradedStandardToken
[2020-11-24 23:45:35,113 INFO  L130     BoogieDeclarations]: Found specification of procedure approveByLegacy~address~address~uint256_UpgradedStandardToken
[2020-11-24 23:45:35,113 INFO  L130     BoogieDeclarations]: Found specification of procedure BlackList_BlackList_NoBaseCtor__success
[2020-11-24 23:45:35,113 INFO  L130     BoogieDeclarations]: Found specification of procedure BlackList_BlackList
[2020-11-24 23:45:35,114 INFO  L138     BoogieDeclarations]: Found implementation of procedure BlackList_BlackList
[2020-11-24 23:45:35,114 INFO  L130     BoogieDeclarations]: Found specification of procedure getBlackListStatus~address_BlackList
[2020-11-24 23:45:35,114 INFO  L138     BoogieDeclarations]: Found implementation of procedure getBlackListStatus~address_BlackList
[2020-11-24 23:45:35,114 INFO  L130     BoogieDeclarations]: Found specification of procedure getOwner_BlackList
[2020-11-24 23:45:35,114 INFO  L138     BoogieDeclarations]: Found implementation of procedure getOwner_BlackList
[2020-11-24 23:45:35,114 INFO  L130     BoogieDeclarations]: Found specification of procedure addBlackList~address_BlackList
[2020-11-24 23:45:35,114 INFO  L138     BoogieDeclarations]: Found implementation of procedure addBlackList~address_BlackList
[2020-11-24 23:45:35,114 INFO  L130     BoogieDeclarations]: Found specification of procedure removeBlackList~address_BlackList
[2020-11-24 23:45:35,114 INFO  L138     BoogieDeclarations]: Found implementation of procedure removeBlackList~address_BlackList
[2020-11-24 23:45:35,114 INFO  L130     BoogieDeclarations]: Found specification of procedure destroyBlackFunds~address_BlackList
[2020-11-24 23:45:35,114 INFO  L138     BoogieDeclarations]: Found implementation of procedure destroyBlackFunds~address_BlackList
[2020-11-24 23:45:35,115 INFO  L130     BoogieDeclarations]: Found specification of procedure isBlackListed~address_BlackList
[2020-11-24 23:45:35,115 INFO  L138     BoogieDeclarations]: Found implementation of procedure isBlackListed~address_BlackList
[2020-11-24 23:45:35,115 INFO  L130     BoogieDeclarations]: Found specification of procedure AlitaToken_AlitaToken_NoBaseCtor__success
[2020-11-24 23:45:35,115 INFO  L130     BoogieDeclarations]: Found specification of procedure AlitaToken_AlitaToken
[2020-11-24 23:45:35,115 INFO  L138     BoogieDeclarations]: Found implementation of procedure AlitaToken_AlitaToken
[2020-11-24 23:45:35,115 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_AlitaToken
[2020-11-24 23:45:35,115 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_AlitaToken
[2020-11-24 23:45:35,115 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_AlitaToken
[2020-11-24 23:45:35,115 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_AlitaToken
[2020-11-24 23:45:35,115 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_AlitaToken
[2020-11-24 23:45:35,116 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_AlitaToken
[2020-11-24 23:45:35,116 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_AlitaToken
[2020-11-24 23:45:35,116 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_AlitaToken
[2020-11-24 23:45:35,116 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseApproval~address~uint256_AlitaToken
[2020-11-24 23:45:35,116 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseApproval~address~uint256_AlitaToken
[2020-11-24 23:45:35,116 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseApproval~address~uint256_AlitaToken
[2020-11-24 23:45:35,116 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseApproval~address~uint256_AlitaToken
[2020-11-24 23:45:35,116 INFO  L130     BoogieDeclarations]: Found specification of procedure deprecate~address_AlitaToken
[2020-11-24 23:45:35,116 INFO  L138     BoogieDeclarations]: Found implementation of procedure deprecate~address_AlitaToken
[2020-11-24 23:45:35,116 INFO  L130     BoogieDeclarations]: Found specification of procedure name_AlitaToken
[2020-11-24 23:45:35,117 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_AlitaToken
[2020-11-24 23:45:35,117 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_AlitaToken
[2020-11-24 23:45:35,117 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_AlitaToken
[2020-11-24 23:45:35,117 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_AlitaToken
[2020-11-24 23:45:35,117 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_AlitaToken
[2020-11-24 23:45:35,117 INFO  L130     BoogieDeclarations]: Found specification of procedure init_Supply_AlitaToken
[2020-11-24 23:45:35,117 INFO  L138     BoogieDeclarations]: Found implementation of procedure init_Supply_AlitaToken
[2020-11-24 23:45:35,117 INFO  L130     BoogieDeclarations]: Found specification of procedure upgradedAddress_AlitaToken
[2020-11-24 23:45:35,117 INFO  L138     BoogieDeclarations]: Found implementation of procedure upgradedAddress_AlitaToken
[2020-11-24 23:45:35,117 INFO  L130     BoogieDeclarations]: Found specification of procedure deprecated_AlitaToken
[2020-11-24 23:45:35,117 INFO  L138     BoogieDeclarations]: Found implementation of procedure deprecated_AlitaToken
[2020-11-24 23:45:35,118 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-24 23:45:35,118 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath
[2020-11-24 23:45:35,118 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath
[2020-11-24 23:45:35,118 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__success
[2020-11-24 23:45:35,118 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256_SafeMath__success
[2020-11-24 23:45:35,118 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__success
[2020-11-24 23:45:35,118 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__success
[2020-11-24 23:45:35,118 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-24 23:45:35,118 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-24 23:45:35,118 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-24 23:45:35,119 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__success
[2020-11-24 23:45:35,119 INFO  L130     BoogieDeclarations]: Found specification of procedure whenNotPaused_pre__success
[2020-11-24 23:45:35,119 INFO  L130     BoogieDeclarations]: Found specification of procedure whenPaused_pre__success
[2020-11-24 23:45:35,119 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_Ownable
[2020-11-24 23:45:35,119 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_Ownable
[2020-11-24 23:45:35,119 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20Basic
[2020-11-24 23:45:35,119 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20Basic
[2020-11-24 23:45:35,119 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_BasicToken
[2020-11-24 23:45:35,119 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_BasicToken
[2020-11-24 23:45:35,119 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20
[2020-11-24 23:45:35,119 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20
[2020-11-24 23:45:35,120 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_StandardToken
[2020-11-24 23:45:35,120 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_StandardToken
[2020-11-24 23:45:35,120 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_Pausable
[2020-11-24 23:45:35,120 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_Pausable
[2020-11-24 23:45:35,120 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_UpgradedStandardToken
[2020-11-24 23:45:35,120 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_UpgradedStandardToken
[2020-11-24 23:45:35,120 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_BlackList
[2020-11-24 23:45:35,120 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_BlackList
[2020-11-24 23:45:35,120 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_AlitaToken
[2020-11-24 23:45:35,120 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-24 23:45:35,121 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_SafeMath
[2020-11-24 23:45:35,121 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_SafeMath
[2020-11-24 23:45:35,121 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-24 23:45:35,121 INFO  L130     BoogieDeclarations]: Found specification of procedure Ownable_Ownable_NoBaseCtor__fail
[2020-11-24 23:45:35,121 INFO  L130     BoogieDeclarations]: Found specification of procedure Ownable_Ownable__success
[2020-11-24 23:45:35,121 INFO  L130     BoogieDeclarations]: Found specification of procedure Ownable_Ownable__fail
[2020-11-24 23:45:35,121 INFO  L130     BoogieDeclarations]: Found specification of procedure transferOwnership~address_Ownable__success
[2020-11-24 23:45:35,121 INFO  L130     BoogieDeclarations]: Found specification of procedure transferOwnership~address_Ownable__fail
[2020-11-24 23:45:35,121 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_Ownable__success
[2020-11-24 23:45:35,121 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_Ownable__fail
[2020-11-24 23:45:35,122 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Basic_ERC20Basic_NoBaseCtor__fail
[2020-11-24 23:45:35,122 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Basic_ERC20Basic__success
[2020-11-24 23:45:35,122 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Basic_ERC20Basic__fail
[2020-11-24 23:45:35,122 INFO  L130     BoogieDeclarations]: Found specification of procedure BasicToken_BasicToken_NoBaseCtor__fail
[2020-11-24 23:45:35,122 INFO  L130     BoogieDeclarations]: Found specification of procedure BasicToken_BasicToken__success
[2020-11-24 23:45:35,122 INFO  L130     BoogieDeclarations]: Found specification of procedure BasicToken_BasicToken__fail
[2020-11-24 23:45:35,122 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_BasicToken__success
[2020-11-24 23:45:35,122 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_BasicToken__fail
[2020-11-24 23:45:35,122 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_BasicToken__success
[2020-11-24 23:45:35,123 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_BasicToken__fail
[2020-11-24 23:45:35,123 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_BasicToken__success
[2020-11-24 23:45:35,123 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_BasicToken__fail
[2020-11-24 23:45:35,123 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20_NoBaseCtor__fail
[2020-11-24 23:45:35,123 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20__success
[2020-11-24 23:45:35,123 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20__fail
[2020-11-24 23:45:35,123 INFO  L130     BoogieDeclarations]: Found specification of procedure StandardToken_StandardToken_NoBaseCtor__fail
[2020-11-24 23:45:35,123 INFO  L130     BoogieDeclarations]: Found specification of procedure StandardToken_StandardToken__success
[2020-11-24 23:45:35,123 INFO  L130     BoogieDeclarations]: Found specification of procedure StandardToken_StandardToken__fail
[2020-11-24 23:45:35,123 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_StandardToken__success
[2020-11-24 23:45:35,124 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_StandardToken__fail
[2020-11-24 23:45:35,124 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_StandardToken__success
[2020-11-24 23:45:35,124 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_StandardToken__fail
[2020-11-24 23:45:35,124 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_StandardToken__success
[2020-11-24 23:45:35,124 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_StandardToken__fail
[2020-11-24 23:45:35,124 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseApproval~address~uint256_StandardToken__success
[2020-11-24 23:45:35,124 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseApproval~address~uint256_StandardToken__fail
[2020-11-24 23:45:35,124 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseApproval~address~uint256_StandardToken__success
[2020-11-24 23:45:35,124 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseApproval~address~uint256_StandardToken__fail
[2020-11-24 23:45:35,124 INFO  L130     BoogieDeclarations]: Found specification of procedure Pausable_Pausable_NoBaseCtor__fail
[2020-11-24 23:45:35,124 INFO  L130     BoogieDeclarations]: Found specification of procedure Pausable_Pausable__success
[2020-11-24 23:45:35,125 INFO  L130     BoogieDeclarations]: Found specification of procedure Pausable_Pausable__fail
[2020-11-24 23:45:35,125 INFO  L130     BoogieDeclarations]: Found specification of procedure pause_Pausable__success
[2020-11-24 23:45:35,125 INFO  L130     BoogieDeclarations]: Found specification of procedure pause_Pausable__fail
[2020-11-24 23:45:35,125 INFO  L130     BoogieDeclarations]: Found specification of procedure unpause_Pausable__success
[2020-11-24 23:45:35,125 INFO  L130     BoogieDeclarations]: Found specification of procedure unpause_Pausable__fail
[2020-11-24 23:45:35,125 INFO  L130     BoogieDeclarations]: Found specification of procedure paused_Pausable__success
[2020-11-24 23:45:35,125 INFO  L130     BoogieDeclarations]: Found specification of procedure paused_Pausable__fail
[2020-11-24 23:45:35,125 INFO  L130     BoogieDeclarations]: Found specification of procedure UpgradedStandardToken_UpgradedStandardToken_NoBaseCtor__fail
[2020-11-24 23:45:35,125 INFO  L130     BoogieDeclarations]: Found specification of procedure UpgradedStandardToken_UpgradedStandardToken__success
[2020-11-24 23:45:35,125 INFO  L130     BoogieDeclarations]: Found specification of procedure UpgradedStandardToken_UpgradedStandardToken__fail
[2020-11-24 23:45:35,125 INFO  L130     BoogieDeclarations]: Found specification of procedure BlackList_BlackList_NoBaseCtor__fail
[2020-11-24 23:45:35,125 INFO  L130     BoogieDeclarations]: Found specification of procedure BlackList_BlackList__success
[2020-11-24 23:45:35,126 INFO  L130     BoogieDeclarations]: Found specification of procedure BlackList_BlackList__fail
[2020-11-24 23:45:35,126 INFO  L130     BoogieDeclarations]: Found specification of procedure getBlackListStatus~address_BlackList__success
[2020-11-24 23:45:35,126 INFO  L130     BoogieDeclarations]: Found specification of procedure getBlackListStatus~address_BlackList__fail
[2020-11-24 23:45:35,126 INFO  L130     BoogieDeclarations]: Found specification of procedure getOwner_BlackList__success
[2020-11-24 23:45:35,126 INFO  L130     BoogieDeclarations]: Found specification of procedure getOwner_BlackList__fail
[2020-11-24 23:45:35,126 INFO  L130     BoogieDeclarations]: Found specification of procedure addBlackList~address_BlackList__success
[2020-11-24 23:45:35,126 INFO  L130     BoogieDeclarations]: Found specification of procedure addBlackList~address_BlackList__fail
[2020-11-24 23:45:35,126 INFO  L130     BoogieDeclarations]: Found specification of procedure removeBlackList~address_BlackList__success
[2020-11-24 23:45:35,126 INFO  L130     BoogieDeclarations]: Found specification of procedure removeBlackList~address_BlackList__fail
[2020-11-24 23:45:35,126 INFO  L130     BoogieDeclarations]: Found specification of procedure destroyBlackFunds~address_BlackList__success
[2020-11-24 23:45:35,126 INFO  L130     BoogieDeclarations]: Found specification of procedure destroyBlackFunds~address_BlackList__fail
[2020-11-24 23:45:35,126 INFO  L130     BoogieDeclarations]: Found specification of procedure isBlackListed~address_BlackList__success
[2020-11-24 23:45:35,126 INFO  L130     BoogieDeclarations]: Found specification of procedure isBlackListed~address_BlackList__fail
[2020-11-24 23:45:35,127 INFO  L130     BoogieDeclarations]: Found specification of procedure AlitaToken_AlitaToken_NoBaseCtor__fail
[2020-11-24 23:45:35,127 INFO  L130     BoogieDeclarations]: Found specification of procedure AlitaToken_AlitaToken__success
[2020-11-24 23:45:35,127 INFO  L130     BoogieDeclarations]: Found specification of procedure AlitaToken_AlitaToken__fail
[2020-11-24 23:45:35,127 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_AlitaToken__success
[2020-11-24 23:45:35,127 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_AlitaToken__fail
[2020-11-24 23:45:35,127 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_AlitaToken__success
[2020-11-24 23:45:35,127 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_AlitaToken__fail
[2020-11-24 23:45:35,127 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_AlitaToken__success
[2020-11-24 23:45:35,127 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_AlitaToken__fail
[2020-11-24 23:45:35,127 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_AlitaToken__success
[2020-11-24 23:45:35,127 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_AlitaToken__fail
[2020-11-24 23:45:35,127 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseApproval~address~uint256_AlitaToken__success
[2020-11-24 23:45:35,128 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseApproval~address~uint256_AlitaToken__fail
[2020-11-24 23:45:35,128 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseApproval~address~uint256_AlitaToken__success
[2020-11-24 23:45:35,128 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseApproval~address~uint256_AlitaToken__fail
[2020-11-24 23:45:35,128 INFO  L130     BoogieDeclarations]: Found specification of procedure deprecate~address_AlitaToken__success
[2020-11-24 23:45:35,128 INFO  L130     BoogieDeclarations]: Found specification of procedure deprecate~address_AlitaToken__fail
[2020-11-24 23:45:35,128 INFO  L130     BoogieDeclarations]: Found specification of procedure name_AlitaToken__success
[2020-11-24 23:45:35,128 INFO  L130     BoogieDeclarations]: Found specification of procedure name_AlitaToken__fail
[2020-11-24 23:45:35,128 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_AlitaToken__success
[2020-11-24 23:45:35,128 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_AlitaToken__fail
[2020-11-24 23:45:35,128 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_AlitaToken__success
[2020-11-24 23:45:35,128 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_AlitaToken__fail
[2020-11-24 23:45:35,128 INFO  L130     BoogieDeclarations]: Found specification of procedure init_Supply_AlitaToken__success
[2020-11-24 23:45:35,129 INFO  L130     BoogieDeclarations]: Found specification of procedure init_Supply_AlitaToken__fail
[2020-11-24 23:45:35,129 INFO  L130     BoogieDeclarations]: Found specification of procedure upgradedAddress_AlitaToken__success
[2020-11-24 23:45:35,129 INFO  L130     BoogieDeclarations]: Found specification of procedure upgradedAddress_AlitaToken__fail
[2020-11-24 23:45:35,129 INFO  L130     BoogieDeclarations]: Found specification of procedure deprecated_AlitaToken__success
[2020-11-24 23:45:35,129 INFO  L130     BoogieDeclarations]: Found specification of procedure deprecated_AlitaToken__fail
[2020-11-24 23:45:35,129 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-24 23:45:35,129 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__success
[2020-11-24 23:45:35,129 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__fail
[2020-11-24 23:45:35,129 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-24 23:45:35,129 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256_SafeMath__fail
[2020-11-24 23:45:35,129 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-24 23:45:35,129 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__fail
[2020-11-24 23:45:35,130 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-24 23:45:35,130 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-24 23:45:35,130 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-24 23:45:35,130 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__fail
[2020-11-24 23:45:35,130 INFO  L130     BoogieDeclarations]: Found specification of procedure whenNotPaused_pre__fail
[2020-11-24 23:45:35,130 INFO  L130     BoogieDeclarations]: Found specification of procedure whenPaused_pre__fail
[2020-11-24 23:45:35,130 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-24 23:45:35,130 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-24 23:45:35,130 INFO  L138     BoogieDeclarations]: Found implementation of procedure Ownable_Ownable_NoBaseCtor__fail
[2020-11-24 23:45:35,130 INFO  L138     BoogieDeclarations]: Found implementation of procedure Ownable_Ownable_NoBaseCtor__success
[2020-11-24 23:45:35,130 INFO  L138     BoogieDeclarations]: Found implementation of procedure Ownable_Ownable__fail
[2020-11-24 23:45:35,130 INFO  L138     BoogieDeclarations]: Found implementation of procedure Ownable_Ownable__success
[2020-11-24 23:45:35,131 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferOwnership~address_Ownable__fail
[2020-11-24 23:45:35,131 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferOwnership~address_Ownable__success
[2020-11-24 23:45:35,131 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_Ownable__fail
[2020-11-24 23:45:35,131 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_Ownable__success
[2020-11-24 23:45:35,131 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Basic_ERC20Basic_NoBaseCtor__fail
[2020-11-24 23:45:35,131 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Basic_ERC20Basic_NoBaseCtor__success
[2020-11-24 23:45:35,131 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Basic_ERC20Basic__fail
[2020-11-24 23:45:35,131 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Basic_ERC20Basic__success
[2020-11-24 23:45:35,131 INFO  L138     BoogieDeclarations]: Found implementation of procedure BasicToken_BasicToken_NoBaseCtor__fail
[2020-11-24 23:45:35,131 INFO  L138     BoogieDeclarations]: Found implementation of procedure BasicToken_BasicToken_NoBaseCtor__success
[2020-11-24 23:45:35,131 INFO  L138     BoogieDeclarations]: Found implementation of procedure BasicToken_BasicToken__fail
[2020-11-24 23:45:35,131 INFO  L138     BoogieDeclarations]: Found implementation of procedure BasicToken_BasicToken__success
[2020-11-24 23:45:35,132 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_BasicToken__fail
[2020-11-24 23:45:35,132 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_BasicToken__success
[2020-11-24 23:45:35,132 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_BasicToken__fail
[2020-11-24 23:45:35,132 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_BasicToken__success
[2020-11-24 23:45:35,132 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_BasicToken__fail
[2020-11-24 23:45:35,132 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_BasicToken__success
[2020-11-24 23:45:35,132 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20_NoBaseCtor__fail
[2020-11-24 23:45:35,132 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20_NoBaseCtor__success
[2020-11-24 23:45:35,132 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20__fail
[2020-11-24 23:45:35,132 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20__success
[2020-11-24 23:45:35,132 INFO  L138     BoogieDeclarations]: Found implementation of procedure StandardToken_StandardToken_NoBaseCtor__fail
[2020-11-24 23:45:35,132 INFO  L138     BoogieDeclarations]: Found implementation of procedure StandardToken_StandardToken_NoBaseCtor__success
[2020-11-24 23:45:35,133 INFO  L138     BoogieDeclarations]: Found implementation of procedure StandardToken_StandardToken__fail
[2020-11-24 23:45:35,133 INFO  L138     BoogieDeclarations]: Found implementation of procedure StandardToken_StandardToken__success
[2020-11-24 23:45:35,133 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_StandardToken__fail
[2020-11-24 23:45:35,133 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_StandardToken__success
[2020-11-24 23:45:35,133 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_StandardToken__fail
[2020-11-24 23:45:35,133 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_StandardToken__success
[2020-11-24 23:45:35,133 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_StandardToken__fail
[2020-11-24 23:45:35,133 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_StandardToken__success
[2020-11-24 23:45:35,133 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseApproval~address~uint256_StandardToken__fail
[2020-11-24 23:45:35,133 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseApproval~address~uint256_StandardToken__success
[2020-11-24 23:45:35,134 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseApproval~address~uint256_StandardToken__fail
[2020-11-24 23:45:35,134 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseApproval~address~uint256_StandardToken__success
[2020-11-24 23:45:35,134 INFO  L138     BoogieDeclarations]: Found implementation of procedure Pausable_Pausable_NoBaseCtor__fail
[2020-11-24 23:45:35,134 INFO  L138     BoogieDeclarations]: Found implementation of procedure Pausable_Pausable_NoBaseCtor__success
[2020-11-24 23:45:35,134 INFO  L138     BoogieDeclarations]: Found implementation of procedure Pausable_Pausable__fail
[2020-11-24 23:45:35,134 INFO  L138     BoogieDeclarations]: Found implementation of procedure Pausable_Pausable__success
[2020-11-24 23:45:35,134 INFO  L138     BoogieDeclarations]: Found implementation of procedure pause_Pausable__fail
[2020-11-24 23:45:35,134 INFO  L138     BoogieDeclarations]: Found implementation of procedure pause_Pausable__success
[2020-11-24 23:45:35,134 INFO  L138     BoogieDeclarations]: Found implementation of procedure unpause_Pausable__fail
[2020-11-24 23:45:35,134 INFO  L138     BoogieDeclarations]: Found implementation of procedure unpause_Pausable__success
[2020-11-24 23:45:35,135 INFO  L138     BoogieDeclarations]: Found implementation of procedure paused_Pausable__fail
[2020-11-24 23:45:35,135 INFO  L138     BoogieDeclarations]: Found implementation of procedure paused_Pausable__success
[2020-11-24 23:45:35,135 INFO  L138     BoogieDeclarations]: Found implementation of procedure UpgradedStandardToken_UpgradedStandardToken_NoBaseCtor__fail
[2020-11-24 23:45:35,135 INFO  L138     BoogieDeclarations]: Found implementation of procedure UpgradedStandardToken_UpgradedStandardToken_NoBaseCtor__success
[2020-11-24 23:45:35,135 INFO  L138     BoogieDeclarations]: Found implementation of procedure UpgradedStandardToken_UpgradedStandardToken__fail
[2020-11-24 23:45:35,135 INFO  L138     BoogieDeclarations]: Found implementation of procedure UpgradedStandardToken_UpgradedStandardToken__success
[2020-11-24 23:45:35,135 INFO  L138     BoogieDeclarations]: Found implementation of procedure BlackList_BlackList_NoBaseCtor__fail
[2020-11-24 23:45:35,135 INFO  L138     BoogieDeclarations]: Found implementation of procedure BlackList_BlackList_NoBaseCtor__success
[2020-11-24 23:45:35,135 INFO  L138     BoogieDeclarations]: Found implementation of procedure BlackList_BlackList__fail
[2020-11-24 23:45:35,135 INFO  L138     BoogieDeclarations]: Found implementation of procedure BlackList_BlackList__success
[2020-11-24 23:45:35,135 INFO  L138     BoogieDeclarations]: Found implementation of procedure getBlackListStatus~address_BlackList__fail
[2020-11-24 23:45:35,136 INFO  L138     BoogieDeclarations]: Found implementation of procedure getBlackListStatus~address_BlackList__success
[2020-11-24 23:45:35,136 INFO  L138     BoogieDeclarations]: Found implementation of procedure getOwner_BlackList__fail
[2020-11-24 23:45:35,136 INFO  L138     BoogieDeclarations]: Found implementation of procedure getOwner_BlackList__success
[2020-11-24 23:45:35,136 INFO  L138     BoogieDeclarations]: Found implementation of procedure addBlackList~address_BlackList__fail
[2020-11-24 23:45:35,136 INFO  L138     BoogieDeclarations]: Found implementation of procedure addBlackList~address_BlackList__success
[2020-11-24 23:45:35,136 INFO  L138     BoogieDeclarations]: Found implementation of procedure removeBlackList~address_BlackList__fail
[2020-11-24 23:45:35,136 INFO  L138     BoogieDeclarations]: Found implementation of procedure removeBlackList~address_BlackList__success
[2020-11-24 23:45:35,136 INFO  L138     BoogieDeclarations]: Found implementation of procedure destroyBlackFunds~address_BlackList__fail
[2020-11-24 23:45:35,136 INFO  L138     BoogieDeclarations]: Found implementation of procedure destroyBlackFunds~address_BlackList__success
[2020-11-24 23:45:35,136 INFO  L138     BoogieDeclarations]: Found implementation of procedure isBlackListed~address_BlackList__fail
[2020-11-24 23:45:35,136 INFO  L138     BoogieDeclarations]: Found implementation of procedure isBlackListed~address_BlackList__success
[2020-11-24 23:45:35,136 INFO  L138     BoogieDeclarations]: Found implementation of procedure AlitaToken_AlitaToken_NoBaseCtor__fail
[2020-11-24 23:45:35,136 INFO  L138     BoogieDeclarations]: Found implementation of procedure AlitaToken_AlitaToken_NoBaseCtor__success
[2020-11-24 23:45:35,137 INFO  L138     BoogieDeclarations]: Found implementation of procedure AlitaToken_AlitaToken__fail
[2020-11-24 23:45:35,137 INFO  L138     BoogieDeclarations]: Found implementation of procedure AlitaToken_AlitaToken__success
[2020-11-24 23:45:35,137 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_AlitaToken__fail
[2020-11-24 23:45:35,137 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_AlitaToken__success
[2020-11-24 23:45:35,137 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_AlitaToken__fail
[2020-11-24 23:45:35,137 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_AlitaToken__success
[2020-11-24 23:45:35,137 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_AlitaToken__fail
[2020-11-24 23:45:35,137 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_AlitaToken__success
[2020-11-24 23:45:35,137 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_AlitaToken__fail
[2020-11-24 23:45:35,137 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_AlitaToken__success
[2020-11-24 23:45:35,137 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseApproval~address~uint256_AlitaToken__fail
[2020-11-24 23:45:35,137 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseApproval~address~uint256_AlitaToken__success
[2020-11-24 23:45:35,137 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseApproval~address~uint256_AlitaToken__fail
[2020-11-24 23:45:35,138 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseApproval~address~uint256_AlitaToken__success
[2020-11-24 23:45:35,138 INFO  L138     BoogieDeclarations]: Found implementation of procedure deprecate~address_AlitaToken__fail
[2020-11-24 23:45:35,138 INFO  L138     BoogieDeclarations]: Found implementation of procedure deprecate~address_AlitaToken__success
[2020-11-24 23:45:35,138 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_AlitaToken__fail
[2020-11-24 23:45:35,138 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_AlitaToken__success
[2020-11-24 23:45:35,138 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_AlitaToken__fail
[2020-11-24 23:45:35,138 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_AlitaToken__success
[2020-11-24 23:45:35,138 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_AlitaToken__fail
[2020-11-24 23:45:35,138 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_AlitaToken__success
[2020-11-24 23:45:35,138 INFO  L138     BoogieDeclarations]: Found implementation of procedure init_Supply_AlitaToken__fail
[2020-11-24 23:45:35,138 INFO  L138     BoogieDeclarations]: Found implementation of procedure init_Supply_AlitaToken__success
[2020-11-24 23:45:35,138 INFO  L138     BoogieDeclarations]: Found implementation of procedure upgradedAddress_AlitaToken__fail
[2020-11-24 23:45:35,139 INFO  L138     BoogieDeclarations]: Found implementation of procedure upgradedAddress_AlitaToken__success
[2020-11-24 23:45:35,139 INFO  L138     BoogieDeclarations]: Found implementation of procedure deprecated_AlitaToken__fail
[2020-11-24 23:45:35,139 INFO  L138     BoogieDeclarations]: Found implementation of procedure deprecated_AlitaToken__success
[2020-11-24 23:45:35,139 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-24 23:45:35,139 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-24 23:45:35,139 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__fail
[2020-11-24 23:45:35,139 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__success
[2020-11-24 23:45:35,139 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-24 23:45:35,139 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__success
[2020-11-24 23:45:35,139 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256_SafeMath__fail
[2020-11-24 23:45:35,139 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256_SafeMath__success
[2020-11-24 23:45:35,139 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-24 23:45:35,139 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__success
[2020-11-24 23:45:35,140 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__fail
[2020-11-24 23:45:35,140 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__success
[2020-11-24 23:45:35,140 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-24 23:45:35,140 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-24 23:45:35,140 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-24 23:45:35,140 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-24 23:45:35,140 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-24 23:45:35,140 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-24 23:45:35,140 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__fail
[2020-11-24 23:45:35,140 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__success
[2020-11-24 23:45:35,140 INFO  L138     BoogieDeclarations]: Found implementation of procedure whenNotPaused_pre__fail
[2020-11-24 23:45:35,140 INFO  L138     BoogieDeclarations]: Found implementation of procedure whenNotPaused_pre__success
[2020-11-24 23:45:35,141 INFO  L138     BoogieDeclarations]: Found implementation of procedure whenPaused_pre__fail
[2020-11-24 23:45:35,141 INFO  L138     BoogieDeclarations]: Found implementation of procedure whenPaused_pre__success
[2020-11-24 23:45:35,141 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_Ownable
[2020-11-24 23:45:35,141 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_Ownable
[2020-11-24 23:45:35,141 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20Basic
[2020-11-24 23:45:35,141 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20Basic
[2020-11-24 23:45:35,141 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_BasicToken
[2020-11-24 23:45:35,141 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_BasicToken
[2020-11-24 23:45:35,141 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20
[2020-11-24 23:45:35,141 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20
[2020-11-24 23:45:35,141 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_StandardToken
[2020-11-24 23:45:35,141 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_StandardToken
[2020-11-24 23:45:35,141 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_Pausable
[2020-11-24 23:45:35,142 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_Pausable
[2020-11-24 23:45:35,142 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_UpgradedStandardToken
[2020-11-24 23:45:35,142 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_UpgradedStandardToken
[2020-11-24 23:45:35,142 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_BlackList
[2020-11-24 23:45:35,142 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_BlackList
[2020-11-24 23:45:35,142 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_AlitaToken
[2020-11-24 23:45:35,142 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-24 23:45:35,142 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_SafeMath
[2020-11-24 23:45:35,142 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_SafeMath
[2020-11-24 23:45:35,142 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-24 23:45:35,142 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-24 23:45:35,836 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 23:45:35,836 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 23:45:35,836 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 23:45:36,090 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-24 23:45:36,090 INFO  L286             CfgBuilder]: Removed 10 assue(true) statements.
[2020-11-24 23:45:36,092 INFO  L202        PluginConnector]: Adding new model AlitaToken_0x7f509e1a5114073adcab062ef26a199511926071_transfer-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 11:45:36 BoogieIcfgContainer
[2020-11-24 23:45:36,093 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 11:45:35" (2/2) ...
[2020-11-24 23:45:36,093 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-24 23:45:36,093 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@22e9e937 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 11:45:36, skipping insertion in model container
[2020-11-24 23:45:36,093 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-24 23:45:36,093 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-24 23:45:36,093 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-24 23:45:36,094 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-24 23:45:36,094 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "AlitaToken_0x7f509e1a5114073adcab062ef26a199511926071_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 11:45:34" (1/3) ...
[2020-11-24 23:45:36,094 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@40d81405 and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 11:45:36, skipping insertion in model container
[2020-11-24 23:45:36,094 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 11:45:35" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-24 23:45:36,125 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 11:45:36 NWAContainer
[2020-11-24 23:45:36,126 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-24 23:45:36,126 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-24 23:45:36,126 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-24 23:45:36,126 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-24 23:45:36,127 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "AlitaToken_0x7f509e1a5114073adcab062ef26a199511926071_transfer-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 11:45:36" (3/4) ...
[2020-11-24 23:45:36,127 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@3b19622e and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 11:45:36, skipping insertion in model container
[2020-11-24 23:45:36,127 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 11:45:36" (4/4) ...
[2020-11-24 23:45:36,129 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-24 23:45:36,134 INFO  L110   BuchiProductObserver]: Initial RCFG 3159 locations, 4233 edges
[2020-11-24 23:45:36,134 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-24 23:45:36,144 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-24 23:45:38,327 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-24 23:45:38,336 INFO  L110   BuchiProductObserver]: BuchiProgram size 7746 locations, 13814 edges
[2020-11-24 23:45:38,337 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 11:45:38 BoogieIcfgContainer
[2020-11-24 23:45:38,337 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-24 23:45:38,337 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-24 23:45:38,337 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-24 23:45:38,338 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-24 23:45:38,339 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 11:45:38" (1/1) ...
[2020-11-24 23:45:38,476 INFO  L313           BlockEncoder]: Initial Icfg 7746 locations, 13814 edges
[2020-11-24 23:45:38,476 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-24 23:45:38,476 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-24 23:45:38,476 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-24 23:45:38,477 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-24 23:45:38,493 INFO  L70    emoveInfeasibleEdges]: Removed 159 edges and 23 locations because of local infeasibility
[2020-11-24 23:45:38,507 INFO  L70        RemoveSinkStates]: Removed 62 edges and 41 locations by removing sink states
[2020-11-24 23:45:38,522 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-24 23:45:38,527 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-24 23:45:38,531 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-24 23:45:38,532 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-24 23:45:38,536 INFO  L313           BlockEncoder]: Encoded RCFG 7640 locations, 13531 edges
[2020-11-24 23:45:38,537 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 24.11 11:45:38 BasicIcfg
[2020-11-24 23:45:38,537 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-24 23:45:38,537 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-24 23:45:38,537 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-24 23:45:38,539 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-24 23:45:38,539 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 23:45:38,539 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "AlitaToken_0x7f509e1a5114073adcab062ef26a199511926071_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 11:45:34" (1/6) ...
[2020-11-24 23:45:38,540 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@7a3993ec and model type AlitaToken_0x7f509e1a5114073adcab062ef26a199511926071_transfer-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 24.11 11:45:38, skipping insertion in model container
[2020-11-24 23:45:38,541 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 23:45:38,541 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 11:45:35" (2/6) ...
[2020-11-24 23:45:38,541 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@7a3993ec and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 24.11 11:45:38, skipping insertion in model container
[2020-11-24 23:45:38,541 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 23:45:38,541 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "AlitaToken_0x7f509e1a5114073adcab062ef26a199511926071_transfer-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 11:45:36" (3/6) ...
[2020-11-24 23:45:38,541 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@7a3993ec and model type AlitaToken_0x7f509e1a5114073adcab062ef26a199511926071_transfer-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 24.11 11:45:38, skipping insertion in model container
[2020-11-24 23:45:38,541 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 23:45:38,541 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 11:45:36" (4/6) ...
[2020-11-24 23:45:38,541 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@7a3993ec and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 24.11 11:45:38, skipping insertion in model container
[2020-11-24 23:45:38,541 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 23:45:38,542 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 11:45:38" (5/6) ...
[2020-11-24 23:45:38,542 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@7a3993ec and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 24.11 11:45:38, skipping insertion in model container
[2020-11-24 23:45:38,542 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 23:45:38,542 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 24.11 11:45:38" (6/6) ...
[2020-11-24 23:45:38,543 INFO  L404   chiAutomizerObserver]: Analyzing ICFG AlitaToken_0x7f509e1a5114073adcab062ef26a199511926071_transfer-self.bpl_BEv2
[2020-11-24 23:45:38,578 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-24 23:45:38,578 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-24 23:45:38,578 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-24 23:45:38,578 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-24 23:45:38,578 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-24 23:45:38,578 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-24 23:45:38,579 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-24 23:45:38,579 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-24 23:45:38,579 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-24 23:45:38,626 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 7640 states.
[2020-11-24 23:45:38,688 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-24 23:45:38,689 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 23:45:38,689 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 23:45:38,696 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 23:45:38,696 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 23:45:38,696 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-24 23:45:38,696 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 7640 states.
[2020-11-24 23:45:38,723 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-24 23:45:38,723 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 23:45:38,723 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 23:45:38,725 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 23:45:38,725 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 success_transfer_AlitaToken0 := false;
[L2]                 call_transfer_AlitaToken0 := false;
[L2]     CALL        call main();
[L8663]              assume null == 0;
[L8664]  CALL        call this := FreshRefGenerator__success();
[L3958]              havoc newRef;
[L3959]              assume Alloc[newRef] == false;
[L3960]              Alloc[newRef] := true;
[L3961]              assume newRef != null;
[L8664]  RET         call this := FreshRefGenerator__success();
[L8665]              assume now >= 0;
[L8666]              assume DType[this] == AlitaToken;
[L8667]              assume msgvalue_MSG == 0;
[L8668]              gas := gas - 53000;
[L8669]  CALL        call AlitaToken_AlitaToken(this, msgsender_MSG, msgvalue_MSG);
[L1981]              havoc __exception;
[L1982]              revert := false;
[L1983]  COND FALSE  !(__exception)
[L2012]  CALL        call AlitaToken_AlitaToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4942]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3994]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3977]              assume msgsender_MSG != null;
[L3978]              Balance[this] := 0;
[L3979]              owner_Ownable[this] := null;
[L3981]              owner_Ownable[this] := msgsender_MSG;
[L3994]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3995]  COND FALSE  !(revert)
[L4942]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4943]  COND TRUE   revert
[L2012]  RET         call AlitaToken_AlitaToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2013]              assume !revert && gas >= 0;
[L8669]  RET         call AlitaToken_AlitaToken(this, msgsender_MSG, msgvalue_MSG);
[L8670]              assume !revert && gas >= 0;

Loop:
[L8673]  CALL        call CorralChoice_AlitaToken(this);
[L8433]              havoc msgsender_MSG;
[L8434]              havoc msgvalue_MSG;
[L8435]              havoc choice;
[L8436]              havoc __ret_0_owner;
[L8437]              havoc newOwner_s42;
[L8438]              havoc __ret_0_totalSupply;
[L8439]              havoc _owner_s166;
[L8440]              havoc __ret_0_balanceOf;
[L8441]              havoc _to_s754;
[L8442]              havoc _value_s754;
[L8443]              havoc __ret_0_transfer;
[L8444]              havoc _owner_s885;
[L8445]              havoc _spender_s885;
[L8446]              havoc __ret_0_allowance;
[L8447]              havoc _from_s812;
[L8448]              havoc _to_s812;
[L8449]              havoc _value_s812;
[L8450]              havoc __ret_0_transferFrom;
[L8451]              havoc _spender_s857;
[L8452]              havoc _value_s857;
[L8453]              havoc __ret_0_approve;
[L8454]              havoc _spender_s913;
[L8455]              havoc _addedValue_s913;
[L8456]              havoc __ret_0_increaseApproval;
[L8457]              havoc _spender_s941;
[L8458]              havoc _subtractedValue_s941;
[L8459]              havoc __ret_0_decreaseApproval;
[L8460]              havoc __ret_0_paused;
[L8461]              havoc _maker_s564;
[L8462]              havoc __ret_0_getBlackListStatus;
[L8463]              havoc __ret_0_getOwner;
[L8464]              havoc arg1060_s0;
[L8465]              havoc __ret_0_isBlackListed;
[L8466]              havoc _evilUser_s594;
[L8467]              havoc _clearedUser_s612;
[L8468]              havoc _blackListedUser_s647;
[L8469]              havoc __ret_0_name;
[L8470]              havoc __ret_0_symbol;
[L8471]              havoc __ret_0_decimals;
[L8472]              havoc __ret_0_init_Supply;
[L8473]              havoc __ret_0_upgradedAddress;
[L8474]              havoc __ret_0_deprecated;
[L8475]              havoc _upgradedAddress_s961;
[L8476]              havoc tmpNow;
[L8477]              havoc gas;
[L8478]              assume gas > 4000000 && gas <= 8000000;
[L8479]              tmpNow := now;
[L8480]              havoc now;
[L8481]              assume now > tmpNow;
[L8482]              assume msgsender_MSG != null;
[L8483]              assume DType[msgsender_MSG] != Ownable;
[L8484]              assume DType[msgsender_MSG] != ERC20Basic;
[L8485]              assume DType[msgsender_MSG] != BasicToken;
[L8486]              assume DType[msgsender_MSG] != ERC20;
[L8487]              assume DType[msgsender_MSG] != StandardToken;
[L8488]              assume DType[msgsender_MSG] != Pausable;
[L8489]              assume DType[msgsender_MSG] != UpgradedStandardToken;
[L8490]              assume DType[msgsender_MSG] != BlackList;
[L8491]              assume DType[msgsender_MSG] != AlitaToken;
[L8492]              assume DType[msgsender_MSG] != SafeMath;
[L8493]              Alloc[msgsender_MSG] := true;
[L8494]  COND TRUE   choice == 26
[L8495]              gas := gas - 21000;
[L8496]  COND FALSE  !(gas >= 0)
[L8673]  RET         call CorralChoice_AlitaToken(this);

[2020-11-24 23:45:38,738 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 23:45:38,739 INFO  L82        PathProgramCache]: Analyzing trace with hash -1765729682, now seen corresponding path program 1 times
[2020-11-24 23:45:38,743 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 23:45:38,767 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 23:45:38,802 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 23:45:38,804 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 23:45:38,804 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-24 23:45:39,156 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 23:45:39,164 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-24 23:45:39,165 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-24 23:45:39,166 INFO  L87              Difference]: Start difference. First operand 7640 states. Second operand 4 states.
[2020-11-24 23:45:40,740 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 23:45:40,740 INFO  L93              Difference]: Finished difference Result 6250 states and 10065 transitions.
[2020-11-24 23:45:40,740 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-24 23:45:40,742 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 6250 states and 10065 transitions.
[2020-11-24 23:45:40,786 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 6
[2020-11-24 23:45:40,830 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 6250 states to 6062 states and 9758 transitions.
[2020-11-24 23:45:40,831 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 13
[2020-11-24 23:45:40,836 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 1526
[2020-11-24 23:45:40,836 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 6062 states and 9758 transitions.
[2020-11-24 23:45:40,858 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 23:45:40,858 INFO  L728         BuchiCegarLoop]: Abstraction has 6062 states and 9758 transitions.
[2020-11-24 23:45:40,876 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 6062 states and 9758 transitions.
[2020-11-24 23:45:40,950 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 6062 to 4800.
[2020-11-24 23:45:40,950 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 4800 states.
[2020-11-24 23:45:40,958 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 4800 states to 4800 states and 7390 transitions.
[2020-11-24 23:45:40,959 INFO  L751         BuchiCegarLoop]: Abstraction has 4800 states and 7390 transitions.
[2020-11-24 23:45:40,959 INFO  L631         BuchiCegarLoop]: Abstraction has 4800 states and 7390 transitions.
[2020-11-24 23:45:40,959 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-24 23:45:40,959 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 4800 states and 7390 transitions.
[2020-11-24 23:45:40,970 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-24 23:45:40,970 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 23:45:40,970 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 23:45:40,974 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [8, 8, 8, 8, 8, 8, 8, 8, 8, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 23:45:40,974 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 success_transfer_AlitaToken0 := false;
[L2]                 call_transfer_AlitaToken0 := false;
[L2]     CALL        call main();
[L8663]              assume null == 0;
[L8664]  CALL        call this := FreshRefGenerator__success();
[L3958]              havoc newRef;
[L3959]              assume Alloc[newRef] == false;
[L3960]              Alloc[newRef] := true;
[L3961]              assume newRef != null;
[L8664]  RET         call this := FreshRefGenerator__success();
[L8665]              assume now >= 0;
[L8666]              assume DType[this] == AlitaToken;
[L8667]              assume msgvalue_MSG == 0;
[L8668]              gas := gas - 53000;
[L8669]  CALL        call AlitaToken_AlitaToken(this, msgsender_MSG, msgvalue_MSG);
[L1981]              havoc __exception;
[L1982]              revert := false;
[L1983]  COND TRUE   __exception
[L1984]              __tmp__Balance := Balance;
[L1985]              __tmp__DType := DType;
[L1986]              __tmp__Alloc := Alloc;
[L1987]              __tmp__balance_ADDR := balance_ADDR;
[L1988]              __tmp__M_Ref_int := M_Ref_int;
[L1989]              __tmp__sum_balances0 := sum_balances0;
[L1990]              __tmp__alloc_allowed_StandardToken_lvl0 := alloc_allowed_StandardToken_lvl0;
[L1991]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L1992]              __tmp__sum_allowed1 := sum_allowed1;
[L1993]              __tmp__M_Ref_bool := M_Ref_bool;
[L1994]              __tmp__sum_isBlackListed2 := sum_isBlackListed2;
[L1995]              __tmp__Length := Length;
[L1996]              __tmp__now := now;
[L1997]              __tmp__owner_Ownable := owner_Ownable;
[L1998]              __tmp__balances_BasicToken := balances_BasicToken;
[L1999]              __tmp__totalSupply__BasicToken := totalSupply__BasicToken;
[L2000]              __tmp__allowed_StandardToken := allowed_StandardToken;
[L2001]              __tmp__paused_Pausable := paused_Pausable;
[L2002]              __tmp__isBlackListed_BlackList := isBlackListed_BlackList;
[L2003]              __tmp__name_AlitaToken := name_AlitaToken;
[L2004]              __tmp__symbol_AlitaToken := symbol_AlitaToken;
[L2005]              __tmp__decimals_AlitaToken := decimals_AlitaToken;
[L2006]              __tmp__init_Supply_AlitaToken := init_Supply_AlitaToken;
[L2007]              __tmp__upgradedAddress_AlitaToken := upgradedAddress_AlitaToken;
[L2008]              __tmp__deprecated_AlitaToken := deprecated_AlitaToken;
[L2009]  CALL        call AlitaToken_AlitaToken__fail(this, msgsender_MSG, msgvalue_MSG);
[L4906]  CALL        call Ownable_Ownable__fail(this, msgsender_MSG, msgvalue_MSG);
[L3986]  CALL        call Ownable_Ownable_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L3967]              assume msgsender_MSG != null;
[L3968]              __tmp__Balance[this] := 0;
[L3969]              __tmp__owner_Ownable[this] := null;
[L3971]              __tmp__owner_Ownable[this] := msgsender_MSG;
[L3986]  RET         call Ownable_Ownable_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L3987]  COND FALSE  !(revert)
[L4906]  RET         call Ownable_Ownable__fail(this, msgsender_MSG, msgvalue_MSG);
[L4907]  COND FALSE  !(revert)
[L4910]  CALL        call Pausable_Pausable__fail(this, msgsender_MSG, msgvalue_MSG);
[L4519]  CALL        call Ownable_Ownable__fail(this, msgsender_MSG, msgvalue_MSG);
[L3986]  CALL        call Ownable_Ownable_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L3967]              assume msgsender_MSG != null;
[L3968]              __tmp__Balance[this] := 0;
[L3969]              __tmp__owner_Ownable[this] := null;
[L3971]              __tmp__owner_Ownable[this] := msgsender_MSG;
[L3986]  RET         call Ownable_Ownable_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L3987]  COND FALSE  !(revert)
[L4519]  RET         call Ownable_Ownable__fail(this, msgsender_MSG, msgvalue_MSG);
[L4520]  COND FALSE  !(revert)
[L4523]  CALL        call Pausable_Pausable_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L4502]              assume msgsender_MSG != null;
[L4503]              __tmp__Balance[this] := 0;
[L4504]              __tmp__paused_Pausable[this] := false;
[L4523]  RET         call Pausable_Pausable_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L4524]  COND FALSE  !(revert)
[L4910]  RET         call Pausable_Pausable__fail(this, msgsender_MSG, msgvalue_MSG);
[L4911]  COND FALSE  !(revert)
[L4914]  CALL        call ERC20Basic_ERC20Basic__fail(this, msgsender_MSG, msgvalue_MSG);
[L4056]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L4041]              assume msgsender_MSG != null;
[L4042]              __tmp__Balance[this] := 0;
[L4056]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L4057]  COND FALSE  !(revert)
[L4914]  RET         call ERC20Basic_ERC20Basic__fail(this, msgsender_MSG, msgvalue_MSG);
[L4915]  COND FALSE  !(revert)
[L4918]  CALL        call ERC20_ERC20__fail(this, msgsender_MSG, msgvalue_MSG);
[L4223]  CALL        call ERC20Basic_ERC20Basic__fail(this, msgsender_MSG, msgvalue_MSG);
[L4056]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L4041]              assume msgsender_MSG != null;
[L4042]              __tmp__Balance[this] := 0;
[L4056]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L4057]  COND FALSE  !(revert)
[L4223]  RET         call ERC20Basic_ERC20Basic__fail(this, msgsender_MSG, msgvalue_MSG);
[L4224]  COND FALSE  !(revert)
[L4227]  CALL        call ERC20_ERC20_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L4208]              assume msgsender_MSG != null;
[L4209]              __tmp__Balance[this] := 0;
[L4227]  RET         call ERC20_ERC20_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L4228]  COND FALSE  !(revert)
[L4918]  RET         call ERC20_ERC20__fail(this, msgsender_MSG, msgvalue_MSG);
[L4919]  COND FALSE  !(revert)
[L4922]  CALL        call BasicToken_BasicToken__fail(this, msgsender_MSG, msgvalue_MSG);
[L4094]  CALL        call ERC20Basic_ERC20Basic__fail(this, msgsender_MSG, msgvalue_MSG);
[L4056]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L4041]              assume msgsender_MSG != null;
[L4042]              __tmp__Balance[this] := 0;
[L4056]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L4057]  COND FALSE  !(revert)
[L4094]  RET         call ERC20Basic_ERC20Basic__fail(this, msgsender_MSG, msgvalue_MSG);
[L4095]  COND FALSE  !(revert)
[L4098]  CALL        call BasicToken_BasicToken_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L4073]              assume msgsender_MSG != null;
[L4074]              __tmp__Balance[this] := 0;
[L4075]              __tmp__balances_BasicToken[this] := zeroRefintArr();
[L4076]              __tmp__sum_balances0[this] := 0;
[L4077]              __tmp__totalSupply__BasicToken[this] := 0;
[L4098]  RET         call BasicToken_BasicToken_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L4099]  COND FALSE  !(revert)
[L4922]  RET         call BasicToken_BasicToken__fail(this, msgsender_MSG, msgvalue_MSG);
[L4923]  COND FALSE  !(revert)
[L4926]  CALL        call StandardToken_StandardToken__fail(this, msgsender_MSG, msgvalue_MSG);
[L4267]  CALL        call ERC20Basic_ERC20Basic__fail(this, msgsender_MSG, msgvalue_MSG);
[L4056]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L4041]              assume msgsender_MSG != null;
[L4042]              __tmp__Balance[this] := 0;
[L4056]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L4057]  COND FALSE  !(revert)
[L4267]  RET         call ERC20Basic_ERC20Basic__fail(this, msgsender_MSG, msgvalue_MSG);
[L4268]  COND FALSE  !(revert)
[L4271]  CALL        call ERC20_ERC20__fail(this, msgsender_MSG, msgvalue_MSG);
[L4223]  CALL        call ERC20Basic_ERC20Basic__fail(this, msgsender_MSG, msgvalue_MSG);
[L4056]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L4041]              assume msgsender_MSG != null;
[L4042]              __tmp__Balance[this] := 0;
[L4056]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L4057]  COND FALSE  !(revert)
[L4223]  RET         call ERC20Basic_ERC20Basic__fail(this, msgsender_MSG, msgvalue_MSG);
[L4224]  COND FALSE  !(revert)
[L4227]  CALL        call ERC20_ERC20_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L4208]              assume msgsender_MSG != null;
[L4209]              __tmp__Balance[this] := 0;
[L4227]  RET         call ERC20_ERC20_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L4228]  COND FALSE  !(revert)
[L4271]  RET         call ERC20_ERC20__fail(this, msgsender_MSG, msgvalue_MSG);
[L4272]  COND FALSE  !(revert)
[L4275]  CALL        call BasicToken_BasicToken__fail(this, msgsender_MSG, msgvalue_MSG);
[L4094]  CALL        call ERC20Basic_ERC20Basic__fail(this, msgsender_MSG, msgvalue_MSG);
[L4056]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L4041]              assume msgsender_MSG != null;
[L4042]              __tmp__Balance[this] := 0;
[L4056]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L4057]  COND FALSE  !(revert)
[L4094]  RET         call ERC20Basic_ERC20Basic__fail(this, msgsender_MSG, msgvalue_MSG);
[L4095]  COND FALSE  !(revert)
[L4098]  CALL        call BasicToken_BasicToken_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L4073]              assume msgsender_MSG != null;
[L4074]              __tmp__Balance[this] := 0;
[L4075]              __tmp__balances_BasicToken[this] := zeroRefintArr();
[L4076]              __tmp__sum_balances0[this] := 0;
[L4077]              __tmp__totalSupply__BasicToken[this] := 0;
[L4098]  RET         call BasicToken_BasicToken_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L4099]  COND FALSE  !(revert)
[L4275]  RET         call BasicToken_BasicToken__fail(this, msgsender_MSG, msgvalue_MSG);
[L4276]  COND FALSE  !(revert)
[L4279]  CALL        call StandardToken_StandardToken_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L4248]              assume msgsender_MSG != null;
[L4249]              __tmp__Balance[this] := 0;
[L4250]              __tmp__allowed_StandardToken[this] := zeroRefRefintArr();
[L4251]              __tmp__sum_allowed1[this] := 0;
[L4279]  RET         call StandardToken_StandardToken_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L4280]  COND FALSE  !(revert)
[L4926]  RET         call StandardToken_StandardToken__fail(this, msgsender_MSG, msgvalue_MSG);
[L4927]  COND FALSE  !(revert)
[L4930]  CALL        call BlackList_BlackList__fail(this, msgsender_MSG, msgvalue_MSG);
[L4691]  CALL        call Ownable_Ownable__fail(this, msgsender_MSG, msgvalue_MSG);
[L3986]  CALL        call Ownable_Ownable_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L3967]              assume msgsender_MSG != null;
[L3968]              __tmp__Balance[this] := 0;
[L3969]              __tmp__owner_Ownable[this] := null;
[L3971]              __tmp__owner_Ownable[this] := msgsender_MSG;
[L3986]  RET         call Ownable_Ownable_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L3987]  COND FALSE  !(revert)
[L4691]  RET         call Ownable_Ownable__fail(this, msgsender_MSG, msgvalue_MSG);
[L4692]  COND FALSE  !(revert)
[L4695]  CALL        call ERC20Basic_ERC20Basic__fail(this, msgsender_MSG, msgvalue_MSG);
[L4056]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L4041]              assume msgsender_MSG != null;
[L4042]              __tmp__Balance[this] := 0;
[L4056]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L4057]  COND FALSE  !(revert)
[L4695]  RET         call ERC20Basic_ERC20Basic__fail(this, msgsender_MSG, msgvalue_MSG);
[L4696]  COND FALSE  !(revert)
[L4699]  CALL        call BasicToken_BasicToken__fail(this, msgsender_MSG, msgvalue_MSG);
[L4094]  CALL        call ERC20Basic_ERC20Basic__fail(this, msgsender_MSG, msgvalue_MSG);
[L4056]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L4041]              assume msgsender_MSG != null;
[L4042]              __tmp__Balance[this] := 0;
[L4056]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L4057]  COND FALSE  !(revert)
[L4094]  RET         call ERC20Basic_ERC20Basic__fail(this, msgsender_MSG, msgvalue_MSG);
[L4095]  COND FALSE  !(revert)
[L4098]  CALL        call BasicToken_BasicToken_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L4073]              assume msgsender_MSG != null;
[L4074]              __tmp__Balance[this] := 0;
[L4075]              __tmp__balances_BasicToken[this] := zeroRefintArr();
[L4076]              __tmp__sum_balances0[this] := 0;
[L4077]              __tmp__totalSupply__BasicToken[this] := 0;
[L4098]  RET         call BasicToken_BasicToken_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L4099]  COND FALSE  !(revert)
[L4699]  RET         call BasicToken_BasicToken__fail(this, msgsender_MSG, msgvalue_MSG);
[L4700]  COND FALSE  !(revert)
[L4703]  CALL        call BlackList_BlackList_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L4674]              assume msgsender_MSG != null;
[L4675]              __tmp__Balance[this] := 0;
[L4676]              __tmp__isBlackListed_BlackList[this] := zeroRefboolArr();
[L4703]  RET         call BlackList_BlackList_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L4704]  COND FALSE  !(revert)
[L4930]  RET         call BlackList_BlackList__fail(this, msgsender_MSG, msgvalue_MSG);
[L4931]  COND FALSE  !(revert)
[L4934]  CALL        call AlitaToken_AlitaToken_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L4869]              assume msgsender_MSG != null;
[L4870]              __tmp__Balance[this] := 0;
[L4871]              __tmp__name_AlitaToken[this] := -1110093910;
[L4872]              __tmp__symbol_AlitaToken[this] := 1234648092;
[L4873]              __tmp__decimals_AlitaToken[this] := 18;
[L4874]              __tmp__init_Supply_AlitaToken[this] := 1000000000 * (1000000000000000000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L4875]              __tmp__upgradedAddress_AlitaToken[this] := null;
[L4876]              __tmp__deprecated_AlitaToken[this] := false;
[L4878]              __tmp__totalSupply__BasicToken[this] := __tmp__init_Supply_AlitaToken[this];
[L4879]              __tmp__sum_balances0[this] := __tmp__sum_balances0[this] - __tmp__balances_BasicToken[this][msgsender_MSG];
[L4880]              __tmp__balances_BasicToken[this][msgsender_MSG] := __tmp__totalSupply__BasicToken[this];
[L4881]              __tmp__sum_balances0[this] := __tmp__sum_balances0[this] + __tmp__balances_BasicToken[this][msgsender_MSG];
[L4882]              __tmp__deprecated_AlitaToken[this] := false;
[L4934]  RET         call AlitaToken_AlitaToken_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L4935]  COND FALSE  !(revert)
[L2009]  RET         call AlitaToken_AlitaToken__fail(this, msgsender_MSG, msgvalue_MSG);
[L2010]              assume revert || gas < 0;
[L8669]  RET         call AlitaToken_AlitaToken(this, msgsender_MSG, msgvalue_MSG);
[L8670]              assume !revert && gas >= 0;

Loop:
[L8673]  CALL        call CorralChoice_AlitaToken(this);
[L8433]              havoc msgsender_MSG;
[L8434]              havoc msgvalue_MSG;
[L8435]              havoc choice;
[L8436]              havoc __ret_0_owner;
[L8437]              havoc newOwner_s42;
[L8438]              havoc __ret_0_totalSupply;
[L8439]              havoc _owner_s166;
[L8440]              havoc __ret_0_balanceOf;
[L8441]              havoc _to_s754;
[L8442]              havoc _value_s754;
[L8443]              havoc __ret_0_transfer;
[L8444]              havoc _owner_s885;
[L8445]              havoc _spender_s885;
[L8446]              havoc __ret_0_allowance;
[L8447]              havoc _from_s812;
[L8448]              havoc _to_s812;
[L8449]              havoc _value_s812;
[L8450]              havoc __ret_0_transferFrom;
[L8451]              havoc _spender_s857;
[L8452]              havoc _value_s857;
[L8453]              havoc __ret_0_approve;
[L8454]              havoc _spender_s913;
[L8455]              havoc _addedValue_s913;
[L8456]              havoc __ret_0_increaseApproval;
[L8457]              havoc _spender_s941;
[L8458]              havoc _subtractedValue_s941;
[L8459]              havoc __ret_0_decreaseApproval;
[L8460]              havoc __ret_0_paused;
[L8461]              havoc _maker_s564;
[L8462]              havoc __ret_0_getBlackListStatus;
[L8463]              havoc __ret_0_getOwner;
[L8464]              havoc arg1060_s0;
[L8465]              havoc __ret_0_isBlackListed;
[L8466]              havoc _evilUser_s594;
[L8467]              havoc _clearedUser_s612;
[L8468]              havoc _blackListedUser_s647;
[L8469]              havoc __ret_0_name;
[L8470]              havoc __ret_0_symbol;
[L8471]              havoc __ret_0_decimals;
[L8472]              havoc __ret_0_init_Supply;
[L8473]              havoc __ret_0_upgradedAddress;
[L8474]              havoc __ret_0_deprecated;
[L8475]              havoc _upgradedAddress_s961;
[L8476]              havoc tmpNow;
[L8477]              havoc gas;
[L8478]              assume gas > 4000000 && gas <= 8000000;
[L8479]              tmpNow := now;
[L8480]              havoc now;
[L8481]              assume now > tmpNow;
[L8482]              assume msgsender_MSG != null;
[L8483]              assume DType[msgsender_MSG] != Ownable;
[L8484]              assume DType[msgsender_MSG] != ERC20Basic;
[L8485]              assume DType[msgsender_MSG] != BasicToken;
[L8486]              assume DType[msgsender_MSG] != ERC20;
[L8487]              assume DType[msgsender_MSG] != StandardToken;
[L8488]              assume DType[msgsender_MSG] != Pausable;
[L8489]              assume DType[msgsender_MSG] != UpgradedStandardToken;
[L8490]              assume DType[msgsender_MSG] != BlackList;
[L8491]              assume DType[msgsender_MSG] != AlitaToken;
[L8492]              assume DType[msgsender_MSG] != SafeMath;
[L8493]              Alloc[msgsender_MSG] := true;
[L8494]  COND TRUE   choice == 26
[L8495]              gas := gas - 21000;
[L8496]  COND FALSE  !(gas >= 0)
[L8673]  RET         call CorralChoice_AlitaToken(this);

[2020-11-24 23:45:40,979 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 23:45:40,980 INFO  L82        PathProgramCache]: Analyzing trace with hash 952046641, now seen corresponding path program 1 times
[2020-11-24 23:45:40,980 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 23:45:40,991 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 23:45:41,053 INFO  L134       CoverageAnalysis]: Checked inductivity of 381 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 381 trivial. 0 not checked.
[2020-11-24 23:45:41,053 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 23:45:41,053 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-24 23:45:41,054 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 23:45:41,054 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-24 23:45:41,054 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-24 23:45:41,055 INFO  L87              Difference]: Start difference. First operand 4800 states and 7390 transitions. cyclomatic complexity: 2600 Second operand 4 states.
[2020-11-24 23:45:41,962 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 23:45:41,962 INFO  L93              Difference]: Finished difference Result 4417 states and 4806 transitions.
[2020-11-24 23:45:41,962 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-24 23:45:41,962 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 4417 states and 4806 transitions.
[2020-11-24 23:45:41,973 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-24 23:45:41,982 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 4417 states to 4417 states and 4806 transitions.
[2020-11-24 23:45:41,982 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 1137
[2020-11-24 23:45:41,983 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 1137
[2020-11-24 23:45:41,983 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 4417 states and 4806 transitions.
[2020-11-24 23:45:41,985 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 23:45:41,985 INFO  L728         BuchiCegarLoop]: Abstraction has 4417 states and 4806 transitions.
[2020-11-24 23:45:41,989 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 4417 states and 4806 transitions.
[2020-11-24 23:45:42,013 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 4417 to 4417.
[2020-11-24 23:45:42,013 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 4417 states.
[2020-11-24 23:45:42,016 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 4417 states to 4417 states and 4806 transitions.
[2020-11-24 23:45:42,017 INFO  L751         BuchiCegarLoop]: Abstraction has 4417 states and 4806 transitions.
[2020-11-24 23:45:42,017 INFO  L631         BuchiCegarLoop]: Abstraction has 4417 states and 4806 transitions.
[2020-11-24 23:45:42,017 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-24 23:45:42,017 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 4417 states and 4806 transitions.
[2020-11-24 23:45:42,022 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-24 23:45:42,022 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 23:45:42,022 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 23:45:42,024 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [8, 8, 8, 8, 8, 8, 8, 8, 8, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 23:45:42,024 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 success_transfer_AlitaToken0 := false;
[L2]                 call_transfer_AlitaToken0 := false;
[L2]     CALL        call main();
[L8663]              assume null == 0;
[L8664]  CALL        call this := FreshRefGenerator__success();
[L3958]              havoc newRef;
[L3959]              assume Alloc[newRef] == false;
[L3960]              Alloc[newRef] := true;
[L3961]              assume newRef != null;
[L8664]  RET         call this := FreshRefGenerator__success();
[L8665]              assume now >= 0;
[L8666]              assume DType[this] == AlitaToken;
[L8667]              assume msgvalue_MSG == 0;
[L8668]              gas := gas - 53000;
[L8669]  CALL        call AlitaToken_AlitaToken(this, msgsender_MSG, msgvalue_MSG);
[L1981]              havoc __exception;
[L1982]              revert := false;
[L1983]  COND FALSE  !(__exception)
[L2012]  CALL        call AlitaToken_AlitaToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4942]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3994]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3977]              assume msgsender_MSG != null;
[L3978]              Balance[this] := 0;
[L3979]              owner_Ownable[this] := null;
[L3981]              owner_Ownable[this] := msgsender_MSG;
[L3994]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3995]  COND FALSE  !(revert)
[L4942]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4943]  COND FALSE  !(revert)
[L4946]  CALL        call Pausable_Pausable__success(this, msgsender_MSG, msgvalue_MSG);
[L4531]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3994]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3977]              assume msgsender_MSG != null;
[L3978]              Balance[this] := 0;
[L3979]              owner_Ownable[this] := null;
[L3981]              owner_Ownable[this] := msgsender_MSG;
[L3994]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3995]  COND FALSE  !(revert)
[L4531]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4532]  COND FALSE  !(revert)
[L4535]  CALL        call Pausable_Pausable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4511]              assume msgsender_MSG != null;
[L4512]              Balance[this] := 0;
[L4513]              paused_Pausable[this] := false;
[L4535]  RET         call Pausable_Pausable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4536]  COND FALSE  !(revert)
[L4946]  RET         call Pausable_Pausable__success(this, msgsender_MSG, msgvalue_MSG);
[L4947]  COND FALSE  !(revert)
[L4950]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4064]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4049]              assume msgsender_MSG != null;
[L4050]              Balance[this] := 0;
[L4064]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  COND FALSE  !(revert)
[L4950]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4951]  COND FALSE  !(revert)
[L4954]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4235]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4064]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4049]              assume msgsender_MSG != null;
[L4050]              Balance[this] := 0;
[L4064]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  COND FALSE  !(revert)
[L4235]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4236]  COND FALSE  !(revert)
[L4239]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4216]              assume msgsender_MSG != null;
[L4217]              Balance[this] := 0;
[L4239]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4240]  COND FALSE  !(revert)
[L4954]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4955]  COND FALSE  !(revert)
[L4958]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4106]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4064]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4049]              assume msgsender_MSG != null;
[L4050]              Balance[this] := 0;
[L4064]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  COND FALSE  !(revert)
[L4106]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4107]  COND FALSE  !(revert)
[L4110]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4084]              assume msgsender_MSG != null;
[L4085]              Balance[this] := 0;
[L4086]              balances_BasicToken[this] := zeroRefintArr();
[L4087]              sum_balances0[this] := 0;
[L4088]              totalSupply__BasicToken[this] := 0;
[L4110]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4111]  COND FALSE  !(revert)
[L4958]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4959]  COND FALSE  !(revert)
[L4962]  CALL        call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4287]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4064]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4049]              assume msgsender_MSG != null;
[L4050]              Balance[this] := 0;
[L4064]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  COND FALSE  !(revert)
[L4287]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4288]  COND FALSE  !(revert)
[L4291]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4235]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4064]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4049]              assume msgsender_MSG != null;
[L4050]              Balance[this] := 0;
[L4064]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  COND FALSE  !(revert)
[L4235]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4236]  COND FALSE  !(revert)
[L4239]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4216]              assume msgsender_MSG != null;
[L4217]              Balance[this] := 0;
[L4239]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4240]  COND FALSE  !(revert)
[L4291]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4292]  COND FALSE  !(revert)
[L4295]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4106]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4064]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4049]              assume msgsender_MSG != null;
[L4050]              Balance[this] := 0;
[L4064]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  COND FALSE  !(revert)
[L4106]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4107]  COND FALSE  !(revert)
[L4110]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4084]              assume msgsender_MSG != null;
[L4085]              Balance[this] := 0;
[L4086]              balances_BasicToken[this] := zeroRefintArr();
[L4087]              sum_balances0[this] := 0;
[L4088]              totalSupply__BasicToken[this] := 0;
[L4110]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4111]  COND FALSE  !(revert)
[L4295]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4296]  COND FALSE  !(revert)
[L4299]  CALL        call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4258]              assume msgsender_MSG != null;
[L4259]              Balance[this] := 0;
[L4260]              allowed_StandardToken[this] := zeroRefRefintArr();
[L4261]              sum_allowed1[this] := 0;
[L4299]  RET         call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4300]  COND FALSE  !(revert)
[L4962]  RET         call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4963]  COND FALSE  !(revert)
[L4966]  CALL        call BlackList_BlackList__success(this, msgsender_MSG, msgvalue_MSG);
[L4711]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3994]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3977]              assume msgsender_MSG != null;
[L3978]              Balance[this] := 0;
[L3979]              owner_Ownable[this] := null;
[L3981]              owner_Ownable[this] := msgsender_MSG;
[L3994]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3995]  COND FALSE  !(revert)
[L4711]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4712]  COND FALSE  !(revert)
[L4715]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4064]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4049]              assume msgsender_MSG != null;
[L4050]              Balance[this] := 0;
[L4064]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  COND FALSE  !(revert)
[L4715]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4716]  COND FALSE  !(revert)
[L4719]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4106]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4064]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4049]              assume msgsender_MSG != null;
[L4050]              Balance[this] := 0;
[L4064]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  COND FALSE  !(revert)
[L4106]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4107]  COND FALSE  !(revert)
[L4110]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4084]              assume msgsender_MSG != null;
[L4085]              Balance[this] := 0;
[L4086]              balances_BasicToken[this] := zeroRefintArr();
[L4087]              sum_balances0[this] := 0;
[L4088]              totalSupply__BasicToken[this] := 0;
[L4110]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4111]  COND FALSE  !(revert)
[L4719]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4720]  COND FALSE  !(revert)
[L4723]  CALL        call BlackList_BlackList_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4683]              assume msgsender_MSG != null;
[L4684]              Balance[this] := 0;
[L4685]              isBlackListed_BlackList[this] := zeroRefboolArr();
[L4723]  RET         call BlackList_BlackList_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4724]  COND FALSE  !(revert)
[L4966]  RET         call BlackList_BlackList__success(this, msgsender_MSG, msgvalue_MSG);
[L4967]  COND FALSE  !(revert)
[L4970]  CALL        call AlitaToken_AlitaToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4888]              assume msgsender_MSG != null;
[L4889]              Balance[this] := 0;
[L4890]              name_AlitaToken[this] := -1110093910;
[L4891]              symbol_AlitaToken[this] := 1234648092;
[L4892]              decimals_AlitaToken[this] := 18;
[L4893]              init_Supply_AlitaToken[this] := 1000000000 * (1000000000000000000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L4894]              upgradedAddress_AlitaToken[this] := null;
[L4895]              deprecated_AlitaToken[this] := false;
[L4897]              totalSupply__BasicToken[this] := init_Supply_AlitaToken[this];
[L4898]              sum_balances0[this] := sum_balances0[this] - balances_BasicToken[this][msgsender_MSG];
[L4899]              balances_BasicToken[this][msgsender_MSG] := totalSupply__BasicToken[this];
[L4900]              sum_balances0[this] := sum_balances0[this] + balances_BasicToken[this][msgsender_MSG];
[L4901]              deprecated_AlitaToken[this] := false;
[L4970]  RET         call AlitaToken_AlitaToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4971]  COND FALSE  !(revert)
[L2012]  RET         call AlitaToken_AlitaToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2013]              assume !revert && gas >= 0;
[L8669]  RET         call AlitaToken_AlitaToken(this, msgsender_MSG, msgvalue_MSG);
[L8670]              assume !revert && gas >= 0;
[L8673]  CALL        call CorralChoice_AlitaToken(this);
[L8433]              havoc msgsender_MSG;
[L8434]              havoc msgvalue_MSG;
[L8435]              havoc choice;
[L8436]              havoc __ret_0_owner;
[L8437]              havoc newOwner_s42;
[L8438]              havoc __ret_0_totalSupply;
[L8439]              havoc _owner_s166;
[L8440]              havoc __ret_0_balanceOf;
[L8441]              havoc _to_s754;
[L8442]              havoc _value_s754;
[L8443]              havoc __ret_0_transfer;
[L8444]              havoc _owner_s885;
[L8445]              havoc _spender_s885;
[L8446]              havoc __ret_0_allowance;
[L8447]              havoc _from_s812;
[L8448]              havoc _to_s812;
[L8449]              havoc _value_s812;
[L8450]              havoc __ret_0_transferFrom;
[L8451]              havoc _spender_s857;
[L8452]              havoc _value_s857;
[L8453]              havoc __ret_0_approve;
[L8454]              havoc _spender_s913;
[L8455]              havoc _addedValue_s913;
[L8456]              havoc __ret_0_increaseApproval;
[L8457]              havoc _spender_s941;
[L8458]              havoc _subtractedValue_s941;
[L8459]              havoc __ret_0_decreaseApproval;
[L8460]              havoc __ret_0_paused;
[L8461]              havoc _maker_s564;
[L8462]              havoc __ret_0_getBlackListStatus;
[L8463]              havoc __ret_0_getOwner;
[L8464]              havoc arg1060_s0;
[L8465]              havoc __ret_0_isBlackListed;
[L8466]              havoc _evilUser_s594;
[L8467]              havoc _clearedUser_s612;
[L8468]              havoc _blackListedUser_s647;
[L8469]              havoc __ret_0_name;
[L8470]              havoc __ret_0_symbol;
[L8471]              havoc __ret_0_decimals;
[L8472]              havoc __ret_0_init_Supply;
[L8473]              havoc __ret_0_upgradedAddress;
[L8474]              havoc __ret_0_deprecated;
[L8475]              havoc _upgradedAddress_s961;
[L8476]              havoc tmpNow;
[L8477]              havoc gas;
[L8478]              assume gas > 4000000 && gas <= 8000000;
[L8479]              tmpNow := now;
[L8480]              havoc now;
[L8481]              assume now > tmpNow;
[L8482]              assume msgsender_MSG != null;
[L8483]              assume DType[msgsender_MSG] != Ownable;
[L8484]              assume DType[msgsender_MSG] != ERC20Basic;
[L8485]              assume DType[msgsender_MSG] != BasicToken;
[L8486]              assume DType[msgsender_MSG] != ERC20;
[L8487]              assume DType[msgsender_MSG] != StandardToken;
[L8488]              assume DType[msgsender_MSG] != Pausable;
[L8489]              assume DType[msgsender_MSG] != UpgradedStandardToken;
[L8490]              assume DType[msgsender_MSG] != BlackList;
[L8491]              assume DType[msgsender_MSG] != AlitaToken;
[L8492]              assume DType[msgsender_MSG] != SafeMath;
[L8493]              Alloc[msgsender_MSG] := true;
[L8494]  COND FALSE  !(choice == 26)
[L8500]  COND FALSE  !(choice == 25)
[L8506]  COND FALSE  !(choice == 24)
[L8512]  COND FALSE  !(choice == 23)
[L8518]  COND TRUE   choice == 22
[L8519]              gas := gas - 21000;
[L8520]  COND TRUE   gas >= 0
[L8521]              assume _value_s754 >= 0 && _value_s754 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L8522]              assume msgvalue_MSG == 0;
[L8523]  CALL        call __ret_0_transfer := transfer~address~uint256_AlitaToken(this, msgsender_MSG, msgvalue_MSG, _to_s754, _value_s754);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == _to_s754 && _value_s754 <= balances_BasicToken[this][msgsender_MSG]) && _value_s754 >= 0) && _value_s754 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BasicToken[this][_to_s754] >= 0) && balances_BasicToken[this][_to_s754] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BasicToken[this][msgsender_MSG] >= 0) && balances_BasicToken[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_AlitaToken0 := true;
[L2]                 call_transfer_AlitaToken0 := false;
[L2]                 revert := revert_hold;
[L2049]              havoc __exception;
[L2050]              revert := false;
[L2051]  COND FALSE  !(__exception)
[L2080]  CALL        call __ret_0_ := transfer~address~uint256_AlitaToken__success(this, msgsender_MSG, msgvalue_MSG, _to_s754, _value_s754);
[L5022]  CALL        call whenNotPaused_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L7448]  COND FALSE  !(!!paused_Pausable[this])
[L5022]  RET         call whenNotPaused_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L5023]  COND FALSE  !(revert)
[L5026]  COND FALSE  !(!!isBlackListed_BlackList[this][msgsender_MSG])
[L5030]  COND FALSE  !(!!isBlackListed_BlackList[this][_to_s754])
[L5034]  COND TRUE   deprecated_AlitaToken[this]
[L5035]              assume DType[upgradedAddress_AlitaToken[this]] == UpgradedStandardToken;
[L5036]              __var_12 := upgradedAddress_AlitaToken[this];
[L5038]              __ret_0_ := __var_11;
[L2080]  RET         call __ret_0_ := transfer~address~uint256_AlitaToken__success(this, msgsender_MSG, msgvalue_MSG, _to_s754, _value_s754);
[L2081]              assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !((((((((((((__ret_0_ == true && totalSupply__BasicToken[this] == old(totalSupply__BasicToken[this])) && balances_BasicToken[this] == old(balances_BasicToken[this])) && allowed_StandardToken[this] == old(allowed_StandardToken[this])) && name_AlitaToken[this] == old(name_AlitaToken[this])) && symbol_AlitaToken[this] == old(symbol_AlitaToken[this])) && decimals_AlitaToken[this] == old(decimals_AlitaToken[this])) && init_Supply_AlitaToken[this] == old(init_Supply_AlitaToken[this])) && upgradedAddress_AlitaToken[this] == old(upgradedAddress_AlitaToken[this])) && deprecated_AlitaToken[this] == old(deprecated_AlitaToken[this])) && isBlackListed_BlackList[this] == old(isBlackListed_BlackList[this])) && paused_Pausable[this] == old(paused_Pausable[this])) && owner_Ownable[this] == old(owner_Ownable[this]));
[L2]                 revert := revert_hold;
[L8523]  RET         call __ret_0_transfer := transfer~address~uint256_AlitaToken(this, msgsender_MSG, msgvalue_MSG, _to_s754, _value_s754);
[L8673]  RET         call CorralChoice_AlitaToken(this);

Loop:
[L8673]  CALL        call CorralChoice_AlitaToken(this);
[L8433]              havoc msgsender_MSG;
[L8434]              havoc msgvalue_MSG;
[L8435]              havoc choice;
[L8436]              havoc __ret_0_owner;
[L8437]              havoc newOwner_s42;
[L8438]              havoc __ret_0_totalSupply;
[L8439]              havoc _owner_s166;
[L8440]              havoc __ret_0_balanceOf;
[L8441]              havoc _to_s754;
[L8442]              havoc _value_s754;
[L8443]              havoc __ret_0_transfer;
[L8444]              havoc _owner_s885;
[L8445]              havoc _spender_s885;
[L8446]              havoc __ret_0_allowance;
[L8447]              havoc _from_s812;
[L8448]              havoc _to_s812;
[L8449]              havoc _value_s812;
[L8450]              havoc __ret_0_transferFrom;
[L8451]              havoc _spender_s857;
[L8452]              havoc _value_s857;
[L8453]              havoc __ret_0_approve;
[L8454]              havoc _spender_s913;
[L8455]              havoc _addedValue_s913;
[L8456]              havoc __ret_0_increaseApproval;
[L8457]              havoc _spender_s941;
[L8458]              havoc _subtractedValue_s941;
[L8459]              havoc __ret_0_decreaseApproval;
[L8460]              havoc __ret_0_paused;
[L8461]              havoc _maker_s564;
[L8462]              havoc __ret_0_getBlackListStatus;
[L8463]              havoc __ret_0_getOwner;
[L8464]              havoc arg1060_s0;
[L8465]              havoc __ret_0_isBlackListed;
[L8466]              havoc _evilUser_s594;
[L8467]              havoc _clearedUser_s612;
[L8468]              havoc _blackListedUser_s647;
[L8469]              havoc __ret_0_name;
[L8470]              havoc __ret_0_symbol;
[L8471]              havoc __ret_0_decimals;
[L8472]              havoc __ret_0_init_Supply;
[L8473]              havoc __ret_0_upgradedAddress;
[L8474]              havoc __ret_0_deprecated;
[L8475]              havoc _upgradedAddress_s961;
[L8476]              havoc tmpNow;
[L8477]              havoc gas;
[L8478]              assume gas > 4000000 && gas <= 8000000;
[L8479]              tmpNow := now;
[L8480]              havoc now;
[L8481]              assume now > tmpNow;
[L8482]              assume msgsender_MSG != null;
[L8483]              assume DType[msgsender_MSG] != Ownable;
[L8484]              assume DType[msgsender_MSG] != ERC20Basic;
[L8485]              assume DType[msgsender_MSG] != BasicToken;
[L8486]              assume DType[msgsender_MSG] != ERC20;
[L8487]              assume DType[msgsender_MSG] != StandardToken;
[L8488]              assume DType[msgsender_MSG] != Pausable;
[L8489]              assume DType[msgsender_MSG] != UpgradedStandardToken;
[L8490]              assume DType[msgsender_MSG] != BlackList;
[L8491]              assume DType[msgsender_MSG] != AlitaToken;
[L8492]              assume DType[msgsender_MSG] != SafeMath;
[L8493]              Alloc[msgsender_MSG] := true;
[L8494]  COND FALSE  !(choice == 26)
[L8500]  COND FALSE  !(choice == 25)
[L8506]  COND FALSE  !(choice == 24)
[L8512]  COND FALSE  !(choice == 23)
[L8518]  COND TRUE   choice == 22
[L8519]              gas := gas - 21000;
[L8520]  COND TRUE   gas >= 0
[L8521]              assume _value_s754 >= 0 && _value_s754 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L8522]              assume msgvalue_MSG == 0;
[L8523]  CALL        call __ret_0_transfer := transfer~address~uint256_AlitaToken(this, msgsender_MSG, msgvalue_MSG, _to_s754, _value_s754);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == _to_s754 && _value_s754 <= balances_BasicToken[this][msgsender_MSG]) && _value_s754 >= 0) && _value_s754 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BasicToken[this][_to_s754] >= 0) && balances_BasicToken[this][_to_s754] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BasicToken[this][msgsender_MSG] >= 0) && balances_BasicToken[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_AlitaToken0 := true;
[L2]                 call_transfer_AlitaToken0 := false;
[L2]                 revert := revert_hold;
[L2049]              havoc __exception;
[L2050]              revert := false;
[L2051]  COND FALSE  !(__exception)
[L2080]  CALL        call __ret_0_ := transfer~address~uint256_AlitaToken__success(this, msgsender_MSG, msgvalue_MSG, _to_s754, _value_s754);
[L5022]  CALL        call whenNotPaused_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L7448]  COND FALSE  !(!!paused_Pausable[this])
[L5022]  RET         call whenNotPaused_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L5023]  COND FALSE  !(revert)
[L5026]  COND FALSE  !(!!isBlackListed_BlackList[this][msgsender_MSG])
[L5030]  COND FALSE  !(!!isBlackListed_BlackList[this][_to_s754])
[L5034]  COND TRUE   deprecated_AlitaToken[this]
[L5035]              assume DType[upgradedAddress_AlitaToken[this]] == UpgradedStandardToken;
[L5036]              __var_12 := upgradedAddress_AlitaToken[this];
[L5038]              __ret_0_ := __var_11;
[L2080]  RET         call __ret_0_ := transfer~address~uint256_AlitaToken__success(this, msgsender_MSG, msgvalue_MSG, _to_s754, _value_s754);
[L2081]              assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !((((((((((((__ret_0_ == true && totalSupply__BasicToken[this] == old(totalSupply__BasicToken[this])) && balances_BasicToken[this] == old(balances_BasicToken[this])) && allowed_StandardToken[this] == old(allowed_StandardToken[this])) && name_AlitaToken[this] == old(name_AlitaToken[this])) && symbol_AlitaToken[this] == old(symbol_AlitaToken[this])) && decimals_AlitaToken[this] == old(decimals_AlitaToken[this])) && init_Supply_AlitaToken[this] == old(init_Supply_AlitaToken[this])) && upgradedAddress_AlitaToken[this] == old(upgradedAddress_AlitaToken[this])) && deprecated_AlitaToken[this] == old(deprecated_AlitaToken[this])) && isBlackListed_BlackList[this] == old(isBlackListed_BlackList[this])) && paused_Pausable[this] == old(paused_Pausable[this])) && owner_Ownable[this] == old(owner_Ownable[this]));
[L2]                 revert := revert_hold;
[L8523]  RET         call __ret_0_transfer := transfer~address~uint256_AlitaToken(this, msgsender_MSG, msgvalue_MSG, _to_s754, _value_s754);
[L8673]  RET         call CorralChoice_AlitaToken(this);

[2020-11-24 23:45:42,029 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 23:45:42,029 INFO  L82        PathProgramCache]: Analyzing trace with hash 2142494992, now seen corresponding path program 1 times
[2020-11-24 23:45:42,030 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 23:45:42,046 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 23:45:42,149 INFO  L134       CoverageAnalysis]: Checked inductivity of 381 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 381 trivial. 0 not checked.
[2020-11-24 23:45:42,149 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 23:45:42,149 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [9] imperfect sequences [] total 9
[2020-11-24 23:45:42,150 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 23:45:42,150 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 10 interpolants.
[2020-11-24 23:45:42,150 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=17, Invalid=73, Unknown=0, NotChecked=0, Total=90
[2020-11-24 23:45:42,150 INFO  L87              Difference]: Start difference. First operand 4417 states and 4806 transitions. cyclomatic complexity: 399 Second operand 10 states.
[2020-11-24 23:45:43,991 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 23:45:43,991 INFO  L93              Difference]: Finished difference Result 4467 states and 4872 transitions.
[2020-11-24 23:45:43,991 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 10 states. 
[2020-11-24 23:45:43,991 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 4467 states and 4872 transitions.
[2020-11-24 23:45:44,003 INFO  L131   ngComponentsAnalysis]: Automaton has 3 accepting balls. 6
[2020-11-24 23:45:44,015 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 4467 states to 4467 states and 4872 transitions.
[2020-11-24 23:45:44,015 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 1159
[2020-11-24 23:45:44,016 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 1159
[2020-11-24 23:45:44,016 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 4467 states and 4872 transitions.
[2020-11-24 23:45:44,020 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 23:45:44,020 INFO  L728         BuchiCegarLoop]: Abstraction has 4467 states and 4872 transitions.
[2020-11-24 23:45:44,023 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 4467 states and 4872 transitions.
[2020-11-24 23:45:44,051 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 4467 to 4463.
[2020-11-24 23:45:44,051 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 4463 states.
[2020-11-24 23:45:44,055 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 4463 states to 4463 states and 4860 transitions.
[2020-11-24 23:45:44,055 INFO  L751         BuchiCegarLoop]: Abstraction has 4463 states and 4860 transitions.
[2020-11-24 23:45:44,055 INFO  L631         BuchiCegarLoop]: Abstraction has 4463 states and 4860 transitions.
[2020-11-24 23:45:44,055 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-24 23:45:44,055 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 4463 states and 4860 transitions.
[2020-11-24 23:45:44,061 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 4
[2020-11-24 23:45:44,061 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 23:45:44,061 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 23:45:44,063 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [8, 8, 8, 8, 8, 8, 8, 8, 8, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 23:45:44,063 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 success_transfer_AlitaToken0 := false;
[L2]                 call_transfer_AlitaToken0 := false;
[L2]     CALL        call main();
[L8663]              assume null == 0;
[L8664]  CALL        call this := FreshRefGenerator__success();
[L3958]              havoc newRef;
[L3959]              assume Alloc[newRef] == false;
[L3960]              Alloc[newRef] := true;
[L3961]              assume newRef != null;
[L8664]  RET         call this := FreshRefGenerator__success();
[L8665]              assume now >= 0;
[L8666]              assume DType[this] == AlitaToken;
[L8667]              assume msgvalue_MSG == 0;
[L8668]              gas := gas - 53000;
[L8669]  CALL        call AlitaToken_AlitaToken(this, msgsender_MSG, msgvalue_MSG);
[L1981]              havoc __exception;
[L1982]              revert := false;
[L1983]  COND FALSE  !(__exception)
[L2012]  CALL        call AlitaToken_AlitaToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4942]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3994]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3977]              assume msgsender_MSG != null;
[L3978]              Balance[this] := 0;
[L3979]              owner_Ownable[this] := null;
[L3981]              owner_Ownable[this] := msgsender_MSG;
[L3994]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3995]  COND FALSE  !(revert)
[L4942]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4943]  COND FALSE  !(revert)
[L4946]  CALL        call Pausable_Pausable__success(this, msgsender_MSG, msgvalue_MSG);
[L4531]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3994]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3977]              assume msgsender_MSG != null;
[L3978]              Balance[this] := 0;
[L3979]              owner_Ownable[this] := null;
[L3981]              owner_Ownable[this] := msgsender_MSG;
[L3994]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3995]  COND FALSE  !(revert)
[L4531]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4532]  COND FALSE  !(revert)
[L4535]  CALL        call Pausable_Pausable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4511]              assume msgsender_MSG != null;
[L4512]              Balance[this] := 0;
[L4513]              paused_Pausable[this] := false;
[L4535]  RET         call Pausable_Pausable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4536]  COND FALSE  !(revert)
[L4946]  RET         call Pausable_Pausable__success(this, msgsender_MSG, msgvalue_MSG);
[L4947]  COND FALSE  !(revert)
[L4950]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4064]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4049]              assume msgsender_MSG != null;
[L4050]              Balance[this] := 0;
[L4064]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  COND FALSE  !(revert)
[L4950]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4951]  COND FALSE  !(revert)
[L4954]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4235]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4064]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4049]              assume msgsender_MSG != null;
[L4050]              Balance[this] := 0;
[L4064]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  COND FALSE  !(revert)
[L4235]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4236]  COND FALSE  !(revert)
[L4239]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4216]              assume msgsender_MSG != null;
[L4217]              Balance[this] := 0;
[L4239]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4240]  COND FALSE  !(revert)
[L4954]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4955]  COND FALSE  !(revert)
[L4958]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4106]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4064]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4049]              assume msgsender_MSG != null;
[L4050]              Balance[this] := 0;
[L4064]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  COND FALSE  !(revert)
[L4106]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4107]  COND FALSE  !(revert)
[L4110]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4084]              assume msgsender_MSG != null;
[L4085]              Balance[this] := 0;
[L4086]              balances_BasicToken[this] := zeroRefintArr();
[L4087]              sum_balances0[this] := 0;
[L4088]              totalSupply__BasicToken[this] := 0;
[L4110]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4111]  COND FALSE  !(revert)
[L4958]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4959]  COND FALSE  !(revert)
[L4962]  CALL        call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4287]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4064]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4049]              assume msgsender_MSG != null;
[L4050]              Balance[this] := 0;
[L4064]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  COND FALSE  !(revert)
[L4287]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4288]  COND FALSE  !(revert)
[L4291]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4235]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4064]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4049]              assume msgsender_MSG != null;
[L4050]              Balance[this] := 0;
[L4064]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  COND FALSE  !(revert)
[L4235]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4236]  COND FALSE  !(revert)
[L4239]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4216]              assume msgsender_MSG != null;
[L4217]              Balance[this] := 0;
[L4239]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4240]  COND FALSE  !(revert)
[L4291]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4292]  COND FALSE  !(revert)
[L4295]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4106]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4064]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4049]              assume msgsender_MSG != null;
[L4050]              Balance[this] := 0;
[L4064]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  COND FALSE  !(revert)
[L4106]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4107]  COND FALSE  !(revert)
[L4110]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4084]              assume msgsender_MSG != null;
[L4085]              Balance[this] := 0;
[L4086]              balances_BasicToken[this] := zeroRefintArr();
[L4087]              sum_balances0[this] := 0;
[L4088]              totalSupply__BasicToken[this] := 0;
[L4110]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4111]  COND FALSE  !(revert)
[L4295]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4296]  COND FALSE  !(revert)
[L4299]  CALL        call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4258]              assume msgsender_MSG != null;
[L4259]              Balance[this] := 0;
[L4260]              allowed_StandardToken[this] := zeroRefRefintArr();
[L4261]              sum_allowed1[this] := 0;
[L4299]  RET         call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4300]  COND FALSE  !(revert)
[L4962]  RET         call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4963]  COND FALSE  !(revert)
[L4966]  CALL        call BlackList_BlackList__success(this, msgsender_MSG, msgvalue_MSG);
[L4711]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3994]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3977]              assume msgsender_MSG != null;
[L3978]              Balance[this] := 0;
[L3979]              owner_Ownable[this] := null;
[L3981]              owner_Ownable[this] := msgsender_MSG;
[L3994]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3995]  COND FALSE  !(revert)
[L4711]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4712]  COND FALSE  !(revert)
[L4715]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4064]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4049]              assume msgsender_MSG != null;
[L4050]              Balance[this] := 0;
[L4064]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  COND FALSE  !(revert)
[L4715]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4716]  COND FALSE  !(revert)
[L4719]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4106]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4064]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4049]              assume msgsender_MSG != null;
[L4050]              Balance[this] := 0;
[L4064]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  COND FALSE  !(revert)
[L4106]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4107]  COND FALSE  !(revert)
[L4110]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4084]              assume msgsender_MSG != null;
[L4085]              Balance[this] := 0;
[L4086]              balances_BasicToken[this] := zeroRefintArr();
[L4087]              sum_balances0[this] := 0;
[L4088]              totalSupply__BasicToken[this] := 0;
[L4110]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4111]  COND FALSE  !(revert)
[L4719]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4720]  COND FALSE  !(revert)
[L4723]  CALL        call BlackList_BlackList_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4683]              assume msgsender_MSG != null;
[L4684]              Balance[this] := 0;
[L4685]              isBlackListed_BlackList[this] := zeroRefboolArr();
[L4723]  RET         call BlackList_BlackList_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4724]  COND FALSE  !(revert)
[L4966]  RET         call BlackList_BlackList__success(this, msgsender_MSG, msgvalue_MSG);
[L4967]  COND FALSE  !(revert)
[L4970]  CALL        call AlitaToken_AlitaToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4888]              assume msgsender_MSG != null;
[L4889]              Balance[this] := 0;
[L4890]              name_AlitaToken[this] := -1110093910;
[L4891]              symbol_AlitaToken[this] := 1234648092;
[L4892]              decimals_AlitaToken[this] := 18;
[L4893]              init_Supply_AlitaToken[this] := 1000000000 * (1000000000000000000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L4894]              upgradedAddress_AlitaToken[this] := null;
[L4895]              deprecated_AlitaToken[this] := false;
[L4897]              totalSupply__BasicToken[this] := init_Supply_AlitaToken[this];
[L4898]              sum_balances0[this] := sum_balances0[this] - balances_BasicToken[this][msgsender_MSG];
[L4899]              balances_BasicToken[this][msgsender_MSG] := totalSupply__BasicToken[this];
[L4900]              sum_balances0[this] := sum_balances0[this] + balances_BasicToken[this][msgsender_MSG];
[L4901]              deprecated_AlitaToken[this] := false;
[L4970]  RET         call AlitaToken_AlitaToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4971]  COND FALSE  !(revert)
[L2012]  RET         call AlitaToken_AlitaToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2013]              assume !revert && gas >= 0;
[L8669]  RET         call AlitaToken_AlitaToken(this, msgsender_MSG, msgvalue_MSG);
[L8670]              assume !revert && gas >= 0;
[L8673]  CALL        call CorralChoice_AlitaToken(this);
[L8433]              havoc msgsender_MSG;
[L8434]              havoc msgvalue_MSG;
[L8435]              havoc choice;
[L8436]              havoc __ret_0_owner;
[L8437]              havoc newOwner_s42;
[L8438]              havoc __ret_0_totalSupply;
[L8439]              havoc _owner_s166;
[L8440]              havoc __ret_0_balanceOf;
[L8441]              havoc _to_s754;
[L8442]              havoc _value_s754;
[L8443]              havoc __ret_0_transfer;
[L8444]              havoc _owner_s885;
[L8445]              havoc _spender_s885;
[L8446]              havoc __ret_0_allowance;
[L8447]              havoc _from_s812;
[L8448]              havoc _to_s812;
[L8449]              havoc _value_s812;
[L8450]              havoc __ret_0_transferFrom;
[L8451]              havoc _spender_s857;
[L8452]              havoc _value_s857;
[L8453]              havoc __ret_0_approve;
[L8454]              havoc _spender_s913;
[L8455]              havoc _addedValue_s913;
[L8456]              havoc __ret_0_increaseApproval;
[L8457]              havoc _spender_s941;
[L8458]              havoc _subtractedValue_s941;
[L8459]              havoc __ret_0_decreaseApproval;
[L8460]              havoc __ret_0_paused;
[L8461]              havoc _maker_s564;
[L8462]              havoc __ret_0_getBlackListStatus;
[L8463]              havoc __ret_0_getOwner;
[L8464]              havoc arg1060_s0;
[L8465]              havoc __ret_0_isBlackListed;
[L8466]              havoc _evilUser_s594;
[L8467]              havoc _clearedUser_s612;
[L8468]              havoc _blackListedUser_s647;
[L8469]              havoc __ret_0_name;
[L8470]              havoc __ret_0_symbol;
[L8471]              havoc __ret_0_decimals;
[L8472]              havoc __ret_0_init_Supply;
[L8473]              havoc __ret_0_upgradedAddress;
[L8474]              havoc __ret_0_deprecated;
[L8475]              havoc _upgradedAddress_s961;
[L8476]              havoc tmpNow;
[L8477]              havoc gas;
[L8478]              assume gas > 4000000 && gas <= 8000000;
[L8479]              tmpNow := now;
[L8480]              havoc now;
[L8481]              assume now > tmpNow;
[L8482]              assume msgsender_MSG != null;
[L8483]              assume DType[msgsender_MSG] != Ownable;
[L8484]              assume DType[msgsender_MSG] != ERC20Basic;
[L8485]              assume DType[msgsender_MSG] != BasicToken;
[L8486]              assume DType[msgsender_MSG] != ERC20;
[L8487]              assume DType[msgsender_MSG] != StandardToken;
[L8488]              assume DType[msgsender_MSG] != Pausable;
[L8489]              assume DType[msgsender_MSG] != UpgradedStandardToken;
[L8490]              assume DType[msgsender_MSG] != BlackList;
[L8491]              assume DType[msgsender_MSG] != AlitaToken;
[L8492]              assume DType[msgsender_MSG] != SafeMath;
[L8493]              Alloc[msgsender_MSG] := true;
[L8494]  COND FALSE  !(choice == 26)
[L8500]  COND FALSE  !(choice == 25)
[L8506]  COND FALSE  !(choice == 24)
[L8512]  COND FALSE  !(choice == 23)
[L8518]  COND TRUE   choice == 22
[L8519]              gas := gas - 21000;
[L8520]  COND TRUE   gas >= 0
[L8521]              assume _value_s754 >= 0 && _value_s754 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L8522]              assume msgvalue_MSG == 0;
[L8523]  CALL        call __ret_0_transfer := transfer~address~uint256_AlitaToken(this, msgsender_MSG, msgvalue_MSG, _to_s754, _value_s754);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == _to_s754 && _value_s754 <= balances_BasicToken[this][msgsender_MSG]) && _value_s754 >= 0) && _value_s754 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BasicToken[this][_to_s754] >= 0) && balances_BasicToken[this][_to_s754] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BasicToken[this][msgsender_MSG] >= 0) && balances_BasicToken[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_AlitaToken0 := true;
[L2]                 call_transfer_AlitaToken0 := false;
[L2]                 revert := revert_hold;
[L2049]              havoc __exception;
[L2050]              revert := false;
[L2051]  COND TRUE   __exception
[L2052]              __tmp__Balance := Balance;
[L2053]              __tmp__DType := DType;
[L2054]              __tmp__Alloc := Alloc;
[L2055]              __tmp__balance_ADDR := balance_ADDR;
[L2056]              __tmp__M_Ref_int := M_Ref_int;
[L2057]              __tmp__sum_balances0 := sum_balances0;
[L2058]              __tmp__alloc_allowed_StandardToken_lvl0 := alloc_allowed_StandardToken_lvl0;
[L2059]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L2060]              __tmp__sum_allowed1 := sum_allowed1;
[L2061]              __tmp__M_Ref_bool := M_Ref_bool;
[L2062]              __tmp__sum_isBlackListed2 := sum_isBlackListed2;
[L2063]              __tmp__Length := Length;
[L2064]              __tmp__now := now;
[L2065]              __tmp__owner_Ownable := owner_Ownable;
[L2066]              __tmp__balances_BasicToken := balances_BasicToken;
[L2067]              __tmp__totalSupply__BasicToken := totalSupply__BasicToken;
[L2068]              __tmp__allowed_StandardToken := allowed_StandardToken;
[L2069]              __tmp__paused_Pausable := paused_Pausable;
[L2070]              __tmp__isBlackListed_BlackList := isBlackListed_BlackList;
[L2071]              __tmp__name_AlitaToken := name_AlitaToken;
[L2072]              __tmp__symbol_AlitaToken := symbol_AlitaToken;
[L2073]              __tmp__decimals_AlitaToken := decimals_AlitaToken;
[L2074]              __tmp__init_Supply_AlitaToken := init_Supply_AlitaToken;
[L2075]              __tmp__upgradedAddress_AlitaToken := upgradedAddress_AlitaToken;
[L2076]              __tmp__deprecated_AlitaToken := deprecated_AlitaToken;
[L2077]  CALL        call __ret_0_ := transfer~address~uint256_AlitaToken__fail(this, msgsender_MSG, msgvalue_MSG, _to_s754, _value_s754);
[L4983]  CALL        call whenNotPaused_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L7440]  COND TRUE   !!__tmp__paused_Pausable[this]
[L7441]              revert := true;
[L4983]  RET         call whenNotPaused_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L4984]  COND TRUE   revert
[L2077]  RET         call __ret_0_ := transfer~address~uint256_AlitaToken__fail(this, msgsender_MSG, msgvalue_MSG, _to_s754, _value_s754);
[L2078]              assume revert || gas < 0;
[L8523]  RET         call __ret_0_transfer := transfer~address~uint256_AlitaToken(this, msgsender_MSG, msgvalue_MSG, _to_s754, _value_s754);
[L8673]  RET         call CorralChoice_AlitaToken(this);

Loop:
[L8673]  CALL        call CorralChoice_AlitaToken(this);
[L8433]              havoc msgsender_MSG;
[L8434]              havoc msgvalue_MSG;
[L8435]              havoc choice;
[L8436]              havoc __ret_0_owner;
[L8437]              havoc newOwner_s42;
[L8438]              havoc __ret_0_totalSupply;
[L8439]              havoc _owner_s166;
[L8440]              havoc __ret_0_balanceOf;
[L8441]              havoc _to_s754;
[L8442]              havoc _value_s754;
[L8443]              havoc __ret_0_transfer;
[L8444]              havoc _owner_s885;
[L8445]              havoc _spender_s885;
[L8446]              havoc __ret_0_allowance;
[L8447]              havoc _from_s812;
[L8448]              havoc _to_s812;
[L8449]              havoc _value_s812;
[L8450]              havoc __ret_0_transferFrom;
[L8451]              havoc _spender_s857;
[L8452]              havoc _value_s857;
[L8453]              havoc __ret_0_approve;
[L8454]              havoc _spender_s913;
[L8455]              havoc _addedValue_s913;
[L8456]              havoc __ret_0_increaseApproval;
[L8457]              havoc _spender_s941;
[L8458]              havoc _subtractedValue_s941;
[L8459]              havoc __ret_0_decreaseApproval;
[L8460]              havoc __ret_0_paused;
[L8461]              havoc _maker_s564;
[L8462]              havoc __ret_0_getBlackListStatus;
[L8463]              havoc __ret_0_getOwner;
[L8464]              havoc arg1060_s0;
[L8465]              havoc __ret_0_isBlackListed;
[L8466]              havoc _evilUser_s594;
[L8467]              havoc _clearedUser_s612;
[L8468]              havoc _blackListedUser_s647;
[L8469]              havoc __ret_0_name;
[L8470]              havoc __ret_0_symbol;
[L8471]              havoc __ret_0_decimals;
[L8472]              havoc __ret_0_init_Supply;
[L8473]              havoc __ret_0_upgradedAddress;
[L8474]              havoc __ret_0_deprecated;
[L8475]              havoc _upgradedAddress_s961;
[L8476]              havoc tmpNow;
[L8477]              havoc gas;
[L8478]              assume gas > 4000000 && gas <= 8000000;
[L8479]              tmpNow := now;
[L8480]              havoc now;
[L8481]              assume now > tmpNow;
[L8482]              assume msgsender_MSG != null;
[L8483]              assume DType[msgsender_MSG] != Ownable;
[L8484]              assume DType[msgsender_MSG] != ERC20Basic;
[L8485]              assume DType[msgsender_MSG] != BasicToken;
[L8486]              assume DType[msgsender_MSG] != ERC20;
[L8487]              assume DType[msgsender_MSG] != StandardToken;
[L8488]              assume DType[msgsender_MSG] != Pausable;
[L8489]              assume DType[msgsender_MSG] != UpgradedStandardToken;
[L8490]              assume DType[msgsender_MSG] != BlackList;
[L8491]              assume DType[msgsender_MSG] != AlitaToken;
[L8492]              assume DType[msgsender_MSG] != SafeMath;
[L8493]              Alloc[msgsender_MSG] := true;
[L8494]  COND FALSE  !(choice == 26)
[L8500]  COND FALSE  !(choice == 25)
[L8506]  COND FALSE  !(choice == 24)
[L8512]  COND FALSE  !(choice == 23)
[L8518]  COND TRUE   choice == 22
[L8519]              gas := gas - 21000;
[L8520]  COND TRUE   gas >= 0
[L8521]              assume _value_s754 >= 0 && _value_s754 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L8522]              assume msgvalue_MSG == 0;
[L8523]  CALL        call __ret_0_transfer := transfer~address~uint256_AlitaToken(this, msgsender_MSG, msgvalue_MSG, _to_s754, _value_s754);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == _to_s754 && _value_s754 <= balances_BasicToken[this][msgsender_MSG]) && _value_s754 >= 0) && _value_s754 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BasicToken[this][_to_s754] >= 0) && balances_BasicToken[this][_to_s754] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BasicToken[this][msgsender_MSG] >= 0) && balances_BasicToken[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_AlitaToken0 := true;
[L2]                 call_transfer_AlitaToken0 := false;
[L2]                 revert := revert_hold;
[L2049]              havoc __exception;
[L2050]              revert := false;
[L2051]  COND TRUE   __exception
[L2052]              __tmp__Balance := Balance;
[L2053]              __tmp__DType := DType;
[L2054]              __tmp__Alloc := Alloc;
[L2055]              __tmp__balance_ADDR := balance_ADDR;
[L2056]              __tmp__M_Ref_int := M_Ref_int;
[L2057]              __tmp__sum_balances0 := sum_balances0;
[L2058]              __tmp__alloc_allowed_StandardToken_lvl0 := alloc_allowed_StandardToken_lvl0;
[L2059]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L2060]              __tmp__sum_allowed1 := sum_allowed1;
[L2061]              __tmp__M_Ref_bool := M_Ref_bool;
[L2062]              __tmp__sum_isBlackListed2 := sum_isBlackListed2;
[L2063]              __tmp__Length := Length;
[L2064]              __tmp__now := now;
[L2065]              __tmp__owner_Ownable := owner_Ownable;
[L2066]              __tmp__balances_BasicToken := balances_BasicToken;
[L2067]              __tmp__totalSupply__BasicToken := totalSupply__BasicToken;
[L2068]              __tmp__allowed_StandardToken := allowed_StandardToken;
[L2069]              __tmp__paused_Pausable := paused_Pausable;
[L2070]              __tmp__isBlackListed_BlackList := isBlackListed_BlackList;
[L2071]              __tmp__name_AlitaToken := name_AlitaToken;
[L2072]              __tmp__symbol_AlitaToken := symbol_AlitaToken;
[L2073]              __tmp__decimals_AlitaToken := decimals_AlitaToken;
[L2074]              __tmp__init_Supply_AlitaToken := init_Supply_AlitaToken;
[L2075]              __tmp__upgradedAddress_AlitaToken := upgradedAddress_AlitaToken;
[L2076]              __tmp__deprecated_AlitaToken := deprecated_AlitaToken;
[L2077]  CALL        call __ret_0_ := transfer~address~uint256_AlitaToken__fail(this, msgsender_MSG, msgvalue_MSG, _to_s754, _value_s754);
[L4983]  CALL        call whenNotPaused_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L7440]  COND TRUE   !!__tmp__paused_Pausable[this]
[L7441]              revert := true;
[L4983]  RET         call whenNotPaused_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L4984]  COND TRUE   revert
[L2077]  RET         call __ret_0_ := transfer~address~uint256_AlitaToken__fail(this, msgsender_MSG, msgvalue_MSG, _to_s754, _value_s754);
[L2078]              assume revert || gas < 0;
[L8523]  RET         call __ret_0_transfer := transfer~address~uint256_AlitaToken(this, msgsender_MSG, msgvalue_MSG, _to_s754, _value_s754);
[L8673]  RET         call CorralChoice_AlitaToken(this);

[2020-11-24 23:45:44,067 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 23:45:44,068 INFO  L82        PathProgramCache]: Analyzing trace with hash 987887156, now seen corresponding path program 1 times
[2020-11-24 23:45:44,068 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 23:45:44,081 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 23:45:44,197 INFO  L134       CoverageAnalysis]: Checked inductivity of 381 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 381 trivial. 0 not checked.
[2020-11-24 23:45:44,197 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 23:45:44,197 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [12] imperfect sequences [] total 12
[2020-11-24 23:45:44,197 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 23:45:44,197 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 13 interpolants.
[2020-11-24 23:45:44,198 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=23, Invalid=133, Unknown=0, NotChecked=0, Total=156
[2020-11-24 23:45:44,198 INFO  L87              Difference]: Start difference. First operand 4463 states and 4860 transitions. cyclomatic complexity: 409 Second operand 13 states.
[2020-11-24 23:45:47,793 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 23:45:47,794 INFO  L93              Difference]: Finished difference Result 7221 states and 8037 transitions.
[2020-11-24 23:45:47,794 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 15 states. 
[2020-11-24 23:45:47,794 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 7221 states and 8037 transitions.
[2020-11-24 23:45:47,809 INFO  L131   ngComponentsAnalysis]: Automaton has 5 accepting balls. 20
[2020-11-24 23:45:47,829 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 7221 states to 7221 states and 8037 transitions.
[2020-11-24 23:45:47,829 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 1931
[2020-11-24 23:45:47,830 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 1931
[2020-11-24 23:45:47,830 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 7221 states and 8037 transitions.
[2020-11-24 23:45:47,840 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 23:45:47,840 INFO  L728         BuchiCegarLoop]: Abstraction has 7221 states and 8037 transitions.
[2020-11-24 23:45:47,844 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 7221 states and 8037 transitions.
[2020-11-24 23:45:47,899 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 7221 to 6251.
[2020-11-24 23:45:47,899 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 6251 states.
[2020-11-24 23:45:47,907 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 6251 states to 6251 states and 7036 transitions.
[2020-11-24 23:45:47,907 INFO  L751         BuchiCegarLoop]: Abstraction has 6251 states and 7036 transitions.
[2020-11-24 23:45:47,907 INFO  L631         BuchiCegarLoop]: Abstraction has 6251 states and 7036 transitions.
[2020-11-24 23:45:47,907 INFO  L445         BuchiCegarLoop]: ======== Iteration 5============
[2020-11-24 23:45:47,907 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 6251 states and 7036 transitions.
[2020-11-24 23:45:47,916 INFO  L131   ngComponentsAnalysis]: Automaton has 4 accepting balls. 16
[2020-11-24 23:45:47,916 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 23:45:47,916 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 23:45:47,918 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [8, 8, 8, 8, 8, 8, 8, 8, 8, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 23:45:47,918 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 success_transfer_AlitaToken0 := false;
[L2]                 call_transfer_AlitaToken0 := false;
[L2]     CALL        call main();
[L8663]              assume null == 0;
[L8664]  CALL        call this := FreshRefGenerator__success();
[L3958]              havoc newRef;
[L3959]              assume Alloc[newRef] == false;
[L3960]              Alloc[newRef] := true;
[L3961]              assume newRef != null;
[L8664]  RET         call this := FreshRefGenerator__success();
[L8665]              assume now >= 0;
[L8666]              assume DType[this] == AlitaToken;
[L8667]              assume msgvalue_MSG == 0;
[L8668]              gas := gas - 53000;
[L8669]  CALL        call AlitaToken_AlitaToken(this, msgsender_MSG, msgvalue_MSG);
[L1981]              havoc __exception;
[L1982]              revert := false;
[L1983]  COND TRUE   __exception
[L1984]              __tmp__Balance := Balance;
[L1985]              __tmp__DType := DType;
[L1986]              __tmp__Alloc := Alloc;
[L1987]              __tmp__balance_ADDR := balance_ADDR;
[L1988]              __tmp__M_Ref_int := M_Ref_int;
[L1989]              __tmp__sum_balances0 := sum_balances0;
[L1990]              __tmp__alloc_allowed_StandardToken_lvl0 := alloc_allowed_StandardToken_lvl0;
[L1991]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L1992]              __tmp__sum_allowed1 := sum_allowed1;
[L1993]              __tmp__M_Ref_bool := M_Ref_bool;
[L1994]              __tmp__sum_isBlackListed2 := sum_isBlackListed2;
[L1995]              __tmp__Length := Length;
[L1996]              __tmp__now := now;
[L1997]              __tmp__owner_Ownable := owner_Ownable;
[L1998]              __tmp__balances_BasicToken := balances_BasicToken;
[L1999]              __tmp__totalSupply__BasicToken := totalSupply__BasicToken;
[L2000]              __tmp__allowed_StandardToken := allowed_StandardToken;
[L2001]              __tmp__paused_Pausable := paused_Pausable;
[L2002]              __tmp__isBlackListed_BlackList := isBlackListed_BlackList;
[L2003]              __tmp__name_AlitaToken := name_AlitaToken;
[L2004]              __tmp__symbol_AlitaToken := symbol_AlitaToken;
[L2005]              __tmp__decimals_AlitaToken := decimals_AlitaToken;
[L2006]              __tmp__init_Supply_AlitaToken := init_Supply_AlitaToken;
[L2007]              __tmp__upgradedAddress_AlitaToken := upgradedAddress_AlitaToken;
[L2008]              __tmp__deprecated_AlitaToken := deprecated_AlitaToken;
[L2009]  CALL        call AlitaToken_AlitaToken__fail(this, msgsender_MSG, msgvalue_MSG);
[L4906]  CALL        call Ownable_Ownable__fail(this, msgsender_MSG, msgvalue_MSG);
[L3986]  CALL        call Ownable_Ownable_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L3967]              assume msgsender_MSG != null;
[L3968]              __tmp__Balance[this] := 0;
[L3969]              __tmp__owner_Ownable[this] := null;
[L3971]              __tmp__owner_Ownable[this] := msgsender_MSG;
[L3986]  RET         call Ownable_Ownable_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L3987]  COND FALSE  !(revert)
[L4906]  RET         call Ownable_Ownable__fail(this, msgsender_MSG, msgvalue_MSG);
[L4907]  COND FALSE  !(revert)
[L4910]  CALL        call Pausable_Pausable__fail(this, msgsender_MSG, msgvalue_MSG);
[L4519]  CALL        call Ownable_Ownable__fail(this, msgsender_MSG, msgvalue_MSG);
[L3986]  CALL        call Ownable_Ownable_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L3967]              assume msgsender_MSG != null;
[L3968]              __tmp__Balance[this] := 0;
[L3969]              __tmp__owner_Ownable[this] := null;
[L3971]              __tmp__owner_Ownable[this] := msgsender_MSG;
[L3986]  RET         call Ownable_Ownable_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L3987]  COND FALSE  !(revert)
[L4519]  RET         call Ownable_Ownable__fail(this, msgsender_MSG, msgvalue_MSG);
[L4520]  COND FALSE  !(revert)
[L4523]  CALL        call Pausable_Pausable_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L4502]              assume msgsender_MSG != null;
[L4503]              __tmp__Balance[this] := 0;
[L4504]              __tmp__paused_Pausable[this] := false;
[L4523]  RET         call Pausable_Pausable_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L4524]  COND FALSE  !(revert)
[L4910]  RET         call Pausable_Pausable__fail(this, msgsender_MSG, msgvalue_MSG);
[L4911]  COND FALSE  !(revert)
[L4914]  CALL        call ERC20Basic_ERC20Basic__fail(this, msgsender_MSG, msgvalue_MSG);
[L4056]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L4041]              assume msgsender_MSG != null;
[L4042]              __tmp__Balance[this] := 0;
[L4056]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L4057]  COND FALSE  !(revert)
[L4914]  RET         call ERC20Basic_ERC20Basic__fail(this, msgsender_MSG, msgvalue_MSG);
[L4915]  COND FALSE  !(revert)
[L4918]  CALL        call ERC20_ERC20__fail(this, msgsender_MSG, msgvalue_MSG);
[L4223]  CALL        call ERC20Basic_ERC20Basic__fail(this, msgsender_MSG, msgvalue_MSG);
[L4056]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L4041]              assume msgsender_MSG != null;
[L4042]              __tmp__Balance[this] := 0;
[L4056]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L4057]  COND FALSE  !(revert)
[L4223]  RET         call ERC20Basic_ERC20Basic__fail(this, msgsender_MSG, msgvalue_MSG);
[L4224]  COND FALSE  !(revert)
[L4227]  CALL        call ERC20_ERC20_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L4208]              assume msgsender_MSG != null;
[L4209]              __tmp__Balance[this] := 0;
[L4227]  RET         call ERC20_ERC20_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L4228]  COND FALSE  !(revert)
[L4918]  RET         call ERC20_ERC20__fail(this, msgsender_MSG, msgvalue_MSG);
[L4919]  COND FALSE  !(revert)
[L4922]  CALL        call BasicToken_BasicToken__fail(this, msgsender_MSG, msgvalue_MSG);
[L4094]  CALL        call ERC20Basic_ERC20Basic__fail(this, msgsender_MSG, msgvalue_MSG);
[L4056]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L4041]              assume msgsender_MSG != null;
[L4042]              __tmp__Balance[this] := 0;
[L4056]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L4057]  COND FALSE  !(revert)
[L4094]  RET         call ERC20Basic_ERC20Basic__fail(this, msgsender_MSG, msgvalue_MSG);
[L4095]  COND FALSE  !(revert)
[L4098]  CALL        call BasicToken_BasicToken_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L4073]              assume msgsender_MSG != null;
[L4074]              __tmp__Balance[this] := 0;
[L4075]              __tmp__balances_BasicToken[this] := zeroRefintArr();
[L4076]              __tmp__sum_balances0[this] := 0;
[L4077]              __tmp__totalSupply__BasicToken[this] := 0;
[L4098]  RET         call BasicToken_BasicToken_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L4099]  COND FALSE  !(revert)
[L4922]  RET         call BasicToken_BasicToken__fail(this, msgsender_MSG, msgvalue_MSG);
[L4923]  COND FALSE  !(revert)
[L4926]  CALL        call StandardToken_StandardToken__fail(this, msgsender_MSG, msgvalue_MSG);
[L4267]  CALL        call ERC20Basic_ERC20Basic__fail(this, msgsender_MSG, msgvalue_MSG);
[L4056]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L4041]              assume msgsender_MSG != null;
[L4042]              __tmp__Balance[this] := 0;
[L4056]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L4057]  COND FALSE  !(revert)
[L4267]  RET         call ERC20Basic_ERC20Basic__fail(this, msgsender_MSG, msgvalue_MSG);
[L4268]  COND FALSE  !(revert)
[L4271]  CALL        call ERC20_ERC20__fail(this, msgsender_MSG, msgvalue_MSG);
[L4223]  CALL        call ERC20Basic_ERC20Basic__fail(this, msgsender_MSG, msgvalue_MSG);
[L4056]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L4041]              assume msgsender_MSG != null;
[L4042]              __tmp__Balance[this] := 0;
[L4056]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L4057]  COND FALSE  !(revert)
[L4223]  RET         call ERC20Basic_ERC20Basic__fail(this, msgsender_MSG, msgvalue_MSG);
[L4224]  COND FALSE  !(revert)
[L4227]  CALL        call ERC20_ERC20_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L4208]              assume msgsender_MSG != null;
[L4209]              __tmp__Balance[this] := 0;
[L4227]  RET         call ERC20_ERC20_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L4228]  COND FALSE  !(revert)
[L4271]  RET         call ERC20_ERC20__fail(this, msgsender_MSG, msgvalue_MSG);
[L4272]  COND FALSE  !(revert)
[L4275]  CALL        call BasicToken_BasicToken__fail(this, msgsender_MSG, msgvalue_MSG);
[L4094]  CALL        call ERC20Basic_ERC20Basic__fail(this, msgsender_MSG, msgvalue_MSG);
[L4056]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L4041]              assume msgsender_MSG != null;
[L4042]              __tmp__Balance[this] := 0;
[L4056]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L4057]  COND FALSE  !(revert)
[L4094]  RET         call ERC20Basic_ERC20Basic__fail(this, msgsender_MSG, msgvalue_MSG);
[L4095]  COND FALSE  !(revert)
[L4098]  CALL        call BasicToken_BasicToken_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L4073]              assume msgsender_MSG != null;
[L4074]              __tmp__Balance[this] := 0;
[L4075]              __tmp__balances_BasicToken[this] := zeroRefintArr();
[L4076]              __tmp__sum_balances0[this] := 0;
[L4077]              __tmp__totalSupply__BasicToken[this] := 0;
[L4098]  RET         call BasicToken_BasicToken_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L4099]  COND FALSE  !(revert)
[L4275]  RET         call BasicToken_BasicToken__fail(this, msgsender_MSG, msgvalue_MSG);
[L4276]  COND FALSE  !(revert)
[L4279]  CALL        call StandardToken_StandardToken_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L4248]              assume msgsender_MSG != null;
[L4249]              __tmp__Balance[this] := 0;
[L4250]              __tmp__allowed_StandardToken[this] := zeroRefRefintArr();
[L4251]              __tmp__sum_allowed1[this] := 0;
[L4279]  RET         call StandardToken_StandardToken_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L4280]  COND FALSE  !(revert)
[L4926]  RET         call StandardToken_StandardToken__fail(this, msgsender_MSG, msgvalue_MSG);
[L4927]  COND FALSE  !(revert)
[L4930]  CALL        call BlackList_BlackList__fail(this, msgsender_MSG, msgvalue_MSG);
[L4691]  CALL        call Ownable_Ownable__fail(this, msgsender_MSG, msgvalue_MSG);
[L3986]  CALL        call Ownable_Ownable_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L3967]              assume msgsender_MSG != null;
[L3968]              __tmp__Balance[this] := 0;
[L3969]              __tmp__owner_Ownable[this] := null;
[L3971]              __tmp__owner_Ownable[this] := msgsender_MSG;
[L3986]  RET         call Ownable_Ownable_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L3987]  COND FALSE  !(revert)
[L4691]  RET         call Ownable_Ownable__fail(this, msgsender_MSG, msgvalue_MSG);
[L4692]  COND FALSE  !(revert)
[L4695]  CALL        call ERC20Basic_ERC20Basic__fail(this, msgsender_MSG, msgvalue_MSG);
[L4056]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L4041]              assume msgsender_MSG != null;
[L4042]              __tmp__Balance[this] := 0;
[L4056]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L4057]  COND FALSE  !(revert)
[L4695]  RET         call ERC20Basic_ERC20Basic__fail(this, msgsender_MSG, msgvalue_MSG);
[L4696]  COND FALSE  !(revert)
[L4699]  CALL        call BasicToken_BasicToken__fail(this, msgsender_MSG, msgvalue_MSG);
[L4094]  CALL        call ERC20Basic_ERC20Basic__fail(this, msgsender_MSG, msgvalue_MSG);
[L4056]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L4041]              assume msgsender_MSG != null;
[L4042]              __tmp__Balance[this] := 0;
[L4056]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L4057]  COND FALSE  !(revert)
[L4094]  RET         call ERC20Basic_ERC20Basic__fail(this, msgsender_MSG, msgvalue_MSG);
[L4095]  COND FALSE  !(revert)
[L4098]  CALL        call BasicToken_BasicToken_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L4073]              assume msgsender_MSG != null;
[L4074]              __tmp__Balance[this] := 0;
[L4075]              __tmp__balances_BasicToken[this] := zeroRefintArr();
[L4076]              __tmp__sum_balances0[this] := 0;
[L4077]              __tmp__totalSupply__BasicToken[this] := 0;
[L4098]  RET         call BasicToken_BasicToken_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L4099]  COND FALSE  !(revert)
[L4699]  RET         call BasicToken_BasicToken__fail(this, msgsender_MSG, msgvalue_MSG);
[L4700]  COND FALSE  !(revert)
[L4703]  CALL        call BlackList_BlackList_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L4674]              assume msgsender_MSG != null;
[L4675]              __tmp__Balance[this] := 0;
[L4676]              __tmp__isBlackListed_BlackList[this] := zeroRefboolArr();
[L4703]  RET         call BlackList_BlackList_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L4704]  COND FALSE  !(revert)
[L4930]  RET         call BlackList_BlackList__fail(this, msgsender_MSG, msgvalue_MSG);
[L4931]  COND FALSE  !(revert)
[L4934]  CALL        call AlitaToken_AlitaToken_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L4869]              assume msgsender_MSG != null;
[L4870]              __tmp__Balance[this] := 0;
[L4871]              __tmp__name_AlitaToken[this] := -1110093910;
[L4872]              __tmp__symbol_AlitaToken[this] := 1234648092;
[L4873]              __tmp__decimals_AlitaToken[this] := 18;
[L4874]              __tmp__init_Supply_AlitaToken[this] := 1000000000 * (1000000000000000000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L4875]              __tmp__upgradedAddress_AlitaToken[this] := null;
[L4876]              __tmp__deprecated_AlitaToken[this] := false;
[L4878]              __tmp__totalSupply__BasicToken[this] := __tmp__init_Supply_AlitaToken[this];
[L4879]              __tmp__sum_balances0[this] := __tmp__sum_balances0[this] - __tmp__balances_BasicToken[this][msgsender_MSG];
[L4880]              __tmp__balances_BasicToken[this][msgsender_MSG] := __tmp__totalSupply__BasicToken[this];
[L4881]              __tmp__sum_balances0[this] := __tmp__sum_balances0[this] + __tmp__balances_BasicToken[this][msgsender_MSG];
[L4882]              __tmp__deprecated_AlitaToken[this] := false;
[L4934]  RET         call AlitaToken_AlitaToken_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L4935]  COND FALSE  !(revert)
[L2009]  RET         call AlitaToken_AlitaToken__fail(this, msgsender_MSG, msgvalue_MSG);
[L2010]              assume revert || gas < 0;
[L8669]  RET         call AlitaToken_AlitaToken(this, msgsender_MSG, msgvalue_MSG);
[L8670]              assume !revert && gas >= 0;
[L8673]  CALL        call CorralChoice_AlitaToken(this);
[L8433]              havoc msgsender_MSG;
[L8434]              havoc msgvalue_MSG;
[L8435]              havoc choice;
[L8436]              havoc __ret_0_owner;
[L8437]              havoc newOwner_s42;
[L8438]              havoc __ret_0_totalSupply;
[L8439]              havoc _owner_s166;
[L8440]              havoc __ret_0_balanceOf;
[L8441]              havoc _to_s754;
[L8442]              havoc _value_s754;
[L8443]              havoc __ret_0_transfer;
[L8444]              havoc _owner_s885;
[L8445]              havoc _spender_s885;
[L8446]              havoc __ret_0_allowance;
[L8447]              havoc _from_s812;
[L8448]              havoc _to_s812;
[L8449]              havoc _value_s812;
[L8450]              havoc __ret_0_transferFrom;
[L8451]              havoc _spender_s857;
[L8452]              havoc _value_s857;
[L8453]              havoc __ret_0_approve;
[L8454]              havoc _spender_s913;
[L8455]              havoc _addedValue_s913;
[L8456]              havoc __ret_0_increaseApproval;
[L8457]              havoc _spender_s941;
[L8458]              havoc _subtractedValue_s941;
[L8459]              havoc __ret_0_decreaseApproval;
[L8460]              havoc __ret_0_paused;
[L8461]              havoc _maker_s564;
[L8462]              havoc __ret_0_getBlackListStatus;
[L8463]              havoc __ret_0_getOwner;
[L8464]              havoc arg1060_s0;
[L8465]              havoc __ret_0_isBlackListed;
[L8466]              havoc _evilUser_s594;
[L8467]              havoc _clearedUser_s612;
[L8468]              havoc _blackListedUser_s647;
[L8469]              havoc __ret_0_name;
[L8470]              havoc __ret_0_symbol;
[L8471]              havoc __ret_0_decimals;
[L8472]              havoc __ret_0_init_Supply;
[L8473]              havoc __ret_0_upgradedAddress;
[L8474]              havoc __ret_0_deprecated;
[L8475]              havoc _upgradedAddress_s961;
[L8476]              havoc tmpNow;
[L8477]              havoc gas;
[L8478]              assume gas > 4000000 && gas <= 8000000;
[L8479]              tmpNow := now;
[L8480]              havoc now;
[L8481]              assume now > tmpNow;
[L8482]              assume msgsender_MSG != null;
[L8483]              assume DType[msgsender_MSG] != Ownable;
[L8484]              assume DType[msgsender_MSG] != ERC20Basic;
[L8485]              assume DType[msgsender_MSG] != BasicToken;
[L8486]              assume DType[msgsender_MSG] != ERC20;
[L8487]              assume DType[msgsender_MSG] != StandardToken;
[L8488]              assume DType[msgsender_MSG] != Pausable;
[L8489]              assume DType[msgsender_MSG] != UpgradedStandardToken;
[L8490]              assume DType[msgsender_MSG] != BlackList;
[L8491]              assume DType[msgsender_MSG] != AlitaToken;
[L8492]              assume DType[msgsender_MSG] != SafeMath;
[L8493]              Alloc[msgsender_MSG] := true;
[L8494]  COND FALSE  !(choice == 26)
[L8500]  COND FALSE  !(choice == 25)
[L8506]  COND FALSE  !(choice == 24)
[L8512]  COND FALSE  !(choice == 23)
[L8518]  COND TRUE   choice == 22
[L8519]              gas := gas - 21000;
[L8520]  COND TRUE   gas >= 0
[L8521]              assume _value_s754 >= 0 && _value_s754 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L8522]              assume msgvalue_MSG == 0;
[L8523]  CALL        call __ret_0_transfer := transfer~address~uint256_AlitaToken(this, msgsender_MSG, msgvalue_MSG, _to_s754, _value_s754);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == _to_s754 && _value_s754 <= balances_BasicToken[this][msgsender_MSG]) && _value_s754 >= 0) && _value_s754 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BasicToken[this][_to_s754] >= 0) && balances_BasicToken[this][_to_s754] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BasicToken[this][msgsender_MSG] >= 0) && balances_BasicToken[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_AlitaToken0 := true;
[L2]                 call_transfer_AlitaToken0 := false;
[L2]                 revert := revert_hold;
[L2049]              havoc __exception;
[L2050]              revert := false;
[L2051]  COND FALSE  !(__exception)
[L2080]  CALL        call __ret_0_ := transfer~address~uint256_AlitaToken__success(this, msgsender_MSG, msgvalue_MSG, _to_s754, _value_s754);
[L5022]  CALL        call whenNotPaused_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L7448]  COND FALSE  !(!!paused_Pausable[this])
[L5022]  RET         call whenNotPaused_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L5023]  COND FALSE  !(revert)
[L5026]  COND FALSE  !(!!isBlackListed_BlackList[this][msgsender_MSG])
[L5030]  COND FALSE  !(!!isBlackListed_BlackList[this][_to_s754])
[L5034]  COND TRUE   deprecated_AlitaToken[this]
[L5035]              assume DType[upgradedAddress_AlitaToken[this]] == UpgradedStandardToken;
[L5036]              __var_12 := upgradedAddress_AlitaToken[this];
[L5038]              __ret_0_ := __var_11;
[L2080]  RET         call __ret_0_ := transfer~address~uint256_AlitaToken__success(this, msgsender_MSG, msgvalue_MSG, _to_s754, _value_s754);
[L2081]              assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !((((((((((((__ret_0_ == true && totalSupply__BasicToken[this] == old(totalSupply__BasicToken[this])) && balances_BasicToken[this] == old(balances_BasicToken[this])) && allowed_StandardToken[this] == old(allowed_StandardToken[this])) && name_AlitaToken[this] == old(name_AlitaToken[this])) && symbol_AlitaToken[this] == old(symbol_AlitaToken[this])) && decimals_AlitaToken[this] == old(decimals_AlitaToken[this])) && init_Supply_AlitaToken[this] == old(init_Supply_AlitaToken[this])) && upgradedAddress_AlitaToken[this] == old(upgradedAddress_AlitaToken[this])) && deprecated_AlitaToken[this] == old(deprecated_AlitaToken[this])) && isBlackListed_BlackList[this] == old(isBlackListed_BlackList[this])) && paused_Pausable[this] == old(paused_Pausable[this])) && owner_Ownable[this] == old(owner_Ownable[this]));
[L2]                 revert := revert_hold;
[L8523]  RET         call __ret_0_transfer := transfer~address~uint256_AlitaToken(this, msgsender_MSG, msgvalue_MSG, _to_s754, _value_s754);
[L8673]  RET         call CorralChoice_AlitaToken(this);

Loop:
[L8673]  CALL        call CorralChoice_AlitaToken(this);
[L8433]              havoc msgsender_MSG;
[L8434]              havoc msgvalue_MSG;
[L8435]              havoc choice;
[L8436]              havoc __ret_0_owner;
[L8437]              havoc newOwner_s42;
[L8438]              havoc __ret_0_totalSupply;
[L8439]              havoc _owner_s166;
[L8440]              havoc __ret_0_balanceOf;
[L8441]              havoc _to_s754;
[L8442]              havoc _value_s754;
[L8443]              havoc __ret_0_transfer;
[L8444]              havoc _owner_s885;
[L8445]              havoc _spender_s885;
[L8446]              havoc __ret_0_allowance;
[L8447]              havoc _from_s812;
[L8448]              havoc _to_s812;
[L8449]              havoc _value_s812;
[L8450]              havoc __ret_0_transferFrom;
[L8451]              havoc _spender_s857;
[L8452]              havoc _value_s857;
[L8453]              havoc __ret_0_approve;
[L8454]              havoc _spender_s913;
[L8455]              havoc _addedValue_s913;
[L8456]              havoc __ret_0_increaseApproval;
[L8457]              havoc _spender_s941;
[L8458]              havoc _subtractedValue_s941;
[L8459]              havoc __ret_0_decreaseApproval;
[L8460]              havoc __ret_0_paused;
[L8461]              havoc _maker_s564;
[L8462]              havoc __ret_0_getBlackListStatus;
[L8463]              havoc __ret_0_getOwner;
[L8464]              havoc arg1060_s0;
[L8465]              havoc __ret_0_isBlackListed;
[L8466]              havoc _evilUser_s594;
[L8467]              havoc _clearedUser_s612;
[L8468]              havoc _blackListedUser_s647;
[L8469]              havoc __ret_0_name;
[L8470]              havoc __ret_0_symbol;
[L8471]              havoc __ret_0_decimals;
[L8472]              havoc __ret_0_init_Supply;
[L8473]              havoc __ret_0_upgradedAddress;
[L8474]              havoc __ret_0_deprecated;
[L8475]              havoc _upgradedAddress_s961;
[L8476]              havoc tmpNow;
[L8477]              havoc gas;
[L8478]              assume gas > 4000000 && gas <= 8000000;
[L8479]              tmpNow := now;
[L8480]              havoc now;
[L8481]              assume now > tmpNow;
[L8482]              assume msgsender_MSG != null;
[L8483]              assume DType[msgsender_MSG] != Ownable;
[L8484]              assume DType[msgsender_MSG] != ERC20Basic;
[L8485]              assume DType[msgsender_MSG] != BasicToken;
[L8486]              assume DType[msgsender_MSG] != ERC20;
[L8487]              assume DType[msgsender_MSG] != StandardToken;
[L8488]              assume DType[msgsender_MSG] != Pausable;
[L8489]              assume DType[msgsender_MSG] != UpgradedStandardToken;
[L8490]              assume DType[msgsender_MSG] != BlackList;
[L8491]              assume DType[msgsender_MSG] != AlitaToken;
[L8492]              assume DType[msgsender_MSG] != SafeMath;
[L8493]              Alloc[msgsender_MSG] := true;
[L8494]  COND FALSE  !(choice == 26)
[L8500]  COND FALSE  !(choice == 25)
[L8506]  COND FALSE  !(choice == 24)
[L8512]  COND FALSE  !(choice == 23)
[L8518]  COND FALSE  !(choice == 22)
[L8525]  COND FALSE  !(choice == 21)
[L8531]  COND FALSE  !(choice == 20)
[L8538]  COND FALSE  !(choice == 19)
[L8545]  COND FALSE  !(choice == 18)
[L8552]  COND FALSE  !(choice == 17)
[L8559]  COND FALSE  !(choice == 16)
[L8565]  COND FALSE  !(choice == 15)
[L8571]  COND FALSE  !(choice == 14)
[L8577]  COND FALSE  !(choice == 13)
[L8583]  COND FALSE  !(choice == 12)
[L8589]  COND FALSE  !(choice == 11)
[L8595]  COND FALSE  !(choice == 10)
[L8601]  COND FALSE  !(choice == 9)
[L8607]  COND FALSE  !(choice == 8)
[L8613]  COND FALSE  !(choice == 7)
[L8619]  COND FALSE  !(choice == 6)
[L8625]  COND FALSE  !(choice == 5)
[L8631]  COND FALSE  !(choice == 4)
[L8637]  COND FALSE  !(choice == 3)
[L8643]  COND FALSE  !(choice == 2)
[L8649]  COND TRUE   choice == 1
[L8650]              gas := gas - 21000;
[L8651]  COND TRUE   gas >= 0
[L8652]              assume msgvalue_MSG == 0;
[L8653]  CALL        call deprecate~address_AlitaToken(this, msgsender_MSG, msgvalue_MSG, _upgradedAddress_s961);
[L2457]              havoc __exception;
[L2458]              revert := false;
[L2459]  COND FALSE  !(__exception)
[L2488]  CALL        call deprecate~address_AlitaToken__success(this, msgsender_MSG, msgvalue_MSG, _upgradedAddress_s961);
[L5490]  CALL        call onlyOwner_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L7432]  COND FALSE  !(!(msgsender_MSG == owner_Ownable[this]))
[L5490]  RET         call onlyOwner_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L5491]  COND FALSE  !(revert)
[L5494]              deprecated_AlitaToken[this] := true;
[L5495]              upgradedAddress_AlitaToken[this] := _upgradedAddress_s961;
[L5496]              assert { :EventEmitted "Deprecate_AlitaToken" } true;
[L2488]  RET         call deprecate~address_AlitaToken__success(this, msgsender_MSG, msgvalue_MSG, _upgradedAddress_s961);
[L2489]              assume !revert && gas >= 0;
[L8653]  RET         call deprecate~address_AlitaToken(this, msgsender_MSG, msgvalue_MSG, _upgradedAddress_s961);
[L8673]  RET         call CorralChoice_AlitaToken(this);

[2020-11-24 23:45:47,922 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 23:45:47,922 INFO  L82        PathProgramCache]: Analyzing trace with hash -1452162701, now seen corresponding path program 1 times
[2020-11-24 23:45:47,923 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 23:45:47,933 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 23:45:47,997 INFO  L134       CoverageAnalysis]: Checked inductivity of 381 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 381 trivial. 0 not checked.
[2020-11-24 23:45:47,998 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 23:45:47,998 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-24 23:45:47,998 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 23:45:47,998 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-24 23:45:47,998 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=6, Invalid=6, Unknown=0, NotChecked=0, Total=12
[2020-11-24 23:45:47,999 INFO  L87              Difference]: Start difference. First operand 6251 states and 7036 transitions. cyclomatic complexity: 805 Second operand 4 states.
[2020-11-24 23:45:48,501 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 23:45:48,501 INFO  L93              Difference]: Finished difference Result 7859 states and 9468 transitions.
[2020-11-24 23:45:48,501 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-24 23:45:48,502 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 7859 states and 9468 transitions.
[2020-11-24 23:45:48,524 INFO  L131   ngComponentsAnalysis]: Automaton has 4 accepting balls. 48
[2020-11-24 23:45:48,552 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 7859 states to 7650 states and 9251 transitions.
[2020-11-24 23:45:48,552 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 2038
[2020-11-24 23:45:48,553 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 2038
[2020-11-24 23:45:48,553 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 7650 states and 9251 transitions.
[2020-11-24 23:45:48,561 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 23:45:48,561 INFO  L728         BuchiCegarLoop]: Abstraction has 7650 states and 9251 transitions.
[2020-11-24 23:45:48,566 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 7650 states and 9251 transitions.
[2020-11-24 23:45:48,636 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 7650 to 6894.
[2020-11-24 23:45:48,636 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 6894 states.
[2020-11-24 23:45:48,647 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 6894 states to 6894 states and 8084 transitions.
[2020-11-24 23:45:48,647 INFO  L751         BuchiCegarLoop]: Abstraction has 6894 states and 8084 transitions.
[2020-11-24 23:45:48,647 INFO  L631         BuchiCegarLoop]: Abstraction has 6894 states and 8084 transitions.
[2020-11-24 23:45:48,647 INFO  L445         BuchiCegarLoop]: ======== Iteration 6============
[2020-11-24 23:45:48,647 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 6894 states and 8084 transitions.
[2020-11-24 23:45:48,655 INFO  L131   ngComponentsAnalysis]: Automaton has 4 accepting balls. 32
[2020-11-24 23:45:48,656 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 23:45:48,656 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 23:45:48,657 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [8, 8, 8, 8, 8, 8, 8, 8, 8, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 23:45:48,657 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 success_transfer_AlitaToken0 := false;
[L2]                 call_transfer_AlitaToken0 := false;
[L2]     CALL        call main();
[L8663]              assume null == 0;
[L8664]  CALL        call this := FreshRefGenerator__success();
[L3958]              havoc newRef;
[L3959]              assume Alloc[newRef] == false;
[L3960]              Alloc[newRef] := true;
[L3961]              assume newRef != null;
[L8664]  RET         call this := FreshRefGenerator__success();
[L8665]              assume now >= 0;
[L8666]              assume DType[this] == AlitaToken;
[L8667]              assume msgvalue_MSG == 0;
[L8668]              gas := gas - 53000;
[L8669]  CALL        call AlitaToken_AlitaToken(this, msgsender_MSG, msgvalue_MSG);
[L1981]              havoc __exception;
[L1982]              revert := false;
[L1983]  COND FALSE  !(__exception)
[L2012]  CALL        call AlitaToken_AlitaToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4942]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3994]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3977]              assume msgsender_MSG != null;
[L3978]              Balance[this] := 0;
[L3979]              owner_Ownable[this] := null;
[L3981]              owner_Ownable[this] := msgsender_MSG;
[L3994]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3995]  COND FALSE  !(revert)
[L4942]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4943]  COND FALSE  !(revert)
[L4946]  CALL        call Pausable_Pausable__success(this, msgsender_MSG, msgvalue_MSG);
[L4531]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3994]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3977]              assume msgsender_MSG != null;
[L3978]              Balance[this] := 0;
[L3979]              owner_Ownable[this] := null;
[L3981]              owner_Ownable[this] := msgsender_MSG;
[L3994]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3995]  COND FALSE  !(revert)
[L4531]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4532]  COND FALSE  !(revert)
[L4535]  CALL        call Pausable_Pausable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4511]              assume msgsender_MSG != null;
[L4512]              Balance[this] := 0;
[L4513]              paused_Pausable[this] := false;
[L4535]  RET         call Pausable_Pausable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4536]  COND FALSE  !(revert)
[L4946]  RET         call Pausable_Pausable__success(this, msgsender_MSG, msgvalue_MSG);
[L4947]  COND FALSE  !(revert)
[L4950]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4064]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4049]              assume msgsender_MSG != null;
[L4050]              Balance[this] := 0;
[L4064]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  COND FALSE  !(revert)
[L4950]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4951]  COND FALSE  !(revert)
[L4954]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4235]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4064]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4049]              assume msgsender_MSG != null;
[L4050]              Balance[this] := 0;
[L4064]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  COND FALSE  !(revert)
[L4235]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4236]  COND FALSE  !(revert)
[L4239]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4216]              assume msgsender_MSG != null;
[L4217]              Balance[this] := 0;
[L4239]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4240]  COND FALSE  !(revert)
[L4954]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4955]  COND FALSE  !(revert)
[L4958]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4106]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4064]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4049]              assume msgsender_MSG != null;
[L4050]              Balance[this] := 0;
[L4064]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  COND FALSE  !(revert)
[L4106]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4107]  COND FALSE  !(revert)
[L4110]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4084]              assume msgsender_MSG != null;
[L4085]              Balance[this] := 0;
[L4086]              balances_BasicToken[this] := zeroRefintArr();
[L4087]              sum_balances0[this] := 0;
[L4088]              totalSupply__BasicToken[this] := 0;
[L4110]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4111]  COND FALSE  !(revert)
[L4958]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4959]  COND FALSE  !(revert)
[L4962]  CALL        call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4287]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4064]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4049]              assume msgsender_MSG != null;
[L4050]              Balance[this] := 0;
[L4064]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  COND FALSE  !(revert)
[L4287]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4288]  COND FALSE  !(revert)
[L4291]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4235]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4064]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4049]              assume msgsender_MSG != null;
[L4050]              Balance[this] := 0;
[L4064]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  COND FALSE  !(revert)
[L4235]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4236]  COND FALSE  !(revert)
[L4239]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4216]              assume msgsender_MSG != null;
[L4217]              Balance[this] := 0;
[L4239]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4240]  COND FALSE  !(revert)
[L4291]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4292]  COND FALSE  !(revert)
[L4295]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4106]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4064]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4049]              assume msgsender_MSG != null;
[L4050]              Balance[this] := 0;
[L4064]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  COND FALSE  !(revert)
[L4106]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4107]  COND FALSE  !(revert)
[L4110]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4084]              assume msgsender_MSG != null;
[L4085]              Balance[this] := 0;
[L4086]              balances_BasicToken[this] := zeroRefintArr();
[L4087]              sum_balances0[this] := 0;
[L4088]              totalSupply__BasicToken[this] := 0;
[L4110]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4111]  COND FALSE  !(revert)
[L4295]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4296]  COND FALSE  !(revert)
[L4299]  CALL        call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4258]              assume msgsender_MSG != null;
[L4259]              Balance[this] := 0;
[L4260]              allowed_StandardToken[this] := zeroRefRefintArr();
[L4261]              sum_allowed1[this] := 0;
[L4299]  RET         call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4300]  COND FALSE  !(revert)
[L4962]  RET         call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4963]  COND FALSE  !(revert)
[L4966]  CALL        call BlackList_BlackList__success(this, msgsender_MSG, msgvalue_MSG);
[L4711]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3994]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3977]              assume msgsender_MSG != null;
[L3978]              Balance[this] := 0;
[L3979]              owner_Ownable[this] := null;
[L3981]              owner_Ownable[this] := msgsender_MSG;
[L3994]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3995]  COND FALSE  !(revert)
[L4711]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4712]  COND FALSE  !(revert)
[L4715]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4064]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4049]              assume msgsender_MSG != null;
[L4050]              Balance[this] := 0;
[L4064]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  COND FALSE  !(revert)
[L4715]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4716]  COND FALSE  !(revert)
[L4719]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4106]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4064]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4049]              assume msgsender_MSG != null;
[L4050]              Balance[this] := 0;
[L4064]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  COND FALSE  !(revert)
[L4106]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4107]  COND FALSE  !(revert)
[L4110]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4084]              assume msgsender_MSG != null;
[L4085]              Balance[this] := 0;
[L4086]              balances_BasicToken[this] := zeroRefintArr();
[L4087]              sum_balances0[this] := 0;
[L4088]              totalSupply__BasicToken[this] := 0;
[L4110]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4111]  COND FALSE  !(revert)
[L4719]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4720]  COND FALSE  !(revert)
[L4723]  CALL        call BlackList_BlackList_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4683]              assume msgsender_MSG != null;
[L4684]              Balance[this] := 0;
[L4685]              isBlackListed_BlackList[this] := zeroRefboolArr();
[L4723]  RET         call BlackList_BlackList_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4724]  COND FALSE  !(revert)
[L4966]  RET         call BlackList_BlackList__success(this, msgsender_MSG, msgvalue_MSG);
[L4967]  COND FALSE  !(revert)
[L4970]  CALL        call AlitaToken_AlitaToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4888]              assume msgsender_MSG != null;
[L4889]              Balance[this] := 0;
[L4890]              name_AlitaToken[this] := -1110093910;
[L4891]              symbol_AlitaToken[this] := 1234648092;
[L4892]              decimals_AlitaToken[this] := 18;
[L4893]              init_Supply_AlitaToken[this] := 1000000000 * (1000000000000000000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L4894]              upgradedAddress_AlitaToken[this] := null;
[L4895]              deprecated_AlitaToken[this] := false;
[L4897]              totalSupply__BasicToken[this] := init_Supply_AlitaToken[this];
[L4898]              sum_balances0[this] := sum_balances0[this] - balances_BasicToken[this][msgsender_MSG];
[L4899]              balances_BasicToken[this][msgsender_MSG] := totalSupply__BasicToken[this];
[L4900]              sum_balances0[this] := sum_balances0[this] + balances_BasicToken[this][msgsender_MSG];
[L4901]              deprecated_AlitaToken[this] := false;
[L4970]  RET         call AlitaToken_AlitaToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4971]  COND FALSE  !(revert)
[L2012]  RET         call AlitaToken_AlitaToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2013]              assume !revert && gas >= 0;
[L8669]  RET         call AlitaToken_AlitaToken(this, msgsender_MSG, msgvalue_MSG);
[L8670]              assume !revert && gas >= 0;
[L8673]  CALL        call CorralChoice_AlitaToken(this);
[L8433]              havoc msgsender_MSG;
[L8434]              havoc msgvalue_MSG;
[L8435]              havoc choice;
[L8436]              havoc __ret_0_owner;
[L8437]              havoc newOwner_s42;
[L8438]              havoc __ret_0_totalSupply;
[L8439]              havoc _owner_s166;
[L8440]              havoc __ret_0_balanceOf;
[L8441]              havoc _to_s754;
[L8442]              havoc _value_s754;
[L8443]              havoc __ret_0_transfer;
[L8444]              havoc _owner_s885;
[L8445]              havoc _spender_s885;
[L8446]              havoc __ret_0_allowance;
[L8447]              havoc _from_s812;
[L8448]              havoc _to_s812;
[L8449]              havoc _value_s812;
[L8450]              havoc __ret_0_transferFrom;
[L8451]              havoc _spender_s857;
[L8452]              havoc _value_s857;
[L8453]              havoc __ret_0_approve;
[L8454]              havoc _spender_s913;
[L8455]              havoc _addedValue_s913;
[L8456]              havoc __ret_0_increaseApproval;
[L8457]              havoc _spender_s941;
[L8458]              havoc _subtractedValue_s941;
[L8459]              havoc __ret_0_decreaseApproval;
[L8460]              havoc __ret_0_paused;
[L8461]              havoc _maker_s564;
[L8462]              havoc __ret_0_getBlackListStatus;
[L8463]              havoc __ret_0_getOwner;
[L8464]              havoc arg1060_s0;
[L8465]              havoc __ret_0_isBlackListed;
[L8466]              havoc _evilUser_s594;
[L8467]              havoc _clearedUser_s612;
[L8468]              havoc _blackListedUser_s647;
[L8469]              havoc __ret_0_name;
[L8470]              havoc __ret_0_symbol;
[L8471]              havoc __ret_0_decimals;
[L8472]              havoc __ret_0_init_Supply;
[L8473]              havoc __ret_0_upgradedAddress;
[L8474]              havoc __ret_0_deprecated;
[L8475]              havoc _upgradedAddress_s961;
[L8476]              havoc tmpNow;
[L8477]              havoc gas;
[L8478]              assume gas > 4000000 && gas <= 8000000;
[L8479]              tmpNow := now;
[L8480]              havoc now;
[L8481]              assume now > tmpNow;
[L8482]              assume msgsender_MSG != null;
[L8483]              assume DType[msgsender_MSG] != Ownable;
[L8484]              assume DType[msgsender_MSG] != ERC20Basic;
[L8485]              assume DType[msgsender_MSG] != BasicToken;
[L8486]              assume DType[msgsender_MSG] != ERC20;
[L8487]              assume DType[msgsender_MSG] != StandardToken;
[L8488]              assume DType[msgsender_MSG] != Pausable;
[L8489]              assume DType[msgsender_MSG] != UpgradedStandardToken;
[L8490]              assume DType[msgsender_MSG] != BlackList;
[L8491]              assume DType[msgsender_MSG] != AlitaToken;
[L8492]              assume DType[msgsender_MSG] != SafeMath;
[L8493]              Alloc[msgsender_MSG] := true;
[L8494]  COND FALSE  !(choice == 26)
[L8500]  COND FALSE  !(choice == 25)
[L8506]  COND FALSE  !(choice == 24)
[L8512]  COND FALSE  !(choice == 23)
[L8518]  COND TRUE   choice == 22
[L8519]              gas := gas - 21000;
[L8520]  COND TRUE   gas >= 0
[L8521]              assume _value_s754 >= 0 && _value_s754 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L8522]              assume msgvalue_MSG == 0;
[L8523]  CALL        call __ret_0_transfer := transfer~address~uint256_AlitaToken(this, msgsender_MSG, msgvalue_MSG, _to_s754, _value_s754);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == _to_s754 && _value_s754 <= balances_BasicToken[this][msgsender_MSG]) && _value_s754 >= 0) && _value_s754 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BasicToken[this][_to_s754] >= 0) && balances_BasicToken[this][_to_s754] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BasicToken[this][msgsender_MSG] >= 0) && balances_BasicToken[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_AlitaToken0 := true;
[L2]                 call_transfer_AlitaToken0 := false;
[L2]                 revert := revert_hold;
[L2049]              havoc __exception;
[L2050]              revert := false;
[L2051]  COND TRUE   __exception
[L2052]              __tmp__Balance := Balance;
[L2053]              __tmp__DType := DType;
[L2054]              __tmp__Alloc := Alloc;
[L2055]              __tmp__balance_ADDR := balance_ADDR;
[L2056]              __tmp__M_Ref_int := M_Ref_int;
[L2057]              __tmp__sum_balances0 := sum_balances0;
[L2058]              __tmp__alloc_allowed_StandardToken_lvl0 := alloc_allowed_StandardToken_lvl0;
[L2059]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L2060]              __tmp__sum_allowed1 := sum_allowed1;
[L2061]              __tmp__M_Ref_bool := M_Ref_bool;
[L2062]              __tmp__sum_isBlackListed2 := sum_isBlackListed2;
[L2063]              __tmp__Length := Length;
[L2064]              __tmp__now := now;
[L2065]              __tmp__owner_Ownable := owner_Ownable;
[L2066]              __tmp__balances_BasicToken := balances_BasicToken;
[L2067]              __tmp__totalSupply__BasicToken := totalSupply__BasicToken;
[L2068]              __tmp__allowed_StandardToken := allowed_StandardToken;
[L2069]              __tmp__paused_Pausable := paused_Pausable;
[L2070]              __tmp__isBlackListed_BlackList := isBlackListed_BlackList;
[L2071]              __tmp__name_AlitaToken := name_AlitaToken;
[L2072]              __tmp__symbol_AlitaToken := symbol_AlitaToken;
[L2073]              __tmp__decimals_AlitaToken := decimals_AlitaToken;
[L2074]              __tmp__init_Supply_AlitaToken := init_Supply_AlitaToken;
[L2075]              __tmp__upgradedAddress_AlitaToken := upgradedAddress_AlitaToken;
[L2076]              __tmp__deprecated_AlitaToken := deprecated_AlitaToken;
[L2077]  CALL        call __ret_0_ := transfer~address~uint256_AlitaToken__fail(this, msgsender_MSG, msgvalue_MSG, _to_s754, _value_s754);
[L4983]  CALL        call whenNotPaused_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L7440]  COND FALSE  !(!!__tmp__paused_Pausable[this])
[L4983]  RET         call whenNotPaused_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L4984]  COND FALSE  !(revert)
[L4987]  COND TRUE   !!__tmp__isBlackListed_BlackList[this][msgsender_MSG]
[L4988]              revert := true;
[L2077]  RET         call __ret_0_ := transfer~address~uint256_AlitaToken__fail(this, msgsender_MSG, msgvalue_MSG, _to_s754, _value_s754);
[L2078]              assume revert || gas < 0;
[L8523]  RET         call __ret_0_transfer := transfer~address~uint256_AlitaToken(this, msgsender_MSG, msgvalue_MSG, _to_s754, _value_s754);
[L8673]  RET         call CorralChoice_AlitaToken(this);

Loop:
[L8673]  CALL        call CorralChoice_AlitaToken(this);
[L8433]              havoc msgsender_MSG;
[L8434]              havoc msgvalue_MSG;
[L8435]              havoc choice;
[L8436]              havoc __ret_0_owner;
[L8437]              havoc newOwner_s42;
[L8438]              havoc __ret_0_totalSupply;
[L8439]              havoc _owner_s166;
[L8440]              havoc __ret_0_balanceOf;
[L8441]              havoc _to_s754;
[L8442]              havoc _value_s754;
[L8443]              havoc __ret_0_transfer;
[L8444]              havoc _owner_s885;
[L8445]              havoc _spender_s885;
[L8446]              havoc __ret_0_allowance;
[L8447]              havoc _from_s812;
[L8448]              havoc _to_s812;
[L8449]              havoc _value_s812;
[L8450]              havoc __ret_0_transferFrom;
[L8451]              havoc _spender_s857;
[L8452]              havoc _value_s857;
[L8453]              havoc __ret_0_approve;
[L8454]              havoc _spender_s913;
[L8455]              havoc _addedValue_s913;
[L8456]              havoc __ret_0_increaseApproval;
[L8457]              havoc _spender_s941;
[L8458]              havoc _subtractedValue_s941;
[L8459]              havoc __ret_0_decreaseApproval;
[L8460]              havoc __ret_0_paused;
[L8461]              havoc _maker_s564;
[L8462]              havoc __ret_0_getBlackListStatus;
[L8463]              havoc __ret_0_getOwner;
[L8464]              havoc arg1060_s0;
[L8465]              havoc __ret_0_isBlackListed;
[L8466]              havoc _evilUser_s594;
[L8467]              havoc _clearedUser_s612;
[L8468]              havoc _blackListedUser_s647;
[L8469]              havoc __ret_0_name;
[L8470]              havoc __ret_0_symbol;
[L8471]              havoc __ret_0_decimals;
[L8472]              havoc __ret_0_init_Supply;
[L8473]              havoc __ret_0_upgradedAddress;
[L8474]              havoc __ret_0_deprecated;
[L8475]              havoc _upgradedAddress_s961;
[L8476]              havoc tmpNow;
[L8477]              havoc gas;
[L8478]              assume gas > 4000000 && gas <= 8000000;
[L8479]              tmpNow := now;
[L8480]              havoc now;
[L8481]              assume now > tmpNow;
[L8482]              assume msgsender_MSG != null;
[L8483]              assume DType[msgsender_MSG] != Ownable;
[L8484]              assume DType[msgsender_MSG] != ERC20Basic;
[L8485]              assume DType[msgsender_MSG] != BasicToken;
[L8486]              assume DType[msgsender_MSG] != ERC20;
[L8487]              assume DType[msgsender_MSG] != StandardToken;
[L8488]              assume DType[msgsender_MSG] != Pausable;
[L8489]              assume DType[msgsender_MSG] != UpgradedStandardToken;
[L8490]              assume DType[msgsender_MSG] != BlackList;
[L8491]              assume DType[msgsender_MSG] != AlitaToken;
[L8492]              assume DType[msgsender_MSG] != SafeMath;
[L8493]              Alloc[msgsender_MSG] := true;
[L8494]  COND FALSE  !(choice == 26)
[L8500]  COND FALSE  !(choice == 25)
[L8506]  COND FALSE  !(choice == 24)
[L8512]  COND FALSE  !(choice == 23)
[L8518]  COND TRUE   choice == 22
[L8519]              gas := gas - 21000;
[L8520]  COND TRUE   gas >= 0
[L8521]              assume _value_s754 >= 0 && _value_s754 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L8522]              assume msgvalue_MSG == 0;
[L8523]  CALL        call __ret_0_transfer := transfer~address~uint256_AlitaToken(this, msgsender_MSG, msgvalue_MSG, _to_s754, _value_s754);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == _to_s754 && _value_s754 <= balances_BasicToken[this][msgsender_MSG]) && _value_s754 >= 0) && _value_s754 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BasicToken[this][_to_s754] >= 0) && balances_BasicToken[this][_to_s754] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BasicToken[this][msgsender_MSG] >= 0) && balances_BasicToken[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_AlitaToken0 := true;
[L2]                 call_transfer_AlitaToken0 := false;
[L2]                 revert := revert_hold;
[L2049]              havoc __exception;
[L2050]              revert := false;
[L2051]  COND TRUE   __exception
[L2052]              __tmp__Balance := Balance;
[L2053]              __tmp__DType := DType;
[L2054]              __tmp__Alloc := Alloc;
[L2055]              __tmp__balance_ADDR := balance_ADDR;
[L2056]              __tmp__M_Ref_int := M_Ref_int;
[L2057]              __tmp__sum_balances0 := sum_balances0;
[L2058]              __tmp__alloc_allowed_StandardToken_lvl0 := alloc_allowed_StandardToken_lvl0;
[L2059]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L2060]              __tmp__sum_allowed1 := sum_allowed1;
[L2061]              __tmp__M_Ref_bool := M_Ref_bool;
[L2062]              __tmp__sum_isBlackListed2 := sum_isBlackListed2;
[L2063]              __tmp__Length := Length;
[L2064]              __tmp__now := now;
[L2065]              __tmp__owner_Ownable := owner_Ownable;
[L2066]              __tmp__balances_BasicToken := balances_BasicToken;
[L2067]              __tmp__totalSupply__BasicToken := totalSupply__BasicToken;
[L2068]              __tmp__allowed_StandardToken := allowed_StandardToken;
[L2069]              __tmp__paused_Pausable := paused_Pausable;
[L2070]              __tmp__isBlackListed_BlackList := isBlackListed_BlackList;
[L2071]              __tmp__name_AlitaToken := name_AlitaToken;
[L2072]              __tmp__symbol_AlitaToken := symbol_AlitaToken;
[L2073]              __tmp__decimals_AlitaToken := decimals_AlitaToken;
[L2074]              __tmp__init_Supply_AlitaToken := init_Supply_AlitaToken;
[L2075]              __tmp__upgradedAddress_AlitaToken := upgradedAddress_AlitaToken;
[L2076]              __tmp__deprecated_AlitaToken := deprecated_AlitaToken;
[L2077]  CALL        call __ret_0_ := transfer~address~uint256_AlitaToken__fail(this, msgsender_MSG, msgvalue_MSG, _to_s754, _value_s754);
[L4983]  CALL        call whenNotPaused_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L7440]  COND FALSE  !(!!__tmp__paused_Pausable[this])
[L4983]  RET         call whenNotPaused_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L4984]  COND FALSE  !(revert)
[L4987]  COND TRUE   !!__tmp__isBlackListed_BlackList[this][msgsender_MSG]
[L4988]              revert := true;
[L2077]  RET         call __ret_0_ := transfer~address~uint256_AlitaToken__fail(this, msgsender_MSG, msgvalue_MSG, _to_s754, _value_s754);
[L2078]              assume revert || gas < 0;
[L8523]  RET         call __ret_0_transfer := transfer~address~uint256_AlitaToken(this, msgsender_MSG, msgvalue_MSG, _to_s754, _value_s754);
[L8673]  RET         call CorralChoice_AlitaToken(this);

[2020-11-24 23:45:48,661 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 23:45:48,661 INFO  L82        PathProgramCache]: Analyzing trace with hash 1207048478, now seen corresponding path program 1 times
[2020-11-24 23:45:48,662 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 23:45:48,674 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 23:45:48,768 INFO  L134       CoverageAnalysis]: Checked inductivity of 381 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 381 trivial. 0 not checked.
[2020-11-24 23:45:48,768 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 23:45:48,768 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [11] imperfect sequences [] total 11
[2020-11-24 23:45:48,769 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 23:45:48,769 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 12 interpolants.
[2020-11-24 23:45:48,769 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=21, Invalid=111, Unknown=0, NotChecked=0, Total=132
[2020-11-24 23:45:48,769 INFO  L87              Difference]: Start difference. First operand 6894 states and 8084 transitions. cyclomatic complexity: 1210 Second operand 12 states.
[2020-11-24 23:45:51,638 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 23:45:51,638 INFO  L93              Difference]: Finished difference Result 12054 states and 15402 transitions.
[2020-11-24 23:45:51,638 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 14 states. 
[2020-11-24 23:45:51,638 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 12054 states and 15402 transitions.
[2020-11-24 23:45:51,677 INFO  L131   ngComponentsAnalysis]: Automaton has 10 accepting balls. 128
[2020-11-24 23:45:51,725 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 12054 states to 12054 states and 15402 transitions.
[2020-11-24 23:45:51,726 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 3234
[2020-11-24 23:45:51,727 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 3234
[2020-11-24 23:45:51,727 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 12054 states and 15402 transitions.
[2020-11-24 23:45:51,740 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 23:45:51,740 INFO  L728         BuchiCegarLoop]: Abstraction has 12054 states and 15402 transitions.
[2020-11-24 23:45:51,746 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 12054 states and 15402 transitions.
[2020-11-24 23:45:51,858 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 12054 to 10882.
[2020-11-24 23:45:51,858 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 10882 states.
[2020-11-24 23:45:51,882 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 10882 states to 10882 states and 14044 transitions.
[2020-11-24 23:45:51,882 INFO  L751         BuchiCegarLoop]: Abstraction has 10882 states and 14044 transitions.
[2020-11-24 23:45:51,882 INFO  L631         BuchiCegarLoop]: Abstraction has 10882 states and 14044 transitions.
[2020-11-24 23:45:51,882 INFO  L445         BuchiCegarLoop]: ======== Iteration 7============
[2020-11-24 23:45:51,882 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 10882 states and 14044 transitions.
[2020-11-24 23:45:51,896 INFO  L131   ngComponentsAnalysis]: Automaton has 10 accepting balls. 128
[2020-11-24 23:45:51,896 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 23:45:51,896 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 23:45:51,898 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [8, 8, 8, 8, 8, 8, 8, 8, 8, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 23:45:51,898 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 success_transfer_AlitaToken0 := false;
[L2]                 call_transfer_AlitaToken0 := false;
[L2]     CALL        call main();
[L8663]              assume null == 0;
[L8664]  CALL        call this := FreshRefGenerator__success();
[L3958]              havoc newRef;
[L3959]              assume Alloc[newRef] == false;
[L3960]              Alloc[newRef] := true;
[L3961]              assume newRef != null;
[L8664]  RET         call this := FreshRefGenerator__success();
[L8665]              assume now >= 0;
[L8666]              assume DType[this] == AlitaToken;
[L8667]              assume msgvalue_MSG == 0;
[L8668]              gas := gas - 53000;
[L8669]  CALL        call AlitaToken_AlitaToken(this, msgsender_MSG, msgvalue_MSG);
[L1981]              havoc __exception;
[L1982]              revert := false;
[L1983]  COND FALSE  !(__exception)
[L2012]  CALL        call AlitaToken_AlitaToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4942]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3994]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3977]              assume msgsender_MSG != null;
[L3978]              Balance[this] := 0;
[L3979]              owner_Ownable[this] := null;
[L3981]              owner_Ownable[this] := msgsender_MSG;
[L3994]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3995]  COND FALSE  !(revert)
[L4942]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4943]  COND FALSE  !(revert)
[L4946]  CALL        call Pausable_Pausable__success(this, msgsender_MSG, msgvalue_MSG);
[L4531]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3994]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3977]              assume msgsender_MSG != null;
[L3978]              Balance[this] := 0;
[L3979]              owner_Ownable[this] := null;
[L3981]              owner_Ownable[this] := msgsender_MSG;
[L3994]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3995]  COND FALSE  !(revert)
[L4531]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4532]  COND FALSE  !(revert)
[L4535]  CALL        call Pausable_Pausable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4511]              assume msgsender_MSG != null;
[L4512]              Balance[this] := 0;
[L4513]              paused_Pausable[this] := false;
[L4535]  RET         call Pausable_Pausable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4536]  COND FALSE  !(revert)
[L4946]  RET         call Pausable_Pausable__success(this, msgsender_MSG, msgvalue_MSG);
[L4947]  COND FALSE  !(revert)
[L4950]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4064]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4049]              assume msgsender_MSG != null;
[L4050]              Balance[this] := 0;
[L4064]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  COND FALSE  !(revert)
[L4950]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4951]  COND FALSE  !(revert)
[L4954]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4235]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4064]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4049]              assume msgsender_MSG != null;
[L4050]              Balance[this] := 0;
[L4064]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  COND FALSE  !(revert)
[L4235]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4236]  COND FALSE  !(revert)
[L4239]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4216]              assume msgsender_MSG != null;
[L4217]              Balance[this] := 0;
[L4239]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4240]  COND FALSE  !(revert)
[L4954]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4955]  COND FALSE  !(revert)
[L4958]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4106]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4064]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4049]              assume msgsender_MSG != null;
[L4050]              Balance[this] := 0;
[L4064]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  COND FALSE  !(revert)
[L4106]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4107]  COND FALSE  !(revert)
[L4110]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4084]              assume msgsender_MSG != null;
[L4085]              Balance[this] := 0;
[L4086]              balances_BasicToken[this] := zeroRefintArr();
[L4087]              sum_balances0[this] := 0;
[L4088]              totalSupply__BasicToken[this] := 0;
[L4110]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4111]  COND FALSE  !(revert)
[L4958]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4959]  COND FALSE  !(revert)
[L4962]  CALL        call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4287]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4064]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4049]              assume msgsender_MSG != null;
[L4050]              Balance[this] := 0;
[L4064]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  COND FALSE  !(revert)
[L4287]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4288]  COND FALSE  !(revert)
[L4291]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4235]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4064]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4049]              assume msgsender_MSG != null;
[L4050]              Balance[this] := 0;
[L4064]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  COND FALSE  !(revert)
[L4235]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4236]  COND FALSE  !(revert)
[L4239]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4216]              assume msgsender_MSG != null;
[L4217]              Balance[this] := 0;
[L4239]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4240]  COND FALSE  !(revert)
[L4291]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4292]  COND FALSE  !(revert)
[L4295]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4106]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4064]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4049]              assume msgsender_MSG != null;
[L4050]              Balance[this] := 0;
[L4064]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  COND FALSE  !(revert)
[L4106]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4107]  COND FALSE  !(revert)
[L4110]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4084]              assume msgsender_MSG != null;
[L4085]              Balance[this] := 0;
[L4086]              balances_BasicToken[this] := zeroRefintArr();
[L4087]              sum_balances0[this] := 0;
[L4088]              totalSupply__BasicToken[this] := 0;
[L4110]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4111]  COND FALSE  !(revert)
[L4295]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4296]  COND FALSE  !(revert)
[L4299]  CALL        call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4258]              assume msgsender_MSG != null;
[L4259]              Balance[this] := 0;
[L4260]              allowed_StandardToken[this] := zeroRefRefintArr();
[L4261]              sum_allowed1[this] := 0;
[L4299]  RET         call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4300]  COND FALSE  !(revert)
[L4962]  RET         call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4963]  COND FALSE  !(revert)
[L4966]  CALL        call BlackList_BlackList__success(this, msgsender_MSG, msgvalue_MSG);
[L4711]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3994]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3977]              assume msgsender_MSG != null;
[L3978]              Balance[this] := 0;
[L3979]              owner_Ownable[this] := null;
[L3981]              owner_Ownable[this] := msgsender_MSG;
[L3994]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3995]  COND FALSE  !(revert)
[L4711]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4712]  COND FALSE  !(revert)
[L4715]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4064]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4049]              assume msgsender_MSG != null;
[L4050]              Balance[this] := 0;
[L4064]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  COND FALSE  !(revert)
[L4715]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4716]  COND FALSE  !(revert)
[L4719]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4106]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4064]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4049]              assume msgsender_MSG != null;
[L4050]              Balance[this] := 0;
[L4064]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  COND FALSE  !(revert)
[L4106]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4107]  COND FALSE  !(revert)
[L4110]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4084]              assume msgsender_MSG != null;
[L4085]              Balance[this] := 0;
[L4086]              balances_BasicToken[this] := zeroRefintArr();
[L4087]              sum_balances0[this] := 0;
[L4088]              totalSupply__BasicToken[this] := 0;
[L4110]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4111]  COND FALSE  !(revert)
[L4719]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4720]  COND FALSE  !(revert)
[L4723]  CALL        call BlackList_BlackList_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4683]              assume msgsender_MSG != null;
[L4684]              Balance[this] := 0;
[L4685]              isBlackListed_BlackList[this] := zeroRefboolArr();
[L4723]  RET         call BlackList_BlackList_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4724]  COND FALSE  !(revert)
[L4966]  RET         call BlackList_BlackList__success(this, msgsender_MSG, msgvalue_MSG);
[L4967]  COND FALSE  !(revert)
[L4970]  CALL        call AlitaToken_AlitaToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4888]              assume msgsender_MSG != null;
[L4889]              Balance[this] := 0;
[L4890]              name_AlitaToken[this] := -1110093910;
[L4891]              symbol_AlitaToken[this] := 1234648092;
[L4892]              decimals_AlitaToken[this] := 18;
[L4893]              init_Supply_AlitaToken[this] := 1000000000 * (1000000000000000000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L4894]              upgradedAddress_AlitaToken[this] := null;
[L4895]              deprecated_AlitaToken[this] := false;
[L4897]              totalSupply__BasicToken[this] := init_Supply_AlitaToken[this];
[L4898]              sum_balances0[this] := sum_balances0[this] - balances_BasicToken[this][msgsender_MSG];
[L4899]              balances_BasicToken[this][msgsender_MSG] := totalSupply__BasicToken[this];
[L4900]              sum_balances0[this] := sum_balances0[this] + balances_BasicToken[this][msgsender_MSG];
[L4901]              deprecated_AlitaToken[this] := false;
[L4970]  RET         call AlitaToken_AlitaToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4971]  COND FALSE  !(revert)
[L2012]  RET         call AlitaToken_AlitaToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2013]              assume !revert && gas >= 0;
[L8669]  RET         call AlitaToken_AlitaToken(this, msgsender_MSG, msgvalue_MSG);
[L8670]              assume !revert && gas >= 0;
[L8673]  CALL        call CorralChoice_AlitaToken(this);
[L8433]              havoc msgsender_MSG;
[L8434]              havoc msgvalue_MSG;
[L8435]              havoc choice;
[L8436]              havoc __ret_0_owner;
[L8437]              havoc newOwner_s42;
[L8438]              havoc __ret_0_totalSupply;
[L8439]              havoc _owner_s166;
[L8440]              havoc __ret_0_balanceOf;
[L8441]              havoc _to_s754;
[L8442]              havoc _value_s754;
[L8443]              havoc __ret_0_transfer;
[L8444]              havoc _owner_s885;
[L8445]              havoc _spender_s885;
[L8446]              havoc __ret_0_allowance;
[L8447]              havoc _from_s812;
[L8448]              havoc _to_s812;
[L8449]              havoc _value_s812;
[L8450]              havoc __ret_0_transferFrom;
[L8451]              havoc _spender_s857;
[L8452]              havoc _value_s857;
[L8453]              havoc __ret_0_approve;
[L8454]              havoc _spender_s913;
[L8455]              havoc _addedValue_s913;
[L8456]              havoc __ret_0_increaseApproval;
[L8457]              havoc _spender_s941;
[L8458]              havoc _subtractedValue_s941;
[L8459]              havoc __ret_0_decreaseApproval;
[L8460]              havoc __ret_0_paused;
[L8461]              havoc _maker_s564;
[L8462]              havoc __ret_0_getBlackListStatus;
[L8463]              havoc __ret_0_getOwner;
[L8464]              havoc arg1060_s0;
[L8465]              havoc __ret_0_isBlackListed;
[L8466]              havoc _evilUser_s594;
[L8467]              havoc _clearedUser_s612;
[L8468]              havoc _blackListedUser_s647;
[L8469]              havoc __ret_0_name;
[L8470]              havoc __ret_0_symbol;
[L8471]              havoc __ret_0_decimals;
[L8472]              havoc __ret_0_init_Supply;
[L8473]              havoc __ret_0_upgradedAddress;
[L8474]              havoc __ret_0_deprecated;
[L8475]              havoc _upgradedAddress_s961;
[L8476]              havoc tmpNow;
[L8477]              havoc gas;
[L8478]              assume gas > 4000000 && gas <= 8000000;
[L8479]              tmpNow := now;
[L8480]              havoc now;
[L8481]              assume now > tmpNow;
[L8482]              assume msgsender_MSG != null;
[L8483]              assume DType[msgsender_MSG] != Ownable;
[L8484]              assume DType[msgsender_MSG] != ERC20Basic;
[L8485]              assume DType[msgsender_MSG] != BasicToken;
[L8486]              assume DType[msgsender_MSG] != ERC20;
[L8487]              assume DType[msgsender_MSG] != StandardToken;
[L8488]              assume DType[msgsender_MSG] != Pausable;
[L8489]              assume DType[msgsender_MSG] != UpgradedStandardToken;
[L8490]              assume DType[msgsender_MSG] != BlackList;
[L8491]              assume DType[msgsender_MSG] != AlitaToken;
[L8492]              assume DType[msgsender_MSG] != SafeMath;
[L8493]              Alloc[msgsender_MSG] := true;
[L8494]  COND FALSE  !(choice == 26)
[L8500]  COND FALSE  !(choice == 25)
[L8506]  COND FALSE  !(choice == 24)
[L8512]  COND FALSE  !(choice == 23)
[L8518]  COND TRUE   choice == 22
[L8519]              gas := gas - 21000;
[L8520]  COND TRUE   gas >= 0
[L8521]              assume _value_s754 >= 0 && _value_s754 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L8522]              assume msgvalue_MSG == 0;
[L8523]  CALL        call __ret_0_transfer := transfer~address~uint256_AlitaToken(this, msgsender_MSG, msgvalue_MSG, _to_s754, _value_s754);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == _to_s754 && _value_s754 <= balances_BasicToken[this][msgsender_MSG]) && _value_s754 >= 0) && _value_s754 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BasicToken[this][_to_s754] >= 0) && balances_BasicToken[this][_to_s754] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BasicToken[this][msgsender_MSG] >= 0) && balances_BasicToken[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_AlitaToken0 := true;
[L2]                 call_transfer_AlitaToken0 := false;
[L2]                 revert := revert_hold;
[L2049]              havoc __exception;
[L2050]              revert := false;
[L2051]  COND TRUE   __exception
[L2052]              __tmp__Balance := Balance;
[L2053]              __tmp__DType := DType;
[L2054]              __tmp__Alloc := Alloc;
[L2055]              __tmp__balance_ADDR := balance_ADDR;
[L2056]              __tmp__M_Ref_int := M_Ref_int;
[L2057]              __tmp__sum_balances0 := sum_balances0;
[L2058]              __tmp__alloc_allowed_StandardToken_lvl0 := alloc_allowed_StandardToken_lvl0;
[L2059]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L2060]              __tmp__sum_allowed1 := sum_allowed1;
[L2061]              __tmp__M_Ref_bool := M_Ref_bool;
[L2062]              __tmp__sum_isBlackListed2 := sum_isBlackListed2;
[L2063]              __tmp__Length := Length;
[L2064]              __tmp__now := now;
[L2065]              __tmp__owner_Ownable := owner_Ownable;
[L2066]              __tmp__balances_BasicToken := balances_BasicToken;
[L2067]              __tmp__totalSupply__BasicToken := totalSupply__BasicToken;
[L2068]              __tmp__allowed_StandardToken := allowed_StandardToken;
[L2069]              __tmp__paused_Pausable := paused_Pausable;
[L2070]              __tmp__isBlackListed_BlackList := isBlackListed_BlackList;
[L2071]              __tmp__name_AlitaToken := name_AlitaToken;
[L2072]              __tmp__symbol_AlitaToken := symbol_AlitaToken;
[L2073]              __tmp__decimals_AlitaToken := decimals_AlitaToken;
[L2074]              __tmp__init_Supply_AlitaToken := init_Supply_AlitaToken;
[L2075]              __tmp__upgradedAddress_AlitaToken := upgradedAddress_AlitaToken;
[L2076]              __tmp__deprecated_AlitaToken := deprecated_AlitaToken;
[L2077]  CALL        call __ret_0_ := transfer~address~uint256_AlitaToken__fail(this, msgsender_MSG, msgvalue_MSG, _to_s754, _value_s754);
[L4983]  CALL        call whenNotPaused_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L7440]  COND FALSE  !(!!__tmp__paused_Pausable[this])
[L4983]  RET         call whenNotPaused_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L4984]  COND FALSE  !(revert)
[L4987]  COND FALSE  !(!!__tmp__isBlackListed_BlackList[this][msgsender_MSG])
[L4991]  COND TRUE   !!__tmp__isBlackListed_BlackList[this][_to_s754]
[L4992]              revert := true;
[L2077]  RET         call __ret_0_ := transfer~address~uint256_AlitaToken__fail(this, msgsender_MSG, msgvalue_MSG, _to_s754, _value_s754);
[L2078]              assume revert || gas < 0;
[L8523]  RET         call __ret_0_transfer := transfer~address~uint256_AlitaToken(this, msgsender_MSG, msgvalue_MSG, _to_s754, _value_s754);
[L8673]  RET         call CorralChoice_AlitaToken(this);

Loop:
[L8673]  CALL        call CorralChoice_AlitaToken(this);
[L8433]              havoc msgsender_MSG;
[L8434]              havoc msgvalue_MSG;
[L8435]              havoc choice;
[L8436]              havoc __ret_0_owner;
[L8437]              havoc newOwner_s42;
[L8438]              havoc __ret_0_totalSupply;
[L8439]              havoc _owner_s166;
[L8440]              havoc __ret_0_balanceOf;
[L8441]              havoc _to_s754;
[L8442]              havoc _value_s754;
[L8443]              havoc __ret_0_transfer;
[L8444]              havoc _owner_s885;
[L8445]              havoc _spender_s885;
[L8446]              havoc __ret_0_allowance;
[L8447]              havoc _from_s812;
[L8448]              havoc _to_s812;
[L8449]              havoc _value_s812;
[L8450]              havoc __ret_0_transferFrom;
[L8451]              havoc _spender_s857;
[L8452]              havoc _value_s857;
[L8453]              havoc __ret_0_approve;
[L8454]              havoc _spender_s913;
[L8455]              havoc _addedValue_s913;
[L8456]              havoc __ret_0_increaseApproval;
[L8457]              havoc _spender_s941;
[L8458]              havoc _subtractedValue_s941;
[L8459]              havoc __ret_0_decreaseApproval;
[L8460]              havoc __ret_0_paused;
[L8461]              havoc _maker_s564;
[L8462]              havoc __ret_0_getBlackListStatus;
[L8463]              havoc __ret_0_getOwner;
[L8464]              havoc arg1060_s0;
[L8465]              havoc __ret_0_isBlackListed;
[L8466]              havoc _evilUser_s594;
[L8467]              havoc _clearedUser_s612;
[L8468]              havoc _blackListedUser_s647;
[L8469]              havoc __ret_0_name;
[L8470]              havoc __ret_0_symbol;
[L8471]              havoc __ret_0_decimals;
[L8472]              havoc __ret_0_init_Supply;
[L8473]              havoc __ret_0_upgradedAddress;
[L8474]              havoc __ret_0_deprecated;
[L8475]              havoc _upgradedAddress_s961;
[L8476]              havoc tmpNow;
[L8477]              havoc gas;
[L8478]              assume gas > 4000000 && gas <= 8000000;
[L8479]              tmpNow := now;
[L8480]              havoc now;
[L8481]              assume now > tmpNow;
[L8482]              assume msgsender_MSG != null;
[L8483]              assume DType[msgsender_MSG] != Ownable;
[L8484]              assume DType[msgsender_MSG] != ERC20Basic;
[L8485]              assume DType[msgsender_MSG] != BasicToken;
[L8486]              assume DType[msgsender_MSG] != ERC20;
[L8487]              assume DType[msgsender_MSG] != StandardToken;
[L8488]              assume DType[msgsender_MSG] != Pausable;
[L8489]              assume DType[msgsender_MSG] != UpgradedStandardToken;
[L8490]              assume DType[msgsender_MSG] != BlackList;
[L8491]              assume DType[msgsender_MSG] != AlitaToken;
[L8492]              assume DType[msgsender_MSG] != SafeMath;
[L8493]              Alloc[msgsender_MSG] := true;
[L8494]  COND FALSE  !(choice == 26)
[L8500]  COND FALSE  !(choice == 25)
[L8506]  COND FALSE  !(choice == 24)
[L8512]  COND FALSE  !(choice == 23)
[L8518]  COND TRUE   choice == 22
[L8519]              gas := gas - 21000;
[L8520]  COND TRUE   gas >= 0
[L8521]              assume _value_s754 >= 0 && _value_s754 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L8522]              assume msgvalue_MSG == 0;
[L8523]  CALL        call __ret_0_transfer := transfer~address~uint256_AlitaToken(this, msgsender_MSG, msgvalue_MSG, _to_s754, _value_s754);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == _to_s754 && _value_s754 <= balances_BasicToken[this][msgsender_MSG]) && _value_s754 >= 0) && _value_s754 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BasicToken[this][_to_s754] >= 0) && balances_BasicToken[this][_to_s754] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BasicToken[this][msgsender_MSG] >= 0) && balances_BasicToken[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_AlitaToken0 := true;
[L2]                 call_transfer_AlitaToken0 := false;
[L2]                 revert := revert_hold;
[L2049]              havoc __exception;
[L2050]              revert := false;
[L2051]  COND TRUE   __exception
[L2052]              __tmp__Balance := Balance;
[L2053]              __tmp__DType := DType;
[L2054]              __tmp__Alloc := Alloc;
[L2055]              __tmp__balance_ADDR := balance_ADDR;
[L2056]              __tmp__M_Ref_int := M_Ref_int;
[L2057]              __tmp__sum_balances0 := sum_balances0;
[L2058]              __tmp__alloc_allowed_StandardToken_lvl0 := alloc_allowed_StandardToken_lvl0;
[L2059]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L2060]              __tmp__sum_allowed1 := sum_allowed1;
[L2061]              __tmp__M_Ref_bool := M_Ref_bool;
[L2062]              __tmp__sum_isBlackListed2 := sum_isBlackListed2;
[L2063]              __tmp__Length := Length;
[L2064]              __tmp__now := now;
[L2065]              __tmp__owner_Ownable := owner_Ownable;
[L2066]              __tmp__balances_BasicToken := balances_BasicToken;
[L2067]              __tmp__totalSupply__BasicToken := totalSupply__BasicToken;
[L2068]              __tmp__allowed_StandardToken := allowed_StandardToken;
[L2069]              __tmp__paused_Pausable := paused_Pausable;
[L2070]              __tmp__isBlackListed_BlackList := isBlackListed_BlackList;
[L2071]              __tmp__name_AlitaToken := name_AlitaToken;
[L2072]              __tmp__symbol_AlitaToken := symbol_AlitaToken;
[L2073]              __tmp__decimals_AlitaToken := decimals_AlitaToken;
[L2074]              __tmp__init_Supply_AlitaToken := init_Supply_AlitaToken;
[L2075]              __tmp__upgradedAddress_AlitaToken := upgradedAddress_AlitaToken;
[L2076]              __tmp__deprecated_AlitaToken := deprecated_AlitaToken;
[L2077]  CALL        call __ret_0_ := transfer~address~uint256_AlitaToken__fail(this, msgsender_MSG, msgvalue_MSG, _to_s754, _value_s754);
[L4983]  CALL        call whenNotPaused_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L7440]  COND FALSE  !(!!__tmp__paused_Pausable[this])
[L4983]  RET         call whenNotPaused_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L4984]  COND FALSE  !(revert)
[L4987]  COND FALSE  !(!!__tmp__isBlackListed_BlackList[this][msgsender_MSG])
[L4991]  COND TRUE   !!__tmp__isBlackListed_BlackList[this][_to_s754]
[L4992]              revert := true;
[L2077]  RET         call __ret_0_ := transfer~address~uint256_AlitaToken__fail(this, msgsender_MSG, msgvalue_MSG, _to_s754, _value_s754);
[L2078]              assume revert || gas < 0;
[L8523]  RET         call __ret_0_transfer := transfer~address~uint256_AlitaToken(this, msgsender_MSG, msgvalue_MSG, _to_s754, _value_s754);
[L8673]  RET         call CorralChoice_AlitaToken(this);

[2020-11-24 23:45:51,909 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 23:45:51,909 INFO  L82        PathProgramCache]: Analyzing trace with hash -1725424985, now seen corresponding path program 1 times
[2020-11-24 23:45:51,910 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 23:45:51,921 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 23:45:51,988 INFO  L134       CoverageAnalysis]: Checked inductivity of 381 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 381 trivial. 0 not checked.
[2020-11-24 23:45:51,989 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 23:45:51,989 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [5] imperfect sequences [] total 5
[2020-11-24 23:45:51,989 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 23:45:51,989 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 5 interpolants.
[2020-11-24 23:45:51,989 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=7, Invalid=13, Unknown=0, NotChecked=0, Total=20
[2020-11-24 23:45:51,989 INFO  L87              Difference]: Start difference. First operand 10882 states and 14044 transitions. cyclomatic complexity: 3202 Second operand 5 states.
[2020-11-24 23:45:52,060 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 23:45:52,060 INFO  L93              Difference]: Finished difference Result 11150 states and 14376 transitions.
[2020-11-24 23:45:52,060 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 5 states. 
[2020-11-24 23:45:52,061 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 11150 states and 14376 transitions.
[2020-11-24 23:45:52,095 INFO  L131   ngComponentsAnalysis]: Automaton has 10 accepting balls. 128
[2020-11-24 23:45:52,138 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 11150 states to 11150 states and 14376 transitions.
[2020-11-24 23:45:52,138 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 3040
[2020-11-24 23:45:52,140 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 3040
[2020-11-24 23:45:52,140 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 11150 states and 14376 transitions.
[2020-11-24 23:45:52,154 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 23:45:52,154 INFO  L728         BuchiCegarLoop]: Abstraction has 11150 states and 14376 transitions.
[2020-11-24 23:45:52,159 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 11150 states and 14376 transitions.
[2020-11-24 23:45:52,249 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 11150 to 11052.
[2020-11-24 23:45:52,250 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 11052 states.
[2020-11-24 23:45:52,274 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 11052 states to 11052 states and 14250 transitions.
[2020-11-24 23:45:52,274 INFO  L751         BuchiCegarLoop]: Abstraction has 11052 states and 14250 transitions.
[2020-11-24 23:45:52,274 INFO  L631         BuchiCegarLoop]: Abstraction has 11052 states and 14250 transitions.
[2020-11-24 23:45:52,274 INFO  L445         BuchiCegarLoop]: ======== Iteration 8============
[2020-11-24 23:45:52,274 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 11052 states and 14250 transitions.
[2020-11-24 23:45:52,289 INFO  L131   ngComponentsAnalysis]: Automaton has 10 accepting balls. 128
[2020-11-24 23:45:52,289 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 23:45:52,289 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 23:45:52,290 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [8, 8, 8, 8, 8, 8, 8, 8, 8, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 23:45:52,290 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 success_transfer_AlitaToken0 := false;
[L2]                 call_transfer_AlitaToken0 := false;
[L2]     CALL        call main();
[L8663]              assume null == 0;
[L8664]  CALL        call this := FreshRefGenerator__success();
[L3958]              havoc newRef;
[L3959]              assume Alloc[newRef] == false;
[L3960]              Alloc[newRef] := true;
[L3961]              assume newRef != null;
[L8664]  RET         call this := FreshRefGenerator__success();
[L8665]              assume now >= 0;
[L8666]              assume DType[this] == AlitaToken;
[L8667]              assume msgvalue_MSG == 0;
[L8668]              gas := gas - 53000;
[L8669]  CALL        call AlitaToken_AlitaToken(this, msgsender_MSG, msgvalue_MSG);
[L1981]              havoc __exception;
[L1982]              revert := false;
[L1983]  COND FALSE  !(__exception)
[L2012]  CALL        call AlitaToken_AlitaToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4942]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3994]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3977]              assume msgsender_MSG != null;
[L3978]              Balance[this] := 0;
[L3979]              owner_Ownable[this] := null;
[L3981]              owner_Ownable[this] := msgsender_MSG;
[L3994]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3995]  COND FALSE  !(revert)
[L4942]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4943]  COND FALSE  !(revert)
[L4946]  CALL        call Pausable_Pausable__success(this, msgsender_MSG, msgvalue_MSG);
[L4531]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3994]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3977]              assume msgsender_MSG != null;
[L3978]              Balance[this] := 0;
[L3979]              owner_Ownable[this] := null;
[L3981]              owner_Ownable[this] := msgsender_MSG;
[L3994]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3995]  COND FALSE  !(revert)
[L4531]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4532]  COND FALSE  !(revert)
[L4535]  CALL        call Pausable_Pausable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4511]              assume msgsender_MSG != null;
[L4512]              Balance[this] := 0;
[L4513]              paused_Pausable[this] := false;
[L4535]  RET         call Pausable_Pausable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4536]  COND FALSE  !(revert)
[L4946]  RET         call Pausable_Pausable__success(this, msgsender_MSG, msgvalue_MSG);
[L4947]  COND FALSE  !(revert)
[L4950]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4064]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4049]              assume msgsender_MSG != null;
[L4050]              Balance[this] := 0;
[L4064]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  COND FALSE  !(revert)
[L4950]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4951]  COND FALSE  !(revert)
[L4954]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4235]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4064]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4049]              assume msgsender_MSG != null;
[L4050]              Balance[this] := 0;
[L4064]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  COND FALSE  !(revert)
[L4235]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4236]  COND FALSE  !(revert)
[L4239]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4216]              assume msgsender_MSG != null;
[L4217]              Balance[this] := 0;
[L4239]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4240]  COND FALSE  !(revert)
[L4954]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4955]  COND FALSE  !(revert)
[L4958]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4106]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4064]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4049]              assume msgsender_MSG != null;
[L4050]              Balance[this] := 0;
[L4064]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  COND FALSE  !(revert)
[L4106]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4107]  COND FALSE  !(revert)
[L4110]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4084]              assume msgsender_MSG != null;
[L4085]              Balance[this] := 0;
[L4086]              balances_BasicToken[this] := zeroRefintArr();
[L4087]              sum_balances0[this] := 0;
[L4088]              totalSupply__BasicToken[this] := 0;
[L4110]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4111]  COND FALSE  !(revert)
[L4958]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4959]  COND FALSE  !(revert)
[L4962]  CALL        call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4287]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4064]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4049]              assume msgsender_MSG != null;
[L4050]              Balance[this] := 0;
[L4064]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  COND FALSE  !(revert)
[L4287]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4288]  COND FALSE  !(revert)
[L4291]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4235]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4064]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4049]              assume msgsender_MSG != null;
[L4050]              Balance[this] := 0;
[L4064]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  COND FALSE  !(revert)
[L4235]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4236]  COND FALSE  !(revert)
[L4239]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4216]              assume msgsender_MSG != null;
[L4217]              Balance[this] := 0;
[L4239]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4240]  COND FALSE  !(revert)
[L4291]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4292]  COND FALSE  !(revert)
[L4295]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4106]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4064]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4049]              assume msgsender_MSG != null;
[L4050]              Balance[this] := 0;
[L4064]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  COND FALSE  !(revert)
[L4106]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4107]  COND FALSE  !(revert)
[L4110]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4084]              assume msgsender_MSG != null;
[L4085]              Balance[this] := 0;
[L4086]              balances_BasicToken[this] := zeroRefintArr();
[L4087]              sum_balances0[this] := 0;
[L4088]              totalSupply__BasicToken[this] := 0;
[L4110]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4111]  COND FALSE  !(revert)
[L4295]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4296]  COND FALSE  !(revert)
[L4299]  CALL        call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4258]              assume msgsender_MSG != null;
[L4259]              Balance[this] := 0;
[L4260]              allowed_StandardToken[this] := zeroRefRefintArr();
[L4261]              sum_allowed1[this] := 0;
[L4299]  RET         call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4300]  COND FALSE  !(revert)
[L4962]  RET         call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4963]  COND FALSE  !(revert)
[L4966]  CALL        call BlackList_BlackList__success(this, msgsender_MSG, msgvalue_MSG);
[L4711]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3994]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3977]              assume msgsender_MSG != null;
[L3978]              Balance[this] := 0;
[L3979]              owner_Ownable[this] := null;
[L3981]              owner_Ownable[this] := msgsender_MSG;
[L3994]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3995]  COND FALSE  !(revert)
[L4711]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4712]  COND FALSE  !(revert)
[L4715]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4064]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4049]              assume msgsender_MSG != null;
[L4050]              Balance[this] := 0;
[L4064]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  COND FALSE  !(revert)
[L4715]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4716]  COND FALSE  !(revert)
[L4719]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4106]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4064]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4049]              assume msgsender_MSG != null;
[L4050]              Balance[this] := 0;
[L4064]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  COND FALSE  !(revert)
[L4106]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4107]  COND FALSE  !(revert)
[L4110]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4084]              assume msgsender_MSG != null;
[L4085]              Balance[this] := 0;
[L4086]              balances_BasicToken[this] := zeroRefintArr();
[L4087]              sum_balances0[this] := 0;
[L4088]              totalSupply__BasicToken[this] := 0;
[L4110]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4111]  COND FALSE  !(revert)
[L4719]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4720]  COND FALSE  !(revert)
[L4723]  CALL        call BlackList_BlackList_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4683]              assume msgsender_MSG != null;
[L4684]              Balance[this] := 0;
[L4685]              isBlackListed_BlackList[this] := zeroRefboolArr();
[L4723]  RET         call BlackList_BlackList_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4724]  COND FALSE  !(revert)
[L4966]  RET         call BlackList_BlackList__success(this, msgsender_MSG, msgvalue_MSG);
[L4967]  COND FALSE  !(revert)
[L4970]  CALL        call AlitaToken_AlitaToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4888]              assume msgsender_MSG != null;
[L4889]              Balance[this] := 0;
[L4890]              name_AlitaToken[this] := -1110093910;
[L4891]              symbol_AlitaToken[this] := 1234648092;
[L4892]              decimals_AlitaToken[this] := 18;
[L4893]              init_Supply_AlitaToken[this] := 1000000000 * (1000000000000000000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L4894]              upgradedAddress_AlitaToken[this] := null;
[L4895]              deprecated_AlitaToken[this] := false;
[L4897]              totalSupply__BasicToken[this] := init_Supply_AlitaToken[this];
[L4898]              sum_balances0[this] := sum_balances0[this] - balances_BasicToken[this][msgsender_MSG];
[L4899]              balances_BasicToken[this][msgsender_MSG] := totalSupply__BasicToken[this];
[L4900]              sum_balances0[this] := sum_balances0[this] + balances_BasicToken[this][msgsender_MSG];
[L4901]              deprecated_AlitaToken[this] := false;
[L4970]  RET         call AlitaToken_AlitaToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4971]  COND FALSE  !(revert)
[L2012]  RET         call AlitaToken_AlitaToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2013]              assume !revert && gas >= 0;
[L8669]  RET         call AlitaToken_AlitaToken(this, msgsender_MSG, msgvalue_MSG);
[L8670]              assume !revert && gas >= 0;
[L8673]  CALL        call CorralChoice_AlitaToken(this);
[L8433]              havoc msgsender_MSG;
[L8434]              havoc msgvalue_MSG;
[L8435]              havoc choice;
[L8436]              havoc __ret_0_owner;
[L8437]              havoc newOwner_s42;
[L8438]              havoc __ret_0_totalSupply;
[L8439]              havoc _owner_s166;
[L8440]              havoc __ret_0_balanceOf;
[L8441]              havoc _to_s754;
[L8442]              havoc _value_s754;
[L8443]              havoc __ret_0_transfer;
[L8444]              havoc _owner_s885;
[L8445]              havoc _spender_s885;
[L8446]              havoc __ret_0_allowance;
[L8447]              havoc _from_s812;
[L8448]              havoc _to_s812;
[L8449]              havoc _value_s812;
[L8450]              havoc __ret_0_transferFrom;
[L8451]              havoc _spender_s857;
[L8452]              havoc _value_s857;
[L8453]              havoc __ret_0_approve;
[L8454]              havoc _spender_s913;
[L8455]              havoc _addedValue_s913;
[L8456]              havoc __ret_0_increaseApproval;
[L8457]              havoc _spender_s941;
[L8458]              havoc _subtractedValue_s941;
[L8459]              havoc __ret_0_decreaseApproval;
[L8460]              havoc __ret_0_paused;
[L8461]              havoc _maker_s564;
[L8462]              havoc __ret_0_getBlackListStatus;
[L8463]              havoc __ret_0_getOwner;
[L8464]              havoc arg1060_s0;
[L8465]              havoc __ret_0_isBlackListed;
[L8466]              havoc _evilUser_s594;
[L8467]              havoc _clearedUser_s612;
[L8468]              havoc _blackListedUser_s647;
[L8469]              havoc __ret_0_name;
[L8470]              havoc __ret_0_symbol;
[L8471]              havoc __ret_0_decimals;
[L8472]              havoc __ret_0_init_Supply;
[L8473]              havoc __ret_0_upgradedAddress;
[L8474]              havoc __ret_0_deprecated;
[L8475]              havoc _upgradedAddress_s961;
[L8476]              havoc tmpNow;
[L8477]              havoc gas;
[L8478]              assume gas > 4000000 && gas <= 8000000;
[L8479]              tmpNow := now;
[L8480]              havoc now;
[L8481]              assume now > tmpNow;
[L8482]              assume msgsender_MSG != null;
[L8483]              assume DType[msgsender_MSG] != Ownable;
[L8484]              assume DType[msgsender_MSG] != ERC20Basic;
[L8485]              assume DType[msgsender_MSG] != BasicToken;
[L8486]              assume DType[msgsender_MSG] != ERC20;
[L8487]              assume DType[msgsender_MSG] != StandardToken;
[L8488]              assume DType[msgsender_MSG] != Pausable;
[L8489]              assume DType[msgsender_MSG] != UpgradedStandardToken;
[L8490]              assume DType[msgsender_MSG] != BlackList;
[L8491]              assume DType[msgsender_MSG] != AlitaToken;
[L8492]              assume DType[msgsender_MSG] != SafeMath;
[L8493]              Alloc[msgsender_MSG] := true;
[L8494]  COND FALSE  !(choice == 26)
[L8500]  COND FALSE  !(choice == 25)
[L8506]  COND FALSE  !(choice == 24)
[L8512]  COND FALSE  !(choice == 23)
[L8518]  COND TRUE   choice == 22
[L8519]              gas := gas - 21000;
[L8520]  COND TRUE   gas >= 0
[L8521]              assume _value_s754 >= 0 && _value_s754 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L8522]              assume msgvalue_MSG == 0;
[L8523]  CALL        call __ret_0_transfer := transfer~address~uint256_AlitaToken(this, msgsender_MSG, msgvalue_MSG, _to_s754, _value_s754);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == _to_s754 && _value_s754 <= balances_BasicToken[this][msgsender_MSG]) && _value_s754 >= 0) && _value_s754 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BasicToken[this][_to_s754] >= 0) && balances_BasicToken[this][_to_s754] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BasicToken[this][msgsender_MSG] >= 0) && balances_BasicToken[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_AlitaToken0 := true;
[L2]                 call_transfer_AlitaToken0 := false;
[L2]                 revert := revert_hold;
[L2049]              havoc __exception;
[L2050]              revert := false;
[L2051]  COND TRUE   __exception
[L2052]              __tmp__Balance := Balance;
[L2053]              __tmp__DType := DType;
[L2054]              __tmp__Alloc := Alloc;
[L2055]              __tmp__balance_ADDR := balance_ADDR;
[L2056]              __tmp__M_Ref_int := M_Ref_int;
[L2057]              __tmp__sum_balances0 := sum_balances0;
[L2058]              __tmp__alloc_allowed_StandardToken_lvl0 := alloc_allowed_StandardToken_lvl0;
[L2059]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L2060]              __tmp__sum_allowed1 := sum_allowed1;
[L2061]              __tmp__M_Ref_bool := M_Ref_bool;
[L2062]              __tmp__sum_isBlackListed2 := sum_isBlackListed2;
[L2063]              __tmp__Length := Length;
[L2064]              __tmp__now := now;
[L2065]              __tmp__owner_Ownable := owner_Ownable;
[L2066]              __tmp__balances_BasicToken := balances_BasicToken;
[L2067]              __tmp__totalSupply__BasicToken := totalSupply__BasicToken;
[L2068]              __tmp__allowed_StandardToken := allowed_StandardToken;
[L2069]              __tmp__paused_Pausable := paused_Pausable;
[L2070]              __tmp__isBlackListed_BlackList := isBlackListed_BlackList;
[L2071]              __tmp__name_AlitaToken := name_AlitaToken;
[L2072]              __tmp__symbol_AlitaToken := symbol_AlitaToken;
[L2073]              __tmp__decimals_AlitaToken := decimals_AlitaToken;
[L2074]              __tmp__init_Supply_AlitaToken := init_Supply_AlitaToken;
[L2075]              __tmp__upgradedAddress_AlitaToken := upgradedAddress_AlitaToken;
[L2076]              __tmp__deprecated_AlitaToken := deprecated_AlitaToken;
[L2077]  CALL        call __ret_0_ := transfer~address~uint256_AlitaToken__fail(this, msgsender_MSG, msgvalue_MSG, _to_s754, _value_s754);
[L4983]  CALL        call whenNotPaused_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L7440]  COND FALSE  !(!!__tmp__paused_Pausable[this])
[L4983]  RET         call whenNotPaused_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L4984]  COND FALSE  !(revert)
[L4987]  COND FALSE  !(!!__tmp__isBlackListed_BlackList[this][msgsender_MSG])
[L4991]  COND FALSE  !(!!__tmp__isBlackListed_BlackList[this][_to_s754])
[L4995]  COND TRUE   __tmp__deprecated_AlitaToken[this]
[L4996]              assume __tmp__DType[__tmp__upgradedAddress_AlitaToken[this]] == UpgradedStandardToken;
[L4997]              __var_12 := __tmp__upgradedAddress_AlitaToken[this];
[L4999]              __ret_0_ := __var_11;
[L2077]  RET         call __ret_0_ := transfer~address~uint256_AlitaToken__fail(this, msgsender_MSG, msgvalue_MSG, _to_s754, _value_s754);
[L2078]              assume revert || gas < 0;
[L8523]  RET         call __ret_0_transfer := transfer~address~uint256_AlitaToken(this, msgsender_MSG, msgvalue_MSG, _to_s754, _value_s754);
[L8673]  RET         call CorralChoice_AlitaToken(this);

Loop:
[L8673]  CALL        call CorralChoice_AlitaToken(this);
[L8433]              havoc msgsender_MSG;
[L8434]              havoc msgvalue_MSG;
[L8435]              havoc choice;
[L8436]              havoc __ret_0_owner;
[L8437]              havoc newOwner_s42;
[L8438]              havoc __ret_0_totalSupply;
[L8439]              havoc _owner_s166;
[L8440]              havoc __ret_0_balanceOf;
[L8441]              havoc _to_s754;
[L8442]              havoc _value_s754;
[L8443]              havoc __ret_0_transfer;
[L8444]              havoc _owner_s885;
[L8445]              havoc _spender_s885;
[L8446]              havoc __ret_0_allowance;
[L8447]              havoc _from_s812;
[L8448]              havoc _to_s812;
[L8449]              havoc _value_s812;
[L8450]              havoc __ret_0_transferFrom;
[L8451]              havoc _spender_s857;
[L8452]              havoc _value_s857;
[L8453]              havoc __ret_0_approve;
[L8454]              havoc _spender_s913;
[L8455]              havoc _addedValue_s913;
[L8456]              havoc __ret_0_increaseApproval;
[L8457]              havoc _spender_s941;
[L8458]              havoc _subtractedValue_s941;
[L8459]              havoc __ret_0_decreaseApproval;
[L8460]              havoc __ret_0_paused;
[L8461]              havoc _maker_s564;
[L8462]              havoc __ret_0_getBlackListStatus;
[L8463]              havoc __ret_0_getOwner;
[L8464]              havoc arg1060_s0;
[L8465]              havoc __ret_0_isBlackListed;
[L8466]              havoc _evilUser_s594;
[L8467]              havoc _clearedUser_s612;
[L8468]              havoc _blackListedUser_s647;
[L8469]              havoc __ret_0_name;
[L8470]              havoc __ret_0_symbol;
[L8471]              havoc __ret_0_decimals;
[L8472]              havoc __ret_0_init_Supply;
[L8473]              havoc __ret_0_upgradedAddress;
[L8474]              havoc __ret_0_deprecated;
[L8475]              havoc _upgradedAddress_s961;
[L8476]              havoc tmpNow;
[L8477]              havoc gas;
[L8478]              assume gas > 4000000 && gas <= 8000000;
[L8479]              tmpNow := now;
[L8480]              havoc now;
[L8481]              assume now > tmpNow;
[L8482]              assume msgsender_MSG != null;
[L8483]              assume DType[msgsender_MSG] != Ownable;
[L8484]              assume DType[msgsender_MSG] != ERC20Basic;
[L8485]              assume DType[msgsender_MSG] != BasicToken;
[L8486]              assume DType[msgsender_MSG] != ERC20;
[L8487]              assume DType[msgsender_MSG] != StandardToken;
[L8488]              assume DType[msgsender_MSG] != Pausable;
[L8489]              assume DType[msgsender_MSG] != UpgradedStandardToken;
[L8490]              assume DType[msgsender_MSG] != BlackList;
[L8491]              assume DType[msgsender_MSG] != AlitaToken;
[L8492]              assume DType[msgsender_MSG] != SafeMath;
[L8493]              Alloc[msgsender_MSG] := true;
[L8494]  COND FALSE  !(choice == 26)
[L8500]  COND FALSE  !(choice == 25)
[L8506]  COND FALSE  !(choice == 24)
[L8512]  COND FALSE  !(choice == 23)
[L8518]  COND TRUE   choice == 22
[L8519]              gas := gas - 21000;
[L8520]  COND TRUE   gas >= 0
[L8521]              assume _value_s754 >= 0 && _value_s754 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L8522]              assume msgvalue_MSG == 0;
[L8523]  CALL        call __ret_0_transfer := transfer~address~uint256_AlitaToken(this, msgsender_MSG, msgvalue_MSG, _to_s754, _value_s754);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == _to_s754 && _value_s754 <= balances_BasicToken[this][msgsender_MSG]) && _value_s754 >= 0) && _value_s754 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BasicToken[this][_to_s754] >= 0) && balances_BasicToken[this][_to_s754] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BasicToken[this][msgsender_MSG] >= 0) && balances_BasicToken[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_AlitaToken0 := true;
[L2]                 call_transfer_AlitaToken0 := false;
[L2]                 revert := revert_hold;
[L2049]              havoc __exception;
[L2050]              revert := false;
[L2051]  COND TRUE   __exception
[L2052]              __tmp__Balance := Balance;
[L2053]              __tmp__DType := DType;
[L2054]              __tmp__Alloc := Alloc;
[L2055]              __tmp__balance_ADDR := balance_ADDR;
[L2056]              __tmp__M_Ref_int := M_Ref_int;
[L2057]              __tmp__sum_balances0 := sum_balances0;
[L2058]              __tmp__alloc_allowed_StandardToken_lvl0 := alloc_allowed_StandardToken_lvl0;
[L2059]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L2060]              __tmp__sum_allowed1 := sum_allowed1;
[L2061]              __tmp__M_Ref_bool := M_Ref_bool;
[L2062]              __tmp__sum_isBlackListed2 := sum_isBlackListed2;
[L2063]              __tmp__Length := Length;
[L2064]              __tmp__now := now;
[L2065]              __tmp__owner_Ownable := owner_Ownable;
[L2066]              __tmp__balances_BasicToken := balances_BasicToken;
[L2067]              __tmp__totalSupply__BasicToken := totalSupply__BasicToken;
[L2068]              __tmp__allowed_StandardToken := allowed_StandardToken;
[L2069]              __tmp__paused_Pausable := paused_Pausable;
[L2070]              __tmp__isBlackListed_BlackList := isBlackListed_BlackList;
[L2071]              __tmp__name_AlitaToken := name_AlitaToken;
[L2072]              __tmp__symbol_AlitaToken := symbol_AlitaToken;
[L2073]              __tmp__decimals_AlitaToken := decimals_AlitaToken;
[L2074]              __tmp__init_Supply_AlitaToken := init_Supply_AlitaToken;
[L2075]              __tmp__upgradedAddress_AlitaToken := upgradedAddress_AlitaToken;
[L2076]              __tmp__deprecated_AlitaToken := deprecated_AlitaToken;
[L2077]  CALL        call __ret_0_ := transfer~address~uint256_AlitaToken__fail(this, msgsender_MSG, msgvalue_MSG, _to_s754, _value_s754);
[L4983]  CALL        call whenNotPaused_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L7440]  COND FALSE  !(!!__tmp__paused_Pausable[this])
[L4983]  RET         call whenNotPaused_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L4984]  COND FALSE  !(revert)
[L4987]  COND FALSE  !(!!__tmp__isBlackListed_BlackList[this][msgsender_MSG])
[L4991]  COND FALSE  !(!!__tmp__isBlackListed_BlackList[this][_to_s754])
[L4995]  COND TRUE   __tmp__deprecated_AlitaToken[this]
[L4996]              assume __tmp__DType[__tmp__upgradedAddress_AlitaToken[this]] == UpgradedStandardToken;
[L4997]              __var_12 := __tmp__upgradedAddress_AlitaToken[this];
[L4999]              __ret_0_ := __var_11;
[L2077]  RET         call __ret_0_ := transfer~address~uint256_AlitaToken__fail(this, msgsender_MSG, msgvalue_MSG, _to_s754, _value_s754);
[L2078]              assume revert || gas < 0;
[L8523]  RET         call __ret_0_transfer := transfer~address~uint256_AlitaToken(this, msgsender_MSG, msgvalue_MSG, _to_s754, _value_s754);
[L8673]  RET         call CorralChoice_AlitaToken(this);

[2020-11-24 23:45:52,294 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 23:45:52,294 INFO  L82        PathProgramCache]: Analyzing trace with hash -1777132342, now seen corresponding path program 1 times
[2020-11-24 23:45:52,295 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 23:45:52,306 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 23:45:52,364 INFO  L134       CoverageAnalysis]: Checked inductivity of 381 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 381 trivial. 0 not checked.
[2020-11-24 23:45:52,365 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 23:45:52,365 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [5] imperfect sequences [] total 5
[2020-11-24 23:45:52,365 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 23:45:52,365 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 5 interpolants.
[2020-11-24 23:45:52,365 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=7, Invalid=13, Unknown=0, NotChecked=0, Total=20
[2020-11-24 23:45:52,365 INFO  L87              Difference]: Start difference. First operand 11052 states and 14250 transitions. cyclomatic complexity: 3238 Second operand 5 states.
[2020-11-24 23:45:52,917 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 23:45:52,918 INFO  L93              Difference]: Finished difference Result 13014 states and 16842 transitions.
[2020-11-24 23:45:52,918 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 7 states. 
[2020-11-24 23:45:52,918 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 13014 states and 16842 transitions.
[2020-11-24 23:45:52,967 INFO  L131   ngComponentsAnalysis]: Automaton has 14 accepting balls. 192
[2020-11-24 23:45:53,023 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 13014 states to 11470 states and 15137 transitions.
[2020-11-24 23:45:53,023 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 2768
[2020-11-24 23:45:53,025 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 3089
[2020-11-24 23:45:53,025 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 11470 states and 15137 transitions.
[2020-11-24 23:45:53,043 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 23:45:53,043 INFO  L728         BuchiCegarLoop]: Abstraction has 11470 states and 15137 transitions.
[2020-11-24 23:45:53,047 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 11470 states and 15137 transitions.
[2020-11-24 23:45:53,172 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 11470 to 8992.
[2020-11-24 23:45:53,172 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 8992 states.
[2020-11-24 23:45:53,191 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 8992 states to 8992 states and 10972 transitions.
[2020-11-24 23:45:53,191 INFO  L751         BuchiCegarLoop]: Abstraction has 8992 states and 10972 transitions.
[2020-11-24 23:45:53,191 INFO  L631         BuchiCegarLoop]: Abstraction has 8992 states and 10972 transitions.
[2020-11-24 23:45:53,191 INFO  L445         BuchiCegarLoop]: ======== Iteration 9============
[2020-11-24 23:45:53,191 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 8992 states and 10972 transitions.
[2020-11-24 23:45:53,219 INFO  L131   ngComponentsAnalysis]: Automaton has 14 accepting balls. 96
[2020-11-24 23:45:53,220 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 23:45:53,220 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 23:45:53,222 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [8, 8, 8, 8, 8, 8, 8, 8, 8, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 23:45:53,222 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 success_transfer_AlitaToken0 := false;
[L2]                 call_transfer_AlitaToken0 := false;
[L2]     CALL        call main();
[L8663]              assume null == 0;
[L8664]  CALL        call this := FreshRefGenerator__success();
[L3958]              havoc newRef;
[L3959]              assume Alloc[newRef] == false;
[L3960]              Alloc[newRef] := true;
[L3961]              assume newRef != null;
[L8664]  RET         call this := FreshRefGenerator__success();
[L8665]              assume now >= 0;
[L8666]              assume DType[this] == AlitaToken;
[L8667]              assume msgvalue_MSG == 0;
[L8668]              gas := gas - 53000;
[L8669]  CALL        call AlitaToken_AlitaToken(this, msgsender_MSG, msgvalue_MSG);
[L1981]              havoc __exception;
[L1982]              revert := false;
[L1983]  COND FALSE  !(__exception)
[L2012]  CALL        call AlitaToken_AlitaToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4942]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3994]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3977]              assume msgsender_MSG != null;
[L3978]              Balance[this] := 0;
[L3979]              owner_Ownable[this] := null;
[L3981]              owner_Ownable[this] := msgsender_MSG;
[L3994]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3995]  COND FALSE  !(revert)
[L4942]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4943]  COND FALSE  !(revert)
[L4946]  CALL        call Pausable_Pausable__success(this, msgsender_MSG, msgvalue_MSG);
[L4531]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3994]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3977]              assume msgsender_MSG != null;
[L3978]              Balance[this] := 0;
[L3979]              owner_Ownable[this] := null;
[L3981]              owner_Ownable[this] := msgsender_MSG;
[L3994]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3995]  COND FALSE  !(revert)
[L4531]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4532]  COND FALSE  !(revert)
[L4535]  CALL        call Pausable_Pausable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4511]              assume msgsender_MSG != null;
[L4512]              Balance[this] := 0;
[L4513]              paused_Pausable[this] := false;
[L4535]  RET         call Pausable_Pausable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4536]  COND FALSE  !(revert)
[L4946]  RET         call Pausable_Pausable__success(this, msgsender_MSG, msgvalue_MSG);
[L4947]  COND FALSE  !(revert)
[L4950]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4064]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4049]              assume msgsender_MSG != null;
[L4050]              Balance[this] := 0;
[L4064]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  COND FALSE  !(revert)
[L4950]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4951]  COND FALSE  !(revert)
[L4954]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4235]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4064]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4049]              assume msgsender_MSG != null;
[L4050]              Balance[this] := 0;
[L4064]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  COND FALSE  !(revert)
[L4235]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4236]  COND FALSE  !(revert)
[L4239]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4216]              assume msgsender_MSG != null;
[L4217]              Balance[this] := 0;
[L4239]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4240]  COND FALSE  !(revert)
[L4954]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4955]  COND FALSE  !(revert)
[L4958]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4106]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4064]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4049]              assume msgsender_MSG != null;
[L4050]              Balance[this] := 0;
[L4064]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  COND FALSE  !(revert)
[L4106]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4107]  COND FALSE  !(revert)
[L4110]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4084]              assume msgsender_MSG != null;
[L4085]              Balance[this] := 0;
[L4086]              balances_BasicToken[this] := zeroRefintArr();
[L4087]              sum_balances0[this] := 0;
[L4088]              totalSupply__BasicToken[this] := 0;
[L4110]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4111]  COND FALSE  !(revert)
[L4958]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4959]  COND FALSE  !(revert)
[L4962]  CALL        call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4287]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4064]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4049]              assume msgsender_MSG != null;
[L4050]              Balance[this] := 0;
[L4064]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  COND FALSE  !(revert)
[L4287]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4288]  COND FALSE  !(revert)
[L4291]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4235]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4064]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4049]              assume msgsender_MSG != null;
[L4050]              Balance[this] := 0;
[L4064]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  COND FALSE  !(revert)
[L4235]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4236]  COND FALSE  !(revert)
[L4239]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4216]              assume msgsender_MSG != null;
[L4217]              Balance[this] := 0;
[L4239]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4240]  COND FALSE  !(revert)
[L4291]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4292]  COND FALSE  !(revert)
[L4295]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4106]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4064]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4049]              assume msgsender_MSG != null;
[L4050]              Balance[this] := 0;
[L4064]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  COND FALSE  !(revert)
[L4106]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4107]  COND FALSE  !(revert)
[L4110]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4084]              assume msgsender_MSG != null;
[L4085]              Balance[this] := 0;
[L4086]              balances_BasicToken[this] := zeroRefintArr();
[L4087]              sum_balances0[this] := 0;
[L4088]              totalSupply__BasicToken[this] := 0;
[L4110]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4111]  COND FALSE  !(revert)
[L4295]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4296]  COND FALSE  !(revert)
[L4299]  CALL        call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4258]              assume msgsender_MSG != null;
[L4259]              Balance[this] := 0;
[L4260]              allowed_StandardToken[this] := zeroRefRefintArr();
[L4261]              sum_allowed1[this] := 0;
[L4299]  RET         call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4300]  COND FALSE  !(revert)
[L4962]  RET         call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4963]  COND FALSE  !(revert)
[L4966]  CALL        call BlackList_BlackList__success(this, msgsender_MSG, msgvalue_MSG);
[L4711]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3994]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3977]              assume msgsender_MSG != null;
[L3978]              Balance[this] := 0;
[L3979]              owner_Ownable[this] := null;
[L3981]              owner_Ownable[this] := msgsender_MSG;
[L3994]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3995]  COND FALSE  !(revert)
[L4711]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4712]  COND FALSE  !(revert)
[L4715]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4064]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4049]              assume msgsender_MSG != null;
[L4050]              Balance[this] := 0;
[L4064]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  COND FALSE  !(revert)
[L4715]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4716]  COND FALSE  !(revert)
[L4719]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4106]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4064]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4049]              assume msgsender_MSG != null;
[L4050]              Balance[this] := 0;
[L4064]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  COND FALSE  !(revert)
[L4106]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4107]  COND FALSE  !(revert)
[L4110]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4084]              assume msgsender_MSG != null;
[L4085]              Balance[this] := 0;
[L4086]              balances_BasicToken[this] := zeroRefintArr();
[L4087]              sum_balances0[this] := 0;
[L4088]              totalSupply__BasicToken[this] := 0;
[L4110]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4111]  COND FALSE  !(revert)
[L4719]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4720]  COND FALSE  !(revert)
[L4723]  CALL        call BlackList_BlackList_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4683]              assume msgsender_MSG != null;
[L4684]              Balance[this] := 0;
[L4685]              isBlackListed_BlackList[this] := zeroRefboolArr();
[L4723]  RET         call BlackList_BlackList_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4724]  COND FALSE  !(revert)
[L4966]  RET         call BlackList_BlackList__success(this, msgsender_MSG, msgvalue_MSG);
[L4967]  COND FALSE  !(revert)
[L4970]  CALL        call AlitaToken_AlitaToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4888]              assume msgsender_MSG != null;
[L4889]              Balance[this] := 0;
[L4890]              name_AlitaToken[this] := -1110093910;
[L4891]              symbol_AlitaToken[this] := 1234648092;
[L4892]              decimals_AlitaToken[this] := 18;
[L4893]              init_Supply_AlitaToken[this] := 1000000000 * (1000000000000000000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L4894]              upgradedAddress_AlitaToken[this] := null;
[L4895]              deprecated_AlitaToken[this] := false;
[L4897]              totalSupply__BasicToken[this] := init_Supply_AlitaToken[this];
[L4898]              sum_balances0[this] := sum_balances0[this] - balances_BasicToken[this][msgsender_MSG];
[L4899]              balances_BasicToken[this][msgsender_MSG] := totalSupply__BasicToken[this];
[L4900]              sum_balances0[this] := sum_balances0[this] + balances_BasicToken[this][msgsender_MSG];
[L4901]              deprecated_AlitaToken[this] := false;
[L4970]  RET         call AlitaToken_AlitaToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4971]  COND FALSE  !(revert)
[L2012]  RET         call AlitaToken_AlitaToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2013]              assume !revert && gas >= 0;
[L8669]  RET         call AlitaToken_AlitaToken(this, msgsender_MSG, msgvalue_MSG);
[L8670]              assume !revert && gas >= 0;
[L8673]  CALL        call CorralChoice_AlitaToken(this);
[L8433]              havoc msgsender_MSG;
[L8434]              havoc msgvalue_MSG;
[L8435]              havoc choice;
[L8436]              havoc __ret_0_owner;
[L8437]              havoc newOwner_s42;
[L8438]              havoc __ret_0_totalSupply;
[L8439]              havoc _owner_s166;
[L8440]              havoc __ret_0_balanceOf;
[L8441]              havoc _to_s754;
[L8442]              havoc _value_s754;
[L8443]              havoc __ret_0_transfer;
[L8444]              havoc _owner_s885;
[L8445]              havoc _spender_s885;
[L8446]              havoc __ret_0_allowance;
[L8447]              havoc _from_s812;
[L8448]              havoc _to_s812;
[L8449]              havoc _value_s812;
[L8450]              havoc __ret_0_transferFrom;
[L8451]              havoc _spender_s857;
[L8452]              havoc _value_s857;
[L8453]              havoc __ret_0_approve;
[L8454]              havoc _spender_s913;
[L8455]              havoc _addedValue_s913;
[L8456]              havoc __ret_0_increaseApproval;
[L8457]              havoc _spender_s941;
[L8458]              havoc _subtractedValue_s941;
[L8459]              havoc __ret_0_decreaseApproval;
[L8460]              havoc __ret_0_paused;
[L8461]              havoc _maker_s564;
[L8462]              havoc __ret_0_getBlackListStatus;
[L8463]              havoc __ret_0_getOwner;
[L8464]              havoc arg1060_s0;
[L8465]              havoc __ret_0_isBlackListed;
[L8466]              havoc _evilUser_s594;
[L8467]              havoc _clearedUser_s612;
[L8468]              havoc _blackListedUser_s647;
[L8469]              havoc __ret_0_name;
[L8470]              havoc __ret_0_symbol;
[L8471]              havoc __ret_0_decimals;
[L8472]              havoc __ret_0_init_Supply;
[L8473]              havoc __ret_0_upgradedAddress;
[L8474]              havoc __ret_0_deprecated;
[L8475]              havoc _upgradedAddress_s961;
[L8476]              havoc tmpNow;
[L8477]              havoc gas;
[L8478]              assume gas > 4000000 && gas <= 8000000;
[L8479]              tmpNow := now;
[L8480]              havoc now;
[L8481]              assume now > tmpNow;
[L8482]              assume msgsender_MSG != null;
[L8483]              assume DType[msgsender_MSG] != Ownable;
[L8484]              assume DType[msgsender_MSG] != ERC20Basic;
[L8485]              assume DType[msgsender_MSG] != BasicToken;
[L8486]              assume DType[msgsender_MSG] != ERC20;
[L8487]              assume DType[msgsender_MSG] != StandardToken;
[L8488]              assume DType[msgsender_MSG] != Pausable;
[L8489]              assume DType[msgsender_MSG] != UpgradedStandardToken;
[L8490]              assume DType[msgsender_MSG] != BlackList;
[L8491]              assume DType[msgsender_MSG] != AlitaToken;
[L8492]              assume DType[msgsender_MSG] != SafeMath;
[L8493]              Alloc[msgsender_MSG] := true;
[L8494]  COND FALSE  !(choice == 26)
[L8500]  COND FALSE  !(choice == 25)
[L8506]  COND FALSE  !(choice == 24)
[L8512]  COND FALSE  !(choice == 23)
[L8518]  COND TRUE   choice == 22
[L8519]              gas := gas - 21000;
[L8520]  COND TRUE   gas >= 0
[L8521]              assume _value_s754 >= 0 && _value_s754 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L8522]              assume msgvalue_MSG == 0;
[L8523]  CALL        call __ret_0_transfer := transfer~address~uint256_AlitaToken(this, msgsender_MSG, msgvalue_MSG, _to_s754, _value_s754);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == _to_s754 && _value_s754 <= balances_BasicToken[this][msgsender_MSG]) && _value_s754 >= 0) && _value_s754 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BasicToken[this][_to_s754] >= 0) && balances_BasicToken[this][_to_s754] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BasicToken[this][msgsender_MSG] >= 0) && balances_BasicToken[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_AlitaToken0 := true;
[L2]                 call_transfer_AlitaToken0 := false;
[L2]                 revert := revert_hold;
[L2049]              havoc __exception;
[L2050]              revert := false;
[L2051]  COND TRUE   __exception
[L2052]              __tmp__Balance := Balance;
[L2053]              __tmp__DType := DType;
[L2054]              __tmp__Alloc := Alloc;
[L2055]              __tmp__balance_ADDR := balance_ADDR;
[L2056]              __tmp__M_Ref_int := M_Ref_int;
[L2057]              __tmp__sum_balances0 := sum_balances0;
[L2058]              __tmp__alloc_allowed_StandardToken_lvl0 := alloc_allowed_StandardToken_lvl0;
[L2059]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L2060]              __tmp__sum_allowed1 := sum_allowed1;
[L2061]              __tmp__M_Ref_bool := M_Ref_bool;
[L2062]              __tmp__sum_isBlackListed2 := sum_isBlackListed2;
[L2063]              __tmp__Length := Length;
[L2064]              __tmp__now := now;
[L2065]              __tmp__owner_Ownable := owner_Ownable;
[L2066]              __tmp__balances_BasicToken := balances_BasicToken;
[L2067]              __tmp__totalSupply__BasicToken := totalSupply__BasicToken;
[L2068]              __tmp__allowed_StandardToken := allowed_StandardToken;
[L2069]              __tmp__paused_Pausable := paused_Pausable;
[L2070]              __tmp__isBlackListed_BlackList := isBlackListed_BlackList;
[L2071]              __tmp__name_AlitaToken := name_AlitaToken;
[L2072]              __tmp__symbol_AlitaToken := symbol_AlitaToken;
[L2073]              __tmp__decimals_AlitaToken := decimals_AlitaToken;
[L2074]              __tmp__init_Supply_AlitaToken := init_Supply_AlitaToken;
[L2075]              __tmp__upgradedAddress_AlitaToken := upgradedAddress_AlitaToken;
[L2076]              __tmp__deprecated_AlitaToken := deprecated_AlitaToken;
[L2077]  CALL        call __ret_0_ := transfer~address~uint256_AlitaToken__fail(this, msgsender_MSG, msgvalue_MSG, _to_s754, _value_s754);
[L4983]  CALL        call whenNotPaused_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L7440]  COND FALSE  !(!!__tmp__paused_Pausable[this])
[L4983]  RET         call whenNotPaused_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L4984]  COND FALSE  !(revert)
[L4987]  COND FALSE  !(!!__tmp__isBlackListed_BlackList[this][msgsender_MSG])
[L4991]  COND FALSE  !(!!__tmp__isBlackListed_BlackList[this][_to_s754])
[L4995]  COND FALSE  !(__tmp__deprecated_AlitaToken[this])
[L5002]  COND TRUE   __tmp__DType[this] == AlitaToken
[L5003]  CALL        call __var_14 := transfer~address~uint256_BasicToken__fail(this, msgsender_MSG, msgvalue_MSG, _to_s754, _value_s754);
[L4133]              __var_2 := null;
[L4134]  COND TRUE   !(_to_s154 != null)
[L4135]              revert := true;
[L5003]  RET         call __var_14 := transfer~address~uint256_BasicToken__fail(this, msgsender_MSG, msgvalue_MSG, _to_s754, _value_s754);
[L5004]  COND TRUE   revert
[L2077]  RET         call __ret_0_ := transfer~address~uint256_AlitaToken__fail(this, msgsender_MSG, msgvalue_MSG, _to_s754, _value_s754);
[L2078]              assume revert || gas < 0;
[L8523]  RET         call __ret_0_transfer := transfer~address~uint256_AlitaToken(this, msgsender_MSG, msgvalue_MSG, _to_s754, _value_s754);
[L8673]  RET         call CorralChoice_AlitaToken(this);

Loop:
[L8673]  CALL        call CorralChoice_AlitaToken(this);
[L8433]              havoc msgsender_MSG;
[L8434]              havoc msgvalue_MSG;
[L8435]              havoc choice;
[L8436]              havoc __ret_0_owner;
[L8437]              havoc newOwner_s42;
[L8438]              havoc __ret_0_totalSupply;
[L8439]              havoc _owner_s166;
[L8440]              havoc __ret_0_balanceOf;
[L8441]              havoc _to_s754;
[L8442]              havoc _value_s754;
[L8443]              havoc __ret_0_transfer;
[L8444]              havoc _owner_s885;
[L8445]              havoc _spender_s885;
[L8446]              havoc __ret_0_allowance;
[L8447]              havoc _from_s812;
[L8448]              havoc _to_s812;
[L8449]              havoc _value_s812;
[L8450]              havoc __ret_0_transferFrom;
[L8451]              havoc _spender_s857;
[L8452]              havoc _value_s857;
[L8453]              havoc __ret_0_approve;
[L8454]              havoc _spender_s913;
[L8455]              havoc _addedValue_s913;
[L8456]              havoc __ret_0_increaseApproval;
[L8457]              havoc _spender_s941;
[L8458]              havoc _subtractedValue_s941;
[L8459]              havoc __ret_0_decreaseApproval;
[L8460]              havoc __ret_0_paused;
[L8461]              havoc _maker_s564;
[L8462]              havoc __ret_0_getBlackListStatus;
[L8463]              havoc __ret_0_getOwner;
[L8464]              havoc arg1060_s0;
[L8465]              havoc __ret_0_isBlackListed;
[L8466]              havoc _evilUser_s594;
[L8467]              havoc _clearedUser_s612;
[L8468]              havoc _blackListedUser_s647;
[L8469]              havoc __ret_0_name;
[L8470]              havoc __ret_0_symbol;
[L8471]              havoc __ret_0_decimals;
[L8472]              havoc __ret_0_init_Supply;
[L8473]              havoc __ret_0_upgradedAddress;
[L8474]              havoc __ret_0_deprecated;
[L8475]              havoc _upgradedAddress_s961;
[L8476]              havoc tmpNow;
[L8477]              havoc gas;
[L8478]              assume gas > 4000000 && gas <= 8000000;
[L8479]              tmpNow := now;
[L8480]              havoc now;
[L8481]              assume now > tmpNow;
[L8482]              assume msgsender_MSG != null;
[L8483]              assume DType[msgsender_MSG] != Ownable;
[L8484]              assume DType[msgsender_MSG] != ERC20Basic;
[L8485]              assume DType[msgsender_MSG] != BasicToken;
[L8486]              assume DType[msgsender_MSG] != ERC20;
[L8487]              assume DType[msgsender_MSG] != StandardToken;
[L8488]              assume DType[msgsender_MSG] != Pausable;
[L8489]              assume DType[msgsender_MSG] != UpgradedStandardToken;
[L8490]              assume DType[msgsender_MSG] != BlackList;
[L8491]              assume DType[msgsender_MSG] != AlitaToken;
[L8492]              assume DType[msgsender_MSG] != SafeMath;
[L8493]              Alloc[msgsender_MSG] := true;
[L8494]  COND TRUE   choice == 26
[L8495]              gas := gas - 21000;
[L8496]  COND FALSE  !(gas >= 0)
[L8673]  RET         call CorralChoice_AlitaToken(this);

[2020-11-24 23:45:53,237 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 23:45:53,237 INFO  L82        PathProgramCache]: Analyzing trace with hash -553029129, now seen corresponding path program 1 times
[2020-11-24 23:45:53,237 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 23:45:53,248 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 23:45:53,313 INFO  L134       CoverageAnalysis]: Checked inductivity of 381 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 381 trivial. 0 not checked.
[2020-11-24 23:45:53,313 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 23:45:53,313 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [7] imperfect sequences [] total 7
[2020-11-24 23:45:53,314 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 23:45:53,314 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 7 interpolants.
[2020-11-24 23:45:53,314 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=11, Invalid=31, Unknown=0, NotChecked=0, Total=42
[2020-11-24 23:45:53,314 INFO  L87              Difference]: Start difference. First operand 8992 states and 10972 transitions. cyclomatic complexity: 2024 Second operand 7 states.
[2020-11-24 23:45:53,365 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 23:45:53,365 INFO  L93              Difference]: Finished difference Result 9106 states and 11111 transitions.
[2020-11-24 23:45:53,365 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 7 states. 
[2020-11-24 23:45:53,365 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 9106 states and 11111 transitions.
[2020-11-24 23:45:53,387 INFO  L131   ngComponentsAnalysis]: Automaton has 14 accepting balls. 96
[2020-11-24 23:45:53,413 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 9106 states to 9098 states and 11103 transitions.
[2020-11-24 23:45:53,413 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 2691
[2020-11-24 23:45:53,415 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 2691
[2020-11-24 23:45:53,415 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 9098 states and 11103 transitions.
[2020-11-24 23:45:53,422 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 23:45:53,423 INFO  L728         BuchiCegarLoop]: Abstraction has 9098 states and 11103 transitions.
[2020-11-24 23:45:53,426 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 9098 states and 11103 transitions.
[2020-11-24 23:45:53,481 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 9098 to 9000.
[2020-11-24 23:45:53,481 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 9000 states.
[2020-11-24 23:45:53,497 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 9000 states to 9000 states and 10980 transitions.
[2020-11-24 23:45:53,497 INFO  L751         BuchiCegarLoop]: Abstraction has 9000 states and 10980 transitions.
[2020-11-24 23:45:53,497 INFO  L631         BuchiCegarLoop]: Abstraction has 9000 states and 10980 transitions.
[2020-11-24 23:45:53,497 INFO  L445         BuchiCegarLoop]: ======== Iteration 10============
[2020-11-24 23:45:53,497 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 9000 states and 10980 transitions.
[2020-11-24 23:45:53,507 INFO  L131   ngComponentsAnalysis]: Automaton has 14 accepting balls. 96
[2020-11-24 23:45:53,507 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 23:45:53,507 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 23:45:53,508 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [8, 8, 8, 8, 8, 8, 8, 8, 8, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 23:45:53,509 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 success_transfer_AlitaToken0 := false;
[L2]                 call_transfer_AlitaToken0 := false;
[L2]     CALL        call main();
[L8663]              assume null == 0;
[L8664]  CALL        call this := FreshRefGenerator__success();
[L3958]              havoc newRef;
[L3959]              assume Alloc[newRef] == false;
[L3960]              Alloc[newRef] := true;
[L3961]              assume newRef != null;
[L8664]  RET         call this := FreshRefGenerator__success();
[L8665]              assume now >= 0;
[L8666]              assume DType[this] == AlitaToken;
[L8667]              assume msgvalue_MSG == 0;
[L8668]              gas := gas - 53000;
[L8669]  CALL        call AlitaToken_AlitaToken(this, msgsender_MSG, msgvalue_MSG);
[L1981]              havoc __exception;
[L1982]              revert := false;
[L1983]  COND FALSE  !(__exception)
[L2012]  CALL        call AlitaToken_AlitaToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4942]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3994]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3977]              assume msgsender_MSG != null;
[L3978]              Balance[this] := 0;
[L3979]              owner_Ownable[this] := null;
[L3981]              owner_Ownable[this] := msgsender_MSG;
[L3994]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3995]  COND FALSE  !(revert)
[L4942]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4943]  COND FALSE  !(revert)
[L4946]  CALL        call Pausable_Pausable__success(this, msgsender_MSG, msgvalue_MSG);
[L4531]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3994]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3977]              assume msgsender_MSG != null;
[L3978]              Balance[this] := 0;
[L3979]              owner_Ownable[this] := null;
[L3981]              owner_Ownable[this] := msgsender_MSG;
[L3994]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3995]  COND FALSE  !(revert)
[L4531]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4532]  COND FALSE  !(revert)
[L4535]  CALL        call Pausable_Pausable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4511]              assume msgsender_MSG != null;
[L4512]              Balance[this] := 0;
[L4513]              paused_Pausable[this] := false;
[L4535]  RET         call Pausable_Pausable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4536]  COND FALSE  !(revert)
[L4946]  RET         call Pausable_Pausable__success(this, msgsender_MSG, msgvalue_MSG);
[L4947]  COND FALSE  !(revert)
[L4950]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4064]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4049]              assume msgsender_MSG != null;
[L4050]              Balance[this] := 0;
[L4064]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  COND FALSE  !(revert)
[L4950]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4951]  COND FALSE  !(revert)
[L4954]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4235]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4064]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4049]              assume msgsender_MSG != null;
[L4050]              Balance[this] := 0;
[L4064]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  COND FALSE  !(revert)
[L4235]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4236]  COND FALSE  !(revert)
[L4239]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4216]              assume msgsender_MSG != null;
[L4217]              Balance[this] := 0;
[L4239]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4240]  COND FALSE  !(revert)
[L4954]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4955]  COND FALSE  !(revert)
[L4958]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4106]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4064]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4049]              assume msgsender_MSG != null;
[L4050]              Balance[this] := 0;
[L4064]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  COND FALSE  !(revert)
[L4106]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4107]  COND FALSE  !(revert)
[L4110]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4084]              assume msgsender_MSG != null;
[L4085]              Balance[this] := 0;
[L4086]              balances_BasicToken[this] := zeroRefintArr();
[L4087]              sum_balances0[this] := 0;
[L4088]              totalSupply__BasicToken[this] := 0;
[L4110]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4111]  COND FALSE  !(revert)
[L4958]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4959]  COND FALSE  !(revert)
[L4962]  CALL        call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4287]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4064]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4049]              assume msgsender_MSG != null;
[L4050]              Balance[this] := 0;
[L4064]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  COND FALSE  !(revert)
[L4287]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4288]  COND FALSE  !(revert)
[L4291]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4235]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4064]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4049]              assume msgsender_MSG != null;
[L4050]              Balance[this] := 0;
[L4064]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  COND FALSE  !(revert)
[L4235]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4236]  COND FALSE  !(revert)
[L4239]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4216]              assume msgsender_MSG != null;
[L4217]              Balance[this] := 0;
[L4239]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4240]  COND FALSE  !(revert)
[L4291]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4292]  COND FALSE  !(revert)
[L4295]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4106]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4064]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4049]              assume msgsender_MSG != null;
[L4050]              Balance[this] := 0;
[L4064]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  COND FALSE  !(revert)
[L4106]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4107]  COND FALSE  !(revert)
[L4110]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4084]              assume msgsender_MSG != null;
[L4085]              Balance[this] := 0;
[L4086]              balances_BasicToken[this] := zeroRefintArr();
[L4087]              sum_balances0[this] := 0;
[L4088]              totalSupply__BasicToken[this] := 0;
[L4110]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4111]  COND FALSE  !(revert)
[L4295]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4296]  COND FALSE  !(revert)
[L4299]  CALL        call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4258]              assume msgsender_MSG != null;
[L4259]              Balance[this] := 0;
[L4260]              allowed_StandardToken[this] := zeroRefRefintArr();
[L4261]              sum_allowed1[this] := 0;
[L4299]  RET         call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4300]  COND FALSE  !(revert)
[L4962]  RET         call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4963]  COND FALSE  !(revert)
[L4966]  CALL        call BlackList_BlackList__success(this, msgsender_MSG, msgvalue_MSG);
[L4711]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3994]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3977]              assume msgsender_MSG != null;
[L3978]              Balance[this] := 0;
[L3979]              owner_Ownable[this] := null;
[L3981]              owner_Ownable[this] := msgsender_MSG;
[L3994]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3995]  COND FALSE  !(revert)
[L4711]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4712]  COND FALSE  !(revert)
[L4715]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4064]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4049]              assume msgsender_MSG != null;
[L4050]              Balance[this] := 0;
[L4064]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  COND FALSE  !(revert)
[L4715]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4716]  COND FALSE  !(revert)
[L4719]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4106]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4064]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4049]              assume msgsender_MSG != null;
[L4050]              Balance[this] := 0;
[L4064]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  COND FALSE  !(revert)
[L4106]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4107]  COND FALSE  !(revert)
[L4110]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4084]              assume msgsender_MSG != null;
[L4085]              Balance[this] := 0;
[L4086]              balances_BasicToken[this] := zeroRefintArr();
[L4087]              sum_balances0[this] := 0;
[L4088]              totalSupply__BasicToken[this] := 0;
[L4110]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4111]  COND FALSE  !(revert)
[L4719]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4720]  COND FALSE  !(revert)
[L4723]  CALL        call BlackList_BlackList_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4683]              assume msgsender_MSG != null;
[L4684]              Balance[this] := 0;
[L4685]              isBlackListed_BlackList[this] := zeroRefboolArr();
[L4723]  RET         call BlackList_BlackList_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4724]  COND FALSE  !(revert)
[L4966]  RET         call BlackList_BlackList__success(this, msgsender_MSG, msgvalue_MSG);
[L4967]  COND FALSE  !(revert)
[L4970]  CALL        call AlitaToken_AlitaToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4888]              assume msgsender_MSG != null;
[L4889]              Balance[this] := 0;
[L4890]              name_AlitaToken[this] := -1110093910;
[L4891]              symbol_AlitaToken[this] := 1234648092;
[L4892]              decimals_AlitaToken[this] := 18;
[L4893]              init_Supply_AlitaToken[this] := 1000000000 * (1000000000000000000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L4894]              upgradedAddress_AlitaToken[this] := null;
[L4895]              deprecated_AlitaToken[this] := false;
[L4897]              totalSupply__BasicToken[this] := init_Supply_AlitaToken[this];
[L4898]              sum_balances0[this] := sum_balances0[this] - balances_BasicToken[this][msgsender_MSG];
[L4899]              balances_BasicToken[this][msgsender_MSG] := totalSupply__BasicToken[this];
[L4900]              sum_balances0[this] := sum_balances0[this] + balances_BasicToken[this][msgsender_MSG];
[L4901]              deprecated_AlitaToken[this] := false;
[L4970]  RET         call AlitaToken_AlitaToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4971]  COND FALSE  !(revert)
[L2012]  RET         call AlitaToken_AlitaToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2013]              assume !revert && gas >= 0;
[L8669]  RET         call AlitaToken_AlitaToken(this, msgsender_MSG, msgvalue_MSG);
[L8670]              assume !revert && gas >= 0;
[L8673]  CALL        call CorralChoice_AlitaToken(this);
[L8433]              havoc msgsender_MSG;
[L8434]              havoc msgvalue_MSG;
[L8435]              havoc choice;
[L8436]              havoc __ret_0_owner;
[L8437]              havoc newOwner_s42;
[L8438]              havoc __ret_0_totalSupply;
[L8439]              havoc _owner_s166;
[L8440]              havoc __ret_0_balanceOf;
[L8441]              havoc _to_s754;
[L8442]              havoc _value_s754;
[L8443]              havoc __ret_0_transfer;
[L8444]              havoc _owner_s885;
[L8445]              havoc _spender_s885;
[L8446]              havoc __ret_0_allowance;
[L8447]              havoc _from_s812;
[L8448]              havoc _to_s812;
[L8449]              havoc _value_s812;
[L8450]              havoc __ret_0_transferFrom;
[L8451]              havoc _spender_s857;
[L8452]              havoc _value_s857;
[L8453]              havoc __ret_0_approve;
[L8454]              havoc _spender_s913;
[L8455]              havoc _addedValue_s913;
[L8456]              havoc __ret_0_increaseApproval;
[L8457]              havoc _spender_s941;
[L8458]              havoc _subtractedValue_s941;
[L8459]              havoc __ret_0_decreaseApproval;
[L8460]              havoc __ret_0_paused;
[L8461]              havoc _maker_s564;
[L8462]              havoc __ret_0_getBlackListStatus;
[L8463]              havoc __ret_0_getOwner;
[L8464]              havoc arg1060_s0;
[L8465]              havoc __ret_0_isBlackListed;
[L8466]              havoc _evilUser_s594;
[L8467]              havoc _clearedUser_s612;
[L8468]              havoc _blackListedUser_s647;
[L8469]              havoc __ret_0_name;
[L8470]              havoc __ret_0_symbol;
[L8471]              havoc __ret_0_decimals;
[L8472]              havoc __ret_0_init_Supply;
[L8473]              havoc __ret_0_upgradedAddress;
[L8474]              havoc __ret_0_deprecated;
[L8475]              havoc _upgradedAddress_s961;
[L8476]              havoc tmpNow;
[L8477]              havoc gas;
[L8478]              assume gas > 4000000 && gas <= 8000000;
[L8479]              tmpNow := now;
[L8480]              havoc now;
[L8481]              assume now > tmpNow;
[L8482]              assume msgsender_MSG != null;
[L8483]              assume DType[msgsender_MSG] != Ownable;
[L8484]              assume DType[msgsender_MSG] != ERC20Basic;
[L8485]              assume DType[msgsender_MSG] != BasicToken;
[L8486]              assume DType[msgsender_MSG] != ERC20;
[L8487]              assume DType[msgsender_MSG] != StandardToken;
[L8488]              assume DType[msgsender_MSG] != Pausable;
[L8489]              assume DType[msgsender_MSG] != UpgradedStandardToken;
[L8490]              assume DType[msgsender_MSG] != BlackList;
[L8491]              assume DType[msgsender_MSG] != AlitaToken;
[L8492]              assume DType[msgsender_MSG] != SafeMath;
[L8493]              Alloc[msgsender_MSG] := true;
[L8494]  COND FALSE  !(choice == 26)
[L8500]  COND FALSE  !(choice == 25)
[L8506]  COND FALSE  !(choice == 24)
[L8512]  COND FALSE  !(choice == 23)
[L8518]  COND TRUE   choice == 22
[L8519]              gas := gas - 21000;
[L8520]  COND TRUE   gas >= 0
[L8521]              assume _value_s754 >= 0 && _value_s754 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L8522]              assume msgvalue_MSG == 0;
[L8523]  CALL        call __ret_0_transfer := transfer~address~uint256_AlitaToken(this, msgsender_MSG, msgvalue_MSG, _to_s754, _value_s754);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == _to_s754 && _value_s754 <= balances_BasicToken[this][msgsender_MSG]) && _value_s754 >= 0) && _value_s754 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BasicToken[this][_to_s754] >= 0) && balances_BasicToken[this][_to_s754] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BasicToken[this][msgsender_MSG] >= 0) && balances_BasicToken[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_AlitaToken0 := true;
[L2]                 call_transfer_AlitaToken0 := false;
[L2]                 revert := revert_hold;
[L2049]              havoc __exception;
[L2050]              revert := false;
[L2051]  COND TRUE   __exception
[L2052]              __tmp__Balance := Balance;
[L2053]              __tmp__DType := DType;
[L2054]              __tmp__Alloc := Alloc;
[L2055]              __tmp__balance_ADDR := balance_ADDR;
[L2056]              __tmp__M_Ref_int := M_Ref_int;
[L2057]              __tmp__sum_balances0 := sum_balances0;
[L2058]              __tmp__alloc_allowed_StandardToken_lvl0 := alloc_allowed_StandardToken_lvl0;
[L2059]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L2060]              __tmp__sum_allowed1 := sum_allowed1;
[L2061]              __tmp__M_Ref_bool := M_Ref_bool;
[L2062]              __tmp__sum_isBlackListed2 := sum_isBlackListed2;
[L2063]              __tmp__Length := Length;
[L2064]              __tmp__now := now;
[L2065]              __tmp__owner_Ownable := owner_Ownable;
[L2066]              __tmp__balances_BasicToken := balances_BasicToken;
[L2067]              __tmp__totalSupply__BasicToken := totalSupply__BasicToken;
[L2068]              __tmp__allowed_StandardToken := allowed_StandardToken;
[L2069]              __tmp__paused_Pausable := paused_Pausable;
[L2070]              __tmp__isBlackListed_BlackList := isBlackListed_BlackList;
[L2071]              __tmp__name_AlitaToken := name_AlitaToken;
[L2072]              __tmp__symbol_AlitaToken := symbol_AlitaToken;
[L2073]              __tmp__decimals_AlitaToken := decimals_AlitaToken;
[L2074]              __tmp__init_Supply_AlitaToken := init_Supply_AlitaToken;
[L2075]              __tmp__upgradedAddress_AlitaToken := upgradedAddress_AlitaToken;
[L2076]              __tmp__deprecated_AlitaToken := deprecated_AlitaToken;
[L2077]  CALL        call __ret_0_ := transfer~address~uint256_AlitaToken__fail(this, msgsender_MSG, msgvalue_MSG, _to_s754, _value_s754);
[L4983]  CALL        call whenNotPaused_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L7440]  COND FALSE  !(!!__tmp__paused_Pausable[this])
[L4983]  RET         call whenNotPaused_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L4984]  COND FALSE  !(revert)
[L4987]  COND FALSE  !(!!__tmp__isBlackListed_BlackList[this][msgsender_MSG])
[L4991]  COND FALSE  !(!!__tmp__isBlackListed_BlackList[this][_to_s754])
[L4995]  COND FALSE  !(__tmp__deprecated_AlitaToken[this])
[L5002]  COND TRUE   __tmp__DType[this] == AlitaToken
[L5003]  CALL        call __var_14 := transfer~address~uint256_BasicToken__fail(this, msgsender_MSG, msgvalue_MSG, _to_s754, _value_s754);
[L4133]              __var_2 := null;
[L4134]  COND FALSE  !(!(_to_s154 != null))
[L4138]  COND TRUE   !(_value_s154 <= __tmp__balances_BasicToken[this][msgsender_MSG])
[L4139]              revert := true;
[L5003]  RET         call __var_14 := transfer~address~uint256_BasicToken__fail(this, msgsender_MSG, msgvalue_MSG, _to_s754, _value_s754);
[L5004]  COND TRUE   revert
[L2077]  RET         call __ret_0_ := transfer~address~uint256_AlitaToken__fail(this, msgsender_MSG, msgvalue_MSG, _to_s754, _value_s754);
[L2078]              assume revert || gas < 0;
[L8523]  RET         call __ret_0_transfer := transfer~address~uint256_AlitaToken(this, msgsender_MSG, msgvalue_MSG, _to_s754, _value_s754);
[L8673]  RET         call CorralChoice_AlitaToken(this);

Loop:
[L8673]  CALL        call CorralChoice_AlitaToken(this);
[L8433]              havoc msgsender_MSG;
[L8434]              havoc msgvalue_MSG;
[L8435]              havoc choice;
[L8436]              havoc __ret_0_owner;
[L8437]              havoc newOwner_s42;
[L8438]              havoc __ret_0_totalSupply;
[L8439]              havoc _owner_s166;
[L8440]              havoc __ret_0_balanceOf;
[L8441]              havoc _to_s754;
[L8442]              havoc _value_s754;
[L8443]              havoc __ret_0_transfer;
[L8444]              havoc _owner_s885;
[L8445]              havoc _spender_s885;
[L8446]              havoc __ret_0_allowance;
[L8447]              havoc _from_s812;
[L8448]              havoc _to_s812;
[L8449]              havoc _value_s812;
[L8450]              havoc __ret_0_transferFrom;
[L8451]              havoc _spender_s857;
[L8452]              havoc _value_s857;
[L8453]              havoc __ret_0_approve;
[L8454]              havoc _spender_s913;
[L8455]              havoc _addedValue_s913;
[L8456]              havoc __ret_0_increaseApproval;
[L8457]              havoc _spender_s941;
[L8458]              havoc _subtractedValue_s941;
[L8459]              havoc __ret_0_decreaseApproval;
[L8460]              havoc __ret_0_paused;
[L8461]              havoc _maker_s564;
[L8462]              havoc __ret_0_getBlackListStatus;
[L8463]              havoc __ret_0_getOwner;
[L8464]              havoc arg1060_s0;
[L8465]              havoc __ret_0_isBlackListed;
[L8466]              havoc _evilUser_s594;
[L8467]              havoc _clearedUser_s612;
[L8468]              havoc _blackListedUser_s647;
[L8469]              havoc __ret_0_name;
[L8470]              havoc __ret_0_symbol;
[L8471]              havoc __ret_0_decimals;
[L8472]              havoc __ret_0_init_Supply;
[L8473]              havoc __ret_0_upgradedAddress;
[L8474]              havoc __ret_0_deprecated;
[L8475]              havoc _upgradedAddress_s961;
[L8476]              havoc tmpNow;
[L8477]              havoc gas;
[L8478]              assume gas > 4000000 && gas <= 8000000;
[L8479]              tmpNow := now;
[L8480]              havoc now;
[L8481]              assume now > tmpNow;
[L8482]              assume msgsender_MSG != null;
[L8483]              assume DType[msgsender_MSG] != Ownable;
[L8484]              assume DType[msgsender_MSG] != ERC20Basic;
[L8485]              assume DType[msgsender_MSG] != BasicToken;
[L8486]              assume DType[msgsender_MSG] != ERC20;
[L8487]              assume DType[msgsender_MSG] != StandardToken;
[L8488]              assume DType[msgsender_MSG] != Pausable;
[L8489]              assume DType[msgsender_MSG] != UpgradedStandardToken;
[L8490]              assume DType[msgsender_MSG] != BlackList;
[L8491]              assume DType[msgsender_MSG] != AlitaToken;
[L8492]              assume DType[msgsender_MSG] != SafeMath;
[L8493]              Alloc[msgsender_MSG] := true;
[L8494]  COND FALSE  !(choice == 26)
[L8500]  COND FALSE  !(choice == 25)
[L8506]  COND FALSE  !(choice == 24)
[L8512]  COND FALSE  !(choice == 23)
[L8518]  COND TRUE   choice == 22
[L8519]              gas := gas - 21000;
[L8520]  COND TRUE   gas >= 0
[L8521]              assume _value_s754 >= 0 && _value_s754 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L8522]              assume msgvalue_MSG == 0;
[L8523]  CALL        call __ret_0_transfer := transfer~address~uint256_AlitaToken(this, msgsender_MSG, msgvalue_MSG, _to_s754, _value_s754);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == _to_s754 && _value_s754 <= balances_BasicToken[this][msgsender_MSG]) && _value_s754 >= 0) && _value_s754 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BasicToken[this][_to_s754] >= 0) && balances_BasicToken[this][_to_s754] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BasicToken[this][msgsender_MSG] >= 0) && balances_BasicToken[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_AlitaToken0 := true;
[L2]                 call_transfer_AlitaToken0 := false;
[L2]                 revert := revert_hold;
[L2049]              havoc __exception;
[L2050]              revert := false;
[L2051]  COND TRUE   __exception
[L2052]              __tmp__Balance := Balance;
[L2053]              __tmp__DType := DType;
[L2054]              __tmp__Alloc := Alloc;
[L2055]              __tmp__balance_ADDR := balance_ADDR;
[L2056]              __tmp__M_Ref_int := M_Ref_int;
[L2057]              __tmp__sum_balances0 := sum_balances0;
[L2058]              __tmp__alloc_allowed_StandardToken_lvl0 := alloc_allowed_StandardToken_lvl0;
[L2059]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L2060]              __tmp__sum_allowed1 := sum_allowed1;
[L2061]              __tmp__M_Ref_bool := M_Ref_bool;
[L2062]              __tmp__sum_isBlackListed2 := sum_isBlackListed2;
[L2063]              __tmp__Length := Length;
[L2064]              __tmp__now := now;
[L2065]              __tmp__owner_Ownable := owner_Ownable;
[L2066]              __tmp__balances_BasicToken := balances_BasicToken;
[L2067]              __tmp__totalSupply__BasicToken := totalSupply__BasicToken;
[L2068]              __tmp__allowed_StandardToken := allowed_StandardToken;
[L2069]              __tmp__paused_Pausable := paused_Pausable;
[L2070]              __tmp__isBlackListed_BlackList := isBlackListed_BlackList;
[L2071]              __tmp__name_AlitaToken := name_AlitaToken;
[L2072]              __tmp__symbol_AlitaToken := symbol_AlitaToken;
[L2073]              __tmp__decimals_AlitaToken := decimals_AlitaToken;
[L2074]              __tmp__init_Supply_AlitaToken := init_Supply_AlitaToken;
[L2075]              __tmp__upgradedAddress_AlitaToken := upgradedAddress_AlitaToken;
[L2076]              __tmp__deprecated_AlitaToken := deprecated_AlitaToken;
[L2077]  CALL        call __ret_0_ := transfer~address~uint256_AlitaToken__fail(this, msgsender_MSG, msgvalue_MSG, _to_s754, _value_s754);
[L4983]  CALL        call whenNotPaused_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L7440]  COND FALSE  !(!!__tmp__paused_Pausable[this])
[L4983]  RET         call whenNotPaused_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L4984]  COND FALSE  !(revert)
[L4987]  COND FALSE  !(!!__tmp__isBlackListed_BlackList[this][msgsender_MSG])
[L4991]  COND FALSE  !(!!__tmp__isBlackListed_BlackList[this][_to_s754])
[L4995]  COND FALSE  !(__tmp__deprecated_AlitaToken[this])
[L5002]  COND TRUE   __tmp__DType[this] == AlitaToken
[L5003]  CALL        call __var_14 := transfer~address~uint256_BasicToken__fail(this, msgsender_MSG, msgvalue_MSG, _to_s754, _value_s754);
[L4133]              __var_2 := null;
[L4134]  COND FALSE  !(!(_to_s154 != null))
[L4138]  COND TRUE   !(_value_s154 <= __tmp__balances_BasicToken[this][msgsender_MSG])
[L4139]              revert := true;
[L5003]  RET         call __var_14 := transfer~address~uint256_BasicToken__fail(this, msgsender_MSG, msgvalue_MSG, _to_s754, _value_s754);
[L5004]  COND TRUE   revert
[L2077]  RET         call __ret_0_ := transfer~address~uint256_AlitaToken__fail(this, msgsender_MSG, msgvalue_MSG, _to_s754, _value_s754);
[L2078]              assume revert || gas < 0;
[L8523]  RET         call __ret_0_transfer := transfer~address~uint256_AlitaToken(this, msgsender_MSG, msgvalue_MSG, _to_s754, _value_s754);
[L8673]  RET         call CorralChoice_AlitaToken(this);

[2020-11-24 23:45:53,512 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 23:45:53,512 INFO  L82        PathProgramCache]: Analyzing trace with hash 1050137501, now seen corresponding path program 1 times
[2020-11-24 23:45:53,513 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 23:45:53,523 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 23:45:53,619 INFO  L134       CoverageAnalysis]: Checked inductivity of 381 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 381 trivial. 0 not checked.
[2020-11-24 23:45:53,619 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 23:45:53,619 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [7] imperfect sequences [] total 7
[2020-11-24 23:45:53,620 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 23:45:53,620 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 7 interpolants.
[2020-11-24 23:45:53,620 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=11, Invalid=31, Unknown=0, NotChecked=0, Total=42
[2020-11-24 23:45:53,620 INFO  L87              Difference]: Start difference. First operand 9000 states and 10980 transitions. cyclomatic complexity: 2024 Second operand 7 states.
[2020-11-24 23:45:54,385 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 23:45:54,385 INFO  L93              Difference]: Finished difference Result 9032 states and 11092 transitions.
[2020-11-24 23:45:54,385 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 7 states. 
[2020-11-24 23:45:54,385 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 9032 states and 11092 transitions.
[2020-11-24 23:45:54,409 INFO  L131   ngComponentsAnalysis]: Automaton has 16 accepting balls. 104
[2020-11-24 23:45:54,437 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 9032 states to 9032 states and 11092 transitions.
[2020-11-24 23:45:54,437 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 2700
[2020-11-24 23:45:54,439 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 2700
[2020-11-24 23:45:54,439 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 9032 states and 11092 transitions.
[2020-11-24 23:45:54,447 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 23:45:54,447 INFO  L728         BuchiCegarLoop]: Abstraction has 9032 states and 11092 transitions.
[2020-11-24 23:45:54,450 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 9032 states and 11092 transitions.
[2020-11-24 23:45:54,505 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 9032 to 8834.
[2020-11-24 23:45:54,505 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 8834 states.
[2020-11-24 23:45:54,519 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 8834 states to 8834 states and 10667 transitions.
[2020-11-24 23:45:54,519 INFO  L751         BuchiCegarLoop]: Abstraction has 8834 states and 10667 transitions.
[2020-11-24 23:45:54,519 INFO  L631         BuchiCegarLoop]: Abstraction has 8834 states and 10667 transitions.
[2020-11-24 23:45:54,519 INFO  L445         BuchiCegarLoop]: ======== Iteration 11============
[2020-11-24 23:45:54,519 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 8834 states and 10667 transitions.
[2020-11-24 23:45:54,529 INFO  L131   ngComponentsAnalysis]: Automaton has 14 accepting balls. 96
[2020-11-24 23:45:54,530 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 23:45:54,530 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 23:45:54,531 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [8, 8, 8, 8, 8, 8, 8, 8, 8, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 23:45:54,531 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 success_transfer_AlitaToken0 := false;
[L2]                 call_transfer_AlitaToken0 := false;
[L2]     CALL        call main();
[L8663]              assume null == 0;
[L8664]  CALL        call this := FreshRefGenerator__success();
[L3958]              havoc newRef;
[L3959]              assume Alloc[newRef] == false;
[L3960]              Alloc[newRef] := true;
[L3961]              assume newRef != null;
[L8664]  RET         call this := FreshRefGenerator__success();
[L8665]              assume now >= 0;
[L8666]              assume DType[this] == AlitaToken;
[L8667]              assume msgvalue_MSG == 0;
[L8668]              gas := gas - 53000;
[L8669]  CALL        call AlitaToken_AlitaToken(this, msgsender_MSG, msgvalue_MSG);
[L1981]              havoc __exception;
[L1982]              revert := false;
[L1983]  COND FALSE  !(__exception)
[L2012]  CALL        call AlitaToken_AlitaToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4942]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3994]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3977]              assume msgsender_MSG != null;
[L3978]              Balance[this] := 0;
[L3979]              owner_Ownable[this] := null;
[L3981]              owner_Ownable[this] := msgsender_MSG;
[L3994]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3995]  COND FALSE  !(revert)
[L4942]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4943]  COND FALSE  !(revert)
[L4946]  CALL        call Pausable_Pausable__success(this, msgsender_MSG, msgvalue_MSG);
[L4531]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3994]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3977]              assume msgsender_MSG != null;
[L3978]              Balance[this] := 0;
[L3979]              owner_Ownable[this] := null;
[L3981]              owner_Ownable[this] := msgsender_MSG;
[L3994]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3995]  COND FALSE  !(revert)
[L4531]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4532]  COND FALSE  !(revert)
[L4535]  CALL        call Pausable_Pausable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4511]              assume msgsender_MSG != null;
[L4512]              Balance[this] := 0;
[L4513]              paused_Pausable[this] := false;
[L4535]  RET         call Pausable_Pausable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4536]  COND FALSE  !(revert)
[L4946]  RET         call Pausable_Pausable__success(this, msgsender_MSG, msgvalue_MSG);
[L4947]  COND FALSE  !(revert)
[L4950]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4064]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4049]              assume msgsender_MSG != null;
[L4050]              Balance[this] := 0;
[L4064]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  COND FALSE  !(revert)
[L4950]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4951]  COND FALSE  !(revert)
[L4954]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4235]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4064]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4049]              assume msgsender_MSG != null;
[L4050]              Balance[this] := 0;
[L4064]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  COND FALSE  !(revert)
[L4235]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4236]  COND FALSE  !(revert)
[L4239]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4216]              assume msgsender_MSG != null;
[L4217]              Balance[this] := 0;
[L4239]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4240]  COND FALSE  !(revert)
[L4954]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4955]  COND FALSE  !(revert)
[L4958]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4106]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4064]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4049]              assume msgsender_MSG != null;
[L4050]              Balance[this] := 0;
[L4064]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  COND FALSE  !(revert)
[L4106]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4107]  COND FALSE  !(revert)
[L4110]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4084]              assume msgsender_MSG != null;
[L4085]              Balance[this] := 0;
[L4086]              balances_BasicToken[this] := zeroRefintArr();
[L4087]              sum_balances0[this] := 0;
[L4088]              totalSupply__BasicToken[this] := 0;
[L4110]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4111]  COND FALSE  !(revert)
[L4958]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4959]  COND FALSE  !(revert)
[L4962]  CALL        call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4287]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4064]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4049]              assume msgsender_MSG != null;
[L4050]              Balance[this] := 0;
[L4064]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  COND FALSE  !(revert)
[L4287]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4288]  COND FALSE  !(revert)
[L4291]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4235]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4064]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4049]              assume msgsender_MSG != null;
[L4050]              Balance[this] := 0;
[L4064]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  COND FALSE  !(revert)
[L4235]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4236]  COND FALSE  !(revert)
[L4239]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4216]              assume msgsender_MSG != null;
[L4217]              Balance[this] := 0;
[L4239]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4240]  COND FALSE  !(revert)
[L4291]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4292]  COND FALSE  !(revert)
[L4295]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4106]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4064]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4049]              assume msgsender_MSG != null;
[L4050]              Balance[this] := 0;
[L4064]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  COND FALSE  !(revert)
[L4106]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4107]  COND FALSE  !(revert)
[L4110]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4084]              assume msgsender_MSG != null;
[L4085]              Balance[this] := 0;
[L4086]              balances_BasicToken[this] := zeroRefintArr();
[L4087]              sum_balances0[this] := 0;
[L4088]              totalSupply__BasicToken[this] := 0;
[L4110]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4111]  COND FALSE  !(revert)
[L4295]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4296]  COND FALSE  !(revert)
[L4299]  CALL        call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4258]              assume msgsender_MSG != null;
[L4259]              Balance[this] := 0;
[L4260]              allowed_StandardToken[this] := zeroRefRefintArr();
[L4261]              sum_allowed1[this] := 0;
[L4299]  RET         call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4300]  COND FALSE  !(revert)
[L4962]  RET         call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4963]  COND FALSE  !(revert)
[L4966]  CALL        call BlackList_BlackList__success(this, msgsender_MSG, msgvalue_MSG);
[L4711]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3994]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3977]              assume msgsender_MSG != null;
[L3978]              Balance[this] := 0;
[L3979]              owner_Ownable[this] := null;
[L3981]              owner_Ownable[this] := msgsender_MSG;
[L3994]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3995]  COND FALSE  !(revert)
[L4711]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4712]  COND FALSE  !(revert)
[L4715]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4064]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4049]              assume msgsender_MSG != null;
[L4050]              Balance[this] := 0;
[L4064]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  COND FALSE  !(revert)
[L4715]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4716]  COND FALSE  !(revert)
[L4719]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4106]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4064]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4049]              assume msgsender_MSG != null;
[L4050]              Balance[this] := 0;
[L4064]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  COND FALSE  !(revert)
[L4106]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4107]  COND FALSE  !(revert)
[L4110]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4084]              assume msgsender_MSG != null;
[L4085]              Balance[this] := 0;
[L4086]              balances_BasicToken[this] := zeroRefintArr();
[L4087]              sum_balances0[this] := 0;
[L4088]              totalSupply__BasicToken[this] := 0;
[L4110]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4111]  COND FALSE  !(revert)
[L4719]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4720]  COND FALSE  !(revert)
[L4723]  CALL        call BlackList_BlackList_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4683]              assume msgsender_MSG != null;
[L4684]              Balance[this] := 0;
[L4685]              isBlackListed_BlackList[this] := zeroRefboolArr();
[L4723]  RET         call BlackList_BlackList_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4724]  COND FALSE  !(revert)
[L4966]  RET         call BlackList_BlackList__success(this, msgsender_MSG, msgvalue_MSG);
[L4967]  COND FALSE  !(revert)
[L4970]  CALL        call AlitaToken_AlitaToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4888]              assume msgsender_MSG != null;
[L4889]              Balance[this] := 0;
[L4890]              name_AlitaToken[this] := -1110093910;
[L4891]              symbol_AlitaToken[this] := 1234648092;
[L4892]              decimals_AlitaToken[this] := 18;
[L4893]              init_Supply_AlitaToken[this] := 1000000000 * (1000000000000000000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L4894]              upgradedAddress_AlitaToken[this] := null;
[L4895]              deprecated_AlitaToken[this] := false;
[L4897]              totalSupply__BasicToken[this] := init_Supply_AlitaToken[this];
[L4898]              sum_balances0[this] := sum_balances0[this] - balances_BasicToken[this][msgsender_MSG];
[L4899]              balances_BasicToken[this][msgsender_MSG] := totalSupply__BasicToken[this];
[L4900]              sum_balances0[this] := sum_balances0[this] + balances_BasicToken[this][msgsender_MSG];
[L4901]              deprecated_AlitaToken[this] := false;
[L4970]  RET         call AlitaToken_AlitaToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4971]  COND FALSE  !(revert)
[L2012]  RET         call AlitaToken_AlitaToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2013]              assume !revert && gas >= 0;
[L8669]  RET         call AlitaToken_AlitaToken(this, msgsender_MSG, msgvalue_MSG);
[L8670]              assume !revert && gas >= 0;
[L8673]  CALL        call CorralChoice_AlitaToken(this);
[L8433]              havoc msgsender_MSG;
[L8434]              havoc msgvalue_MSG;
[L8435]              havoc choice;
[L8436]              havoc __ret_0_owner;
[L8437]              havoc newOwner_s42;
[L8438]              havoc __ret_0_totalSupply;
[L8439]              havoc _owner_s166;
[L8440]              havoc __ret_0_balanceOf;
[L8441]              havoc _to_s754;
[L8442]              havoc _value_s754;
[L8443]              havoc __ret_0_transfer;
[L8444]              havoc _owner_s885;
[L8445]              havoc _spender_s885;
[L8446]              havoc __ret_0_allowance;
[L8447]              havoc _from_s812;
[L8448]              havoc _to_s812;
[L8449]              havoc _value_s812;
[L8450]              havoc __ret_0_transferFrom;
[L8451]              havoc _spender_s857;
[L8452]              havoc _value_s857;
[L8453]              havoc __ret_0_approve;
[L8454]              havoc _spender_s913;
[L8455]              havoc _addedValue_s913;
[L8456]              havoc __ret_0_increaseApproval;
[L8457]              havoc _spender_s941;
[L8458]              havoc _subtractedValue_s941;
[L8459]              havoc __ret_0_decreaseApproval;
[L8460]              havoc __ret_0_paused;
[L8461]              havoc _maker_s564;
[L8462]              havoc __ret_0_getBlackListStatus;
[L8463]              havoc __ret_0_getOwner;
[L8464]              havoc arg1060_s0;
[L8465]              havoc __ret_0_isBlackListed;
[L8466]              havoc _evilUser_s594;
[L8467]              havoc _clearedUser_s612;
[L8468]              havoc _blackListedUser_s647;
[L8469]              havoc __ret_0_name;
[L8470]              havoc __ret_0_symbol;
[L8471]              havoc __ret_0_decimals;
[L8472]              havoc __ret_0_init_Supply;
[L8473]              havoc __ret_0_upgradedAddress;
[L8474]              havoc __ret_0_deprecated;
[L8475]              havoc _upgradedAddress_s961;
[L8476]              havoc tmpNow;
[L8477]              havoc gas;
[L8478]              assume gas > 4000000 && gas <= 8000000;
[L8479]              tmpNow := now;
[L8480]              havoc now;
[L8481]              assume now > tmpNow;
[L8482]              assume msgsender_MSG != null;
[L8483]              assume DType[msgsender_MSG] != Ownable;
[L8484]              assume DType[msgsender_MSG] != ERC20Basic;
[L8485]              assume DType[msgsender_MSG] != BasicToken;
[L8486]              assume DType[msgsender_MSG] != ERC20;
[L8487]              assume DType[msgsender_MSG] != StandardToken;
[L8488]              assume DType[msgsender_MSG] != Pausable;
[L8489]              assume DType[msgsender_MSG] != UpgradedStandardToken;
[L8490]              assume DType[msgsender_MSG] != BlackList;
[L8491]              assume DType[msgsender_MSG] != AlitaToken;
[L8492]              assume DType[msgsender_MSG] != SafeMath;
[L8493]              Alloc[msgsender_MSG] := true;
[L8494]  COND FALSE  !(choice == 26)
[L8500]  COND FALSE  !(choice == 25)
[L8506]  COND FALSE  !(choice == 24)
[L8512]  COND FALSE  !(choice == 23)
[L8518]  COND TRUE   choice == 22
[L8519]              gas := gas - 21000;
[L8520]  COND TRUE   gas >= 0
[L8521]              assume _value_s754 >= 0 && _value_s754 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L8522]              assume msgvalue_MSG == 0;
[L8523]  CALL        call __ret_0_transfer := transfer~address~uint256_AlitaToken(this, msgsender_MSG, msgvalue_MSG, _to_s754, _value_s754);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == _to_s754 && _value_s754 <= balances_BasicToken[this][msgsender_MSG]) && _value_s754 >= 0) && _value_s754 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BasicToken[this][_to_s754] >= 0) && balances_BasicToken[this][_to_s754] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BasicToken[this][msgsender_MSG] >= 0) && balances_BasicToken[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_AlitaToken0 := true;
[L2]                 call_transfer_AlitaToken0 := false;
[L2]                 revert := revert_hold;
[L2049]              havoc __exception;
[L2050]              revert := false;
[L2051]  COND FALSE  !(__exception)
[L2080]  CALL        call __ret_0_ := transfer~address~uint256_AlitaToken__success(this, msgsender_MSG, msgvalue_MSG, _to_s754, _value_s754);
[L5022]  CALL        call whenNotPaused_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L7448]  COND FALSE  !(!!paused_Pausable[this])
[L5022]  RET         call whenNotPaused_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L5023]  COND FALSE  !(revert)
[L5026]  COND FALSE  !(!!isBlackListed_BlackList[this][msgsender_MSG])
[L5030]  COND FALSE  !(!!isBlackListed_BlackList[this][_to_s754])
[L5034]  COND FALSE  !(deprecated_AlitaToken[this])
[L5041]  COND TRUE   DType[this] == AlitaToken
[L5042]  CALL        call __var_14 := transfer~address~uint256_BasicToken__success(this, msgsender_MSG, msgvalue_MSG, _to_s754, _value_s754);
[L4165]              __var_2 := null;
[L4166]  COND FALSE  !(!(_to_s154 != null))
[L4170]  COND FALSE  !(!(_value_s154 <= balances_BasicToken[this][msgsender_MSG]))
[L4174]  CALL        call __var_3 := sub~uint256~uint256_SafeMath__success(this, this, 0, balances_BasicToken[this][msgsender_MSG], _value_s154);
[L5646]              assert b_s1033 <= a_s1033;
[L5647]              __ret_0_ := (a_s1033 - b_s1033) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4174]  RET         call __var_3 := sub~uint256~uint256_SafeMath__success(this, this, 0, balances_BasicToken[this][msgsender_MSG], _value_s154);
[L4175]  COND FALSE  !(revert)
[L4178]              sum_balances0[this] := sum_balances0[this] - balances_BasicToken[this][msgsender_MSG];
[L4179]              balances_BasicToken[this][msgsender_MSG] := __var_3;
[L4180]              sum_balances0[this] := sum_balances0[this] + balances_BasicToken[this][msgsender_MSG];
[L4181]  CALL        call __var_4 := add~uint256~uint256_SafeMath__success(this, this, 0, balances_BasicToken[this][_to_s154], _value_s154);
[L5660]              c_s1057 := (a_s1057 + b_s1057) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L5661]              assert c_s1057 >= a_s1057;
[L5662]              c_s1057 := c_s1057;
[L4181]  RET         call __var_4 := add~uint256~uint256_SafeMath__success(this, this, 0, balances_BasicToken[this][_to_s154], _value_s154);
[L4182]  COND FALSE  !(revert)
[L4185]              sum_balances0[this] := sum_balances0[this] - balances_BasicToken[this][_to_s154];
[L4186]              balances_BasicToken[this][_to_s154] := __var_4;
[L4187]              sum_balances0[this] := sum_balances0[this] + balances_BasicToken[this][_to_s154];
[L4188]              assert { :EventEmitted "Transfer_BasicToken" } true;
[L4189]              __ret_0_ := true;
[L5042]  RET         call __var_14 := transfer~address~uint256_BasicToken__success(this, msgsender_MSG, msgvalue_MSG, _to_s754, _value_s754);
[L5043]  COND FALSE  !(revert)
[L5049]              __ret_0_ := __var_14;
[L2080]  RET         call __ret_0_ := transfer~address~uint256_AlitaToken__success(this, msgsender_MSG, msgvalue_MSG, _to_s754, _value_s754);
[L2081]              assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !((((((((((((__ret_0_ == true && totalSupply__BasicToken[this] == old(totalSupply__BasicToken[this])) && balances_BasicToken[this] == old(balances_BasicToken[this])) && allowed_StandardToken[this] == old(allowed_StandardToken[this])) && name_AlitaToken[this] == old(name_AlitaToken[this])) && symbol_AlitaToken[this] == old(symbol_AlitaToken[this])) && decimals_AlitaToken[this] == old(decimals_AlitaToken[this])) && init_Supply_AlitaToken[this] == old(init_Supply_AlitaToken[this])) && upgradedAddress_AlitaToken[this] == old(upgradedAddress_AlitaToken[this])) && deprecated_AlitaToken[this] == old(deprecated_AlitaToken[this])) && isBlackListed_BlackList[this] == old(isBlackListed_BlackList[this])) && paused_Pausable[this] == old(paused_Pausable[this])) && owner_Ownable[this] == old(owner_Ownable[this]));
[L2]                 revert := revert_hold;
[L8523]  RET         call __ret_0_transfer := transfer~address~uint256_AlitaToken(this, msgsender_MSG, msgvalue_MSG, _to_s754, _value_s754);
[L8673]  RET         call CorralChoice_AlitaToken(this);

Loop:
[L8673]  CALL        call CorralChoice_AlitaToken(this);
[L8433]              havoc msgsender_MSG;
[L8434]              havoc msgvalue_MSG;
[L8435]              havoc choice;
[L8436]              havoc __ret_0_owner;
[L8437]              havoc newOwner_s42;
[L8438]              havoc __ret_0_totalSupply;
[L8439]              havoc _owner_s166;
[L8440]              havoc __ret_0_balanceOf;
[L8441]              havoc _to_s754;
[L8442]              havoc _value_s754;
[L8443]              havoc __ret_0_transfer;
[L8444]              havoc _owner_s885;
[L8445]              havoc _spender_s885;
[L8446]              havoc __ret_0_allowance;
[L8447]              havoc _from_s812;
[L8448]              havoc _to_s812;
[L8449]              havoc _value_s812;
[L8450]              havoc __ret_0_transferFrom;
[L8451]              havoc _spender_s857;
[L8452]              havoc _value_s857;
[L8453]              havoc __ret_0_approve;
[L8454]              havoc _spender_s913;
[L8455]              havoc _addedValue_s913;
[L8456]              havoc __ret_0_increaseApproval;
[L8457]              havoc _spender_s941;
[L8458]              havoc _subtractedValue_s941;
[L8459]              havoc __ret_0_decreaseApproval;
[L8460]              havoc __ret_0_paused;
[L8461]              havoc _maker_s564;
[L8462]              havoc __ret_0_getBlackListStatus;
[L8463]              havoc __ret_0_getOwner;
[L8464]              havoc arg1060_s0;
[L8465]              havoc __ret_0_isBlackListed;
[L8466]              havoc _evilUser_s594;
[L8467]              havoc _clearedUser_s612;
[L8468]              havoc _blackListedUser_s647;
[L8469]              havoc __ret_0_name;
[L8470]              havoc __ret_0_symbol;
[L8471]              havoc __ret_0_decimals;
[L8472]              havoc __ret_0_init_Supply;
[L8473]              havoc __ret_0_upgradedAddress;
[L8474]              havoc __ret_0_deprecated;
[L8475]              havoc _upgradedAddress_s961;
[L8476]              havoc tmpNow;
[L8477]              havoc gas;
[L8478]              assume gas > 4000000 && gas <= 8000000;
[L8479]              tmpNow := now;
[L8480]              havoc now;
[L8481]              assume now > tmpNow;
[L8482]              assume msgsender_MSG != null;
[L8483]              assume DType[msgsender_MSG] != Ownable;
[L8484]              assume DType[msgsender_MSG] != ERC20Basic;
[L8485]              assume DType[msgsender_MSG] != BasicToken;
[L8486]              assume DType[msgsender_MSG] != ERC20;
[L8487]              assume DType[msgsender_MSG] != StandardToken;
[L8488]              assume DType[msgsender_MSG] != Pausable;
[L8489]              assume DType[msgsender_MSG] != UpgradedStandardToken;
[L8490]              assume DType[msgsender_MSG] != BlackList;
[L8491]              assume DType[msgsender_MSG] != AlitaToken;
[L8492]              assume DType[msgsender_MSG] != SafeMath;
[L8493]              Alloc[msgsender_MSG] := true;
[L8494]  COND FALSE  !(choice == 26)
[L8500]  COND FALSE  !(choice == 25)
[L8506]  COND FALSE  !(choice == 24)
[L8512]  COND FALSE  !(choice == 23)
[L8518]  COND TRUE   choice == 22
[L8519]              gas := gas - 21000;
[L8520]  COND TRUE   gas >= 0
[L8521]              assume _value_s754 >= 0 && _value_s754 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L8522]              assume msgvalue_MSG == 0;
[L8523]  CALL        call __ret_0_transfer := transfer~address~uint256_AlitaToken(this, msgsender_MSG, msgvalue_MSG, _to_s754, _value_s754);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == _to_s754 && _value_s754 <= balances_BasicToken[this][msgsender_MSG]) && _value_s754 >= 0) && _value_s754 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BasicToken[this][_to_s754] >= 0) && balances_BasicToken[this][_to_s754] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BasicToken[this][msgsender_MSG] >= 0) && balances_BasicToken[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_AlitaToken0 := true;
[L2]                 call_transfer_AlitaToken0 := false;
[L2]                 revert := revert_hold;
[L2049]              havoc __exception;
[L2050]              revert := false;
[L2051]  COND FALSE  !(__exception)
[L2080]  CALL        call __ret_0_ := transfer~address~uint256_AlitaToken__success(this, msgsender_MSG, msgvalue_MSG, _to_s754, _value_s754);
[L5022]  CALL        call whenNotPaused_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L7448]  COND FALSE  !(!!paused_Pausable[this])
[L5022]  RET         call whenNotPaused_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L5023]  COND FALSE  !(revert)
[L5026]  COND FALSE  !(!!isBlackListed_BlackList[this][msgsender_MSG])
[L5030]  COND FALSE  !(!!isBlackListed_BlackList[this][_to_s754])
[L5034]  COND FALSE  !(deprecated_AlitaToken[this])
[L5041]  COND TRUE   DType[this] == AlitaToken
[L5042]  CALL        call __var_14 := transfer~address~uint256_BasicToken__success(this, msgsender_MSG, msgvalue_MSG, _to_s754, _value_s754);
[L4165]              __var_2 := null;
[L4166]  COND FALSE  !(!(_to_s154 != null))
[L4170]  COND FALSE  !(!(_value_s154 <= balances_BasicToken[this][msgsender_MSG]))
[L4174]  CALL        call __var_3 := sub~uint256~uint256_SafeMath__success(this, this, 0, balances_BasicToken[this][msgsender_MSG], _value_s154);
[L5646]              assert b_s1033 <= a_s1033;
[L5647]              __ret_0_ := (a_s1033 - b_s1033) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4174]  RET         call __var_3 := sub~uint256~uint256_SafeMath__success(this, this, 0, balances_BasicToken[this][msgsender_MSG], _value_s154);
[L4175]  COND FALSE  !(revert)
[L4178]              sum_balances0[this] := sum_balances0[this] - balances_BasicToken[this][msgsender_MSG];
[L4179]              balances_BasicToken[this][msgsender_MSG] := __var_3;
[L4180]              sum_balances0[this] := sum_balances0[this] + balances_BasicToken[this][msgsender_MSG];
[L4181]  CALL        call __var_4 := add~uint256~uint256_SafeMath__success(this, this, 0, balances_BasicToken[this][_to_s154], _value_s154);
[L5660]              c_s1057 := (a_s1057 + b_s1057) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L5661]              assert c_s1057 >= a_s1057;
[L5662]              c_s1057 := c_s1057;
[L4181]  RET         call __var_4 := add~uint256~uint256_SafeMath__success(this, this, 0, balances_BasicToken[this][_to_s154], _value_s154);
[L4182]  COND FALSE  !(revert)
[L4185]              sum_balances0[this] := sum_balances0[this] - balances_BasicToken[this][_to_s154];
[L4186]              balances_BasicToken[this][_to_s154] := __var_4;
[L4187]              sum_balances0[this] := sum_balances0[this] + balances_BasicToken[this][_to_s154];
[L4188]              assert { :EventEmitted "Transfer_BasicToken" } true;
[L4189]              __ret_0_ := true;
[L5042]  RET         call __var_14 := transfer~address~uint256_BasicToken__success(this, msgsender_MSG, msgvalue_MSG, _to_s754, _value_s754);
[L5043]  COND FALSE  !(revert)
[L5049]              __ret_0_ := __var_14;
[L2080]  RET         call __ret_0_ := transfer~address~uint256_AlitaToken__success(this, msgsender_MSG, msgvalue_MSG, _to_s754, _value_s754);
[L2081]              assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !((((((((((((__ret_0_ == true && totalSupply__BasicToken[this] == old(totalSupply__BasicToken[this])) && balances_BasicToken[this] == old(balances_BasicToken[this])) && allowed_StandardToken[this] == old(allowed_StandardToken[this])) && name_AlitaToken[this] == old(name_AlitaToken[this])) && symbol_AlitaToken[this] == old(symbol_AlitaToken[this])) && decimals_AlitaToken[this] == old(decimals_AlitaToken[this])) && init_Supply_AlitaToken[this] == old(init_Supply_AlitaToken[this])) && upgradedAddress_AlitaToken[this] == old(upgradedAddress_AlitaToken[this])) && deprecated_AlitaToken[this] == old(deprecated_AlitaToken[this])) && isBlackListed_BlackList[this] == old(isBlackListed_BlackList[this])) && paused_Pausable[this] == old(paused_Pausable[this])) && owner_Ownable[this] == old(owner_Ownable[this]));
[L2]                 revert := revert_hold;
[L8523]  RET         call __ret_0_transfer := transfer~address~uint256_AlitaToken(this, msgsender_MSG, msgvalue_MSG, _to_s754, _value_s754);
[L8673]  RET         call CorralChoice_AlitaToken(this);

[2020-11-24 23:45:54,535 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 23:45:54,535 INFO  L82        PathProgramCache]: Analyzing trace with hash 1319820152, now seen corresponding path program 1 times
[2020-11-24 23:45:54,535 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 23:45:54,577 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 23:45:55,146 INFO  L134       CoverageAnalysis]: Checked inductivity of 381 backedges. 16 proven. 0 refuted. 0 times theorem prover too weak. 365 trivial. 0 not checked.
[2020-11-24 23:45:55,147 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 23:45:55,147 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [26] imperfect sequences [] total 26
[2020-11-24 23:45:55,147 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 23:45:55,147 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 27 interpolants.
[2020-11-24 23:45:55,147 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=63, Invalid=639, Unknown=0, NotChecked=0, Total=702
[2020-11-24 23:45:55,148 INFO  L87              Difference]: Start difference. First operand 8834 states and 10667 transitions. cyclomatic complexity: 1877 Second operand 27 states.
[2020-11-24 23:46:01,091 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 23:46:01,091 INFO  L93              Difference]: Finished difference Result 9176 states and 11766 transitions.
[2020-11-24 23:46:01,092 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 29 states. 
[2020-11-24 23:46:01,092 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 9176 states and 11766 transitions.
[2020-11-24 23:46:01,121 INFO  L131   ngComponentsAnalysis]: Automaton has 24 accepting balls. 166
[2020-11-24 23:46:01,157 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 9176 states to 9176 states and 11766 transitions.
[2020-11-24 23:46:01,157 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 2812
[2020-11-24 23:46:01,159 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 2812
[2020-11-24 23:46:01,159 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 9176 states and 11766 transitions.
[2020-11-24 23:46:01,170 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 23:46:01,170 INFO  L728         BuchiCegarLoop]: Abstraction has 9176 states and 11766 transitions.
[2020-11-24 23:46:01,173 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 9176 states and 11766 transitions.
[2020-11-24 23:46:01,251 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 9176 to 8908.
[2020-11-24 23:46:01,251 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 8908 states.
[2020-11-24 23:46:01,271 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 8908 states to 8908 states and 11222 transitions.
[2020-11-24 23:46:01,271 INFO  L751         BuchiCegarLoop]: Abstraction has 8908 states and 11222 transitions.
[2020-11-24 23:46:01,271 INFO  L631         BuchiCegarLoop]: Abstraction has 8908 states and 11222 transitions.
[2020-11-24 23:46:01,271 INFO  L445         BuchiCegarLoop]: ======== Iteration 12============
[2020-11-24 23:46:01,271 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 8908 states and 11222 transitions.
[2020-11-24 23:46:01,284 INFO  L131   ngComponentsAnalysis]: Automaton has 24 accepting balls. 136
[2020-11-24 23:46:01,284 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 23:46:01,284 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 23:46:01,285 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [8, 8, 8, 8, 8, 8, 8, 8, 8, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 23:46:01,286 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 success_transfer_AlitaToken0 := false;
[L2]                 call_transfer_AlitaToken0 := false;
[L2]     CALL        call main();
[L8663]              assume null == 0;
[L8664]  CALL        call this := FreshRefGenerator__success();
[L3958]              havoc newRef;
[L3959]              assume Alloc[newRef] == false;
[L3960]              Alloc[newRef] := true;
[L3961]              assume newRef != null;
[L8664]  RET         call this := FreshRefGenerator__success();
[L8665]              assume now >= 0;
[L8666]              assume DType[this] == AlitaToken;
[L8667]              assume msgvalue_MSG == 0;
[L8668]              gas := gas - 53000;
[L8669]  CALL        call AlitaToken_AlitaToken(this, msgsender_MSG, msgvalue_MSG);
[L1981]              havoc __exception;
[L1982]              revert := false;
[L1983]  COND FALSE  !(__exception)
[L2012]  CALL        call AlitaToken_AlitaToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4942]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3994]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3977]              assume msgsender_MSG != null;
[L3978]              Balance[this] := 0;
[L3979]              owner_Ownable[this] := null;
[L3981]              owner_Ownable[this] := msgsender_MSG;
[L3994]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3995]  COND FALSE  !(revert)
[L4942]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4943]  COND FALSE  !(revert)
[L4946]  CALL        call Pausable_Pausable__success(this, msgsender_MSG, msgvalue_MSG);
[L4531]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3994]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3977]              assume msgsender_MSG != null;
[L3978]              Balance[this] := 0;
[L3979]              owner_Ownable[this] := null;
[L3981]              owner_Ownable[this] := msgsender_MSG;
[L3994]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3995]  COND FALSE  !(revert)
[L4531]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4532]  COND FALSE  !(revert)
[L4535]  CALL        call Pausable_Pausable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4511]              assume msgsender_MSG != null;
[L4512]              Balance[this] := 0;
[L4513]              paused_Pausable[this] := false;
[L4535]  RET         call Pausable_Pausable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4536]  COND FALSE  !(revert)
[L4946]  RET         call Pausable_Pausable__success(this, msgsender_MSG, msgvalue_MSG);
[L4947]  COND FALSE  !(revert)
[L4950]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4064]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4049]              assume msgsender_MSG != null;
[L4050]              Balance[this] := 0;
[L4064]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  COND FALSE  !(revert)
[L4950]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4951]  COND FALSE  !(revert)
[L4954]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4235]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4064]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4049]              assume msgsender_MSG != null;
[L4050]              Balance[this] := 0;
[L4064]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  COND FALSE  !(revert)
[L4235]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4236]  COND FALSE  !(revert)
[L4239]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4216]              assume msgsender_MSG != null;
[L4217]              Balance[this] := 0;
[L4239]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4240]  COND FALSE  !(revert)
[L4954]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4955]  COND FALSE  !(revert)
[L4958]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4106]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4064]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4049]              assume msgsender_MSG != null;
[L4050]              Balance[this] := 0;
[L4064]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  COND FALSE  !(revert)
[L4106]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4107]  COND FALSE  !(revert)
[L4110]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4084]              assume msgsender_MSG != null;
[L4085]              Balance[this] := 0;
[L4086]              balances_BasicToken[this] := zeroRefintArr();
[L4087]              sum_balances0[this] := 0;
[L4088]              totalSupply__BasicToken[this] := 0;
[L4110]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4111]  COND FALSE  !(revert)
[L4958]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4959]  COND FALSE  !(revert)
[L4962]  CALL        call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4287]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4064]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4049]              assume msgsender_MSG != null;
[L4050]              Balance[this] := 0;
[L4064]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  COND FALSE  !(revert)
[L4287]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4288]  COND FALSE  !(revert)
[L4291]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4235]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4064]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4049]              assume msgsender_MSG != null;
[L4050]              Balance[this] := 0;
[L4064]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  COND FALSE  !(revert)
[L4235]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4236]  COND FALSE  !(revert)
[L4239]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4216]              assume msgsender_MSG != null;
[L4217]              Balance[this] := 0;
[L4239]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4240]  COND FALSE  !(revert)
[L4291]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4292]  COND FALSE  !(revert)
[L4295]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4106]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4064]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4049]              assume msgsender_MSG != null;
[L4050]              Balance[this] := 0;
[L4064]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  COND FALSE  !(revert)
[L4106]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4107]  COND FALSE  !(revert)
[L4110]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4084]              assume msgsender_MSG != null;
[L4085]              Balance[this] := 0;
[L4086]              balances_BasicToken[this] := zeroRefintArr();
[L4087]              sum_balances0[this] := 0;
[L4088]              totalSupply__BasicToken[this] := 0;
[L4110]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4111]  COND FALSE  !(revert)
[L4295]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4296]  COND FALSE  !(revert)
[L4299]  CALL        call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4258]              assume msgsender_MSG != null;
[L4259]              Balance[this] := 0;
[L4260]              allowed_StandardToken[this] := zeroRefRefintArr();
[L4261]              sum_allowed1[this] := 0;
[L4299]  RET         call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4300]  COND FALSE  !(revert)
[L4962]  RET         call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4963]  COND FALSE  !(revert)
[L4966]  CALL        call BlackList_BlackList__success(this, msgsender_MSG, msgvalue_MSG);
[L4711]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3994]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3977]              assume msgsender_MSG != null;
[L3978]              Balance[this] := 0;
[L3979]              owner_Ownable[this] := null;
[L3981]              owner_Ownable[this] := msgsender_MSG;
[L3994]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3995]  COND FALSE  !(revert)
[L4711]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4712]  COND FALSE  !(revert)
[L4715]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4064]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4049]              assume msgsender_MSG != null;
[L4050]              Balance[this] := 0;
[L4064]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  COND FALSE  !(revert)
[L4715]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4716]  COND FALSE  !(revert)
[L4719]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4106]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4064]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4049]              assume msgsender_MSG != null;
[L4050]              Balance[this] := 0;
[L4064]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  COND FALSE  !(revert)
[L4106]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4107]  COND FALSE  !(revert)
[L4110]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4084]              assume msgsender_MSG != null;
[L4085]              Balance[this] := 0;
[L4086]              balances_BasicToken[this] := zeroRefintArr();
[L4087]              sum_balances0[this] := 0;
[L4088]              totalSupply__BasicToken[this] := 0;
[L4110]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4111]  COND FALSE  !(revert)
[L4719]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4720]  COND FALSE  !(revert)
[L4723]  CALL        call BlackList_BlackList_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4683]              assume msgsender_MSG != null;
[L4684]              Balance[this] := 0;
[L4685]              isBlackListed_BlackList[this] := zeroRefboolArr();
[L4723]  RET         call BlackList_BlackList_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4724]  COND FALSE  !(revert)
[L4966]  RET         call BlackList_BlackList__success(this, msgsender_MSG, msgvalue_MSG);
[L4967]  COND FALSE  !(revert)
[L4970]  CALL        call AlitaToken_AlitaToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4888]              assume msgsender_MSG != null;
[L4889]              Balance[this] := 0;
[L4890]              name_AlitaToken[this] := -1110093910;
[L4891]              symbol_AlitaToken[this] := 1234648092;
[L4892]              decimals_AlitaToken[this] := 18;
[L4893]              init_Supply_AlitaToken[this] := 1000000000 * (1000000000000000000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L4894]              upgradedAddress_AlitaToken[this] := null;
[L4895]              deprecated_AlitaToken[this] := false;
[L4897]              totalSupply__BasicToken[this] := init_Supply_AlitaToken[this];
[L4898]              sum_balances0[this] := sum_balances0[this] - balances_BasicToken[this][msgsender_MSG];
[L4899]              balances_BasicToken[this][msgsender_MSG] := totalSupply__BasicToken[this];
[L4900]              sum_balances0[this] := sum_balances0[this] + balances_BasicToken[this][msgsender_MSG];
[L4901]              deprecated_AlitaToken[this] := false;
[L4970]  RET         call AlitaToken_AlitaToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4971]  COND FALSE  !(revert)
[L2012]  RET         call AlitaToken_AlitaToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2013]              assume !revert && gas >= 0;
[L8669]  RET         call AlitaToken_AlitaToken(this, msgsender_MSG, msgvalue_MSG);
[L8670]              assume !revert && gas >= 0;
[L8673]  CALL        call CorralChoice_AlitaToken(this);
[L8433]              havoc msgsender_MSG;
[L8434]              havoc msgvalue_MSG;
[L8435]              havoc choice;
[L8436]              havoc __ret_0_owner;
[L8437]              havoc newOwner_s42;
[L8438]              havoc __ret_0_totalSupply;
[L8439]              havoc _owner_s166;
[L8440]              havoc __ret_0_balanceOf;
[L8441]              havoc _to_s754;
[L8442]              havoc _value_s754;
[L8443]              havoc __ret_0_transfer;
[L8444]              havoc _owner_s885;
[L8445]              havoc _spender_s885;
[L8446]              havoc __ret_0_allowance;
[L8447]              havoc _from_s812;
[L8448]              havoc _to_s812;
[L8449]              havoc _value_s812;
[L8450]              havoc __ret_0_transferFrom;
[L8451]              havoc _spender_s857;
[L8452]              havoc _value_s857;
[L8453]              havoc __ret_0_approve;
[L8454]              havoc _spender_s913;
[L8455]              havoc _addedValue_s913;
[L8456]              havoc __ret_0_increaseApproval;
[L8457]              havoc _spender_s941;
[L8458]              havoc _subtractedValue_s941;
[L8459]              havoc __ret_0_decreaseApproval;
[L8460]              havoc __ret_0_paused;
[L8461]              havoc _maker_s564;
[L8462]              havoc __ret_0_getBlackListStatus;
[L8463]              havoc __ret_0_getOwner;
[L8464]              havoc arg1060_s0;
[L8465]              havoc __ret_0_isBlackListed;
[L8466]              havoc _evilUser_s594;
[L8467]              havoc _clearedUser_s612;
[L8468]              havoc _blackListedUser_s647;
[L8469]              havoc __ret_0_name;
[L8470]              havoc __ret_0_symbol;
[L8471]              havoc __ret_0_decimals;
[L8472]              havoc __ret_0_init_Supply;
[L8473]              havoc __ret_0_upgradedAddress;
[L8474]              havoc __ret_0_deprecated;
[L8475]              havoc _upgradedAddress_s961;
[L8476]              havoc tmpNow;
[L8477]              havoc gas;
[L8478]              assume gas > 4000000 && gas <= 8000000;
[L8479]              tmpNow := now;
[L8480]              havoc now;
[L8481]              assume now > tmpNow;
[L8482]              assume msgsender_MSG != null;
[L8483]              assume DType[msgsender_MSG] != Ownable;
[L8484]              assume DType[msgsender_MSG] != ERC20Basic;
[L8485]              assume DType[msgsender_MSG] != BasicToken;
[L8486]              assume DType[msgsender_MSG] != ERC20;
[L8487]              assume DType[msgsender_MSG] != StandardToken;
[L8488]              assume DType[msgsender_MSG] != Pausable;
[L8489]              assume DType[msgsender_MSG] != UpgradedStandardToken;
[L8490]              assume DType[msgsender_MSG] != BlackList;
[L8491]              assume DType[msgsender_MSG] != AlitaToken;
[L8492]              assume DType[msgsender_MSG] != SafeMath;
[L8493]              Alloc[msgsender_MSG] := true;
[L8494]  COND FALSE  !(choice == 26)
[L8500]  COND FALSE  !(choice == 25)
[L8506]  COND FALSE  !(choice == 24)
[L8512]  COND FALSE  !(choice == 23)
[L8518]  COND FALSE  !(choice == 22)
[L8525]  COND FALSE  !(choice == 21)
[L8531]  COND FALSE  !(choice == 20)
[L8538]  COND FALSE  !(choice == 19)
[L8545]  COND FALSE  !(choice == 18)
[L8552]  COND FALSE  !(choice == 17)
[L8559]  COND FALSE  !(choice == 16)
[L8565]  COND FALSE  !(choice == 15)
[L8571]  COND FALSE  !(choice == 14)
[L8577]  COND FALSE  !(choice == 13)
[L8583]  COND FALSE  !(choice == 12)
[L8589]  COND FALSE  !(choice == 11)
[L8595]  COND FALSE  !(choice == 10)
[L8601]  COND TRUE   choice == 9
[L8602]              gas := gas - 21000;
[L8603]  COND TRUE   gas >= 0
[L8604]              assume msgvalue_MSG == 0;
[L8605]  CALL        call removeBlackList~address_BlackList(this, msgsender_MSG, msgvalue_MSG, _clearedUser_s612);
[L1748]              havoc __exception;
[L1749]              revert := false;
[L1750]  COND FALSE  !(__exception)
[L1779]  CALL        call removeBlackList~address_BlackList__success(this, msgsender_MSG, msgvalue_MSG, _clearedUser_s612);
[L4783]  CALL        call onlyOwner_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L7432]  COND FALSE  !(!(msgsender_MSG == owner_Ownable[this]))
[L4783]  RET         call onlyOwner_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L4784]  COND FALSE  !(revert)
[L4787]              isBlackListed_BlackList[this][_clearedUser_s612] := false;
[L4788]              assert { :EventEmitted "RemovedBlackList_BlackList" } true;
[L1779]  RET         call removeBlackList~address_BlackList__success(this, msgsender_MSG, msgvalue_MSG, _clearedUser_s612);
[L1780]              assume !revert && gas >= 0;
[L8605]  RET         call removeBlackList~address_BlackList(this, msgsender_MSG, msgvalue_MSG, _clearedUser_s612);
[L8673]  RET         call CorralChoice_AlitaToken(this);
[L8673]  CALL        call CorralChoice_AlitaToken(this);
[L8433]              havoc msgsender_MSG;
[L8434]              havoc msgvalue_MSG;
[L8435]              havoc choice;
[L8436]              havoc __ret_0_owner;
[L8437]              havoc newOwner_s42;
[L8438]              havoc __ret_0_totalSupply;
[L8439]              havoc _owner_s166;
[L8440]              havoc __ret_0_balanceOf;
[L8441]              havoc _to_s754;
[L8442]              havoc _value_s754;
[L8443]              havoc __ret_0_transfer;
[L8444]              havoc _owner_s885;
[L8445]              havoc _spender_s885;
[L8446]              havoc __ret_0_allowance;
[L8447]              havoc _from_s812;
[L8448]              havoc _to_s812;
[L8449]              havoc _value_s812;
[L8450]              havoc __ret_0_transferFrom;
[L8451]              havoc _spender_s857;
[L8452]              havoc _value_s857;
[L8453]              havoc __ret_0_approve;
[L8454]              havoc _spender_s913;
[L8455]              havoc _addedValue_s913;
[L8456]              havoc __ret_0_increaseApproval;
[L8457]              havoc _spender_s941;
[L8458]              havoc _subtractedValue_s941;
[L8459]              havoc __ret_0_decreaseApproval;
[L8460]              havoc __ret_0_paused;
[L8461]              havoc _maker_s564;
[L8462]              havoc __ret_0_getBlackListStatus;
[L8463]              havoc __ret_0_getOwner;
[L8464]              havoc arg1060_s0;
[L8465]              havoc __ret_0_isBlackListed;
[L8466]              havoc _evilUser_s594;
[L8467]              havoc _clearedUser_s612;
[L8468]              havoc _blackListedUser_s647;
[L8469]              havoc __ret_0_name;
[L8470]              havoc __ret_0_symbol;
[L8471]              havoc __ret_0_decimals;
[L8472]              havoc __ret_0_init_Supply;
[L8473]              havoc __ret_0_upgradedAddress;
[L8474]              havoc __ret_0_deprecated;
[L8475]              havoc _upgradedAddress_s961;
[L8476]              havoc tmpNow;
[L8477]              havoc gas;
[L8478]              assume gas > 4000000 && gas <= 8000000;
[L8479]              tmpNow := now;
[L8480]              havoc now;
[L8481]              assume now > tmpNow;
[L8482]              assume msgsender_MSG != null;
[L8483]              assume DType[msgsender_MSG] != Ownable;
[L8484]              assume DType[msgsender_MSG] != ERC20Basic;
[L8485]              assume DType[msgsender_MSG] != BasicToken;
[L8486]              assume DType[msgsender_MSG] != ERC20;
[L8487]              assume DType[msgsender_MSG] != StandardToken;
[L8488]              assume DType[msgsender_MSG] != Pausable;
[L8489]              assume DType[msgsender_MSG] != UpgradedStandardToken;
[L8490]              assume DType[msgsender_MSG] != BlackList;
[L8491]              assume DType[msgsender_MSG] != AlitaToken;
[L8492]              assume DType[msgsender_MSG] != SafeMath;
[L8493]              Alloc[msgsender_MSG] := true;
[L8494]  COND FALSE  !(choice == 26)
[L8500]  COND FALSE  !(choice == 25)
[L8506]  COND FALSE  !(choice == 24)
[L8512]  COND FALSE  !(choice == 23)
[L8518]  COND TRUE   choice == 22
[L8519]              gas := gas - 21000;
[L8520]  COND TRUE   gas >= 0
[L8521]              assume _value_s754 >= 0 && _value_s754 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L8522]              assume msgvalue_MSG == 0;
[L8523]  CALL        call __ret_0_transfer := transfer~address~uint256_AlitaToken(this, msgsender_MSG, msgvalue_MSG, _to_s754, _value_s754);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == _to_s754 && _value_s754 <= balances_BasicToken[this][msgsender_MSG]) && _value_s754 >= 0) && _value_s754 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BasicToken[this][_to_s754] >= 0) && balances_BasicToken[this][_to_s754] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BasicToken[this][msgsender_MSG] >= 0) && balances_BasicToken[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_AlitaToken0 := true;
[L2]                 call_transfer_AlitaToken0 := false;
[L2]                 revert := revert_hold;
[L2049]              havoc __exception;
[L2050]              revert := false;
[L2051]  COND TRUE   __exception
[L2052]              __tmp__Balance := Balance;
[L2053]              __tmp__DType := DType;
[L2054]              __tmp__Alloc := Alloc;
[L2055]              __tmp__balance_ADDR := balance_ADDR;
[L2056]              __tmp__M_Ref_int := M_Ref_int;
[L2057]              __tmp__sum_balances0 := sum_balances0;
[L2058]              __tmp__alloc_allowed_StandardToken_lvl0 := alloc_allowed_StandardToken_lvl0;
[L2059]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L2060]              __tmp__sum_allowed1 := sum_allowed1;
[L2061]              __tmp__M_Ref_bool := M_Ref_bool;
[L2062]              __tmp__sum_isBlackListed2 := sum_isBlackListed2;
[L2063]              __tmp__Length := Length;
[L2064]              __tmp__now := now;
[L2065]              __tmp__owner_Ownable := owner_Ownable;
[L2066]              __tmp__balances_BasicToken := balances_BasicToken;
[L2067]              __tmp__totalSupply__BasicToken := totalSupply__BasicToken;
[L2068]              __tmp__allowed_StandardToken := allowed_StandardToken;
[L2069]              __tmp__paused_Pausable := paused_Pausable;
[L2070]              __tmp__isBlackListed_BlackList := isBlackListed_BlackList;
[L2071]              __tmp__name_AlitaToken := name_AlitaToken;
[L2072]              __tmp__symbol_AlitaToken := symbol_AlitaToken;
[L2073]              __tmp__decimals_AlitaToken := decimals_AlitaToken;
[L2074]              __tmp__init_Supply_AlitaToken := init_Supply_AlitaToken;
[L2075]              __tmp__upgradedAddress_AlitaToken := upgradedAddress_AlitaToken;
[L2076]              __tmp__deprecated_AlitaToken := deprecated_AlitaToken;
[L2077]  CALL        call __ret_0_ := transfer~address~uint256_AlitaToken__fail(this, msgsender_MSG, msgvalue_MSG, _to_s754, _value_s754);
[L4983]  CALL        call whenNotPaused_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L7440]  COND FALSE  !(!!__tmp__paused_Pausable[this])
[L4983]  RET         call whenNotPaused_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L4984]  COND FALSE  !(revert)
[L4987]  COND TRUE   !!__tmp__isBlackListed_BlackList[this][msgsender_MSG]
[L4988]              revert := true;
[L2077]  RET         call __ret_0_ := transfer~address~uint256_AlitaToken__fail(this, msgsender_MSG, msgvalue_MSG, _to_s754, _value_s754);
[L2078]              assume revert || gas < 0;
[L8523]  RET         call __ret_0_transfer := transfer~address~uint256_AlitaToken(this, msgsender_MSG, msgvalue_MSG, _to_s754, _value_s754);
[L8673]  RET         call CorralChoice_AlitaToken(this);

Loop:
[L8673]  CALL        call CorralChoice_AlitaToken(this);
[L8433]              havoc msgsender_MSG;
[L8434]              havoc msgvalue_MSG;
[L8435]              havoc choice;
[L8436]              havoc __ret_0_owner;
[L8437]              havoc newOwner_s42;
[L8438]              havoc __ret_0_totalSupply;
[L8439]              havoc _owner_s166;
[L8440]              havoc __ret_0_balanceOf;
[L8441]              havoc _to_s754;
[L8442]              havoc _value_s754;
[L8443]              havoc __ret_0_transfer;
[L8444]              havoc _owner_s885;
[L8445]              havoc _spender_s885;
[L8446]              havoc __ret_0_allowance;
[L8447]              havoc _from_s812;
[L8448]              havoc _to_s812;
[L8449]              havoc _value_s812;
[L8450]              havoc __ret_0_transferFrom;
[L8451]              havoc _spender_s857;
[L8452]              havoc _value_s857;
[L8453]              havoc __ret_0_approve;
[L8454]              havoc _spender_s913;
[L8455]              havoc _addedValue_s913;
[L8456]              havoc __ret_0_increaseApproval;
[L8457]              havoc _spender_s941;
[L8458]              havoc _subtractedValue_s941;
[L8459]              havoc __ret_0_decreaseApproval;
[L8460]              havoc __ret_0_paused;
[L8461]              havoc _maker_s564;
[L8462]              havoc __ret_0_getBlackListStatus;
[L8463]              havoc __ret_0_getOwner;
[L8464]              havoc arg1060_s0;
[L8465]              havoc __ret_0_isBlackListed;
[L8466]              havoc _evilUser_s594;
[L8467]              havoc _clearedUser_s612;
[L8468]              havoc _blackListedUser_s647;
[L8469]              havoc __ret_0_name;
[L8470]              havoc __ret_0_symbol;
[L8471]              havoc __ret_0_decimals;
[L8472]              havoc __ret_0_init_Supply;
[L8473]              havoc __ret_0_upgradedAddress;
[L8474]              havoc __ret_0_deprecated;
[L8475]              havoc _upgradedAddress_s961;
[L8476]              havoc tmpNow;
[L8477]              havoc gas;
[L8478]              assume gas > 4000000 && gas <= 8000000;
[L8479]              tmpNow := now;
[L8480]              havoc now;
[L8481]              assume now > tmpNow;
[L8482]              assume msgsender_MSG != null;
[L8483]              assume DType[msgsender_MSG] != Ownable;
[L8484]              assume DType[msgsender_MSG] != ERC20Basic;
[L8485]              assume DType[msgsender_MSG] != BasicToken;
[L8486]              assume DType[msgsender_MSG] != ERC20;
[L8487]              assume DType[msgsender_MSG] != StandardToken;
[L8488]              assume DType[msgsender_MSG] != Pausable;
[L8489]              assume DType[msgsender_MSG] != UpgradedStandardToken;
[L8490]              assume DType[msgsender_MSG] != BlackList;
[L8491]              assume DType[msgsender_MSG] != AlitaToken;
[L8492]              assume DType[msgsender_MSG] != SafeMath;
[L8493]              Alloc[msgsender_MSG] := true;
[L8494]  COND TRUE   choice == 26
[L8495]              gas := gas - 21000;
[L8496]  COND FALSE  !(gas >= 0)
[L8673]  RET         call CorralChoice_AlitaToken(this);

[2020-11-24 23:46:01,289 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 23:46:01,289 INFO  L82        PathProgramCache]: Analyzing trace with hash -1252856621, now seen corresponding path program 1 times
[2020-11-24 23:46:01,290 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 23:46:01,303 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 23:46:01,493 INFO  L134       CoverageAnalysis]: Checked inductivity of 449 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 449 trivial. 0 not checked.
[2020-11-24 23:46:01,494 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 23:46:01,494 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [14] imperfect sequences [] total 14
[2020-11-24 23:46:01,494 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 23:46:01,494 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 15 interpolants.
[2020-11-24 23:46:01,494 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=29, Invalid=181, Unknown=0, NotChecked=0, Total=210
[2020-11-24 23:46:01,494 INFO  L87              Difference]: Start difference. First operand 8908 states and 11222 transitions. cyclomatic complexity: 2382 Second operand 15 states.
[2020-11-24 23:46:04,215 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 23:46:04,215 INFO  L93              Difference]: Finished difference Result 9494 states and 12623 transitions.
[2020-11-24 23:46:04,215 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 17 states. 
[2020-11-24 23:46:04,215 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 9494 states and 12623 transitions.
[2020-11-24 23:46:04,250 INFO  L131   ngComponentsAnalysis]: Automaton has 34 accepting balls. 216
[2020-11-24 23:46:04,293 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 9494 states to 9494 states and 12623 transitions.
[2020-11-24 23:46:04,293 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 3043
[2020-11-24 23:46:04,295 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 3043
[2020-11-24 23:46:04,295 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 9494 states and 12623 transitions.
[2020-11-24 23:46:04,308 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 23:46:04,308 INFO  L728         BuchiCegarLoop]: Abstraction has 9494 states and 12623 transitions.
[2020-11-24 23:46:04,311 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 9494 states and 12623 transitions.
[2020-11-24 23:46:04,382 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 9494 to 8960.
[2020-11-24 23:46:04,382 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 8960 states.
[2020-11-24 23:46:04,403 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 8960 states to 8960 states and 11616 transitions.
[2020-11-24 23:46:04,403 INFO  L751         BuchiCegarLoop]: Abstraction has 8960 states and 11616 transitions.
[2020-11-24 23:46:04,403 INFO  L631         BuchiCegarLoop]: Abstraction has 8960 states and 11616 transitions.
[2020-11-24 23:46:04,403 INFO  L445         BuchiCegarLoop]: ======== Iteration 13============
[2020-11-24 23:46:04,403 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 8960 states and 11616 transitions.
[2020-11-24 23:46:04,415 INFO  L131   ngComponentsAnalysis]: Automaton has 21 accepting balls. 164
[2020-11-24 23:46:04,415 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 23:46:04,415 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 23:46:04,417 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [8, 8, 8, 8, 8, 8, 8, 8, 8, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 23:46:04,417 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 success_transfer_AlitaToken0 := false;
[L2]                 call_transfer_AlitaToken0 := false;
[L2]     CALL        call main();
[L8663]              assume null == 0;
[L8664]  CALL        call this := FreshRefGenerator__success();
[L3958]              havoc newRef;
[L3959]              assume Alloc[newRef] == false;
[L3960]              Alloc[newRef] := true;
[L3961]              assume newRef != null;
[L8664]  RET         call this := FreshRefGenerator__success();
[L8665]              assume now >= 0;
[L8666]              assume DType[this] == AlitaToken;
[L8667]              assume msgvalue_MSG == 0;
[L8668]              gas := gas - 53000;
[L8669]  CALL        call AlitaToken_AlitaToken(this, msgsender_MSG, msgvalue_MSG);
[L1981]              havoc __exception;
[L1982]              revert := false;
[L1983]  COND FALSE  !(__exception)
[L2012]  CALL        call AlitaToken_AlitaToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4942]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3994]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3977]              assume msgsender_MSG != null;
[L3978]              Balance[this] := 0;
[L3979]              owner_Ownable[this] := null;
[L3981]              owner_Ownable[this] := msgsender_MSG;
[L3994]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3995]  COND FALSE  !(revert)
[L4942]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4943]  COND FALSE  !(revert)
[L4946]  CALL        call Pausable_Pausable__success(this, msgsender_MSG, msgvalue_MSG);
[L4531]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3994]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3977]              assume msgsender_MSG != null;
[L3978]              Balance[this] := 0;
[L3979]              owner_Ownable[this] := null;
[L3981]              owner_Ownable[this] := msgsender_MSG;
[L3994]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3995]  COND FALSE  !(revert)
[L4531]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4532]  COND FALSE  !(revert)
[L4535]  CALL        call Pausable_Pausable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4511]              assume msgsender_MSG != null;
[L4512]              Balance[this] := 0;
[L4513]              paused_Pausable[this] := false;
[L4535]  RET         call Pausable_Pausable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4536]  COND FALSE  !(revert)
[L4946]  RET         call Pausable_Pausable__success(this, msgsender_MSG, msgvalue_MSG);
[L4947]  COND FALSE  !(revert)
[L4950]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4064]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4049]              assume msgsender_MSG != null;
[L4050]              Balance[this] := 0;
[L4064]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  COND FALSE  !(revert)
[L4950]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4951]  COND FALSE  !(revert)
[L4954]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4235]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4064]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4049]              assume msgsender_MSG != null;
[L4050]              Balance[this] := 0;
[L4064]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  COND FALSE  !(revert)
[L4235]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4236]  COND FALSE  !(revert)
[L4239]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4216]              assume msgsender_MSG != null;
[L4217]              Balance[this] := 0;
[L4239]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4240]  COND FALSE  !(revert)
[L4954]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4955]  COND FALSE  !(revert)
[L4958]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4106]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4064]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4049]              assume msgsender_MSG != null;
[L4050]              Balance[this] := 0;
[L4064]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  COND FALSE  !(revert)
[L4106]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4107]  COND FALSE  !(revert)
[L4110]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4084]              assume msgsender_MSG != null;
[L4085]              Balance[this] := 0;
[L4086]              balances_BasicToken[this] := zeroRefintArr();
[L4087]              sum_balances0[this] := 0;
[L4088]              totalSupply__BasicToken[this] := 0;
[L4110]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4111]  COND FALSE  !(revert)
[L4958]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4959]  COND FALSE  !(revert)
[L4962]  CALL        call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4287]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4064]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4049]              assume msgsender_MSG != null;
[L4050]              Balance[this] := 0;
[L4064]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  COND FALSE  !(revert)
[L4287]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4288]  COND FALSE  !(revert)
[L4291]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4235]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4064]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4049]              assume msgsender_MSG != null;
[L4050]              Balance[this] := 0;
[L4064]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  COND FALSE  !(revert)
[L4235]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4236]  COND FALSE  !(revert)
[L4239]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4216]              assume msgsender_MSG != null;
[L4217]              Balance[this] := 0;
[L4239]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4240]  COND FALSE  !(revert)
[L4291]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4292]  COND FALSE  !(revert)
[L4295]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4106]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4064]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4049]              assume msgsender_MSG != null;
[L4050]              Balance[this] := 0;
[L4064]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  COND FALSE  !(revert)
[L4106]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4107]  COND FALSE  !(revert)
[L4110]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4084]              assume msgsender_MSG != null;
[L4085]              Balance[this] := 0;
[L4086]              balances_BasicToken[this] := zeroRefintArr();
[L4087]              sum_balances0[this] := 0;
[L4088]              totalSupply__BasicToken[this] := 0;
[L4110]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4111]  COND FALSE  !(revert)
[L4295]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4296]  COND FALSE  !(revert)
[L4299]  CALL        call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4258]              assume msgsender_MSG != null;
[L4259]              Balance[this] := 0;
[L4260]              allowed_StandardToken[this] := zeroRefRefintArr();
[L4261]              sum_allowed1[this] := 0;
[L4299]  RET         call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4300]  COND FALSE  !(revert)
[L4962]  RET         call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4963]  COND FALSE  !(revert)
[L4966]  CALL        call BlackList_BlackList__success(this, msgsender_MSG, msgvalue_MSG);
[L4711]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3994]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3977]              assume msgsender_MSG != null;
[L3978]              Balance[this] := 0;
[L3979]              owner_Ownable[this] := null;
[L3981]              owner_Ownable[this] := msgsender_MSG;
[L3994]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3995]  COND FALSE  !(revert)
[L4711]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4712]  COND FALSE  !(revert)
[L4715]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4064]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4049]              assume msgsender_MSG != null;
[L4050]              Balance[this] := 0;
[L4064]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  COND FALSE  !(revert)
[L4715]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4716]  COND FALSE  !(revert)
[L4719]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4106]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4064]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4049]              assume msgsender_MSG != null;
[L4050]              Balance[this] := 0;
[L4064]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  COND FALSE  !(revert)
[L4106]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4107]  COND FALSE  !(revert)
[L4110]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4084]              assume msgsender_MSG != null;
[L4085]              Balance[this] := 0;
[L4086]              balances_BasicToken[this] := zeroRefintArr();
[L4087]              sum_balances0[this] := 0;
[L4088]              totalSupply__BasicToken[this] := 0;
[L4110]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4111]  COND FALSE  !(revert)
[L4719]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4720]  COND FALSE  !(revert)
[L4723]  CALL        call BlackList_BlackList_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4683]              assume msgsender_MSG != null;
[L4684]              Balance[this] := 0;
[L4685]              isBlackListed_BlackList[this] := zeroRefboolArr();
[L4723]  RET         call BlackList_BlackList_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4724]  COND FALSE  !(revert)
[L4966]  RET         call BlackList_BlackList__success(this, msgsender_MSG, msgvalue_MSG);
[L4967]  COND FALSE  !(revert)
[L4970]  CALL        call AlitaToken_AlitaToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4888]              assume msgsender_MSG != null;
[L4889]              Balance[this] := 0;
[L4890]              name_AlitaToken[this] := -1110093910;
[L4891]              symbol_AlitaToken[this] := 1234648092;
[L4892]              decimals_AlitaToken[this] := 18;
[L4893]              init_Supply_AlitaToken[this] := 1000000000 * (1000000000000000000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L4894]              upgradedAddress_AlitaToken[this] := null;
[L4895]              deprecated_AlitaToken[this] := false;
[L4897]              totalSupply__BasicToken[this] := init_Supply_AlitaToken[this];
[L4898]              sum_balances0[this] := sum_balances0[this] - balances_BasicToken[this][msgsender_MSG];
[L4899]              balances_BasicToken[this][msgsender_MSG] := totalSupply__BasicToken[this];
[L4900]              sum_balances0[this] := sum_balances0[this] + balances_BasicToken[this][msgsender_MSG];
[L4901]              deprecated_AlitaToken[this] := false;
[L4970]  RET         call AlitaToken_AlitaToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4971]  COND FALSE  !(revert)
[L2012]  RET         call AlitaToken_AlitaToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2013]              assume !revert && gas >= 0;
[L8669]  RET         call AlitaToken_AlitaToken(this, msgsender_MSG, msgvalue_MSG);
[L8670]              assume !revert && gas >= 0;
[L8673]  CALL        call CorralChoice_AlitaToken(this);
[L8433]              havoc msgsender_MSG;
[L8434]              havoc msgvalue_MSG;
[L8435]              havoc choice;
[L8436]              havoc __ret_0_owner;
[L8437]              havoc newOwner_s42;
[L8438]              havoc __ret_0_totalSupply;
[L8439]              havoc _owner_s166;
[L8440]              havoc __ret_0_balanceOf;
[L8441]              havoc _to_s754;
[L8442]              havoc _value_s754;
[L8443]              havoc __ret_0_transfer;
[L8444]              havoc _owner_s885;
[L8445]              havoc _spender_s885;
[L8446]              havoc __ret_0_allowance;
[L8447]              havoc _from_s812;
[L8448]              havoc _to_s812;
[L8449]              havoc _value_s812;
[L8450]              havoc __ret_0_transferFrom;
[L8451]              havoc _spender_s857;
[L8452]              havoc _value_s857;
[L8453]              havoc __ret_0_approve;
[L8454]              havoc _spender_s913;
[L8455]              havoc _addedValue_s913;
[L8456]              havoc __ret_0_increaseApproval;
[L8457]              havoc _spender_s941;
[L8458]              havoc _subtractedValue_s941;
[L8459]              havoc __ret_0_decreaseApproval;
[L8460]              havoc __ret_0_paused;
[L8461]              havoc _maker_s564;
[L8462]              havoc __ret_0_getBlackListStatus;
[L8463]              havoc __ret_0_getOwner;
[L8464]              havoc arg1060_s0;
[L8465]              havoc __ret_0_isBlackListed;
[L8466]              havoc _evilUser_s594;
[L8467]              havoc _clearedUser_s612;
[L8468]              havoc _blackListedUser_s647;
[L8469]              havoc __ret_0_name;
[L8470]              havoc __ret_0_symbol;
[L8471]              havoc __ret_0_decimals;
[L8472]              havoc __ret_0_init_Supply;
[L8473]              havoc __ret_0_upgradedAddress;
[L8474]              havoc __ret_0_deprecated;
[L8475]              havoc _upgradedAddress_s961;
[L8476]              havoc tmpNow;
[L8477]              havoc gas;
[L8478]              assume gas > 4000000 && gas <= 8000000;
[L8479]              tmpNow := now;
[L8480]              havoc now;
[L8481]              assume now > tmpNow;
[L8482]              assume msgsender_MSG != null;
[L8483]              assume DType[msgsender_MSG] != Ownable;
[L8484]              assume DType[msgsender_MSG] != ERC20Basic;
[L8485]              assume DType[msgsender_MSG] != BasicToken;
[L8486]              assume DType[msgsender_MSG] != ERC20;
[L8487]              assume DType[msgsender_MSG] != StandardToken;
[L8488]              assume DType[msgsender_MSG] != Pausable;
[L8489]              assume DType[msgsender_MSG] != UpgradedStandardToken;
[L8490]              assume DType[msgsender_MSG] != BlackList;
[L8491]              assume DType[msgsender_MSG] != AlitaToken;
[L8492]              assume DType[msgsender_MSG] != SafeMath;
[L8493]              Alloc[msgsender_MSG] := true;
[L8494]  COND FALSE  !(choice == 26)
[L8500]  COND FALSE  !(choice == 25)
[L8506]  COND FALSE  !(choice == 24)
[L8512]  COND FALSE  !(choice == 23)
[L8518]  COND FALSE  !(choice == 22)
[L8525]  COND FALSE  !(choice == 21)
[L8531]  COND FALSE  !(choice == 20)
[L8538]  COND FALSE  !(choice == 19)
[L8545]  COND FALSE  !(choice == 18)
[L8552]  COND FALSE  !(choice == 17)
[L8559]  COND FALSE  !(choice == 16)
[L8565]  COND FALSE  !(choice == 15)
[L8571]  COND FALSE  !(choice == 14)
[L8577]  COND FALSE  !(choice == 13)
[L8583]  COND FALSE  !(choice == 12)
[L8589]  COND FALSE  !(choice == 11)
[L8595]  COND TRUE   choice == 10
[L8596]              gas := gas - 21000;
[L8597]  COND TRUE   gas >= 0
[L8598]              assume msgvalue_MSG == 0;
[L8599]  CALL        call addBlackList~address_BlackList(this, msgsender_MSG, msgvalue_MSG, _evilUser_s594);
[L1681]              havoc __exception;
[L1682]              revert := false;
[L1683]  COND FALSE  !(__exception)
[L1712]  CALL        call addBlackList~address_BlackList__success(this, msgsender_MSG, msgvalue_MSG, _evilUser_s594);
[L4764]  CALL        call onlyOwner_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L7432]  COND FALSE  !(!(msgsender_MSG == owner_Ownable[this]))
[L4764]  RET         call onlyOwner_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L4765]  COND FALSE  !(revert)
[L4768]              isBlackListed_BlackList[this][_evilUser_s594] := true;
[L4769]              assert { :EventEmitted "AddedBlackList_BlackList" } true;
[L1712]  RET         call addBlackList~address_BlackList__success(this, msgsender_MSG, msgvalue_MSG, _evilUser_s594);
[L1713]              assume !revert && gas >= 0;
[L8599]  RET         call addBlackList~address_BlackList(this, msgsender_MSG, msgvalue_MSG, _evilUser_s594);
[L8673]  RET         call CorralChoice_AlitaToken(this);
[L8673]  CALL        call CorralChoice_AlitaToken(this);
[L8433]              havoc msgsender_MSG;
[L8434]              havoc msgvalue_MSG;
[L8435]              havoc choice;
[L8436]              havoc __ret_0_owner;
[L8437]              havoc newOwner_s42;
[L8438]              havoc __ret_0_totalSupply;
[L8439]              havoc _owner_s166;
[L8440]              havoc __ret_0_balanceOf;
[L8441]              havoc _to_s754;
[L8442]              havoc _value_s754;
[L8443]              havoc __ret_0_transfer;
[L8444]              havoc _owner_s885;
[L8445]              havoc _spender_s885;
[L8446]              havoc __ret_0_allowance;
[L8447]              havoc _from_s812;
[L8448]              havoc _to_s812;
[L8449]              havoc _value_s812;
[L8450]              havoc __ret_0_transferFrom;
[L8451]              havoc _spender_s857;
[L8452]              havoc _value_s857;
[L8453]              havoc __ret_0_approve;
[L8454]              havoc _spender_s913;
[L8455]              havoc _addedValue_s913;
[L8456]              havoc __ret_0_increaseApproval;
[L8457]              havoc _spender_s941;
[L8458]              havoc _subtractedValue_s941;
[L8459]              havoc __ret_0_decreaseApproval;
[L8460]              havoc __ret_0_paused;
[L8461]              havoc _maker_s564;
[L8462]              havoc __ret_0_getBlackListStatus;
[L8463]              havoc __ret_0_getOwner;
[L8464]              havoc arg1060_s0;
[L8465]              havoc __ret_0_isBlackListed;
[L8466]              havoc _evilUser_s594;
[L8467]              havoc _clearedUser_s612;
[L8468]              havoc _blackListedUser_s647;
[L8469]              havoc __ret_0_name;
[L8470]              havoc __ret_0_symbol;
[L8471]              havoc __ret_0_decimals;
[L8472]              havoc __ret_0_init_Supply;
[L8473]              havoc __ret_0_upgradedAddress;
[L8474]              havoc __ret_0_deprecated;
[L8475]              havoc _upgradedAddress_s961;
[L8476]              havoc tmpNow;
[L8477]              havoc gas;
[L8478]              assume gas > 4000000 && gas <= 8000000;
[L8479]              tmpNow := now;
[L8480]              havoc now;
[L8481]              assume now > tmpNow;
[L8482]              assume msgsender_MSG != null;
[L8483]              assume DType[msgsender_MSG] != Ownable;
[L8484]              assume DType[msgsender_MSG] != ERC20Basic;
[L8485]              assume DType[msgsender_MSG] != BasicToken;
[L8486]              assume DType[msgsender_MSG] != ERC20;
[L8487]              assume DType[msgsender_MSG] != StandardToken;
[L8488]              assume DType[msgsender_MSG] != Pausable;
[L8489]              assume DType[msgsender_MSG] != UpgradedStandardToken;
[L8490]              assume DType[msgsender_MSG] != BlackList;
[L8491]              assume DType[msgsender_MSG] != AlitaToken;
[L8492]              assume DType[msgsender_MSG] != SafeMath;
[L8493]              Alloc[msgsender_MSG] := true;
[L8494]  COND FALSE  !(choice == 26)
[L8500]  COND FALSE  !(choice == 25)
[L8506]  COND FALSE  !(choice == 24)
[L8512]  COND FALSE  !(choice == 23)
[L8518]  COND TRUE   choice == 22
[L8519]              gas := gas - 21000;
[L8520]  COND TRUE   gas >= 0
[L8521]              assume _value_s754 >= 0 && _value_s754 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L8522]              assume msgvalue_MSG == 0;
[L8523]  CALL        call __ret_0_transfer := transfer~address~uint256_AlitaToken(this, msgsender_MSG, msgvalue_MSG, _to_s754, _value_s754);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == _to_s754 && _value_s754 <= balances_BasicToken[this][msgsender_MSG]) && _value_s754 >= 0) && _value_s754 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BasicToken[this][_to_s754] >= 0) && balances_BasicToken[this][_to_s754] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BasicToken[this][msgsender_MSG] >= 0) && balances_BasicToken[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_AlitaToken0 := true;
[L2]                 call_transfer_AlitaToken0 := false;
[L2]                 revert := revert_hold;
[L2049]              havoc __exception;
[L2050]              revert := false;
[L2051]  COND TRUE   __exception
[L2052]              __tmp__Balance := Balance;
[L2053]              __tmp__DType := DType;
[L2054]              __tmp__Alloc := Alloc;
[L2055]              __tmp__balance_ADDR := balance_ADDR;
[L2056]              __tmp__M_Ref_int := M_Ref_int;
[L2057]              __tmp__sum_balances0 := sum_balances0;
[L2058]              __tmp__alloc_allowed_StandardToken_lvl0 := alloc_allowed_StandardToken_lvl0;
[L2059]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L2060]              __tmp__sum_allowed1 := sum_allowed1;
[L2061]              __tmp__M_Ref_bool := M_Ref_bool;
[L2062]              __tmp__sum_isBlackListed2 := sum_isBlackListed2;
[L2063]              __tmp__Length := Length;
[L2064]              __tmp__now := now;
[L2065]              __tmp__owner_Ownable := owner_Ownable;
[L2066]              __tmp__balances_BasicToken := balances_BasicToken;
[L2067]              __tmp__totalSupply__BasicToken := totalSupply__BasicToken;
[L2068]              __tmp__allowed_StandardToken := allowed_StandardToken;
[L2069]              __tmp__paused_Pausable := paused_Pausable;
[L2070]              __tmp__isBlackListed_BlackList := isBlackListed_BlackList;
[L2071]              __tmp__name_AlitaToken := name_AlitaToken;
[L2072]              __tmp__symbol_AlitaToken := symbol_AlitaToken;
[L2073]              __tmp__decimals_AlitaToken := decimals_AlitaToken;
[L2074]              __tmp__init_Supply_AlitaToken := init_Supply_AlitaToken;
[L2075]              __tmp__upgradedAddress_AlitaToken := upgradedAddress_AlitaToken;
[L2076]              __tmp__deprecated_AlitaToken := deprecated_AlitaToken;
[L2077]  CALL        call __ret_0_ := transfer~address~uint256_AlitaToken__fail(this, msgsender_MSG, msgvalue_MSG, _to_s754, _value_s754);
[L4983]  CALL        call whenNotPaused_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L7440]  COND FALSE  !(!!__tmp__paused_Pausable[this])
[L4983]  RET         call whenNotPaused_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L4984]  COND FALSE  !(revert)
[L4987]  COND TRUE   !!__tmp__isBlackListed_BlackList[this][msgsender_MSG]
[L4988]              revert := true;
[L2077]  RET         call __ret_0_ := transfer~address~uint256_AlitaToken__fail(this, msgsender_MSG, msgvalue_MSG, _to_s754, _value_s754);
[L2078]              assume revert || gas < 0;
[L8523]  RET         call __ret_0_transfer := transfer~address~uint256_AlitaToken(this, msgsender_MSG, msgvalue_MSG, _to_s754, _value_s754);
[L8673]  RET         call CorralChoice_AlitaToken(this);

Loop:
[L8673]  CALL        call CorralChoice_AlitaToken(this);
[L8433]              havoc msgsender_MSG;
[L8434]              havoc msgvalue_MSG;
[L8435]              havoc choice;
[L8436]              havoc __ret_0_owner;
[L8437]              havoc newOwner_s42;
[L8438]              havoc __ret_0_totalSupply;
[L8439]              havoc _owner_s166;
[L8440]              havoc __ret_0_balanceOf;
[L8441]              havoc _to_s754;
[L8442]              havoc _value_s754;
[L8443]              havoc __ret_0_transfer;
[L8444]              havoc _owner_s885;
[L8445]              havoc _spender_s885;
[L8446]              havoc __ret_0_allowance;
[L8447]              havoc _from_s812;
[L8448]              havoc _to_s812;
[L8449]              havoc _value_s812;
[L8450]              havoc __ret_0_transferFrom;
[L8451]              havoc _spender_s857;
[L8452]              havoc _value_s857;
[L8453]              havoc __ret_0_approve;
[L8454]              havoc _spender_s913;
[L8455]              havoc _addedValue_s913;
[L8456]              havoc __ret_0_increaseApproval;
[L8457]              havoc _spender_s941;
[L8458]              havoc _subtractedValue_s941;
[L8459]              havoc __ret_0_decreaseApproval;
[L8460]              havoc __ret_0_paused;
[L8461]              havoc _maker_s564;
[L8462]              havoc __ret_0_getBlackListStatus;
[L8463]              havoc __ret_0_getOwner;
[L8464]              havoc arg1060_s0;
[L8465]              havoc __ret_0_isBlackListed;
[L8466]              havoc _evilUser_s594;
[L8467]              havoc _clearedUser_s612;
[L8468]              havoc _blackListedUser_s647;
[L8469]              havoc __ret_0_name;
[L8470]              havoc __ret_0_symbol;
[L8471]              havoc __ret_0_decimals;
[L8472]              havoc __ret_0_init_Supply;
[L8473]              havoc __ret_0_upgradedAddress;
[L8474]              havoc __ret_0_deprecated;
[L8475]              havoc _upgradedAddress_s961;
[L8476]              havoc tmpNow;
[L8477]              havoc gas;
[L8478]              assume gas > 4000000 && gas <= 8000000;
[L8479]              tmpNow := now;
[L8480]              havoc now;
[L8481]              assume now > tmpNow;
[L8482]              assume msgsender_MSG != null;
[L8483]              assume DType[msgsender_MSG] != Ownable;
[L8484]              assume DType[msgsender_MSG] != ERC20Basic;
[L8485]              assume DType[msgsender_MSG] != BasicToken;
[L8486]              assume DType[msgsender_MSG] != ERC20;
[L8487]              assume DType[msgsender_MSG] != StandardToken;
[L8488]              assume DType[msgsender_MSG] != Pausable;
[L8489]              assume DType[msgsender_MSG] != UpgradedStandardToken;
[L8490]              assume DType[msgsender_MSG] != BlackList;
[L8491]              assume DType[msgsender_MSG] != AlitaToken;
[L8492]              assume DType[msgsender_MSG] != SafeMath;
[L8493]              Alloc[msgsender_MSG] := true;
[L8494]  COND FALSE  !(choice == 26)
[L8500]  COND TRUE   choice == 25
[L8501]              gas := gas - 21000;
[L8502]  COND TRUE   gas >= 0
[L8503]              assume msgvalue_MSG == 0;
[L8504]  CALL        call transferOwnership~address_Ownable(this, msgsender_MSG, msgvalue_MSG, newOwner_s42);
[L152]               havoc __exception;
[L153]               revert := false;
[L154]   COND TRUE   __exception
[L155]               __tmp__Balance := Balance;
[L156]               __tmp__DType := DType;
[L157]               __tmp__Alloc := Alloc;
[L158]               __tmp__balance_ADDR := balance_ADDR;
[L159]               __tmp__M_Ref_int := M_Ref_int;
[L160]               __tmp__sum_balances0 := sum_balances0;
[L161]               __tmp__alloc_allowed_StandardToken_lvl0 := alloc_allowed_StandardToken_lvl0;
[L162]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L163]               __tmp__sum_allowed1 := sum_allowed1;
[L164]               __tmp__M_Ref_bool := M_Ref_bool;
[L165]               __tmp__sum_isBlackListed2 := sum_isBlackListed2;
[L166]               __tmp__Length := Length;
[L167]               __tmp__now := now;
[L168]               __tmp__owner_Ownable := owner_Ownable;
[L169]               __tmp__balances_BasicToken := balances_BasicToken;
[L170]               __tmp__totalSupply__BasicToken := totalSupply__BasicToken;
[L171]               __tmp__allowed_StandardToken := allowed_StandardToken;
[L172]               __tmp__paused_Pausable := paused_Pausable;
[L173]               __tmp__isBlackListed_BlackList := isBlackListed_BlackList;
[L174]               __tmp__name_AlitaToken := name_AlitaToken;
[L175]               __tmp__symbol_AlitaToken := symbol_AlitaToken;
[L176]               __tmp__decimals_AlitaToken := decimals_AlitaToken;
[L177]               __tmp__init_Supply_AlitaToken := init_Supply_AlitaToken;
[L178]               __tmp__upgradedAddress_AlitaToken := upgradedAddress_AlitaToken;
[L179]               __tmp__deprecated_AlitaToken := deprecated_AlitaToken;
[L180]   CALL        call transferOwnership~address_Ownable__fail(this, msgsender_MSG, msgvalue_MSG, newOwner_s42);
[L4003]  CALL        call onlyOwner_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L7424]  COND TRUE   !(msgsender_MSG == __tmp__owner_Ownable[this])
[L7425]              revert := true;
[L4003]  RET         call onlyOwner_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L4004]  COND TRUE   revert
[L180]   RET         call transferOwnership~address_Ownable__fail(this, msgsender_MSG, msgvalue_MSG, newOwner_s42);
[L181]               assume revert || gas < 0;
[L8504]  RET         call transferOwnership~address_Ownable(this, msgsender_MSG, msgvalue_MSG, newOwner_s42);
[L8673]  RET         call CorralChoice_AlitaToken(this);

[2020-11-24 23:46:04,421 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 23:46:04,421 INFO  L82        PathProgramCache]: Analyzing trace with hash 1332687264, now seen corresponding path program 1 times
[2020-11-24 23:46:04,421 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 23:46:04,435 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 23:46:04,449 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 23:46:04,543 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 23:46:04,543 INFO  L82        PathProgramCache]: Analyzing trace with hash 1524613199, now seen corresponding path program 1 times
[2020-11-24 23:46:04,543 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 23:46:04,547 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 23:46:04,550 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 23:46:04,559 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 23:46:04,559 INFO  L82        PathProgramCache]: Analyzing trace with hash 1303293102, now seen corresponding path program 1 times
[2020-11-24 23:46:04,560 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 23:46:04,576 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 23:46:04,594 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 41 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 41 to 79
Garbage collection #2: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #3: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #4: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #5: 619 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 619 to 1237
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #1: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #2: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #3: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #4: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #5: 1327 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 1327 to 2647
Garbage collection #6: 2647 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 2647 to 5281
Garbage collection #1: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #2: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #3: 317 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 317 to 631
Garbage collection #4: 631 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 631 to 1259
Garbage collection #5: 1259 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 1259 to 2503
Garbage collection #6: 2503 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 2503 to 5003
Garbage collection #1: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #2: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #3: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #4: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #5: 787 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 787 to 1571
Garbage collection #1: 137 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 137 to 271
Garbage collection #2: 271 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 271 to 541
Garbage collection #3: 541 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 541 to 1069
Garbage collection #4: 1069 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1069 to 2137
Garbage collection #5: 2137 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2137 to 4273
Garbage collection #6: 4273 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 4273 to 8543
Garbage collection #7: 8543 nodes / 0 free / 0.002s / 0.003s total
Resizing node table from 8543 to 17077
Garbage collection #1: 107 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 107 to 211
Garbage collection #2: 211 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 211 to 421
Garbage collection #3: 421 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 421 to 839
Garbage collection #4: 839 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 839 to 1669
Garbage collection #5: 1669 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1669 to 3331
Garbage collection #6: 3331 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3331 to 6661
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 883 to 1759
[2020-11-24 23:46:05,128 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 7 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 7 to 13
Garbage collection #2: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 7 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 7 to 13
Garbage collection #2: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #4: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #5: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 7 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 7 to 13
Garbage collection #2: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #5: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #5: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
[2020-11-24 23:46:05,887 WARN  L188               SmtUtils]: Spent 422.00 ms on a formula simplification. DAG size of input: 271 DAG size of output: 257
Garbage collection #1: 97 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3019 to 6037
Garbage collection #1: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #2: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #3: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #4: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #5: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #1: 41 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 41 to 79
Garbage collection #2: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #3: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #4: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #5: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #1: 107 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 107 to 211
Garbage collection #2: 211 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 211 to 421
Garbage collection #3: 421 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 421 to 839
Garbage collection #4: 839 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 839 to 1669
Garbage collection #5: 1669 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1669 to 3331
Garbage collection #6: 3331 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3331 to 6661
[2020-11-24 23:46:06,194 WARN  L188               SmtUtils]: Spent 134.00 ms on a formula simplification that was a NOOP. DAG size: 255
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 67 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 67 to 131
Garbage collection #2: 131 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 131 to 257
Garbage collection #3: 257 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 257 to 509
Garbage collection #4: 509 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 509 to 1013
Garbage collection #5: 1013 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1013 to 2017
Garbage collection #6: 2017 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 2017 to 4027
Garbage collection #1: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #2: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #3: 317 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 317 to 631
Garbage collection #4: 631 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 631 to 1259
Garbage collection #5: 1259 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1259 to 2503
Garbage collection #6: 2503 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2503 to 5003
Garbage collection #1: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #2: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #3: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #4: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #5: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #1: 137 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 137 to 271
Garbage collection #2: 271 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 271 to 541
Garbage collection #3: 541 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 541 to 1069
Garbage collection #4: 1069 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1069 to 2137
Garbage collection #5: 2137 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2137 to 4273
Garbage collection #6: 4273 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4273 to 8543
Garbage collection #7: 8543 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 8543 to 17077
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #6: 1759 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1759 to 3517
Garbage collection #1: 47 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 47 to 89
Garbage collection #2: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #3: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #4: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #5: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #6: 1327 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1327 to 2647
Garbage collection #1: 109 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 109 to 211
Garbage collection #2: 211 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 211 to 421
Garbage collection #3: 421 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 421 to 839
Garbage collection #4: 839 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 839 to 1669
Garbage collection #5: 1669 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1669 to 3331
Garbage collection #6: 3331 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3331 to 6661
[2020-11-24 23:46:06,778 WARN  L188               SmtUtils]: Spent 122.00 ms on a formula simplification that was a NOOP. DAG size: 217
[2020-11-24 23:46:07,112 WARN  L188               SmtUtils]: Spent 332.00 ms on a formula simplification. DAG size of input: 288 DAG size of output: 273
Garbage collection #1: 101 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 101 to 199
Garbage collection #2: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #3: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #4: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #5: 1571 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1571 to 3137
Garbage collection #6: 3137 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3137 to 6271
Garbage collection #7: 6271 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 6271 to 12541
Garbage collection #1: 67 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 67 to 131
Garbage collection #2: 131 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 131 to 257
Garbage collection #3: 257 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 257 to 509
Garbage collection #4: 509 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 509 to 1013
Garbage collection #5: 1013 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1013 to 2017
Garbage collection #6: 2017 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2017 to 4027
Garbage collection #7: 4027 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4027 to 8053
[2020-11-24 23:46:07,311 WARN  L188               SmtUtils]: Spent 100.00 ms on a formula simplification that was a NOOP. DAG size: 360
Garbage collection #1: 149 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 149 to 293
Garbage collection #2: 293 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 293 to 577
Garbage collection #3: 577 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 577 to 1153
Garbage collection #4: 1153 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1153 to 2297
Garbage collection #5: 2297 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2297 to 4591
Garbage collection #6: 4591 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4591 to 9181
Garbage collection #7: 9181 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 9181 to 18353
[2020-11-24 23:46:07,446 WARN  L188               SmtUtils]: Spent 130.00 ms on a formula simplification that was a NOOP. DAG size: 291
[2020-11-24 23:46:08,957 WARN  L188               SmtUtils]: Spent 1.51 s on a formula simplification. DAG size of input: 730 DAG size of output: 720
Garbage collection #1: 307 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 307 to 613
Garbage collection #2: 613 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 613 to 1223
Garbage collection #3: 1223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1223 to 2441
Garbage collection #4: 2441 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2441 to 4877
Garbage collection #5: 4877 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4877 to 9749
Garbage collection #6: 9749 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 9749 to 19489
Garbage collection #7: 19489 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19489 to 38977
Garbage collection #8: 38977 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 38977 to 77951
Garbage collection #1: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #2: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #3: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #4: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #5: 1327 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1327 to 2647
Garbage collection #6: 2647 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2647 to 5281
[2020-11-24 23:46:09,168 WARN  L188               SmtUtils]: Spent 184.00 ms on a formula simplification. DAG size of input: 246 DAG size of output: 244
[2020-11-24 23:46:09,354 WARN  L188               SmtUtils]: Spent 165.00 ms on a formula simplification that was a NOOP. DAG size: 366
Garbage collection #1: 131 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 131 to 257
Garbage collection #2: 257 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 257 to 509
Garbage collection #3: 509 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 509 to 1013
Garbage collection #4: 1013 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1013 to 2017
Garbage collection #5: 2017 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2017 to 4027
Garbage collection #6: 4027 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4027 to 8053
Garbage collection #7: 8053 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 8053 to 16103
Garbage collection #1: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #2: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #3: 317 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 317 to 631
Garbage collection #4: 631 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 631 to 1259
Garbage collection #5: 1259 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1259 to 2503
Garbage collection #6: 2503 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2503 to 5003
[2020-11-24 23:46:09,758 WARN  L188               SmtUtils]: Spent 321.00 ms on a formula simplification. DAG size of input: 368 DAG size of output: 367
Garbage collection #1: 131 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 131 to 257
Garbage collection #2: 257 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 257 to 509
Garbage collection #3: 509 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 509 to 1013
Garbage collection #4: 1013 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 1013 to 2017
Garbage collection #5: 2017 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 2017 to 4027
Garbage collection #6: 4027 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 4027 to 8053
Garbage collection #7: 8053 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 8053 to 16103
Garbage collection #1: 127 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 127 to 251
Garbage collection #2: 251 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 251 to 499
Garbage collection #3: 499 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 499 to 997
Garbage collection #4: 997 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 997 to 1993
Garbage collection #5: 1993 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1993 to 3967
Garbage collection #6: 3967 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3967 to 7933
Garbage collection #7: 7933 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 7933 to 15859
[2020-11-24 23:46:09,905 WARN  L188               SmtUtils]: Spent 143.00 ms on a formula simplification that was a NOOP. DAG size: 363
[2020-11-24 23:46:09,921 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 23:46:09,941 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 23:46:09,955 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 24.11 11:46:09 BasicIcfg
[2020-11-24 23:46:09,955 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-24 23:46:09,956 INFO  L168              Benchmark]: Toolchain (without parser) took 35121.80 ms. Allocated memory was 1.0 GB in the beginning and 2.9 GB in the end (delta: 1.9 GB). Free memory was 924.5 MB in the beginning and 2.5 GB in the end (delta: -1.6 GB). Peak memory consumption was 2.0 GB. Max. memory is 15.3 GB.
[2020-11-24 23:46:09,956 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.15 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-24 23:46:09,957 INFO  L168              Benchmark]: Boogie Preprocessor took 120.85 ms. Allocated memory is still 1.0 GB. Free memory was 924.5 MB in the beginning and 908.4 MB in the end (delta: 16.1 MB). Peak memory consumption was 16.1 MB. Max. memory is 15.3 GB.
[2020-11-24 23:46:09,957 INFO  L168              Benchmark]: UtopiaSpecLang took 74.98 ms. Allocated memory is still 1.0 GB. Free memory was 908.4 MB in the beginning and 897.6 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
[2020-11-24 23:46:09,958 INFO  L168              Benchmark]: Boogie Printer took 21.82 ms. Allocated memory is still 1.0 GB. Free memory was 897.6 MB in the beginning and 892.1 MB in the end (delta: 5.5 MB). Peak memory consumption was 5.5 MB. Max. memory is 15.3 GB.
[2020-11-24 23:46:09,958 INFO  L168              Benchmark]: RCFGBuilder took 1039.67 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 60.3 MB). Free memory was 892.1 MB in the beginning and 925.9 MB in the end (delta: -33.8 MB). Peak memory consumption was 180.9 MB. Max. memory is 15.3 GB.
[2020-11-24 23:46:09,959 INFO  L168              Benchmark]: UtopiaLTL2Aut took 32.57 ms. Allocated memory is still 1.1 GB. Free memory was 925.9 MB in the beginning and 919.1 MB in the end (delta: 6.8 MB). Peak memory consumption was 6.8 MB. Max. memory is 15.3 GB.
[2020-11-24 23:46:09,959 INFO  L168              Benchmark]: BÃ¼chi Program Product took 2210.93 ms. Allocated memory was 1.1 GB in the beginning and 1.3 GB in the end (delta: 194.5 MB). Free memory was 919.1 MB in the beginning and 997.2 MB in the end (delta: -78.1 MB). Peak memory consumption was 500.1 MB. Max. memory is 15.3 GB.
[2020-11-24 23:46:09,959 INFO  L168              Benchmark]: BlockEncodingV2 took 199.98 ms. Allocated memory is still 1.3 GB. Free memory was 997.2 MB in the beginning and 889.6 MB in the end (delta: 107.6 MB). Peak memory consumption was 107.6 MB. Max. memory is 15.3 GB.
[2020-11-24 23:46:09,959 INFO  L168              Benchmark]: BuchiAutomizer took 31418.15 ms. Allocated memory was 1.3 GB in the beginning and 2.9 GB in the end (delta: 1.7 GB). Free memory was 889.6 MB in the beginning and 2.5 GB in the end (delta: -1.6 GB). Peak memory consumption was 1.7 GB. Max. memory is 15.3 GB.
[2020-11-24 23:46:09,962 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    7746 locations, 13814 edges
  - StatisticsResult: Encoded RCFG
    7640 locations, 13531 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.15 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 120.85 ms. Allocated memory is still 1.0 GB. Free memory was 924.5 MB in the beginning and 908.4 MB in the end (delta: 16.1 MB). Peak memory consumption was 16.1 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 74.98 ms. Allocated memory is still 1.0 GB. Free memory was 908.4 MB in the beginning and 897.6 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 21.82 ms. Allocated memory is still 1.0 GB. Free memory was 897.6 MB in the beginning and 892.1 MB in the end (delta: 5.5 MB). Peak memory consumption was 5.5 MB. Max. memory is 15.3 GB.
 * RCFGBuilder took 1039.67 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 60.3 MB). Free memory was 892.1 MB in the beginning and 925.9 MB in the end (delta: -33.8 MB). Peak memory consumption was 180.9 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 32.57 ms. Allocated memory is still 1.1 GB. Free memory was 925.9 MB in the beginning and 919.1 MB in the end (delta: 6.8 MB). Peak memory consumption was 6.8 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 2210.93 ms. Allocated memory was 1.1 GB in the beginning and 1.3 GB in the end (delta: 194.5 MB). Free memory was 919.1 MB in the beginning and 997.2 MB in the end (delta: -78.1 MB). Peak memory consumption was 500.1 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 199.98 ms. Allocated memory is still 1.3 GB. Free memory was 997.2 MB in the beginning and 889.6 MB in the end (delta: 107.6 MB). Peak memory consumption was 107.6 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 31418.15 ms. Allocated memory was 1.3 GB in the beginning and 2.9 GB in the end (delta: 1.7 GB). Free memory was 889.6 MB in the beginning and 2.5 GB in the end (delta: -1.6 GB). Peak memory consumption was 1.7 GB. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    3159 locations, 4233 edges
  - StatisticsResult: BuchiProgram size
    7746 locations, 13814 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 12 terminating modules (12 trivial, 0 deterministic, 0 nondeterministic) and one nonterminating remainder module.12 modules have a trivial ranking function, the largest among these consists of 27 locations. The remainder module has 8960 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 31.3s and 13 iterations.  TraceHistogramMax:8. Analysis of lassos took 7.6s. Construction of modules took 16.3s. BÃ¼chi inclusion checks took 5.0s. Highest rank in rank-based complementation 0. Minimization of det autom 12. Minimization of nondet autom 0. Automata minimization 1.0s AutomataMinimizationTime, 12 MinimizatonAttempts, 7838 StatesRemovedByMinimization, 11 NontrivialMinimizations. Non-live state removal took 0.7s Buchi closure took 0.0s. Biggest automaton had 11052 states and ocurred in iteration 7.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 56991 SDtfs, 63390 SDslu, 115558 SDs, 0 SdLazy, 225222 SolverSat, 10786 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 16.3s Time	LassoAnalysisResults: nont1 unkn0 SFLI0 SFLT0 conc0 concLT0 SILN0 SILU12 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - TransactionCounterexample: Violation of LTL property LTL
    Found an infinite, lasso-shaped execution that violates the LTL property LTL.
Stem:
address(1000000000000000000000000014) = (new AlitaToken)({from : 1000000000000000000000000019});
[L1981]              havoc __exception;
[L1982]              revert := false;
[L1983]  COND FALSE  !(__exception)
[L2012]  CALL        call AlitaToken_AlitaToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4942]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3994]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3977]              assume msgsender_MSG != null;
[L3978]              Balance[this] := 0;
[L3979]              owner_Ownable[this] := null;
[L3981]              owner_Ownable[this] := msgsender_MSG;
[L3994]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3995]  COND FALSE  !(revert)
[L4942]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4943]  COND FALSE  !(revert)
[L4946]  CALL        call Pausable_Pausable__success(this, msgsender_MSG, msgvalue_MSG);
[L4531]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3994]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3977]              assume msgsender_MSG != null;
[L3978]              Balance[this] := 0;
[L3979]              owner_Ownable[this] := null;
[L3981]              owner_Ownable[this] := msgsender_MSG;
[L3994]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3995]  COND FALSE  !(revert)
[L4531]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4532]  COND FALSE  !(revert)
[L4535]  CALL        call Pausable_Pausable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4511]              assume msgsender_MSG != null;
[L4512]              Balance[this] := 0;
[L4513]              paused_Pausable[this] := false;
[L4535]  RET         call Pausable_Pausable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4536]  COND FALSE  !(revert)
[L4946]  RET         call Pausable_Pausable__success(this, msgsender_MSG, msgvalue_MSG);
[L4947]  COND FALSE  !(revert)
[L4950]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4064]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4049]              assume msgsender_MSG != null;
[L4050]              Balance[this] := 0;
[L4064]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  COND FALSE  !(revert)
[L4950]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4951]  COND FALSE  !(revert)
[L4954]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4235]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4064]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4049]              assume msgsender_MSG != null;
[L4050]              Balance[this] := 0;
[L4064]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  COND FALSE  !(revert)
[L4235]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4236]  COND FALSE  !(revert)
[L4239]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4216]              assume msgsender_MSG != null;
[L4217]              Balance[this] := 0;
[L4239]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4240]  COND FALSE  !(revert)
[L4954]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4955]  COND FALSE  !(revert)
[L4958]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4106]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4064]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4049]              assume msgsender_MSG != null;
[L4050]              Balance[this] := 0;
[L4064]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  COND FALSE  !(revert)
[L4106]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4107]  COND FALSE  !(revert)
[L4110]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4084]              assume msgsender_MSG != null;
[L4085]              Balance[this] := 0;
[L4086]              balances_BasicToken[this] := zeroRefintArr();
[L4087]              sum_balances0[this] := 0;
[L4088]              totalSupply__BasicToken[this] := 0;
[L4110]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4111]  COND FALSE  !(revert)
[L4958]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4959]  COND FALSE  !(revert)
[L4962]  CALL        call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4287]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4064]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4049]              assume msgsender_MSG != null;
[L4050]              Balance[this] := 0;
[L4064]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  COND FALSE  !(revert)
[L4287]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4288]  COND FALSE  !(revert)
[L4291]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4235]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4064]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4049]              assume msgsender_MSG != null;
[L4050]              Balance[this] := 0;
[L4064]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  COND FALSE  !(revert)
[L4235]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4236]  COND FALSE  !(revert)
[L4239]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4216]              assume msgsender_MSG != null;
[L4217]              Balance[this] := 0;
[L4239]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4240]  COND FALSE  !(revert)
[L4291]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4292]  COND FALSE  !(revert)
[L4295]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4106]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4064]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4049]              assume msgsender_MSG != null;
[L4050]              Balance[this] := 0;
[L4064]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  COND FALSE  !(revert)
[L4106]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4107]  COND FALSE  !(revert)
[L4110]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4084]              assume msgsender_MSG != null;
[L4085]              Balance[this] := 0;
[L4086]              balances_BasicToken[this] := zeroRefintArr();
[L4087]              sum_balances0[this] := 0;
[L4088]              totalSupply__BasicToken[this] := 0;
[L4110]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4111]  COND FALSE  !(revert)
[L4295]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4296]  COND FALSE  !(revert)
[L4299]  CALL        call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4258]              assume msgsender_MSG != null;
[L4259]              Balance[this] := 0;
[L4260]              allowed_StandardToken[this] := zeroRefRefintArr();
[L4261]              sum_allowed1[this] := 0;
[L4299]  RET         call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4300]  COND FALSE  !(revert)
[L4962]  RET         call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4963]  COND FALSE  !(revert)
[L4966]  CALL        call BlackList_BlackList__success(this, msgsender_MSG, msgvalue_MSG);
[L4711]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3994]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3977]              assume msgsender_MSG != null;
[L3978]              Balance[this] := 0;
[L3979]              owner_Ownable[this] := null;
[L3981]              owner_Ownable[this] := msgsender_MSG;
[L3994]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3995]  COND FALSE  !(revert)
[L4711]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4712]  COND FALSE  !(revert)
[L4715]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4064]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4049]              assume msgsender_MSG != null;
[L4050]              Balance[this] := 0;
[L4064]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  COND FALSE  !(revert)
[L4715]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4716]  COND FALSE  !(revert)
[L4719]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4106]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4064]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4049]              assume msgsender_MSG != null;
[L4050]              Balance[this] := 0;
[L4064]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4065]  COND FALSE  !(revert)
[L4106]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4107]  COND FALSE  !(revert)
[L4110]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4084]              assume msgsender_MSG != null;
[L4085]              Balance[this] := 0;
[L4086]              balances_BasicToken[this] := zeroRefintArr();
[L4087]              sum_balances0[this] := 0;
[L4088]              totalSupply__BasicToken[this] := 0;
[L4110]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4111]  COND FALSE  !(revert)
[L4719]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4720]  COND FALSE  !(revert)
[L4723]  CALL        call BlackList_BlackList_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4683]              assume msgsender_MSG != null;
[L4684]              Balance[this] := 0;
[L4685]              isBlackListed_BlackList[this] := zeroRefboolArr();
[L4723]  RET         call BlackList_BlackList_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4724]  COND FALSE  !(revert)
[L4966]  RET         call BlackList_BlackList__success(this, msgsender_MSG, msgvalue_MSG);
[L4967]  COND FALSE  !(revert)
[L4970]  CALL        call AlitaToken_AlitaToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4888]              assume msgsender_MSG != null;
[L4889]              Balance[this] := 0;
[L4890]              name_AlitaToken[this] := -1110093910;
[L4891]              symbol_AlitaToken[this] := 1234648092;
[L4892]              decimals_AlitaToken[this] := 18;
[L4893]              init_Supply_AlitaToken[this] := 1000000000 * (1000000000000000000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L4894]              upgradedAddress_AlitaToken[this] := null;
[L4895]              deprecated_AlitaToken[this] := false;
[L4897]              totalSupply__BasicToken[this] := init_Supply_AlitaToken[this];
[L4898]              sum_balances0[this] := sum_balances0[this] - balances_BasicToken[this][msgsender_MSG];
[L4899]              balances_BasicToken[this][msgsender_MSG] := totalSupply__BasicToken[this];
[L4900]              sum_balances0[this] := sum_balances0[this] + balances_BasicToken[this][msgsender_MSG];
[L4901]              deprecated_AlitaToken[this] := false;
[L4970]  RET         call AlitaToken_AlitaToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4971]  COND FALSE  !(revert)
[L2012]  RET         call AlitaToken_AlitaToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2013]              assume !revert && gas >= 0;
[L8669]  RET         call AlitaToken_AlitaToken(this, msgsender_MSG, msgvalue_MSG);
BlackList(1000000000000000000000000014).addBlackList~address.gas(3979002)({from : 1000000000000000000000000019, _evilUser : 1000000000000000000000000019});
[L1681]              havoc __exception;
[L1682]              revert := false;
[L1683]  COND FALSE  !(__exception)
[L1712]  CALL        call addBlackList~address_BlackList__success(this, msgsender_MSG, msgvalue_MSG, _evilUser_s594);
[L4764]  CALL        call onlyOwner_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L7432]  COND FALSE  !(!(msgsender_MSG == owner_Ownable[this]))
[L4764]  RET         call onlyOwner_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L4765]  COND FALSE  !(revert)
[L4768]              isBlackListed_BlackList[this][_evilUser_s594] := true;
[L4769]              assert { :EventEmitted "AddedBlackList_BlackList" } true;
[L1712]  RET         call addBlackList~address_BlackList__success(this, msgsender_MSG, msgvalue_MSG, _evilUser_s594);
[L1713]              assume !revert && gas >= 0;
[L8599]  RET         call addBlackList~address_BlackList(this, msgsender_MSG, msgvalue_MSG, _evilUser_s594);
AlitaToken(1000000000000000000000000014).transfer~address~uint256.gas(3979003)({from : 1000000000000000000000000019, _to : 1000000000000000000000000019, _value : 0});
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == _to_s754 && _value_s754 <= balances_BasicToken[this][msgsender_MSG]) && _value_s754 >= 0) && _value_s754 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BasicToken[this][_to_s754] >= 0) && balances_BasicToken[this][_to_s754] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BasicToken[this][msgsender_MSG] >= 0) && balances_BasicToken[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_AlitaToken0 := true;
[L2]                 call_transfer_AlitaToken0 := false;
[L2]                 revert := revert_hold;
[L2049]              havoc __exception;
[L2050]              revert := false;
[L2051]  COND TRUE   __exception
[L2052]              __tmp__Balance := Balance;
[L2053]              __tmp__DType := DType;
[L2054]              __tmp__Alloc := Alloc;
[L2055]              __tmp__balance_ADDR := balance_ADDR;
[L2056]              __tmp__M_Ref_int := M_Ref_int;
[L2057]              __tmp__sum_balances0 := sum_balances0;
[L2058]              __tmp__alloc_allowed_StandardToken_lvl0 := alloc_allowed_StandardToken_lvl0;
[L2059]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L2060]              __tmp__sum_allowed1 := sum_allowed1;
[L2061]              __tmp__M_Ref_bool := M_Ref_bool;
[L2062]              __tmp__sum_isBlackListed2 := sum_isBlackListed2;
[L2063]              __tmp__Length := Length;
[L2064]              __tmp__now := now;
[L2065]              __tmp__owner_Ownable := owner_Ownable;
[L2066]              __tmp__balances_BasicToken := balances_BasicToken;
[L2067]              __tmp__totalSupply__BasicToken := totalSupply__BasicToken;
[L2068]              __tmp__allowed_StandardToken := allowed_StandardToken;
[L2069]              __tmp__paused_Pausable := paused_Pausable;
[L2070]              __tmp__isBlackListed_BlackList := isBlackListed_BlackList;
[L2071]              __tmp__name_AlitaToken := name_AlitaToken;
[L2072]              __tmp__symbol_AlitaToken := symbol_AlitaToken;
[L2073]              __tmp__decimals_AlitaToken := decimals_AlitaToken;
[L2074]              __tmp__init_Supply_AlitaToken := init_Supply_AlitaToken;
[L2075]              __tmp__upgradedAddress_AlitaToken := upgradedAddress_AlitaToken;
[L2076]              __tmp__deprecated_AlitaToken := deprecated_AlitaToken;
[L2077]  CALL        call __ret_0_ := transfer~address~uint256_AlitaToken__fail(this, msgsender_MSG, msgvalue_MSG, _to_s754, _value_s754);
[L4983]  CALL        call whenNotPaused_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L7440]  COND FALSE  !(!!__tmp__paused_Pausable[this])
[L4983]  RET         call whenNotPaused_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L4984]  COND FALSE  !(revert)
[L4987]  COND TRUE   !!__tmp__isBlackListed_BlackList[this][msgsender_MSG]
[L4988]              revert := true;
[L2077]  RET         call __ret_0_ := transfer~address~uint256_AlitaToken__fail(this, msgsender_MSG, msgvalue_MSG, _to_s754, _value_s754);
[L2078]              assume revert || gas < 0;
[L8523]  RET         call __ret_0_transfer := transfer~address~uint256_AlitaToken(this, msgsender_MSG, msgvalue_MSG, _to_s754, _value_s754);

Loop:
Ownable(1000000000000000000000000014).transferOwnership~address.gas(3979001)({from : 1000000000000000000000000012, newOwner : 1000000000000000000000000002});
[L152]              havoc __exception;
[L153]              revert := false;
[L154]   COND TRUE  __exception
[L155]              __tmp__Balance := Balance;
[L156]              __tmp__DType := DType;
[L157]              __tmp__Alloc := Alloc;
[L158]              __tmp__balance_ADDR := balance_ADDR;
[L159]              __tmp__M_Ref_int := M_Ref_int;
[L160]              __tmp__sum_balances0 := sum_balances0;
[L161]              __tmp__alloc_allowed_StandardToken_lvl0 := alloc_allowed_StandardToken_lvl0;
[L162]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L163]              __tmp__sum_allowed1 := sum_allowed1;
[L164]              __tmp__M_Ref_bool := M_Ref_bool;
[L165]              __tmp__sum_isBlackListed2 := sum_isBlackListed2;
[L166]              __tmp__Length := Length;
[L167]              __tmp__now := now;
[L168]              __tmp__owner_Ownable := owner_Ownable;
[L169]              __tmp__balances_BasicToken := balances_BasicToken;
[L170]              __tmp__totalSupply__BasicToken := totalSupply__BasicToken;
[L171]              __tmp__allowed_StandardToken := allowed_StandardToken;
[L172]              __tmp__paused_Pausable := paused_Pausable;
[L173]              __tmp__isBlackListed_BlackList := isBlackListed_BlackList;
[L174]              __tmp__name_AlitaToken := name_AlitaToken;
[L175]              __tmp__symbol_AlitaToken := symbol_AlitaToken;
[L176]              __tmp__decimals_AlitaToken := decimals_AlitaToken;
[L177]              __tmp__init_Supply_AlitaToken := init_Supply_AlitaToken;
[L178]              __tmp__upgradedAddress_AlitaToken := upgradedAddress_AlitaToken;
[L179]              __tmp__deprecated_AlitaToken := deprecated_AlitaToken;
[L180]   CALL       call transferOwnership~address_Ownable__fail(this, msgsender_MSG, msgvalue_MSG, newOwner_s42);
[L4003]  CALL       call onlyOwner_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L7424]  COND TRUE  !(msgsender_MSG == __tmp__owner_Ownable[this])
[L7425]             revert := true;
[L4003]  RET        call onlyOwner_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L4004]  COND TRUE  revert
[L180]   RET        call transferOwnership~address_Ownable__fail(this, msgsender_MSG, msgvalue_MSG, newOwner_s42);
[L181]              assume revert || gas < 0;
[L8504]  RET        call transferOwnership~address_Ownable(this, msgsender_MSG, msgvalue_MSG, newOwner_s42);

End of lasso representation.
RESULT: Ultimate could not prove your program: Toolchain returned no result.
Received shutdown request...
