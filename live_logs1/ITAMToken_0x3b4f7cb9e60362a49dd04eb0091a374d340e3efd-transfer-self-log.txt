This is Ultimate 0.1.24-f1553f5-m
[2020-11-25 18:35:40,373 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-25 18:35:40,374 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-25 18:35:40,384 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-25 18:35:40,384 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-25 18:35:40,385 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-25 18:35:40,386 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-25 18:35:40,387 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-25 18:35:40,388 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-25 18:35:40,389 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-25 18:35:40,390 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-25 18:35:40,390 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-25 18:35:40,390 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-25 18:35:40,391 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-25 18:35:40,392 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-25 18:35:40,392 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-25 18:35:40,393 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-25 18:35:40,394 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-25 18:35:40,395 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-25 18:35:40,396 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-25 18:35:40,397 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-25 18:35:40,398 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-25 18:35:40,400 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-25 18:35:40,400 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-25 18:35:40,400 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-25 18:35:40,400 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-25 18:35:40,401 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-25 18:35:40,401 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-25 18:35:40,401 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-25 18:35:40,402 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-25 18:35:40,402 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-25 18:35:40,403 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-25 18:35:40,403 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-25 18:35:40,404 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-25 18:35:40,404 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-25 18:35:40,404 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-25 18:35:40,405 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-25 18:35:40,405 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-25 18:35:40,405 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-25 18:35:40,406 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-25 18:35:40,406 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-25 18:35:40,406 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-25 18:35:40,414 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-25 18:35:40,414 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-25 18:35:40,415 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-25 18:35:40,415 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-25 18:35:40,415 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-25 18:35:40,415 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-25 18:35:40,415 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-25 18:35:40,415 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-25 18:35:40,415 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-25 18:35:40,415 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-25 18:35:40,416 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-25 18:35:40,416 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-25 18:35:40,416 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-25 18:35:40,416 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-25 18:35:40,416 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-25 18:35:40,416 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-25 18:35:40,416 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-25 18:35:40,416 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-25 18:35:40,417 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-25 18:35:40,417 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-25 18:35:40,417 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-25 18:35:40,417 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-25 18:35:40,417 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-25 18:35:40,417 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-25 18:35:40,417 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-25 18:35:40,417 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-25 18:35:40,437 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-25 18:35:40,446 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-25 18:35:40,448 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-25 18:35:40,449 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-25 18:35:40,449 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-25 18:35:40,450 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/ITAMToken_0x3b4f7cb9e60362a49dd04eb0091a374d340e3efd_transfer-self.bpl
[2020-11-25 18:35:40,450 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/ITAMToken_0x3b4f7cb9e60362a49dd04eb0091a374d340e3efd_transfer-self.bpl'
[2020-11-25 18:35:40,613 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-25 18:35:40,614 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-25 18:35:40,614 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-25 18:35:40,614 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-25 18:35:40,614 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-25 18:35:40,630 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "ITAMToken_0x3b4f7cb9e60362a49dd04eb0091a374d340e3efd_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 06:35:40" (1/1) ...
[2020-11-25 18:35:40,632 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "ITAMToken_0x3b4f7cb9e60362a49dd04eb0091a374d340e3efd_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 06:35:40" (1/1) ...
[2020-11-25 18:35:40,674 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "ITAMToken_0x3b4f7cb9e60362a49dd04eb0091a374d340e3efd_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 06:35:40" (1/1) ...
[2020-11-25 18:35:40,675 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "ITAMToken_0x3b4f7cb9e60362a49dd04eb0091a374d340e3efd_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 06:35:40" (1/1) ...
[2020-11-25 18:35:40,714 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "ITAMToken_0x3b4f7cb9e60362a49dd04eb0091a374d340e3efd_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 06:35:40" (1/1) ...
[2020-11-25 18:35:40,737 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "ITAMToken_0x3b4f7cb9e60362a49dd04eb0091a374d340e3efd_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 06:35:40" (1/1) ...
[2020-11-25 18:35:40,755 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "ITAMToken_0x3b4f7cb9e60362a49dd04eb0091a374d340e3efd_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 06:35:40" (1/1) ...
[2020-11-25 18:35:40,776 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-25 18:35:40,777 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-25 18:35:40,777 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-25 18:35:40,780 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-25 18:35:40,784 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "ITAMToken_0x3b4f7cb9e60362a49dd04eb0091a374d340e3efd_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 06:35:40" (1/1) ...
[2020-11-25 18:35:40,828 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(ITAMToken.transfer(to, value), msg.sender == to && value <= _balances_ERC20[this][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][to] >= 0 && _balances_ERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][msg.sender] >= 0 &&  _balances_ERC20[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(ITAMToken.transfer(to, value), return == true && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this]) && _balances_ERC20[this] == old(_balances_ERC20[this]) && _allowed_ERC20[this] == old(_allowed_ERC20[this]) && name_ITAMToken[this] == old(name_ITAMToken[this]) && symbol_ITAMToken[this] == old(symbol_ITAMToken[this]) && decimals_ITAMToken[this] == old(decimals_ITAMToken[this]) && firstMaster_ITAMToken[this] == old(firstMaster_ITAMToken[this]) && secondMaster_ITAMToken[this] == old(secondMaster_ITAMToken[this]) && thirdMaster_ITAMToken[this] == old(thirdMaster_ITAMToken[this]) && decidedOwner_ITAMToken[this] == old(decidedOwner_ITAMToken[this]) && owner_ITAMToken[this] == old(owner_ITAMToken[this]) && gameMaster_ITAMToken[this] == old(gameMaster_ITAMToken[this]) && blackLists_ITAMToken[this] == old(blackLists_ITAMToken[this]) && unlockCount_ITAMToken[this] == old(unlockCount_ITAMToken[this]) && strategicSaleAddress_ITAMToken[this] == old(strategicSaleAddress_ITAMToken[this]) && strategicSaleReleaseCaps_ITAMToken[this] == old(strategicSaleReleaseCaps_ITAMToken[this]) && privateSaleAddress_ITAMToken[this] == old(privateSaleAddress_ITAMToken[this]) && privateSaleReleaseCaps_ITAMToken[this] == old(privateSaleReleaseCaps_ITAMToken[this]) && publicSaleAddress_ITAMToken[this] == old(publicSaleAddress_ITAMToken[this]) && publicSaleReleaseCap_ITAMToken[this] == old(publicSaleReleaseCap_ITAMToken[this]) && teamAddress_ITAMToken[this] == old(teamAddress_ITAMToken[this]) && teamReleaseCaps_ITAMToken[this] == old(teamReleaseCaps_ITAMToken[this]) && advisorAddress_ITAMToken[this] == old(advisorAddress_ITAMToken[this]) && advisorReleaseCaps_ITAMToken[this] == old(advisorReleaseCaps_ITAMToken[this]) && marketingAddress_ITAMToken[this] == old(marketingAddress_ITAMToken[this]) && marketingReleaseCaps_ITAMToken[this] == old(marketingReleaseCaps_ITAMToken[this]) && ecoAddress_ITAMToken[this] == old(ecoAddress_ITAMToken[this]) && ecoReleaseCaps_ITAMToken[this] == old(ecoReleaseCaps_ITAMToken[this]) && inAppAddress_ITAMToken[this] == old(inAppAddress_ITAMToken[this]) && erc20_ITAMToken[this] == old(erc20_ITAMToken[this]) && items_ITAMToken[this] == old(items_ITAMToken[this]) && _cap_ERC20Capped[this] == old(_cap_ERC20Capped[this]))))
[2020-11-25 18:35:40,834 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(ITAMToken.transfer(to, value), msg.sender == to && value <= _balances_ERC20[this][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][to] >= 0 && _balances_ERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][msg.sender] >= 0 &&  _balances_ERC20[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(ITAMToken.transfer(to, value), return == true && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this]) && _balances_ERC20[this] == old(_balances_ERC20[this]) && _allowed_ERC20[this] == old(_allowed_ERC20[this]) && name_ITAMToken[this] == old(name_ITAMToken[this]) && symbol_ITAMToken[this] == old(symbol_ITAMToken[this]) && decimals_ITAMToken[this] == old(decimals_ITAMToken[this]) && firstMaster_ITAMToken[this] == old(firstMaster_ITAMToken[this]) && secondMaster_ITAMToken[this] == old(secondMaster_ITAMToken[this]) && thirdMaster_ITAMToken[this] == old(thirdMaster_ITAMToken[this]) && decidedOwner_ITAMToken[this] == old(decidedOwner_ITAMToken[this]) && owner_ITAMToken[this] == old(owner_ITAMToken[this]) && gameMaster_ITAMToken[this] == old(gameMaster_ITAMToken[this]) && blackLists_ITAMToken[this] == old(blackLists_ITAMToken[this]) && unlockCount_ITAMToken[this] == old(unlockCount_ITAMToken[this]) && strategicSaleAddress_ITAMToken[this] == old(strategicSaleAddress_ITAMToken[this]) && strategicSaleReleaseCaps_ITAMToken[this] == old(strategicSaleReleaseCaps_ITAMToken[this]) && privateSaleAddress_ITAMToken[this] == old(privateSaleAddress_ITAMToken[this]) && privateSaleReleaseCaps_ITAMToken[this] == old(privateSaleReleaseCaps_ITAMToken[this]) && publicSaleAddress_ITAMToken[this] == old(publicSaleAddress_ITAMToken[this]) && publicSaleReleaseCap_ITAMToken[this] == old(publicSaleReleaseCap_ITAMToken[this]) && teamAddress_ITAMToken[this] == old(teamAddress_ITAMToken[this]) && teamReleaseCaps_ITAMToken[this] == old(teamReleaseCaps_ITAMToken[this]) && advisorAddress_ITAMToken[this] == old(advisorAddress_ITAMToken[this]) && advisorReleaseCaps_ITAMToken[this] == old(advisorReleaseCaps_ITAMToken[this]) && marketingAddress_ITAMToken[this] == old(marketingAddress_ITAMToken[this]) && marketingReleaseCaps_ITAMToken[this] == old(marketingReleaseCaps_ITAMToken[this]) && ecoAddress_ITAMToken[this] == old(ecoAddress_ITAMToken[this]) && ecoReleaseCaps_ITAMToken[this] == old(ecoReleaseCaps_ITAMToken[this]) && inAppAddress_ITAMToken[this] == old(inAppAddress_ITAMToken[this]) && erc20_ITAMToken[this] == old(erc20_ITAMToken[this]) && items_ITAMToken[this] == old(items_ITAMToken[this]) && _cap_ERC20Capped[this] == old(_cap_ERC20Capped[this]))))
[2020-11-25 18:35:40,843 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(ITAMToken.transfer(to, value), msg.sender == to && value <= _balances_ERC20[this][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][to] >= 0 && _balances_ERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][msg.sender] >= 0 &&  _balances_ERC20[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(ITAMToken.transfer(to, value), return == true && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this]) && _balances_ERC20[this] == old(_balances_ERC20[this]) && _allowed_ERC20[this] == old(_allowed_ERC20[this]) && name_ITAMToken[this] == old(name_ITAMToken[this]) && symbol_ITAMToken[this] == old(symbol_ITAMToken[this]) && decimals_ITAMToken[this] == old(decimals_ITAMToken[this]) && firstMaster_ITAMToken[this] == old(firstMaster_ITAMToken[this]) && secondMaster_ITAMToken[this] == old(secondMaster_ITAMToken[this]) && thirdMaster_ITAMToken[this] == old(thirdMaster_ITAMToken[this]) && decidedOwner_ITAMToken[this] == old(decidedOwner_ITAMToken[this]) && owner_ITAMToken[this] == old(owner_ITAMToken[this]) && gameMaster_ITAMToken[this] == old(gameMaster_ITAMToken[this]) && blackLists_ITAMToken[this] == old(blackLists_ITAMToken[this]) && unlockCount_ITAMToken[this] == old(unlockCount_ITAMToken[this]) && strategicSaleAddress_ITAMToken[this] == old(strategicSaleAddress_ITAMToken[this]) && strategicSaleReleaseCaps_ITAMToken[this] == old(strategicSaleReleaseCaps_ITAMToken[this]) && privateSaleAddress_ITAMToken[this] == old(privateSaleAddress_ITAMToken[this]) && privateSaleReleaseCaps_ITAMToken[this] == old(privateSaleReleaseCaps_ITAMToken[this]) && publicSaleAddress_ITAMToken[this] == old(publicSaleAddress_ITAMToken[this]) && publicSaleReleaseCap_ITAMToken[this] == old(publicSaleReleaseCap_ITAMToken[this]) && teamAddress_ITAMToken[this] == old(teamAddress_ITAMToken[this]) && teamReleaseCaps_ITAMToken[this] == old(teamReleaseCaps_ITAMToken[this]) && advisorAddress_ITAMToken[this] == old(advisorAddress_ITAMToken[this]) && advisorReleaseCaps_ITAMToken[this] == old(advisorReleaseCaps_ITAMToken[this]) && marketingAddress_ITAMToken[this] == old(marketingAddress_ITAMToken[this]) && marketingReleaseCaps_ITAMToken[this] == old(marketingReleaseCaps_ITAMToken[this]) && ecoAddress_ITAMToken[this] == old(ecoAddress_ITAMToken[this]) && ecoReleaseCaps_ITAMToken[this] == old(ecoReleaseCaps_ITAMToken[this]) && inAppAddress_ITAMToken[this] == old(inAppAddress_ITAMToken[this]) && erc20_ITAMToken[this] == old(erc20_ITAMToken[this]) && items_ITAMToken[this] == old(items_ITAMToken[this]) && _cap_ERC20Capped[this] == old(_cap_ERC20Capped[this]))))
[2020-11-25 18:35:40,851 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( msg.sender==_to_s941 && _value_s941<=_balances_ERC20[this][msg.sender] ) && _value_s941>=0 ) && _value_s941<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && _balances_ERC20[this][_to_s941]>=0 ) && _balances_ERC20[this][_to_s941]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && _balances_ERC20[this][msg.sender]>=0 ) && _balances_ERC20[this][msg.sender]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ITAMToken>],IdentifierExpression[_to_s941,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ITAMToken>]],BinaryExpression[COMPLEQ,IdentifierExpression[_value_s941,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ITAMToken>],ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ITAMToken>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ITAMToken>]]]]],BinaryExpression[COMPGEQ,IdentifierExpression[_value_s941,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ITAMToken>],IntegerLiteral[0]]],BinaryExpression[COMPLT,IdentifierExpression[_value_s941,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ITAMToken>],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ITAMToken>]]],[IdentifierExpression[_to_s941,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ITAMToken>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ITAMToken>]]],[IdentifierExpression[_to_s941,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ITAMToken>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ITAMToken>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ITAMToken>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ITAMToken>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ITAMToken>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]]
[2020-11-25 18:35:40,858 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( __ret_0_==true && _totalSupply_ERC20[this]==( old(_totalSupply_ERC20[this]) ) ) && _balances_ERC20[this]==( old(_balances_ERC20[this]) ) ) && _allowed_ERC20[this]==( old(_allowed_ERC20[this]) ) ) && name_ITAMToken[this]==( old(name_ITAMToken[this]) ) ) && symbol_ITAMToken[this]==( old(symbol_ITAMToken[this]) ) ) && decimals_ITAMToken[this]==( old(decimals_ITAMToken[this]) ) ) && firstMaster_ITAMToken[this]==( old(firstMaster_ITAMToken[this]) ) ) && secondMaster_ITAMToken[this]==( old(secondMaster_ITAMToken[this]) ) ) && thirdMaster_ITAMToken[this]==( old(thirdMaster_ITAMToken[this]) ) ) && decidedOwner_ITAMToken[this]==( old(decidedOwner_ITAMToken[this]) ) ) && owner_ITAMToken[this]==( old(owner_ITAMToken[this]) ) ) && gameMaster_ITAMToken[this]==( old(gameMaster_ITAMToken[this]) ) ) && blackLists_ITAMToken[this]==( old(blackLists_ITAMToken[this]) ) ) && unlockCount_ITAMToken[this]==( old(unlockCount_ITAMToken[this]) ) ) && strategicSaleAddress_ITAMToken[this]==( old(strategicSaleAddress_ITAMToken[this]) ) ) && strategicSaleReleaseCaps_ITAMToken[this]==( old(strategicSaleReleaseCaps_ITAMToken[this]) ) ) && privateSaleAddress_ITAMToken[this]==( old(privateSaleAddress_ITAMToken[this]) ) ) && privateSaleReleaseCaps_ITAMToken[this]==( old(privateSaleReleaseCaps_ITAMToken[this]) ) ) && publicSaleAddress_ITAMToken[this]==( old(publicSaleAddress_ITAMToken[this]) ) ) && publicSaleReleaseCap_ITAMToken[this]==( old(publicSaleReleaseCap_ITAMToken[this]) ) ) && teamAddress_ITAMToken[this]==( old(teamAddress_ITAMToken[this]) ) ) && teamReleaseCaps_ITAMToken[this]==( old(teamReleaseCaps_ITAMToken[this]) ) ) && advisorAddress_ITAMToken[this]==( old(advisorAddress_ITAMToken[this]) ) ) && advisorReleaseCaps_ITAMToken[this]==( old(advisorReleaseCaps_ITAMToken[this]) ) ) && marketingAddress_ITAMToken[this]==( old(marketingAddress_ITAMToken[this]) ) ) && marketingReleaseCaps_ITAMToken[this]==( old(marketingReleaseCaps_ITAMToken[this]) ) ) && ecoAddress_ITAMToken[this]==( old(ecoAddress_ITAMToken[this]) ) ) && ecoReleaseCaps_ITAMToken[this]==( old(ecoReleaseCaps_ITAMToken[this]) ) ) && inAppAddress_ITAMToken[this]==( old(inAppAddress_ITAMToken[this]) ) ) && erc20_ITAMToken[this]==( old(erc20_ITAMToken[this]) ) ) && items_ITAMToken[this]==( old(items_ITAMToken[this]) ) ) && _cap_ERC20Capped[this]==( old(_cap_ERC20Capped[this]) ) ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[__ret_0_,<IMPLEMENTATION_OUTPARAM,transfer~address~uint256_ITAMToken>],BooleanLiteral[true]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_totalSupply_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ITAMToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_totalSupply_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ITAMToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ITAMToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ITAMToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_allowed_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ITAMToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_allowed_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ITAMToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[name_ITAMToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ITAMToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[name_ITAMToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ITAMToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[symbol_ITAMToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ITAMToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[symbol_ITAMToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ITAMToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[decimals_ITAMToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ITAMToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[decimals_ITAMToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ITAMToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[firstMaster_ITAMToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ITAMToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[firstMaster_ITAMToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ITAMToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[secondMaster_ITAMToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ITAMToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[secondMaster_ITAMToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ITAMToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[thirdMaster_ITAMToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ITAMToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[thirdMaster_ITAMToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ITAMToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[decidedOwner_ITAMToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ITAMToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[decidedOwner_ITAMToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ITAMToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[owner_ITAMToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ITAMToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[owner_ITAMToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ITAMToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[gameMaster_ITAMToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ITAMToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[gameMaster_ITAMToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ITAMToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[blackLists_ITAMToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ITAMToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[blackLists_ITAMToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ITAMToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[unlockCount_ITAMToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ITAMToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[unlockCount_ITAMToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ITAMToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[strategicSaleAddress_ITAMToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ITAMToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[strategicSaleAddress_ITAMToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ITAMToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[strategicSaleReleaseCaps_ITAMToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ITAMToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[strategicSaleReleaseCaps_ITAMToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ITAMToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[privateSaleAddress_ITAMToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ITAMToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[privateSaleAddress_ITAMToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ITAMToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[privateSaleReleaseCaps_ITAMToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ITAMToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[privateSaleReleaseCaps_ITAMToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ITAMToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[publicSaleAddress_ITAMToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ITAMToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[publicSaleAddress_ITAMToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ITAMToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[publicSaleReleaseCap_ITAMToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ITAMToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[publicSaleReleaseCap_ITAMToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ITAMToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[teamAddress_ITAMToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ITAMToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[teamAddress_ITAMToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ITAMToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[teamReleaseCaps_ITAMToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ITAMToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[teamReleaseCaps_ITAMToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ITAMToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[advisorAddress_ITAMToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ITAMToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[advisorAddress_ITAMToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ITAMToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[advisorReleaseCaps_ITAMToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ITAMToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[advisorReleaseCaps_ITAMToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ITAMToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[marketingAddress_ITAMToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ITAMToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[marketingAddress_ITAMToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ITAMToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[marketingReleaseCaps_ITAMToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ITAMToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[marketingReleaseCaps_ITAMToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ITAMToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[ecoAddress_ITAMToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ITAMToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[ecoAddress_ITAMToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ITAMToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[ecoReleaseCaps_ITAMToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ITAMToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[ecoReleaseCaps_ITAMToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ITAMToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[inAppAddress_ITAMToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ITAMToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[inAppAddress_ITAMToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ITAMToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[erc20_ITAMToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ITAMToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[erc20_ITAMToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ITAMToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[items_ITAMToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ITAMToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[items_ITAMToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ITAMToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_cap_ERC20Capped,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ITAMToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_cap_ERC20Capped,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ITAMToken>]]]]]]
[2020-11-25 18:35:40,866 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(ITAMToken.transfer(to, value), msg.sender == to && value <= _balances_ERC20[this][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][to] >= 0 && _balances_ERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][msg.sender] >= 0 &&  _balances_ERC20[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(ITAMToken.transfer(to, value), return == true && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this]) && _balances_ERC20[this] == old(_balances_ERC20[this]) && _allowed_ERC20[this] == old(_allowed_ERC20[this]) && name_ITAMToken[this] == old(name_ITAMToken[this]) && symbol_ITAMToken[this] == old(symbol_ITAMToken[this]) && decimals_ITAMToken[this] == old(decimals_ITAMToken[this]) && firstMaster_ITAMToken[this] == old(firstMaster_ITAMToken[this]) && secondMaster_ITAMToken[this] == old(secondMaster_ITAMToken[this]) && thirdMaster_ITAMToken[this] == old(thirdMaster_ITAMToken[this]) && decidedOwner_ITAMToken[this] == old(decidedOwner_ITAMToken[this]) && owner_ITAMToken[this] == old(owner_ITAMToken[this]) && gameMaster_ITAMToken[this] == old(gameMaster_ITAMToken[this]) && blackLists_ITAMToken[this] == old(blackLists_ITAMToken[this]) && unlockCount_ITAMToken[this] == old(unlockCount_ITAMToken[this]) && strategicSaleAddress_ITAMToken[this] == old(strategicSaleAddress_ITAMToken[this]) && strategicSaleReleaseCaps_ITAMToken[this] == old(strategicSaleReleaseCaps_ITAMToken[this]) && privateSaleAddress_ITAMToken[this] == old(privateSaleAddress_ITAMToken[this]) && privateSaleReleaseCaps_ITAMToken[this] == old(privateSaleReleaseCaps_ITAMToken[this]) && publicSaleAddress_ITAMToken[this] == old(publicSaleAddress_ITAMToken[this]) && publicSaleReleaseCap_ITAMToken[this] == old(publicSaleReleaseCap_ITAMToken[this]) && teamAddress_ITAMToken[this] == old(teamAddress_ITAMToken[this]) && teamReleaseCaps_ITAMToken[this] == old(teamReleaseCaps_ITAMToken[this]) && advisorAddress_ITAMToken[this] == old(advisorAddress_ITAMToken[this]) && advisorReleaseCaps_ITAMToken[this] == old(advisorReleaseCaps_ITAMToken[this]) && marketingAddress_ITAMToken[this] == old(marketingAddress_ITAMToken[this]) && marketingReleaseCaps_ITAMToken[this] == old(marketingReleaseCaps_ITAMToken[this]) && ecoAddress_ITAMToken[this] == old(ecoAddress_ITAMToken[this]) && ecoReleaseCaps_ITAMToken[this] == old(ecoReleaseCaps_ITAMToken[this]) && inAppAddress_ITAMToken[this] == old(inAppAddress_ITAMToken[this]) && erc20_ITAMToken[this] == old(erc20_ITAMToken[this]) && items_ITAMToken[this] == old(items_ITAMToken[this]) && _cap_ERC20Capped[this] == old(_cap_ERC20Capped[this]))))
[2020-11-25 18:35:40,867 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_transfer_ITAMToken0) ==> ( <>AP(success_transfer_ITAMToken0) ) ) )
Executed UtopiaSpecLang
[2020-11-25 18:35:40,892 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 06:35:40 PropertyContainer
[2020-11-25 18:35:40,893 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-25 18:35:40,893 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-25 18:35:40,893 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-25 18:35:40,893 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-25 18:35:40,894 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "ITAMToken_0x3b4f7cb9e60362a49dd04eb0091a374d340e3efd_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 06:35:40" (1/2) ...
[2020-11-25 18:35:40,894 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-25 18:35:40,895 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-25 18:35:40,932 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 06:35:40" (2/2) ...
[2020-11-25 18:35:40,932 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-25 18:35:40,932 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-25 18:35:40,932 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-25 18:35:40,933 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-25 18:35:40,933 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "ITAMToken_0x3b4f7cb9e60362a49dd04eb0091a374d340e3efd_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 06:35:40" (1/2) ...
[2020-11-25 18:35:40,993 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-25 18:35:40,994 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 18:35:40,994 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath
[2020-11-25 18:35:40,994 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath
[2020-11-25 18:35:40,994 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__success
[2020-11-25 18:35:40,994 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256_SafeMath__success
[2020-11-25 18:35:40,994 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__success
[2020-11-25 18:35:40,994 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__success
[2020-11-25 18:35:40,994 INFO  L130     BoogieDeclarations]: Found specification of procedure mod~uint256~uint256_SafeMath__success
[2020-11-25 18:35:40,994 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20_NoBaseCtor__success
[2020-11-25 18:35:40,995 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20
[2020-11-25 18:35:40,995 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20
[2020-11-25 18:35:40,995 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_IERC20
[2020-11-25 18:35:40,995 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_IERC20
[2020-11-25 18:35:40,995 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_IERC20
[2020-11-25 18:35:40,995 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_IERC20
[2020-11-25 18:35:40,996 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_IERC20
[2020-11-25 18:35:40,996 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_IERC20
[2020-11-25 18:35:40,996 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20_NoBaseCtor__success
[2020-11-25 18:35:40,996 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20
[2020-11-25 18:35:40,996 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20
[2020-11-25 18:35:40,996 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20
[2020-11-25 18:35:40,996 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ERC20
[2020-11-25 18:35:40,997 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20
[2020-11-25 18:35:40,997 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ERC20
[2020-11-25 18:35:40,997 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20
[2020-11-25 18:35:40,997 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ERC20
[2020-11-25 18:35:40,997 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20
[2020-11-25 18:35:40,997 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20
[2020-11-25 18:35:40,997 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20
[2020-11-25 18:35:40,997 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ERC20
[2020-11-25 18:35:40,997 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20
[2020-11-25 18:35:40,997 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20
[2020-11-25 18:35:40,997 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_ERC20__success
[2020-11-25 18:35:40,998 INFO  L130     BoogieDeclarations]: Found specification of procedure mint~address~uint256_ERC20__success
[2020-11-25 18:35:40,998 INFO  L130     BoogieDeclarations]: Found specification of procedure _approve~address~address~uint256_ERC20__success
[2020-11-25 18:35:40,998 INFO  L130     BoogieDeclarations]: Found specification of procedure _burn~address~uint256_ERC20__success
[2020-11-25 18:35:40,998 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Capped_ERC20Capped_NoBaseCtor__success
[2020-11-25 18:35:40,998 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Capped_ERC20Capped
[2020-11-25 18:35:40,998 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Capped_ERC20Capped
[2020-11-25 18:35:40,998 INFO  L130     BoogieDeclarations]: Found specification of procedure cap_ERC20Capped
[2020-11-25 18:35:40,998 INFO  L138     BoogieDeclarations]: Found implementation of procedure cap_ERC20Capped
[2020-11-25 18:35:40,998 INFO  L130     BoogieDeclarations]: Found specification of procedure _mint~address~uint256_ERC20Capped__success
[2020-11-25 18:35:40,998 INFO  L130     BoogieDeclarations]: Found specification of procedure ITAMToken_ITAMToken_NoBaseCtor__success
[2020-11-25 18:35:40,999 INFO  L130     BoogieDeclarations]: Found specification of procedure ITAMToken_ITAMToken
[2020-11-25 18:35:40,999 INFO  L138     BoogieDeclarations]: Found implementation of procedure ITAMToken_ITAMToken
[2020-11-25 18:35:40,999 INFO  L130     BoogieDeclarations]: Found specification of procedure setGameMaster~address_ITAMToken
[2020-11-25 18:35:40,999 INFO  L138     BoogieDeclarations]: Found implementation of procedure setGameMaster~address_ITAMToken
[2020-11-25 18:35:40,999 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ITAMToken
[2020-11-25 18:35:40,999 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ITAMToken
[2020-11-25 18:35:40,999 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ITAMToken
[2020-11-25 18:35:40,999 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ITAMToken
[2020-11-25 18:35:40,999 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ITAMToken
[2020-11-25 18:35:40,999 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ITAMToken
[2020-11-25 18:35:40,999 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_ITAMToken
[2020-11-25 18:35:41,000 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_ITAMToken
[2020-11-25 18:35:41,000 INFO  L130     BoogieDeclarations]: Found specification of procedure unlock_ITAMToken
[2020-11-25 18:35:41,000 INFO  L138     BoogieDeclarations]: Found implementation of procedure unlock_ITAMToken
[2020-11-25 18:35:41,000 INFO  L130     BoogieDeclarations]: Found specification of procedure setAddresses~address~address~address~address~address~address~address~address_ITAMToken
[2020-11-25 18:35:41,000 INFO  L138     BoogieDeclarations]: Found implementation of procedure setAddresses~address~address~address~address~address~address~address~address_ITAMToken
[2020-11-25 18:35:41,000 INFO  L130     BoogieDeclarations]: Found specification of procedure changeOwner~address_ITAMToken
[2020-11-25 18:35:41,000 INFO  L138     BoogieDeclarations]: Found implementation of procedure changeOwner~address_ITAMToken
[2020-11-25 18:35:41,000 INFO  L130     BoogieDeclarations]: Found specification of procedure addToBlackList~address_ITAMToken
[2020-11-25 18:35:41,000 INFO  L138     BoogieDeclarations]: Found implementation of procedure addToBlackList~address_ITAMToken
[2020-11-25 18:35:41,000 INFO  L130     BoogieDeclarations]: Found specification of procedure removeFromBlackList~address_ITAMToken
[2020-11-25 18:35:41,001 INFO  L138     BoogieDeclarations]: Found implementation of procedure removeFromBlackList~address_ITAMToken
[2020-11-25 18:35:41,001 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackMethod_ITAMToken__success
[2020-11-25 18:35:41,001 INFO  L130     BoogieDeclarations]: Found specification of procedure withdrawEther~uint256_ITAMToken
[2020-11-25 18:35:41,001 INFO  L138     BoogieDeclarations]: Found implementation of procedure withdrawEther~uint256_ITAMToken
[2020-11-25 18:35:41,001 INFO  L130     BoogieDeclarations]: Found specification of procedure createOrUpdateItem~uint64~arr~arr~arr_ITAMToken
[2020-11-25 18:35:41,001 INFO  L138     BoogieDeclarations]: Found implementation of procedure createOrUpdateItem~uint64~arr~arr~arr_ITAMToken
[2020-11-25 18:35:41,001 INFO  L130     BoogieDeclarations]: Found specification of procedure _getItemAmount~uint64~uint64~address_ITAMToken__success
[2020-11-25 18:35:41,001 INFO  L130     BoogieDeclarations]: Found specification of procedure purchaseItemOnERC20~address~uint64~uint64_ITAMToken
[2020-11-25 18:35:41,001 INFO  L138     BoogieDeclarations]: Found implementation of procedure purchaseItemOnERC20~address~uint64~uint64_ITAMToken
[2020-11-25 18:35:41,001 INFO  L130     BoogieDeclarations]: Found specification of procedure purchaseItemOnITAM~uint64~uint64_ITAMToken
[2020-11-25 18:35:41,002 INFO  L138     BoogieDeclarations]: Found implementation of procedure purchaseItemOnITAM~uint64~uint64_ITAMToken
[2020-11-25 18:35:41,002 INFO  L130     BoogieDeclarations]: Found specification of procedure purchaseItemOnEther~uint64~uint64_ITAMToken
[2020-11-25 18:35:41,002 INFO  L138     BoogieDeclarations]: Found implementation of procedure purchaseItemOnEther~uint64~uint64_ITAMToken
[2020-11-25 18:35:41,002 INFO  L130     BoogieDeclarations]: Found specification of procedure name_ITAMToken
[2020-11-25 18:35:41,002 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_ITAMToken
[2020-11-25 18:35:41,002 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_ITAMToken
[2020-11-25 18:35:41,002 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_ITAMToken
[2020-11-25 18:35:41,002 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_ITAMToken
[2020-11-25 18:35:41,002 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_ITAMToken
[2020-11-25 18:35:41,002 INFO  L130     BoogieDeclarations]: Found specification of procedure firstMaster_ITAMToken
[2020-11-25 18:35:41,002 INFO  L138     BoogieDeclarations]: Found implementation of procedure firstMaster_ITAMToken
[2020-11-25 18:35:41,003 INFO  L130     BoogieDeclarations]: Found specification of procedure secondMaster_ITAMToken
[2020-11-25 18:35:41,003 INFO  L138     BoogieDeclarations]: Found implementation of procedure secondMaster_ITAMToken
[2020-11-25 18:35:41,003 INFO  L130     BoogieDeclarations]: Found specification of procedure thirdMaster_ITAMToken
[2020-11-25 18:35:41,003 INFO  L138     BoogieDeclarations]: Found implementation of procedure thirdMaster_ITAMToken
[2020-11-25 18:35:41,003 INFO  L130     BoogieDeclarations]: Found specification of procedure decidedOwner~address~address_ITAMToken
[2020-11-25 18:35:41,003 INFO  L138     BoogieDeclarations]: Found implementation of procedure decidedOwner~address~address_ITAMToken
[2020-11-25 18:35:41,003 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_ITAMToken
[2020-11-25 18:35:41,003 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_ITAMToken
[2020-11-25 18:35:41,003 INFO  L130     BoogieDeclarations]: Found specification of procedure gameMaster_ITAMToken
[2020-11-25 18:35:41,003 INFO  L138     BoogieDeclarations]: Found implementation of procedure gameMaster_ITAMToken
[2020-11-25 18:35:41,004 INFO  L130     BoogieDeclarations]: Found specification of procedure blackLists~address_ITAMToken
[2020-11-25 18:35:41,004 INFO  L138     BoogieDeclarations]: Found implementation of procedure blackLists~address_ITAMToken
[2020-11-25 18:35:41,004 INFO  L130     BoogieDeclarations]: Found specification of procedure unlockCount_ITAMToken
[2020-11-25 18:35:41,004 INFO  L138     BoogieDeclarations]: Found implementation of procedure unlockCount_ITAMToken
[2020-11-25 18:35:41,004 INFO  L130     BoogieDeclarations]: Found specification of procedure strategicSaleAddress_ITAMToken
[2020-11-25 18:35:41,004 INFO  L138     BoogieDeclarations]: Found implementation of procedure strategicSaleAddress_ITAMToken
[2020-11-25 18:35:41,004 INFO  L130     BoogieDeclarations]: Found specification of procedure strategicSaleReleaseCaps~uint256_ITAMToken
[2020-11-25 18:35:41,004 INFO  L138     BoogieDeclarations]: Found implementation of procedure strategicSaleReleaseCaps~uint256_ITAMToken
[2020-11-25 18:35:41,004 INFO  L130     BoogieDeclarations]: Found specification of procedure privateSaleAddress_ITAMToken
[2020-11-25 18:35:41,004 INFO  L138     BoogieDeclarations]: Found implementation of procedure privateSaleAddress_ITAMToken
[2020-11-25 18:35:41,004 INFO  L130     BoogieDeclarations]: Found specification of procedure privateSaleReleaseCaps~uint256_ITAMToken
[2020-11-25 18:35:41,005 INFO  L138     BoogieDeclarations]: Found implementation of procedure privateSaleReleaseCaps~uint256_ITAMToken
[2020-11-25 18:35:41,005 INFO  L130     BoogieDeclarations]: Found specification of procedure publicSaleAddress_ITAMToken
[2020-11-25 18:35:41,005 INFO  L138     BoogieDeclarations]: Found implementation of procedure publicSaleAddress_ITAMToken
[2020-11-25 18:35:41,005 INFO  L130     BoogieDeclarations]: Found specification of procedure publicSaleReleaseCap_ITAMToken
[2020-11-25 18:35:41,005 INFO  L138     BoogieDeclarations]: Found implementation of procedure publicSaleReleaseCap_ITAMToken
[2020-11-25 18:35:41,005 INFO  L130     BoogieDeclarations]: Found specification of procedure teamAddress_ITAMToken
[2020-11-25 18:35:41,005 INFO  L138     BoogieDeclarations]: Found implementation of procedure teamAddress_ITAMToken
[2020-11-25 18:35:41,005 INFO  L130     BoogieDeclarations]: Found specification of procedure teamReleaseCaps~uint256_ITAMToken
[2020-11-25 18:35:41,005 INFO  L138     BoogieDeclarations]: Found implementation of procedure teamReleaseCaps~uint256_ITAMToken
[2020-11-25 18:35:41,006 INFO  L130     BoogieDeclarations]: Found specification of procedure advisorAddress_ITAMToken
[2020-11-25 18:35:41,006 INFO  L138     BoogieDeclarations]: Found implementation of procedure advisorAddress_ITAMToken
[2020-11-25 18:35:41,006 INFO  L130     BoogieDeclarations]: Found specification of procedure advisorReleaseCaps~uint256_ITAMToken
[2020-11-25 18:35:41,006 INFO  L138     BoogieDeclarations]: Found implementation of procedure advisorReleaseCaps~uint256_ITAMToken
[2020-11-25 18:35:41,006 INFO  L130     BoogieDeclarations]: Found specification of procedure marketingAddress_ITAMToken
[2020-11-25 18:35:41,006 INFO  L138     BoogieDeclarations]: Found implementation of procedure marketingAddress_ITAMToken
[2020-11-25 18:35:41,006 INFO  L130     BoogieDeclarations]: Found specification of procedure marketingReleaseCaps~uint256_ITAMToken
[2020-11-25 18:35:41,006 INFO  L138     BoogieDeclarations]: Found implementation of procedure marketingReleaseCaps~uint256_ITAMToken
[2020-11-25 18:35:41,006 INFO  L130     BoogieDeclarations]: Found specification of procedure ecoAddress_ITAMToken
[2020-11-25 18:35:41,007 INFO  L138     BoogieDeclarations]: Found implementation of procedure ecoAddress_ITAMToken
[2020-11-25 18:35:41,007 INFO  L130     BoogieDeclarations]: Found specification of procedure ecoReleaseCaps~uint256_ITAMToken
[2020-11-25 18:35:41,007 INFO  L138     BoogieDeclarations]: Found implementation of procedure ecoReleaseCaps~uint256_ITAMToken
[2020-11-25 18:35:41,007 INFO  L130     BoogieDeclarations]: Found specification of procedure inAppAddress_ITAMToken
[2020-11-25 18:35:41,007 INFO  L138     BoogieDeclarations]: Found implementation of procedure inAppAddress_ITAMToken
[2020-11-25 18:35:41,007 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-25 18:35:41,007 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-25 18:35:41,007 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-25 18:35:41,007 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__success
[2020-11-25 18:35:41,007 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyGameMaster_pre__success
[2020-11-25 18:35:41,008 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyMaster_pre__success
[2020-11-25 18:35:41,008 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyNotBlackList_pre__success
[2020-11-25 18:35:41,008 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_SafeMath
[2020-11-25 18:35:41,008 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_SafeMath
[2020-11-25 18:35:41,008 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_IERC20
[2020-11-25 18:35:41,008 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_IERC20
[2020-11-25 18:35:41,008 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20
[2020-11-25 18:35:41,008 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20
[2020-11-25 18:35:41,009 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20Capped
[2020-11-25 18:35:41,009 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20Capped
[2020-11-25 18:35:41,009 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ITAMToken
[2020-11-25 18:35:41,009 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-25 18:35:41,009 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-25 18:35:41,009 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 18:35:41,009 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__success
[2020-11-25 18:35:41,010 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__fail
[2020-11-25 18:35:41,010 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-25 18:35:41,010 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256_SafeMath__fail
[2020-11-25 18:35:41,010 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-25 18:35:41,010 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__fail
[2020-11-25 18:35:41,010 INFO  L130     BoogieDeclarations]: Found specification of procedure mod~uint256~uint256_SafeMath__fail
[2020-11-25 18:35:41,010 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20_NoBaseCtor__fail
[2020-11-25 18:35:41,010 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20__success
[2020-11-25 18:35:41,010 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20__fail
[2020-11-25 18:35:41,010 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20_NoBaseCtor__fail
[2020-11-25 18:35:41,011 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20__success
[2020-11-25 18:35:41,011 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20__fail
[2020-11-25 18:35:41,011 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20__success
[2020-11-25 18:35:41,011 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20__fail
[2020-11-25 18:35:41,011 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20__success
[2020-11-25 18:35:41,011 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20__fail
[2020-11-25 18:35:41,011 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20__success
[2020-11-25 18:35:41,011 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20__fail
[2020-11-25 18:35:41,012 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20__success
[2020-11-25 18:35:41,012 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20__fail
[2020-11-25 18:35:41,012 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20__success
[2020-11-25 18:35:41,012 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20__fail
[2020-11-25 18:35:41,012 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20__success
[2020-11-25 18:35:41,012 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20__fail
[2020-11-25 18:35:41,012 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_ERC20__fail
[2020-11-25 18:35:41,012 INFO  L130     BoogieDeclarations]: Found specification of procedure mint~address~uint256_ERC20__fail
[2020-11-25 18:35:41,012 INFO  L130     BoogieDeclarations]: Found specification of procedure _approve~address~address~uint256_ERC20__fail
[2020-11-25 18:35:41,012 INFO  L130     BoogieDeclarations]: Found specification of procedure _burn~address~uint256_ERC20__fail
[2020-11-25 18:35:41,012 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Capped_ERC20Capped_NoBaseCtor__fail
[2020-11-25 18:35:41,012 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Capped_ERC20Capped__success
[2020-11-25 18:35:41,013 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Capped_ERC20Capped__fail
[2020-11-25 18:35:41,013 INFO  L130     BoogieDeclarations]: Found specification of procedure cap_ERC20Capped__success
[2020-11-25 18:35:41,013 INFO  L130     BoogieDeclarations]: Found specification of procedure cap_ERC20Capped__fail
[2020-11-25 18:35:41,013 INFO  L130     BoogieDeclarations]: Found specification of procedure _mint~address~uint256_ERC20Capped__fail
[2020-11-25 18:35:41,013 INFO  L130     BoogieDeclarations]: Found specification of procedure ITAMToken_ITAMToken_NoBaseCtor__fail
[2020-11-25 18:35:41,013 INFO  L130     BoogieDeclarations]: Found specification of procedure ITAMToken_ITAMToken__success
[2020-11-25 18:35:41,013 INFO  L130     BoogieDeclarations]: Found specification of procedure ITAMToken_ITAMToken__fail
[2020-11-25 18:35:41,013 INFO  L130     BoogieDeclarations]: Found specification of procedure setGameMaster~address_ITAMToken__success
[2020-11-25 18:35:41,013 INFO  L130     BoogieDeclarations]: Found specification of procedure setGameMaster~address_ITAMToken__fail
[2020-11-25 18:35:41,013 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ITAMToken__success
[2020-11-25 18:35:41,013 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ITAMToken__fail
[2020-11-25 18:35:41,014 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ITAMToken__success
[2020-11-25 18:35:41,014 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ITAMToken__fail
[2020-11-25 18:35:41,014 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ITAMToken__success
[2020-11-25 18:35:41,014 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ITAMToken__fail
[2020-11-25 18:35:41,014 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_ITAMToken__success
[2020-11-25 18:35:41,014 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_ITAMToken__fail
[2020-11-25 18:35:41,014 INFO  L130     BoogieDeclarations]: Found specification of procedure unlock_ITAMToken__success
[2020-11-25 18:35:41,014 INFO  L130     BoogieDeclarations]: Found specification of procedure unlock_ITAMToken__fail
[2020-11-25 18:35:41,014 INFO  L130     BoogieDeclarations]: Found specification of procedure setAddresses~address~address~address~address~address~address~address~address_ITAMToken__success
[2020-11-25 18:35:41,014 INFO  L130     BoogieDeclarations]: Found specification of procedure setAddresses~address~address~address~address~address~address~address~address_ITAMToken__fail
[2020-11-25 18:35:41,014 INFO  L130     BoogieDeclarations]: Found specification of procedure changeOwner~address_ITAMToken__success
[2020-11-25 18:35:41,014 INFO  L130     BoogieDeclarations]: Found specification of procedure changeOwner~address_ITAMToken__fail
[2020-11-25 18:35:41,015 INFO  L130     BoogieDeclarations]: Found specification of procedure addToBlackList~address_ITAMToken__success
[2020-11-25 18:35:41,015 INFO  L130     BoogieDeclarations]: Found specification of procedure addToBlackList~address_ITAMToken__fail
[2020-11-25 18:35:41,015 INFO  L130     BoogieDeclarations]: Found specification of procedure removeFromBlackList~address_ITAMToken__success
[2020-11-25 18:35:41,015 INFO  L130     BoogieDeclarations]: Found specification of procedure removeFromBlackList~address_ITAMToken__fail
[2020-11-25 18:35:41,015 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackMethod_ITAMToken__fail
[2020-11-25 18:35:41,015 INFO  L130     BoogieDeclarations]: Found specification of procedure withdrawEther~uint256_ITAMToken__success
[2020-11-25 18:35:41,015 INFO  L130     BoogieDeclarations]: Found specification of procedure withdrawEther~uint256_ITAMToken__fail
[2020-11-25 18:35:41,015 INFO  L130     BoogieDeclarations]: Found specification of procedure createOrUpdateItem~uint64~arr~arr~arr_ITAMToken__success
[2020-11-25 18:35:41,015 INFO  L130     BoogieDeclarations]: Found specification of procedure createOrUpdateItem~uint64~arr~arr~arr_ITAMToken__fail
[2020-11-25 18:35:41,015 INFO  L130     BoogieDeclarations]: Found specification of procedure _getItemAmount~uint64~uint64~address_ITAMToken__fail
[2020-11-25 18:35:41,015 INFO  L130     BoogieDeclarations]: Found specification of procedure purchaseItemOnERC20~address~uint64~uint64_ITAMToken__success
[2020-11-25 18:35:41,015 INFO  L130     BoogieDeclarations]: Found specification of procedure purchaseItemOnERC20~address~uint64~uint64_ITAMToken__fail
[2020-11-25 18:35:41,016 INFO  L130     BoogieDeclarations]: Found specification of procedure purchaseItemOnITAM~uint64~uint64_ITAMToken__success
[2020-11-25 18:35:41,016 INFO  L130     BoogieDeclarations]: Found specification of procedure purchaseItemOnITAM~uint64~uint64_ITAMToken__fail
[2020-11-25 18:35:41,016 INFO  L130     BoogieDeclarations]: Found specification of procedure purchaseItemOnEther~uint64~uint64_ITAMToken__success
[2020-11-25 18:35:41,016 INFO  L130     BoogieDeclarations]: Found specification of procedure purchaseItemOnEther~uint64~uint64_ITAMToken__fail
[2020-11-25 18:35:41,016 INFO  L130     BoogieDeclarations]: Found specification of procedure name_ITAMToken__success
[2020-11-25 18:35:41,016 INFO  L130     BoogieDeclarations]: Found specification of procedure name_ITAMToken__fail
[2020-11-25 18:35:41,016 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_ITAMToken__success
[2020-11-25 18:35:41,016 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_ITAMToken__fail
[2020-11-25 18:35:41,016 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_ITAMToken__success
[2020-11-25 18:35:41,016 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_ITAMToken__fail
[2020-11-25 18:35:41,016 INFO  L130     BoogieDeclarations]: Found specification of procedure firstMaster_ITAMToken__success
[2020-11-25 18:35:41,016 INFO  L130     BoogieDeclarations]: Found specification of procedure firstMaster_ITAMToken__fail
[2020-11-25 18:35:41,017 INFO  L130     BoogieDeclarations]: Found specification of procedure secondMaster_ITAMToken__success
[2020-11-25 18:35:41,017 INFO  L130     BoogieDeclarations]: Found specification of procedure secondMaster_ITAMToken__fail
[2020-11-25 18:35:41,017 INFO  L130     BoogieDeclarations]: Found specification of procedure thirdMaster_ITAMToken__success
[2020-11-25 18:35:41,017 INFO  L130     BoogieDeclarations]: Found specification of procedure thirdMaster_ITAMToken__fail
[2020-11-25 18:35:41,017 INFO  L130     BoogieDeclarations]: Found specification of procedure decidedOwner~address~address_ITAMToken__success
[2020-11-25 18:35:41,017 INFO  L130     BoogieDeclarations]: Found specification of procedure decidedOwner~address~address_ITAMToken__fail
[2020-11-25 18:35:41,017 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_ITAMToken__success
[2020-11-25 18:35:41,017 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_ITAMToken__fail
[2020-11-25 18:35:41,017 INFO  L130     BoogieDeclarations]: Found specification of procedure gameMaster_ITAMToken__success
[2020-11-25 18:35:41,017 INFO  L130     BoogieDeclarations]: Found specification of procedure gameMaster_ITAMToken__fail
[2020-11-25 18:35:41,017 INFO  L130     BoogieDeclarations]: Found specification of procedure blackLists~address_ITAMToken__success
[2020-11-25 18:35:41,017 INFO  L130     BoogieDeclarations]: Found specification of procedure blackLists~address_ITAMToken__fail
[2020-11-25 18:35:41,018 INFO  L130     BoogieDeclarations]: Found specification of procedure unlockCount_ITAMToken__success
[2020-11-25 18:35:41,018 INFO  L130     BoogieDeclarations]: Found specification of procedure unlockCount_ITAMToken__fail
[2020-11-25 18:35:41,018 INFO  L130     BoogieDeclarations]: Found specification of procedure strategicSaleAddress_ITAMToken__success
[2020-11-25 18:35:41,018 INFO  L130     BoogieDeclarations]: Found specification of procedure strategicSaleAddress_ITAMToken__fail
[2020-11-25 18:35:41,018 INFO  L130     BoogieDeclarations]: Found specification of procedure strategicSaleReleaseCaps~uint256_ITAMToken__success
[2020-11-25 18:35:41,018 INFO  L130     BoogieDeclarations]: Found specification of procedure strategicSaleReleaseCaps~uint256_ITAMToken__fail
[2020-11-25 18:35:41,018 INFO  L130     BoogieDeclarations]: Found specification of procedure privateSaleAddress_ITAMToken__success
[2020-11-25 18:35:41,018 INFO  L130     BoogieDeclarations]: Found specification of procedure privateSaleAddress_ITAMToken__fail
[2020-11-25 18:35:41,018 INFO  L130     BoogieDeclarations]: Found specification of procedure privateSaleReleaseCaps~uint256_ITAMToken__success
[2020-11-25 18:35:41,018 INFO  L130     BoogieDeclarations]: Found specification of procedure privateSaleReleaseCaps~uint256_ITAMToken__fail
[2020-11-25 18:35:41,018 INFO  L130     BoogieDeclarations]: Found specification of procedure publicSaleAddress_ITAMToken__success
[2020-11-25 18:35:41,018 INFO  L130     BoogieDeclarations]: Found specification of procedure publicSaleAddress_ITAMToken__fail
[2020-11-25 18:35:41,019 INFO  L130     BoogieDeclarations]: Found specification of procedure publicSaleReleaseCap_ITAMToken__success
[2020-11-25 18:35:41,019 INFO  L130     BoogieDeclarations]: Found specification of procedure publicSaleReleaseCap_ITAMToken__fail
[2020-11-25 18:35:41,019 INFO  L130     BoogieDeclarations]: Found specification of procedure teamAddress_ITAMToken__success
[2020-11-25 18:35:41,019 INFO  L130     BoogieDeclarations]: Found specification of procedure teamAddress_ITAMToken__fail
[2020-11-25 18:35:41,019 INFO  L130     BoogieDeclarations]: Found specification of procedure teamReleaseCaps~uint256_ITAMToken__success
[2020-11-25 18:35:41,019 INFO  L130     BoogieDeclarations]: Found specification of procedure teamReleaseCaps~uint256_ITAMToken__fail
[2020-11-25 18:35:41,019 INFO  L130     BoogieDeclarations]: Found specification of procedure advisorAddress_ITAMToken__success
[2020-11-25 18:35:41,019 INFO  L130     BoogieDeclarations]: Found specification of procedure advisorAddress_ITAMToken__fail
[2020-11-25 18:35:41,019 INFO  L130     BoogieDeclarations]: Found specification of procedure advisorReleaseCaps~uint256_ITAMToken__success
[2020-11-25 18:35:41,019 INFO  L130     BoogieDeclarations]: Found specification of procedure advisorReleaseCaps~uint256_ITAMToken__fail
[2020-11-25 18:35:41,019 INFO  L130     BoogieDeclarations]: Found specification of procedure marketingAddress_ITAMToken__success
[2020-11-25 18:35:41,019 INFO  L130     BoogieDeclarations]: Found specification of procedure marketingAddress_ITAMToken__fail
[2020-11-25 18:35:41,020 INFO  L130     BoogieDeclarations]: Found specification of procedure marketingReleaseCaps~uint256_ITAMToken__success
[2020-11-25 18:35:41,020 INFO  L130     BoogieDeclarations]: Found specification of procedure marketingReleaseCaps~uint256_ITAMToken__fail
[2020-11-25 18:35:41,020 INFO  L130     BoogieDeclarations]: Found specification of procedure ecoAddress_ITAMToken__success
[2020-11-25 18:35:41,020 INFO  L130     BoogieDeclarations]: Found specification of procedure ecoAddress_ITAMToken__fail
[2020-11-25 18:35:41,020 INFO  L130     BoogieDeclarations]: Found specification of procedure ecoReleaseCaps~uint256_ITAMToken__success
[2020-11-25 18:35:41,020 INFO  L130     BoogieDeclarations]: Found specification of procedure ecoReleaseCaps~uint256_ITAMToken__fail
[2020-11-25 18:35:41,020 INFO  L130     BoogieDeclarations]: Found specification of procedure inAppAddress_ITAMToken__success
[2020-11-25 18:35:41,020 INFO  L130     BoogieDeclarations]: Found specification of procedure inAppAddress_ITAMToken__fail
[2020-11-25 18:35:41,020 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-25 18:35:41,020 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-25 18:35:41,020 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-25 18:35:41,021 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__fail
[2020-11-25 18:35:41,021 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyGameMaster_pre__fail
[2020-11-25 18:35:41,021 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyMaster_pre__fail
[2020-11-25 18:35:41,021 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyNotBlackList_pre__fail
[2020-11-25 18:35:41,021 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-25 18:35:41,021 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-25 18:35:41,021 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 18:35:41,021 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 18:35:41,021 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__fail
[2020-11-25 18:35:41,021 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__success
[2020-11-25 18:35:41,021 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-25 18:35:41,022 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__success
[2020-11-25 18:35:41,022 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256_SafeMath__fail
[2020-11-25 18:35:41,022 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256_SafeMath__success
[2020-11-25 18:35:41,022 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-25 18:35:41,022 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__success
[2020-11-25 18:35:41,022 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__fail
[2020-11-25 18:35:41,022 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__success
[2020-11-25 18:35:41,022 INFO  L138     BoogieDeclarations]: Found implementation of procedure mod~uint256~uint256_SafeMath__fail
[2020-11-25 18:35:41,022 INFO  L138     BoogieDeclarations]: Found implementation of procedure mod~uint256~uint256_SafeMath__success
[2020-11-25 18:35:41,022 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20_NoBaseCtor__fail
[2020-11-25 18:35:41,022 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20_NoBaseCtor__success
[2020-11-25 18:35:41,023 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20__fail
[2020-11-25 18:35:41,023 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20__success
[2020-11-25 18:35:41,023 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20_NoBaseCtor__fail
[2020-11-25 18:35:41,023 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20_NoBaseCtor__success
[2020-11-25 18:35:41,023 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20__fail
[2020-11-25 18:35:41,023 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20__success
[2020-11-25 18:35:41,023 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ERC20__fail
[2020-11-25 18:35:41,023 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ERC20__success
[2020-11-25 18:35:41,023 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ERC20__fail
[2020-11-25 18:35:41,023 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ERC20__success
[2020-11-25 18:35:41,023 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ERC20__fail
[2020-11-25 18:35:41,024 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ERC20__success
[2020-11-25 18:35:41,024 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20__fail
[2020-11-25 18:35:41,024 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20__success
[2020-11-25 18:35:41,024 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ERC20__fail
[2020-11-25 18:35:41,024 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ERC20__success
[2020-11-25 18:35:41,024 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20__fail
[2020-11-25 18:35:41,024 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20__success
[2020-11-25 18:35:41,024 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_ERC20__fail
[2020-11-25 18:35:41,024 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_ERC20__success
[2020-11-25 18:35:41,024 INFO  L138     BoogieDeclarations]: Found implementation of procedure mint~address~uint256_ERC20__fail
[2020-11-25 18:35:41,024 INFO  L138     BoogieDeclarations]: Found implementation of procedure mint~address~uint256_ERC20__success
[2020-11-25 18:35:41,024 INFO  L138     BoogieDeclarations]: Found implementation of procedure _approve~address~address~uint256_ERC20__fail
[2020-11-25 18:35:41,024 INFO  L138     BoogieDeclarations]: Found implementation of procedure _approve~address~address~uint256_ERC20__success
[2020-11-25 18:35:41,025 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burn~address~uint256_ERC20__fail
[2020-11-25 18:35:41,025 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burn~address~uint256_ERC20__success
[2020-11-25 18:35:41,025 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Capped_ERC20Capped_NoBaseCtor__fail
[2020-11-25 18:35:41,025 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Capped_ERC20Capped_NoBaseCtor__success
[2020-11-25 18:35:41,025 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Capped_ERC20Capped__fail
[2020-11-25 18:35:41,025 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Capped_ERC20Capped__success
[2020-11-25 18:35:41,025 INFO  L138     BoogieDeclarations]: Found implementation of procedure cap_ERC20Capped__fail
[2020-11-25 18:35:41,025 INFO  L138     BoogieDeclarations]: Found implementation of procedure cap_ERC20Capped__success
[2020-11-25 18:35:41,025 INFO  L138     BoogieDeclarations]: Found implementation of procedure _mint~address~uint256_ERC20Capped__fail
[2020-11-25 18:35:41,025 INFO  L138     BoogieDeclarations]: Found implementation of procedure _mint~address~uint256_ERC20Capped__success
[2020-11-25 18:35:41,025 INFO  L138     BoogieDeclarations]: Found implementation of procedure ITAMToken_ITAMToken_NoBaseCtor__fail
[2020-11-25 18:35:41,025 INFO  L138     BoogieDeclarations]: Found implementation of procedure ITAMToken_ITAMToken_NoBaseCtor__success
[2020-11-25 18:35:41,026 INFO  L138     BoogieDeclarations]: Found implementation of procedure ITAMToken_ITAMToken__fail
[2020-11-25 18:35:41,026 INFO  L138     BoogieDeclarations]: Found implementation of procedure ITAMToken_ITAMToken__success
[2020-11-25 18:35:41,026 INFO  L138     BoogieDeclarations]: Found implementation of procedure setGameMaster~address_ITAMToken__fail
[2020-11-25 18:35:41,026 INFO  L138     BoogieDeclarations]: Found implementation of procedure setGameMaster~address_ITAMToken__success
[2020-11-25 18:35:41,026 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ITAMToken__fail
[2020-11-25 18:35:41,026 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ITAMToken__success
[2020-11-25 18:35:41,026 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ITAMToken__fail
[2020-11-25 18:35:41,026 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ITAMToken__success
[2020-11-25 18:35:41,026 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ITAMToken__fail
[2020-11-25 18:35:41,026 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ITAMToken__success
[2020-11-25 18:35:41,026 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_ITAMToken__fail
[2020-11-25 18:35:41,026 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_ITAMToken__success
[2020-11-25 18:35:41,027 INFO  L138     BoogieDeclarations]: Found implementation of procedure unlock_ITAMToken__fail
[2020-11-25 18:35:41,027 INFO  L138     BoogieDeclarations]: Found implementation of procedure unlock_ITAMToken__success
[2020-11-25 18:35:41,027 INFO  L138     BoogieDeclarations]: Found implementation of procedure setAddresses~address~address~address~address~address~address~address~address_ITAMToken__fail
[2020-11-25 18:35:41,027 INFO  L138     BoogieDeclarations]: Found implementation of procedure setAddresses~address~address~address~address~address~address~address~address_ITAMToken__success
[2020-11-25 18:35:41,027 INFO  L138     BoogieDeclarations]: Found implementation of procedure changeOwner~address_ITAMToken__fail
[2020-11-25 18:35:41,027 INFO  L138     BoogieDeclarations]: Found implementation of procedure changeOwner~address_ITAMToken__success
[2020-11-25 18:35:41,027 INFO  L138     BoogieDeclarations]: Found implementation of procedure addToBlackList~address_ITAMToken__fail
[2020-11-25 18:35:41,027 INFO  L138     BoogieDeclarations]: Found implementation of procedure addToBlackList~address_ITAMToken__success
[2020-11-25 18:35:41,027 INFO  L138     BoogieDeclarations]: Found implementation of procedure removeFromBlackList~address_ITAMToken__fail
[2020-11-25 18:35:41,027 INFO  L138     BoogieDeclarations]: Found implementation of procedure removeFromBlackList~address_ITAMToken__success
[2020-11-25 18:35:41,027 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackMethod_ITAMToken__fail
[2020-11-25 18:35:41,028 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackMethod_ITAMToken__success
[2020-11-25 18:35:41,028 INFO  L138     BoogieDeclarations]: Found implementation of procedure withdrawEther~uint256_ITAMToken__fail
[2020-11-25 18:35:41,028 INFO  L138     BoogieDeclarations]: Found implementation of procedure withdrawEther~uint256_ITAMToken__success
[2020-11-25 18:35:41,028 INFO  L138     BoogieDeclarations]: Found implementation of procedure createOrUpdateItem~uint64~arr~arr~arr_ITAMToken__fail
[2020-11-25 18:35:41,028 INFO  L138     BoogieDeclarations]: Found implementation of procedure createOrUpdateItem~uint64~arr~arr~arr_ITAMToken__success
[2020-11-25 18:35:41,028 INFO  L138     BoogieDeclarations]: Found implementation of procedure _getItemAmount~uint64~uint64~address_ITAMToken__fail
[2020-11-25 18:35:41,028 INFO  L138     BoogieDeclarations]: Found implementation of procedure _getItemAmount~uint64~uint64~address_ITAMToken__success
[2020-11-25 18:35:41,028 INFO  L138     BoogieDeclarations]: Found implementation of procedure purchaseItemOnERC20~address~uint64~uint64_ITAMToken__fail
[2020-11-25 18:35:41,028 INFO  L138     BoogieDeclarations]: Found implementation of procedure purchaseItemOnERC20~address~uint64~uint64_ITAMToken__success
[2020-11-25 18:35:41,028 INFO  L138     BoogieDeclarations]: Found implementation of procedure purchaseItemOnITAM~uint64~uint64_ITAMToken__fail
[2020-11-25 18:35:41,029 INFO  L138     BoogieDeclarations]: Found implementation of procedure purchaseItemOnITAM~uint64~uint64_ITAMToken__success
[2020-11-25 18:35:41,029 INFO  L138     BoogieDeclarations]: Found implementation of procedure purchaseItemOnEther~uint64~uint64_ITAMToken__fail
[2020-11-25 18:35:41,029 INFO  L138     BoogieDeclarations]: Found implementation of procedure purchaseItemOnEther~uint64~uint64_ITAMToken__success
[2020-11-25 18:35:41,029 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_ITAMToken__fail
[2020-11-25 18:35:41,029 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_ITAMToken__success
[2020-11-25 18:35:41,029 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_ITAMToken__fail
[2020-11-25 18:35:41,029 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_ITAMToken__success
[2020-11-25 18:35:41,029 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_ITAMToken__fail
[2020-11-25 18:35:41,029 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_ITAMToken__success
[2020-11-25 18:35:41,029 INFO  L138     BoogieDeclarations]: Found implementation of procedure firstMaster_ITAMToken__fail
[2020-11-25 18:35:41,029 INFO  L138     BoogieDeclarations]: Found implementation of procedure firstMaster_ITAMToken__success
[2020-11-25 18:35:41,029 INFO  L138     BoogieDeclarations]: Found implementation of procedure secondMaster_ITAMToken__fail
[2020-11-25 18:35:41,030 INFO  L138     BoogieDeclarations]: Found implementation of procedure secondMaster_ITAMToken__success
[2020-11-25 18:35:41,030 INFO  L138     BoogieDeclarations]: Found implementation of procedure thirdMaster_ITAMToken__fail
[2020-11-25 18:35:41,030 INFO  L138     BoogieDeclarations]: Found implementation of procedure thirdMaster_ITAMToken__success
[2020-11-25 18:35:41,030 INFO  L138     BoogieDeclarations]: Found implementation of procedure decidedOwner~address~address_ITAMToken__fail
[2020-11-25 18:35:41,030 INFO  L138     BoogieDeclarations]: Found implementation of procedure decidedOwner~address~address_ITAMToken__success
[2020-11-25 18:35:41,030 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_ITAMToken__fail
[2020-11-25 18:35:41,030 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_ITAMToken__success
[2020-11-25 18:35:41,030 INFO  L138     BoogieDeclarations]: Found implementation of procedure gameMaster_ITAMToken__fail
[2020-11-25 18:35:41,030 INFO  L138     BoogieDeclarations]: Found implementation of procedure gameMaster_ITAMToken__success
[2020-11-25 18:35:41,030 INFO  L138     BoogieDeclarations]: Found implementation of procedure blackLists~address_ITAMToken__fail
[2020-11-25 18:35:41,030 INFO  L138     BoogieDeclarations]: Found implementation of procedure blackLists~address_ITAMToken__success
[2020-11-25 18:35:41,030 INFO  L138     BoogieDeclarations]: Found implementation of procedure unlockCount_ITAMToken__fail
[2020-11-25 18:35:41,030 INFO  L138     BoogieDeclarations]: Found implementation of procedure unlockCount_ITAMToken__success
[2020-11-25 18:35:41,031 INFO  L138     BoogieDeclarations]: Found implementation of procedure strategicSaleAddress_ITAMToken__fail
[2020-11-25 18:35:41,031 INFO  L138     BoogieDeclarations]: Found implementation of procedure strategicSaleAddress_ITAMToken__success
[2020-11-25 18:35:41,031 INFO  L138     BoogieDeclarations]: Found implementation of procedure strategicSaleReleaseCaps~uint256_ITAMToken__fail
[2020-11-25 18:35:41,031 INFO  L138     BoogieDeclarations]: Found implementation of procedure strategicSaleReleaseCaps~uint256_ITAMToken__success
[2020-11-25 18:35:41,031 INFO  L138     BoogieDeclarations]: Found implementation of procedure privateSaleAddress_ITAMToken__fail
[2020-11-25 18:35:41,031 INFO  L138     BoogieDeclarations]: Found implementation of procedure privateSaleAddress_ITAMToken__success
[2020-11-25 18:35:41,031 INFO  L138     BoogieDeclarations]: Found implementation of procedure privateSaleReleaseCaps~uint256_ITAMToken__fail
[2020-11-25 18:35:41,031 INFO  L138     BoogieDeclarations]: Found implementation of procedure privateSaleReleaseCaps~uint256_ITAMToken__success
[2020-11-25 18:35:41,031 INFO  L138     BoogieDeclarations]: Found implementation of procedure publicSaleAddress_ITAMToken__fail
[2020-11-25 18:35:41,031 INFO  L138     BoogieDeclarations]: Found implementation of procedure publicSaleAddress_ITAMToken__success
[2020-11-25 18:35:41,031 INFO  L138     BoogieDeclarations]: Found implementation of procedure publicSaleReleaseCap_ITAMToken__fail
[2020-11-25 18:35:41,031 INFO  L138     BoogieDeclarations]: Found implementation of procedure publicSaleReleaseCap_ITAMToken__success
[2020-11-25 18:35:41,032 INFO  L138     BoogieDeclarations]: Found implementation of procedure teamAddress_ITAMToken__fail
[2020-11-25 18:35:41,032 INFO  L138     BoogieDeclarations]: Found implementation of procedure teamAddress_ITAMToken__success
[2020-11-25 18:35:41,032 INFO  L138     BoogieDeclarations]: Found implementation of procedure teamReleaseCaps~uint256_ITAMToken__fail
[2020-11-25 18:35:41,032 INFO  L138     BoogieDeclarations]: Found implementation of procedure teamReleaseCaps~uint256_ITAMToken__success
[2020-11-25 18:35:41,032 INFO  L138     BoogieDeclarations]: Found implementation of procedure advisorAddress_ITAMToken__fail
[2020-11-25 18:35:41,032 INFO  L138     BoogieDeclarations]: Found implementation of procedure advisorAddress_ITAMToken__success
[2020-11-25 18:35:41,032 INFO  L138     BoogieDeclarations]: Found implementation of procedure advisorReleaseCaps~uint256_ITAMToken__fail
[2020-11-25 18:35:41,032 INFO  L138     BoogieDeclarations]: Found implementation of procedure advisorReleaseCaps~uint256_ITAMToken__success
[2020-11-25 18:35:41,032 INFO  L138     BoogieDeclarations]: Found implementation of procedure marketingAddress_ITAMToken__fail
[2020-11-25 18:35:41,032 INFO  L138     BoogieDeclarations]: Found implementation of procedure marketingAddress_ITAMToken__success
[2020-11-25 18:35:41,032 INFO  L138     BoogieDeclarations]: Found implementation of procedure marketingReleaseCaps~uint256_ITAMToken__fail
[2020-11-25 18:35:41,032 INFO  L138     BoogieDeclarations]: Found implementation of procedure marketingReleaseCaps~uint256_ITAMToken__success
[2020-11-25 18:35:41,033 INFO  L138     BoogieDeclarations]: Found implementation of procedure ecoAddress_ITAMToken__fail
[2020-11-25 18:35:41,033 INFO  L138     BoogieDeclarations]: Found implementation of procedure ecoAddress_ITAMToken__success
[2020-11-25 18:35:41,033 INFO  L138     BoogieDeclarations]: Found implementation of procedure ecoReleaseCaps~uint256_ITAMToken__fail
[2020-11-25 18:35:41,033 INFO  L138     BoogieDeclarations]: Found implementation of procedure ecoReleaseCaps~uint256_ITAMToken__success
[2020-11-25 18:35:41,033 INFO  L138     BoogieDeclarations]: Found implementation of procedure inAppAddress_ITAMToken__fail
[2020-11-25 18:35:41,033 INFO  L138     BoogieDeclarations]: Found implementation of procedure inAppAddress_ITAMToken__success
[2020-11-25 18:35:41,033 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-25 18:35:41,033 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-25 18:35:41,033 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-25 18:35:41,033 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-25 18:35:41,033 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-25 18:35:41,033 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-25 18:35:41,033 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__fail
[2020-11-25 18:35:41,034 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__success
[2020-11-25 18:35:41,034 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyGameMaster_pre__fail
[2020-11-25 18:35:41,034 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyGameMaster_pre__success
[2020-11-25 18:35:41,034 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyMaster_pre__fail
[2020-11-25 18:35:41,034 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyMaster_pre__success
[2020-11-25 18:35:41,034 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyNotBlackList_pre__fail
[2020-11-25 18:35:41,034 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyNotBlackList_pre__success
[2020-11-25 18:35:41,034 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_SafeMath
[2020-11-25 18:35:41,034 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_SafeMath
[2020-11-25 18:35:41,034 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_IERC20
[2020-11-25 18:35:41,034 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_IERC20
[2020-11-25 18:35:41,034 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20
[2020-11-25 18:35:41,034 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20
[2020-11-25 18:35:41,034 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20Capped
[2020-11-25 18:35:41,035 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20Capped
[2020-11-25 18:35:41,035 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ITAMToken
[2020-11-25 18:35:41,035 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-25 18:35:41,035 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-25 18:35:41,035 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-25 18:35:41,406 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 18:35:41,406 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 18:35:41,406 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 18:35:42,165 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-25 18:35:42,166 INFO  L286             CfgBuilder]: Removed 5 assue(true) statements.
[2020-11-25 18:35:42,173 INFO  L202        PluginConnector]: Adding new model ITAMToken_0x3b4f7cb9e60362a49dd04eb0091a374d340e3efd_transfer-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 06:35:42 BoogieIcfgContainer
[2020-11-25 18:35:42,173 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 06:35:40" (2/2) ...
[2020-11-25 18:35:42,173 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-25 18:35:42,174 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@3fc46a8a and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 06:35:42, skipping insertion in model container
[2020-11-25 18:35:42,174 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-25 18:35:42,174 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-25 18:35:42,175 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-25 18:35:42,177 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-25 18:35:42,178 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "ITAMToken_0x3b4f7cb9e60362a49dd04eb0091a374d340e3efd_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 06:35:40" (1/3) ...
[2020-11-25 18:35:42,178 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@7286d2a2 and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 06:35:42, skipping insertion in model container
[2020-11-25 18:35:42,178 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 06:35:40" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-25 18:35:42,215 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 06:35:42 NWAContainer
[2020-11-25 18:35:42,216 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-25 18:35:42,216 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-25 18:35:42,216 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-25 18:35:42,217 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-25 18:35:42,218 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "ITAMToken_0x3b4f7cb9e60362a49dd04eb0091a374d340e3efd_transfer-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 06:35:42" (3/4) ...
[2020-11-25 18:35:42,218 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@509a273e and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 06:35:42, skipping insertion in model container
[2020-11-25 18:35:42,218 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 06:35:42" (4/4) ...
[2020-11-25 18:35:42,221 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-25 18:35:42,233 INFO  L110   BuchiProductObserver]: Initial RCFG 6543 locations, 8022 edges
[2020-11-25 18:35:42,234 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-25 18:35:42,258 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-25 18:35:44,598 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-25 18:35:44,615 INFO  L110   BuchiProductObserver]: BuchiProgram size 14824 locations, 24993 edges
[2020-11-25 18:35:44,616 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 06:35:44 BoogieIcfgContainer
[2020-11-25 18:35:44,616 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-25 18:35:44,616 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-25 18:35:44,616 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-25 18:35:44,617 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-25 18:35:44,618 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 06:35:44" (1/1) ...
[2020-11-25 18:35:44,905 INFO  L313           BlockEncoder]: Initial Icfg 14824 locations, 24993 edges
[2020-11-25 18:35:44,905 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-25 18:35:44,905 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-25 18:35:44,905 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-25 18:35:44,906 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-25 18:35:44,927 INFO  L70    emoveInfeasibleEdges]: Removed 180 edges and 13 locations because of local infeasibility
[2020-11-25 18:35:44,949 INFO  L70        RemoveSinkStates]: Removed 116 edges and 77 locations by removing sink states
[2020-11-25 18:35:44,979 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-25 18:35:44,987 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-25 18:35:44,996 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-25 18:35:44,997 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-25 18:35:45,004 INFO  L313           BlockEncoder]: Encoded RCFG 14704 locations, 24653 edges
[2020-11-25 18:35:45,004 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 06:35:45 BasicIcfg
[2020-11-25 18:35:45,004 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-25 18:35:45,005 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-25 18:35:45,005 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-25 18:35:45,006 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-25 18:35:45,006 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 18:35:45,007 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "ITAMToken_0x3b4f7cb9e60362a49dd04eb0091a374d340e3efd_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 06:35:40" (1/6) ...
[2020-11-25 18:35:45,008 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@330a172 and model type ITAMToken_0x3b4f7cb9e60362a49dd04eb0091a374d340e3efd_transfer-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 06:35:45, skipping insertion in model container
[2020-11-25 18:35:45,008 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 18:35:45,008 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 06:35:40" (2/6) ...
[2020-11-25 18:35:45,008 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@330a172 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 06:35:45, skipping insertion in model container
[2020-11-25 18:35:45,008 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 18:35:45,008 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "ITAMToken_0x3b4f7cb9e60362a49dd04eb0091a374d340e3efd_transfer-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 06:35:42" (3/6) ...
[2020-11-25 18:35:45,008 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@330a172 and model type ITAMToken_0x3b4f7cb9e60362a49dd04eb0091a374d340e3efd_transfer-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 06:35:45, skipping insertion in model container
[2020-11-25 18:35:45,008 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 18:35:45,008 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 06:35:42" (4/6) ...
[2020-11-25 18:35:45,009 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@330a172 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 06:35:45, skipping insertion in model container
[2020-11-25 18:35:45,009 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 18:35:45,009 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 06:35:44" (5/6) ...
[2020-11-25 18:35:45,009 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@330a172 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 25.11 06:35:45, skipping insertion in model container
[2020-11-25 18:35:45,009 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 18:35:45,009 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 06:35:45" (6/6) ...
[2020-11-25 18:35:45,010 INFO  L404   chiAutomizerObserver]: Analyzing ICFG ITAMToken_0x3b4f7cb9e60362a49dd04eb0091a374d340e3efd_transfer-self.bpl_BEv2
[2020-11-25 18:35:45,041 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-25 18:35:45,041 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-25 18:35:45,041 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-25 18:35:45,041 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-25 18:35:45,041 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-25 18:35:45,041 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-25 18:35:45,041 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-25 18:35:45,041 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-25 18:35:45,041 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-25 18:35:45,130 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 14704 states.
[2020-11-25 18:35:45,229 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 18:35:45,229 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 18:35:45,230 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 18:35:45,238 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 18:35:45,238 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 18:35:45,238 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-25 18:35:45,238 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 14704 states.
[2020-11-25 18:35:45,295 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 18:35:45,295 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 18:35:45,295 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 18:35:45,297 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 18:35:45,297 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                  success_transfer_ITAMToken0 := false;
[L2]                  call_transfer_ITAMToken0 := false;
[L2]      CALL        call main();
[L14663]              assume null == 0;
[L14664]  CALL        call this := FreshRefGenerator__success();
[L9908]               havoc newRef;
[L9909]               assume Alloc[newRef] == false;
[L9910]               Alloc[newRef] := true;
[L9911]               assume newRef != null;
[L14664]  RET         call this := FreshRefGenerator__success();
[L14665]              assume now >= 0;
[L14666]              assume DType[this] == ITAMToken;
[L14667]              assume msgvalue_MSG == 0;
[L14668]              gas := gas - 53000;
[L14669]  CALL        call ITAMToken_ITAMToken(this, msgsender_MSG, msgvalue_MSG, _firstMaster_s868, _secondMaster_s868, _thirdMaster_s868, _owner_s868, _gameMaster_s868, _strategicSaleAddress_s868, _privateSaleAddress_s868, _publicSaleAddress_s868, _teamAddress_s868, _advisorAddress_s868, _marketingAddress_s868, _ecoAddress_s868, _inAppAddress_s868);
[L1968]               havoc __exception;
[L1969]               revert := false;
[L1970]   COND FALSE  !(__exception)
[L2040]   CALL        call ITAMToken_ITAMToken__success(this, msgsender_MSG, msgvalue_MSG, _firstMaster_s868, _secondMaster_s868, _thirdMaster_s868, _owner_s868, _gameMaster_s868, _strategicSaleAddress_s868, _privateSaleAddress_s868, _publicSaleAddress_s868, _teamAddress_s868, _advisorAddress_s868, _marketingAddress_s868, _ecoAddress_s868, _inAppAddress_s868);
[L10848]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L10138]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L10118]              assume msgsender_MSG != null;
[L10119]              Balance[this] := 0;
[L10120]              _balances_ERC20[this] := zeroRefintArr();
[L10121]              sum__balances0[this] := 0;
[L10122]              _allowed_ERC20[this] := zeroRefRefintArr();
[L10123]              sum__allowed1[this] := 0;
[L10124]              _totalSupply_ERC20[this] := 0;
[L10138]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L10139]  COND FALSE  !(revert)
[L10848]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L10849]  COND TRUE   revert
[L2040]   RET         call ITAMToken_ITAMToken__success(this, msgsender_MSG, msgvalue_MSG, _firstMaster_s868, _secondMaster_s868, _thirdMaster_s868, _owner_s868, _gameMaster_s868, _strategicSaleAddress_s868, _privateSaleAddress_s868, _publicSaleAddress_s868, _teamAddress_s868, _advisorAddress_s868, _marketingAddress_s868, _ecoAddress_s868, _inAppAddress_s868);
[L2041]               assume !revert && gas >= 0;
[L14669]  RET         call ITAMToken_ITAMToken(this, msgsender_MSG, msgvalue_MSG, _firstMaster_s868, _secondMaster_s868, _thirdMaster_s868, _owner_s868, _gameMaster_s868, _strategicSaleAddress_s868, _privateSaleAddress_s868, _publicSaleAddress_s868, _teamAddress_s868, _advisorAddress_s868, _marketingAddress_s868, _ecoAddress_s868, _inAppAddress_s868);
[L14670]              assume !revert && gas >= 0;

Loop:
[L14673]  CALL        call CorralChoice_ITAMToken(this);
[L14239]              havoc msgsender_MSG;
[L14240]              havoc msgvalue_MSG;
[L14241]              havoc choice;
[L14242]              havoc _to_s941;
[L14243]              havoc _value_s941;
[L14244]              havoc __ret_0_transfer;
[L14245]              havoc spender_s980;
[L14246]              havoc value_s980;
[L14247]              havoc __ret_0_approve;
[L14248]              havoc _from_s962;
[L14249]              havoc _to_s962;
[L14250]              havoc _value_s962;
[L14251]              havoc __ret_0_transferFrom;
[L14252]              havoc __ret_0_totalSupply;
[L14253]              havoc owner_s247;
[L14254]              havoc __ret_0_balanceOf;
[L14255]              havoc owner_s263;
[L14256]              havoc spender_s263;
[L14257]              havoc __ret_0_allowance;
[L14258]              havoc cap_s528;
[L14259]              havoc __ret_0_cap;
[L14260]              havoc __ret_0_name;
[L14261]              havoc __ret_0_symbol;
[L14262]              havoc __ret_0_decimals;
[L14263]              havoc __ret_0_firstMaster;
[L14264]              havoc __ret_0_secondMaster;
[L14265]              havoc __ret_0_thirdMaster;
[L14266]              havoc arg1575_s0;
[L14267]              havoc arg1576_s0;
[L14268]              havoc __ret_0_decidedOwner;
[L14269]              havoc __ret_0_owner;
[L14270]              havoc __ret_0_gameMaster;
[L14271]              havoc arg1577_s0;
[L14272]              havoc __ret_0_blackLists;
[L14273]              havoc __ret_0_unlockCount;
[L14274]              havoc __ret_0_strategicSaleAddress;
[L14275]              havoc arg1578_s0;
[L14276]              havoc __ret_0_strategicSaleReleaseCaps;
[L14277]              havoc __ret_0_privateSaleAddress;
[L14278]              havoc arg1579_s0;
[L14279]              havoc __ret_0_privateSaleReleaseCaps;
[L14280]              havoc __ret_0_publicSaleAddress;
[L14281]              havoc __ret_0_publicSaleReleaseCap;
[L14282]              havoc __ret_0_teamAddress;
[L14283]              havoc arg1580_s0;
[L14284]              havoc __ret_0_teamReleaseCaps;
[L14285]              havoc __ret_0_advisorAddress;
[L14286]              havoc arg1581_s0;
[L14287]              havoc __ret_0_advisorReleaseCaps;
[L14288]              havoc __ret_0_marketingAddress;
[L14289]              havoc arg1582_s0;
[L14290]              havoc __ret_0_marketingReleaseCaps;
[L14291]              havoc __ret_0_ecoAddress;
[L14292]              havoc arg1583_s0;
[L14293]              havoc __ret_0_ecoReleaseCaps;
[L14294]              havoc __ret_0_inAppAddress;
[L14295]              havoc _firstMaster_s868;
[L14296]              havoc _secondMaster_s868;
[L14297]              havoc _thirdMaster_s868;
[L14298]              havoc _owner_s868;
[L14299]              havoc _gameMaster_s868;
[L14300]              havoc _strategicSaleAddress_s868;
[L14301]              havoc _privateSaleAddress_s868;
[L14302]              havoc _publicSaleAddress_s868;
[L14303]              havoc _teamAddress_s868;
[L14304]              havoc _advisorAddress_s868;
[L14305]              havoc _marketingAddress_s868;
[L14306]              havoc _ecoAddress_s868;
[L14307]              havoc _inAppAddress_s868;
[L14308]              havoc _gameMaster_s923;
[L14309]              havoc value_s996;
[L14310]              havoc __ret_0_unlock;
[L14311]              havoc _strategicSaleAddress_s1169;
[L14312]              havoc _privateSaleAddress_s1169;
[L14313]              havoc _publicSaleAddress_s1169;
[L14314]              havoc _teamAddress_s1169;
[L14315]              havoc _advisorAddress_s1169;
[L14316]              havoc _marketingAddress_s1169;
[L14317]              havoc _ecoAddress_s1169;
[L14318]              havoc _inAppAddress_s1169;
[L14319]              havoc _owner_s1242;
[L14320]              havoc _to_s1264;
[L14321]              havoc _to_s1285;
[L14322]              havoc amount_s1321;
[L14323]              havoc appId_s1413;
[L14324]              havoc itemIds_s1413;
[L14325]              havoc tokenAddresses_s1413;
[L14326]              havoc values_s1413;
[L14327]              havoc __ret_0_createOrUpdateItem;
[L14328]              havoc tokenAddress_s1494;
[L14329]              havoc appId_s1494;
[L14330]              havoc itemId_s1494;
[L14331]              havoc __ret_0_purchaseItemOnERC20;
[L14332]              havoc appId_s1531;
[L14333]              havoc itemId_s1531;
[L14334]              havoc __ret_0_purchaseItemOnITAM;
[L14335]              havoc appId_s1572;
[L14336]              havoc itemId_s1572;
[L14337]              havoc __ret_0_purchaseItemOnEther;
[L14338]              havoc tmpNow;
[L14339]              havoc gas;
[L14340]              assume gas > 4000000 && gas <= 8000000;
[L14341]              tmpNow := now;
[L14342]              havoc now;
[L14343]              assume now > tmpNow;
[L14344]              assume msgsender_MSG != null;
[L14345]              assume DType[msgsender_MSG] != SafeMath;
[L14346]              assume DType[msgsender_MSG] != IERC20;
[L14347]              assume DType[msgsender_MSG] != ERC20;
[L14348]              assume DType[msgsender_MSG] != ERC20Capped;
[L14349]              assume DType[msgsender_MSG] != ITAMToken;
[L14350]              Alloc[msgsender_MSG] := true;
[L14351]  COND TRUE   choice == 45
[L14352]              gas := gas - 21000;
[L14353]  COND FALSE  !(gas >= 0)
[L14673]  RET         call CorralChoice_ITAMToken(this);

[2020-11-25 18:35:45,311 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 18:35:45,311 INFO  L82        PathProgramCache]: Analyzing trace with hash 122633097, now seen corresponding path program 1 times
[2020-11-25 18:35:45,314 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 18:35:45,356 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 18:35:45,397 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 18:35:45,400 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 18:35:45,400 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-25 18:35:45,985 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 18:35:45,993 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-25 18:35:45,994 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-25 18:35:45,995 INFO  L87              Difference]: Start difference. First operand 14704 states. Second operand 3 states.
[2020-11-25 18:35:46,473 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 18:35:46,474 INFO  L93              Difference]: Finished difference Result 15820 states and 26069 transitions.
[2020-11-25 18:35:46,474 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-25 18:35:46,475 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 15820 states and 26069 transitions.
[2020-11-25 18:35:46,560 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 18:35:46,668 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 15820 states to 15820 states and 26069 transitions.
[2020-11-25 18:35:46,669 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 13
[2020-11-25 18:35:46,672 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 659
[2020-11-25 18:35:46,673 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 15820 states and 26069 transitions.
[2020-11-25 18:35:46,712 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 18:35:46,712 INFO  L728         BuchiCegarLoop]: Abstraction has 15820 states and 26069 transitions.
[2020-11-25 18:35:46,740 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 15820 states and 26069 transitions.
[2020-11-25 18:35:46,942 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 15820 to 15082.
[2020-11-25 18:35:46,943 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 15082 states.
[2020-11-25 18:35:46,977 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 15082 states to 15082 states and 24844 transitions.
[2020-11-25 18:35:46,978 INFO  L751         BuchiCegarLoop]: Abstraction has 15082 states and 24844 transitions.
[2020-11-25 18:35:46,978 INFO  L631         BuchiCegarLoop]: Abstraction has 15082 states and 24844 transitions.
[2020-11-25 18:35:46,978 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-25 18:35:46,978 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 15082 states and 24844 transitions.
[2020-11-25 18:35:47,002 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 18:35:47,002 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 18:35:47,002 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 18:35:47,004 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 18:35:47,005 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                  success_transfer_ITAMToken0 := false;
[L2]                  call_transfer_ITAMToken0 := false;
[L2]      CALL        call main();
[L14663]              assume null == 0;
[L14664]  CALL        call this := FreshRefGenerator__success();
[L9908]               havoc newRef;
[L9909]               assume Alloc[newRef] == false;
[L9910]               Alloc[newRef] := true;
[L9911]               assume newRef != null;
[L14664]  RET         call this := FreshRefGenerator__success();
[L14665]              assume now >= 0;
[L14666]              assume DType[this] == ITAMToken;
[L14667]              assume msgvalue_MSG == 0;
[L14668]              gas := gas - 53000;
[L14669]  CALL        call ITAMToken_ITAMToken(this, msgsender_MSG, msgvalue_MSG, _firstMaster_s868, _secondMaster_s868, _thirdMaster_s868, _owner_s868, _gameMaster_s868, _strategicSaleAddress_s868, _privateSaleAddress_s868, _publicSaleAddress_s868, _teamAddress_s868, _advisorAddress_s868, _marketingAddress_s868, _ecoAddress_s868, _inAppAddress_s868);
[L1968]               havoc __exception;
[L1969]               revert := false;
[L1970]   COND TRUE   __exception
[L1971]               __tmp__Balance := Balance;
[L1972]               __tmp__DType := DType;
[L1973]               __tmp__Alloc := Alloc;
[L1974]               __tmp__balance_ADDR := balance_ADDR;
[L1975]               __tmp__M_Ref_int := M_Ref_int;
[L1976]               __tmp__sum__balances0 := sum__balances0;
[L1977]               __tmp__alloc__allowed_ERC20_lvl0 := alloc__allowed_ERC20_lvl0;
[L1978]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L1979]               __tmp__sum__allowed1 := sum__allowed1;
[L1980]               __tmp__M_Ref_bool := M_Ref_bool;
[L1981]               __tmp__alloc_decidedOwner_ITAMToken_lvl0 := alloc_decidedOwner_ITAMToken_lvl0;
[L1982]               __tmp__sum_decidedOwner2 := sum_decidedOwner2;
[L1983]               __tmp__sum_blackLists3 := sum_blackLists3;
[L1984]               __tmp__alloc_items_ITAMToken_lvl1 := alloc_items_ITAMToken_lvl1;
[L1985]               __tmp__M_int_Ref := M_int_Ref;
[L1986]               __tmp__alloc_items_ITAMToken_lvl0 := alloc_items_ITAMToken_lvl0;
[L1987]               __tmp__sum_items10 := sum_items10;
[L1988]               __tmp__M_int_int := M_int_int;
[L1989]               __tmp__sum_strategicSaleReleaseCaps4 := sum_strategicSaleReleaseCaps4;
[L1990]               __tmp__sum_privateSaleReleaseCaps5 := sum_privateSaleReleaseCaps5;
[L1991]               __tmp__sum_teamReleaseCaps6 := sum_teamReleaseCaps6;
[L1992]               __tmp__sum_advisorReleaseCaps7 := sum_advisorReleaseCaps7;
[L1993]               __tmp__sum_marketingReleaseCaps8 := sum_marketingReleaseCaps8;
[L1994]               __tmp__sum_ecoReleaseCaps9 := sum_ecoReleaseCaps9;
[L1995]               __tmp__sum := sum;
[L1996]               __tmp__Length := Length;
[L1997]               __tmp__now := now;
[L1998]               __tmp___balances_ERC20 := _balances_ERC20;
[L1999]               __tmp___allowed_ERC20 := _allowed_ERC20;
[L2000]               __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L2001]               __tmp___cap_ERC20Capped := _cap_ERC20Capped;
[L2002]               __tmp__name_ITAMToken := name_ITAMToken;
[L2003]               __tmp__symbol_ITAMToken := symbol_ITAMToken;
[L2004]               __tmp__decimals_ITAMToken := decimals_ITAMToken;
[L2005]               __tmp__TOTAL_CAP_ITAMToken := TOTAL_CAP_ITAMToken;
[L2006]               __tmp__firstMaster_ITAMToken := firstMaster_ITAMToken;
[L2007]               __tmp__secondMaster_ITAMToken := secondMaster_ITAMToken;
[L2008]               __tmp__thirdMaster_ITAMToken := thirdMaster_ITAMToken;
[L2009]               __tmp__decidedOwner_ITAMToken := decidedOwner_ITAMToken;
[L2010]               __tmp__owner_ITAMToken := owner_ITAMToken;
[L2011]               __tmp__gameMaster_ITAMToken := gameMaster_ITAMToken;
[L2012]               __tmp__blackLists_ITAMToken := blackLists_ITAMToken;
[L2013]               __tmp__unlockCount_ITAMToken := unlockCount_ITAMToken;
[L2014]               __tmp__strategicSaleAddress_ITAMToken := strategicSaleAddress_ITAMToken;
[L2015]               __tmp__Length_strategicSaleReleaseCaps_ITAMToken_lvl0 := Length_strategicSaleReleaseCaps_ITAMToken_lvl0;
[L2016]               __tmp__strategicSaleReleaseCaps_ITAMToken := strategicSaleReleaseCaps_ITAMToken;
[L2017]               __tmp__privateSaleAddress_ITAMToken := privateSaleAddress_ITAMToken;
[L2018]               __tmp__Length_privateSaleReleaseCaps_ITAMToken_lvl0 := Length_privateSaleReleaseCaps_ITAMToken_lvl0;
[L2019]               __tmp__privateSaleReleaseCaps_ITAMToken := privateSaleReleaseCaps_ITAMToken;
[L2020]               __tmp__publicSaleAddress_ITAMToken := publicSaleAddress_ITAMToken;
[L2021]               __tmp__publicSaleReleaseCap_ITAMToken := publicSaleReleaseCap_ITAMToken;
[L2022]               __tmp__teamAddress_ITAMToken := teamAddress_ITAMToken;
[L2023]               __tmp__Length_teamReleaseCaps_ITAMToken_lvl0 := Length_teamReleaseCaps_ITAMToken_lvl0;
[L2024]               __tmp__teamReleaseCaps_ITAMToken := teamReleaseCaps_ITAMToken;
[L2025]               __tmp__advisorAddress_ITAMToken := advisorAddress_ITAMToken;
[L2026]               __tmp__Length_advisorReleaseCaps_ITAMToken_lvl0 := Length_advisorReleaseCaps_ITAMToken_lvl0;
[L2027]               __tmp__advisorReleaseCaps_ITAMToken := advisorReleaseCaps_ITAMToken;
[L2028]               __tmp__marketingAddress_ITAMToken := marketingAddress_ITAMToken;
[L2029]               __tmp__Length_marketingReleaseCaps_ITAMToken_lvl0 := Length_marketingReleaseCaps_ITAMToken_lvl0;
[L2030]               __tmp__marketingReleaseCaps_ITAMToken := marketingReleaseCaps_ITAMToken;
[L2031]               __tmp__ecoAddress_ITAMToken := ecoAddress_ITAMToken;
[L2032]               __tmp__Length_ecoReleaseCaps_ITAMToken_lvl0 := Length_ecoReleaseCaps_ITAMToken_lvl0;
[L2033]               __tmp__ecoReleaseCaps_ITAMToken := ecoReleaseCaps_ITAMToken;
[L2034]               __tmp__inAppAddress_ITAMToken := inAppAddress_ITAMToken;
[L2035]               __tmp__erc20_ITAMToken := erc20_ITAMToken;
[L2036]               __tmp__items_ITAMToken := items_ITAMToken;
[L2037]   CALL        call ITAMToken_ITAMToken__fail(this, msgsender_MSG, msgvalue_MSG, _firstMaster_s868, _secondMaster_s868, _thirdMaster_s868, _owner_s868, _gameMaster_s868, _strategicSaleAddress_s868, _privateSaleAddress_s868, _publicSaleAddress_s868, _teamAddress_s868, _advisorAddress_s868, _marketingAddress_s868, _ecoAddress_s868, _inAppAddress_s868);
[L10832]  CALL        call ERC20_ERC20__fail(this, msgsender_MSG, msgvalue_MSG);
[L10130]  CALL        call ERC20_ERC20_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L10105]              assume msgsender_MSG != null;
[L10106]              __tmp__Balance[this] := 0;
[L10107]              __tmp___balances_ERC20[this] := zeroRefintArr();
[L10108]              __tmp__sum__balances0[this] := 0;
[L10109]              __tmp___allowed_ERC20[this] := zeroRefRefintArr();
[L10110]              __tmp__sum__allowed1[this] := 0;
[L10111]              __tmp___totalSupply_ERC20[this] := 0;
[L10130]  RET         call ERC20_ERC20_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L10131]  COND FALSE  !(revert)
[L10832]  RET         call ERC20_ERC20__fail(this, msgsender_MSG, msgvalue_MSG);
[L10833]  COND FALSE  !(revert)
[L10836]  CALL        call ERC20Capped_ERC20Capped__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__TOTAL_CAP_ITAMToken[this]);
[L10590]  CALL        call ERC20_ERC20__fail(this, msgsender_MSG, msgvalue_MSG);
[L10130]  CALL        call ERC20_ERC20_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L10105]              assume msgsender_MSG != null;
[L10106]              __tmp__Balance[this] := 0;
[L10107]              __tmp___balances_ERC20[this] := zeroRefintArr();
[L10108]              __tmp__sum__balances0[this] := 0;
[L10109]              __tmp___allowed_ERC20[this] := zeroRefRefintArr();
[L10110]              __tmp__sum__allowed1[this] := 0;
[L10111]              __tmp___totalSupply_ERC20[this] := 0;
[L10130]  RET         call ERC20_ERC20_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L10131]  COND FALSE  !(revert)
[L10590]  RET         call ERC20_ERC20__fail(this, msgsender_MSG, msgvalue_MSG);
[L10591]  COND FALSE  !(revert)
[L10594]  CALL        call ERC20Capped_ERC20Capped_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG, cap_s528);
[L10563]              assume msgsender_MSG != null;
[L10564]              __tmp__Balance[this] := 0;
[L10565]              __tmp___cap_ERC20Capped[this] := 0;
[L10567]  COND TRUE   !(cap_s528 > 0)
[L10568]              revert := true;
[L10594]  RET         call ERC20Capped_ERC20Capped_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG, cap_s528);
[L10595]  COND TRUE   revert
[L10836]  RET         call ERC20Capped_ERC20Capped__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__TOTAL_CAP_ITAMToken[this]);
[L10837]  COND TRUE   revert
[L2037]   RET         call ITAMToken_ITAMToken__fail(this, msgsender_MSG, msgvalue_MSG, _firstMaster_s868, _secondMaster_s868, _thirdMaster_s868, _owner_s868, _gameMaster_s868, _strategicSaleAddress_s868, _privateSaleAddress_s868, _publicSaleAddress_s868, _teamAddress_s868, _advisorAddress_s868, _marketingAddress_s868, _ecoAddress_s868, _inAppAddress_s868);
[L2038]               assume revert || gas < 0;
[L14669]  RET         call ITAMToken_ITAMToken(this, msgsender_MSG, msgvalue_MSG, _firstMaster_s868, _secondMaster_s868, _thirdMaster_s868, _owner_s868, _gameMaster_s868, _strategicSaleAddress_s868, _privateSaleAddress_s868, _publicSaleAddress_s868, _teamAddress_s868, _advisorAddress_s868, _marketingAddress_s868, _ecoAddress_s868, _inAppAddress_s868);
[L14670]              assume !revert && gas >= 0;

Loop:
[L14673]  CALL        call CorralChoice_ITAMToken(this);
[L14239]              havoc msgsender_MSG;
[L14240]              havoc msgvalue_MSG;
[L14241]              havoc choice;
[L14242]              havoc _to_s941;
[L14243]              havoc _value_s941;
[L14244]              havoc __ret_0_transfer;
[L14245]              havoc spender_s980;
[L14246]              havoc value_s980;
[L14247]              havoc __ret_0_approve;
[L14248]              havoc _from_s962;
[L14249]              havoc _to_s962;
[L14250]              havoc _value_s962;
[L14251]              havoc __ret_0_transferFrom;
[L14252]              havoc __ret_0_totalSupply;
[L14253]              havoc owner_s247;
[L14254]              havoc __ret_0_balanceOf;
[L14255]              havoc owner_s263;
[L14256]              havoc spender_s263;
[L14257]              havoc __ret_0_allowance;
[L14258]              havoc cap_s528;
[L14259]              havoc __ret_0_cap;
[L14260]              havoc __ret_0_name;
[L14261]              havoc __ret_0_symbol;
[L14262]              havoc __ret_0_decimals;
[L14263]              havoc __ret_0_firstMaster;
[L14264]              havoc __ret_0_secondMaster;
[L14265]              havoc __ret_0_thirdMaster;
[L14266]              havoc arg1575_s0;
[L14267]              havoc arg1576_s0;
[L14268]              havoc __ret_0_decidedOwner;
[L14269]              havoc __ret_0_owner;
[L14270]              havoc __ret_0_gameMaster;
[L14271]              havoc arg1577_s0;
[L14272]              havoc __ret_0_blackLists;
[L14273]              havoc __ret_0_unlockCount;
[L14274]              havoc __ret_0_strategicSaleAddress;
[L14275]              havoc arg1578_s0;
[L14276]              havoc __ret_0_strategicSaleReleaseCaps;
[L14277]              havoc __ret_0_privateSaleAddress;
[L14278]              havoc arg1579_s0;
[L14279]              havoc __ret_0_privateSaleReleaseCaps;
[L14280]              havoc __ret_0_publicSaleAddress;
[L14281]              havoc __ret_0_publicSaleReleaseCap;
[L14282]              havoc __ret_0_teamAddress;
[L14283]              havoc arg1580_s0;
[L14284]              havoc __ret_0_teamReleaseCaps;
[L14285]              havoc __ret_0_advisorAddress;
[L14286]              havoc arg1581_s0;
[L14287]              havoc __ret_0_advisorReleaseCaps;
[L14288]              havoc __ret_0_marketingAddress;
[L14289]              havoc arg1582_s0;
[L14290]              havoc __ret_0_marketingReleaseCaps;
[L14291]              havoc __ret_0_ecoAddress;
[L14292]              havoc arg1583_s0;
[L14293]              havoc __ret_0_ecoReleaseCaps;
[L14294]              havoc __ret_0_inAppAddress;
[L14295]              havoc _firstMaster_s868;
[L14296]              havoc _secondMaster_s868;
[L14297]              havoc _thirdMaster_s868;
[L14298]              havoc _owner_s868;
[L14299]              havoc _gameMaster_s868;
[L14300]              havoc _strategicSaleAddress_s868;
[L14301]              havoc _privateSaleAddress_s868;
[L14302]              havoc _publicSaleAddress_s868;
[L14303]              havoc _teamAddress_s868;
[L14304]              havoc _advisorAddress_s868;
[L14305]              havoc _marketingAddress_s868;
[L14306]              havoc _ecoAddress_s868;
[L14307]              havoc _inAppAddress_s868;
[L14308]              havoc _gameMaster_s923;
[L14309]              havoc value_s996;
[L14310]              havoc __ret_0_unlock;
[L14311]              havoc _strategicSaleAddress_s1169;
[L14312]              havoc _privateSaleAddress_s1169;
[L14313]              havoc _publicSaleAddress_s1169;
[L14314]              havoc _teamAddress_s1169;
[L14315]              havoc _advisorAddress_s1169;
[L14316]              havoc _marketingAddress_s1169;
[L14317]              havoc _ecoAddress_s1169;
[L14318]              havoc _inAppAddress_s1169;
[L14319]              havoc _owner_s1242;
[L14320]              havoc _to_s1264;
[L14321]              havoc _to_s1285;
[L14322]              havoc amount_s1321;
[L14323]              havoc appId_s1413;
[L14324]              havoc itemIds_s1413;
[L14325]              havoc tokenAddresses_s1413;
[L14326]              havoc values_s1413;
[L14327]              havoc __ret_0_createOrUpdateItem;
[L14328]              havoc tokenAddress_s1494;
[L14329]              havoc appId_s1494;
[L14330]              havoc itemId_s1494;
[L14331]              havoc __ret_0_purchaseItemOnERC20;
[L14332]              havoc appId_s1531;
[L14333]              havoc itemId_s1531;
[L14334]              havoc __ret_0_purchaseItemOnITAM;
[L14335]              havoc appId_s1572;
[L14336]              havoc itemId_s1572;
[L14337]              havoc __ret_0_purchaseItemOnEther;
[L14338]              havoc tmpNow;
[L14339]              havoc gas;
[L14340]              assume gas > 4000000 && gas <= 8000000;
[L14341]              tmpNow := now;
[L14342]              havoc now;
[L14343]              assume now > tmpNow;
[L14344]              assume msgsender_MSG != null;
[L14345]              assume DType[msgsender_MSG] != SafeMath;
[L14346]              assume DType[msgsender_MSG] != IERC20;
[L14347]              assume DType[msgsender_MSG] != ERC20;
[L14348]              assume DType[msgsender_MSG] != ERC20Capped;
[L14349]              assume DType[msgsender_MSG] != ITAMToken;
[L14350]              Alloc[msgsender_MSG] := true;
[L14351]  COND TRUE   choice == 45
[L14352]              gas := gas - 21000;
[L14353]  COND FALSE  !(gas >= 0)
[L14673]  RET         call CorralChoice_ITAMToken(this);

[2020-11-25 18:35:47,009 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 18:35:47,009 INFO  L82        PathProgramCache]: Analyzing trace with hash 790707973, now seen corresponding path program 1 times
[2020-11-25 18:35:47,010 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 18:35:47,022 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 18:35:47,061 INFO  L134       CoverageAnalysis]: Checked inductivity of 15 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 15 trivial. 0 not checked.
[2020-11-25 18:35:47,061 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 18:35:47,061 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 18:35:47,062 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 18:35:47,062 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 18:35:47,062 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 18:35:47,062 INFO  L87              Difference]: Start difference. First operand 15082 states and 24844 transitions. cyclomatic complexity: 9772 Second operand 4 states.
[2020-11-25 18:35:48,148 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 18:35:48,148 INFO  L93              Difference]: Finished difference Result 14766 states and 16910 transitions.
[2020-11-25 18:35:48,148 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 18:35:48,149 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 14766 states and 16910 transitions.
[2020-11-25 18:35:48,173 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 18:35:48,206 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 14766 states to 14766 states and 16910 transitions.
[2020-11-25 18:35:48,206 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 416
[2020-11-25 18:35:48,207 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 416
[2020-11-25 18:35:48,207 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 14766 states and 16910 transitions.
[2020-11-25 18:35:48,216 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 18:35:48,216 INFO  L728         BuchiCegarLoop]: Abstraction has 14766 states and 16910 transitions.
[2020-11-25 18:35:48,228 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 14766 states and 16910 transitions.
[2020-11-25 18:35:48,312 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 14766 to 14766.
[2020-11-25 18:35:48,312 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 14766 states.
[2020-11-25 18:35:48,327 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 14766 states to 14766 states and 16910 transitions.
[2020-11-25 18:35:48,327 INFO  L751         BuchiCegarLoop]: Abstraction has 14766 states and 16910 transitions.
[2020-11-25 18:35:48,327 INFO  L631         BuchiCegarLoop]: Abstraction has 14766 states and 16910 transitions.
[2020-11-25 18:35:48,328 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-25 18:35:48,328 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 14766 states and 16910 transitions.
[2020-11-25 18:35:48,341 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 18:35:48,341 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 18:35:48,342 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 18:35:48,344 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 18:35:48,344 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                  success_transfer_ITAMToken0 := false;
[L2]                  call_transfer_ITAMToken0 := false;
[L2]      CALL        call main();
[L14663]              assume null == 0;
[L14664]  CALL        call this := FreshRefGenerator__success();
[L9908]               havoc newRef;
[L9909]               assume Alloc[newRef] == false;
[L9910]               Alloc[newRef] := true;
[L9911]               assume newRef != null;
[L14664]  RET         call this := FreshRefGenerator__success();
[L14665]              assume now >= 0;
[L14666]              assume DType[this] == ITAMToken;
[L14667]              assume msgvalue_MSG == 0;
[L14668]              gas := gas - 53000;
[L14669]  CALL        call ITAMToken_ITAMToken(this, msgsender_MSG, msgvalue_MSG, _firstMaster_s868, _secondMaster_s868, _thirdMaster_s868, _owner_s868, _gameMaster_s868, _strategicSaleAddress_s868, _privateSaleAddress_s868, _publicSaleAddress_s868, _teamAddress_s868, _advisorAddress_s868, _marketingAddress_s868, _ecoAddress_s868, _inAppAddress_s868);
[L1968]               havoc __exception;
[L1969]               revert := false;
[L1970]   COND FALSE  !(__exception)
[L2040]   CALL        call ITAMToken_ITAMToken__success(this, msgsender_MSG, msgvalue_MSG, _firstMaster_s868, _secondMaster_s868, _thirdMaster_s868, _owner_s868, _gameMaster_s868, _strategicSaleAddress_s868, _privateSaleAddress_s868, _publicSaleAddress_s868, _teamAddress_s868, _advisorAddress_s868, _marketingAddress_s868, _ecoAddress_s868, _inAppAddress_s868);
[L10848]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L10138]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L10118]              assume msgsender_MSG != null;
[L10119]              Balance[this] := 0;
[L10120]              _balances_ERC20[this] := zeroRefintArr();
[L10121]              sum__balances0[this] := 0;
[L10122]              _allowed_ERC20[this] := zeroRefRefintArr();
[L10123]              sum__allowed1[this] := 0;
[L10124]              _totalSupply_ERC20[this] := 0;
[L10138]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L10139]  COND FALSE  !(revert)
[L10848]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L10849]  COND FALSE  !(revert)
[L10852]  CALL        call ERC20Capped_ERC20Capped__success(this, msgsender_MSG, msgvalue_MSG, TOTAL_CAP_ITAMToken[this]);
[L10602]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L10138]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L10118]              assume msgsender_MSG != null;
[L10119]              Balance[this] := 0;
[L10120]              _balances_ERC20[this] := zeroRefintArr();
[L10121]              sum__balances0[this] := 0;
[L10122]              _allowed_ERC20[this] := zeroRefRefintArr();
[L10123]              sum__allowed1[this] := 0;
[L10124]              _totalSupply_ERC20[this] := 0;
[L10138]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L10139]  COND FALSE  !(revert)
[L10602]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L10603]  COND FALSE  !(revert)
[L10606]  CALL        call ERC20Capped_ERC20Capped_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, cap_s528);
[L10577]              assume msgsender_MSG != null;
[L10578]              Balance[this] := 0;
[L10579]              _cap_ERC20Capped[this] := 0;
[L10581]  COND TRUE   !(cap_s528 > 0)
[L10582]              revert := true;
[L10606]  RET         call ERC20Capped_ERC20Capped_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, cap_s528);
[L10607]  COND TRUE   revert
[L10852]  RET         call ERC20Capped_ERC20Capped__success(this, msgsender_MSG, msgvalue_MSG, TOTAL_CAP_ITAMToken[this]);
[L10853]  COND TRUE   revert
[L2040]   RET         call ITAMToken_ITAMToken__success(this, msgsender_MSG, msgvalue_MSG, _firstMaster_s868, _secondMaster_s868, _thirdMaster_s868, _owner_s868, _gameMaster_s868, _strategicSaleAddress_s868, _privateSaleAddress_s868, _publicSaleAddress_s868, _teamAddress_s868, _advisorAddress_s868, _marketingAddress_s868, _ecoAddress_s868, _inAppAddress_s868);
[L2041]               assume !revert && gas >= 0;
[L14669]  RET         call ITAMToken_ITAMToken(this, msgsender_MSG, msgvalue_MSG, _firstMaster_s868, _secondMaster_s868, _thirdMaster_s868, _owner_s868, _gameMaster_s868, _strategicSaleAddress_s868, _privateSaleAddress_s868, _publicSaleAddress_s868, _teamAddress_s868, _advisorAddress_s868, _marketingAddress_s868, _ecoAddress_s868, _inAppAddress_s868);
[L14670]              assume !revert && gas >= 0;
[L14673]  CALL        call CorralChoice_ITAMToken(this);
[L14239]              havoc msgsender_MSG;
[L14240]              havoc msgvalue_MSG;
[L14241]              havoc choice;
[L14242]              havoc _to_s941;
[L14243]              havoc _value_s941;
[L14244]              havoc __ret_0_transfer;
[L14245]              havoc spender_s980;
[L14246]              havoc value_s980;
[L14247]              havoc __ret_0_approve;
[L14248]              havoc _from_s962;
[L14249]              havoc _to_s962;
[L14250]              havoc _value_s962;
[L14251]              havoc __ret_0_transferFrom;
[L14252]              havoc __ret_0_totalSupply;
[L14253]              havoc owner_s247;
[L14254]              havoc __ret_0_balanceOf;
[L14255]              havoc owner_s263;
[L14256]              havoc spender_s263;
[L14257]              havoc __ret_0_allowance;
[L14258]              havoc cap_s528;
[L14259]              havoc __ret_0_cap;
[L14260]              havoc __ret_0_name;
[L14261]              havoc __ret_0_symbol;
[L14262]              havoc __ret_0_decimals;
[L14263]              havoc __ret_0_firstMaster;
[L14264]              havoc __ret_0_secondMaster;
[L14265]              havoc __ret_0_thirdMaster;
[L14266]              havoc arg1575_s0;
[L14267]              havoc arg1576_s0;
[L14268]              havoc __ret_0_decidedOwner;
[L14269]              havoc __ret_0_owner;
[L14270]              havoc __ret_0_gameMaster;
[L14271]              havoc arg1577_s0;
[L14272]              havoc __ret_0_blackLists;
[L14273]              havoc __ret_0_unlockCount;
[L14274]              havoc __ret_0_strategicSaleAddress;
[L14275]              havoc arg1578_s0;
[L14276]              havoc __ret_0_strategicSaleReleaseCaps;
[L14277]              havoc __ret_0_privateSaleAddress;
[L14278]              havoc arg1579_s0;
[L14279]              havoc __ret_0_privateSaleReleaseCaps;
[L14280]              havoc __ret_0_publicSaleAddress;
[L14281]              havoc __ret_0_publicSaleReleaseCap;
[L14282]              havoc __ret_0_teamAddress;
[L14283]              havoc arg1580_s0;
[L14284]              havoc __ret_0_teamReleaseCaps;
[L14285]              havoc __ret_0_advisorAddress;
[L14286]              havoc arg1581_s0;
[L14287]              havoc __ret_0_advisorReleaseCaps;
[L14288]              havoc __ret_0_marketingAddress;
[L14289]              havoc arg1582_s0;
[L14290]              havoc __ret_0_marketingReleaseCaps;
[L14291]              havoc __ret_0_ecoAddress;
[L14292]              havoc arg1583_s0;
[L14293]              havoc __ret_0_ecoReleaseCaps;
[L14294]              havoc __ret_0_inAppAddress;
[L14295]              havoc _firstMaster_s868;
[L14296]              havoc _secondMaster_s868;
[L14297]              havoc _thirdMaster_s868;
[L14298]              havoc _owner_s868;
[L14299]              havoc _gameMaster_s868;
[L14300]              havoc _strategicSaleAddress_s868;
[L14301]              havoc _privateSaleAddress_s868;
[L14302]              havoc _publicSaleAddress_s868;
[L14303]              havoc _teamAddress_s868;
[L14304]              havoc _advisorAddress_s868;
[L14305]              havoc _marketingAddress_s868;
[L14306]              havoc _ecoAddress_s868;
[L14307]              havoc _inAppAddress_s868;
[L14308]              havoc _gameMaster_s923;
[L14309]              havoc value_s996;
[L14310]              havoc __ret_0_unlock;
[L14311]              havoc _strategicSaleAddress_s1169;
[L14312]              havoc _privateSaleAddress_s1169;
[L14313]              havoc _publicSaleAddress_s1169;
[L14314]              havoc _teamAddress_s1169;
[L14315]              havoc _advisorAddress_s1169;
[L14316]              havoc _marketingAddress_s1169;
[L14317]              havoc _ecoAddress_s1169;
[L14318]              havoc _inAppAddress_s1169;
[L14319]              havoc _owner_s1242;
[L14320]              havoc _to_s1264;
[L14321]              havoc _to_s1285;
[L14322]              havoc amount_s1321;
[L14323]              havoc appId_s1413;
[L14324]              havoc itemIds_s1413;
[L14325]              havoc tokenAddresses_s1413;
[L14326]              havoc values_s1413;
[L14327]              havoc __ret_0_createOrUpdateItem;
[L14328]              havoc tokenAddress_s1494;
[L14329]              havoc appId_s1494;
[L14330]              havoc itemId_s1494;
[L14331]              havoc __ret_0_purchaseItemOnERC20;
[L14332]              havoc appId_s1531;
[L14333]              havoc itemId_s1531;
[L14334]              havoc __ret_0_purchaseItemOnITAM;
[L14335]              havoc appId_s1572;
[L14336]              havoc itemId_s1572;
[L14337]              havoc __ret_0_purchaseItemOnEther;
[L14338]              havoc tmpNow;
[L14339]              havoc gas;
[L14340]              assume gas > 4000000 && gas <= 8000000;
[L14341]              tmpNow := now;
[L14342]              havoc now;
[L14343]              assume now > tmpNow;
[L14344]              assume msgsender_MSG != null;
[L14345]              assume DType[msgsender_MSG] != SafeMath;
[L14346]              assume DType[msgsender_MSG] != IERC20;
[L14347]              assume DType[msgsender_MSG] != ERC20;
[L14348]              assume DType[msgsender_MSG] != ERC20Capped;
[L14349]              assume DType[msgsender_MSG] != ITAMToken;
[L14350]              Alloc[msgsender_MSG] := true;
[L14351]  COND TRUE   choice == 45
[L14352]              gas := gas - 21000;
[L14353]  COND TRUE   gas >= 0
[L14354]              assume _value_s941 >= 0 && _value_s941 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L14355]              assume msgvalue_MSG == 0;
[L14356]  CALL        call __ret_0_transfer := transfer~address~uint256_ITAMToken(this, msgsender_MSG, msgvalue_MSG, _to_s941, _value_s941);
[L2]                  revert_hold := revert;
[L2]                  revert := false;
[L2]                  assume ((((((msgsender_MSG == _to_s941 && _value_s941 <= _balances_ERC20[this][msgsender_MSG]) && _value_s941 >= 0) && _value_s941 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][_to_s941] >= 0) && _balances_ERC20[this][_to_s941] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                  call_transfer_ITAMToken0 := true;
[L2]                  call_transfer_ITAMToken0 := false;
[L2]                  revert := revert_hold;
[L2267]               havoc __exception;
[L2268]               revert := false;
[L2269]   COND FALSE  !(__exception)
[L2339]   CALL        call __ret_0_ := transfer~address~uint256_ITAMToken__success(this, msgsender_MSG, msgvalue_MSG, _to_s941, _value_s941);
[L10904]  CALL        call onlyNotBlackList_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L13804]  COND TRUE   !!blackLists_ITAMToken[this][msgsender_MSG]
[L13805]              revert := true;
[L10904]  RET         call onlyNotBlackList_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L10905]  COND TRUE   revert
[L2339]   RET         call __ret_0_ := transfer~address~uint256_ITAMToken__success(this, msgsender_MSG, msgvalue_MSG, _to_s941, _value_s941);
[L2340]               assume !revert && gas >= 0;
[L2]                  revert_hold := revert;
[L2]                  revert := false;
[L2]                  assume !((((((((((((((((((((((((((((((((__ret_0_ == true && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _balances_ERC20[this] == old(_balances_ERC20[this])) && _allowed_ERC20[this] == old(_allowed_ERC20[this])) && name_ITAMToken[this] == old(name_ITAMToken[this])) && symbol_ITAMToken[this] == old(symbol_ITAMToken[this])) && decimals_ITAMToken[this] == old(decimals_ITAMToken[this])) && firstMaster_ITAMToken[this] == old(firstMaster_ITAMToken[this])) && secondMaster_ITAMToken[this] == old(secondMaster_ITAMToken[this])) && thirdMaster_ITAMToken[this] == old(thirdMaster_ITAMToken[this])) && decidedOwner_ITAMToken[this] == old(decidedOwner_ITAMToken[this])) && owner_ITAMToken[this] == old(owner_ITAMToken[this])) && gameMaster_ITAMToken[this] == old(gameMaster_ITAMToken[this])) && blackLists_ITAMToken[this] == old(blackLists_ITAMToken[this])) && unlockCount_ITAMToken[this] == old(unlockCount_ITAMToken[this])) && strategicSaleAddress_ITAMToken[this] == old(strategicSaleAddress_ITAMToken[this])) && strategicSaleReleaseCaps_ITAMToken[this] == old(strategicSaleReleaseCaps_ITAMToken[this])) && privateSaleAddress_ITAMToken[this] == old(privateSaleAddress_ITAMToken[this])) && privateSaleReleaseCaps_ITAMToken[this] == old(privateSaleReleaseCaps_ITAMToken[this])) && publicSaleAddress_ITAMToken[this] == old(publicSaleAddress_ITAMToken[this])) && publicSaleReleaseCap_ITAMToken[this] == old(publicSaleReleaseCap_ITAMToken[this])) && teamAddress_ITAMToken[this] == old(teamAddress_ITAMToken[this])) && teamReleaseCaps_ITAMToken[this] == old(teamReleaseCaps_ITAMToken[this])) && advisorAddress_ITAMToken[this] == old(advisorAddress_ITAMToken[this])) && advisorReleaseCaps_ITAMToken[this] == old(advisorReleaseCaps_ITAMToken[this])) && marketingAddress_ITAMToken[this] == old(marketingAddress_ITAMToken[this])) && marketingReleaseCaps_ITAMToken[this] == old(marketingReleaseCaps_ITAMToken[this])) && ecoAddress_ITAMToken[this] == old(ecoAddress_ITAMToken[this])) && ecoReleaseCaps_ITAMToken[this] == old(ecoReleaseCaps_ITAMToken[this])) && inAppAddress_ITAMToken[this] == old(inAppAddress_ITAMToken[this])) && erc20_ITAMToken[this] == old(erc20_ITAMToken[this])) && items_ITAMToken[this] == old(items_ITAMToken[this])) && _cap_ERC20Capped[this] == old(_cap_ERC20Capped[this]));
[L2]                  revert := revert_hold;
[L14356]  RET         call __ret_0_transfer := transfer~address~uint256_ITAMToken(this, msgsender_MSG, msgvalue_MSG, _to_s941, _value_s941);
[L14673]  RET         call CorralChoice_ITAMToken(this);

Loop:
[L14673]  CALL        call CorralChoice_ITAMToken(this);
[L14239]              havoc msgsender_MSG;
[L14240]              havoc msgvalue_MSG;
[L14241]              havoc choice;
[L14242]              havoc _to_s941;
[L14243]              havoc _value_s941;
[L14244]              havoc __ret_0_transfer;
[L14245]              havoc spender_s980;
[L14246]              havoc value_s980;
[L14247]              havoc __ret_0_approve;
[L14248]              havoc _from_s962;
[L14249]              havoc _to_s962;
[L14250]              havoc _value_s962;
[L14251]              havoc __ret_0_transferFrom;
[L14252]              havoc __ret_0_totalSupply;
[L14253]              havoc owner_s247;
[L14254]              havoc __ret_0_balanceOf;
[L14255]              havoc owner_s263;
[L14256]              havoc spender_s263;
[L14257]              havoc __ret_0_allowance;
[L14258]              havoc cap_s528;
[L14259]              havoc __ret_0_cap;
[L14260]              havoc __ret_0_name;
[L14261]              havoc __ret_0_symbol;
[L14262]              havoc __ret_0_decimals;
[L14263]              havoc __ret_0_firstMaster;
[L14264]              havoc __ret_0_secondMaster;
[L14265]              havoc __ret_0_thirdMaster;
[L14266]              havoc arg1575_s0;
[L14267]              havoc arg1576_s0;
[L14268]              havoc __ret_0_decidedOwner;
[L14269]              havoc __ret_0_owner;
[L14270]              havoc __ret_0_gameMaster;
[L14271]              havoc arg1577_s0;
[L14272]              havoc __ret_0_blackLists;
[L14273]              havoc __ret_0_unlockCount;
[L14274]              havoc __ret_0_strategicSaleAddress;
[L14275]              havoc arg1578_s0;
[L14276]              havoc __ret_0_strategicSaleReleaseCaps;
[L14277]              havoc __ret_0_privateSaleAddress;
[L14278]              havoc arg1579_s0;
[L14279]              havoc __ret_0_privateSaleReleaseCaps;
[L14280]              havoc __ret_0_publicSaleAddress;
[L14281]              havoc __ret_0_publicSaleReleaseCap;
[L14282]              havoc __ret_0_teamAddress;
[L14283]              havoc arg1580_s0;
[L14284]              havoc __ret_0_teamReleaseCaps;
[L14285]              havoc __ret_0_advisorAddress;
[L14286]              havoc arg1581_s0;
[L14287]              havoc __ret_0_advisorReleaseCaps;
[L14288]              havoc __ret_0_marketingAddress;
[L14289]              havoc arg1582_s0;
[L14290]              havoc __ret_0_marketingReleaseCaps;
[L14291]              havoc __ret_0_ecoAddress;
[L14292]              havoc arg1583_s0;
[L14293]              havoc __ret_0_ecoReleaseCaps;
[L14294]              havoc __ret_0_inAppAddress;
[L14295]              havoc _firstMaster_s868;
[L14296]              havoc _secondMaster_s868;
[L14297]              havoc _thirdMaster_s868;
[L14298]              havoc _owner_s868;
[L14299]              havoc _gameMaster_s868;
[L14300]              havoc _strategicSaleAddress_s868;
[L14301]              havoc _privateSaleAddress_s868;
[L14302]              havoc _publicSaleAddress_s868;
[L14303]              havoc _teamAddress_s868;
[L14304]              havoc _advisorAddress_s868;
[L14305]              havoc _marketingAddress_s868;
[L14306]              havoc _ecoAddress_s868;
[L14307]              havoc _inAppAddress_s868;
[L14308]              havoc _gameMaster_s923;
[L14309]              havoc value_s996;
[L14310]              havoc __ret_0_unlock;
[L14311]              havoc _strategicSaleAddress_s1169;
[L14312]              havoc _privateSaleAddress_s1169;
[L14313]              havoc _publicSaleAddress_s1169;
[L14314]              havoc _teamAddress_s1169;
[L14315]              havoc _advisorAddress_s1169;
[L14316]              havoc _marketingAddress_s1169;
[L14317]              havoc _ecoAddress_s1169;
[L14318]              havoc _inAppAddress_s1169;
[L14319]              havoc _owner_s1242;
[L14320]              havoc _to_s1264;
[L14321]              havoc _to_s1285;
[L14322]              havoc amount_s1321;
[L14323]              havoc appId_s1413;
[L14324]              havoc itemIds_s1413;
[L14325]              havoc tokenAddresses_s1413;
[L14326]              havoc values_s1413;
[L14327]              havoc __ret_0_createOrUpdateItem;
[L14328]              havoc tokenAddress_s1494;
[L14329]              havoc appId_s1494;
[L14330]              havoc itemId_s1494;
[L14331]              havoc __ret_0_purchaseItemOnERC20;
[L14332]              havoc appId_s1531;
[L14333]              havoc itemId_s1531;
[L14334]              havoc __ret_0_purchaseItemOnITAM;
[L14335]              havoc appId_s1572;
[L14336]              havoc itemId_s1572;
[L14337]              havoc __ret_0_purchaseItemOnEther;
[L14338]              havoc tmpNow;
[L14339]              havoc gas;
[L14340]              assume gas > 4000000 && gas <= 8000000;
[L14341]              tmpNow := now;
[L14342]              havoc now;
[L14343]              assume now > tmpNow;
[L14344]              assume msgsender_MSG != null;
[L14345]              assume DType[msgsender_MSG] != SafeMath;
[L14346]              assume DType[msgsender_MSG] != IERC20;
[L14347]              assume DType[msgsender_MSG] != ERC20;
[L14348]              assume DType[msgsender_MSG] != ERC20Capped;
[L14349]              assume DType[msgsender_MSG] != ITAMToken;
[L14350]              Alloc[msgsender_MSG] := true;
[L14351]  COND TRUE   choice == 45
[L14352]              gas := gas - 21000;
[L14353]  COND TRUE   gas >= 0
[L14354]              assume _value_s941 >= 0 && _value_s941 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L14355]              assume msgvalue_MSG == 0;
[L14356]  CALL        call __ret_0_transfer := transfer~address~uint256_ITAMToken(this, msgsender_MSG, msgvalue_MSG, _to_s941, _value_s941);
[L2]                  revert_hold := revert;
[L2]                  revert := false;
[L2]                  assume ((((((msgsender_MSG == _to_s941 && _value_s941 <= _balances_ERC20[this][msgsender_MSG]) && _value_s941 >= 0) && _value_s941 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][_to_s941] >= 0) && _balances_ERC20[this][_to_s941] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                  call_transfer_ITAMToken0 := true;
[L2]                  call_transfer_ITAMToken0 := false;
[L2]                  revert := revert_hold;
[L2267]               havoc __exception;
[L2268]               revert := false;
[L2269]   COND FALSE  !(__exception)
[L2339]   CALL        call __ret_0_ := transfer~address~uint256_ITAMToken__success(this, msgsender_MSG, msgvalue_MSG, _to_s941, _value_s941);
[L10904]  CALL        call onlyNotBlackList_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L13804]  COND TRUE   !!blackLists_ITAMToken[this][msgsender_MSG]
[L13805]              revert := true;
[L10904]  RET         call onlyNotBlackList_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L10905]  COND TRUE   revert
[L2339]   RET         call __ret_0_ := transfer~address~uint256_ITAMToken__success(this, msgsender_MSG, msgvalue_MSG, _to_s941, _value_s941);
[L2340]               assume !revert && gas >= 0;
[L2]                  revert_hold := revert;
[L2]                  revert := false;
[L2]                  assume !((((((((((((((((((((((((((((((((__ret_0_ == true && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _balances_ERC20[this] == old(_balances_ERC20[this])) && _allowed_ERC20[this] == old(_allowed_ERC20[this])) && name_ITAMToken[this] == old(name_ITAMToken[this])) && symbol_ITAMToken[this] == old(symbol_ITAMToken[this])) && decimals_ITAMToken[this] == old(decimals_ITAMToken[this])) && firstMaster_ITAMToken[this] == old(firstMaster_ITAMToken[this])) && secondMaster_ITAMToken[this] == old(secondMaster_ITAMToken[this])) && thirdMaster_ITAMToken[this] == old(thirdMaster_ITAMToken[this])) && decidedOwner_ITAMToken[this] == old(decidedOwner_ITAMToken[this])) && owner_ITAMToken[this] == old(owner_ITAMToken[this])) && gameMaster_ITAMToken[this] == old(gameMaster_ITAMToken[this])) && blackLists_ITAMToken[this] == old(blackLists_ITAMToken[this])) && unlockCount_ITAMToken[this] == old(unlockCount_ITAMToken[this])) && strategicSaleAddress_ITAMToken[this] == old(strategicSaleAddress_ITAMToken[this])) && strategicSaleReleaseCaps_ITAMToken[this] == old(strategicSaleReleaseCaps_ITAMToken[this])) && privateSaleAddress_ITAMToken[this] == old(privateSaleAddress_ITAMToken[this])) && privateSaleReleaseCaps_ITAMToken[this] == old(privateSaleReleaseCaps_ITAMToken[this])) && publicSaleAddress_ITAMToken[this] == old(publicSaleAddress_ITAMToken[this])) && publicSaleReleaseCap_ITAMToken[this] == old(publicSaleReleaseCap_ITAMToken[this])) && teamAddress_ITAMToken[this] == old(teamAddress_ITAMToken[this])) && teamReleaseCaps_ITAMToken[this] == old(teamReleaseCaps_ITAMToken[this])) && advisorAddress_ITAMToken[this] == old(advisorAddress_ITAMToken[this])) && advisorReleaseCaps_ITAMToken[this] == old(advisorReleaseCaps_ITAMToken[this])) && marketingAddress_ITAMToken[this] == old(marketingAddress_ITAMToken[this])) && marketingReleaseCaps_ITAMToken[this] == old(marketingReleaseCaps_ITAMToken[this])) && ecoAddress_ITAMToken[this] == old(ecoAddress_ITAMToken[this])) && ecoReleaseCaps_ITAMToken[this] == old(ecoReleaseCaps_ITAMToken[this])) && inAppAddress_ITAMToken[this] == old(inAppAddress_ITAMToken[this])) && erc20_ITAMToken[this] == old(erc20_ITAMToken[this])) && items_ITAMToken[this] == old(items_ITAMToken[this])) && _cap_ERC20Capped[this] == old(_cap_ERC20Capped[this]));
[L2]                  revert := revert_hold;
[L14356]  RET         call __ret_0_transfer := transfer~address~uint256_ITAMToken(this, msgsender_MSG, msgvalue_MSG, _to_s941, _value_s941);
[L14673]  RET         call CorralChoice_ITAMToken(this);

[2020-11-25 18:35:48,347 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 18:35:48,348 INFO  L82        PathProgramCache]: Analyzing trace with hash 365990188, now seen corresponding path program 1 times
[2020-11-25 18:35:48,348 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 18:35:48,364 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 18:35:48,399 INFO  L134       CoverageAnalysis]: Checked inductivity of 15 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 15 trivial. 0 not checked.
[2020-11-25 18:35:48,399 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 18:35:48,399 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-25 18:35:48,400 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 18:35:48,400 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-25 18:35:48,400 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-25 18:35:48,400 INFO  L87              Difference]: Start difference. First operand 14766 states and 16910 transitions. cyclomatic complexity: 2154 Second operand 3 states.
[2020-11-25 18:35:48,512 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 18:35:48,512 INFO  L93              Difference]: Finished difference Result 16032 states and 18155 transitions.
[2020-11-25 18:35:48,512 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-25 18:35:48,512 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 16032 states and 18155 transitions.
[2020-11-25 18:35:48,540 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 6
[2020-11-25 18:35:48,580 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 16032 states to 15454 states and 17447 transitions.
[2020-11-25 18:35:48,580 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 431
[2020-11-25 18:35:48,581 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 431
[2020-11-25 18:35:48,581 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 15454 states and 17447 transitions.
[2020-11-25 18:35:48,592 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 18:35:48,592 INFO  L728         BuchiCegarLoop]: Abstraction has 15454 states and 17447 transitions.
[2020-11-25 18:35:48,604 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 15454 states and 17447 transitions.
[2020-11-25 18:35:48,689 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 15454 to 14550.
[2020-11-25 18:35:48,690 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 14550 states.
[2020-11-25 18:35:48,704 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 14550 states to 14550 states and 16318 transitions.
[2020-11-25 18:35:48,705 INFO  L751         BuchiCegarLoop]: Abstraction has 14550 states and 16318 transitions.
[2020-11-25 18:35:48,705 INFO  L631         BuchiCegarLoop]: Abstraction has 14550 states and 16318 transitions.
[2020-11-25 18:35:48,705 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-25 18:35:48,705 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 14550 states and 16318 transitions.
[2020-11-25 18:35:48,719 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 18:35:48,719 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 18:35:48,719 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 18:35:48,721 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 18:35:48,721 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                  success_transfer_ITAMToken0 := false;
[L2]                  call_transfer_ITAMToken0 := false;
[L2]      CALL        call main();
[L14663]              assume null == 0;
[L14664]  CALL        call this := FreshRefGenerator__success();
[L9908]               havoc newRef;
[L9909]               assume Alloc[newRef] == false;
[L9910]               Alloc[newRef] := true;
[L9911]               assume newRef != null;
[L14664]  RET         call this := FreshRefGenerator__success();
[L14665]              assume now >= 0;
[L14666]              assume DType[this] == ITAMToken;
[L14667]              assume msgvalue_MSG == 0;
[L14668]              gas := gas - 53000;
[L14669]  CALL        call ITAMToken_ITAMToken(this, msgsender_MSG, msgvalue_MSG, _firstMaster_s868, _secondMaster_s868, _thirdMaster_s868, _owner_s868, _gameMaster_s868, _strategicSaleAddress_s868, _privateSaleAddress_s868, _publicSaleAddress_s868, _teamAddress_s868, _advisorAddress_s868, _marketingAddress_s868, _ecoAddress_s868, _inAppAddress_s868);
[L1968]               havoc __exception;
[L1969]               revert := false;
[L1970]   COND FALSE  !(__exception)
[L2040]   CALL        call ITAMToken_ITAMToken__success(this, msgsender_MSG, msgvalue_MSG, _firstMaster_s868, _secondMaster_s868, _thirdMaster_s868, _owner_s868, _gameMaster_s868, _strategicSaleAddress_s868, _privateSaleAddress_s868, _publicSaleAddress_s868, _teamAddress_s868, _advisorAddress_s868, _marketingAddress_s868, _ecoAddress_s868, _inAppAddress_s868);
[L10848]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L10138]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L10118]              assume msgsender_MSG != null;
[L10119]              Balance[this] := 0;
[L10120]              _balances_ERC20[this] := zeroRefintArr();
[L10121]              sum__balances0[this] := 0;
[L10122]              _allowed_ERC20[this] := zeroRefRefintArr();
[L10123]              sum__allowed1[this] := 0;
[L10124]              _totalSupply_ERC20[this] := 0;
[L10138]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L10139]  COND FALSE  !(revert)
[L10848]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L10849]  COND FALSE  !(revert)
[L10852]  CALL        call ERC20Capped_ERC20Capped__success(this, msgsender_MSG, msgvalue_MSG, TOTAL_CAP_ITAMToken[this]);
[L10602]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L10138]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L10118]              assume msgsender_MSG != null;
[L10119]              Balance[this] := 0;
[L10120]              _balances_ERC20[this] := zeroRefintArr();
[L10121]              sum__balances0[this] := 0;
[L10122]              _allowed_ERC20[this] := zeroRefRefintArr();
[L10123]              sum__allowed1[this] := 0;
[L10124]              _totalSupply_ERC20[this] := 0;
[L10138]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L10139]  COND FALSE  !(revert)
[L10602]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L10603]  COND FALSE  !(revert)
[L10606]  CALL        call ERC20Capped_ERC20Capped_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, cap_s528);
[L10577]              assume msgsender_MSG != null;
[L10578]              Balance[this] := 0;
[L10579]              _cap_ERC20Capped[this] := 0;
[L10581]  COND FALSE  !(!(cap_s528 > 0))
[L10585]              _cap_ERC20Capped[this] := cap_s528;
[L10606]  RET         call ERC20Capped_ERC20Capped_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, cap_s528);
[L10607]  COND FALSE  !(revert)
[L10852]  RET         call ERC20Capped_ERC20Capped__success(this, msgsender_MSG, msgvalue_MSG, TOTAL_CAP_ITAMToken[this]);
[L10853]  COND FALSE  !(revert)
[L10856]  CALL        call ITAMToken_ITAMToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, _firstMaster_s868, _secondMaster_s868, _thirdMaster_s868, _owner_s868, _gameMaster_s868, _strategicSaleAddress_s868, _privateSaleAddress_s868, _publicSaleAddress_s868, _teamAddress_s868, _advisorAddress_s868, _marketingAddress_s868, _ecoAddress_s868, _inAppAddress_s868);
[L10771]              assume msgsender_MSG != null;
[L10772]              Balance[this] := 0;
[L10773]              name_ITAMToken[this] := -1908028786;
[L10774]              symbol_ITAMToken[this] := -1908028786;
[L10775]              decimals_ITAMToken[this] := 18;
[L10776]              TOTAL_CAP_ITAMToken[this] := 2500000000;
[L10777]              firstMaster_ITAMToken[this] := null;
[L10778]              secondMaster_ITAMToken[this] := null;
[L10779]              thirdMaster_ITAMToken[this] := null;
[L10780]              decidedOwner_ITAMToken[this] := zeroRefRefboolArr();
[L10781]              owner_ITAMToken[this] := null;
[L10782]              gameMaster_ITAMToken[this] := null;
[L10783]              blackLists_ITAMToken[this] := zeroRefboolArr();
[L10784]              unlockCount_ITAMToken[this] := 0;
[L10785]              strategicSaleAddress_ITAMToken[this] := null;
[L10786]              Length_strategicSaleReleaseCaps_ITAMToken_lvl0[this] := 0;
[L10787]              strategicSaleReleaseCaps_ITAMToken[this] := zerointintArr();
[L10788]              sum_strategicSaleReleaseCaps4[this] := 0;
[L10789]              privateSaleAddress_ITAMToken[this] := null;
[L10790]              Length_privateSaleReleaseCaps_ITAMToken_lvl0[this] := 0;
[L10791]              privateSaleReleaseCaps_ITAMToken[this] := zerointintArr();
[L10792]              sum_privateSaleReleaseCaps5[this] := 0;
[L10793]              publicSaleAddress_ITAMToken[this] := null;
[L10794]              publicSaleReleaseCap_ITAMToken[this] := 200000000;
[L10795]              teamAddress_ITAMToken[this] := null;
[L10796]              Length_teamReleaseCaps_ITAMToken_lvl0[this] := 0;
[L10797]              teamReleaseCaps_ITAMToken[this] := zerointintArr();
[L10798]              sum_teamReleaseCaps6[this] := 0;
[L10799]              advisorAddress_ITAMToken[this] := null;
[L10800]              Length_advisorReleaseCaps_ITAMToken_lvl0[this] := 0;
[L10801]              advisorReleaseCaps_ITAMToken[this] := zerointintArr();
[L10802]              sum_advisorReleaseCaps7[this] := 0;
[L10803]              marketingAddress_ITAMToken[this] := null;
[L10804]              Length_marketingReleaseCaps_ITAMToken_lvl0[this] := 0;
[L10805]              marketingReleaseCaps_ITAMToken[this] := zerointintArr();
[L10806]              sum_marketingReleaseCaps8[this] := 0;
[L10807]              ecoAddress_ITAMToken[this] := null;
[L10808]              Length_ecoReleaseCaps_ITAMToken_lvl0[this] := 0;
[L10809]              ecoReleaseCaps_ITAMToken[this] := zerointintArr();
[L10810]              sum_ecoReleaseCaps9[this] := 0;
[L10811]              inAppAddress_ITAMToken[this] := null;
[L10812]              items_ITAMToken[this] := zerointintRefintArr();
[L10813]              sum_items10[this] := 0;
[L10815]              firstMaster_ITAMToken[this] := _firstMaster_s868;
[L10816]              secondMaster_ITAMToken[this] := _secondMaster_s868;
[L10817]              thirdMaster_ITAMToken[this] := _thirdMaster_s868;
[L10818]              owner_ITAMToken[this] := _owner_s868;
[L10819]              gameMaster_ITAMToken[this] := _gameMaster_s868;
[L10820]              strategicSaleAddress_ITAMToken[this] := _strategicSaleAddress_s868;
[L10821]              privateSaleAddress_ITAMToken[this] := _privateSaleAddress_s868;
[L10822]              publicSaleAddress_ITAMToken[this] := _publicSaleAddress_s868;
[L10823]              teamAddress_ITAMToken[this] := _teamAddress_s868;
[L10824]              advisorAddress_ITAMToken[this] := _advisorAddress_s868;
[L10825]              marketingAddress_ITAMToken[this] := _marketingAddress_s868;
[L10826]              ecoAddress_ITAMToken[this] := _ecoAddress_s868;
[L10827]              inAppAddress_ITAMToken[this] := _inAppAddress_s868;
[L10856]  RET         call ITAMToken_ITAMToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, _firstMaster_s868, _secondMaster_s868, _thirdMaster_s868, _owner_s868, _gameMaster_s868, _strategicSaleAddress_s868, _privateSaleAddress_s868, _publicSaleAddress_s868, _teamAddress_s868, _advisorAddress_s868, _marketingAddress_s868, _ecoAddress_s868, _inAppAddress_s868);
[L10857]  COND FALSE  !(revert)
[L2040]   RET         call ITAMToken_ITAMToken__success(this, msgsender_MSG, msgvalue_MSG, _firstMaster_s868, _secondMaster_s868, _thirdMaster_s868, _owner_s868, _gameMaster_s868, _strategicSaleAddress_s868, _privateSaleAddress_s868, _publicSaleAddress_s868, _teamAddress_s868, _advisorAddress_s868, _marketingAddress_s868, _ecoAddress_s868, _inAppAddress_s868);
[L2041]               assume !revert && gas >= 0;
[L14669]  RET         call ITAMToken_ITAMToken(this, msgsender_MSG, msgvalue_MSG, _firstMaster_s868, _secondMaster_s868, _thirdMaster_s868, _owner_s868, _gameMaster_s868, _strategicSaleAddress_s868, _privateSaleAddress_s868, _publicSaleAddress_s868, _teamAddress_s868, _advisorAddress_s868, _marketingAddress_s868, _ecoAddress_s868, _inAppAddress_s868);
[L14670]              assume !revert && gas >= 0;
[L14673]  CALL        call CorralChoice_ITAMToken(this);
[L14239]              havoc msgsender_MSG;
[L14240]              havoc msgvalue_MSG;
[L14241]              havoc choice;
[L14242]              havoc _to_s941;
[L14243]              havoc _value_s941;
[L14244]              havoc __ret_0_transfer;
[L14245]              havoc spender_s980;
[L14246]              havoc value_s980;
[L14247]              havoc __ret_0_approve;
[L14248]              havoc _from_s962;
[L14249]              havoc _to_s962;
[L14250]              havoc _value_s962;
[L14251]              havoc __ret_0_transferFrom;
[L14252]              havoc __ret_0_totalSupply;
[L14253]              havoc owner_s247;
[L14254]              havoc __ret_0_balanceOf;
[L14255]              havoc owner_s263;
[L14256]              havoc spender_s263;
[L14257]              havoc __ret_0_allowance;
[L14258]              havoc cap_s528;
[L14259]              havoc __ret_0_cap;
[L14260]              havoc __ret_0_name;
[L14261]              havoc __ret_0_symbol;
[L14262]              havoc __ret_0_decimals;
[L14263]              havoc __ret_0_firstMaster;
[L14264]              havoc __ret_0_secondMaster;
[L14265]              havoc __ret_0_thirdMaster;
[L14266]              havoc arg1575_s0;
[L14267]              havoc arg1576_s0;
[L14268]              havoc __ret_0_decidedOwner;
[L14269]              havoc __ret_0_owner;
[L14270]              havoc __ret_0_gameMaster;
[L14271]              havoc arg1577_s0;
[L14272]              havoc __ret_0_blackLists;
[L14273]              havoc __ret_0_unlockCount;
[L14274]              havoc __ret_0_strategicSaleAddress;
[L14275]              havoc arg1578_s0;
[L14276]              havoc __ret_0_strategicSaleReleaseCaps;
[L14277]              havoc __ret_0_privateSaleAddress;
[L14278]              havoc arg1579_s0;
[L14279]              havoc __ret_0_privateSaleReleaseCaps;
[L14280]              havoc __ret_0_publicSaleAddress;
[L14281]              havoc __ret_0_publicSaleReleaseCap;
[L14282]              havoc __ret_0_teamAddress;
[L14283]              havoc arg1580_s0;
[L14284]              havoc __ret_0_teamReleaseCaps;
[L14285]              havoc __ret_0_advisorAddress;
[L14286]              havoc arg1581_s0;
[L14287]              havoc __ret_0_advisorReleaseCaps;
[L14288]              havoc __ret_0_marketingAddress;
[L14289]              havoc arg1582_s0;
[L14290]              havoc __ret_0_marketingReleaseCaps;
[L14291]              havoc __ret_0_ecoAddress;
[L14292]              havoc arg1583_s0;
[L14293]              havoc __ret_0_ecoReleaseCaps;
[L14294]              havoc __ret_0_inAppAddress;
[L14295]              havoc _firstMaster_s868;
[L14296]              havoc _secondMaster_s868;
[L14297]              havoc _thirdMaster_s868;
[L14298]              havoc _owner_s868;
[L14299]              havoc _gameMaster_s868;
[L14300]              havoc _strategicSaleAddress_s868;
[L14301]              havoc _privateSaleAddress_s868;
[L14302]              havoc _publicSaleAddress_s868;
[L14303]              havoc _teamAddress_s868;
[L14304]              havoc _advisorAddress_s868;
[L14305]              havoc _marketingAddress_s868;
[L14306]              havoc _ecoAddress_s868;
[L14307]              havoc _inAppAddress_s868;
[L14308]              havoc _gameMaster_s923;
[L14309]              havoc value_s996;
[L14310]              havoc __ret_0_unlock;
[L14311]              havoc _strategicSaleAddress_s1169;
[L14312]              havoc _privateSaleAddress_s1169;
[L14313]              havoc _publicSaleAddress_s1169;
[L14314]              havoc _teamAddress_s1169;
[L14315]              havoc _advisorAddress_s1169;
[L14316]              havoc _marketingAddress_s1169;
[L14317]              havoc _ecoAddress_s1169;
[L14318]              havoc _inAppAddress_s1169;
[L14319]              havoc _owner_s1242;
[L14320]              havoc _to_s1264;
[L14321]              havoc _to_s1285;
[L14322]              havoc amount_s1321;
[L14323]              havoc appId_s1413;
[L14324]              havoc itemIds_s1413;
[L14325]              havoc tokenAddresses_s1413;
[L14326]              havoc values_s1413;
[L14327]              havoc __ret_0_createOrUpdateItem;
[L14328]              havoc tokenAddress_s1494;
[L14329]              havoc appId_s1494;
[L14330]              havoc itemId_s1494;
[L14331]              havoc __ret_0_purchaseItemOnERC20;
[L14332]              havoc appId_s1531;
[L14333]              havoc itemId_s1531;
[L14334]              havoc __ret_0_purchaseItemOnITAM;
[L14335]              havoc appId_s1572;
[L14336]              havoc itemId_s1572;
[L14337]              havoc __ret_0_purchaseItemOnEther;
[L14338]              havoc tmpNow;
[L14339]              havoc gas;
[L14340]              assume gas > 4000000 && gas <= 8000000;
[L14341]              tmpNow := now;
[L14342]              havoc now;
[L14343]              assume now > tmpNow;
[L14344]              assume msgsender_MSG != null;
[L14345]              assume DType[msgsender_MSG] != SafeMath;
[L14346]              assume DType[msgsender_MSG] != IERC20;
[L14347]              assume DType[msgsender_MSG] != ERC20;
[L14348]              assume DType[msgsender_MSG] != ERC20Capped;
[L14349]              assume DType[msgsender_MSG] != ITAMToken;
[L14350]              Alloc[msgsender_MSG] := true;
[L14351]  COND TRUE   choice == 45
[L14352]              gas := gas - 21000;
[L14353]  COND TRUE   gas >= 0
[L14354]              assume _value_s941 >= 0 && _value_s941 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L14355]              assume msgvalue_MSG == 0;
[L14356]  CALL        call __ret_0_transfer := transfer~address~uint256_ITAMToken(this, msgsender_MSG, msgvalue_MSG, _to_s941, _value_s941);
[L2]                  revert_hold := revert;
[L2]                  revert := false;
[L2]                  assume ((((((msgsender_MSG == _to_s941 && _value_s941 <= _balances_ERC20[this][msgsender_MSG]) && _value_s941 >= 0) && _value_s941 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][_to_s941] >= 0) && _balances_ERC20[this][_to_s941] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                  call_transfer_ITAMToken0 := true;
[L2]                  call_transfer_ITAMToken0 := false;
[L2]                  revert := revert_hold;
[L2267]               havoc __exception;
[L2268]               revert := false;
[L2269]   COND FALSE  !(__exception)
[L2339]   CALL        call __ret_0_ := transfer~address~uint256_ITAMToken__success(this, msgsender_MSG, msgvalue_MSG, _to_s941, _value_s941);
[L10904]  CALL        call onlyNotBlackList_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L13804]  COND FALSE  !(!!blackLists_ITAMToken[this][msgsender_MSG])
[L10904]  RET         call onlyNotBlackList_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L10905]  COND FALSE  !(revert)
[L10908]  COND TRUE   DType[this] == ITAMToken
[L10909]  CALL        call __var_16 := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, _to_s941, _value_s941);
[L10206]  COND TRUE   DType[this] == ITAMToken
[L10207]  CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s282, value_s282);
[L10401]              __var_2 := null;
[L10402]  COND FALSE  !(!(to_s382 != null))
[L10406]  CALL        call __var_3 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][from_s382], value_s382);
[L10017]  COND FALSE  !(!(b_s82 <= a_s82))
[L10021]              c_s82 := (a_s82 - b_s82) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L10022]              __ret_0_ := c_s82;
[L10406]  RET         call __var_3 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][from_s382], value_s382);
[L10407]  COND FALSE  !(revert)
[L10410]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][from_s382];
[L10411]              _balances_ERC20[this][from_s382] := __var_3;
[L10412]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][from_s382];
[L10413]  CALL        call __var_4 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][to_s382], value_s382);
[L10041]              c_s106 := (a_s106 + b_s106) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L10042]  COND FALSE  !(!(c_s106 >= a_s106))
[L10046]              __ret_0_ := c_s106;
[L10413]  RET         call __var_4 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][to_s382], value_s382);
[L10414]  COND FALSE  !(revert)
[L10417]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][to_s382];
[L10418]              _balances_ERC20[this][to_s382] := __var_4;
[L10419]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][to_s382];
[L10420]              assert { :EventEmitted "Transfer_ERC20" } true;
[L10207]  RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s282, value_s282);
[L10208]  COND FALSE  !(revert)
[L10224]              __ret_0_ := true;
[L10909]  RET         call __var_16 := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, _to_s941, _value_s941);
[L10910]  COND FALSE  !(revert)
[L10916]              __ret_0_ := __var_16;
[L2339]   RET         call __ret_0_ := transfer~address~uint256_ITAMToken__success(this, msgsender_MSG, msgvalue_MSG, _to_s941, _value_s941);
[L2340]               assume !revert && gas >= 0;
[L2]                  revert_hold := revert;
[L2]                  revert := false;
[L2]                  assume !((((((((((((((((((((((((((((((((__ret_0_ == true && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _balances_ERC20[this] == old(_balances_ERC20[this])) && _allowed_ERC20[this] == old(_allowed_ERC20[this])) && name_ITAMToken[this] == old(name_ITAMToken[this])) && symbol_ITAMToken[this] == old(symbol_ITAMToken[this])) && decimals_ITAMToken[this] == old(decimals_ITAMToken[this])) && firstMaster_ITAMToken[this] == old(firstMaster_ITAMToken[this])) && secondMaster_ITAMToken[this] == old(secondMaster_ITAMToken[this])) && thirdMaster_ITAMToken[this] == old(thirdMaster_ITAMToken[this])) && decidedOwner_ITAMToken[this] == old(decidedOwner_ITAMToken[this])) && owner_ITAMToken[this] == old(owner_ITAMToken[this])) && gameMaster_ITAMToken[this] == old(gameMaster_ITAMToken[this])) && blackLists_ITAMToken[this] == old(blackLists_ITAMToken[this])) && unlockCount_ITAMToken[this] == old(unlockCount_ITAMToken[this])) && strategicSaleAddress_ITAMToken[this] == old(strategicSaleAddress_ITAMToken[this])) && strategicSaleReleaseCaps_ITAMToken[this] == old(strategicSaleReleaseCaps_ITAMToken[this])) && privateSaleAddress_ITAMToken[this] == old(privateSaleAddress_ITAMToken[this])) && privateSaleReleaseCaps_ITAMToken[this] == old(privateSaleReleaseCaps_ITAMToken[this])) && publicSaleAddress_ITAMToken[this] == old(publicSaleAddress_ITAMToken[this])) && publicSaleReleaseCap_ITAMToken[this] == old(publicSaleReleaseCap_ITAMToken[this])) && teamAddress_ITAMToken[this] == old(teamAddress_ITAMToken[this])) && teamReleaseCaps_ITAMToken[this] == old(teamReleaseCaps_ITAMToken[this])) && advisorAddress_ITAMToken[this] == old(advisorAddress_ITAMToken[this])) && advisorReleaseCaps_ITAMToken[this] == old(advisorReleaseCaps_ITAMToken[this])) && marketingAddress_ITAMToken[this] == old(marketingAddress_ITAMToken[this])) && marketingReleaseCaps_ITAMToken[this] == old(marketingReleaseCaps_ITAMToken[this])) && ecoAddress_ITAMToken[this] == old(ecoAddress_ITAMToken[this])) && ecoReleaseCaps_ITAMToken[this] == old(ecoReleaseCaps_ITAMToken[this])) && inAppAddress_ITAMToken[this] == old(inAppAddress_ITAMToken[this])) && erc20_ITAMToken[this] == old(erc20_ITAMToken[this])) && items_ITAMToken[this] == old(items_ITAMToken[this])) && _cap_ERC20Capped[this] == old(_cap_ERC20Capped[this]));
[L2]                  revert := revert_hold;
[L14356]  RET         call __ret_0_transfer := transfer~address~uint256_ITAMToken(this, msgsender_MSG, msgvalue_MSG, _to_s941, _value_s941);
[L14673]  RET         call CorralChoice_ITAMToken(this);

Loop:
[L14673]  CALL        call CorralChoice_ITAMToken(this);
[L14239]              havoc msgsender_MSG;
[L14240]              havoc msgvalue_MSG;
[L14241]              havoc choice;
[L14242]              havoc _to_s941;
[L14243]              havoc _value_s941;
[L14244]              havoc __ret_0_transfer;
[L14245]              havoc spender_s980;
[L14246]              havoc value_s980;
[L14247]              havoc __ret_0_approve;
[L14248]              havoc _from_s962;
[L14249]              havoc _to_s962;
[L14250]              havoc _value_s962;
[L14251]              havoc __ret_0_transferFrom;
[L14252]              havoc __ret_0_totalSupply;
[L14253]              havoc owner_s247;
[L14254]              havoc __ret_0_balanceOf;
[L14255]              havoc owner_s263;
[L14256]              havoc spender_s263;
[L14257]              havoc __ret_0_allowance;
[L14258]              havoc cap_s528;
[L14259]              havoc __ret_0_cap;
[L14260]              havoc __ret_0_name;
[L14261]              havoc __ret_0_symbol;
[L14262]              havoc __ret_0_decimals;
[L14263]              havoc __ret_0_firstMaster;
[L14264]              havoc __ret_0_secondMaster;
[L14265]              havoc __ret_0_thirdMaster;
[L14266]              havoc arg1575_s0;
[L14267]              havoc arg1576_s0;
[L14268]              havoc __ret_0_decidedOwner;
[L14269]              havoc __ret_0_owner;
[L14270]              havoc __ret_0_gameMaster;
[L14271]              havoc arg1577_s0;
[L14272]              havoc __ret_0_blackLists;
[L14273]              havoc __ret_0_unlockCount;
[L14274]              havoc __ret_0_strategicSaleAddress;
[L14275]              havoc arg1578_s0;
[L14276]              havoc __ret_0_strategicSaleReleaseCaps;
[L14277]              havoc __ret_0_privateSaleAddress;
[L14278]              havoc arg1579_s0;
[L14279]              havoc __ret_0_privateSaleReleaseCaps;
[L14280]              havoc __ret_0_publicSaleAddress;
[L14281]              havoc __ret_0_publicSaleReleaseCap;
[L14282]              havoc __ret_0_teamAddress;
[L14283]              havoc arg1580_s0;
[L14284]              havoc __ret_0_teamReleaseCaps;
[L14285]              havoc __ret_0_advisorAddress;
[L14286]              havoc arg1581_s0;
[L14287]              havoc __ret_0_advisorReleaseCaps;
[L14288]              havoc __ret_0_marketingAddress;
[L14289]              havoc arg1582_s0;
[L14290]              havoc __ret_0_marketingReleaseCaps;
[L14291]              havoc __ret_0_ecoAddress;
[L14292]              havoc arg1583_s0;
[L14293]              havoc __ret_0_ecoReleaseCaps;
[L14294]              havoc __ret_0_inAppAddress;
[L14295]              havoc _firstMaster_s868;
[L14296]              havoc _secondMaster_s868;
[L14297]              havoc _thirdMaster_s868;
[L14298]              havoc _owner_s868;
[L14299]              havoc _gameMaster_s868;
[L14300]              havoc _strategicSaleAddress_s868;
[L14301]              havoc _privateSaleAddress_s868;
[L14302]              havoc _publicSaleAddress_s868;
[L14303]              havoc _teamAddress_s868;
[L14304]              havoc _advisorAddress_s868;
[L14305]              havoc _marketingAddress_s868;
[L14306]              havoc _ecoAddress_s868;
[L14307]              havoc _inAppAddress_s868;
[L14308]              havoc _gameMaster_s923;
[L14309]              havoc value_s996;
[L14310]              havoc __ret_0_unlock;
[L14311]              havoc _strategicSaleAddress_s1169;
[L14312]              havoc _privateSaleAddress_s1169;
[L14313]              havoc _publicSaleAddress_s1169;
[L14314]              havoc _teamAddress_s1169;
[L14315]              havoc _advisorAddress_s1169;
[L14316]              havoc _marketingAddress_s1169;
[L14317]              havoc _ecoAddress_s1169;
[L14318]              havoc _inAppAddress_s1169;
[L14319]              havoc _owner_s1242;
[L14320]              havoc _to_s1264;
[L14321]              havoc _to_s1285;
[L14322]              havoc amount_s1321;
[L14323]              havoc appId_s1413;
[L14324]              havoc itemIds_s1413;
[L14325]              havoc tokenAddresses_s1413;
[L14326]              havoc values_s1413;
[L14327]              havoc __ret_0_createOrUpdateItem;
[L14328]              havoc tokenAddress_s1494;
[L14329]              havoc appId_s1494;
[L14330]              havoc itemId_s1494;
[L14331]              havoc __ret_0_purchaseItemOnERC20;
[L14332]              havoc appId_s1531;
[L14333]              havoc itemId_s1531;
[L14334]              havoc __ret_0_purchaseItemOnITAM;
[L14335]              havoc appId_s1572;
[L14336]              havoc itemId_s1572;
[L14337]              havoc __ret_0_purchaseItemOnEther;
[L14338]              havoc tmpNow;
[L14339]              havoc gas;
[L14340]              assume gas > 4000000 && gas <= 8000000;
[L14341]              tmpNow := now;
[L14342]              havoc now;
[L14343]              assume now > tmpNow;
[L14344]              assume msgsender_MSG != null;
[L14345]              assume DType[msgsender_MSG] != SafeMath;
[L14346]              assume DType[msgsender_MSG] != IERC20;
[L14347]              assume DType[msgsender_MSG] != ERC20;
[L14348]              assume DType[msgsender_MSG] != ERC20Capped;
[L14349]              assume DType[msgsender_MSG] != ITAMToken;
[L14350]              Alloc[msgsender_MSG] := true;
[L14351]  COND TRUE   choice == 45
[L14352]              gas := gas - 21000;
[L14353]  COND TRUE   gas >= 0
[L14354]              assume _value_s941 >= 0 && _value_s941 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L14355]              assume msgvalue_MSG == 0;
[L14356]  CALL        call __ret_0_transfer := transfer~address~uint256_ITAMToken(this, msgsender_MSG, msgvalue_MSG, _to_s941, _value_s941);
[L2]                  revert_hold := revert;
[L2]                  revert := false;
[L2]                  assume ((((((msgsender_MSG == _to_s941 && _value_s941 <= _balances_ERC20[this][msgsender_MSG]) && _value_s941 >= 0) && _value_s941 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][_to_s941] >= 0) && _balances_ERC20[this][_to_s941] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                  call_transfer_ITAMToken0 := true;
[L2]                  call_transfer_ITAMToken0 := false;
[L2]                  revert := revert_hold;
[L2267]               havoc __exception;
[L2268]               revert := false;
[L2269]   COND FALSE  !(__exception)
[L2339]   CALL        call __ret_0_ := transfer~address~uint256_ITAMToken__success(this, msgsender_MSG, msgvalue_MSG, _to_s941, _value_s941);
[L10904]  CALL        call onlyNotBlackList_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L13804]  COND FALSE  !(!!blackLists_ITAMToken[this][msgsender_MSG])
[L10904]  RET         call onlyNotBlackList_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L10905]  COND FALSE  !(revert)
[L10908]  COND TRUE   DType[this] == ITAMToken
[L10909]  CALL        call __var_16 := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, _to_s941, _value_s941);
[L10206]  COND TRUE   DType[this] == ITAMToken
[L10207]  CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s282, value_s282);
[L10401]              __var_2 := null;
[L10402]  COND FALSE  !(!(to_s382 != null))
[L10406]  CALL        call __var_3 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][from_s382], value_s382);
[L10017]  COND FALSE  !(!(b_s82 <= a_s82))
[L10021]              c_s82 := (a_s82 - b_s82) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L10022]              __ret_0_ := c_s82;
[L10406]  RET         call __var_3 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][from_s382], value_s382);
[L10407]  COND FALSE  !(revert)
[L10410]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][from_s382];
[L10411]              _balances_ERC20[this][from_s382] := __var_3;
[L10412]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][from_s382];
[L10413]  CALL        call __var_4 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][to_s382], value_s382);
[L10041]              c_s106 := (a_s106 + b_s106) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L10042]  COND FALSE  !(!(c_s106 >= a_s106))
[L10046]              __ret_0_ := c_s106;
[L10413]  RET         call __var_4 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][to_s382], value_s382);
[L10414]  COND FALSE  !(revert)
[L10417]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][to_s382];
[L10418]              _balances_ERC20[this][to_s382] := __var_4;
[L10419]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][to_s382];
[L10420]              assert { :EventEmitted "Transfer_ERC20" } true;
[L10207]  RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s282, value_s282);
[L10208]  COND FALSE  !(revert)
[L10224]              __ret_0_ := true;
[L10909]  RET         call __var_16 := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, _to_s941, _value_s941);
[L10910]  COND FALSE  !(revert)
[L10916]              __ret_0_ := __var_16;
[L2339]   RET         call __ret_0_ := transfer~address~uint256_ITAMToken__success(this, msgsender_MSG, msgvalue_MSG, _to_s941, _value_s941);
[L2340]               assume !revert && gas >= 0;
[L2]                  revert_hold := revert;
[L2]                  revert := false;
[L2]                  assume !((((((((((((((((((((((((((((((((__ret_0_ == true && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _balances_ERC20[this] == old(_balances_ERC20[this])) && _allowed_ERC20[this] == old(_allowed_ERC20[this])) && name_ITAMToken[this] == old(name_ITAMToken[this])) && symbol_ITAMToken[this] == old(symbol_ITAMToken[this])) && decimals_ITAMToken[this] == old(decimals_ITAMToken[this])) && firstMaster_ITAMToken[this] == old(firstMaster_ITAMToken[this])) && secondMaster_ITAMToken[this] == old(secondMaster_ITAMToken[this])) && thirdMaster_ITAMToken[this] == old(thirdMaster_ITAMToken[this])) && decidedOwner_ITAMToken[this] == old(decidedOwner_ITAMToken[this])) && owner_ITAMToken[this] == old(owner_ITAMToken[this])) && gameMaster_ITAMToken[this] == old(gameMaster_ITAMToken[this])) && blackLists_ITAMToken[this] == old(blackLists_ITAMToken[this])) && unlockCount_ITAMToken[this] == old(unlockCount_ITAMToken[this])) && strategicSaleAddress_ITAMToken[this] == old(strategicSaleAddress_ITAMToken[this])) && strategicSaleReleaseCaps_ITAMToken[this] == old(strategicSaleReleaseCaps_ITAMToken[this])) && privateSaleAddress_ITAMToken[this] == old(privateSaleAddress_ITAMToken[this])) && privateSaleReleaseCaps_ITAMToken[this] == old(privateSaleReleaseCaps_ITAMToken[this])) && publicSaleAddress_ITAMToken[this] == old(publicSaleAddress_ITAMToken[this])) && publicSaleReleaseCap_ITAMToken[this] == old(publicSaleReleaseCap_ITAMToken[this])) && teamAddress_ITAMToken[this] == old(teamAddress_ITAMToken[this])) && teamReleaseCaps_ITAMToken[this] == old(teamReleaseCaps_ITAMToken[this])) && advisorAddress_ITAMToken[this] == old(advisorAddress_ITAMToken[this])) && advisorReleaseCaps_ITAMToken[this] == old(advisorReleaseCaps_ITAMToken[this])) && marketingAddress_ITAMToken[this] == old(marketingAddress_ITAMToken[this])) && marketingReleaseCaps_ITAMToken[this] == old(marketingReleaseCaps_ITAMToken[this])) && ecoAddress_ITAMToken[this] == old(ecoAddress_ITAMToken[this])) && ecoReleaseCaps_ITAMToken[this] == old(ecoReleaseCaps_ITAMToken[this])) && inAppAddress_ITAMToken[this] == old(inAppAddress_ITAMToken[this])) && erc20_ITAMToken[this] == old(erc20_ITAMToken[this])) && items_ITAMToken[this] == old(items_ITAMToken[this])) && _cap_ERC20Capped[this] == old(_cap_ERC20Capped[this]));
[L2]                  revert := revert_hold;
[L14356]  RET         call __ret_0_transfer := transfer~address~uint256_ITAMToken(this, msgsender_MSG, msgvalue_MSG, _to_s941, _value_s941);
[L14673]  RET         call CorralChoice_ITAMToken(this);

[2020-11-25 18:35:48,725 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 18:35:48,725 INFO  L82        PathProgramCache]: Analyzing trace with hash 952466490, now seen corresponding path program 1 times
[2020-11-25 18:35:48,726 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 18:35:48,779 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 18:35:49,290 INFO  L134       CoverageAnalysis]: Checked inductivity of 15 backedges. 10 proven. 0 refuted. 0 times theorem prover too weak. 5 trivial. 0 not checked.
[2020-11-25 18:35:49,290 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 18:35:49,290 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [26] imperfect sequences [] total 26
[2020-11-25 18:35:49,291 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 18:35:49,291 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 27 interpolants.
[2020-11-25 18:35:49,291 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=63, Invalid=639, Unknown=0, NotChecked=0, Total=702
[2020-11-25 18:35:49,292 INFO  L87              Difference]: Start difference. First operand 14550 states and 16318 transitions. cyclomatic complexity: 1778 Second operand 27 states.
[2020-11-25 18:36:07,948 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 18:36:07,948 INFO  L93              Difference]: Finished difference Result 14939 states and 16837 transitions.
[2020-11-25 18:36:07,948 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 30 states. 
[2020-11-25 18:36:07,948 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 14939 states and 16837 transitions.
[2020-11-25 18:36:07,974 INFO  L131   ngComponentsAnalysis]: Automaton has 4 accepting balls. 16
[2020-11-25 18:36:08,010 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 14939 states to 14939 states and 16837 transitions.
[2020-11-25 18:36:08,010 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 479
[2020-11-25 18:36:08,011 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 479
[2020-11-25 18:36:08,011 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 14939 states and 16837 transitions.
[2020-11-25 18:36:08,021 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 18:36:08,021 INFO  L728         BuchiCegarLoop]: Abstraction has 14939 states and 16837 transitions.
[2020-11-25 18:36:08,032 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 14939 states and 16837 transitions.
[2020-11-25 18:36:08,135 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 14939 to 14819.
[2020-11-25 18:36:08,135 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 14819 states.
[2020-11-25 18:36:08,151 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 14819 states to 14819 states and 16642 transitions.
[2020-11-25 18:36:08,151 INFO  L751         BuchiCegarLoop]: Abstraction has 14819 states and 16642 transitions.
[2020-11-25 18:36:08,151 INFO  L631         BuchiCegarLoop]: Abstraction has 14819 states and 16642 transitions.
[2020-11-25 18:36:08,151 INFO  L445         BuchiCegarLoop]: ======== Iteration 5============
[2020-11-25 18:36:08,151 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 14819 states and 16642 transitions.
[2020-11-25 18:36:08,165 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 8
[2020-11-25 18:36:08,165 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 18:36:08,165 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 18:36:08,168 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 18:36:08,168 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                  success_transfer_ITAMToken0 := false;
[L2]                  call_transfer_ITAMToken0 := false;
[L2]      CALL        call main();
[L14663]              assume null == 0;
[L14664]  CALL        call this := FreshRefGenerator__success();
[L9908]               havoc newRef;
[L9909]               assume Alloc[newRef] == false;
[L9910]               Alloc[newRef] := true;
[L9911]               assume newRef != null;
[L14664]  RET         call this := FreshRefGenerator__success();
[L14665]              assume now >= 0;
[L14666]              assume DType[this] == ITAMToken;
[L14667]              assume msgvalue_MSG == 0;
[L14668]              gas := gas - 53000;
[L14669]  CALL        call ITAMToken_ITAMToken(this, msgsender_MSG, msgvalue_MSG, _firstMaster_s868, _secondMaster_s868, _thirdMaster_s868, _owner_s868, _gameMaster_s868, _strategicSaleAddress_s868, _privateSaleAddress_s868, _publicSaleAddress_s868, _teamAddress_s868, _advisorAddress_s868, _marketingAddress_s868, _ecoAddress_s868, _inAppAddress_s868);
[L1968]               havoc __exception;
[L1969]               revert := false;
[L1970]   COND FALSE  !(__exception)
[L2040]   CALL        call ITAMToken_ITAMToken__success(this, msgsender_MSG, msgvalue_MSG, _firstMaster_s868, _secondMaster_s868, _thirdMaster_s868, _owner_s868, _gameMaster_s868, _strategicSaleAddress_s868, _privateSaleAddress_s868, _publicSaleAddress_s868, _teamAddress_s868, _advisorAddress_s868, _marketingAddress_s868, _ecoAddress_s868, _inAppAddress_s868);
[L10848]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L10138]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L10118]              assume msgsender_MSG != null;
[L10119]              Balance[this] := 0;
[L10120]              _balances_ERC20[this] := zeroRefintArr();
[L10121]              sum__balances0[this] := 0;
[L10122]              _allowed_ERC20[this] := zeroRefRefintArr();
[L10123]              sum__allowed1[this] := 0;
[L10124]              _totalSupply_ERC20[this] := 0;
[L10138]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L10139]  COND FALSE  !(revert)
[L10848]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L10849]  COND FALSE  !(revert)
[L10852]  CALL        call ERC20Capped_ERC20Capped__success(this, msgsender_MSG, msgvalue_MSG, TOTAL_CAP_ITAMToken[this]);
[L10602]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L10138]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L10118]              assume msgsender_MSG != null;
[L10119]              Balance[this] := 0;
[L10120]              _balances_ERC20[this] := zeroRefintArr();
[L10121]              sum__balances0[this] := 0;
[L10122]              _allowed_ERC20[this] := zeroRefRefintArr();
[L10123]              sum__allowed1[this] := 0;
[L10124]              _totalSupply_ERC20[this] := 0;
[L10138]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L10139]  COND FALSE  !(revert)
[L10602]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L10603]  COND FALSE  !(revert)
[L10606]  CALL        call ERC20Capped_ERC20Capped_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, cap_s528);
[L10577]              assume msgsender_MSG != null;
[L10578]              Balance[this] := 0;
[L10579]              _cap_ERC20Capped[this] := 0;
[L10581]  COND FALSE  !(!(cap_s528 > 0))
[L10585]              _cap_ERC20Capped[this] := cap_s528;
[L10606]  RET         call ERC20Capped_ERC20Capped_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, cap_s528);
[L10607]  COND FALSE  !(revert)
[L10852]  RET         call ERC20Capped_ERC20Capped__success(this, msgsender_MSG, msgvalue_MSG, TOTAL_CAP_ITAMToken[this]);
[L10853]  COND FALSE  !(revert)
[L10856]  CALL        call ITAMToken_ITAMToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, _firstMaster_s868, _secondMaster_s868, _thirdMaster_s868, _owner_s868, _gameMaster_s868, _strategicSaleAddress_s868, _privateSaleAddress_s868, _publicSaleAddress_s868, _teamAddress_s868, _advisorAddress_s868, _marketingAddress_s868, _ecoAddress_s868, _inAppAddress_s868);
[L10771]              assume msgsender_MSG != null;
[L10772]              Balance[this] := 0;
[L10773]              name_ITAMToken[this] := -1908028786;
[L10774]              symbol_ITAMToken[this] := -1908028786;
[L10775]              decimals_ITAMToken[this] := 18;
[L10776]              TOTAL_CAP_ITAMToken[this] := 2500000000;
[L10777]              firstMaster_ITAMToken[this] := null;
[L10778]              secondMaster_ITAMToken[this] := null;
[L10779]              thirdMaster_ITAMToken[this] := null;
[L10780]              decidedOwner_ITAMToken[this] := zeroRefRefboolArr();
[L10781]              owner_ITAMToken[this] := null;
[L10782]              gameMaster_ITAMToken[this] := null;
[L10783]              blackLists_ITAMToken[this] := zeroRefboolArr();
[L10784]              unlockCount_ITAMToken[this] := 0;
[L10785]              strategicSaleAddress_ITAMToken[this] := null;
[L10786]              Length_strategicSaleReleaseCaps_ITAMToken_lvl0[this] := 0;
[L10787]              strategicSaleReleaseCaps_ITAMToken[this] := zerointintArr();
[L10788]              sum_strategicSaleReleaseCaps4[this] := 0;
[L10789]              privateSaleAddress_ITAMToken[this] := null;
[L10790]              Length_privateSaleReleaseCaps_ITAMToken_lvl0[this] := 0;
[L10791]              privateSaleReleaseCaps_ITAMToken[this] := zerointintArr();
[L10792]              sum_privateSaleReleaseCaps5[this] := 0;
[L10793]              publicSaleAddress_ITAMToken[this] := null;
[L10794]              publicSaleReleaseCap_ITAMToken[this] := 200000000;
[L10795]              teamAddress_ITAMToken[this] := null;
[L10796]              Length_teamReleaseCaps_ITAMToken_lvl0[this] := 0;
[L10797]              teamReleaseCaps_ITAMToken[this] := zerointintArr();
[L10798]              sum_teamReleaseCaps6[this] := 0;
[L10799]              advisorAddress_ITAMToken[this] := null;
[L10800]              Length_advisorReleaseCaps_ITAMToken_lvl0[this] := 0;
[L10801]              advisorReleaseCaps_ITAMToken[this] := zerointintArr();
[L10802]              sum_advisorReleaseCaps7[this] := 0;
[L10803]              marketingAddress_ITAMToken[this] := null;
[L10804]              Length_marketingReleaseCaps_ITAMToken_lvl0[this] := 0;
[L10805]              marketingReleaseCaps_ITAMToken[this] := zerointintArr();
[L10806]              sum_marketingReleaseCaps8[this] := 0;
[L10807]              ecoAddress_ITAMToken[this] := null;
[L10808]              Length_ecoReleaseCaps_ITAMToken_lvl0[this] := 0;
[L10809]              ecoReleaseCaps_ITAMToken[this] := zerointintArr();
[L10810]              sum_ecoReleaseCaps9[this] := 0;
[L10811]              inAppAddress_ITAMToken[this] := null;
[L10812]              items_ITAMToken[this] := zerointintRefintArr();
[L10813]              sum_items10[this] := 0;
[L10815]              firstMaster_ITAMToken[this] := _firstMaster_s868;
[L10816]              secondMaster_ITAMToken[this] := _secondMaster_s868;
[L10817]              thirdMaster_ITAMToken[this] := _thirdMaster_s868;
[L10818]              owner_ITAMToken[this] := _owner_s868;
[L10819]              gameMaster_ITAMToken[this] := _gameMaster_s868;
[L10820]              strategicSaleAddress_ITAMToken[this] := _strategicSaleAddress_s868;
[L10821]              privateSaleAddress_ITAMToken[this] := _privateSaleAddress_s868;
[L10822]              publicSaleAddress_ITAMToken[this] := _publicSaleAddress_s868;
[L10823]              teamAddress_ITAMToken[this] := _teamAddress_s868;
[L10824]              advisorAddress_ITAMToken[this] := _advisorAddress_s868;
[L10825]              marketingAddress_ITAMToken[this] := _marketingAddress_s868;
[L10826]              ecoAddress_ITAMToken[this] := _ecoAddress_s868;
[L10827]              inAppAddress_ITAMToken[this] := _inAppAddress_s868;
[L10856]  RET         call ITAMToken_ITAMToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, _firstMaster_s868, _secondMaster_s868, _thirdMaster_s868, _owner_s868, _gameMaster_s868, _strategicSaleAddress_s868, _privateSaleAddress_s868, _publicSaleAddress_s868, _teamAddress_s868, _advisorAddress_s868, _marketingAddress_s868, _ecoAddress_s868, _inAppAddress_s868);
[L10857]  COND FALSE  !(revert)
[L2040]   RET         call ITAMToken_ITAMToken__success(this, msgsender_MSG, msgvalue_MSG, _firstMaster_s868, _secondMaster_s868, _thirdMaster_s868, _owner_s868, _gameMaster_s868, _strategicSaleAddress_s868, _privateSaleAddress_s868, _publicSaleAddress_s868, _teamAddress_s868, _advisorAddress_s868, _marketingAddress_s868, _ecoAddress_s868, _inAppAddress_s868);
[L2041]               assume !revert && gas >= 0;
[L14669]  RET         call ITAMToken_ITAMToken(this, msgsender_MSG, msgvalue_MSG, _firstMaster_s868, _secondMaster_s868, _thirdMaster_s868, _owner_s868, _gameMaster_s868, _strategicSaleAddress_s868, _privateSaleAddress_s868, _publicSaleAddress_s868, _teamAddress_s868, _advisorAddress_s868, _marketingAddress_s868, _ecoAddress_s868, _inAppAddress_s868);
[L14670]              assume !revert && gas >= 0;
[L14673]  CALL        call CorralChoice_ITAMToken(this);
[L14239]              havoc msgsender_MSG;
[L14240]              havoc msgvalue_MSG;
[L14241]              havoc choice;
[L14242]              havoc _to_s941;
[L14243]              havoc _value_s941;
[L14244]              havoc __ret_0_transfer;
[L14245]              havoc spender_s980;
[L14246]              havoc value_s980;
[L14247]              havoc __ret_0_approve;
[L14248]              havoc _from_s962;
[L14249]              havoc _to_s962;
[L14250]              havoc _value_s962;
[L14251]              havoc __ret_0_transferFrom;
[L14252]              havoc __ret_0_totalSupply;
[L14253]              havoc owner_s247;
[L14254]              havoc __ret_0_balanceOf;
[L14255]              havoc owner_s263;
[L14256]              havoc spender_s263;
[L14257]              havoc __ret_0_allowance;
[L14258]              havoc cap_s528;
[L14259]              havoc __ret_0_cap;
[L14260]              havoc __ret_0_name;
[L14261]              havoc __ret_0_symbol;
[L14262]              havoc __ret_0_decimals;
[L14263]              havoc __ret_0_firstMaster;
[L14264]              havoc __ret_0_secondMaster;
[L14265]              havoc __ret_0_thirdMaster;
[L14266]              havoc arg1575_s0;
[L14267]              havoc arg1576_s0;
[L14268]              havoc __ret_0_decidedOwner;
[L14269]              havoc __ret_0_owner;
[L14270]              havoc __ret_0_gameMaster;
[L14271]              havoc arg1577_s0;
[L14272]              havoc __ret_0_blackLists;
[L14273]              havoc __ret_0_unlockCount;
[L14274]              havoc __ret_0_strategicSaleAddress;
[L14275]              havoc arg1578_s0;
[L14276]              havoc __ret_0_strategicSaleReleaseCaps;
[L14277]              havoc __ret_0_privateSaleAddress;
[L14278]              havoc arg1579_s0;
[L14279]              havoc __ret_0_privateSaleReleaseCaps;
[L14280]              havoc __ret_0_publicSaleAddress;
[L14281]              havoc __ret_0_publicSaleReleaseCap;
[L14282]              havoc __ret_0_teamAddress;
[L14283]              havoc arg1580_s0;
[L14284]              havoc __ret_0_teamReleaseCaps;
[L14285]              havoc __ret_0_advisorAddress;
[L14286]              havoc arg1581_s0;
[L14287]              havoc __ret_0_advisorReleaseCaps;
[L14288]              havoc __ret_0_marketingAddress;
[L14289]              havoc arg1582_s0;
[L14290]              havoc __ret_0_marketingReleaseCaps;
[L14291]              havoc __ret_0_ecoAddress;
[L14292]              havoc arg1583_s0;
[L14293]              havoc __ret_0_ecoReleaseCaps;
[L14294]              havoc __ret_0_inAppAddress;
[L14295]              havoc _firstMaster_s868;
[L14296]              havoc _secondMaster_s868;
[L14297]              havoc _thirdMaster_s868;
[L14298]              havoc _owner_s868;
[L14299]              havoc _gameMaster_s868;
[L14300]              havoc _strategicSaleAddress_s868;
[L14301]              havoc _privateSaleAddress_s868;
[L14302]              havoc _publicSaleAddress_s868;
[L14303]              havoc _teamAddress_s868;
[L14304]              havoc _advisorAddress_s868;
[L14305]              havoc _marketingAddress_s868;
[L14306]              havoc _ecoAddress_s868;
[L14307]              havoc _inAppAddress_s868;
[L14308]              havoc _gameMaster_s923;
[L14309]              havoc value_s996;
[L14310]              havoc __ret_0_unlock;
[L14311]              havoc _strategicSaleAddress_s1169;
[L14312]              havoc _privateSaleAddress_s1169;
[L14313]              havoc _publicSaleAddress_s1169;
[L14314]              havoc _teamAddress_s1169;
[L14315]              havoc _advisorAddress_s1169;
[L14316]              havoc _marketingAddress_s1169;
[L14317]              havoc _ecoAddress_s1169;
[L14318]              havoc _inAppAddress_s1169;
[L14319]              havoc _owner_s1242;
[L14320]              havoc _to_s1264;
[L14321]              havoc _to_s1285;
[L14322]              havoc amount_s1321;
[L14323]              havoc appId_s1413;
[L14324]              havoc itemIds_s1413;
[L14325]              havoc tokenAddresses_s1413;
[L14326]              havoc values_s1413;
[L14327]              havoc __ret_0_createOrUpdateItem;
[L14328]              havoc tokenAddress_s1494;
[L14329]              havoc appId_s1494;
[L14330]              havoc itemId_s1494;
[L14331]              havoc __ret_0_purchaseItemOnERC20;
[L14332]              havoc appId_s1531;
[L14333]              havoc itemId_s1531;
[L14334]              havoc __ret_0_purchaseItemOnITAM;
[L14335]              havoc appId_s1572;
[L14336]              havoc itemId_s1572;
[L14337]              havoc __ret_0_purchaseItemOnEther;
[L14338]              havoc tmpNow;
[L14339]              havoc gas;
[L14340]              assume gas > 4000000 && gas <= 8000000;
[L14341]              tmpNow := now;
[L14342]              havoc now;
[L14343]              assume now > tmpNow;
[L14344]              assume msgsender_MSG != null;
[L14345]              assume DType[msgsender_MSG] != SafeMath;
[L14346]              assume DType[msgsender_MSG] != IERC20;
[L14347]              assume DType[msgsender_MSG] != ERC20;
[L14348]              assume DType[msgsender_MSG] != ERC20Capped;
[L14349]              assume DType[msgsender_MSG] != ITAMToken;
[L14350]              Alloc[msgsender_MSG] := true;
[L14351]  COND TRUE   choice == 45
[L14352]              gas := gas - 21000;
[L14353]  COND TRUE   gas >= 0
[L14354]              assume _value_s941 >= 0 && _value_s941 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L14355]              assume msgvalue_MSG == 0;
[L14356]  CALL        call __ret_0_transfer := transfer~address~uint256_ITAMToken(this, msgsender_MSG, msgvalue_MSG, _to_s941, _value_s941);
[L2]                  revert_hold := revert;
[L2]                  revert := false;
[L2]                  assume ((((((msgsender_MSG == _to_s941 && _value_s941 <= _balances_ERC20[this][msgsender_MSG]) && _value_s941 >= 0) && _value_s941 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][_to_s941] >= 0) && _balances_ERC20[this][_to_s941] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                  call_transfer_ITAMToken0 := true;
[L2]                  call_transfer_ITAMToken0 := false;
[L2]                  revert := revert_hold;
[L2267]               havoc __exception;
[L2268]               revert := false;
[L2269]   COND TRUE   __exception
[L2270]               __tmp__Balance := Balance;
[L2271]               __tmp__DType := DType;
[L2272]               __tmp__Alloc := Alloc;
[L2273]               __tmp__balance_ADDR := balance_ADDR;
[L2274]               __tmp__M_Ref_int := M_Ref_int;
[L2275]               __tmp__sum__balances0 := sum__balances0;
[L2276]               __tmp__alloc__allowed_ERC20_lvl0 := alloc__allowed_ERC20_lvl0;
[L2277]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L2278]               __tmp__sum__allowed1 := sum__allowed1;
[L2279]               __tmp__M_Ref_bool := M_Ref_bool;
[L2280]               __tmp__alloc_decidedOwner_ITAMToken_lvl0 := alloc_decidedOwner_ITAMToken_lvl0;
[L2281]               __tmp__sum_decidedOwner2 := sum_decidedOwner2;
[L2282]               __tmp__sum_blackLists3 := sum_blackLists3;
[L2283]               __tmp__alloc_items_ITAMToken_lvl1 := alloc_items_ITAMToken_lvl1;
[L2284]               __tmp__M_int_Ref := M_int_Ref;
[L2285]               __tmp__alloc_items_ITAMToken_lvl0 := alloc_items_ITAMToken_lvl0;
[L2286]               __tmp__sum_items10 := sum_items10;
[L2287]               __tmp__M_int_int := M_int_int;
[L2288]               __tmp__sum_strategicSaleReleaseCaps4 := sum_strategicSaleReleaseCaps4;
[L2289]               __tmp__sum_privateSaleReleaseCaps5 := sum_privateSaleReleaseCaps5;
[L2290]               __tmp__sum_teamReleaseCaps6 := sum_teamReleaseCaps6;
[L2291]               __tmp__sum_advisorReleaseCaps7 := sum_advisorReleaseCaps7;
[L2292]               __tmp__sum_marketingReleaseCaps8 := sum_marketingReleaseCaps8;
[L2293]               __tmp__sum_ecoReleaseCaps9 := sum_ecoReleaseCaps9;
[L2294]               __tmp__sum := sum;
[L2295]               __tmp__Length := Length;
[L2296]               __tmp__now := now;
[L2297]               __tmp___balances_ERC20 := _balances_ERC20;
[L2298]               __tmp___allowed_ERC20 := _allowed_ERC20;
[L2299]               __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L2300]               __tmp___cap_ERC20Capped := _cap_ERC20Capped;
[L2301]               __tmp__name_ITAMToken := name_ITAMToken;
[L2302]               __tmp__symbol_ITAMToken := symbol_ITAMToken;
[L2303]               __tmp__decimals_ITAMToken := decimals_ITAMToken;
[L2304]               __tmp__TOTAL_CAP_ITAMToken := TOTAL_CAP_ITAMToken;
[L2305]               __tmp__firstMaster_ITAMToken := firstMaster_ITAMToken;
[L2306]               __tmp__secondMaster_ITAMToken := secondMaster_ITAMToken;
[L2307]               __tmp__thirdMaster_ITAMToken := thirdMaster_ITAMToken;
[L2308]               __tmp__decidedOwner_ITAMToken := decidedOwner_ITAMToken;
[L2309]               __tmp__owner_ITAMToken := owner_ITAMToken;
[L2310]               __tmp__gameMaster_ITAMToken := gameMaster_ITAMToken;
[L2311]               __tmp__blackLists_ITAMToken := blackLists_ITAMToken;
[L2312]               __tmp__unlockCount_ITAMToken := unlockCount_ITAMToken;
[L2313]               __tmp__strategicSaleAddress_ITAMToken := strategicSaleAddress_ITAMToken;
[L2314]               __tmp__Length_strategicSaleReleaseCaps_ITAMToken_lvl0 := Length_strategicSaleReleaseCaps_ITAMToken_lvl0;
[L2315]               __tmp__strategicSaleReleaseCaps_ITAMToken := strategicSaleReleaseCaps_ITAMToken;
[L2316]               __tmp__privateSaleAddress_ITAMToken := privateSaleAddress_ITAMToken;
[L2317]               __tmp__Length_privateSaleReleaseCaps_ITAMToken_lvl0 := Length_privateSaleReleaseCaps_ITAMToken_lvl0;
[L2318]               __tmp__privateSaleReleaseCaps_ITAMToken := privateSaleReleaseCaps_ITAMToken;
[L2319]               __tmp__publicSaleAddress_ITAMToken := publicSaleAddress_ITAMToken;
[L2320]               __tmp__publicSaleReleaseCap_ITAMToken := publicSaleReleaseCap_ITAMToken;
[L2321]               __tmp__teamAddress_ITAMToken := teamAddress_ITAMToken;
[L2322]               __tmp__Length_teamReleaseCaps_ITAMToken_lvl0 := Length_teamReleaseCaps_ITAMToken_lvl0;
[L2323]               __tmp__teamReleaseCaps_ITAMToken := teamReleaseCaps_ITAMToken;
[L2324]               __tmp__advisorAddress_ITAMToken := advisorAddress_ITAMToken;
[L2325]               __tmp__Length_advisorReleaseCaps_ITAMToken_lvl0 := Length_advisorReleaseCaps_ITAMToken_lvl0;
[L2326]               __tmp__advisorReleaseCaps_ITAMToken := advisorReleaseCaps_ITAMToken;
[L2327]               __tmp__marketingAddress_ITAMToken := marketingAddress_ITAMToken;
[L2328]               __tmp__Length_marketingReleaseCaps_ITAMToken_lvl0 := Length_marketingReleaseCaps_ITAMToken_lvl0;
[L2329]               __tmp__marketingReleaseCaps_ITAMToken := marketingReleaseCaps_ITAMToken;
[L2330]               __tmp__ecoAddress_ITAMToken := ecoAddress_ITAMToken;
[L2331]               __tmp__Length_ecoReleaseCaps_ITAMToken_lvl0 := Length_ecoReleaseCaps_ITAMToken_lvl0;
[L2332]               __tmp__ecoReleaseCaps_ITAMToken := ecoReleaseCaps_ITAMToken;
[L2333]               __tmp__inAppAddress_ITAMToken := inAppAddress_ITAMToken;
[L2334]               __tmp__erc20_ITAMToken := erc20_ITAMToken;
[L2335]               __tmp__items_ITAMToken := items_ITAMToken;
[L2336]   CALL        call __ret_0_ := transfer~address~uint256_ITAMToken__fail(this, msgsender_MSG, msgvalue_MSG, _to_s941, _value_s941);
[L10884]  CALL        call onlyNotBlackList_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L13796]  COND TRUE   !!__tmp__blackLists_ITAMToken[this][msgsender_MSG]
[L13797]              revert := true;
[L10884]  RET         call onlyNotBlackList_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L10885]  COND TRUE   revert
[L2336]   RET         call __ret_0_ := transfer~address~uint256_ITAMToken__fail(this, msgsender_MSG, msgvalue_MSG, _to_s941, _value_s941);
[L2337]               assume revert || gas < 0;
[L14356]  RET         call __ret_0_transfer := transfer~address~uint256_ITAMToken(this, msgsender_MSG, msgvalue_MSG, _to_s941, _value_s941);
[L14673]  RET         call CorralChoice_ITAMToken(this);

Loop:
[L14673]  CALL       call CorralChoice_ITAMToken(this);
[L14239]             havoc msgsender_MSG;
[L14240]             havoc msgvalue_MSG;
[L14241]             havoc choice;
[L14242]             havoc _to_s941;
[L14243]             havoc _value_s941;
[L14244]             havoc __ret_0_transfer;
[L14245]             havoc spender_s980;
[L14246]             havoc value_s980;
[L14247]             havoc __ret_0_approve;
[L14248]             havoc _from_s962;
[L14249]             havoc _to_s962;
[L14250]             havoc _value_s962;
[L14251]             havoc __ret_0_transferFrom;
[L14252]             havoc __ret_0_totalSupply;
[L14253]             havoc owner_s247;
[L14254]             havoc __ret_0_balanceOf;
[L14255]             havoc owner_s263;
[L14256]             havoc spender_s263;
[L14257]             havoc __ret_0_allowance;
[L14258]             havoc cap_s528;
[L14259]             havoc __ret_0_cap;
[L14260]             havoc __ret_0_name;
[L14261]             havoc __ret_0_symbol;
[L14262]             havoc __ret_0_decimals;
[L14263]             havoc __ret_0_firstMaster;
[L14264]             havoc __ret_0_secondMaster;
[L14265]             havoc __ret_0_thirdMaster;
[L14266]             havoc arg1575_s0;
[L14267]             havoc arg1576_s0;
[L14268]             havoc __ret_0_decidedOwner;
[L14269]             havoc __ret_0_owner;
[L14270]             havoc __ret_0_gameMaster;
[L14271]             havoc arg1577_s0;
[L14272]             havoc __ret_0_blackLists;
[L14273]             havoc __ret_0_unlockCount;
[L14274]             havoc __ret_0_strategicSaleAddress;
[L14275]             havoc arg1578_s0;
[L14276]             havoc __ret_0_strategicSaleReleaseCaps;
[L14277]             havoc __ret_0_privateSaleAddress;
[L14278]             havoc arg1579_s0;
[L14279]             havoc __ret_0_privateSaleReleaseCaps;
[L14280]             havoc __ret_0_publicSaleAddress;
[L14281]             havoc __ret_0_publicSaleReleaseCap;
[L14282]             havoc __ret_0_teamAddress;
[L14283]             havoc arg1580_s0;
[L14284]             havoc __ret_0_teamReleaseCaps;
[L14285]             havoc __ret_0_advisorAddress;
[L14286]             havoc arg1581_s0;
[L14287]             havoc __ret_0_advisorReleaseCaps;
[L14288]             havoc __ret_0_marketingAddress;
[L14289]             havoc arg1582_s0;
[L14290]             havoc __ret_0_marketingReleaseCaps;
[L14291]             havoc __ret_0_ecoAddress;
[L14292]             havoc arg1583_s0;
[L14293]             havoc __ret_0_ecoReleaseCaps;
[L14294]             havoc __ret_0_inAppAddress;
[L14295]             havoc _firstMaster_s868;
[L14296]             havoc _secondMaster_s868;
[L14297]             havoc _thirdMaster_s868;
[L14298]             havoc _owner_s868;
[L14299]             havoc _gameMaster_s868;
[L14300]             havoc _strategicSaleAddress_s868;
[L14301]             havoc _privateSaleAddress_s868;
[L14302]             havoc _publicSaleAddress_s868;
[L14303]             havoc _teamAddress_s868;
[L14304]             havoc _advisorAddress_s868;
[L14305]             havoc _marketingAddress_s868;
[L14306]             havoc _ecoAddress_s868;
[L14307]             havoc _inAppAddress_s868;
[L14308]             havoc _gameMaster_s923;
[L14309]             havoc value_s996;
[L14310]             havoc __ret_0_unlock;
[L14311]             havoc _strategicSaleAddress_s1169;
[L14312]             havoc _privateSaleAddress_s1169;
[L14313]             havoc _publicSaleAddress_s1169;
[L14314]             havoc _teamAddress_s1169;
[L14315]             havoc _advisorAddress_s1169;
[L14316]             havoc _marketingAddress_s1169;
[L14317]             havoc _ecoAddress_s1169;
[L14318]             havoc _inAppAddress_s1169;
[L14319]             havoc _owner_s1242;
[L14320]             havoc _to_s1264;
[L14321]             havoc _to_s1285;
[L14322]             havoc amount_s1321;
[L14323]             havoc appId_s1413;
[L14324]             havoc itemIds_s1413;
[L14325]             havoc tokenAddresses_s1413;
[L14326]             havoc values_s1413;
[L14327]             havoc __ret_0_createOrUpdateItem;
[L14328]             havoc tokenAddress_s1494;
[L14329]             havoc appId_s1494;
[L14330]             havoc itemId_s1494;
[L14331]             havoc __ret_0_purchaseItemOnERC20;
[L14332]             havoc appId_s1531;
[L14333]             havoc itemId_s1531;
[L14334]             havoc __ret_0_purchaseItemOnITAM;
[L14335]             havoc appId_s1572;
[L14336]             havoc itemId_s1572;
[L14337]             havoc __ret_0_purchaseItemOnEther;
[L14338]             havoc tmpNow;
[L14339]             havoc gas;
[L14340]             assume gas > 4000000 && gas <= 8000000;
[L14341]             tmpNow := now;
[L14342]             havoc now;
[L14343]             assume now > tmpNow;
[L14344]             assume msgsender_MSG != null;
[L14345]             assume DType[msgsender_MSG] != SafeMath;
[L14346]             assume DType[msgsender_MSG] != IERC20;
[L14347]             assume DType[msgsender_MSG] != ERC20;
[L14348]             assume DType[msgsender_MSG] != ERC20Capped;
[L14349]             assume DType[msgsender_MSG] != ITAMToken;
[L14350]             Alloc[msgsender_MSG] := true;
[L14351]  COND TRUE  choice == 45
[L14352]             gas := gas - 21000;
[L14353]  COND TRUE  gas >= 0
[L14354]             assume _value_s941 >= 0 && _value_s941 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L14355]             assume msgvalue_MSG == 0;
[L14356]  CALL       call __ret_0_transfer := transfer~address~uint256_ITAMToken(this, msgsender_MSG, msgvalue_MSG, _to_s941, _value_s941);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == _to_s941 && _value_s941 <= _balances_ERC20[this][msgsender_MSG]) && _value_s941 >= 0) && _value_s941 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][_to_s941] >= 0) && _balances_ERC20[this][_to_s941] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_ITAMToken0 := true;
[L2]                 call_transfer_ITAMToken0 := false;
[L2]                 revert := revert_hold;
[L2267]              havoc __exception;
[L2268]              revert := false;
[L2269]   COND TRUE  __exception
[L2270]              __tmp__Balance := Balance;
[L2271]              __tmp__DType := DType;
[L2272]              __tmp__Alloc := Alloc;
[L2273]              __tmp__balance_ADDR := balance_ADDR;
[L2274]              __tmp__M_Ref_int := M_Ref_int;
[L2275]              __tmp__sum__balances0 := sum__balances0;
[L2276]              __tmp__alloc__allowed_ERC20_lvl0 := alloc__allowed_ERC20_lvl0;
[L2277]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L2278]              __tmp__sum__allowed1 := sum__allowed1;
[L2279]              __tmp__M_Ref_bool := M_Ref_bool;
[L2280]              __tmp__alloc_decidedOwner_ITAMToken_lvl0 := alloc_decidedOwner_ITAMToken_lvl0;
[L2281]              __tmp__sum_decidedOwner2 := sum_decidedOwner2;
[L2282]              __tmp__sum_blackLists3 := sum_blackLists3;
[L2283]              __tmp__alloc_items_ITAMToken_lvl1 := alloc_items_ITAMToken_lvl1;
[L2284]              __tmp__M_int_Ref := M_int_Ref;
[L2285]              __tmp__alloc_items_ITAMToken_lvl0 := alloc_items_ITAMToken_lvl0;
[L2286]              __tmp__sum_items10 := sum_items10;
[L2287]              __tmp__M_int_int := M_int_int;
[L2288]              __tmp__sum_strategicSaleReleaseCaps4 := sum_strategicSaleReleaseCaps4;
[L2289]              __tmp__sum_privateSaleReleaseCaps5 := sum_privateSaleReleaseCaps5;
[L2290]              __tmp__sum_teamReleaseCaps6 := sum_teamReleaseCaps6;
[L2291]              __tmp__sum_advisorReleaseCaps7 := sum_advisorReleaseCaps7;
[L2292]              __tmp__sum_marketingReleaseCaps8 := sum_marketingReleaseCaps8;
[L2293]              __tmp__sum_ecoReleaseCaps9 := sum_ecoReleaseCaps9;
[L2294]              __tmp__sum := sum;
[L2295]              __tmp__Length := Length;
[L2296]              __tmp__now := now;
[L2297]              __tmp___balances_ERC20 := _balances_ERC20;
[L2298]              __tmp___allowed_ERC20 := _allowed_ERC20;
[L2299]              __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L2300]              __tmp___cap_ERC20Capped := _cap_ERC20Capped;
[L2301]              __tmp__name_ITAMToken := name_ITAMToken;
[L2302]              __tmp__symbol_ITAMToken := symbol_ITAMToken;
[L2303]              __tmp__decimals_ITAMToken := decimals_ITAMToken;
[L2304]              __tmp__TOTAL_CAP_ITAMToken := TOTAL_CAP_ITAMToken;
[L2305]              __tmp__firstMaster_ITAMToken := firstMaster_ITAMToken;
[L2306]              __tmp__secondMaster_ITAMToken := secondMaster_ITAMToken;
[L2307]              __tmp__thirdMaster_ITAMToken := thirdMaster_ITAMToken;
[L2308]              __tmp__decidedOwner_ITAMToken := decidedOwner_ITAMToken;
[L2309]              __tmp__owner_ITAMToken := owner_ITAMToken;
[L2310]              __tmp__gameMaster_ITAMToken := gameMaster_ITAMToken;
[L2311]              __tmp__blackLists_ITAMToken := blackLists_ITAMToken;
[L2312]              __tmp__unlockCount_ITAMToken := unlockCount_ITAMToken;
[L2313]              __tmp__strategicSaleAddress_ITAMToken := strategicSaleAddress_ITAMToken;
[L2314]              __tmp__Length_strategicSaleReleaseCaps_ITAMToken_lvl0 := Length_strategicSaleReleaseCaps_ITAMToken_lvl0;
[L2315]              __tmp__strategicSaleReleaseCaps_ITAMToken := strategicSaleReleaseCaps_ITAMToken;
[L2316]              __tmp__privateSaleAddress_ITAMToken := privateSaleAddress_ITAMToken;
[L2317]              __tmp__Length_privateSaleReleaseCaps_ITAMToken_lvl0 := Length_privateSaleReleaseCaps_ITAMToken_lvl0;
[L2318]              __tmp__privateSaleReleaseCaps_ITAMToken := privateSaleReleaseCaps_ITAMToken;
[L2319]              __tmp__publicSaleAddress_ITAMToken := publicSaleAddress_ITAMToken;
[L2320]              __tmp__publicSaleReleaseCap_ITAMToken := publicSaleReleaseCap_ITAMToken;
[L2321]              __tmp__teamAddress_ITAMToken := teamAddress_ITAMToken;
[L2322]              __tmp__Length_teamReleaseCaps_ITAMToken_lvl0 := Length_teamReleaseCaps_ITAMToken_lvl0;
[L2323]              __tmp__teamReleaseCaps_ITAMToken := teamReleaseCaps_ITAMToken;
[L2324]              __tmp__advisorAddress_ITAMToken := advisorAddress_ITAMToken;
[L2325]              __tmp__Length_advisorReleaseCaps_ITAMToken_lvl0 := Length_advisorReleaseCaps_ITAMToken_lvl0;
[L2326]              __tmp__advisorReleaseCaps_ITAMToken := advisorReleaseCaps_ITAMToken;
[L2327]              __tmp__marketingAddress_ITAMToken := marketingAddress_ITAMToken;
[L2328]              __tmp__Length_marketingReleaseCaps_ITAMToken_lvl0 := Length_marketingReleaseCaps_ITAMToken_lvl0;
[L2329]              __tmp__marketingReleaseCaps_ITAMToken := marketingReleaseCaps_ITAMToken;
[L2330]              __tmp__ecoAddress_ITAMToken := ecoAddress_ITAMToken;
[L2331]              __tmp__Length_ecoReleaseCaps_ITAMToken_lvl0 := Length_ecoReleaseCaps_ITAMToken_lvl0;
[L2332]              __tmp__ecoReleaseCaps_ITAMToken := ecoReleaseCaps_ITAMToken;
[L2333]              __tmp__inAppAddress_ITAMToken := inAppAddress_ITAMToken;
[L2334]              __tmp__erc20_ITAMToken := erc20_ITAMToken;
[L2335]              __tmp__items_ITAMToken := items_ITAMToken;
[L2336]   CALL       call __ret_0_ := transfer~address~uint256_ITAMToken__fail(this, msgsender_MSG, msgvalue_MSG, _to_s941, _value_s941);
[L10884]  CALL       call onlyNotBlackList_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L13796]  COND TRUE  !!__tmp__blackLists_ITAMToken[this][msgsender_MSG]
[L13797]             revert := true;
[L10884]  RET        call onlyNotBlackList_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L10885]  COND TRUE  revert
[L2336]   RET        call __ret_0_ := transfer~address~uint256_ITAMToken__fail(this, msgsender_MSG, msgvalue_MSG, _to_s941, _value_s941);
[L2337]              assume revert || gas < 0;
[L14356]  RET        call __ret_0_transfer := transfer~address~uint256_ITAMToken(this, msgsender_MSG, msgvalue_MSG, _to_s941, _value_s941);
[L14673]  RET        call CorralChoice_ITAMToken(this);

[2020-11-25 18:36:08,173 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 18:36:08,173 INFO  L82        PathProgramCache]: Analyzing trace with hash -1654385772, now seen corresponding path program 1 times
[2020-11-25 18:36:08,174 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 18:36:08,190 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 18:36:08,271 INFO  L134       CoverageAnalysis]: Checked inductivity of 15 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 15 trivial. 0 not checked.
[2020-11-25 18:36:08,272 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 18:36:08,272 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [11] imperfect sequences [] total 11
[2020-11-25 18:36:08,272 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 18:36:08,272 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 12 interpolants.
[2020-11-25 18:36:08,272 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=21, Invalid=111, Unknown=0, NotChecked=0, Total=132
[2020-11-25 18:36:08,272 INFO  L87              Difference]: Start difference. First operand 14819 states and 16642 transitions. cyclomatic complexity: 1835 Second operand 12 states.
[2020-11-25 18:36:15,302 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 18:36:15,302 INFO  L93              Difference]: Finished difference Result 23888 states and 27395 transitions.
[2020-11-25 18:36:15,302 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 14 states. 
[2020-11-25 18:36:15,302 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 23888 states and 27395 transitions.
[2020-11-25 18:36:15,351 INFO  L131   ngComponentsAnalysis]: Automaton has 5 accepting balls. 40
[2020-11-25 18:36:15,412 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 23888 states to 23888 states and 27395 transitions.
[2020-11-25 18:36:15,412 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 802
[2020-11-25 18:36:15,413 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 802
[2020-11-25 18:36:15,413 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 23888 states and 27395 transitions.
[2020-11-25 18:36:15,429 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 18:36:15,429 INFO  L728         BuchiCegarLoop]: Abstraction has 23888 states and 27395 transitions.
[2020-11-25 18:36:15,442 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 23888 states and 27395 transitions.
[2020-11-25 18:36:15,597 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 23888 to 19841.
[2020-11-25 18:36:15,597 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 19841 states.
[2020-11-25 18:36:15,628 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 19841 states to 19841 states and 23230 transitions.
[2020-11-25 18:36:15,628 INFO  L751         BuchiCegarLoop]: Abstraction has 19841 states and 23230 transitions.
[2020-11-25 18:36:15,628 INFO  L631         BuchiCegarLoop]: Abstraction has 19841 states and 23230 transitions.
[2020-11-25 18:36:15,628 INFO  L445         BuchiCegarLoop]: ======== Iteration 6============
[2020-11-25 18:36:15,628 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 19841 states and 23230 transitions.
[2020-11-25 18:36:15,647 INFO  L131   ngComponentsAnalysis]: Automaton has 4 accepting balls. 32
[2020-11-25 18:36:15,647 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 18:36:15,647 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 18:36:15,649 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 18:36:15,649 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                  success_transfer_ITAMToken0 := false;
[L2]                  call_transfer_ITAMToken0 := false;
[L2]      CALL        call main();
[L14663]              assume null == 0;
[L14664]  CALL        call this := FreshRefGenerator__success();
[L9908]               havoc newRef;
[L9909]               assume Alloc[newRef] == false;
[L9910]               Alloc[newRef] := true;
[L9911]               assume newRef != null;
[L14664]  RET         call this := FreshRefGenerator__success();
[L14665]              assume now >= 0;
[L14666]              assume DType[this] == ITAMToken;
[L14667]              assume msgvalue_MSG == 0;
[L14668]              gas := gas - 53000;
[L14669]  CALL        call ITAMToken_ITAMToken(this, msgsender_MSG, msgvalue_MSG, _firstMaster_s868, _secondMaster_s868, _thirdMaster_s868, _owner_s868, _gameMaster_s868, _strategicSaleAddress_s868, _privateSaleAddress_s868, _publicSaleAddress_s868, _teamAddress_s868, _advisorAddress_s868, _marketingAddress_s868, _ecoAddress_s868, _inAppAddress_s868);
[L1968]               havoc __exception;
[L1969]               revert := false;
[L1970]   COND FALSE  !(__exception)
[L2040]   CALL        call ITAMToken_ITAMToken__success(this, msgsender_MSG, msgvalue_MSG, _firstMaster_s868, _secondMaster_s868, _thirdMaster_s868, _owner_s868, _gameMaster_s868, _strategicSaleAddress_s868, _privateSaleAddress_s868, _publicSaleAddress_s868, _teamAddress_s868, _advisorAddress_s868, _marketingAddress_s868, _ecoAddress_s868, _inAppAddress_s868);
[L10848]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L10138]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L10118]              assume msgsender_MSG != null;
[L10119]              Balance[this] := 0;
[L10120]              _balances_ERC20[this] := zeroRefintArr();
[L10121]              sum__balances0[this] := 0;
[L10122]              _allowed_ERC20[this] := zeroRefRefintArr();
[L10123]              sum__allowed1[this] := 0;
[L10124]              _totalSupply_ERC20[this] := 0;
[L10138]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L10139]  COND FALSE  !(revert)
[L10848]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L10849]  COND FALSE  !(revert)
[L10852]  CALL        call ERC20Capped_ERC20Capped__success(this, msgsender_MSG, msgvalue_MSG, TOTAL_CAP_ITAMToken[this]);
[L10602]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L10138]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L10118]              assume msgsender_MSG != null;
[L10119]              Balance[this] := 0;
[L10120]              _balances_ERC20[this] := zeroRefintArr();
[L10121]              sum__balances0[this] := 0;
[L10122]              _allowed_ERC20[this] := zeroRefRefintArr();
[L10123]              sum__allowed1[this] := 0;
[L10124]              _totalSupply_ERC20[this] := 0;
[L10138]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L10139]  COND FALSE  !(revert)
[L10602]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L10603]  COND FALSE  !(revert)
[L10606]  CALL        call ERC20Capped_ERC20Capped_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, cap_s528);
[L10577]              assume msgsender_MSG != null;
[L10578]              Balance[this] := 0;
[L10579]              _cap_ERC20Capped[this] := 0;
[L10581]  COND FALSE  !(!(cap_s528 > 0))
[L10585]              _cap_ERC20Capped[this] := cap_s528;
[L10606]  RET         call ERC20Capped_ERC20Capped_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, cap_s528);
[L10607]  COND FALSE  !(revert)
[L10852]  RET         call ERC20Capped_ERC20Capped__success(this, msgsender_MSG, msgvalue_MSG, TOTAL_CAP_ITAMToken[this]);
[L10853]  COND FALSE  !(revert)
[L10856]  CALL        call ITAMToken_ITAMToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, _firstMaster_s868, _secondMaster_s868, _thirdMaster_s868, _owner_s868, _gameMaster_s868, _strategicSaleAddress_s868, _privateSaleAddress_s868, _publicSaleAddress_s868, _teamAddress_s868, _advisorAddress_s868, _marketingAddress_s868, _ecoAddress_s868, _inAppAddress_s868);
[L10771]              assume msgsender_MSG != null;
[L10772]              Balance[this] := 0;
[L10773]              name_ITAMToken[this] := -1908028786;
[L10774]              symbol_ITAMToken[this] := -1908028786;
[L10775]              decimals_ITAMToken[this] := 18;
[L10776]              TOTAL_CAP_ITAMToken[this] := 2500000000;
[L10777]              firstMaster_ITAMToken[this] := null;
[L10778]              secondMaster_ITAMToken[this] := null;
[L10779]              thirdMaster_ITAMToken[this] := null;
[L10780]              decidedOwner_ITAMToken[this] := zeroRefRefboolArr();
[L10781]              owner_ITAMToken[this] := null;
[L10782]              gameMaster_ITAMToken[this] := null;
[L10783]              blackLists_ITAMToken[this] := zeroRefboolArr();
[L10784]              unlockCount_ITAMToken[this] := 0;
[L10785]              strategicSaleAddress_ITAMToken[this] := null;
[L10786]              Length_strategicSaleReleaseCaps_ITAMToken_lvl0[this] := 0;
[L10787]              strategicSaleReleaseCaps_ITAMToken[this] := zerointintArr();
[L10788]              sum_strategicSaleReleaseCaps4[this] := 0;
[L10789]              privateSaleAddress_ITAMToken[this] := null;
[L10790]              Length_privateSaleReleaseCaps_ITAMToken_lvl0[this] := 0;
[L10791]              privateSaleReleaseCaps_ITAMToken[this] := zerointintArr();
[L10792]              sum_privateSaleReleaseCaps5[this] := 0;
[L10793]              publicSaleAddress_ITAMToken[this] := null;
[L10794]              publicSaleReleaseCap_ITAMToken[this] := 200000000;
[L10795]              teamAddress_ITAMToken[this] := null;
[L10796]              Length_teamReleaseCaps_ITAMToken_lvl0[this] := 0;
[L10797]              teamReleaseCaps_ITAMToken[this] := zerointintArr();
[L10798]              sum_teamReleaseCaps6[this] := 0;
[L10799]              advisorAddress_ITAMToken[this] := null;
[L10800]              Length_advisorReleaseCaps_ITAMToken_lvl0[this] := 0;
[L10801]              advisorReleaseCaps_ITAMToken[this] := zerointintArr();
[L10802]              sum_advisorReleaseCaps7[this] := 0;
[L10803]              marketingAddress_ITAMToken[this] := null;
[L10804]              Length_marketingReleaseCaps_ITAMToken_lvl0[this] := 0;
[L10805]              marketingReleaseCaps_ITAMToken[this] := zerointintArr();
[L10806]              sum_marketingReleaseCaps8[this] := 0;
[L10807]              ecoAddress_ITAMToken[this] := null;
[L10808]              Length_ecoReleaseCaps_ITAMToken_lvl0[this] := 0;
[L10809]              ecoReleaseCaps_ITAMToken[this] := zerointintArr();
[L10810]              sum_ecoReleaseCaps9[this] := 0;
[L10811]              inAppAddress_ITAMToken[this] := null;
[L10812]              items_ITAMToken[this] := zerointintRefintArr();
[L10813]              sum_items10[this] := 0;
[L10815]              firstMaster_ITAMToken[this] := _firstMaster_s868;
[L10816]              secondMaster_ITAMToken[this] := _secondMaster_s868;
[L10817]              thirdMaster_ITAMToken[this] := _thirdMaster_s868;
[L10818]              owner_ITAMToken[this] := _owner_s868;
[L10819]              gameMaster_ITAMToken[this] := _gameMaster_s868;
[L10820]              strategicSaleAddress_ITAMToken[this] := _strategicSaleAddress_s868;
[L10821]              privateSaleAddress_ITAMToken[this] := _privateSaleAddress_s868;
[L10822]              publicSaleAddress_ITAMToken[this] := _publicSaleAddress_s868;
[L10823]              teamAddress_ITAMToken[this] := _teamAddress_s868;
[L10824]              advisorAddress_ITAMToken[this] := _advisorAddress_s868;
[L10825]              marketingAddress_ITAMToken[this] := _marketingAddress_s868;
[L10826]              ecoAddress_ITAMToken[this] := _ecoAddress_s868;
[L10827]              inAppAddress_ITAMToken[this] := _inAppAddress_s868;
[L10856]  RET         call ITAMToken_ITAMToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, _firstMaster_s868, _secondMaster_s868, _thirdMaster_s868, _owner_s868, _gameMaster_s868, _strategicSaleAddress_s868, _privateSaleAddress_s868, _publicSaleAddress_s868, _teamAddress_s868, _advisorAddress_s868, _marketingAddress_s868, _ecoAddress_s868, _inAppAddress_s868);
[L10857]  COND FALSE  !(revert)
[L2040]   RET         call ITAMToken_ITAMToken__success(this, msgsender_MSG, msgvalue_MSG, _firstMaster_s868, _secondMaster_s868, _thirdMaster_s868, _owner_s868, _gameMaster_s868, _strategicSaleAddress_s868, _privateSaleAddress_s868, _publicSaleAddress_s868, _teamAddress_s868, _advisorAddress_s868, _marketingAddress_s868, _ecoAddress_s868, _inAppAddress_s868);
[L2041]               assume !revert && gas >= 0;
[L14669]  RET         call ITAMToken_ITAMToken(this, msgsender_MSG, msgvalue_MSG, _firstMaster_s868, _secondMaster_s868, _thirdMaster_s868, _owner_s868, _gameMaster_s868, _strategicSaleAddress_s868, _privateSaleAddress_s868, _publicSaleAddress_s868, _teamAddress_s868, _advisorAddress_s868, _marketingAddress_s868, _ecoAddress_s868, _inAppAddress_s868);
[L14670]              assume !revert && gas >= 0;
[L14673]  CALL        call CorralChoice_ITAMToken(this);
[L14239]              havoc msgsender_MSG;
[L14240]              havoc msgvalue_MSG;
[L14241]              havoc choice;
[L14242]              havoc _to_s941;
[L14243]              havoc _value_s941;
[L14244]              havoc __ret_0_transfer;
[L14245]              havoc spender_s980;
[L14246]              havoc value_s980;
[L14247]              havoc __ret_0_approve;
[L14248]              havoc _from_s962;
[L14249]              havoc _to_s962;
[L14250]              havoc _value_s962;
[L14251]              havoc __ret_0_transferFrom;
[L14252]              havoc __ret_0_totalSupply;
[L14253]              havoc owner_s247;
[L14254]              havoc __ret_0_balanceOf;
[L14255]              havoc owner_s263;
[L14256]              havoc spender_s263;
[L14257]              havoc __ret_0_allowance;
[L14258]              havoc cap_s528;
[L14259]              havoc __ret_0_cap;
[L14260]              havoc __ret_0_name;
[L14261]              havoc __ret_0_symbol;
[L14262]              havoc __ret_0_decimals;
[L14263]              havoc __ret_0_firstMaster;
[L14264]              havoc __ret_0_secondMaster;
[L14265]              havoc __ret_0_thirdMaster;
[L14266]              havoc arg1575_s0;
[L14267]              havoc arg1576_s0;
[L14268]              havoc __ret_0_decidedOwner;
[L14269]              havoc __ret_0_owner;
[L14270]              havoc __ret_0_gameMaster;
[L14271]              havoc arg1577_s0;
[L14272]              havoc __ret_0_blackLists;
[L14273]              havoc __ret_0_unlockCount;
[L14274]              havoc __ret_0_strategicSaleAddress;
[L14275]              havoc arg1578_s0;
[L14276]              havoc __ret_0_strategicSaleReleaseCaps;
[L14277]              havoc __ret_0_privateSaleAddress;
[L14278]              havoc arg1579_s0;
[L14279]              havoc __ret_0_privateSaleReleaseCaps;
[L14280]              havoc __ret_0_publicSaleAddress;
[L14281]              havoc __ret_0_publicSaleReleaseCap;
[L14282]              havoc __ret_0_teamAddress;
[L14283]              havoc arg1580_s0;
[L14284]              havoc __ret_0_teamReleaseCaps;
[L14285]              havoc __ret_0_advisorAddress;
[L14286]              havoc arg1581_s0;
[L14287]              havoc __ret_0_advisorReleaseCaps;
[L14288]              havoc __ret_0_marketingAddress;
[L14289]              havoc arg1582_s0;
[L14290]              havoc __ret_0_marketingReleaseCaps;
[L14291]              havoc __ret_0_ecoAddress;
[L14292]              havoc arg1583_s0;
[L14293]              havoc __ret_0_ecoReleaseCaps;
[L14294]              havoc __ret_0_inAppAddress;
[L14295]              havoc _firstMaster_s868;
[L14296]              havoc _secondMaster_s868;
[L14297]              havoc _thirdMaster_s868;
[L14298]              havoc _owner_s868;
[L14299]              havoc _gameMaster_s868;
[L14300]              havoc _strategicSaleAddress_s868;
[L14301]              havoc _privateSaleAddress_s868;
[L14302]              havoc _publicSaleAddress_s868;
[L14303]              havoc _teamAddress_s868;
[L14304]              havoc _advisorAddress_s868;
[L14305]              havoc _marketingAddress_s868;
[L14306]              havoc _ecoAddress_s868;
[L14307]              havoc _inAppAddress_s868;
[L14308]              havoc _gameMaster_s923;
[L14309]              havoc value_s996;
[L14310]              havoc __ret_0_unlock;
[L14311]              havoc _strategicSaleAddress_s1169;
[L14312]              havoc _privateSaleAddress_s1169;
[L14313]              havoc _publicSaleAddress_s1169;
[L14314]              havoc _teamAddress_s1169;
[L14315]              havoc _advisorAddress_s1169;
[L14316]              havoc _marketingAddress_s1169;
[L14317]              havoc _ecoAddress_s1169;
[L14318]              havoc _inAppAddress_s1169;
[L14319]              havoc _owner_s1242;
[L14320]              havoc _to_s1264;
[L14321]              havoc _to_s1285;
[L14322]              havoc amount_s1321;
[L14323]              havoc appId_s1413;
[L14324]              havoc itemIds_s1413;
[L14325]              havoc tokenAddresses_s1413;
[L14326]              havoc values_s1413;
[L14327]              havoc __ret_0_createOrUpdateItem;
[L14328]              havoc tokenAddress_s1494;
[L14329]              havoc appId_s1494;
[L14330]              havoc itemId_s1494;
[L14331]              havoc __ret_0_purchaseItemOnERC20;
[L14332]              havoc appId_s1531;
[L14333]              havoc itemId_s1531;
[L14334]              havoc __ret_0_purchaseItemOnITAM;
[L14335]              havoc appId_s1572;
[L14336]              havoc itemId_s1572;
[L14337]              havoc __ret_0_purchaseItemOnEther;
[L14338]              havoc tmpNow;
[L14339]              havoc gas;
[L14340]              assume gas > 4000000 && gas <= 8000000;
[L14341]              tmpNow := now;
[L14342]              havoc now;
[L14343]              assume now > tmpNow;
[L14344]              assume msgsender_MSG != null;
[L14345]              assume DType[msgsender_MSG] != SafeMath;
[L14346]              assume DType[msgsender_MSG] != IERC20;
[L14347]              assume DType[msgsender_MSG] != ERC20;
[L14348]              assume DType[msgsender_MSG] != ERC20Capped;
[L14349]              assume DType[msgsender_MSG] != ITAMToken;
[L14350]              Alloc[msgsender_MSG] := true;
[L14351]  COND TRUE   choice == 45
[L14352]              gas := gas - 21000;
[L14353]  COND TRUE   gas >= 0
[L14354]              assume _value_s941 >= 0 && _value_s941 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L14355]              assume msgvalue_MSG == 0;
[L14356]  CALL        call __ret_0_transfer := transfer~address~uint256_ITAMToken(this, msgsender_MSG, msgvalue_MSG, _to_s941, _value_s941);
[L2]                  revert_hold := revert;
[L2]                  revert := false;
[L2]                  assume ((((((msgsender_MSG == _to_s941 && _value_s941 <= _balances_ERC20[this][msgsender_MSG]) && _value_s941 >= 0) && _value_s941 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][_to_s941] >= 0) && _balances_ERC20[this][_to_s941] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                  call_transfer_ITAMToken0 := true;
[L2]                  call_transfer_ITAMToken0 := false;
[L2]                  revert := revert_hold;
[L2267]               havoc __exception;
[L2268]               revert := false;
[L2269]   COND TRUE   __exception
[L2270]               __tmp__Balance := Balance;
[L2271]               __tmp__DType := DType;
[L2272]               __tmp__Alloc := Alloc;
[L2273]               __tmp__balance_ADDR := balance_ADDR;
[L2274]               __tmp__M_Ref_int := M_Ref_int;
[L2275]               __tmp__sum__balances0 := sum__balances0;
[L2276]               __tmp__alloc__allowed_ERC20_lvl0 := alloc__allowed_ERC20_lvl0;
[L2277]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L2278]               __tmp__sum__allowed1 := sum__allowed1;
[L2279]               __tmp__M_Ref_bool := M_Ref_bool;
[L2280]               __tmp__alloc_decidedOwner_ITAMToken_lvl0 := alloc_decidedOwner_ITAMToken_lvl0;
[L2281]               __tmp__sum_decidedOwner2 := sum_decidedOwner2;
[L2282]               __tmp__sum_blackLists3 := sum_blackLists3;
[L2283]               __tmp__alloc_items_ITAMToken_lvl1 := alloc_items_ITAMToken_lvl1;
[L2284]               __tmp__M_int_Ref := M_int_Ref;
[L2285]               __tmp__alloc_items_ITAMToken_lvl0 := alloc_items_ITAMToken_lvl0;
[L2286]               __tmp__sum_items10 := sum_items10;
[L2287]               __tmp__M_int_int := M_int_int;
[L2288]               __tmp__sum_strategicSaleReleaseCaps4 := sum_strategicSaleReleaseCaps4;
[L2289]               __tmp__sum_privateSaleReleaseCaps5 := sum_privateSaleReleaseCaps5;
[L2290]               __tmp__sum_teamReleaseCaps6 := sum_teamReleaseCaps6;
[L2291]               __tmp__sum_advisorReleaseCaps7 := sum_advisorReleaseCaps7;
[L2292]               __tmp__sum_marketingReleaseCaps8 := sum_marketingReleaseCaps8;
[L2293]               __tmp__sum_ecoReleaseCaps9 := sum_ecoReleaseCaps9;
[L2294]               __tmp__sum := sum;
[L2295]               __tmp__Length := Length;
[L2296]               __tmp__now := now;
[L2297]               __tmp___balances_ERC20 := _balances_ERC20;
[L2298]               __tmp___allowed_ERC20 := _allowed_ERC20;
[L2299]               __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L2300]               __tmp___cap_ERC20Capped := _cap_ERC20Capped;
[L2301]               __tmp__name_ITAMToken := name_ITAMToken;
[L2302]               __tmp__symbol_ITAMToken := symbol_ITAMToken;
[L2303]               __tmp__decimals_ITAMToken := decimals_ITAMToken;
[L2304]               __tmp__TOTAL_CAP_ITAMToken := TOTAL_CAP_ITAMToken;
[L2305]               __tmp__firstMaster_ITAMToken := firstMaster_ITAMToken;
[L2306]               __tmp__secondMaster_ITAMToken := secondMaster_ITAMToken;
[L2307]               __tmp__thirdMaster_ITAMToken := thirdMaster_ITAMToken;
[L2308]               __tmp__decidedOwner_ITAMToken := decidedOwner_ITAMToken;
[L2309]               __tmp__owner_ITAMToken := owner_ITAMToken;
[L2310]               __tmp__gameMaster_ITAMToken := gameMaster_ITAMToken;
[L2311]               __tmp__blackLists_ITAMToken := blackLists_ITAMToken;
[L2312]               __tmp__unlockCount_ITAMToken := unlockCount_ITAMToken;
[L2313]               __tmp__strategicSaleAddress_ITAMToken := strategicSaleAddress_ITAMToken;
[L2314]               __tmp__Length_strategicSaleReleaseCaps_ITAMToken_lvl0 := Length_strategicSaleReleaseCaps_ITAMToken_lvl0;
[L2315]               __tmp__strategicSaleReleaseCaps_ITAMToken := strategicSaleReleaseCaps_ITAMToken;
[L2316]               __tmp__privateSaleAddress_ITAMToken := privateSaleAddress_ITAMToken;
[L2317]               __tmp__Length_privateSaleReleaseCaps_ITAMToken_lvl0 := Length_privateSaleReleaseCaps_ITAMToken_lvl0;
[L2318]               __tmp__privateSaleReleaseCaps_ITAMToken := privateSaleReleaseCaps_ITAMToken;
[L2319]               __tmp__publicSaleAddress_ITAMToken := publicSaleAddress_ITAMToken;
[L2320]               __tmp__publicSaleReleaseCap_ITAMToken := publicSaleReleaseCap_ITAMToken;
[L2321]               __tmp__teamAddress_ITAMToken := teamAddress_ITAMToken;
[L2322]               __tmp__Length_teamReleaseCaps_ITAMToken_lvl0 := Length_teamReleaseCaps_ITAMToken_lvl0;
[L2323]               __tmp__teamReleaseCaps_ITAMToken := teamReleaseCaps_ITAMToken;
[L2324]               __tmp__advisorAddress_ITAMToken := advisorAddress_ITAMToken;
[L2325]               __tmp__Length_advisorReleaseCaps_ITAMToken_lvl0 := Length_advisorReleaseCaps_ITAMToken_lvl0;
[L2326]               __tmp__advisorReleaseCaps_ITAMToken := advisorReleaseCaps_ITAMToken;
[L2327]               __tmp__marketingAddress_ITAMToken := marketingAddress_ITAMToken;
[L2328]               __tmp__Length_marketingReleaseCaps_ITAMToken_lvl0 := Length_marketingReleaseCaps_ITAMToken_lvl0;
[L2329]               __tmp__marketingReleaseCaps_ITAMToken := marketingReleaseCaps_ITAMToken;
[L2330]               __tmp__ecoAddress_ITAMToken := ecoAddress_ITAMToken;
[L2331]               __tmp__Length_ecoReleaseCaps_ITAMToken_lvl0 := Length_ecoReleaseCaps_ITAMToken_lvl0;
[L2332]               __tmp__ecoReleaseCaps_ITAMToken := ecoReleaseCaps_ITAMToken;
[L2333]               __tmp__inAppAddress_ITAMToken := inAppAddress_ITAMToken;
[L2334]               __tmp__erc20_ITAMToken := erc20_ITAMToken;
[L2335]               __tmp__items_ITAMToken := items_ITAMToken;
[L2336]   CALL        call __ret_0_ := transfer~address~uint256_ITAMToken__fail(this, msgsender_MSG, msgvalue_MSG, _to_s941, _value_s941);
[L10884]  CALL        call onlyNotBlackList_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L13796]  COND FALSE  !(!!__tmp__blackLists_ITAMToken[this][msgsender_MSG])
[L10884]  RET         call onlyNotBlackList_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L10885]  COND FALSE  !(revert)
[L10888]  COND TRUE   __tmp__DType[this] == ITAMToken
[L10889]  CALL        call __var_16 := transfer~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, _to_s941, _value_s941);
[L10182]  COND TRUE   __tmp__DType[this] == ITAMToken
[L10183]  CALL        call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s282, value_s282);
[L10375]              __var_2 := null;
[L10376]  COND TRUE   !(to_s382 != null)
[L10377]              revert := true;
[L10183]  RET         call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s282, value_s282);
[L10184]  COND TRUE   revert
[L10889]  RET         call __var_16 := transfer~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, _to_s941, _value_s941);
[L10890]  COND TRUE   revert
[L2336]   RET         call __ret_0_ := transfer~address~uint256_ITAMToken__fail(this, msgsender_MSG, msgvalue_MSG, _to_s941, _value_s941);
[L2337]               assume revert || gas < 0;
[L14356]  RET         call __ret_0_transfer := transfer~address~uint256_ITAMToken(this, msgsender_MSG, msgvalue_MSG, _to_s941, _value_s941);
[L14673]  RET         call CorralChoice_ITAMToken(this);

Loop:
[L14673]  CALL        call CorralChoice_ITAMToken(this);
[L14239]              havoc msgsender_MSG;
[L14240]              havoc msgvalue_MSG;
[L14241]              havoc choice;
[L14242]              havoc _to_s941;
[L14243]              havoc _value_s941;
[L14244]              havoc __ret_0_transfer;
[L14245]              havoc spender_s980;
[L14246]              havoc value_s980;
[L14247]              havoc __ret_0_approve;
[L14248]              havoc _from_s962;
[L14249]              havoc _to_s962;
[L14250]              havoc _value_s962;
[L14251]              havoc __ret_0_transferFrom;
[L14252]              havoc __ret_0_totalSupply;
[L14253]              havoc owner_s247;
[L14254]              havoc __ret_0_balanceOf;
[L14255]              havoc owner_s263;
[L14256]              havoc spender_s263;
[L14257]              havoc __ret_0_allowance;
[L14258]              havoc cap_s528;
[L14259]              havoc __ret_0_cap;
[L14260]              havoc __ret_0_name;
[L14261]              havoc __ret_0_symbol;
[L14262]              havoc __ret_0_decimals;
[L14263]              havoc __ret_0_firstMaster;
[L14264]              havoc __ret_0_secondMaster;
[L14265]              havoc __ret_0_thirdMaster;
[L14266]              havoc arg1575_s0;
[L14267]              havoc arg1576_s0;
[L14268]              havoc __ret_0_decidedOwner;
[L14269]              havoc __ret_0_owner;
[L14270]              havoc __ret_0_gameMaster;
[L14271]              havoc arg1577_s0;
[L14272]              havoc __ret_0_blackLists;
[L14273]              havoc __ret_0_unlockCount;
[L14274]              havoc __ret_0_strategicSaleAddress;
[L14275]              havoc arg1578_s0;
[L14276]              havoc __ret_0_strategicSaleReleaseCaps;
[L14277]              havoc __ret_0_privateSaleAddress;
[L14278]              havoc arg1579_s0;
[L14279]              havoc __ret_0_privateSaleReleaseCaps;
[L14280]              havoc __ret_0_publicSaleAddress;
[L14281]              havoc __ret_0_publicSaleReleaseCap;
[L14282]              havoc __ret_0_teamAddress;
[L14283]              havoc arg1580_s0;
[L14284]              havoc __ret_0_teamReleaseCaps;
[L14285]              havoc __ret_0_advisorAddress;
[L14286]              havoc arg1581_s0;
[L14287]              havoc __ret_0_advisorReleaseCaps;
[L14288]              havoc __ret_0_marketingAddress;
[L14289]              havoc arg1582_s0;
[L14290]              havoc __ret_0_marketingReleaseCaps;
[L14291]              havoc __ret_0_ecoAddress;
[L14292]              havoc arg1583_s0;
[L14293]              havoc __ret_0_ecoReleaseCaps;
[L14294]              havoc __ret_0_inAppAddress;
[L14295]              havoc _firstMaster_s868;
[L14296]              havoc _secondMaster_s868;
[L14297]              havoc _thirdMaster_s868;
[L14298]              havoc _owner_s868;
[L14299]              havoc _gameMaster_s868;
[L14300]              havoc _strategicSaleAddress_s868;
[L14301]              havoc _privateSaleAddress_s868;
[L14302]              havoc _publicSaleAddress_s868;
[L14303]              havoc _teamAddress_s868;
[L14304]              havoc _advisorAddress_s868;
[L14305]              havoc _marketingAddress_s868;
[L14306]              havoc _ecoAddress_s868;
[L14307]              havoc _inAppAddress_s868;
[L14308]              havoc _gameMaster_s923;
[L14309]              havoc value_s996;
[L14310]              havoc __ret_0_unlock;
[L14311]              havoc _strategicSaleAddress_s1169;
[L14312]              havoc _privateSaleAddress_s1169;
[L14313]              havoc _publicSaleAddress_s1169;
[L14314]              havoc _teamAddress_s1169;
[L14315]              havoc _advisorAddress_s1169;
[L14316]              havoc _marketingAddress_s1169;
[L14317]              havoc _ecoAddress_s1169;
[L14318]              havoc _inAppAddress_s1169;
[L14319]              havoc _owner_s1242;
[L14320]              havoc _to_s1264;
[L14321]              havoc _to_s1285;
[L14322]              havoc amount_s1321;
[L14323]              havoc appId_s1413;
[L14324]              havoc itemIds_s1413;
[L14325]              havoc tokenAddresses_s1413;
[L14326]              havoc values_s1413;
[L14327]              havoc __ret_0_createOrUpdateItem;
[L14328]              havoc tokenAddress_s1494;
[L14329]              havoc appId_s1494;
[L14330]              havoc itemId_s1494;
[L14331]              havoc __ret_0_purchaseItemOnERC20;
[L14332]              havoc appId_s1531;
[L14333]              havoc itemId_s1531;
[L14334]              havoc __ret_0_purchaseItemOnITAM;
[L14335]              havoc appId_s1572;
[L14336]              havoc itemId_s1572;
[L14337]              havoc __ret_0_purchaseItemOnEther;
[L14338]              havoc tmpNow;
[L14339]              havoc gas;
[L14340]              assume gas > 4000000 && gas <= 8000000;
[L14341]              tmpNow := now;
[L14342]              havoc now;
[L14343]              assume now > tmpNow;
[L14344]              assume msgsender_MSG != null;
[L14345]              assume DType[msgsender_MSG] != SafeMath;
[L14346]              assume DType[msgsender_MSG] != IERC20;
[L14347]              assume DType[msgsender_MSG] != ERC20;
[L14348]              assume DType[msgsender_MSG] != ERC20Capped;
[L14349]              assume DType[msgsender_MSG] != ITAMToken;
[L14350]              Alloc[msgsender_MSG] := true;
[L14351]  COND TRUE   choice == 45
[L14352]              gas := gas - 21000;
[L14353]  COND TRUE   gas >= 0
[L14354]              assume _value_s941 >= 0 && _value_s941 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L14355]              assume msgvalue_MSG == 0;
[L14356]  CALL        call __ret_0_transfer := transfer~address~uint256_ITAMToken(this, msgsender_MSG, msgvalue_MSG, _to_s941, _value_s941);
[L2]                  revert_hold := revert;
[L2]                  revert := false;
[L2]                  assume ((((((msgsender_MSG == _to_s941 && _value_s941 <= _balances_ERC20[this][msgsender_MSG]) && _value_s941 >= 0) && _value_s941 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][_to_s941] >= 0) && _balances_ERC20[this][_to_s941] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                  call_transfer_ITAMToken0 := true;
[L2]                  call_transfer_ITAMToken0 := false;
[L2]                  revert := revert_hold;
[L2267]               havoc __exception;
[L2268]               revert := false;
[L2269]   COND TRUE   __exception
[L2270]               __tmp__Balance := Balance;
[L2271]               __tmp__DType := DType;
[L2272]               __tmp__Alloc := Alloc;
[L2273]               __tmp__balance_ADDR := balance_ADDR;
[L2274]               __tmp__M_Ref_int := M_Ref_int;
[L2275]               __tmp__sum__balances0 := sum__balances0;
[L2276]               __tmp__alloc__allowed_ERC20_lvl0 := alloc__allowed_ERC20_lvl0;
[L2277]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L2278]               __tmp__sum__allowed1 := sum__allowed1;
[L2279]               __tmp__M_Ref_bool := M_Ref_bool;
[L2280]               __tmp__alloc_decidedOwner_ITAMToken_lvl0 := alloc_decidedOwner_ITAMToken_lvl0;
[L2281]               __tmp__sum_decidedOwner2 := sum_decidedOwner2;
[L2282]               __tmp__sum_blackLists3 := sum_blackLists3;
[L2283]               __tmp__alloc_items_ITAMToken_lvl1 := alloc_items_ITAMToken_lvl1;
[L2284]               __tmp__M_int_Ref := M_int_Ref;
[L2285]               __tmp__alloc_items_ITAMToken_lvl0 := alloc_items_ITAMToken_lvl0;
[L2286]               __tmp__sum_items10 := sum_items10;
[L2287]               __tmp__M_int_int := M_int_int;
[L2288]               __tmp__sum_strategicSaleReleaseCaps4 := sum_strategicSaleReleaseCaps4;
[L2289]               __tmp__sum_privateSaleReleaseCaps5 := sum_privateSaleReleaseCaps5;
[L2290]               __tmp__sum_teamReleaseCaps6 := sum_teamReleaseCaps6;
[L2291]               __tmp__sum_advisorReleaseCaps7 := sum_advisorReleaseCaps7;
[L2292]               __tmp__sum_marketingReleaseCaps8 := sum_marketingReleaseCaps8;
[L2293]               __tmp__sum_ecoReleaseCaps9 := sum_ecoReleaseCaps9;
[L2294]               __tmp__sum := sum;
[L2295]               __tmp__Length := Length;
[L2296]               __tmp__now := now;
[L2297]               __tmp___balances_ERC20 := _balances_ERC20;
[L2298]               __tmp___allowed_ERC20 := _allowed_ERC20;
[L2299]               __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L2300]               __tmp___cap_ERC20Capped := _cap_ERC20Capped;
[L2301]               __tmp__name_ITAMToken := name_ITAMToken;
[L2302]               __tmp__symbol_ITAMToken := symbol_ITAMToken;
[L2303]               __tmp__decimals_ITAMToken := decimals_ITAMToken;
[L2304]               __tmp__TOTAL_CAP_ITAMToken := TOTAL_CAP_ITAMToken;
[L2305]               __tmp__firstMaster_ITAMToken := firstMaster_ITAMToken;
[L2306]               __tmp__secondMaster_ITAMToken := secondMaster_ITAMToken;
[L2307]               __tmp__thirdMaster_ITAMToken := thirdMaster_ITAMToken;
[L2308]               __tmp__decidedOwner_ITAMToken := decidedOwner_ITAMToken;
[L2309]               __tmp__owner_ITAMToken := owner_ITAMToken;
[L2310]               __tmp__gameMaster_ITAMToken := gameMaster_ITAMToken;
[L2311]               __tmp__blackLists_ITAMToken := blackLists_ITAMToken;
[L2312]               __tmp__unlockCount_ITAMToken := unlockCount_ITAMToken;
[L2313]               __tmp__strategicSaleAddress_ITAMToken := strategicSaleAddress_ITAMToken;
[L2314]               __tmp__Length_strategicSaleReleaseCaps_ITAMToken_lvl0 := Length_strategicSaleReleaseCaps_ITAMToken_lvl0;
[L2315]               __tmp__strategicSaleReleaseCaps_ITAMToken := strategicSaleReleaseCaps_ITAMToken;
[L2316]               __tmp__privateSaleAddress_ITAMToken := privateSaleAddress_ITAMToken;
[L2317]               __tmp__Length_privateSaleReleaseCaps_ITAMToken_lvl0 := Length_privateSaleReleaseCaps_ITAMToken_lvl0;
[L2318]               __tmp__privateSaleReleaseCaps_ITAMToken := privateSaleReleaseCaps_ITAMToken;
[L2319]               __tmp__publicSaleAddress_ITAMToken := publicSaleAddress_ITAMToken;
[L2320]               __tmp__publicSaleReleaseCap_ITAMToken := publicSaleReleaseCap_ITAMToken;
[L2321]               __tmp__teamAddress_ITAMToken := teamAddress_ITAMToken;
[L2322]               __tmp__Length_teamReleaseCaps_ITAMToken_lvl0 := Length_teamReleaseCaps_ITAMToken_lvl0;
[L2323]               __tmp__teamReleaseCaps_ITAMToken := teamReleaseCaps_ITAMToken;
[L2324]               __tmp__advisorAddress_ITAMToken := advisorAddress_ITAMToken;
[L2325]               __tmp__Length_advisorReleaseCaps_ITAMToken_lvl0 := Length_advisorReleaseCaps_ITAMToken_lvl0;
[L2326]               __tmp__advisorReleaseCaps_ITAMToken := advisorReleaseCaps_ITAMToken;
[L2327]               __tmp__marketingAddress_ITAMToken := marketingAddress_ITAMToken;
[L2328]               __tmp__Length_marketingReleaseCaps_ITAMToken_lvl0 := Length_marketingReleaseCaps_ITAMToken_lvl0;
[L2329]               __tmp__marketingReleaseCaps_ITAMToken := marketingReleaseCaps_ITAMToken;
[L2330]               __tmp__ecoAddress_ITAMToken := ecoAddress_ITAMToken;
[L2331]               __tmp__Length_ecoReleaseCaps_ITAMToken_lvl0 := Length_ecoReleaseCaps_ITAMToken_lvl0;
[L2332]               __tmp__ecoReleaseCaps_ITAMToken := ecoReleaseCaps_ITAMToken;
[L2333]               __tmp__inAppAddress_ITAMToken := inAppAddress_ITAMToken;
[L2334]               __tmp__erc20_ITAMToken := erc20_ITAMToken;
[L2335]               __tmp__items_ITAMToken := items_ITAMToken;
[L2336]   CALL        call __ret_0_ := transfer~address~uint256_ITAMToken__fail(this, msgsender_MSG, msgvalue_MSG, _to_s941, _value_s941);
[L10884]  CALL        call onlyNotBlackList_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L13796]  COND FALSE  !(!!__tmp__blackLists_ITAMToken[this][msgsender_MSG])
[L10884]  RET         call onlyNotBlackList_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L10885]  COND FALSE  !(revert)
[L10888]  COND TRUE   __tmp__DType[this] == ITAMToken
[L10889]  CALL        call __var_16 := transfer~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, _to_s941, _value_s941);
[L10182]  COND TRUE   __tmp__DType[this] == ITAMToken
[L10183]  CALL        call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s282, value_s282);
[L10375]              __var_2 := null;
[L10376]  COND TRUE   !(to_s382 != null)
[L10377]              revert := true;
[L10183]  RET         call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s282, value_s282);
[L10184]  COND TRUE   revert
[L10889]  RET         call __var_16 := transfer~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, _to_s941, _value_s941);
[L10890]  COND TRUE   revert
[L2336]   RET         call __ret_0_ := transfer~address~uint256_ITAMToken__fail(this, msgsender_MSG, msgvalue_MSG, _to_s941, _value_s941);
[L2337]               assume revert || gas < 0;
[L14356]  RET         call __ret_0_transfer := transfer~address~uint256_ITAMToken(this, msgsender_MSG, msgvalue_MSG, _to_s941, _value_s941);
[L14673]  RET         call CorralChoice_ITAMToken(this);

[2020-11-25 18:36:15,653 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 18:36:15,653 INFO  L82        PathProgramCache]: Analyzing trace with hash 1201904917, now seen corresponding path program 1 times
[2020-11-25 18:36:15,654 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 18:36:15,670 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 18:36:15,729 INFO  L134       CoverageAnalysis]: Checked inductivity of 15 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 15 trivial. 0 not checked.
[2020-11-25 18:36:15,729 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 18:36:15,729 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [8] imperfect sequences [] total 8
[2020-11-25 18:36:15,730 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 18:36:15,730 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 8 interpolants.
[2020-11-25 18:36:15,730 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=13, Invalid=43, Unknown=0, NotChecked=0, Total=56
[2020-11-25 18:36:15,730 INFO  L87              Difference]: Start difference. First operand 19841 states and 23230 transitions. cyclomatic complexity: 3409 Second operand 8 states.
[2020-11-25 18:36:16,118 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 18:36:16,118 INFO  L93              Difference]: Finished difference Result 19966 states and 23379 transitions.
[2020-11-25 18:36:16,119 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 8 states. 
[2020-11-25 18:36:16,119 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 19966 states and 23379 transitions.
[2020-11-25 18:36:16,174 INFO  L131   ngComponentsAnalysis]: Automaton has 4 accepting balls. 32
[2020-11-25 18:36:16,242 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 19966 states to 19958 states and 23371 transitions.
[2020-11-25 18:36:16,242 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 794
[2020-11-25 18:36:16,244 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 794
[2020-11-25 18:36:16,244 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 19958 states and 23371 transitions.
[2020-11-25 18:36:16,263 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 18:36:16,263 INFO  L728         BuchiCegarLoop]: Abstraction has 19958 states and 23371 transitions.
[2020-11-25 18:36:16,278 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 19958 states and 23371 transitions.
[2020-11-25 18:36:16,438 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 19958 to 19936.
[2020-11-25 18:36:16,438 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 19936 states.
[2020-11-25 18:36:16,478 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 19936 states to 19936 states and 23346 transitions.
[2020-11-25 18:36:16,479 INFO  L751         BuchiCegarLoop]: Abstraction has 19936 states and 23346 transitions.
[2020-11-25 18:36:16,479 INFO  L631         BuchiCegarLoop]: Abstraction has 19936 states and 23346 transitions.
[2020-11-25 18:36:16,479 INFO  L445         BuchiCegarLoop]: ======== Iteration 7============
[2020-11-25 18:36:16,479 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 19936 states and 23346 transitions.
[2020-11-25 18:36:16,505 INFO  L131   ngComponentsAnalysis]: Automaton has 4 accepting balls. 32
[2020-11-25 18:36:16,505 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 18:36:16,505 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 18:36:16,508 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 18:36:16,509 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                  success_transfer_ITAMToken0 := false;
[L2]                  call_transfer_ITAMToken0 := false;
[L2]      CALL        call main();
[L14663]              assume null == 0;
[L14664]  CALL        call this := FreshRefGenerator__success();
[L9908]               havoc newRef;
[L9909]               assume Alloc[newRef] == false;
[L9910]               Alloc[newRef] := true;
[L9911]               assume newRef != null;
[L14664]  RET         call this := FreshRefGenerator__success();
[L14665]              assume now >= 0;
[L14666]              assume DType[this] == ITAMToken;
[L14667]              assume msgvalue_MSG == 0;
[L14668]              gas := gas - 53000;
[L14669]  CALL        call ITAMToken_ITAMToken(this, msgsender_MSG, msgvalue_MSG, _firstMaster_s868, _secondMaster_s868, _thirdMaster_s868, _owner_s868, _gameMaster_s868, _strategicSaleAddress_s868, _privateSaleAddress_s868, _publicSaleAddress_s868, _teamAddress_s868, _advisorAddress_s868, _marketingAddress_s868, _ecoAddress_s868, _inAppAddress_s868);
[L1968]               havoc __exception;
[L1969]               revert := false;
[L1970]   COND FALSE  !(__exception)
[L2040]   CALL        call ITAMToken_ITAMToken__success(this, msgsender_MSG, msgvalue_MSG, _firstMaster_s868, _secondMaster_s868, _thirdMaster_s868, _owner_s868, _gameMaster_s868, _strategicSaleAddress_s868, _privateSaleAddress_s868, _publicSaleAddress_s868, _teamAddress_s868, _advisorAddress_s868, _marketingAddress_s868, _ecoAddress_s868, _inAppAddress_s868);
[L10848]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L10138]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L10118]              assume msgsender_MSG != null;
[L10119]              Balance[this] := 0;
[L10120]              _balances_ERC20[this] := zeroRefintArr();
[L10121]              sum__balances0[this] := 0;
[L10122]              _allowed_ERC20[this] := zeroRefRefintArr();
[L10123]              sum__allowed1[this] := 0;
[L10124]              _totalSupply_ERC20[this] := 0;
[L10138]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L10139]  COND FALSE  !(revert)
[L10848]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L10849]  COND FALSE  !(revert)
[L10852]  CALL        call ERC20Capped_ERC20Capped__success(this, msgsender_MSG, msgvalue_MSG, TOTAL_CAP_ITAMToken[this]);
[L10602]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L10138]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L10118]              assume msgsender_MSG != null;
[L10119]              Balance[this] := 0;
[L10120]              _balances_ERC20[this] := zeroRefintArr();
[L10121]              sum__balances0[this] := 0;
[L10122]              _allowed_ERC20[this] := zeroRefRefintArr();
[L10123]              sum__allowed1[this] := 0;
[L10124]              _totalSupply_ERC20[this] := 0;
[L10138]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L10139]  COND FALSE  !(revert)
[L10602]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L10603]  COND FALSE  !(revert)
[L10606]  CALL        call ERC20Capped_ERC20Capped_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, cap_s528);
[L10577]              assume msgsender_MSG != null;
[L10578]              Balance[this] := 0;
[L10579]              _cap_ERC20Capped[this] := 0;
[L10581]  COND FALSE  !(!(cap_s528 > 0))
[L10585]              _cap_ERC20Capped[this] := cap_s528;
[L10606]  RET         call ERC20Capped_ERC20Capped_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, cap_s528);
[L10607]  COND FALSE  !(revert)
[L10852]  RET         call ERC20Capped_ERC20Capped__success(this, msgsender_MSG, msgvalue_MSG, TOTAL_CAP_ITAMToken[this]);
[L10853]  COND FALSE  !(revert)
[L10856]  CALL        call ITAMToken_ITAMToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, _firstMaster_s868, _secondMaster_s868, _thirdMaster_s868, _owner_s868, _gameMaster_s868, _strategicSaleAddress_s868, _privateSaleAddress_s868, _publicSaleAddress_s868, _teamAddress_s868, _advisorAddress_s868, _marketingAddress_s868, _ecoAddress_s868, _inAppAddress_s868);
[L10771]              assume msgsender_MSG != null;
[L10772]              Balance[this] := 0;
[L10773]              name_ITAMToken[this] := -1908028786;
[L10774]              symbol_ITAMToken[this] := -1908028786;
[L10775]              decimals_ITAMToken[this] := 18;
[L10776]              TOTAL_CAP_ITAMToken[this] := 2500000000;
[L10777]              firstMaster_ITAMToken[this] := null;
[L10778]              secondMaster_ITAMToken[this] := null;
[L10779]              thirdMaster_ITAMToken[this] := null;
[L10780]              decidedOwner_ITAMToken[this] := zeroRefRefboolArr();
[L10781]              owner_ITAMToken[this] := null;
[L10782]              gameMaster_ITAMToken[this] := null;
[L10783]              blackLists_ITAMToken[this] := zeroRefboolArr();
[L10784]              unlockCount_ITAMToken[this] := 0;
[L10785]              strategicSaleAddress_ITAMToken[this] := null;
[L10786]              Length_strategicSaleReleaseCaps_ITAMToken_lvl0[this] := 0;
[L10787]              strategicSaleReleaseCaps_ITAMToken[this] := zerointintArr();
[L10788]              sum_strategicSaleReleaseCaps4[this] := 0;
[L10789]              privateSaleAddress_ITAMToken[this] := null;
[L10790]              Length_privateSaleReleaseCaps_ITAMToken_lvl0[this] := 0;
[L10791]              privateSaleReleaseCaps_ITAMToken[this] := zerointintArr();
[L10792]              sum_privateSaleReleaseCaps5[this] := 0;
[L10793]              publicSaleAddress_ITAMToken[this] := null;
[L10794]              publicSaleReleaseCap_ITAMToken[this] := 200000000;
[L10795]              teamAddress_ITAMToken[this] := null;
[L10796]              Length_teamReleaseCaps_ITAMToken_lvl0[this] := 0;
[L10797]              teamReleaseCaps_ITAMToken[this] := zerointintArr();
[L10798]              sum_teamReleaseCaps6[this] := 0;
[L10799]              advisorAddress_ITAMToken[this] := null;
[L10800]              Length_advisorReleaseCaps_ITAMToken_lvl0[this] := 0;
[L10801]              advisorReleaseCaps_ITAMToken[this] := zerointintArr();
[L10802]              sum_advisorReleaseCaps7[this] := 0;
[L10803]              marketingAddress_ITAMToken[this] := null;
[L10804]              Length_marketingReleaseCaps_ITAMToken_lvl0[this] := 0;
[L10805]              marketingReleaseCaps_ITAMToken[this] := zerointintArr();
[L10806]              sum_marketingReleaseCaps8[this] := 0;
[L10807]              ecoAddress_ITAMToken[this] := null;
[L10808]              Length_ecoReleaseCaps_ITAMToken_lvl0[this] := 0;
[L10809]              ecoReleaseCaps_ITAMToken[this] := zerointintArr();
[L10810]              sum_ecoReleaseCaps9[this] := 0;
[L10811]              inAppAddress_ITAMToken[this] := null;
[L10812]              items_ITAMToken[this] := zerointintRefintArr();
[L10813]              sum_items10[this] := 0;
[L10815]              firstMaster_ITAMToken[this] := _firstMaster_s868;
[L10816]              secondMaster_ITAMToken[this] := _secondMaster_s868;
[L10817]              thirdMaster_ITAMToken[this] := _thirdMaster_s868;
[L10818]              owner_ITAMToken[this] := _owner_s868;
[L10819]              gameMaster_ITAMToken[this] := _gameMaster_s868;
[L10820]              strategicSaleAddress_ITAMToken[this] := _strategicSaleAddress_s868;
[L10821]              privateSaleAddress_ITAMToken[this] := _privateSaleAddress_s868;
[L10822]              publicSaleAddress_ITAMToken[this] := _publicSaleAddress_s868;
[L10823]              teamAddress_ITAMToken[this] := _teamAddress_s868;
[L10824]              advisorAddress_ITAMToken[this] := _advisorAddress_s868;
[L10825]              marketingAddress_ITAMToken[this] := _marketingAddress_s868;
[L10826]              ecoAddress_ITAMToken[this] := _ecoAddress_s868;
[L10827]              inAppAddress_ITAMToken[this] := _inAppAddress_s868;
[L10856]  RET         call ITAMToken_ITAMToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, _firstMaster_s868, _secondMaster_s868, _thirdMaster_s868, _owner_s868, _gameMaster_s868, _strategicSaleAddress_s868, _privateSaleAddress_s868, _publicSaleAddress_s868, _teamAddress_s868, _advisorAddress_s868, _marketingAddress_s868, _ecoAddress_s868, _inAppAddress_s868);
[L10857]  COND FALSE  !(revert)
[L2040]   RET         call ITAMToken_ITAMToken__success(this, msgsender_MSG, msgvalue_MSG, _firstMaster_s868, _secondMaster_s868, _thirdMaster_s868, _owner_s868, _gameMaster_s868, _strategicSaleAddress_s868, _privateSaleAddress_s868, _publicSaleAddress_s868, _teamAddress_s868, _advisorAddress_s868, _marketingAddress_s868, _ecoAddress_s868, _inAppAddress_s868);
[L2041]               assume !revert && gas >= 0;
[L14669]  RET         call ITAMToken_ITAMToken(this, msgsender_MSG, msgvalue_MSG, _firstMaster_s868, _secondMaster_s868, _thirdMaster_s868, _owner_s868, _gameMaster_s868, _strategicSaleAddress_s868, _privateSaleAddress_s868, _publicSaleAddress_s868, _teamAddress_s868, _advisorAddress_s868, _marketingAddress_s868, _ecoAddress_s868, _inAppAddress_s868);
[L14670]              assume !revert && gas >= 0;
[L14673]  CALL        call CorralChoice_ITAMToken(this);
[L14239]              havoc msgsender_MSG;
[L14240]              havoc msgvalue_MSG;
[L14241]              havoc choice;
[L14242]              havoc _to_s941;
[L14243]              havoc _value_s941;
[L14244]              havoc __ret_0_transfer;
[L14245]              havoc spender_s980;
[L14246]              havoc value_s980;
[L14247]              havoc __ret_0_approve;
[L14248]              havoc _from_s962;
[L14249]              havoc _to_s962;
[L14250]              havoc _value_s962;
[L14251]              havoc __ret_0_transferFrom;
[L14252]              havoc __ret_0_totalSupply;
[L14253]              havoc owner_s247;
[L14254]              havoc __ret_0_balanceOf;
[L14255]              havoc owner_s263;
[L14256]              havoc spender_s263;
[L14257]              havoc __ret_0_allowance;
[L14258]              havoc cap_s528;
[L14259]              havoc __ret_0_cap;
[L14260]              havoc __ret_0_name;
[L14261]              havoc __ret_0_symbol;
[L14262]              havoc __ret_0_decimals;
[L14263]              havoc __ret_0_firstMaster;
[L14264]              havoc __ret_0_secondMaster;
[L14265]              havoc __ret_0_thirdMaster;
[L14266]              havoc arg1575_s0;
[L14267]              havoc arg1576_s0;
[L14268]              havoc __ret_0_decidedOwner;
[L14269]              havoc __ret_0_owner;
[L14270]              havoc __ret_0_gameMaster;
[L14271]              havoc arg1577_s0;
[L14272]              havoc __ret_0_blackLists;
[L14273]              havoc __ret_0_unlockCount;
[L14274]              havoc __ret_0_strategicSaleAddress;
[L14275]              havoc arg1578_s0;
[L14276]              havoc __ret_0_strategicSaleReleaseCaps;
[L14277]              havoc __ret_0_privateSaleAddress;
[L14278]              havoc arg1579_s0;
[L14279]              havoc __ret_0_privateSaleReleaseCaps;
[L14280]              havoc __ret_0_publicSaleAddress;
[L14281]              havoc __ret_0_publicSaleReleaseCap;
[L14282]              havoc __ret_0_teamAddress;
[L14283]              havoc arg1580_s0;
[L14284]              havoc __ret_0_teamReleaseCaps;
[L14285]              havoc __ret_0_advisorAddress;
[L14286]              havoc arg1581_s0;
[L14287]              havoc __ret_0_advisorReleaseCaps;
[L14288]              havoc __ret_0_marketingAddress;
[L14289]              havoc arg1582_s0;
[L14290]              havoc __ret_0_marketingReleaseCaps;
[L14291]              havoc __ret_0_ecoAddress;
[L14292]              havoc arg1583_s0;
[L14293]              havoc __ret_0_ecoReleaseCaps;
[L14294]              havoc __ret_0_inAppAddress;
[L14295]              havoc _firstMaster_s868;
[L14296]              havoc _secondMaster_s868;
[L14297]              havoc _thirdMaster_s868;
[L14298]              havoc _owner_s868;
[L14299]              havoc _gameMaster_s868;
[L14300]              havoc _strategicSaleAddress_s868;
[L14301]              havoc _privateSaleAddress_s868;
[L14302]              havoc _publicSaleAddress_s868;
[L14303]              havoc _teamAddress_s868;
[L14304]              havoc _advisorAddress_s868;
[L14305]              havoc _marketingAddress_s868;
[L14306]              havoc _ecoAddress_s868;
[L14307]              havoc _inAppAddress_s868;
[L14308]              havoc _gameMaster_s923;
[L14309]              havoc value_s996;
[L14310]              havoc __ret_0_unlock;
[L14311]              havoc _strategicSaleAddress_s1169;
[L14312]              havoc _privateSaleAddress_s1169;
[L14313]              havoc _publicSaleAddress_s1169;
[L14314]              havoc _teamAddress_s1169;
[L14315]              havoc _advisorAddress_s1169;
[L14316]              havoc _marketingAddress_s1169;
[L14317]              havoc _ecoAddress_s1169;
[L14318]              havoc _inAppAddress_s1169;
[L14319]              havoc _owner_s1242;
[L14320]              havoc _to_s1264;
[L14321]              havoc _to_s1285;
[L14322]              havoc amount_s1321;
[L14323]              havoc appId_s1413;
[L14324]              havoc itemIds_s1413;
[L14325]              havoc tokenAddresses_s1413;
[L14326]              havoc values_s1413;
[L14327]              havoc __ret_0_createOrUpdateItem;
[L14328]              havoc tokenAddress_s1494;
[L14329]              havoc appId_s1494;
[L14330]              havoc itemId_s1494;
[L14331]              havoc __ret_0_purchaseItemOnERC20;
[L14332]              havoc appId_s1531;
[L14333]              havoc itemId_s1531;
[L14334]              havoc __ret_0_purchaseItemOnITAM;
[L14335]              havoc appId_s1572;
[L14336]              havoc itemId_s1572;
[L14337]              havoc __ret_0_purchaseItemOnEther;
[L14338]              havoc tmpNow;
[L14339]              havoc gas;
[L14340]              assume gas > 4000000 && gas <= 8000000;
[L14341]              tmpNow := now;
[L14342]              havoc now;
[L14343]              assume now > tmpNow;
[L14344]              assume msgsender_MSG != null;
[L14345]              assume DType[msgsender_MSG] != SafeMath;
[L14346]              assume DType[msgsender_MSG] != IERC20;
[L14347]              assume DType[msgsender_MSG] != ERC20;
[L14348]              assume DType[msgsender_MSG] != ERC20Capped;
[L14349]              assume DType[msgsender_MSG] != ITAMToken;
[L14350]              Alloc[msgsender_MSG] := true;
[L14351]  COND TRUE   choice == 45
[L14352]              gas := gas - 21000;
[L14353]  COND TRUE   gas >= 0
[L14354]              assume _value_s941 >= 0 && _value_s941 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L14355]              assume msgvalue_MSG == 0;
[L14356]  CALL        call __ret_0_transfer := transfer~address~uint256_ITAMToken(this, msgsender_MSG, msgvalue_MSG, _to_s941, _value_s941);
[L2]                  revert_hold := revert;
[L2]                  revert := false;
[L2]                  assume ((((((msgsender_MSG == _to_s941 && _value_s941 <= _balances_ERC20[this][msgsender_MSG]) && _value_s941 >= 0) && _value_s941 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][_to_s941] >= 0) && _balances_ERC20[this][_to_s941] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                  call_transfer_ITAMToken0 := true;
[L2]                  call_transfer_ITAMToken0 := false;
[L2]                  revert := revert_hold;
[L2267]               havoc __exception;
[L2268]               revert := false;
[L2269]   COND TRUE   __exception
[L2270]               __tmp__Balance := Balance;
[L2271]               __tmp__DType := DType;
[L2272]               __tmp__Alloc := Alloc;
[L2273]               __tmp__balance_ADDR := balance_ADDR;
[L2274]               __tmp__M_Ref_int := M_Ref_int;
[L2275]               __tmp__sum__balances0 := sum__balances0;
[L2276]               __tmp__alloc__allowed_ERC20_lvl0 := alloc__allowed_ERC20_lvl0;
[L2277]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L2278]               __tmp__sum__allowed1 := sum__allowed1;
[L2279]               __tmp__M_Ref_bool := M_Ref_bool;
[L2280]               __tmp__alloc_decidedOwner_ITAMToken_lvl0 := alloc_decidedOwner_ITAMToken_lvl0;
[L2281]               __tmp__sum_decidedOwner2 := sum_decidedOwner2;
[L2282]               __tmp__sum_blackLists3 := sum_blackLists3;
[L2283]               __tmp__alloc_items_ITAMToken_lvl1 := alloc_items_ITAMToken_lvl1;
[L2284]               __tmp__M_int_Ref := M_int_Ref;
[L2285]               __tmp__alloc_items_ITAMToken_lvl0 := alloc_items_ITAMToken_lvl0;
[L2286]               __tmp__sum_items10 := sum_items10;
[L2287]               __tmp__M_int_int := M_int_int;
[L2288]               __tmp__sum_strategicSaleReleaseCaps4 := sum_strategicSaleReleaseCaps4;
[L2289]               __tmp__sum_privateSaleReleaseCaps5 := sum_privateSaleReleaseCaps5;
[L2290]               __tmp__sum_teamReleaseCaps6 := sum_teamReleaseCaps6;
[L2291]               __tmp__sum_advisorReleaseCaps7 := sum_advisorReleaseCaps7;
[L2292]               __tmp__sum_marketingReleaseCaps8 := sum_marketingReleaseCaps8;
[L2293]               __tmp__sum_ecoReleaseCaps9 := sum_ecoReleaseCaps9;
[L2294]               __tmp__sum := sum;
[L2295]               __tmp__Length := Length;
[L2296]               __tmp__now := now;
[L2297]               __tmp___balances_ERC20 := _balances_ERC20;
[L2298]               __tmp___allowed_ERC20 := _allowed_ERC20;
[L2299]               __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L2300]               __tmp___cap_ERC20Capped := _cap_ERC20Capped;
[L2301]               __tmp__name_ITAMToken := name_ITAMToken;
[L2302]               __tmp__symbol_ITAMToken := symbol_ITAMToken;
[L2303]               __tmp__decimals_ITAMToken := decimals_ITAMToken;
[L2304]               __tmp__TOTAL_CAP_ITAMToken := TOTAL_CAP_ITAMToken;
[L2305]               __tmp__firstMaster_ITAMToken := firstMaster_ITAMToken;
[L2306]               __tmp__secondMaster_ITAMToken := secondMaster_ITAMToken;
[L2307]               __tmp__thirdMaster_ITAMToken := thirdMaster_ITAMToken;
[L2308]               __tmp__decidedOwner_ITAMToken := decidedOwner_ITAMToken;
[L2309]               __tmp__owner_ITAMToken := owner_ITAMToken;
[L2310]               __tmp__gameMaster_ITAMToken := gameMaster_ITAMToken;
[L2311]               __tmp__blackLists_ITAMToken := blackLists_ITAMToken;
[L2312]               __tmp__unlockCount_ITAMToken := unlockCount_ITAMToken;
[L2313]               __tmp__strategicSaleAddress_ITAMToken := strategicSaleAddress_ITAMToken;
[L2314]               __tmp__Length_strategicSaleReleaseCaps_ITAMToken_lvl0 := Length_strategicSaleReleaseCaps_ITAMToken_lvl0;
[L2315]               __tmp__strategicSaleReleaseCaps_ITAMToken := strategicSaleReleaseCaps_ITAMToken;
[L2316]               __tmp__privateSaleAddress_ITAMToken := privateSaleAddress_ITAMToken;
[L2317]               __tmp__Length_privateSaleReleaseCaps_ITAMToken_lvl0 := Length_privateSaleReleaseCaps_ITAMToken_lvl0;
[L2318]               __tmp__privateSaleReleaseCaps_ITAMToken := privateSaleReleaseCaps_ITAMToken;
[L2319]               __tmp__publicSaleAddress_ITAMToken := publicSaleAddress_ITAMToken;
[L2320]               __tmp__publicSaleReleaseCap_ITAMToken := publicSaleReleaseCap_ITAMToken;
[L2321]               __tmp__teamAddress_ITAMToken := teamAddress_ITAMToken;
[L2322]               __tmp__Length_teamReleaseCaps_ITAMToken_lvl0 := Length_teamReleaseCaps_ITAMToken_lvl0;
[L2323]               __tmp__teamReleaseCaps_ITAMToken := teamReleaseCaps_ITAMToken;
[L2324]               __tmp__advisorAddress_ITAMToken := advisorAddress_ITAMToken;
[L2325]               __tmp__Length_advisorReleaseCaps_ITAMToken_lvl0 := Length_advisorReleaseCaps_ITAMToken_lvl0;
[L2326]               __tmp__advisorReleaseCaps_ITAMToken := advisorReleaseCaps_ITAMToken;
[L2327]               __tmp__marketingAddress_ITAMToken := marketingAddress_ITAMToken;
[L2328]               __tmp__Length_marketingReleaseCaps_ITAMToken_lvl0 := Length_marketingReleaseCaps_ITAMToken_lvl0;
[L2329]               __tmp__marketingReleaseCaps_ITAMToken := marketingReleaseCaps_ITAMToken;
[L2330]               __tmp__ecoAddress_ITAMToken := ecoAddress_ITAMToken;
[L2331]               __tmp__Length_ecoReleaseCaps_ITAMToken_lvl0 := Length_ecoReleaseCaps_ITAMToken_lvl0;
[L2332]               __tmp__ecoReleaseCaps_ITAMToken := ecoReleaseCaps_ITAMToken;
[L2333]               __tmp__inAppAddress_ITAMToken := inAppAddress_ITAMToken;
[L2334]               __tmp__erc20_ITAMToken := erc20_ITAMToken;
[L2335]               __tmp__items_ITAMToken := items_ITAMToken;
[L2336]   CALL        call __ret_0_ := transfer~address~uint256_ITAMToken__fail(this, msgsender_MSG, msgvalue_MSG, _to_s941, _value_s941);
[L10884]  CALL        call onlyNotBlackList_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L13796]  COND FALSE  !(!!__tmp__blackLists_ITAMToken[this][msgsender_MSG])
[L10884]  RET         call onlyNotBlackList_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L10885]  COND FALSE  !(revert)
[L10888]  COND TRUE   __tmp__DType[this] == ITAMToken
[L10889]  CALL        call __var_16 := transfer~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, _to_s941, _value_s941);
[L10182]  COND TRUE   __tmp__DType[this] == ITAMToken
[L10183]  CALL        call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s282, value_s282);
[L10375]              __var_2 := null;
[L10376]  COND FALSE  !(!(to_s382 != null))
[L10380]  CALL        call __var_3 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __tmp___balances_ERC20[this][from_s382], value_s382);
[L10005]  COND TRUE   !(b_s82 <= a_s82)
[L10006]              revert := true;
[L10380]  RET         call __var_3 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __tmp___balances_ERC20[this][from_s382], value_s382);
[L10381]  COND TRUE   revert
[L10183]  RET         call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s282, value_s282);
[L10184]  COND TRUE   revert
[L10889]  RET         call __var_16 := transfer~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, _to_s941, _value_s941);
[L10890]  COND TRUE   revert
[L2336]   RET         call __ret_0_ := transfer~address~uint256_ITAMToken__fail(this, msgsender_MSG, msgvalue_MSG, _to_s941, _value_s941);
[L2337]               assume revert || gas < 0;
[L14356]  RET         call __ret_0_transfer := transfer~address~uint256_ITAMToken(this, msgsender_MSG, msgvalue_MSG, _to_s941, _value_s941);
[L14673]  RET         call CorralChoice_ITAMToken(this);

Loop:
[L14673]  CALL        call CorralChoice_ITAMToken(this);
[L14239]              havoc msgsender_MSG;
[L14240]              havoc msgvalue_MSG;
[L14241]              havoc choice;
[L14242]              havoc _to_s941;
[L14243]              havoc _value_s941;
[L14244]              havoc __ret_0_transfer;
[L14245]              havoc spender_s980;
[L14246]              havoc value_s980;
[L14247]              havoc __ret_0_approve;
[L14248]              havoc _from_s962;
[L14249]              havoc _to_s962;
[L14250]              havoc _value_s962;
[L14251]              havoc __ret_0_transferFrom;
[L14252]              havoc __ret_0_totalSupply;
[L14253]              havoc owner_s247;
[L14254]              havoc __ret_0_balanceOf;
[L14255]              havoc owner_s263;
[L14256]              havoc spender_s263;
[L14257]              havoc __ret_0_allowance;
[L14258]              havoc cap_s528;
[L14259]              havoc __ret_0_cap;
[L14260]              havoc __ret_0_name;
[L14261]              havoc __ret_0_symbol;
[L14262]              havoc __ret_0_decimals;
[L14263]              havoc __ret_0_firstMaster;
[L14264]              havoc __ret_0_secondMaster;
[L14265]              havoc __ret_0_thirdMaster;
[L14266]              havoc arg1575_s0;
[L14267]              havoc arg1576_s0;
[L14268]              havoc __ret_0_decidedOwner;
[L14269]              havoc __ret_0_owner;
[L14270]              havoc __ret_0_gameMaster;
[L14271]              havoc arg1577_s0;
[L14272]              havoc __ret_0_blackLists;
[L14273]              havoc __ret_0_unlockCount;
[L14274]              havoc __ret_0_strategicSaleAddress;
[L14275]              havoc arg1578_s0;
[L14276]              havoc __ret_0_strategicSaleReleaseCaps;
[L14277]              havoc __ret_0_privateSaleAddress;
[L14278]              havoc arg1579_s0;
[L14279]              havoc __ret_0_privateSaleReleaseCaps;
[L14280]              havoc __ret_0_publicSaleAddress;
[L14281]              havoc __ret_0_publicSaleReleaseCap;
[L14282]              havoc __ret_0_teamAddress;
[L14283]              havoc arg1580_s0;
[L14284]              havoc __ret_0_teamReleaseCaps;
[L14285]              havoc __ret_0_advisorAddress;
[L14286]              havoc arg1581_s0;
[L14287]              havoc __ret_0_advisorReleaseCaps;
[L14288]              havoc __ret_0_marketingAddress;
[L14289]              havoc arg1582_s0;
[L14290]              havoc __ret_0_marketingReleaseCaps;
[L14291]              havoc __ret_0_ecoAddress;
[L14292]              havoc arg1583_s0;
[L14293]              havoc __ret_0_ecoReleaseCaps;
[L14294]              havoc __ret_0_inAppAddress;
[L14295]              havoc _firstMaster_s868;
[L14296]              havoc _secondMaster_s868;
[L14297]              havoc _thirdMaster_s868;
[L14298]              havoc _owner_s868;
[L14299]              havoc _gameMaster_s868;
[L14300]              havoc _strategicSaleAddress_s868;
[L14301]              havoc _privateSaleAddress_s868;
[L14302]              havoc _publicSaleAddress_s868;
[L14303]              havoc _teamAddress_s868;
[L14304]              havoc _advisorAddress_s868;
[L14305]              havoc _marketingAddress_s868;
[L14306]              havoc _ecoAddress_s868;
[L14307]              havoc _inAppAddress_s868;
[L14308]              havoc _gameMaster_s923;
[L14309]              havoc value_s996;
[L14310]              havoc __ret_0_unlock;
[L14311]              havoc _strategicSaleAddress_s1169;
[L14312]              havoc _privateSaleAddress_s1169;
[L14313]              havoc _publicSaleAddress_s1169;
[L14314]              havoc _teamAddress_s1169;
[L14315]              havoc _advisorAddress_s1169;
[L14316]              havoc _marketingAddress_s1169;
[L14317]              havoc _ecoAddress_s1169;
[L14318]              havoc _inAppAddress_s1169;
[L14319]              havoc _owner_s1242;
[L14320]              havoc _to_s1264;
[L14321]              havoc _to_s1285;
[L14322]              havoc amount_s1321;
[L14323]              havoc appId_s1413;
[L14324]              havoc itemIds_s1413;
[L14325]              havoc tokenAddresses_s1413;
[L14326]              havoc values_s1413;
[L14327]              havoc __ret_0_createOrUpdateItem;
[L14328]              havoc tokenAddress_s1494;
[L14329]              havoc appId_s1494;
[L14330]              havoc itemId_s1494;
[L14331]              havoc __ret_0_purchaseItemOnERC20;
[L14332]              havoc appId_s1531;
[L14333]              havoc itemId_s1531;
[L14334]              havoc __ret_0_purchaseItemOnITAM;
[L14335]              havoc appId_s1572;
[L14336]              havoc itemId_s1572;
[L14337]              havoc __ret_0_purchaseItemOnEther;
[L14338]              havoc tmpNow;
[L14339]              havoc gas;
[L14340]              assume gas > 4000000 && gas <= 8000000;
[L14341]              tmpNow := now;
[L14342]              havoc now;
[L14343]              assume now > tmpNow;
[L14344]              assume msgsender_MSG != null;
[L14345]              assume DType[msgsender_MSG] != SafeMath;
[L14346]              assume DType[msgsender_MSG] != IERC20;
[L14347]              assume DType[msgsender_MSG] != ERC20;
[L14348]              assume DType[msgsender_MSG] != ERC20Capped;
[L14349]              assume DType[msgsender_MSG] != ITAMToken;
[L14350]              Alloc[msgsender_MSG] := true;
[L14351]  COND TRUE   choice == 45
[L14352]              gas := gas - 21000;
[L14353]  COND TRUE   gas >= 0
[L14354]              assume _value_s941 >= 0 && _value_s941 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L14355]              assume msgvalue_MSG == 0;
[L14356]  CALL        call __ret_0_transfer := transfer~address~uint256_ITAMToken(this, msgsender_MSG, msgvalue_MSG, _to_s941, _value_s941);
[L2]                  revert_hold := revert;
[L2]                  revert := false;
[L2]                  assume ((((((msgsender_MSG == _to_s941 && _value_s941 <= _balances_ERC20[this][msgsender_MSG]) && _value_s941 >= 0) && _value_s941 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][_to_s941] >= 0) && _balances_ERC20[this][_to_s941] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                  call_transfer_ITAMToken0 := true;
[L2]                  call_transfer_ITAMToken0 := false;
[L2]                  revert := revert_hold;
[L2267]               havoc __exception;
[L2268]               revert := false;
[L2269]   COND TRUE   __exception
[L2270]               __tmp__Balance := Balance;
[L2271]               __tmp__DType := DType;
[L2272]               __tmp__Alloc := Alloc;
[L2273]               __tmp__balance_ADDR := balance_ADDR;
[L2274]               __tmp__M_Ref_int := M_Ref_int;
[L2275]               __tmp__sum__balances0 := sum__balances0;
[L2276]               __tmp__alloc__allowed_ERC20_lvl0 := alloc__allowed_ERC20_lvl0;
[L2277]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L2278]               __tmp__sum__allowed1 := sum__allowed1;
[L2279]               __tmp__M_Ref_bool := M_Ref_bool;
[L2280]               __tmp__alloc_decidedOwner_ITAMToken_lvl0 := alloc_decidedOwner_ITAMToken_lvl0;
[L2281]               __tmp__sum_decidedOwner2 := sum_decidedOwner2;
[L2282]               __tmp__sum_blackLists3 := sum_blackLists3;
[L2283]               __tmp__alloc_items_ITAMToken_lvl1 := alloc_items_ITAMToken_lvl1;
[L2284]               __tmp__M_int_Ref := M_int_Ref;
[L2285]               __tmp__alloc_items_ITAMToken_lvl0 := alloc_items_ITAMToken_lvl0;
[L2286]               __tmp__sum_items10 := sum_items10;
[L2287]               __tmp__M_int_int := M_int_int;
[L2288]               __tmp__sum_strategicSaleReleaseCaps4 := sum_strategicSaleReleaseCaps4;
[L2289]               __tmp__sum_privateSaleReleaseCaps5 := sum_privateSaleReleaseCaps5;
[L2290]               __tmp__sum_teamReleaseCaps6 := sum_teamReleaseCaps6;
[L2291]               __tmp__sum_advisorReleaseCaps7 := sum_advisorReleaseCaps7;
[L2292]               __tmp__sum_marketingReleaseCaps8 := sum_marketingReleaseCaps8;
[L2293]               __tmp__sum_ecoReleaseCaps9 := sum_ecoReleaseCaps9;
[L2294]               __tmp__sum := sum;
[L2295]               __tmp__Length := Length;
[L2296]               __tmp__now := now;
[L2297]               __tmp___balances_ERC20 := _balances_ERC20;
[L2298]               __tmp___allowed_ERC20 := _allowed_ERC20;
[L2299]               __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L2300]               __tmp___cap_ERC20Capped := _cap_ERC20Capped;
[L2301]               __tmp__name_ITAMToken := name_ITAMToken;
[L2302]               __tmp__symbol_ITAMToken := symbol_ITAMToken;
[L2303]               __tmp__decimals_ITAMToken := decimals_ITAMToken;
[L2304]               __tmp__TOTAL_CAP_ITAMToken := TOTAL_CAP_ITAMToken;
[L2305]               __tmp__firstMaster_ITAMToken := firstMaster_ITAMToken;
[L2306]               __tmp__secondMaster_ITAMToken := secondMaster_ITAMToken;
[L2307]               __tmp__thirdMaster_ITAMToken := thirdMaster_ITAMToken;
[L2308]               __tmp__decidedOwner_ITAMToken := decidedOwner_ITAMToken;
[L2309]               __tmp__owner_ITAMToken := owner_ITAMToken;
[L2310]               __tmp__gameMaster_ITAMToken := gameMaster_ITAMToken;
[L2311]               __tmp__blackLists_ITAMToken := blackLists_ITAMToken;
[L2312]               __tmp__unlockCount_ITAMToken := unlockCount_ITAMToken;
[L2313]               __tmp__strategicSaleAddress_ITAMToken := strategicSaleAddress_ITAMToken;
[L2314]               __tmp__Length_strategicSaleReleaseCaps_ITAMToken_lvl0 := Length_strategicSaleReleaseCaps_ITAMToken_lvl0;
[L2315]               __tmp__strategicSaleReleaseCaps_ITAMToken := strategicSaleReleaseCaps_ITAMToken;
[L2316]               __tmp__privateSaleAddress_ITAMToken := privateSaleAddress_ITAMToken;
[L2317]               __tmp__Length_privateSaleReleaseCaps_ITAMToken_lvl0 := Length_privateSaleReleaseCaps_ITAMToken_lvl0;
[L2318]               __tmp__privateSaleReleaseCaps_ITAMToken := privateSaleReleaseCaps_ITAMToken;
[L2319]               __tmp__publicSaleAddress_ITAMToken := publicSaleAddress_ITAMToken;
[L2320]               __tmp__publicSaleReleaseCap_ITAMToken := publicSaleReleaseCap_ITAMToken;
[L2321]               __tmp__teamAddress_ITAMToken := teamAddress_ITAMToken;
[L2322]               __tmp__Length_teamReleaseCaps_ITAMToken_lvl0 := Length_teamReleaseCaps_ITAMToken_lvl0;
[L2323]               __tmp__teamReleaseCaps_ITAMToken := teamReleaseCaps_ITAMToken;
[L2324]               __tmp__advisorAddress_ITAMToken := advisorAddress_ITAMToken;
[L2325]               __tmp__Length_advisorReleaseCaps_ITAMToken_lvl0 := Length_advisorReleaseCaps_ITAMToken_lvl0;
[L2326]               __tmp__advisorReleaseCaps_ITAMToken := advisorReleaseCaps_ITAMToken;
[L2327]               __tmp__marketingAddress_ITAMToken := marketingAddress_ITAMToken;
[L2328]               __tmp__Length_marketingReleaseCaps_ITAMToken_lvl0 := Length_marketingReleaseCaps_ITAMToken_lvl0;
[L2329]               __tmp__marketingReleaseCaps_ITAMToken := marketingReleaseCaps_ITAMToken;
[L2330]               __tmp__ecoAddress_ITAMToken := ecoAddress_ITAMToken;
[L2331]               __tmp__Length_ecoReleaseCaps_ITAMToken_lvl0 := Length_ecoReleaseCaps_ITAMToken_lvl0;
[L2332]               __tmp__ecoReleaseCaps_ITAMToken := ecoReleaseCaps_ITAMToken;
[L2333]               __tmp__inAppAddress_ITAMToken := inAppAddress_ITAMToken;
[L2334]               __tmp__erc20_ITAMToken := erc20_ITAMToken;
[L2335]               __tmp__items_ITAMToken := items_ITAMToken;
[L2336]   CALL        call __ret_0_ := transfer~address~uint256_ITAMToken__fail(this, msgsender_MSG, msgvalue_MSG, _to_s941, _value_s941);
[L10884]  CALL        call onlyNotBlackList_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L13796]  COND FALSE  !(!!__tmp__blackLists_ITAMToken[this][msgsender_MSG])
[L10884]  RET         call onlyNotBlackList_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L10885]  COND FALSE  !(revert)
[L10888]  COND TRUE   __tmp__DType[this] == ITAMToken
[L10889]  CALL        call __var_16 := transfer~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, _to_s941, _value_s941);
[L10182]  COND TRUE   __tmp__DType[this] == ITAMToken
[L10183]  CALL        call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s282, value_s282);
[L10375]              __var_2 := null;
[L10376]  COND FALSE  !(!(to_s382 != null))
[L10380]  CALL        call __var_3 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __tmp___balances_ERC20[this][from_s382], value_s382);
[L10005]  COND TRUE   !(b_s82 <= a_s82)
[L10006]              revert := true;
[L10380]  RET         call __var_3 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __tmp___balances_ERC20[this][from_s382], value_s382);
[L10381]  COND TRUE   revert
[L10183]  RET         call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s282, value_s282);
[L10184]  COND TRUE   revert
[L10889]  RET         call __var_16 := transfer~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, _to_s941, _value_s941);
[L10890]  COND TRUE   revert
[L2336]   RET         call __ret_0_ := transfer~address~uint256_ITAMToken__fail(this, msgsender_MSG, msgvalue_MSG, _to_s941, _value_s941);
[L2337]               assume revert || gas < 0;
[L14356]  RET         call __ret_0_transfer := transfer~address~uint256_ITAMToken(this, msgsender_MSG, msgvalue_MSG, _to_s941, _value_s941);
[L14673]  RET         call CorralChoice_ITAMToken(this);

[2020-11-25 18:36:16,515 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 18:36:16,515 INFO  L82        PathProgramCache]: Analyzing trace with hash -697752544, now seen corresponding path program 1 times
[2020-11-25 18:36:16,516 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 18:36:16,533 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 18:36:16,629 INFO  L134       CoverageAnalysis]: Checked inductivity of 15 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 15 trivial. 0 not checked.
[2020-11-25 18:36:16,629 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 18:36:16,629 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [9] imperfect sequences [] total 9
[2020-11-25 18:36:16,630 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 18:36:16,630 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 9 interpolants.
[2020-11-25 18:36:16,630 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=15, Invalid=57, Unknown=0, NotChecked=0, Total=72
[2020-11-25 18:36:16,630 INFO  L87              Difference]: Start difference. First operand 19936 states and 23346 transitions. cyclomatic complexity: 3430 Second operand 9 states.
[2020-11-25 18:36:20,487 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 18:36:20,488 INFO  L93              Difference]: Finished difference Result 20688 states and 24367 transitions.
[2020-11-25 18:36:20,488 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 10 states. 
[2020-11-25 18:36:20,488 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 20688 states and 24367 transitions.
[2020-11-25 18:36:20,529 INFO  L131   ngComponentsAnalysis]: Automaton has 6 accepting balls. 40
[2020-11-25 18:36:20,587 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 20688 states to 20688 states and 24367 transitions.
[2020-11-25 18:36:20,587 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 934
[2020-11-25 18:36:20,588 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 934
[2020-11-25 18:36:20,588 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 20688 states and 24367 transitions.
[2020-11-25 18:36:20,604 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 18:36:20,604 INFO  L728         BuchiCegarLoop]: Abstraction has 20688 states and 24367 transitions.
[2020-11-25 18:36:20,615 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 20688 states and 24367 transitions.
[2020-11-25 18:36:20,733 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 20688 to 20276.
[2020-11-25 18:36:20,733 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 20276 states.
[2020-11-25 18:36:20,764 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 20276 states to 20276 states and 23734 transitions.
[2020-11-25 18:36:20,764 INFO  L751         BuchiCegarLoop]: Abstraction has 20276 states and 23734 transitions.
[2020-11-25 18:36:20,764 INFO  L631         BuchiCegarLoop]: Abstraction has 20276 states and 23734 transitions.
[2020-11-25 18:36:20,764 INFO  L445         BuchiCegarLoop]: ======== Iteration 8============
[2020-11-25 18:36:20,764 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 20276 states and 23734 transitions.
[2020-11-25 18:36:20,783 INFO  L131   ngComponentsAnalysis]: Automaton has 4 accepting balls. 32
[2020-11-25 18:36:20,783 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 18:36:20,783 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 18:36:20,785 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 18:36:20,785 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                  success_transfer_ITAMToken0 := false;
[L2]                  call_transfer_ITAMToken0 := false;
[L2]      CALL        call main();
[L14663]              assume null == 0;
[L14664]  CALL        call this := FreshRefGenerator__success();
[L9908]               havoc newRef;
[L9909]               assume Alloc[newRef] == false;
[L9910]               Alloc[newRef] := true;
[L9911]               assume newRef != null;
[L14664]  RET         call this := FreshRefGenerator__success();
[L14665]              assume now >= 0;
[L14666]              assume DType[this] == ITAMToken;
[L14667]              assume msgvalue_MSG == 0;
[L14668]              gas := gas - 53000;
[L14669]  CALL        call ITAMToken_ITAMToken(this, msgsender_MSG, msgvalue_MSG, _firstMaster_s868, _secondMaster_s868, _thirdMaster_s868, _owner_s868, _gameMaster_s868, _strategicSaleAddress_s868, _privateSaleAddress_s868, _publicSaleAddress_s868, _teamAddress_s868, _advisorAddress_s868, _marketingAddress_s868, _ecoAddress_s868, _inAppAddress_s868);
[L1968]               havoc __exception;
[L1969]               revert := false;
[L1970]   COND FALSE  !(__exception)
[L2040]   CALL        call ITAMToken_ITAMToken__success(this, msgsender_MSG, msgvalue_MSG, _firstMaster_s868, _secondMaster_s868, _thirdMaster_s868, _owner_s868, _gameMaster_s868, _strategicSaleAddress_s868, _privateSaleAddress_s868, _publicSaleAddress_s868, _teamAddress_s868, _advisorAddress_s868, _marketingAddress_s868, _ecoAddress_s868, _inAppAddress_s868);
[L10848]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L10138]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L10118]              assume msgsender_MSG != null;
[L10119]              Balance[this] := 0;
[L10120]              _balances_ERC20[this] := zeroRefintArr();
[L10121]              sum__balances0[this] := 0;
[L10122]              _allowed_ERC20[this] := zeroRefRefintArr();
[L10123]              sum__allowed1[this] := 0;
[L10124]              _totalSupply_ERC20[this] := 0;
[L10138]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L10139]  COND FALSE  !(revert)
[L10848]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L10849]  COND FALSE  !(revert)
[L10852]  CALL        call ERC20Capped_ERC20Capped__success(this, msgsender_MSG, msgvalue_MSG, TOTAL_CAP_ITAMToken[this]);
[L10602]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L10138]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L10118]              assume msgsender_MSG != null;
[L10119]              Balance[this] := 0;
[L10120]              _balances_ERC20[this] := zeroRefintArr();
[L10121]              sum__balances0[this] := 0;
[L10122]              _allowed_ERC20[this] := zeroRefRefintArr();
[L10123]              sum__allowed1[this] := 0;
[L10124]              _totalSupply_ERC20[this] := 0;
[L10138]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L10139]  COND FALSE  !(revert)
[L10602]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L10603]  COND FALSE  !(revert)
[L10606]  CALL        call ERC20Capped_ERC20Capped_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, cap_s528);
[L10577]              assume msgsender_MSG != null;
[L10578]              Balance[this] := 0;
[L10579]              _cap_ERC20Capped[this] := 0;
[L10581]  COND FALSE  !(!(cap_s528 > 0))
[L10585]              _cap_ERC20Capped[this] := cap_s528;
[L10606]  RET         call ERC20Capped_ERC20Capped_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, cap_s528);
[L10607]  COND FALSE  !(revert)
[L10852]  RET         call ERC20Capped_ERC20Capped__success(this, msgsender_MSG, msgvalue_MSG, TOTAL_CAP_ITAMToken[this]);
[L10853]  COND FALSE  !(revert)
[L10856]  CALL        call ITAMToken_ITAMToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, _firstMaster_s868, _secondMaster_s868, _thirdMaster_s868, _owner_s868, _gameMaster_s868, _strategicSaleAddress_s868, _privateSaleAddress_s868, _publicSaleAddress_s868, _teamAddress_s868, _advisorAddress_s868, _marketingAddress_s868, _ecoAddress_s868, _inAppAddress_s868);
[L10771]              assume msgsender_MSG != null;
[L10772]              Balance[this] := 0;
[L10773]              name_ITAMToken[this] := -1908028786;
[L10774]              symbol_ITAMToken[this] := -1908028786;
[L10775]              decimals_ITAMToken[this] := 18;
[L10776]              TOTAL_CAP_ITAMToken[this] := 2500000000;
[L10777]              firstMaster_ITAMToken[this] := null;
[L10778]              secondMaster_ITAMToken[this] := null;
[L10779]              thirdMaster_ITAMToken[this] := null;
[L10780]              decidedOwner_ITAMToken[this] := zeroRefRefboolArr();
[L10781]              owner_ITAMToken[this] := null;
[L10782]              gameMaster_ITAMToken[this] := null;
[L10783]              blackLists_ITAMToken[this] := zeroRefboolArr();
[L10784]              unlockCount_ITAMToken[this] := 0;
[L10785]              strategicSaleAddress_ITAMToken[this] := null;
[L10786]              Length_strategicSaleReleaseCaps_ITAMToken_lvl0[this] := 0;
[L10787]              strategicSaleReleaseCaps_ITAMToken[this] := zerointintArr();
[L10788]              sum_strategicSaleReleaseCaps4[this] := 0;
[L10789]              privateSaleAddress_ITAMToken[this] := null;
[L10790]              Length_privateSaleReleaseCaps_ITAMToken_lvl0[this] := 0;
[L10791]              privateSaleReleaseCaps_ITAMToken[this] := zerointintArr();
[L10792]              sum_privateSaleReleaseCaps5[this] := 0;
[L10793]              publicSaleAddress_ITAMToken[this] := null;
[L10794]              publicSaleReleaseCap_ITAMToken[this] := 200000000;
[L10795]              teamAddress_ITAMToken[this] := null;
[L10796]              Length_teamReleaseCaps_ITAMToken_lvl0[this] := 0;
[L10797]              teamReleaseCaps_ITAMToken[this] := zerointintArr();
[L10798]              sum_teamReleaseCaps6[this] := 0;
[L10799]              advisorAddress_ITAMToken[this] := null;
[L10800]              Length_advisorReleaseCaps_ITAMToken_lvl0[this] := 0;
[L10801]              advisorReleaseCaps_ITAMToken[this] := zerointintArr();
[L10802]              sum_advisorReleaseCaps7[this] := 0;
[L10803]              marketingAddress_ITAMToken[this] := null;
[L10804]              Length_marketingReleaseCaps_ITAMToken_lvl0[this] := 0;
[L10805]              marketingReleaseCaps_ITAMToken[this] := zerointintArr();
[L10806]              sum_marketingReleaseCaps8[this] := 0;
[L10807]              ecoAddress_ITAMToken[this] := null;
[L10808]              Length_ecoReleaseCaps_ITAMToken_lvl0[this] := 0;
[L10809]              ecoReleaseCaps_ITAMToken[this] := zerointintArr();
[L10810]              sum_ecoReleaseCaps9[this] := 0;
[L10811]              inAppAddress_ITAMToken[this] := null;
[L10812]              items_ITAMToken[this] := zerointintRefintArr();
[L10813]              sum_items10[this] := 0;
[L10815]              firstMaster_ITAMToken[this] := _firstMaster_s868;
[L10816]              secondMaster_ITAMToken[this] := _secondMaster_s868;
[L10817]              thirdMaster_ITAMToken[this] := _thirdMaster_s868;
[L10818]              owner_ITAMToken[this] := _owner_s868;
[L10819]              gameMaster_ITAMToken[this] := _gameMaster_s868;
[L10820]              strategicSaleAddress_ITAMToken[this] := _strategicSaleAddress_s868;
[L10821]              privateSaleAddress_ITAMToken[this] := _privateSaleAddress_s868;
[L10822]              publicSaleAddress_ITAMToken[this] := _publicSaleAddress_s868;
[L10823]              teamAddress_ITAMToken[this] := _teamAddress_s868;
[L10824]              advisorAddress_ITAMToken[this] := _advisorAddress_s868;
[L10825]              marketingAddress_ITAMToken[this] := _marketingAddress_s868;
[L10826]              ecoAddress_ITAMToken[this] := _ecoAddress_s868;
[L10827]              inAppAddress_ITAMToken[this] := _inAppAddress_s868;
[L10856]  RET         call ITAMToken_ITAMToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, _firstMaster_s868, _secondMaster_s868, _thirdMaster_s868, _owner_s868, _gameMaster_s868, _strategicSaleAddress_s868, _privateSaleAddress_s868, _publicSaleAddress_s868, _teamAddress_s868, _advisorAddress_s868, _marketingAddress_s868, _ecoAddress_s868, _inAppAddress_s868);
[L10857]  COND FALSE  !(revert)
[L2040]   RET         call ITAMToken_ITAMToken__success(this, msgsender_MSG, msgvalue_MSG, _firstMaster_s868, _secondMaster_s868, _thirdMaster_s868, _owner_s868, _gameMaster_s868, _strategicSaleAddress_s868, _privateSaleAddress_s868, _publicSaleAddress_s868, _teamAddress_s868, _advisorAddress_s868, _marketingAddress_s868, _ecoAddress_s868, _inAppAddress_s868);
[L2041]               assume !revert && gas >= 0;
[L14669]  RET         call ITAMToken_ITAMToken(this, msgsender_MSG, msgvalue_MSG, _firstMaster_s868, _secondMaster_s868, _thirdMaster_s868, _owner_s868, _gameMaster_s868, _strategicSaleAddress_s868, _privateSaleAddress_s868, _publicSaleAddress_s868, _teamAddress_s868, _advisorAddress_s868, _marketingAddress_s868, _ecoAddress_s868, _inAppAddress_s868);
[L14670]              assume !revert && gas >= 0;
[L14673]  CALL        call CorralChoice_ITAMToken(this);
[L14239]              havoc msgsender_MSG;
[L14240]              havoc msgvalue_MSG;
[L14241]              havoc choice;
[L14242]              havoc _to_s941;
[L14243]              havoc _value_s941;
[L14244]              havoc __ret_0_transfer;
[L14245]              havoc spender_s980;
[L14246]              havoc value_s980;
[L14247]              havoc __ret_0_approve;
[L14248]              havoc _from_s962;
[L14249]              havoc _to_s962;
[L14250]              havoc _value_s962;
[L14251]              havoc __ret_0_transferFrom;
[L14252]              havoc __ret_0_totalSupply;
[L14253]              havoc owner_s247;
[L14254]              havoc __ret_0_balanceOf;
[L14255]              havoc owner_s263;
[L14256]              havoc spender_s263;
[L14257]              havoc __ret_0_allowance;
[L14258]              havoc cap_s528;
[L14259]              havoc __ret_0_cap;
[L14260]              havoc __ret_0_name;
[L14261]              havoc __ret_0_symbol;
[L14262]              havoc __ret_0_decimals;
[L14263]              havoc __ret_0_firstMaster;
[L14264]              havoc __ret_0_secondMaster;
[L14265]              havoc __ret_0_thirdMaster;
[L14266]              havoc arg1575_s0;
[L14267]              havoc arg1576_s0;
[L14268]              havoc __ret_0_decidedOwner;
[L14269]              havoc __ret_0_owner;
[L14270]              havoc __ret_0_gameMaster;
[L14271]              havoc arg1577_s0;
[L14272]              havoc __ret_0_blackLists;
[L14273]              havoc __ret_0_unlockCount;
[L14274]              havoc __ret_0_strategicSaleAddress;
[L14275]              havoc arg1578_s0;
[L14276]              havoc __ret_0_strategicSaleReleaseCaps;
[L14277]              havoc __ret_0_privateSaleAddress;
[L14278]              havoc arg1579_s0;
[L14279]              havoc __ret_0_privateSaleReleaseCaps;
[L14280]              havoc __ret_0_publicSaleAddress;
[L14281]              havoc __ret_0_publicSaleReleaseCap;
[L14282]              havoc __ret_0_teamAddress;
[L14283]              havoc arg1580_s0;
[L14284]              havoc __ret_0_teamReleaseCaps;
[L14285]              havoc __ret_0_advisorAddress;
[L14286]              havoc arg1581_s0;
[L14287]              havoc __ret_0_advisorReleaseCaps;
[L14288]              havoc __ret_0_marketingAddress;
[L14289]              havoc arg1582_s0;
[L14290]              havoc __ret_0_marketingReleaseCaps;
[L14291]              havoc __ret_0_ecoAddress;
[L14292]              havoc arg1583_s0;
[L14293]              havoc __ret_0_ecoReleaseCaps;
[L14294]              havoc __ret_0_inAppAddress;
[L14295]              havoc _firstMaster_s868;
[L14296]              havoc _secondMaster_s868;
[L14297]              havoc _thirdMaster_s868;
[L14298]              havoc _owner_s868;
[L14299]              havoc _gameMaster_s868;
[L14300]              havoc _strategicSaleAddress_s868;
[L14301]              havoc _privateSaleAddress_s868;
[L14302]              havoc _publicSaleAddress_s868;
[L14303]              havoc _teamAddress_s868;
[L14304]              havoc _advisorAddress_s868;
[L14305]              havoc _marketingAddress_s868;
[L14306]              havoc _ecoAddress_s868;
[L14307]              havoc _inAppAddress_s868;
[L14308]              havoc _gameMaster_s923;
[L14309]              havoc value_s996;
[L14310]              havoc __ret_0_unlock;
[L14311]              havoc _strategicSaleAddress_s1169;
[L14312]              havoc _privateSaleAddress_s1169;
[L14313]              havoc _publicSaleAddress_s1169;
[L14314]              havoc _teamAddress_s1169;
[L14315]              havoc _advisorAddress_s1169;
[L14316]              havoc _marketingAddress_s1169;
[L14317]              havoc _ecoAddress_s1169;
[L14318]              havoc _inAppAddress_s1169;
[L14319]              havoc _owner_s1242;
[L14320]              havoc _to_s1264;
[L14321]              havoc _to_s1285;
[L14322]              havoc amount_s1321;
[L14323]              havoc appId_s1413;
[L14324]              havoc itemIds_s1413;
[L14325]              havoc tokenAddresses_s1413;
[L14326]              havoc values_s1413;
[L14327]              havoc __ret_0_createOrUpdateItem;
[L14328]              havoc tokenAddress_s1494;
[L14329]              havoc appId_s1494;
[L14330]              havoc itemId_s1494;
[L14331]              havoc __ret_0_purchaseItemOnERC20;
[L14332]              havoc appId_s1531;
[L14333]              havoc itemId_s1531;
[L14334]              havoc __ret_0_purchaseItemOnITAM;
[L14335]              havoc appId_s1572;
[L14336]              havoc itemId_s1572;
[L14337]              havoc __ret_0_purchaseItemOnEther;
[L14338]              havoc tmpNow;
[L14339]              havoc gas;
[L14340]              assume gas > 4000000 && gas <= 8000000;
[L14341]              tmpNow := now;
[L14342]              havoc now;
[L14343]              assume now > tmpNow;
[L14344]              assume msgsender_MSG != null;
[L14345]              assume DType[msgsender_MSG] != SafeMath;
[L14346]              assume DType[msgsender_MSG] != IERC20;
[L14347]              assume DType[msgsender_MSG] != ERC20;
[L14348]              assume DType[msgsender_MSG] != ERC20Capped;
[L14349]              assume DType[msgsender_MSG] != ITAMToken;
[L14350]              Alloc[msgsender_MSG] := true;
[L14351]  COND TRUE   choice == 45
[L14352]              gas := gas - 21000;
[L14353]  COND TRUE   gas >= 0
[L14354]              assume _value_s941 >= 0 && _value_s941 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L14355]              assume msgvalue_MSG == 0;
[L14356]  CALL        call __ret_0_transfer := transfer~address~uint256_ITAMToken(this, msgsender_MSG, msgvalue_MSG, _to_s941, _value_s941);
[L2]                  revert_hold := revert;
[L2]                  revert := false;
[L2]                  assume ((((((msgsender_MSG == _to_s941 && _value_s941 <= _balances_ERC20[this][msgsender_MSG]) && _value_s941 >= 0) && _value_s941 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][_to_s941] >= 0) && _balances_ERC20[this][_to_s941] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                  call_transfer_ITAMToken0 := true;
[L2]                  call_transfer_ITAMToken0 := false;
[L2]                  revert := revert_hold;
[L2267]               havoc __exception;
[L2268]               revert := false;
[L2269]   COND TRUE   __exception
[L2270]               __tmp__Balance := Balance;
[L2271]               __tmp__DType := DType;
[L2272]               __tmp__Alloc := Alloc;
[L2273]               __tmp__balance_ADDR := balance_ADDR;
[L2274]               __tmp__M_Ref_int := M_Ref_int;
[L2275]               __tmp__sum__balances0 := sum__balances0;
[L2276]               __tmp__alloc__allowed_ERC20_lvl0 := alloc__allowed_ERC20_lvl0;
[L2277]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L2278]               __tmp__sum__allowed1 := sum__allowed1;
[L2279]               __tmp__M_Ref_bool := M_Ref_bool;
[L2280]               __tmp__alloc_decidedOwner_ITAMToken_lvl0 := alloc_decidedOwner_ITAMToken_lvl0;
[L2281]               __tmp__sum_decidedOwner2 := sum_decidedOwner2;
[L2282]               __tmp__sum_blackLists3 := sum_blackLists3;
[L2283]               __tmp__alloc_items_ITAMToken_lvl1 := alloc_items_ITAMToken_lvl1;
[L2284]               __tmp__M_int_Ref := M_int_Ref;
[L2285]               __tmp__alloc_items_ITAMToken_lvl0 := alloc_items_ITAMToken_lvl0;
[L2286]               __tmp__sum_items10 := sum_items10;
[L2287]               __tmp__M_int_int := M_int_int;
[L2288]               __tmp__sum_strategicSaleReleaseCaps4 := sum_strategicSaleReleaseCaps4;
[L2289]               __tmp__sum_privateSaleReleaseCaps5 := sum_privateSaleReleaseCaps5;
[L2290]               __tmp__sum_teamReleaseCaps6 := sum_teamReleaseCaps6;
[L2291]               __tmp__sum_advisorReleaseCaps7 := sum_advisorReleaseCaps7;
[L2292]               __tmp__sum_marketingReleaseCaps8 := sum_marketingReleaseCaps8;
[L2293]               __tmp__sum_ecoReleaseCaps9 := sum_ecoReleaseCaps9;
[L2294]               __tmp__sum := sum;
[L2295]               __tmp__Length := Length;
[L2296]               __tmp__now := now;
[L2297]               __tmp___balances_ERC20 := _balances_ERC20;
[L2298]               __tmp___allowed_ERC20 := _allowed_ERC20;
[L2299]               __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L2300]               __tmp___cap_ERC20Capped := _cap_ERC20Capped;
[L2301]               __tmp__name_ITAMToken := name_ITAMToken;
[L2302]               __tmp__symbol_ITAMToken := symbol_ITAMToken;
[L2303]               __tmp__decimals_ITAMToken := decimals_ITAMToken;
[L2304]               __tmp__TOTAL_CAP_ITAMToken := TOTAL_CAP_ITAMToken;
[L2305]               __tmp__firstMaster_ITAMToken := firstMaster_ITAMToken;
[L2306]               __tmp__secondMaster_ITAMToken := secondMaster_ITAMToken;
[L2307]               __tmp__thirdMaster_ITAMToken := thirdMaster_ITAMToken;
[L2308]               __tmp__decidedOwner_ITAMToken := decidedOwner_ITAMToken;
[L2309]               __tmp__owner_ITAMToken := owner_ITAMToken;
[L2310]               __tmp__gameMaster_ITAMToken := gameMaster_ITAMToken;
[L2311]               __tmp__blackLists_ITAMToken := blackLists_ITAMToken;
[L2312]               __tmp__unlockCount_ITAMToken := unlockCount_ITAMToken;
[L2313]               __tmp__strategicSaleAddress_ITAMToken := strategicSaleAddress_ITAMToken;
[L2314]               __tmp__Length_strategicSaleReleaseCaps_ITAMToken_lvl0 := Length_strategicSaleReleaseCaps_ITAMToken_lvl0;
[L2315]               __tmp__strategicSaleReleaseCaps_ITAMToken := strategicSaleReleaseCaps_ITAMToken;
[L2316]               __tmp__privateSaleAddress_ITAMToken := privateSaleAddress_ITAMToken;
[L2317]               __tmp__Length_privateSaleReleaseCaps_ITAMToken_lvl0 := Length_privateSaleReleaseCaps_ITAMToken_lvl0;
[L2318]               __tmp__privateSaleReleaseCaps_ITAMToken := privateSaleReleaseCaps_ITAMToken;
[L2319]               __tmp__publicSaleAddress_ITAMToken := publicSaleAddress_ITAMToken;
[L2320]               __tmp__publicSaleReleaseCap_ITAMToken := publicSaleReleaseCap_ITAMToken;
[L2321]               __tmp__teamAddress_ITAMToken := teamAddress_ITAMToken;
[L2322]               __tmp__Length_teamReleaseCaps_ITAMToken_lvl0 := Length_teamReleaseCaps_ITAMToken_lvl0;
[L2323]               __tmp__teamReleaseCaps_ITAMToken := teamReleaseCaps_ITAMToken;
[L2324]               __tmp__advisorAddress_ITAMToken := advisorAddress_ITAMToken;
[L2325]               __tmp__Length_advisorReleaseCaps_ITAMToken_lvl0 := Length_advisorReleaseCaps_ITAMToken_lvl0;
[L2326]               __tmp__advisorReleaseCaps_ITAMToken := advisorReleaseCaps_ITAMToken;
[L2327]               __tmp__marketingAddress_ITAMToken := marketingAddress_ITAMToken;
[L2328]               __tmp__Length_marketingReleaseCaps_ITAMToken_lvl0 := Length_marketingReleaseCaps_ITAMToken_lvl0;
[L2329]               __tmp__marketingReleaseCaps_ITAMToken := marketingReleaseCaps_ITAMToken;
[L2330]               __tmp__ecoAddress_ITAMToken := ecoAddress_ITAMToken;
[L2331]               __tmp__Length_ecoReleaseCaps_ITAMToken_lvl0 := Length_ecoReleaseCaps_ITAMToken_lvl0;
[L2332]               __tmp__ecoReleaseCaps_ITAMToken := ecoReleaseCaps_ITAMToken;
[L2333]               __tmp__inAppAddress_ITAMToken := inAppAddress_ITAMToken;
[L2334]               __tmp__erc20_ITAMToken := erc20_ITAMToken;
[L2335]               __tmp__items_ITAMToken := items_ITAMToken;
[L2336]   CALL        call __ret_0_ := transfer~address~uint256_ITAMToken__fail(this, msgsender_MSG, msgvalue_MSG, _to_s941, _value_s941);
[L10884]  CALL        call onlyNotBlackList_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L13796]  COND FALSE  !(!!__tmp__blackLists_ITAMToken[this][msgsender_MSG])
[L10884]  RET         call onlyNotBlackList_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L10885]  COND FALSE  !(revert)
[L10888]  COND TRUE   __tmp__DType[this] == ITAMToken
[L10889]  CALL        call __var_16 := transfer~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, _to_s941, _value_s941);
[L10182]  COND TRUE   __tmp__DType[this] == ITAMToken
[L10183]  CALL        call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s282, value_s282);
[L10375]              __var_2 := null;
[L10376]  COND FALSE  !(!(to_s382 != null))
[L10380]  CALL        call __var_3 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __tmp___balances_ERC20[this][from_s382], value_s382);
[L10005]  COND FALSE  !(!(b_s82 <= a_s82))
[L10009]              c_s82 := (a_s82 - b_s82) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L10010]              __ret_0_ := c_s82;
[L10380]  RET         call __var_3 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __tmp___balances_ERC20[this][from_s382], value_s382);
[L10381]  COND FALSE  !(revert)
[L10384]              __tmp__sum__balances0[this] := __tmp__sum__balances0[this] - __tmp___balances_ERC20[this][from_s382];
[L10385]              __tmp___balances_ERC20[this][from_s382] := __var_3;
[L10386]              __tmp__sum__balances0[this] := __tmp__sum__balances0[this] + __tmp___balances_ERC20[this][from_s382];
[L10387]  CALL        call __var_4 := add~uint256~uint256_SafeMath__fail(this, this, 0, __tmp___balances_ERC20[this][to_s382], value_s382);
[L10029]              c_s106 := (a_s106 + b_s106) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L10030]  COND TRUE   !(c_s106 >= a_s106)
[L10031]              revert := true;
[L10387]  RET         call __var_4 := add~uint256~uint256_SafeMath__fail(this, this, 0, __tmp___balances_ERC20[this][to_s382], value_s382);
[L10388]  COND TRUE   revert
[L10183]  RET         call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s282, value_s282);
[L10184]  COND TRUE   revert
[L10889]  RET         call __var_16 := transfer~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, _to_s941, _value_s941);
[L10890]  COND TRUE   revert
[L2336]   RET         call __ret_0_ := transfer~address~uint256_ITAMToken__fail(this, msgsender_MSG, msgvalue_MSG, _to_s941, _value_s941);
[L2337]               assume revert || gas < 0;
[L14356]  RET         call __ret_0_transfer := transfer~address~uint256_ITAMToken(this, msgsender_MSG, msgvalue_MSG, _to_s941, _value_s941);
[L14673]  RET         call CorralChoice_ITAMToken(this);

Loop:
[L14673]  CALL        call CorralChoice_ITAMToken(this);
[L14239]              havoc msgsender_MSG;
[L14240]              havoc msgvalue_MSG;
[L14241]              havoc choice;
[L14242]              havoc _to_s941;
[L14243]              havoc _value_s941;
[L14244]              havoc __ret_0_transfer;
[L14245]              havoc spender_s980;
[L14246]              havoc value_s980;
[L14247]              havoc __ret_0_approve;
[L14248]              havoc _from_s962;
[L14249]              havoc _to_s962;
[L14250]              havoc _value_s962;
[L14251]              havoc __ret_0_transferFrom;
[L14252]              havoc __ret_0_totalSupply;
[L14253]              havoc owner_s247;
[L14254]              havoc __ret_0_balanceOf;
[L14255]              havoc owner_s263;
[L14256]              havoc spender_s263;
[L14257]              havoc __ret_0_allowance;
[L14258]              havoc cap_s528;
[L14259]              havoc __ret_0_cap;
[L14260]              havoc __ret_0_name;
[L14261]              havoc __ret_0_symbol;
[L14262]              havoc __ret_0_decimals;
[L14263]              havoc __ret_0_firstMaster;
[L14264]              havoc __ret_0_secondMaster;
[L14265]              havoc __ret_0_thirdMaster;
[L14266]              havoc arg1575_s0;
[L14267]              havoc arg1576_s0;
[L14268]              havoc __ret_0_decidedOwner;
[L14269]              havoc __ret_0_owner;
[L14270]              havoc __ret_0_gameMaster;
[L14271]              havoc arg1577_s0;
[L14272]              havoc __ret_0_blackLists;
[L14273]              havoc __ret_0_unlockCount;
[L14274]              havoc __ret_0_strategicSaleAddress;
[L14275]              havoc arg1578_s0;
[L14276]              havoc __ret_0_strategicSaleReleaseCaps;
[L14277]              havoc __ret_0_privateSaleAddress;
[L14278]              havoc arg1579_s0;
[L14279]              havoc __ret_0_privateSaleReleaseCaps;
[L14280]              havoc __ret_0_publicSaleAddress;
[L14281]              havoc __ret_0_publicSaleReleaseCap;
[L14282]              havoc __ret_0_teamAddress;
[L14283]              havoc arg1580_s0;
[L14284]              havoc __ret_0_teamReleaseCaps;
[L14285]              havoc __ret_0_advisorAddress;
[L14286]              havoc arg1581_s0;
[L14287]              havoc __ret_0_advisorReleaseCaps;
[L14288]              havoc __ret_0_marketingAddress;
[L14289]              havoc arg1582_s0;
[L14290]              havoc __ret_0_marketingReleaseCaps;
[L14291]              havoc __ret_0_ecoAddress;
[L14292]              havoc arg1583_s0;
[L14293]              havoc __ret_0_ecoReleaseCaps;
[L14294]              havoc __ret_0_inAppAddress;
[L14295]              havoc _firstMaster_s868;
[L14296]              havoc _secondMaster_s868;
[L14297]              havoc _thirdMaster_s868;
[L14298]              havoc _owner_s868;
[L14299]              havoc _gameMaster_s868;
[L14300]              havoc _strategicSaleAddress_s868;
[L14301]              havoc _privateSaleAddress_s868;
[L14302]              havoc _publicSaleAddress_s868;
[L14303]              havoc _teamAddress_s868;
[L14304]              havoc _advisorAddress_s868;
[L14305]              havoc _marketingAddress_s868;
[L14306]              havoc _ecoAddress_s868;
[L14307]              havoc _inAppAddress_s868;
[L14308]              havoc _gameMaster_s923;
[L14309]              havoc value_s996;
[L14310]              havoc __ret_0_unlock;
[L14311]              havoc _strategicSaleAddress_s1169;
[L14312]              havoc _privateSaleAddress_s1169;
[L14313]              havoc _publicSaleAddress_s1169;
[L14314]              havoc _teamAddress_s1169;
[L14315]              havoc _advisorAddress_s1169;
[L14316]              havoc _marketingAddress_s1169;
[L14317]              havoc _ecoAddress_s1169;
[L14318]              havoc _inAppAddress_s1169;
[L14319]              havoc _owner_s1242;
[L14320]              havoc _to_s1264;
[L14321]              havoc _to_s1285;
[L14322]              havoc amount_s1321;
[L14323]              havoc appId_s1413;
[L14324]              havoc itemIds_s1413;
[L14325]              havoc tokenAddresses_s1413;
[L14326]              havoc values_s1413;
[L14327]              havoc __ret_0_createOrUpdateItem;
[L14328]              havoc tokenAddress_s1494;
[L14329]              havoc appId_s1494;
[L14330]              havoc itemId_s1494;
[L14331]              havoc __ret_0_purchaseItemOnERC20;
[L14332]              havoc appId_s1531;
[L14333]              havoc itemId_s1531;
[L14334]              havoc __ret_0_purchaseItemOnITAM;
[L14335]              havoc appId_s1572;
[L14336]              havoc itemId_s1572;
[L14337]              havoc __ret_0_purchaseItemOnEther;
[L14338]              havoc tmpNow;
[L14339]              havoc gas;
[L14340]              assume gas > 4000000 && gas <= 8000000;
[L14341]              tmpNow := now;
[L14342]              havoc now;
[L14343]              assume now > tmpNow;
[L14344]              assume msgsender_MSG != null;
[L14345]              assume DType[msgsender_MSG] != SafeMath;
[L14346]              assume DType[msgsender_MSG] != IERC20;
[L14347]              assume DType[msgsender_MSG] != ERC20;
[L14348]              assume DType[msgsender_MSG] != ERC20Capped;
[L14349]              assume DType[msgsender_MSG] != ITAMToken;
[L14350]              Alloc[msgsender_MSG] := true;
[L14351]  COND TRUE   choice == 45
[L14352]              gas := gas - 21000;
[L14353]  COND TRUE   gas >= 0
[L14354]              assume _value_s941 >= 0 && _value_s941 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L14355]              assume msgvalue_MSG == 0;
[L14356]  CALL        call __ret_0_transfer := transfer~address~uint256_ITAMToken(this, msgsender_MSG, msgvalue_MSG, _to_s941, _value_s941);
[L2]                  revert_hold := revert;
[L2]                  revert := false;
[L2]                  assume ((((((msgsender_MSG == _to_s941 && _value_s941 <= _balances_ERC20[this][msgsender_MSG]) && _value_s941 >= 0) && _value_s941 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][_to_s941] >= 0) && _balances_ERC20[this][_to_s941] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                  call_transfer_ITAMToken0 := true;
[L2]                  call_transfer_ITAMToken0 := false;
[L2]                  revert := revert_hold;
[L2267]               havoc __exception;
[L2268]               revert := false;
[L2269]   COND TRUE   __exception
[L2270]               __tmp__Balance := Balance;
[L2271]               __tmp__DType := DType;
[L2272]               __tmp__Alloc := Alloc;
[L2273]               __tmp__balance_ADDR := balance_ADDR;
[L2274]               __tmp__M_Ref_int := M_Ref_int;
[L2275]               __tmp__sum__balances0 := sum__balances0;
[L2276]               __tmp__alloc__allowed_ERC20_lvl0 := alloc__allowed_ERC20_lvl0;
[L2277]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L2278]               __tmp__sum__allowed1 := sum__allowed1;
[L2279]               __tmp__M_Ref_bool := M_Ref_bool;
[L2280]               __tmp__alloc_decidedOwner_ITAMToken_lvl0 := alloc_decidedOwner_ITAMToken_lvl0;
[L2281]               __tmp__sum_decidedOwner2 := sum_decidedOwner2;
[L2282]               __tmp__sum_blackLists3 := sum_blackLists3;
[L2283]               __tmp__alloc_items_ITAMToken_lvl1 := alloc_items_ITAMToken_lvl1;
[L2284]               __tmp__M_int_Ref := M_int_Ref;
[L2285]               __tmp__alloc_items_ITAMToken_lvl0 := alloc_items_ITAMToken_lvl0;
[L2286]               __tmp__sum_items10 := sum_items10;
[L2287]               __tmp__M_int_int := M_int_int;
[L2288]               __tmp__sum_strategicSaleReleaseCaps4 := sum_strategicSaleReleaseCaps4;
[L2289]               __tmp__sum_privateSaleReleaseCaps5 := sum_privateSaleReleaseCaps5;
[L2290]               __tmp__sum_teamReleaseCaps6 := sum_teamReleaseCaps6;
[L2291]               __tmp__sum_advisorReleaseCaps7 := sum_advisorReleaseCaps7;
[L2292]               __tmp__sum_marketingReleaseCaps8 := sum_marketingReleaseCaps8;
[L2293]               __tmp__sum_ecoReleaseCaps9 := sum_ecoReleaseCaps9;
[L2294]               __tmp__sum := sum;
[L2295]               __tmp__Length := Length;
[L2296]               __tmp__now := now;
[L2297]               __tmp___balances_ERC20 := _balances_ERC20;
[L2298]               __tmp___allowed_ERC20 := _allowed_ERC20;
[L2299]               __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L2300]               __tmp___cap_ERC20Capped := _cap_ERC20Capped;
[L2301]               __tmp__name_ITAMToken := name_ITAMToken;
[L2302]               __tmp__symbol_ITAMToken := symbol_ITAMToken;
[L2303]               __tmp__decimals_ITAMToken := decimals_ITAMToken;
[L2304]               __tmp__TOTAL_CAP_ITAMToken := TOTAL_CAP_ITAMToken;
[L2305]               __tmp__firstMaster_ITAMToken := firstMaster_ITAMToken;
[L2306]               __tmp__secondMaster_ITAMToken := secondMaster_ITAMToken;
[L2307]               __tmp__thirdMaster_ITAMToken := thirdMaster_ITAMToken;
[L2308]               __tmp__decidedOwner_ITAMToken := decidedOwner_ITAMToken;
[L2309]               __tmp__owner_ITAMToken := owner_ITAMToken;
[L2310]               __tmp__gameMaster_ITAMToken := gameMaster_ITAMToken;
[L2311]               __tmp__blackLists_ITAMToken := blackLists_ITAMToken;
[L2312]               __tmp__unlockCount_ITAMToken := unlockCount_ITAMToken;
[L2313]               __tmp__strategicSaleAddress_ITAMToken := strategicSaleAddress_ITAMToken;
[L2314]               __tmp__Length_strategicSaleReleaseCaps_ITAMToken_lvl0 := Length_strategicSaleReleaseCaps_ITAMToken_lvl0;
[L2315]               __tmp__strategicSaleReleaseCaps_ITAMToken := strategicSaleReleaseCaps_ITAMToken;
[L2316]               __tmp__privateSaleAddress_ITAMToken := privateSaleAddress_ITAMToken;
[L2317]               __tmp__Length_privateSaleReleaseCaps_ITAMToken_lvl0 := Length_privateSaleReleaseCaps_ITAMToken_lvl0;
[L2318]               __tmp__privateSaleReleaseCaps_ITAMToken := privateSaleReleaseCaps_ITAMToken;
[L2319]               __tmp__publicSaleAddress_ITAMToken := publicSaleAddress_ITAMToken;
[L2320]               __tmp__publicSaleReleaseCap_ITAMToken := publicSaleReleaseCap_ITAMToken;
[L2321]               __tmp__teamAddress_ITAMToken := teamAddress_ITAMToken;
[L2322]               __tmp__Length_teamReleaseCaps_ITAMToken_lvl0 := Length_teamReleaseCaps_ITAMToken_lvl0;
[L2323]               __tmp__teamReleaseCaps_ITAMToken := teamReleaseCaps_ITAMToken;
[L2324]               __tmp__advisorAddress_ITAMToken := advisorAddress_ITAMToken;
[L2325]               __tmp__Length_advisorReleaseCaps_ITAMToken_lvl0 := Length_advisorReleaseCaps_ITAMToken_lvl0;
[L2326]               __tmp__advisorReleaseCaps_ITAMToken := advisorReleaseCaps_ITAMToken;
[L2327]               __tmp__marketingAddress_ITAMToken := marketingAddress_ITAMToken;
[L2328]               __tmp__Length_marketingReleaseCaps_ITAMToken_lvl0 := Length_marketingReleaseCaps_ITAMToken_lvl0;
[L2329]               __tmp__marketingReleaseCaps_ITAMToken := marketingReleaseCaps_ITAMToken;
[L2330]               __tmp__ecoAddress_ITAMToken := ecoAddress_ITAMToken;
[L2331]               __tmp__Length_ecoReleaseCaps_ITAMToken_lvl0 := Length_ecoReleaseCaps_ITAMToken_lvl0;
[L2332]               __tmp__ecoReleaseCaps_ITAMToken := ecoReleaseCaps_ITAMToken;
[L2333]               __tmp__inAppAddress_ITAMToken := inAppAddress_ITAMToken;
[L2334]               __tmp__erc20_ITAMToken := erc20_ITAMToken;
[L2335]               __tmp__items_ITAMToken := items_ITAMToken;
[L2336]   CALL        call __ret_0_ := transfer~address~uint256_ITAMToken__fail(this, msgsender_MSG, msgvalue_MSG, _to_s941, _value_s941);
[L10884]  CALL        call onlyNotBlackList_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L13796]  COND FALSE  !(!!__tmp__blackLists_ITAMToken[this][msgsender_MSG])
[L10884]  RET         call onlyNotBlackList_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L10885]  COND FALSE  !(revert)
[L10888]  COND TRUE   __tmp__DType[this] == ITAMToken
[L10889]  CALL        call __var_16 := transfer~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, _to_s941, _value_s941);
[L10182]  COND TRUE   __tmp__DType[this] == ITAMToken
[L10183]  CALL        call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s282, value_s282);
[L10375]              __var_2 := null;
[L10376]  COND FALSE  !(!(to_s382 != null))
[L10380]  CALL        call __var_3 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __tmp___balances_ERC20[this][from_s382], value_s382);
[L10005]  COND FALSE  !(!(b_s82 <= a_s82))
[L10009]              c_s82 := (a_s82 - b_s82) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L10010]              __ret_0_ := c_s82;
[L10380]  RET         call __var_3 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __tmp___balances_ERC20[this][from_s382], value_s382);
[L10381]  COND FALSE  !(revert)
[L10384]              __tmp__sum__balances0[this] := __tmp__sum__balances0[this] - __tmp___balances_ERC20[this][from_s382];
[L10385]              __tmp___balances_ERC20[this][from_s382] := __var_3;
[L10386]              __tmp__sum__balances0[this] := __tmp__sum__balances0[this] + __tmp___balances_ERC20[this][from_s382];
[L10387]  CALL        call __var_4 := add~uint256~uint256_SafeMath__fail(this, this, 0, __tmp___balances_ERC20[this][to_s382], value_s382);
[L10029]              c_s106 := (a_s106 + b_s106) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L10030]  COND TRUE   !(c_s106 >= a_s106)
[L10031]              revert := true;
[L10387]  RET         call __var_4 := add~uint256~uint256_SafeMath__fail(this, this, 0, __tmp___balances_ERC20[this][to_s382], value_s382);
[L10388]  COND TRUE   revert
[L10183]  RET         call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s282, value_s282);
[L10184]  COND TRUE   revert
[L10889]  RET         call __var_16 := transfer~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, _to_s941, _value_s941);
[L10890]  COND TRUE   revert
[L2336]   RET         call __ret_0_ := transfer~address~uint256_ITAMToken__fail(this, msgsender_MSG, msgvalue_MSG, _to_s941, _value_s941);
[L2337]               assume revert || gas < 0;
[L14356]  RET         call __ret_0_transfer := transfer~address~uint256_ITAMToken(this, msgsender_MSG, msgvalue_MSG, _to_s941, _value_s941);
[L14673]  RET         call CorralChoice_ITAMToken(this);

[2020-11-25 18:36:20,790 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 18:36:20,790 INFO  L82        PathProgramCache]: Analyzing trace with hash 2050719144, now seen corresponding path program 1 times
[2020-11-25 18:36:20,791 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 18:36:20,808 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 18:36:21,049 INFO  L134       CoverageAnalysis]: Checked inductivity of 15 backedges. 10 proven. 0 refuted. 0 times theorem prover too weak. 5 trivial. 0 not checked.
[2020-11-25 18:36:21,049 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 18:36:21,049 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [23] imperfect sequences [] total 23
[2020-11-25 18:36:21,050 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 18:36:21,050 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 24 interpolants.
[2020-11-25 18:36:21,050 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=46, Invalid=506, Unknown=0, NotChecked=0, Total=552
[2020-11-25 18:36:21,050 INFO  L87              Difference]: Start difference. First operand 20276 states and 23734 transitions. cyclomatic complexity: 3478 Second operand 24 states.
[2020-11-25 18:36:39,565 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 18:36:39,565 INFO  L93              Difference]: Finished difference Result 20730 states and 24539 transitions.
[2020-11-25 18:36:39,565 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 29 states. 
[2020-11-25 18:36:39,565 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 20730 states and 24539 transitions.
[2020-11-25 18:36:39,609 INFO  L131   ngComponentsAnalysis]: Automaton has 7 accepting balls. 48
[2020-11-25 18:36:39,665 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 20730 states to 20730 states and 24539 transitions.
[2020-11-25 18:36:39,665 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 945
[2020-11-25 18:36:39,666 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 945
[2020-11-25 18:36:39,666 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 20730 states and 24539 transitions.
[2020-11-25 18:36:39,682 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 18:36:39,682 INFO  L728         BuchiCegarLoop]: Abstraction has 20730 states and 24539 transitions.
[2020-11-25 18:36:39,693 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 20730 states and 24539 transitions.
[2020-11-25 18:36:39,798 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 20730 to 20286.
[2020-11-25 18:36:39,798 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 20286 states.
[2020-11-25 18:36:39,826 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 20286 states to 20286 states and 23755 transitions.
[2020-11-25 18:36:39,827 INFO  L751         BuchiCegarLoop]: Abstraction has 20286 states and 23755 transitions.
[2020-11-25 18:36:39,827 INFO  L631         BuchiCegarLoop]: Abstraction has 20286 states and 23755 transitions.
[2020-11-25 18:36:39,827 INFO  L445         BuchiCegarLoop]: ======== Iteration 9============
[2020-11-25 18:36:39,827 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 20286 states and 23755 transitions.
[2020-11-25 18:36:39,845 INFO  L131   ngComponentsAnalysis]: Automaton has 4 accepting balls. 32
[2020-11-25 18:36:39,845 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 18:36:39,845 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 18:36:39,847 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 18:36:39,847 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                  success_transfer_ITAMToken0 := false;
[L2]                  call_transfer_ITAMToken0 := false;
[L2]      CALL        call main();
[L14663]              assume null == 0;
[L14664]  CALL        call this := FreshRefGenerator__success();
[L9908]               havoc newRef;
[L9909]               assume Alloc[newRef] == false;
[L9910]               Alloc[newRef] := true;
[L9911]               assume newRef != null;
[L14664]  RET         call this := FreshRefGenerator__success();
[L14665]              assume now >= 0;
[L14666]              assume DType[this] == ITAMToken;
[L14667]              assume msgvalue_MSG == 0;
[L14668]              gas := gas - 53000;
[L14669]  CALL        call ITAMToken_ITAMToken(this, msgsender_MSG, msgvalue_MSG, _firstMaster_s868, _secondMaster_s868, _thirdMaster_s868, _owner_s868, _gameMaster_s868, _strategicSaleAddress_s868, _privateSaleAddress_s868, _publicSaleAddress_s868, _teamAddress_s868, _advisorAddress_s868, _marketingAddress_s868, _ecoAddress_s868, _inAppAddress_s868);
[L1968]               havoc __exception;
[L1969]               revert := false;
[L1970]   COND FALSE  !(__exception)
[L2040]   CALL        call ITAMToken_ITAMToken__success(this, msgsender_MSG, msgvalue_MSG, _firstMaster_s868, _secondMaster_s868, _thirdMaster_s868, _owner_s868, _gameMaster_s868, _strategicSaleAddress_s868, _privateSaleAddress_s868, _publicSaleAddress_s868, _teamAddress_s868, _advisorAddress_s868, _marketingAddress_s868, _ecoAddress_s868, _inAppAddress_s868);
[L10848]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L10138]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L10118]              assume msgsender_MSG != null;
[L10119]              Balance[this] := 0;
[L10120]              _balances_ERC20[this] := zeroRefintArr();
[L10121]              sum__balances0[this] := 0;
[L10122]              _allowed_ERC20[this] := zeroRefRefintArr();
[L10123]              sum__allowed1[this] := 0;
[L10124]              _totalSupply_ERC20[this] := 0;
[L10138]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L10139]  COND FALSE  !(revert)
[L10848]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L10849]  COND FALSE  !(revert)
[L10852]  CALL        call ERC20Capped_ERC20Capped__success(this, msgsender_MSG, msgvalue_MSG, TOTAL_CAP_ITAMToken[this]);
[L10602]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L10138]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L10118]              assume msgsender_MSG != null;
[L10119]              Balance[this] := 0;
[L10120]              _balances_ERC20[this] := zeroRefintArr();
[L10121]              sum__balances0[this] := 0;
[L10122]              _allowed_ERC20[this] := zeroRefRefintArr();
[L10123]              sum__allowed1[this] := 0;
[L10124]              _totalSupply_ERC20[this] := 0;
[L10138]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L10139]  COND FALSE  !(revert)
[L10602]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L10603]  COND FALSE  !(revert)
[L10606]  CALL        call ERC20Capped_ERC20Capped_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, cap_s528);
[L10577]              assume msgsender_MSG != null;
[L10578]              Balance[this] := 0;
[L10579]              _cap_ERC20Capped[this] := 0;
[L10581]  COND FALSE  !(!(cap_s528 > 0))
[L10585]              _cap_ERC20Capped[this] := cap_s528;
[L10606]  RET         call ERC20Capped_ERC20Capped_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, cap_s528);
[L10607]  COND FALSE  !(revert)
[L10852]  RET         call ERC20Capped_ERC20Capped__success(this, msgsender_MSG, msgvalue_MSG, TOTAL_CAP_ITAMToken[this]);
[L10853]  COND FALSE  !(revert)
[L10856]  CALL        call ITAMToken_ITAMToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, _firstMaster_s868, _secondMaster_s868, _thirdMaster_s868, _owner_s868, _gameMaster_s868, _strategicSaleAddress_s868, _privateSaleAddress_s868, _publicSaleAddress_s868, _teamAddress_s868, _advisorAddress_s868, _marketingAddress_s868, _ecoAddress_s868, _inAppAddress_s868);
[L10771]              assume msgsender_MSG != null;
[L10772]              Balance[this] := 0;
[L10773]              name_ITAMToken[this] := -1908028786;
[L10774]              symbol_ITAMToken[this] := -1908028786;
[L10775]              decimals_ITAMToken[this] := 18;
[L10776]              TOTAL_CAP_ITAMToken[this] := 2500000000;
[L10777]              firstMaster_ITAMToken[this] := null;
[L10778]              secondMaster_ITAMToken[this] := null;
[L10779]              thirdMaster_ITAMToken[this] := null;
[L10780]              decidedOwner_ITAMToken[this] := zeroRefRefboolArr();
[L10781]              owner_ITAMToken[this] := null;
[L10782]              gameMaster_ITAMToken[this] := null;
[L10783]              blackLists_ITAMToken[this] := zeroRefboolArr();
[L10784]              unlockCount_ITAMToken[this] := 0;
[L10785]              strategicSaleAddress_ITAMToken[this] := null;
[L10786]              Length_strategicSaleReleaseCaps_ITAMToken_lvl0[this] := 0;
[L10787]              strategicSaleReleaseCaps_ITAMToken[this] := zerointintArr();
[L10788]              sum_strategicSaleReleaseCaps4[this] := 0;
[L10789]              privateSaleAddress_ITAMToken[this] := null;
[L10790]              Length_privateSaleReleaseCaps_ITAMToken_lvl0[this] := 0;
[L10791]              privateSaleReleaseCaps_ITAMToken[this] := zerointintArr();
[L10792]              sum_privateSaleReleaseCaps5[this] := 0;
[L10793]              publicSaleAddress_ITAMToken[this] := null;
[L10794]              publicSaleReleaseCap_ITAMToken[this] := 200000000;
[L10795]              teamAddress_ITAMToken[this] := null;
[L10796]              Length_teamReleaseCaps_ITAMToken_lvl0[this] := 0;
[L10797]              teamReleaseCaps_ITAMToken[this] := zerointintArr();
[L10798]              sum_teamReleaseCaps6[this] := 0;
[L10799]              advisorAddress_ITAMToken[this] := null;
[L10800]              Length_advisorReleaseCaps_ITAMToken_lvl0[this] := 0;
[L10801]              advisorReleaseCaps_ITAMToken[this] := zerointintArr();
[L10802]              sum_advisorReleaseCaps7[this] := 0;
[L10803]              marketingAddress_ITAMToken[this] := null;
[L10804]              Length_marketingReleaseCaps_ITAMToken_lvl0[this] := 0;
[L10805]              marketingReleaseCaps_ITAMToken[this] := zerointintArr();
[L10806]              sum_marketingReleaseCaps8[this] := 0;
[L10807]              ecoAddress_ITAMToken[this] := null;
[L10808]              Length_ecoReleaseCaps_ITAMToken_lvl0[this] := 0;
[L10809]              ecoReleaseCaps_ITAMToken[this] := zerointintArr();
[L10810]              sum_ecoReleaseCaps9[this] := 0;
[L10811]              inAppAddress_ITAMToken[this] := null;
[L10812]              items_ITAMToken[this] := zerointintRefintArr();
[L10813]              sum_items10[this] := 0;
[L10815]              firstMaster_ITAMToken[this] := _firstMaster_s868;
[L10816]              secondMaster_ITAMToken[this] := _secondMaster_s868;
[L10817]              thirdMaster_ITAMToken[this] := _thirdMaster_s868;
[L10818]              owner_ITAMToken[this] := _owner_s868;
[L10819]              gameMaster_ITAMToken[this] := _gameMaster_s868;
[L10820]              strategicSaleAddress_ITAMToken[this] := _strategicSaleAddress_s868;
[L10821]              privateSaleAddress_ITAMToken[this] := _privateSaleAddress_s868;
[L10822]              publicSaleAddress_ITAMToken[this] := _publicSaleAddress_s868;
[L10823]              teamAddress_ITAMToken[this] := _teamAddress_s868;
[L10824]              advisorAddress_ITAMToken[this] := _advisorAddress_s868;
[L10825]              marketingAddress_ITAMToken[this] := _marketingAddress_s868;
[L10826]              ecoAddress_ITAMToken[this] := _ecoAddress_s868;
[L10827]              inAppAddress_ITAMToken[this] := _inAppAddress_s868;
[L10856]  RET         call ITAMToken_ITAMToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, _firstMaster_s868, _secondMaster_s868, _thirdMaster_s868, _owner_s868, _gameMaster_s868, _strategicSaleAddress_s868, _privateSaleAddress_s868, _publicSaleAddress_s868, _teamAddress_s868, _advisorAddress_s868, _marketingAddress_s868, _ecoAddress_s868, _inAppAddress_s868);
[L10857]  COND FALSE  !(revert)
[L2040]   RET         call ITAMToken_ITAMToken__success(this, msgsender_MSG, msgvalue_MSG, _firstMaster_s868, _secondMaster_s868, _thirdMaster_s868, _owner_s868, _gameMaster_s868, _strategicSaleAddress_s868, _privateSaleAddress_s868, _publicSaleAddress_s868, _teamAddress_s868, _advisorAddress_s868, _marketingAddress_s868, _ecoAddress_s868, _inAppAddress_s868);
[L2041]               assume !revert && gas >= 0;
[L14669]  RET         call ITAMToken_ITAMToken(this, msgsender_MSG, msgvalue_MSG, _firstMaster_s868, _secondMaster_s868, _thirdMaster_s868, _owner_s868, _gameMaster_s868, _strategicSaleAddress_s868, _privateSaleAddress_s868, _publicSaleAddress_s868, _teamAddress_s868, _advisorAddress_s868, _marketingAddress_s868, _ecoAddress_s868, _inAppAddress_s868);
[L14670]              assume !revert && gas >= 0;
[L14673]  CALL        call CorralChoice_ITAMToken(this);
[L14239]              havoc msgsender_MSG;
[L14240]              havoc msgvalue_MSG;
[L14241]              havoc choice;
[L14242]              havoc _to_s941;
[L14243]              havoc _value_s941;
[L14244]              havoc __ret_0_transfer;
[L14245]              havoc spender_s980;
[L14246]              havoc value_s980;
[L14247]              havoc __ret_0_approve;
[L14248]              havoc _from_s962;
[L14249]              havoc _to_s962;
[L14250]              havoc _value_s962;
[L14251]              havoc __ret_0_transferFrom;
[L14252]              havoc __ret_0_totalSupply;
[L14253]              havoc owner_s247;
[L14254]              havoc __ret_0_balanceOf;
[L14255]              havoc owner_s263;
[L14256]              havoc spender_s263;
[L14257]              havoc __ret_0_allowance;
[L14258]              havoc cap_s528;
[L14259]              havoc __ret_0_cap;
[L14260]              havoc __ret_0_name;
[L14261]              havoc __ret_0_symbol;
[L14262]              havoc __ret_0_decimals;
[L14263]              havoc __ret_0_firstMaster;
[L14264]              havoc __ret_0_secondMaster;
[L14265]              havoc __ret_0_thirdMaster;
[L14266]              havoc arg1575_s0;
[L14267]              havoc arg1576_s0;
[L14268]              havoc __ret_0_decidedOwner;
[L14269]              havoc __ret_0_owner;
[L14270]              havoc __ret_0_gameMaster;
[L14271]              havoc arg1577_s0;
[L14272]              havoc __ret_0_blackLists;
[L14273]              havoc __ret_0_unlockCount;
[L14274]              havoc __ret_0_strategicSaleAddress;
[L14275]              havoc arg1578_s0;
[L14276]              havoc __ret_0_strategicSaleReleaseCaps;
[L14277]              havoc __ret_0_privateSaleAddress;
[L14278]              havoc arg1579_s0;
[L14279]              havoc __ret_0_privateSaleReleaseCaps;
[L14280]              havoc __ret_0_publicSaleAddress;
[L14281]              havoc __ret_0_publicSaleReleaseCap;
[L14282]              havoc __ret_0_teamAddress;
[L14283]              havoc arg1580_s0;
[L14284]              havoc __ret_0_teamReleaseCaps;
[L14285]              havoc __ret_0_advisorAddress;
[L14286]              havoc arg1581_s0;
[L14287]              havoc __ret_0_advisorReleaseCaps;
[L14288]              havoc __ret_0_marketingAddress;
[L14289]              havoc arg1582_s0;
[L14290]              havoc __ret_0_marketingReleaseCaps;
[L14291]              havoc __ret_0_ecoAddress;
[L14292]              havoc arg1583_s0;
[L14293]              havoc __ret_0_ecoReleaseCaps;
[L14294]              havoc __ret_0_inAppAddress;
[L14295]              havoc _firstMaster_s868;
[L14296]              havoc _secondMaster_s868;
[L14297]              havoc _thirdMaster_s868;
[L14298]              havoc _owner_s868;
[L14299]              havoc _gameMaster_s868;
[L14300]              havoc _strategicSaleAddress_s868;
[L14301]              havoc _privateSaleAddress_s868;
[L14302]              havoc _publicSaleAddress_s868;
[L14303]              havoc _teamAddress_s868;
[L14304]              havoc _advisorAddress_s868;
[L14305]              havoc _marketingAddress_s868;
[L14306]              havoc _ecoAddress_s868;
[L14307]              havoc _inAppAddress_s868;
[L14308]              havoc _gameMaster_s923;
[L14309]              havoc value_s996;
[L14310]              havoc __ret_0_unlock;
[L14311]              havoc _strategicSaleAddress_s1169;
[L14312]              havoc _privateSaleAddress_s1169;
[L14313]              havoc _publicSaleAddress_s1169;
[L14314]              havoc _teamAddress_s1169;
[L14315]              havoc _advisorAddress_s1169;
[L14316]              havoc _marketingAddress_s1169;
[L14317]              havoc _ecoAddress_s1169;
[L14318]              havoc _inAppAddress_s1169;
[L14319]              havoc _owner_s1242;
[L14320]              havoc _to_s1264;
[L14321]              havoc _to_s1285;
[L14322]              havoc amount_s1321;
[L14323]              havoc appId_s1413;
[L14324]              havoc itemIds_s1413;
[L14325]              havoc tokenAddresses_s1413;
[L14326]              havoc values_s1413;
[L14327]              havoc __ret_0_createOrUpdateItem;
[L14328]              havoc tokenAddress_s1494;
[L14329]              havoc appId_s1494;
[L14330]              havoc itemId_s1494;
[L14331]              havoc __ret_0_purchaseItemOnERC20;
[L14332]              havoc appId_s1531;
[L14333]              havoc itemId_s1531;
[L14334]              havoc __ret_0_purchaseItemOnITAM;
[L14335]              havoc appId_s1572;
[L14336]              havoc itemId_s1572;
[L14337]              havoc __ret_0_purchaseItemOnEther;
[L14338]              havoc tmpNow;
[L14339]              havoc gas;
[L14340]              assume gas > 4000000 && gas <= 8000000;
[L14341]              tmpNow := now;
[L14342]              havoc now;
[L14343]              assume now > tmpNow;
[L14344]              assume msgsender_MSG != null;
[L14345]              assume DType[msgsender_MSG] != SafeMath;
[L14346]              assume DType[msgsender_MSG] != IERC20;
[L14347]              assume DType[msgsender_MSG] != ERC20;
[L14348]              assume DType[msgsender_MSG] != ERC20Capped;
[L14349]              assume DType[msgsender_MSG] != ITAMToken;
[L14350]              Alloc[msgsender_MSG] := true;
[L14351]  COND TRUE   choice == 45
[L14352]              gas := gas - 21000;
[L14353]  COND TRUE   gas >= 0
[L14354]              assume _value_s941 >= 0 && _value_s941 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L14355]              assume msgvalue_MSG == 0;
[L14356]  CALL        call __ret_0_transfer := transfer~address~uint256_ITAMToken(this, msgsender_MSG, msgvalue_MSG, _to_s941, _value_s941);
[L2]                  revert_hold := revert;
[L2]                  revert := false;
[L2]                  assume ((((((msgsender_MSG == _to_s941 && _value_s941 <= _balances_ERC20[this][msgsender_MSG]) && _value_s941 >= 0) && _value_s941 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][_to_s941] >= 0) && _balances_ERC20[this][_to_s941] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                  call_transfer_ITAMToken0 := true;
[L2]                  call_transfer_ITAMToken0 := false;
[L2]                  revert := revert_hold;
[L2267]               havoc __exception;
[L2268]               revert := false;
[L2269]   COND TRUE   __exception
[L2270]               __tmp__Balance := Balance;
[L2271]               __tmp__DType := DType;
[L2272]               __tmp__Alloc := Alloc;
[L2273]               __tmp__balance_ADDR := balance_ADDR;
[L2274]               __tmp__M_Ref_int := M_Ref_int;
[L2275]               __tmp__sum__balances0 := sum__balances0;
[L2276]               __tmp__alloc__allowed_ERC20_lvl0 := alloc__allowed_ERC20_lvl0;
[L2277]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L2278]               __tmp__sum__allowed1 := sum__allowed1;
[L2279]               __tmp__M_Ref_bool := M_Ref_bool;
[L2280]               __tmp__alloc_decidedOwner_ITAMToken_lvl0 := alloc_decidedOwner_ITAMToken_lvl0;
[L2281]               __tmp__sum_decidedOwner2 := sum_decidedOwner2;
[L2282]               __tmp__sum_blackLists3 := sum_blackLists3;
[L2283]               __tmp__alloc_items_ITAMToken_lvl1 := alloc_items_ITAMToken_lvl1;
[L2284]               __tmp__M_int_Ref := M_int_Ref;
[L2285]               __tmp__alloc_items_ITAMToken_lvl0 := alloc_items_ITAMToken_lvl0;
[L2286]               __tmp__sum_items10 := sum_items10;
[L2287]               __tmp__M_int_int := M_int_int;
[L2288]               __tmp__sum_strategicSaleReleaseCaps4 := sum_strategicSaleReleaseCaps4;
[L2289]               __tmp__sum_privateSaleReleaseCaps5 := sum_privateSaleReleaseCaps5;
[L2290]               __tmp__sum_teamReleaseCaps6 := sum_teamReleaseCaps6;
[L2291]               __tmp__sum_advisorReleaseCaps7 := sum_advisorReleaseCaps7;
[L2292]               __tmp__sum_marketingReleaseCaps8 := sum_marketingReleaseCaps8;
[L2293]               __tmp__sum_ecoReleaseCaps9 := sum_ecoReleaseCaps9;
[L2294]               __tmp__sum := sum;
[L2295]               __tmp__Length := Length;
[L2296]               __tmp__now := now;
[L2297]               __tmp___balances_ERC20 := _balances_ERC20;
[L2298]               __tmp___allowed_ERC20 := _allowed_ERC20;
[L2299]               __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L2300]               __tmp___cap_ERC20Capped := _cap_ERC20Capped;
[L2301]               __tmp__name_ITAMToken := name_ITAMToken;
[L2302]               __tmp__symbol_ITAMToken := symbol_ITAMToken;
[L2303]               __tmp__decimals_ITAMToken := decimals_ITAMToken;
[L2304]               __tmp__TOTAL_CAP_ITAMToken := TOTAL_CAP_ITAMToken;
[L2305]               __tmp__firstMaster_ITAMToken := firstMaster_ITAMToken;
[L2306]               __tmp__secondMaster_ITAMToken := secondMaster_ITAMToken;
[L2307]               __tmp__thirdMaster_ITAMToken := thirdMaster_ITAMToken;
[L2308]               __tmp__decidedOwner_ITAMToken := decidedOwner_ITAMToken;
[L2309]               __tmp__owner_ITAMToken := owner_ITAMToken;
[L2310]               __tmp__gameMaster_ITAMToken := gameMaster_ITAMToken;
[L2311]               __tmp__blackLists_ITAMToken := blackLists_ITAMToken;
[L2312]               __tmp__unlockCount_ITAMToken := unlockCount_ITAMToken;
[L2313]               __tmp__strategicSaleAddress_ITAMToken := strategicSaleAddress_ITAMToken;
[L2314]               __tmp__Length_strategicSaleReleaseCaps_ITAMToken_lvl0 := Length_strategicSaleReleaseCaps_ITAMToken_lvl0;
[L2315]               __tmp__strategicSaleReleaseCaps_ITAMToken := strategicSaleReleaseCaps_ITAMToken;
[L2316]               __tmp__privateSaleAddress_ITAMToken := privateSaleAddress_ITAMToken;
[L2317]               __tmp__Length_privateSaleReleaseCaps_ITAMToken_lvl0 := Length_privateSaleReleaseCaps_ITAMToken_lvl0;
[L2318]               __tmp__privateSaleReleaseCaps_ITAMToken := privateSaleReleaseCaps_ITAMToken;
[L2319]               __tmp__publicSaleAddress_ITAMToken := publicSaleAddress_ITAMToken;
[L2320]               __tmp__publicSaleReleaseCap_ITAMToken := publicSaleReleaseCap_ITAMToken;
[L2321]               __tmp__teamAddress_ITAMToken := teamAddress_ITAMToken;
[L2322]               __tmp__Length_teamReleaseCaps_ITAMToken_lvl0 := Length_teamReleaseCaps_ITAMToken_lvl0;
[L2323]               __tmp__teamReleaseCaps_ITAMToken := teamReleaseCaps_ITAMToken;
[L2324]               __tmp__advisorAddress_ITAMToken := advisorAddress_ITAMToken;
[L2325]               __tmp__Length_advisorReleaseCaps_ITAMToken_lvl0 := Length_advisorReleaseCaps_ITAMToken_lvl0;
[L2326]               __tmp__advisorReleaseCaps_ITAMToken := advisorReleaseCaps_ITAMToken;
[L2327]               __tmp__marketingAddress_ITAMToken := marketingAddress_ITAMToken;
[L2328]               __tmp__Length_marketingReleaseCaps_ITAMToken_lvl0 := Length_marketingReleaseCaps_ITAMToken_lvl0;
[L2329]               __tmp__marketingReleaseCaps_ITAMToken := marketingReleaseCaps_ITAMToken;
[L2330]               __tmp__ecoAddress_ITAMToken := ecoAddress_ITAMToken;
[L2331]               __tmp__Length_ecoReleaseCaps_ITAMToken_lvl0 := Length_ecoReleaseCaps_ITAMToken_lvl0;
[L2332]               __tmp__ecoReleaseCaps_ITAMToken := ecoReleaseCaps_ITAMToken;
[L2333]               __tmp__inAppAddress_ITAMToken := inAppAddress_ITAMToken;
[L2334]               __tmp__erc20_ITAMToken := erc20_ITAMToken;
[L2335]               __tmp__items_ITAMToken := items_ITAMToken;
[L2336]   CALL        call __ret_0_ := transfer~address~uint256_ITAMToken__fail(this, msgsender_MSG, msgvalue_MSG, _to_s941, _value_s941);
[L10884]  CALL        call onlyNotBlackList_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L13796]  COND FALSE  !(!!__tmp__blackLists_ITAMToken[this][msgsender_MSG])
[L10884]  RET         call onlyNotBlackList_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L10885]  COND FALSE  !(revert)
[L10888]  COND TRUE   __tmp__DType[this] == ITAMToken
[L10889]  CALL        call __var_16 := transfer~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, _to_s941, _value_s941);
[L10182]  COND TRUE   __tmp__DType[this] == ITAMToken
[L10183]  CALL        call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s282, value_s282);
[L10375]              __var_2 := null;
[L10376]  COND FALSE  !(!(to_s382 != null))
[L10380]  CALL        call __var_3 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __tmp___balances_ERC20[this][from_s382], value_s382);
[L10005]  COND FALSE  !(!(b_s82 <= a_s82))
[L10009]              c_s82 := (a_s82 - b_s82) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L10010]              __ret_0_ := c_s82;
[L10380]  RET         call __var_3 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __tmp___balances_ERC20[this][from_s382], value_s382);
[L10381]  COND FALSE  !(revert)
[L10384]              __tmp__sum__balances0[this] := __tmp__sum__balances0[this] - __tmp___balances_ERC20[this][from_s382];
[L10385]              __tmp___balances_ERC20[this][from_s382] := __var_3;
[L10386]              __tmp__sum__balances0[this] := __tmp__sum__balances0[this] + __tmp___balances_ERC20[this][from_s382];
[L10387]  CALL        call __var_4 := add~uint256~uint256_SafeMath__fail(this, this, 0, __tmp___balances_ERC20[this][to_s382], value_s382);
[L10029]              c_s106 := (a_s106 + b_s106) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L10030]  COND FALSE  !(!(c_s106 >= a_s106))
[L10034]              __ret_0_ := c_s106;
[L10387]  RET         call __var_4 := add~uint256~uint256_SafeMath__fail(this, this, 0, __tmp___balances_ERC20[this][to_s382], value_s382);
[L10388]  COND FALSE  !(revert)
[L10391]              __tmp__sum__balances0[this] := __tmp__sum__balances0[this] - __tmp___balances_ERC20[this][to_s382];
[L10392]              __tmp___balances_ERC20[this][to_s382] := __var_4;
[L10393]              __tmp__sum__balances0[this] := __tmp__sum__balances0[this] + __tmp___balances_ERC20[this][to_s382];
[L10183]  RET         call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s282, value_s282);
[L10184]  COND FALSE  !(revert)
[L10200]              __ret_0_ := true;
[L10889]  RET         call __var_16 := transfer~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, _to_s941, _value_s941);
[L10890]  COND FALSE  !(revert)
[L10896]              __ret_0_ := __var_16;
[L2336]   RET         call __ret_0_ := transfer~address~uint256_ITAMToken__fail(this, msgsender_MSG, msgvalue_MSG, _to_s941, _value_s941);
[L2337]               assume revert || gas < 0;
[L14356]  RET         call __ret_0_transfer := transfer~address~uint256_ITAMToken(this, msgsender_MSG, msgvalue_MSG, _to_s941, _value_s941);
[L14673]  RET         call CorralChoice_ITAMToken(this);

Loop:
[L14673]  CALL        call CorralChoice_ITAMToken(this);
[L14239]              havoc msgsender_MSG;
[L14240]              havoc msgvalue_MSG;
[L14241]              havoc choice;
[L14242]              havoc _to_s941;
[L14243]              havoc _value_s941;
[L14244]              havoc __ret_0_transfer;
[L14245]              havoc spender_s980;
[L14246]              havoc value_s980;
[L14247]              havoc __ret_0_approve;
[L14248]              havoc _from_s962;
[L14249]              havoc _to_s962;
[L14250]              havoc _value_s962;
[L14251]              havoc __ret_0_transferFrom;
[L14252]              havoc __ret_0_totalSupply;
[L14253]              havoc owner_s247;
[L14254]              havoc __ret_0_balanceOf;
[L14255]              havoc owner_s263;
[L14256]              havoc spender_s263;
[L14257]              havoc __ret_0_allowance;
[L14258]              havoc cap_s528;
[L14259]              havoc __ret_0_cap;
[L14260]              havoc __ret_0_name;
[L14261]              havoc __ret_0_symbol;
[L14262]              havoc __ret_0_decimals;
[L14263]              havoc __ret_0_firstMaster;
[L14264]              havoc __ret_0_secondMaster;
[L14265]              havoc __ret_0_thirdMaster;
[L14266]              havoc arg1575_s0;
[L14267]              havoc arg1576_s0;
[L14268]              havoc __ret_0_decidedOwner;
[L14269]              havoc __ret_0_owner;
[L14270]              havoc __ret_0_gameMaster;
[L14271]              havoc arg1577_s0;
[L14272]              havoc __ret_0_blackLists;
[L14273]              havoc __ret_0_unlockCount;
[L14274]              havoc __ret_0_strategicSaleAddress;
[L14275]              havoc arg1578_s0;
[L14276]              havoc __ret_0_strategicSaleReleaseCaps;
[L14277]              havoc __ret_0_privateSaleAddress;
[L14278]              havoc arg1579_s0;
[L14279]              havoc __ret_0_privateSaleReleaseCaps;
[L14280]              havoc __ret_0_publicSaleAddress;
[L14281]              havoc __ret_0_publicSaleReleaseCap;
[L14282]              havoc __ret_0_teamAddress;
[L14283]              havoc arg1580_s0;
[L14284]              havoc __ret_0_teamReleaseCaps;
[L14285]              havoc __ret_0_advisorAddress;
[L14286]              havoc arg1581_s0;
[L14287]              havoc __ret_0_advisorReleaseCaps;
[L14288]              havoc __ret_0_marketingAddress;
[L14289]              havoc arg1582_s0;
[L14290]              havoc __ret_0_marketingReleaseCaps;
[L14291]              havoc __ret_0_ecoAddress;
[L14292]              havoc arg1583_s0;
[L14293]              havoc __ret_0_ecoReleaseCaps;
[L14294]              havoc __ret_0_inAppAddress;
[L14295]              havoc _firstMaster_s868;
[L14296]              havoc _secondMaster_s868;
[L14297]              havoc _thirdMaster_s868;
[L14298]              havoc _owner_s868;
[L14299]              havoc _gameMaster_s868;
[L14300]              havoc _strategicSaleAddress_s868;
[L14301]              havoc _privateSaleAddress_s868;
[L14302]              havoc _publicSaleAddress_s868;
[L14303]              havoc _teamAddress_s868;
[L14304]              havoc _advisorAddress_s868;
[L14305]              havoc _marketingAddress_s868;
[L14306]              havoc _ecoAddress_s868;
[L14307]              havoc _inAppAddress_s868;
[L14308]              havoc _gameMaster_s923;
[L14309]              havoc value_s996;
[L14310]              havoc __ret_0_unlock;
[L14311]              havoc _strategicSaleAddress_s1169;
[L14312]              havoc _privateSaleAddress_s1169;
[L14313]              havoc _publicSaleAddress_s1169;
[L14314]              havoc _teamAddress_s1169;
[L14315]              havoc _advisorAddress_s1169;
[L14316]              havoc _marketingAddress_s1169;
[L14317]              havoc _ecoAddress_s1169;
[L14318]              havoc _inAppAddress_s1169;
[L14319]              havoc _owner_s1242;
[L14320]              havoc _to_s1264;
[L14321]              havoc _to_s1285;
[L14322]              havoc amount_s1321;
[L14323]              havoc appId_s1413;
[L14324]              havoc itemIds_s1413;
[L14325]              havoc tokenAddresses_s1413;
[L14326]              havoc values_s1413;
[L14327]              havoc __ret_0_createOrUpdateItem;
[L14328]              havoc tokenAddress_s1494;
[L14329]              havoc appId_s1494;
[L14330]              havoc itemId_s1494;
[L14331]              havoc __ret_0_purchaseItemOnERC20;
[L14332]              havoc appId_s1531;
[L14333]              havoc itemId_s1531;
[L14334]              havoc __ret_0_purchaseItemOnITAM;
[L14335]              havoc appId_s1572;
[L14336]              havoc itemId_s1572;
[L14337]              havoc __ret_0_purchaseItemOnEther;
[L14338]              havoc tmpNow;
[L14339]              havoc gas;
[L14340]              assume gas > 4000000 && gas <= 8000000;
[L14341]              tmpNow := now;
[L14342]              havoc now;
[L14343]              assume now > tmpNow;
[L14344]              assume msgsender_MSG != null;
[L14345]              assume DType[msgsender_MSG] != SafeMath;
[L14346]              assume DType[msgsender_MSG] != IERC20;
[L14347]              assume DType[msgsender_MSG] != ERC20;
[L14348]              assume DType[msgsender_MSG] != ERC20Capped;
[L14349]              assume DType[msgsender_MSG] != ITAMToken;
[L14350]              Alloc[msgsender_MSG] := true;
[L14351]  COND TRUE   choice == 45
[L14352]              gas := gas - 21000;
[L14353]  COND TRUE   gas >= 0
[L14354]              assume _value_s941 >= 0 && _value_s941 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L14355]              assume msgvalue_MSG == 0;
[L14356]  CALL        call __ret_0_transfer := transfer~address~uint256_ITAMToken(this, msgsender_MSG, msgvalue_MSG, _to_s941, _value_s941);
[L2]                  revert_hold := revert;
[L2]                  revert := false;
[L2]                  assume ((((((msgsender_MSG == _to_s941 && _value_s941 <= _balances_ERC20[this][msgsender_MSG]) && _value_s941 >= 0) && _value_s941 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][_to_s941] >= 0) && _balances_ERC20[this][_to_s941] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                  call_transfer_ITAMToken0 := true;
[L2]                  call_transfer_ITAMToken0 := false;
[L2]                  revert := revert_hold;
[L2267]               havoc __exception;
[L2268]               revert := false;
[L2269]   COND TRUE   __exception
[L2270]               __tmp__Balance := Balance;
[L2271]               __tmp__DType := DType;
[L2272]               __tmp__Alloc := Alloc;
[L2273]               __tmp__balance_ADDR := balance_ADDR;
[L2274]               __tmp__M_Ref_int := M_Ref_int;
[L2275]               __tmp__sum__balances0 := sum__balances0;
[L2276]               __tmp__alloc__allowed_ERC20_lvl0 := alloc__allowed_ERC20_lvl0;
[L2277]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L2278]               __tmp__sum__allowed1 := sum__allowed1;
[L2279]               __tmp__M_Ref_bool := M_Ref_bool;
[L2280]               __tmp__alloc_decidedOwner_ITAMToken_lvl0 := alloc_decidedOwner_ITAMToken_lvl0;
[L2281]               __tmp__sum_decidedOwner2 := sum_decidedOwner2;
[L2282]               __tmp__sum_blackLists3 := sum_blackLists3;
[L2283]               __tmp__alloc_items_ITAMToken_lvl1 := alloc_items_ITAMToken_lvl1;
[L2284]               __tmp__M_int_Ref := M_int_Ref;
[L2285]               __tmp__alloc_items_ITAMToken_lvl0 := alloc_items_ITAMToken_lvl0;
[L2286]               __tmp__sum_items10 := sum_items10;
[L2287]               __tmp__M_int_int := M_int_int;
[L2288]               __tmp__sum_strategicSaleReleaseCaps4 := sum_strategicSaleReleaseCaps4;
[L2289]               __tmp__sum_privateSaleReleaseCaps5 := sum_privateSaleReleaseCaps5;
[L2290]               __tmp__sum_teamReleaseCaps6 := sum_teamReleaseCaps6;
[L2291]               __tmp__sum_advisorReleaseCaps7 := sum_advisorReleaseCaps7;
[L2292]               __tmp__sum_marketingReleaseCaps8 := sum_marketingReleaseCaps8;
[L2293]               __tmp__sum_ecoReleaseCaps9 := sum_ecoReleaseCaps9;
[L2294]               __tmp__sum := sum;
[L2295]               __tmp__Length := Length;
[L2296]               __tmp__now := now;
[L2297]               __tmp___balances_ERC20 := _balances_ERC20;
[L2298]               __tmp___allowed_ERC20 := _allowed_ERC20;
[L2299]               __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L2300]               __tmp___cap_ERC20Capped := _cap_ERC20Capped;
[L2301]               __tmp__name_ITAMToken := name_ITAMToken;
[L2302]               __tmp__symbol_ITAMToken := symbol_ITAMToken;
[L2303]               __tmp__decimals_ITAMToken := decimals_ITAMToken;
[L2304]               __tmp__TOTAL_CAP_ITAMToken := TOTAL_CAP_ITAMToken;
[L2305]               __tmp__firstMaster_ITAMToken := firstMaster_ITAMToken;
[L2306]               __tmp__secondMaster_ITAMToken := secondMaster_ITAMToken;
[L2307]               __tmp__thirdMaster_ITAMToken := thirdMaster_ITAMToken;
[L2308]               __tmp__decidedOwner_ITAMToken := decidedOwner_ITAMToken;
[L2309]               __tmp__owner_ITAMToken := owner_ITAMToken;
[L2310]               __tmp__gameMaster_ITAMToken := gameMaster_ITAMToken;
[L2311]               __tmp__blackLists_ITAMToken := blackLists_ITAMToken;
[L2312]               __tmp__unlockCount_ITAMToken := unlockCount_ITAMToken;
[L2313]               __tmp__strategicSaleAddress_ITAMToken := strategicSaleAddress_ITAMToken;
[L2314]               __tmp__Length_strategicSaleReleaseCaps_ITAMToken_lvl0 := Length_strategicSaleReleaseCaps_ITAMToken_lvl0;
[L2315]               __tmp__strategicSaleReleaseCaps_ITAMToken := strategicSaleReleaseCaps_ITAMToken;
[L2316]               __tmp__privateSaleAddress_ITAMToken := privateSaleAddress_ITAMToken;
[L2317]               __tmp__Length_privateSaleReleaseCaps_ITAMToken_lvl0 := Length_privateSaleReleaseCaps_ITAMToken_lvl0;
[L2318]               __tmp__privateSaleReleaseCaps_ITAMToken := privateSaleReleaseCaps_ITAMToken;
[L2319]               __tmp__publicSaleAddress_ITAMToken := publicSaleAddress_ITAMToken;
[L2320]               __tmp__publicSaleReleaseCap_ITAMToken := publicSaleReleaseCap_ITAMToken;
[L2321]               __tmp__teamAddress_ITAMToken := teamAddress_ITAMToken;
[L2322]               __tmp__Length_teamReleaseCaps_ITAMToken_lvl0 := Length_teamReleaseCaps_ITAMToken_lvl0;
[L2323]               __tmp__teamReleaseCaps_ITAMToken := teamReleaseCaps_ITAMToken;
[L2324]               __tmp__advisorAddress_ITAMToken := advisorAddress_ITAMToken;
[L2325]               __tmp__Length_advisorReleaseCaps_ITAMToken_lvl0 := Length_advisorReleaseCaps_ITAMToken_lvl0;
[L2326]               __tmp__advisorReleaseCaps_ITAMToken := advisorReleaseCaps_ITAMToken;
[L2327]               __tmp__marketingAddress_ITAMToken := marketingAddress_ITAMToken;
[L2328]               __tmp__Length_marketingReleaseCaps_ITAMToken_lvl0 := Length_marketingReleaseCaps_ITAMToken_lvl0;
[L2329]               __tmp__marketingReleaseCaps_ITAMToken := marketingReleaseCaps_ITAMToken;
[L2330]               __tmp__ecoAddress_ITAMToken := ecoAddress_ITAMToken;
[L2331]               __tmp__Length_ecoReleaseCaps_ITAMToken_lvl0 := Length_ecoReleaseCaps_ITAMToken_lvl0;
[L2332]               __tmp__ecoReleaseCaps_ITAMToken := ecoReleaseCaps_ITAMToken;
[L2333]               __tmp__inAppAddress_ITAMToken := inAppAddress_ITAMToken;
[L2334]               __tmp__erc20_ITAMToken := erc20_ITAMToken;
[L2335]               __tmp__items_ITAMToken := items_ITAMToken;
[L2336]   CALL        call __ret_0_ := transfer~address~uint256_ITAMToken__fail(this, msgsender_MSG, msgvalue_MSG, _to_s941, _value_s941);
[L10884]  CALL        call onlyNotBlackList_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L13796]  COND FALSE  !(!!__tmp__blackLists_ITAMToken[this][msgsender_MSG])
[L10884]  RET         call onlyNotBlackList_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L10885]  COND FALSE  !(revert)
[L10888]  COND TRUE   __tmp__DType[this] == ITAMToken
[L10889]  CALL        call __var_16 := transfer~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, _to_s941, _value_s941);
[L10182]  COND TRUE   __tmp__DType[this] == ITAMToken
[L10183]  CALL        call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s282, value_s282);
[L10375]              __var_2 := null;
[L10376]  COND FALSE  !(!(to_s382 != null))
[L10380]  CALL        call __var_3 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __tmp___balances_ERC20[this][from_s382], value_s382);
[L10005]  COND FALSE  !(!(b_s82 <= a_s82))
[L10009]              c_s82 := (a_s82 - b_s82) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L10010]              __ret_0_ := c_s82;
[L10380]  RET         call __var_3 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __tmp___balances_ERC20[this][from_s382], value_s382);
[L10381]  COND FALSE  !(revert)
[L10384]              __tmp__sum__balances0[this] := __tmp__sum__balances0[this] - __tmp___balances_ERC20[this][from_s382];
[L10385]              __tmp___balances_ERC20[this][from_s382] := __var_3;
[L10386]              __tmp__sum__balances0[this] := __tmp__sum__balances0[this] + __tmp___balances_ERC20[this][from_s382];
[L10387]  CALL        call __var_4 := add~uint256~uint256_SafeMath__fail(this, this, 0, __tmp___balances_ERC20[this][to_s382], value_s382);
[L10029]              c_s106 := (a_s106 + b_s106) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L10030]  COND FALSE  !(!(c_s106 >= a_s106))
[L10034]              __ret_0_ := c_s106;
[L10387]  RET         call __var_4 := add~uint256~uint256_SafeMath__fail(this, this, 0, __tmp___balances_ERC20[this][to_s382], value_s382);
[L10388]  COND FALSE  !(revert)
[L10391]              __tmp__sum__balances0[this] := __tmp__sum__balances0[this] - __tmp___balances_ERC20[this][to_s382];
[L10392]              __tmp___balances_ERC20[this][to_s382] := __var_4;
[L10393]              __tmp__sum__balances0[this] := __tmp__sum__balances0[this] + __tmp___balances_ERC20[this][to_s382];
[L10183]  RET         call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s282, value_s282);
[L10184]  COND FALSE  !(revert)
[L10200]              __ret_0_ := true;
[L10889]  RET         call __var_16 := transfer~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, _to_s941, _value_s941);
[L10890]  COND FALSE  !(revert)
[L10896]              __ret_0_ := __var_16;
[L2336]   RET         call __ret_0_ := transfer~address~uint256_ITAMToken__fail(this, msgsender_MSG, msgvalue_MSG, _to_s941, _value_s941);
[L2337]               assume revert || gas < 0;
[L14356]  RET         call __ret_0_transfer := transfer~address~uint256_ITAMToken(this, msgsender_MSG, msgvalue_MSG, _to_s941, _value_s941);
[L14673]  RET         call CorralChoice_ITAMToken(this);

[2020-11-25 18:36:39,851 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 18:36:39,851 INFO  L82        PathProgramCache]: Analyzing trace with hash -1282719856, now seen corresponding path program 1 times
[2020-11-25 18:36:39,851 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 18:36:39,868 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 18:36:39,920 INFO  L134       CoverageAnalysis]: Checked inductivity of 15 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 15 trivial. 0 not checked.
[2020-11-25 18:36:39,920 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 18:36:39,920 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [5] imperfect sequences [] total 5
[2020-11-25 18:36:39,920 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 18:36:39,921 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 5 interpolants.
[2020-11-25 18:36:39,921 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=7, Invalid=13, Unknown=0, NotChecked=0, Total=20
[2020-11-25 18:36:39,921 INFO  L87              Difference]: Start difference. First operand 20286 states and 23755 transitions. cyclomatic complexity: 3489 Second operand 5 states.
[2020-11-25 18:36:42,179 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 18:36:42,179 INFO  L93              Difference]: Finished difference Result 22694 states and 26847 transitions.
[2020-11-25 18:36:42,179 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 7 states. 
[2020-11-25 18:36:42,179 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 22694 states and 26847 transitions.
[2020-11-25 18:36:42,238 INFO  L131   ngComponentsAnalysis]: Automaton has 3 accepting balls. 48
[2020-11-25 18:36:42,292 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 22694 states to 18198 states and 21995 transitions.
[2020-11-25 18:36:42,293 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 758
[2020-11-25 18:36:42,293 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 758
[2020-11-25 18:36:42,293 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 18198 states and 21995 transitions.
[2020-11-25 18:36:42,310 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 18:36:42,310 INFO  L728         BuchiCegarLoop]: Abstraction has 18198 states and 21995 transitions.
[2020-11-25 18:36:42,318 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 18198 states and 21995 transitions.
[2020-11-25 18:36:42,387 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 18198 to 10564.
[2020-11-25 18:36:42,387 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 10564 states.
[2020-11-25 18:36:42,399 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 10564 states to 10564 states and 12203 transitions.
[2020-11-25 18:36:42,399 INFO  L751         BuchiCegarLoop]: Abstraction has 10564 states and 12203 transitions.
[2020-11-25 18:36:42,399 INFO  L631         BuchiCegarLoop]: Abstraction has 10564 states and 12203 transitions.
[2020-11-25 18:36:42,399 INFO  L445         BuchiCegarLoop]: ======== Iteration 10============
[2020-11-25 18:36:42,399 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 10564 states and 12203 transitions.
[2020-11-25 18:36:42,408 INFO  L131   ngComponentsAnalysis]: Automaton has 3 accepting balls. 12
[2020-11-25 18:36:42,408 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 18:36:42,408 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 18:36:42,409 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 18:36:42,409 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                  success_transfer_ITAMToken0 := false;
[L2]                  call_transfer_ITAMToken0 := false;
[L2]      CALL        call main();
[L14663]              assume null == 0;
[L14664]  CALL        call this := FreshRefGenerator__success();
[L9908]               havoc newRef;
[L9909]               assume Alloc[newRef] == false;
[L9910]               Alloc[newRef] := true;
[L9911]               assume newRef != null;
[L14664]  RET         call this := FreshRefGenerator__success();
[L14665]              assume now >= 0;
[L14666]              assume DType[this] == ITAMToken;
[L14667]              assume msgvalue_MSG == 0;
[L14668]              gas := gas - 53000;
[L14669]  CALL        call ITAMToken_ITAMToken(this, msgsender_MSG, msgvalue_MSG, _firstMaster_s868, _secondMaster_s868, _thirdMaster_s868, _owner_s868, _gameMaster_s868, _strategicSaleAddress_s868, _privateSaleAddress_s868, _publicSaleAddress_s868, _teamAddress_s868, _advisorAddress_s868, _marketingAddress_s868, _ecoAddress_s868, _inAppAddress_s868);
[L1968]               havoc __exception;
[L1969]               revert := false;
[L1970]   COND FALSE  !(__exception)
[L2040]   CALL        call ITAMToken_ITAMToken__success(this, msgsender_MSG, msgvalue_MSG, _firstMaster_s868, _secondMaster_s868, _thirdMaster_s868, _owner_s868, _gameMaster_s868, _strategicSaleAddress_s868, _privateSaleAddress_s868, _publicSaleAddress_s868, _teamAddress_s868, _advisorAddress_s868, _marketingAddress_s868, _ecoAddress_s868, _inAppAddress_s868);
[L10848]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L10138]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L10118]              assume msgsender_MSG != null;
[L10119]              Balance[this] := 0;
[L10120]              _balances_ERC20[this] := zeroRefintArr();
[L10121]              sum__balances0[this] := 0;
[L10122]              _allowed_ERC20[this] := zeroRefRefintArr();
[L10123]              sum__allowed1[this] := 0;
[L10124]              _totalSupply_ERC20[this] := 0;
[L10138]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L10139]  COND FALSE  !(revert)
[L10848]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L10849]  COND FALSE  !(revert)
[L10852]  CALL        call ERC20Capped_ERC20Capped__success(this, msgsender_MSG, msgvalue_MSG, TOTAL_CAP_ITAMToken[this]);
[L10602]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L10138]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L10118]              assume msgsender_MSG != null;
[L10119]              Balance[this] := 0;
[L10120]              _balances_ERC20[this] := zeroRefintArr();
[L10121]              sum__balances0[this] := 0;
[L10122]              _allowed_ERC20[this] := zeroRefRefintArr();
[L10123]              sum__allowed1[this] := 0;
[L10124]              _totalSupply_ERC20[this] := 0;
[L10138]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L10139]  COND FALSE  !(revert)
[L10602]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L10603]  COND FALSE  !(revert)
[L10606]  CALL        call ERC20Capped_ERC20Capped_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, cap_s528);
[L10577]              assume msgsender_MSG != null;
[L10578]              Balance[this] := 0;
[L10579]              _cap_ERC20Capped[this] := 0;
[L10581]  COND FALSE  !(!(cap_s528 > 0))
[L10585]              _cap_ERC20Capped[this] := cap_s528;
[L10606]  RET         call ERC20Capped_ERC20Capped_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, cap_s528);
[L10607]  COND FALSE  !(revert)
[L10852]  RET         call ERC20Capped_ERC20Capped__success(this, msgsender_MSG, msgvalue_MSG, TOTAL_CAP_ITAMToken[this]);
[L10853]  COND FALSE  !(revert)
[L10856]  CALL        call ITAMToken_ITAMToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, _firstMaster_s868, _secondMaster_s868, _thirdMaster_s868, _owner_s868, _gameMaster_s868, _strategicSaleAddress_s868, _privateSaleAddress_s868, _publicSaleAddress_s868, _teamAddress_s868, _advisorAddress_s868, _marketingAddress_s868, _ecoAddress_s868, _inAppAddress_s868);
[L10771]              assume msgsender_MSG != null;
[L10772]              Balance[this] := 0;
[L10773]              name_ITAMToken[this] := -1908028786;
[L10774]              symbol_ITAMToken[this] := -1908028786;
[L10775]              decimals_ITAMToken[this] := 18;
[L10776]              TOTAL_CAP_ITAMToken[this] := 2500000000;
[L10777]              firstMaster_ITAMToken[this] := null;
[L10778]              secondMaster_ITAMToken[this] := null;
[L10779]              thirdMaster_ITAMToken[this] := null;
[L10780]              decidedOwner_ITAMToken[this] := zeroRefRefboolArr();
[L10781]              owner_ITAMToken[this] := null;
[L10782]              gameMaster_ITAMToken[this] := null;
[L10783]              blackLists_ITAMToken[this] := zeroRefboolArr();
[L10784]              unlockCount_ITAMToken[this] := 0;
[L10785]              strategicSaleAddress_ITAMToken[this] := null;
[L10786]              Length_strategicSaleReleaseCaps_ITAMToken_lvl0[this] := 0;
[L10787]              strategicSaleReleaseCaps_ITAMToken[this] := zerointintArr();
[L10788]              sum_strategicSaleReleaseCaps4[this] := 0;
[L10789]              privateSaleAddress_ITAMToken[this] := null;
[L10790]              Length_privateSaleReleaseCaps_ITAMToken_lvl0[this] := 0;
[L10791]              privateSaleReleaseCaps_ITAMToken[this] := zerointintArr();
[L10792]              sum_privateSaleReleaseCaps5[this] := 0;
[L10793]              publicSaleAddress_ITAMToken[this] := null;
[L10794]              publicSaleReleaseCap_ITAMToken[this] := 200000000;
[L10795]              teamAddress_ITAMToken[this] := null;
[L10796]              Length_teamReleaseCaps_ITAMToken_lvl0[this] := 0;
[L10797]              teamReleaseCaps_ITAMToken[this] := zerointintArr();
[L10798]              sum_teamReleaseCaps6[this] := 0;
[L10799]              advisorAddress_ITAMToken[this] := null;
[L10800]              Length_advisorReleaseCaps_ITAMToken_lvl0[this] := 0;
[L10801]              advisorReleaseCaps_ITAMToken[this] := zerointintArr();
[L10802]              sum_advisorReleaseCaps7[this] := 0;
[L10803]              marketingAddress_ITAMToken[this] := null;
[L10804]              Length_marketingReleaseCaps_ITAMToken_lvl0[this] := 0;
[L10805]              marketingReleaseCaps_ITAMToken[this] := zerointintArr();
[L10806]              sum_marketingReleaseCaps8[this] := 0;
[L10807]              ecoAddress_ITAMToken[this] := null;
[L10808]              Length_ecoReleaseCaps_ITAMToken_lvl0[this] := 0;
[L10809]              ecoReleaseCaps_ITAMToken[this] := zerointintArr();
[L10810]              sum_ecoReleaseCaps9[this] := 0;
[L10811]              inAppAddress_ITAMToken[this] := null;
[L10812]              items_ITAMToken[this] := zerointintRefintArr();
[L10813]              sum_items10[this] := 0;
[L10815]              firstMaster_ITAMToken[this] := _firstMaster_s868;
[L10816]              secondMaster_ITAMToken[this] := _secondMaster_s868;
[L10817]              thirdMaster_ITAMToken[this] := _thirdMaster_s868;
[L10818]              owner_ITAMToken[this] := _owner_s868;
[L10819]              gameMaster_ITAMToken[this] := _gameMaster_s868;
[L10820]              strategicSaleAddress_ITAMToken[this] := _strategicSaleAddress_s868;
[L10821]              privateSaleAddress_ITAMToken[this] := _privateSaleAddress_s868;
[L10822]              publicSaleAddress_ITAMToken[this] := _publicSaleAddress_s868;
[L10823]              teamAddress_ITAMToken[this] := _teamAddress_s868;
[L10824]              advisorAddress_ITAMToken[this] := _advisorAddress_s868;
[L10825]              marketingAddress_ITAMToken[this] := _marketingAddress_s868;
[L10826]              ecoAddress_ITAMToken[this] := _ecoAddress_s868;
[L10827]              inAppAddress_ITAMToken[this] := _inAppAddress_s868;
[L10856]  RET         call ITAMToken_ITAMToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, _firstMaster_s868, _secondMaster_s868, _thirdMaster_s868, _owner_s868, _gameMaster_s868, _strategicSaleAddress_s868, _privateSaleAddress_s868, _publicSaleAddress_s868, _teamAddress_s868, _advisorAddress_s868, _marketingAddress_s868, _ecoAddress_s868, _inAppAddress_s868);
[L10857]  COND FALSE  !(revert)
[L2040]   RET         call ITAMToken_ITAMToken__success(this, msgsender_MSG, msgvalue_MSG, _firstMaster_s868, _secondMaster_s868, _thirdMaster_s868, _owner_s868, _gameMaster_s868, _strategicSaleAddress_s868, _privateSaleAddress_s868, _publicSaleAddress_s868, _teamAddress_s868, _advisorAddress_s868, _marketingAddress_s868, _ecoAddress_s868, _inAppAddress_s868);
[L2041]               assume !revert && gas >= 0;
[L14669]  RET         call ITAMToken_ITAMToken(this, msgsender_MSG, msgvalue_MSG, _firstMaster_s868, _secondMaster_s868, _thirdMaster_s868, _owner_s868, _gameMaster_s868, _strategicSaleAddress_s868, _privateSaleAddress_s868, _publicSaleAddress_s868, _teamAddress_s868, _advisorAddress_s868, _marketingAddress_s868, _ecoAddress_s868, _inAppAddress_s868);
[L14670]              assume !revert && gas >= 0;
[L14673]  CALL        call CorralChoice_ITAMToken(this);
[L14239]              havoc msgsender_MSG;
[L14240]              havoc msgvalue_MSG;
[L14241]              havoc choice;
[L14242]              havoc _to_s941;
[L14243]              havoc _value_s941;
[L14244]              havoc __ret_0_transfer;
[L14245]              havoc spender_s980;
[L14246]              havoc value_s980;
[L14247]              havoc __ret_0_approve;
[L14248]              havoc _from_s962;
[L14249]              havoc _to_s962;
[L14250]              havoc _value_s962;
[L14251]              havoc __ret_0_transferFrom;
[L14252]              havoc __ret_0_totalSupply;
[L14253]              havoc owner_s247;
[L14254]              havoc __ret_0_balanceOf;
[L14255]              havoc owner_s263;
[L14256]              havoc spender_s263;
[L14257]              havoc __ret_0_allowance;
[L14258]              havoc cap_s528;
[L14259]              havoc __ret_0_cap;
[L14260]              havoc __ret_0_name;
[L14261]              havoc __ret_0_symbol;
[L14262]              havoc __ret_0_decimals;
[L14263]              havoc __ret_0_firstMaster;
[L14264]              havoc __ret_0_secondMaster;
[L14265]              havoc __ret_0_thirdMaster;
[L14266]              havoc arg1575_s0;
[L14267]              havoc arg1576_s0;
[L14268]              havoc __ret_0_decidedOwner;
[L14269]              havoc __ret_0_owner;
[L14270]              havoc __ret_0_gameMaster;
[L14271]              havoc arg1577_s0;
[L14272]              havoc __ret_0_blackLists;
[L14273]              havoc __ret_0_unlockCount;
[L14274]              havoc __ret_0_strategicSaleAddress;
[L14275]              havoc arg1578_s0;
[L14276]              havoc __ret_0_strategicSaleReleaseCaps;
[L14277]              havoc __ret_0_privateSaleAddress;
[L14278]              havoc arg1579_s0;
[L14279]              havoc __ret_0_privateSaleReleaseCaps;
[L14280]              havoc __ret_0_publicSaleAddress;
[L14281]              havoc __ret_0_publicSaleReleaseCap;
[L14282]              havoc __ret_0_teamAddress;
[L14283]              havoc arg1580_s0;
[L14284]              havoc __ret_0_teamReleaseCaps;
[L14285]              havoc __ret_0_advisorAddress;
[L14286]              havoc arg1581_s0;
[L14287]              havoc __ret_0_advisorReleaseCaps;
[L14288]              havoc __ret_0_marketingAddress;
[L14289]              havoc arg1582_s0;
[L14290]              havoc __ret_0_marketingReleaseCaps;
[L14291]              havoc __ret_0_ecoAddress;
[L14292]              havoc arg1583_s0;
[L14293]              havoc __ret_0_ecoReleaseCaps;
[L14294]              havoc __ret_0_inAppAddress;
[L14295]              havoc _firstMaster_s868;
[L14296]              havoc _secondMaster_s868;
[L14297]              havoc _thirdMaster_s868;
[L14298]              havoc _owner_s868;
[L14299]              havoc _gameMaster_s868;
[L14300]              havoc _strategicSaleAddress_s868;
[L14301]              havoc _privateSaleAddress_s868;
[L14302]              havoc _publicSaleAddress_s868;
[L14303]              havoc _teamAddress_s868;
[L14304]              havoc _advisorAddress_s868;
[L14305]              havoc _marketingAddress_s868;
[L14306]              havoc _ecoAddress_s868;
[L14307]              havoc _inAppAddress_s868;
[L14308]              havoc _gameMaster_s923;
[L14309]              havoc value_s996;
[L14310]              havoc __ret_0_unlock;
[L14311]              havoc _strategicSaleAddress_s1169;
[L14312]              havoc _privateSaleAddress_s1169;
[L14313]              havoc _publicSaleAddress_s1169;
[L14314]              havoc _teamAddress_s1169;
[L14315]              havoc _advisorAddress_s1169;
[L14316]              havoc _marketingAddress_s1169;
[L14317]              havoc _ecoAddress_s1169;
[L14318]              havoc _inAppAddress_s1169;
[L14319]              havoc _owner_s1242;
[L14320]              havoc _to_s1264;
[L14321]              havoc _to_s1285;
[L14322]              havoc amount_s1321;
[L14323]              havoc appId_s1413;
[L14324]              havoc itemIds_s1413;
[L14325]              havoc tokenAddresses_s1413;
[L14326]              havoc values_s1413;
[L14327]              havoc __ret_0_createOrUpdateItem;
[L14328]              havoc tokenAddress_s1494;
[L14329]              havoc appId_s1494;
[L14330]              havoc itemId_s1494;
[L14331]              havoc __ret_0_purchaseItemOnERC20;
[L14332]              havoc appId_s1531;
[L14333]              havoc itemId_s1531;
[L14334]              havoc __ret_0_purchaseItemOnITAM;
[L14335]              havoc appId_s1572;
[L14336]              havoc itemId_s1572;
[L14337]              havoc __ret_0_purchaseItemOnEther;
[L14338]              havoc tmpNow;
[L14339]              havoc gas;
[L14340]              assume gas > 4000000 && gas <= 8000000;
[L14341]              tmpNow := now;
[L14342]              havoc now;
[L14343]              assume now > tmpNow;
[L14344]              assume msgsender_MSG != null;
[L14345]              assume DType[msgsender_MSG] != SafeMath;
[L14346]              assume DType[msgsender_MSG] != IERC20;
[L14347]              assume DType[msgsender_MSG] != ERC20;
[L14348]              assume DType[msgsender_MSG] != ERC20Capped;
[L14349]              assume DType[msgsender_MSG] != ITAMToken;
[L14350]              Alloc[msgsender_MSG] := true;
[L14351]  COND TRUE   choice == 45
[L14352]              gas := gas - 21000;
[L14353]  COND TRUE   gas >= 0
[L14354]              assume _value_s941 >= 0 && _value_s941 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L14355]              assume msgvalue_MSG == 0;
[L14356]  CALL        call __ret_0_transfer := transfer~address~uint256_ITAMToken(this, msgsender_MSG, msgvalue_MSG, _to_s941, _value_s941);
[L2]                  revert_hold := revert;
[L2]                  revert := false;
[L2]                  assume !(((((((msgsender_MSG == _to_s941 && _value_s941 <= _balances_ERC20[this][msgsender_MSG]) && _value_s941 >= 0) && _value_s941 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][_to_s941] >= 0) && _balances_ERC20[this][_to_s941] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L2]                  revert := revert_hold;
[L2267]               havoc __exception;
[L2268]               revert := false;
[L2269]   COND FALSE  !(__exception)
[L2339]   CALL        call __ret_0_ := transfer~address~uint256_ITAMToken__success(this, msgsender_MSG, msgvalue_MSG, _to_s941, _value_s941);
[L10904]  CALL        call onlyNotBlackList_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L13804]  COND FALSE  !(!!blackLists_ITAMToken[this][msgsender_MSG])
[L10904]  RET         call onlyNotBlackList_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L10905]  COND FALSE  !(revert)
[L10908]  COND TRUE   DType[this] == ITAMToken
[L10909]  CALL        call __var_16 := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, _to_s941, _value_s941);
[L10206]  COND TRUE   DType[this] == ITAMToken
[L10207]  CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s282, value_s282);
[L10401]              __var_2 := null;
[L10402]  COND FALSE  !(!(to_s382 != null))
[L10406]  CALL        call __var_3 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][from_s382], value_s382);
[L10017]  COND FALSE  !(!(b_s82 <= a_s82))
[L10021]              c_s82 := (a_s82 - b_s82) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L10022]              __ret_0_ := c_s82;
[L10406]  RET         call __var_3 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][from_s382], value_s382);
[L10407]  COND FALSE  !(revert)
[L10410]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][from_s382];
[L10411]              _balances_ERC20[this][from_s382] := __var_3;
[L10412]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][from_s382];
[L10413]  CALL        call __var_4 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][to_s382], value_s382);
[L10041]              c_s106 := (a_s106 + b_s106) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L10042]  COND FALSE  !(!(c_s106 >= a_s106))
[L10046]              __ret_0_ := c_s106;
[L10413]  RET         call __var_4 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][to_s382], value_s382);
[L10414]  COND FALSE  !(revert)
[L10417]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][to_s382];
[L10418]              _balances_ERC20[this][to_s382] := __var_4;
[L10419]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][to_s382];
[L10420]              assert { :EventEmitted "Transfer_ERC20" } true;
[L10207]  RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s282, value_s282);
[L10208]  COND FALSE  !(revert)
[L10224]              __ret_0_ := true;
[L10909]  RET         call __var_16 := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, _to_s941, _value_s941);
[L10910]  COND FALSE  !(revert)
[L10916]              __ret_0_ := __var_16;
[L2339]   RET         call __ret_0_ := transfer~address~uint256_ITAMToken__success(this, msgsender_MSG, msgvalue_MSG, _to_s941, _value_s941);
[L2340]               assume !revert && gas >= 0;
[L2]                  revert_hold := revert;
[L2]                  revert := false;
[L2]                  assume !((((((((((((((((((((((((((((((((__ret_0_ == true && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _balances_ERC20[this] == old(_balances_ERC20[this])) && _allowed_ERC20[this] == old(_allowed_ERC20[this])) && name_ITAMToken[this] == old(name_ITAMToken[this])) && symbol_ITAMToken[this] == old(symbol_ITAMToken[this])) && decimals_ITAMToken[this] == old(decimals_ITAMToken[this])) && firstMaster_ITAMToken[this] == old(firstMaster_ITAMToken[this])) && secondMaster_ITAMToken[this] == old(secondMaster_ITAMToken[this])) && thirdMaster_ITAMToken[this] == old(thirdMaster_ITAMToken[this])) && decidedOwner_ITAMToken[this] == old(decidedOwner_ITAMToken[this])) && owner_ITAMToken[this] == old(owner_ITAMToken[this])) && gameMaster_ITAMToken[this] == old(gameMaster_ITAMToken[this])) && blackLists_ITAMToken[this] == old(blackLists_ITAMToken[this])) && unlockCount_ITAMToken[this] == old(unlockCount_ITAMToken[this])) && strategicSaleAddress_ITAMToken[this] == old(strategicSaleAddress_ITAMToken[this])) && strategicSaleReleaseCaps_ITAMToken[this] == old(strategicSaleReleaseCaps_ITAMToken[this])) && privateSaleAddress_ITAMToken[this] == old(privateSaleAddress_ITAMToken[this])) && privateSaleReleaseCaps_ITAMToken[this] == old(privateSaleReleaseCaps_ITAMToken[this])) && publicSaleAddress_ITAMToken[this] == old(publicSaleAddress_ITAMToken[this])) && publicSaleReleaseCap_ITAMToken[this] == old(publicSaleReleaseCap_ITAMToken[this])) && teamAddress_ITAMToken[this] == old(teamAddress_ITAMToken[this])) && teamReleaseCaps_ITAMToken[this] == old(teamReleaseCaps_ITAMToken[this])) && advisorAddress_ITAMToken[this] == old(advisorAddress_ITAMToken[this])) && advisorReleaseCaps_ITAMToken[this] == old(advisorReleaseCaps_ITAMToken[this])) && marketingAddress_ITAMToken[this] == old(marketingAddress_ITAMToken[this])) && marketingReleaseCaps_ITAMToken[this] == old(marketingReleaseCaps_ITAMToken[this])) && ecoAddress_ITAMToken[this] == old(ecoAddress_ITAMToken[this])) && ecoReleaseCaps_ITAMToken[this] == old(ecoReleaseCaps_ITAMToken[this])) && inAppAddress_ITAMToken[this] == old(inAppAddress_ITAMToken[this])) && erc20_ITAMToken[this] == old(erc20_ITAMToken[this])) && items_ITAMToken[this] == old(items_ITAMToken[this])) && _cap_ERC20Capped[this] == old(_cap_ERC20Capped[this]));
[L2]                  revert := revert_hold;
[L14356]  RET         call __ret_0_transfer := transfer~address~uint256_ITAMToken(this, msgsender_MSG, msgvalue_MSG, _to_s941, _value_s941);
[L14673]  RET         call CorralChoice_ITAMToken(this);
[L14673]  CALL        call CorralChoice_ITAMToken(this);
[L14239]              havoc msgsender_MSG;
[L14240]              havoc msgvalue_MSG;
[L14241]              havoc choice;
[L14242]              havoc _to_s941;
[L14243]              havoc _value_s941;
[L14244]              havoc __ret_0_transfer;
[L14245]              havoc spender_s980;
[L14246]              havoc value_s980;
[L14247]              havoc __ret_0_approve;
[L14248]              havoc _from_s962;
[L14249]              havoc _to_s962;
[L14250]              havoc _value_s962;
[L14251]              havoc __ret_0_transferFrom;
[L14252]              havoc __ret_0_totalSupply;
[L14253]              havoc owner_s247;
[L14254]              havoc __ret_0_balanceOf;
[L14255]              havoc owner_s263;
[L14256]              havoc spender_s263;
[L14257]              havoc __ret_0_allowance;
[L14258]              havoc cap_s528;
[L14259]              havoc __ret_0_cap;
[L14260]              havoc __ret_0_name;
[L14261]              havoc __ret_0_symbol;
[L14262]              havoc __ret_0_decimals;
[L14263]              havoc __ret_0_firstMaster;
[L14264]              havoc __ret_0_secondMaster;
[L14265]              havoc __ret_0_thirdMaster;
[L14266]              havoc arg1575_s0;
[L14267]              havoc arg1576_s0;
[L14268]              havoc __ret_0_decidedOwner;
[L14269]              havoc __ret_0_owner;
[L14270]              havoc __ret_0_gameMaster;
[L14271]              havoc arg1577_s0;
[L14272]              havoc __ret_0_blackLists;
[L14273]              havoc __ret_0_unlockCount;
[L14274]              havoc __ret_0_strategicSaleAddress;
[L14275]              havoc arg1578_s0;
[L14276]              havoc __ret_0_strategicSaleReleaseCaps;
[L14277]              havoc __ret_0_privateSaleAddress;
[L14278]              havoc arg1579_s0;
[L14279]              havoc __ret_0_privateSaleReleaseCaps;
[L14280]              havoc __ret_0_publicSaleAddress;
[L14281]              havoc __ret_0_publicSaleReleaseCap;
[L14282]              havoc __ret_0_teamAddress;
[L14283]              havoc arg1580_s0;
[L14284]              havoc __ret_0_teamReleaseCaps;
[L14285]              havoc __ret_0_advisorAddress;
[L14286]              havoc arg1581_s0;
[L14287]              havoc __ret_0_advisorReleaseCaps;
[L14288]              havoc __ret_0_marketingAddress;
[L14289]              havoc arg1582_s0;
[L14290]              havoc __ret_0_marketingReleaseCaps;
[L14291]              havoc __ret_0_ecoAddress;
[L14292]              havoc arg1583_s0;
[L14293]              havoc __ret_0_ecoReleaseCaps;
[L14294]              havoc __ret_0_inAppAddress;
[L14295]              havoc _firstMaster_s868;
[L14296]              havoc _secondMaster_s868;
[L14297]              havoc _thirdMaster_s868;
[L14298]              havoc _owner_s868;
[L14299]              havoc _gameMaster_s868;
[L14300]              havoc _strategicSaleAddress_s868;
[L14301]              havoc _privateSaleAddress_s868;
[L14302]              havoc _publicSaleAddress_s868;
[L14303]              havoc _teamAddress_s868;
[L14304]              havoc _advisorAddress_s868;
[L14305]              havoc _marketingAddress_s868;
[L14306]              havoc _ecoAddress_s868;
[L14307]              havoc _inAppAddress_s868;
[L14308]              havoc _gameMaster_s923;
[L14309]              havoc value_s996;
[L14310]              havoc __ret_0_unlock;
[L14311]              havoc _strategicSaleAddress_s1169;
[L14312]              havoc _privateSaleAddress_s1169;
[L14313]              havoc _publicSaleAddress_s1169;
[L14314]              havoc _teamAddress_s1169;
[L14315]              havoc _advisorAddress_s1169;
[L14316]              havoc _marketingAddress_s1169;
[L14317]              havoc _ecoAddress_s1169;
[L14318]              havoc _inAppAddress_s1169;
[L14319]              havoc _owner_s1242;
[L14320]              havoc _to_s1264;
[L14321]              havoc _to_s1285;
[L14322]              havoc amount_s1321;
[L14323]              havoc appId_s1413;
[L14324]              havoc itemIds_s1413;
[L14325]              havoc tokenAddresses_s1413;
[L14326]              havoc values_s1413;
[L14327]              havoc __ret_0_createOrUpdateItem;
[L14328]              havoc tokenAddress_s1494;
[L14329]              havoc appId_s1494;
[L14330]              havoc itemId_s1494;
[L14331]              havoc __ret_0_purchaseItemOnERC20;
[L14332]              havoc appId_s1531;
[L14333]              havoc itemId_s1531;
[L14334]              havoc __ret_0_purchaseItemOnITAM;
[L14335]              havoc appId_s1572;
[L14336]              havoc itemId_s1572;
[L14337]              havoc __ret_0_purchaseItemOnEther;
[L14338]              havoc tmpNow;
[L14339]              havoc gas;
[L14340]              assume gas > 4000000 && gas <= 8000000;
[L14341]              tmpNow := now;
[L14342]              havoc now;
[L14343]              assume now > tmpNow;
[L14344]              assume msgsender_MSG != null;
[L14345]              assume DType[msgsender_MSG] != SafeMath;
[L14346]              assume DType[msgsender_MSG] != IERC20;
[L14347]              assume DType[msgsender_MSG] != ERC20;
[L14348]              assume DType[msgsender_MSG] != ERC20Capped;
[L14349]              assume DType[msgsender_MSG] != ITAMToken;
[L14350]              Alloc[msgsender_MSG] := true;
[L14351]  COND TRUE   choice == 45
[L14352]              gas := gas - 21000;
[L14353]  COND TRUE   gas >= 0
[L14354]              assume _value_s941 >= 0 && _value_s941 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L14355]              assume msgvalue_MSG == 0;
[L14356]  CALL        call __ret_0_transfer := transfer~address~uint256_ITAMToken(this, msgsender_MSG, msgvalue_MSG, _to_s941, _value_s941);
[L2]                  revert_hold := revert;
[L2]                  revert := false;
[L2]                  assume ((((((msgsender_MSG == _to_s941 && _value_s941 <= _balances_ERC20[this][msgsender_MSG]) && _value_s941 >= 0) && _value_s941 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][_to_s941] >= 0) && _balances_ERC20[this][_to_s941] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                  call_transfer_ITAMToken0 := true;
[L2]                  call_transfer_ITAMToken0 := false;
[L2]                  revert := revert_hold;
[L2267]               havoc __exception;
[L2268]               revert := false;
[L2269]   COND FALSE  !(__exception)
[L2339]   CALL        call __ret_0_ := transfer~address~uint256_ITAMToken__success(this, msgsender_MSG, msgvalue_MSG, _to_s941, _value_s941);
[L10904]  CALL        call onlyNotBlackList_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L13804]  COND FALSE  !(!!blackLists_ITAMToken[this][msgsender_MSG])
[L10904]  RET         call onlyNotBlackList_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L10905]  COND FALSE  !(revert)
[L10908]  COND TRUE   DType[this] == ITAMToken
[L10909]  CALL        call __var_16 := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, _to_s941, _value_s941);
[L10206]  COND TRUE   DType[this] == ITAMToken
[L10207]  CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s282, value_s282);
[L10401]              __var_2 := null;
[L10402]  COND FALSE  !(!(to_s382 != null))
[L10406]  CALL        call __var_3 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][from_s382], value_s382);
[L10017]  COND FALSE  !(!(b_s82 <= a_s82))
[L10021]              c_s82 := (a_s82 - b_s82) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L10022]              __ret_0_ := c_s82;
[L10406]  RET         call __var_3 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][from_s382], value_s382);
[L10407]  COND FALSE  !(revert)
[L10410]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][from_s382];
[L10411]              _balances_ERC20[this][from_s382] := __var_3;
[L10412]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][from_s382];
[L10413]  CALL        call __var_4 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][to_s382], value_s382);
[L10041]              c_s106 := (a_s106 + b_s106) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L10042]  COND FALSE  !(!(c_s106 >= a_s106))
[L10046]              __ret_0_ := c_s106;
[L10413]  RET         call __var_4 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][to_s382], value_s382);
[L10414]  COND FALSE  !(revert)
[L10417]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][to_s382];
[L10418]              _balances_ERC20[this][to_s382] := __var_4;
[L10419]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][to_s382];
[L10420]              assert { :EventEmitted "Transfer_ERC20" } true;
[L10207]  RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s282, value_s282);
[L10208]  COND FALSE  !(revert)
[L10224]              __ret_0_ := true;
[L10909]  RET         call __var_16 := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, _to_s941, _value_s941);
[L10910]  COND FALSE  !(revert)
[L10916]              __ret_0_ := __var_16;
[L2339]   RET         call __ret_0_ := transfer~address~uint256_ITAMToken__success(this, msgsender_MSG, msgvalue_MSG, _to_s941, _value_s941);
[L2340]               assume !revert && gas >= 0;
[L2]                  revert_hold := revert;
[L2]                  revert := false;
[L2]                  assume !((((((((((((((((((((((((((((((((__ret_0_ == true && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _balances_ERC20[this] == old(_balances_ERC20[this])) && _allowed_ERC20[this] == old(_allowed_ERC20[this])) && name_ITAMToken[this] == old(name_ITAMToken[this])) && symbol_ITAMToken[this] == old(symbol_ITAMToken[this])) && decimals_ITAMToken[this] == old(decimals_ITAMToken[this])) && firstMaster_ITAMToken[this] == old(firstMaster_ITAMToken[this])) && secondMaster_ITAMToken[this] == old(secondMaster_ITAMToken[this])) && thirdMaster_ITAMToken[this] == old(thirdMaster_ITAMToken[this])) && decidedOwner_ITAMToken[this] == old(decidedOwner_ITAMToken[this])) && owner_ITAMToken[this] == old(owner_ITAMToken[this])) && gameMaster_ITAMToken[this] == old(gameMaster_ITAMToken[this])) && blackLists_ITAMToken[this] == old(blackLists_ITAMToken[this])) && unlockCount_ITAMToken[this] == old(unlockCount_ITAMToken[this])) && strategicSaleAddress_ITAMToken[this] == old(strategicSaleAddress_ITAMToken[this])) && strategicSaleReleaseCaps_ITAMToken[this] == old(strategicSaleReleaseCaps_ITAMToken[this])) && privateSaleAddress_ITAMToken[this] == old(privateSaleAddress_ITAMToken[this])) && privateSaleReleaseCaps_ITAMToken[this] == old(privateSaleReleaseCaps_ITAMToken[this])) && publicSaleAddress_ITAMToken[this] == old(publicSaleAddress_ITAMToken[this])) && publicSaleReleaseCap_ITAMToken[this] == old(publicSaleReleaseCap_ITAMToken[this])) && teamAddress_ITAMToken[this] == old(teamAddress_ITAMToken[this])) && teamReleaseCaps_ITAMToken[this] == old(teamReleaseCaps_ITAMToken[this])) && advisorAddress_ITAMToken[this] == old(advisorAddress_ITAMToken[this])) && advisorReleaseCaps_ITAMToken[this] == old(advisorReleaseCaps_ITAMToken[this])) && marketingAddress_ITAMToken[this] == old(marketingAddress_ITAMToken[this])) && marketingReleaseCaps_ITAMToken[this] == old(marketingReleaseCaps_ITAMToken[this])) && ecoAddress_ITAMToken[this] == old(ecoAddress_ITAMToken[this])) && ecoReleaseCaps_ITAMToken[this] == old(ecoReleaseCaps_ITAMToken[this])) && inAppAddress_ITAMToken[this] == old(inAppAddress_ITAMToken[this])) && erc20_ITAMToken[this] == old(erc20_ITAMToken[this])) && items_ITAMToken[this] == old(items_ITAMToken[this])) && _cap_ERC20Capped[this] == old(_cap_ERC20Capped[this]));
[L2]                  revert := revert_hold;
[L14356]  RET         call __ret_0_transfer := transfer~address~uint256_ITAMToken(this, msgsender_MSG, msgvalue_MSG, _to_s941, _value_s941);
[L14673]  RET         call CorralChoice_ITAMToken(this);

Loop:
[L14673]  CALL        call CorralChoice_ITAMToken(this);
[L14239]              havoc msgsender_MSG;
[L14240]              havoc msgvalue_MSG;
[L14241]              havoc choice;
[L14242]              havoc _to_s941;
[L14243]              havoc _value_s941;
[L14244]              havoc __ret_0_transfer;
[L14245]              havoc spender_s980;
[L14246]              havoc value_s980;
[L14247]              havoc __ret_0_approve;
[L14248]              havoc _from_s962;
[L14249]              havoc _to_s962;
[L14250]              havoc _value_s962;
[L14251]              havoc __ret_0_transferFrom;
[L14252]              havoc __ret_0_totalSupply;
[L14253]              havoc owner_s247;
[L14254]              havoc __ret_0_balanceOf;
[L14255]              havoc owner_s263;
[L14256]              havoc spender_s263;
[L14257]              havoc __ret_0_allowance;
[L14258]              havoc cap_s528;
[L14259]              havoc __ret_0_cap;
[L14260]              havoc __ret_0_name;
[L14261]              havoc __ret_0_symbol;
[L14262]              havoc __ret_0_decimals;
[L14263]              havoc __ret_0_firstMaster;
[L14264]              havoc __ret_0_secondMaster;
[L14265]              havoc __ret_0_thirdMaster;
[L14266]              havoc arg1575_s0;
[L14267]              havoc arg1576_s0;
[L14268]              havoc __ret_0_decidedOwner;
[L14269]              havoc __ret_0_owner;
[L14270]              havoc __ret_0_gameMaster;
[L14271]              havoc arg1577_s0;
[L14272]              havoc __ret_0_blackLists;
[L14273]              havoc __ret_0_unlockCount;
[L14274]              havoc __ret_0_strategicSaleAddress;
[L14275]              havoc arg1578_s0;
[L14276]              havoc __ret_0_strategicSaleReleaseCaps;
[L14277]              havoc __ret_0_privateSaleAddress;
[L14278]              havoc arg1579_s0;
[L14279]              havoc __ret_0_privateSaleReleaseCaps;
[L14280]              havoc __ret_0_publicSaleAddress;
[L14281]              havoc __ret_0_publicSaleReleaseCap;
[L14282]              havoc __ret_0_teamAddress;
[L14283]              havoc arg1580_s0;
[L14284]              havoc __ret_0_teamReleaseCaps;
[L14285]              havoc __ret_0_advisorAddress;
[L14286]              havoc arg1581_s0;
[L14287]              havoc __ret_0_advisorReleaseCaps;
[L14288]              havoc __ret_0_marketingAddress;
[L14289]              havoc arg1582_s0;
[L14290]              havoc __ret_0_marketingReleaseCaps;
[L14291]              havoc __ret_0_ecoAddress;
[L14292]              havoc arg1583_s0;
[L14293]              havoc __ret_0_ecoReleaseCaps;
[L14294]              havoc __ret_0_inAppAddress;
[L14295]              havoc _firstMaster_s868;
[L14296]              havoc _secondMaster_s868;
[L14297]              havoc _thirdMaster_s868;
[L14298]              havoc _owner_s868;
[L14299]              havoc _gameMaster_s868;
[L14300]              havoc _strategicSaleAddress_s868;
[L14301]              havoc _privateSaleAddress_s868;
[L14302]              havoc _publicSaleAddress_s868;
[L14303]              havoc _teamAddress_s868;
[L14304]              havoc _advisorAddress_s868;
[L14305]              havoc _marketingAddress_s868;
[L14306]              havoc _ecoAddress_s868;
[L14307]              havoc _inAppAddress_s868;
[L14308]              havoc _gameMaster_s923;
[L14309]              havoc value_s996;
[L14310]              havoc __ret_0_unlock;
[L14311]              havoc _strategicSaleAddress_s1169;
[L14312]              havoc _privateSaleAddress_s1169;
[L14313]              havoc _publicSaleAddress_s1169;
[L14314]              havoc _teamAddress_s1169;
[L14315]              havoc _advisorAddress_s1169;
[L14316]              havoc _marketingAddress_s1169;
[L14317]              havoc _ecoAddress_s1169;
[L14318]              havoc _inAppAddress_s1169;
[L14319]              havoc _owner_s1242;
[L14320]              havoc _to_s1264;
[L14321]              havoc _to_s1285;
[L14322]              havoc amount_s1321;
[L14323]              havoc appId_s1413;
[L14324]              havoc itemIds_s1413;
[L14325]              havoc tokenAddresses_s1413;
[L14326]              havoc values_s1413;
[L14327]              havoc __ret_0_createOrUpdateItem;
[L14328]              havoc tokenAddress_s1494;
[L14329]              havoc appId_s1494;
[L14330]              havoc itemId_s1494;
[L14331]              havoc __ret_0_purchaseItemOnERC20;
[L14332]              havoc appId_s1531;
[L14333]              havoc itemId_s1531;
[L14334]              havoc __ret_0_purchaseItemOnITAM;
[L14335]              havoc appId_s1572;
[L14336]              havoc itemId_s1572;
[L14337]              havoc __ret_0_purchaseItemOnEther;
[L14338]              havoc tmpNow;
[L14339]              havoc gas;
[L14340]              assume gas > 4000000 && gas <= 8000000;
[L14341]              tmpNow := now;
[L14342]              havoc now;
[L14343]              assume now > tmpNow;
[L14344]              assume msgsender_MSG != null;
[L14345]              assume DType[msgsender_MSG] != SafeMath;
[L14346]              assume DType[msgsender_MSG] != IERC20;
[L14347]              assume DType[msgsender_MSG] != ERC20;
[L14348]              assume DType[msgsender_MSG] != ERC20Capped;
[L14349]              assume DType[msgsender_MSG] != ITAMToken;
[L14350]              Alloc[msgsender_MSG] := true;
[L14351]  COND TRUE   choice == 45
[L14352]              gas := gas - 21000;
[L14353]  COND TRUE   gas >= 0
[L14354]              assume _value_s941 >= 0 && _value_s941 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L14355]              assume msgvalue_MSG == 0;
[L14356]  CALL        call __ret_0_transfer := transfer~address~uint256_ITAMToken(this, msgsender_MSG, msgvalue_MSG, _to_s941, _value_s941);
[L2]                  revert_hold := revert;
[L2]                  revert := false;
[L2]                  assume ((((((msgsender_MSG == _to_s941 && _value_s941 <= _balances_ERC20[this][msgsender_MSG]) && _value_s941 >= 0) && _value_s941 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][_to_s941] >= 0) && _balances_ERC20[this][_to_s941] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                  call_transfer_ITAMToken0 := true;
[L2]                  call_transfer_ITAMToken0 := false;
[L2]                  revert := revert_hold;
[L2267]               havoc __exception;
[L2268]               revert := false;
[L2269]   COND FALSE  !(__exception)
[L2339]   CALL        call __ret_0_ := transfer~address~uint256_ITAMToken__success(this, msgsender_MSG, msgvalue_MSG, _to_s941, _value_s941);
[L10904]  CALL        call onlyNotBlackList_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L13804]  COND FALSE  !(!!blackLists_ITAMToken[this][msgsender_MSG])
[L10904]  RET         call onlyNotBlackList_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L10905]  COND FALSE  !(revert)
[L10908]  COND TRUE   DType[this] == ITAMToken
[L10909]  CALL        call __var_16 := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, _to_s941, _value_s941);
[L10206]  COND TRUE   DType[this] == ITAMToken
[L10207]  CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s282, value_s282);
[L10401]              __var_2 := null;
[L10402]  COND FALSE  !(!(to_s382 != null))
[L10406]  CALL        call __var_3 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][from_s382], value_s382);
[L10017]  COND FALSE  !(!(b_s82 <= a_s82))
[L10021]              c_s82 := (a_s82 - b_s82) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L10022]              __ret_0_ := c_s82;
[L10406]  RET         call __var_3 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][from_s382], value_s382);
[L10407]  COND FALSE  !(revert)
[L10410]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][from_s382];
[L10411]              _balances_ERC20[this][from_s382] := __var_3;
[L10412]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][from_s382];
[L10413]  CALL        call __var_4 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][to_s382], value_s382);
[L10041]              c_s106 := (a_s106 + b_s106) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L10042]  COND FALSE  !(!(c_s106 >= a_s106))
[L10046]              __ret_0_ := c_s106;
[L10413]  RET         call __var_4 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][to_s382], value_s382);
[L10414]  COND FALSE  !(revert)
[L10417]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][to_s382];
[L10418]              _balances_ERC20[this][to_s382] := __var_4;
[L10419]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][to_s382];
[L10420]              assert { :EventEmitted "Transfer_ERC20" } true;
[L10207]  RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s282, value_s282);
[L10208]  COND FALSE  !(revert)
[L10224]              __ret_0_ := true;
[L10909]  RET         call __var_16 := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, _to_s941, _value_s941);
[L10910]  COND FALSE  !(revert)
[L10916]              __ret_0_ := __var_16;
[L2339]   RET         call __ret_0_ := transfer~address~uint256_ITAMToken__success(this, msgsender_MSG, msgvalue_MSG, _to_s941, _value_s941);
[L2340]               assume !revert && gas >= 0;
[L2]                  revert_hold := revert;
[L2]                  revert := false;
[L2]                  assume !((((((((((((((((((((((((((((((((__ret_0_ == true && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _balances_ERC20[this] == old(_balances_ERC20[this])) && _allowed_ERC20[this] == old(_allowed_ERC20[this])) && name_ITAMToken[this] == old(name_ITAMToken[this])) && symbol_ITAMToken[this] == old(symbol_ITAMToken[this])) && decimals_ITAMToken[this] == old(decimals_ITAMToken[this])) && firstMaster_ITAMToken[this] == old(firstMaster_ITAMToken[this])) && secondMaster_ITAMToken[this] == old(secondMaster_ITAMToken[this])) && thirdMaster_ITAMToken[this] == old(thirdMaster_ITAMToken[this])) && decidedOwner_ITAMToken[this] == old(decidedOwner_ITAMToken[this])) && owner_ITAMToken[this] == old(owner_ITAMToken[this])) && gameMaster_ITAMToken[this] == old(gameMaster_ITAMToken[this])) && blackLists_ITAMToken[this] == old(blackLists_ITAMToken[this])) && unlockCount_ITAMToken[this] == old(unlockCount_ITAMToken[this])) && strategicSaleAddress_ITAMToken[this] == old(strategicSaleAddress_ITAMToken[this])) && strategicSaleReleaseCaps_ITAMToken[this] == old(strategicSaleReleaseCaps_ITAMToken[this])) && privateSaleAddress_ITAMToken[this] == old(privateSaleAddress_ITAMToken[this])) && privateSaleReleaseCaps_ITAMToken[this] == old(privateSaleReleaseCaps_ITAMToken[this])) && publicSaleAddress_ITAMToken[this] == old(publicSaleAddress_ITAMToken[this])) && publicSaleReleaseCap_ITAMToken[this] == old(publicSaleReleaseCap_ITAMToken[this])) && teamAddress_ITAMToken[this] == old(teamAddress_ITAMToken[this])) && teamReleaseCaps_ITAMToken[this] == old(teamReleaseCaps_ITAMToken[this])) && advisorAddress_ITAMToken[this] == old(advisorAddress_ITAMToken[this])) && advisorReleaseCaps_ITAMToken[this] == old(advisorReleaseCaps_ITAMToken[this])) && marketingAddress_ITAMToken[this] == old(marketingAddress_ITAMToken[this])) && marketingReleaseCaps_ITAMToken[this] == old(marketingReleaseCaps_ITAMToken[this])) && ecoAddress_ITAMToken[this] == old(ecoAddress_ITAMToken[this])) && ecoReleaseCaps_ITAMToken[this] == old(ecoReleaseCaps_ITAMToken[this])) && inAppAddress_ITAMToken[this] == old(inAppAddress_ITAMToken[this])) && erc20_ITAMToken[this] == old(erc20_ITAMToken[this])) && items_ITAMToken[this] == old(items_ITAMToken[this])) && _cap_ERC20Capped[this] == old(_cap_ERC20Capped[this]));
[L2]                  revert := revert_hold;
[L14356]  RET         call __ret_0_transfer := transfer~address~uint256_ITAMToken(this, msgsender_MSG, msgvalue_MSG, _to_s941, _value_s941);
[L14673]  RET         call CorralChoice_ITAMToken(this);

[2020-11-25 18:36:42,414 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 18:36:42,414 INFO  L82        PathProgramCache]: Analyzing trace with hash 121293732, now seen corresponding path program 1 times
[2020-11-25 18:36:42,415 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 18:36:42,451 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 18:36:43,287 WARN  L188               SmtUtils]: Spent 123.00 ms on a formula simplification. DAG size of input: 59 DAG size of output: 29
[2020-11-25 18:36:43,861 INFO  L134       CoverageAnalysis]: Checked inductivity of 139 backedges. 10 proven. 13 refuted. 0 times theorem prover too weak. 116 trivial. 0 not checked.
[2020-11-25 18:36:43,861 INFO  L312   seRefinementStrategy]: Constructing automaton from 0 perfect and 1 imperfect interpolant sequences.
[2020-11-25 18:36:43,861 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [] imperfect sequences [43] total 43
[2020-11-25 18:36:43,862 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 18:36:43,862 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 44 interpolants.
[2020-11-25 18:36:43,862 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=138, Invalid=1754, Unknown=0, NotChecked=0, Total=1892
[2020-11-25 18:36:43,862 INFO  L87              Difference]: Start difference. First operand 10564 states and 12203 transitions. cyclomatic complexity: 1654 Second operand 44 states.
[2020-11-25 18:37:12,673 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 18:37:12,673 INFO  L93              Difference]: Finished difference Result 10644 states and 12523 transitions.
[2020-11-25 18:37:12,673 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 36 states. 
[2020-11-25 18:37:12,673 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 10644 states and 12523 transitions.
[2020-11-25 18:37:12,695 INFO  L131   ngComponentsAnalysis]: Automaton has 7 accepting balls. 28
[2020-11-25 18:37:12,720 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 10644 states to 10644 states and 12523 transitions.
[2020-11-25 18:37:12,720 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 414
[2020-11-25 18:37:12,721 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 414
[2020-11-25 18:37:12,721 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 10644 states and 12523 transitions.
[2020-11-25 18:37:12,727 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 18:37:12,727 INFO  L728         BuchiCegarLoop]: Abstraction has 10644 states and 12523 transitions.
[2020-11-25 18:37:12,734 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 10644 states and 12523 transitions.
[2020-11-25 18:37:12,774 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 10644 to 10589.
[2020-11-25 18:37:12,774 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 10589 states.
[2020-11-25 18:37:12,787 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 10589 states to 10589 states and 12322 transitions.
[2020-11-25 18:37:12,787 INFO  L751         BuchiCegarLoop]: Abstraction has 10589 states and 12322 transitions.
[2020-11-25 18:37:12,787 INFO  L631         BuchiCegarLoop]: Abstraction has 10589 states and 12322 transitions.
[2020-11-25 18:37:12,787 INFO  L445         BuchiCegarLoop]: ======== Iteration 11============
[2020-11-25 18:37:12,787 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 10589 states and 12322 transitions.
[2020-11-25 18:37:12,796 INFO  L131   ngComponentsAnalysis]: Automaton has 5 accepting balls. 20
[2020-11-25 18:37:12,796 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 18:37:12,796 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 18:37:12,798 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 18:37:12,798 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                  success_transfer_ITAMToken0 := false;
[L2]                  call_transfer_ITAMToken0 := false;
[L2]      CALL        call main();
[L14663]              assume null == 0;
[L14664]  CALL        call this := FreshRefGenerator__success();
[L9908]               havoc newRef;
[L9909]               assume Alloc[newRef] == false;
[L9910]               Alloc[newRef] := true;
[L9911]               assume newRef != null;
[L14664]  RET         call this := FreshRefGenerator__success();
[L14665]              assume now >= 0;
[L14666]              assume DType[this] == ITAMToken;
[L14667]              assume msgvalue_MSG == 0;
[L14668]              gas := gas - 53000;
[L14669]  CALL        call ITAMToken_ITAMToken(this, msgsender_MSG, msgvalue_MSG, _firstMaster_s868, _secondMaster_s868, _thirdMaster_s868, _owner_s868, _gameMaster_s868, _strategicSaleAddress_s868, _privateSaleAddress_s868, _publicSaleAddress_s868, _teamAddress_s868, _advisorAddress_s868, _marketingAddress_s868, _ecoAddress_s868, _inAppAddress_s868);
[L1968]               havoc __exception;
[L1969]               revert := false;
[L1970]   COND FALSE  !(__exception)
[L2040]   CALL        call ITAMToken_ITAMToken__success(this, msgsender_MSG, msgvalue_MSG, _firstMaster_s868, _secondMaster_s868, _thirdMaster_s868, _owner_s868, _gameMaster_s868, _strategicSaleAddress_s868, _privateSaleAddress_s868, _publicSaleAddress_s868, _teamAddress_s868, _advisorAddress_s868, _marketingAddress_s868, _ecoAddress_s868, _inAppAddress_s868);
[L10848]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L10138]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L10118]              assume msgsender_MSG != null;
[L10119]              Balance[this] := 0;
[L10120]              _balances_ERC20[this] := zeroRefintArr();
[L10121]              sum__balances0[this] := 0;
[L10122]              _allowed_ERC20[this] := zeroRefRefintArr();
[L10123]              sum__allowed1[this] := 0;
[L10124]              _totalSupply_ERC20[this] := 0;
[L10138]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L10139]  COND FALSE  !(revert)
[L10848]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L10849]  COND FALSE  !(revert)
[L10852]  CALL        call ERC20Capped_ERC20Capped__success(this, msgsender_MSG, msgvalue_MSG, TOTAL_CAP_ITAMToken[this]);
[L10602]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L10138]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L10118]              assume msgsender_MSG != null;
[L10119]              Balance[this] := 0;
[L10120]              _balances_ERC20[this] := zeroRefintArr();
[L10121]              sum__balances0[this] := 0;
[L10122]              _allowed_ERC20[this] := zeroRefRefintArr();
[L10123]              sum__allowed1[this] := 0;
[L10124]              _totalSupply_ERC20[this] := 0;
[L10138]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L10139]  COND FALSE  !(revert)
[L10602]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L10603]  COND FALSE  !(revert)
[L10606]  CALL        call ERC20Capped_ERC20Capped_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, cap_s528);
[L10577]              assume msgsender_MSG != null;
[L10578]              Balance[this] := 0;
[L10579]              _cap_ERC20Capped[this] := 0;
[L10581]  COND FALSE  !(!(cap_s528 > 0))
[L10585]              _cap_ERC20Capped[this] := cap_s528;
[L10606]  RET         call ERC20Capped_ERC20Capped_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, cap_s528);
[L10607]  COND FALSE  !(revert)
[L10852]  RET         call ERC20Capped_ERC20Capped__success(this, msgsender_MSG, msgvalue_MSG, TOTAL_CAP_ITAMToken[this]);
[L10853]  COND FALSE  !(revert)
[L10856]  CALL        call ITAMToken_ITAMToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, _firstMaster_s868, _secondMaster_s868, _thirdMaster_s868, _owner_s868, _gameMaster_s868, _strategicSaleAddress_s868, _privateSaleAddress_s868, _publicSaleAddress_s868, _teamAddress_s868, _advisorAddress_s868, _marketingAddress_s868, _ecoAddress_s868, _inAppAddress_s868);
[L10771]              assume msgsender_MSG != null;
[L10772]              Balance[this] := 0;
[L10773]              name_ITAMToken[this] := -1908028786;
[L10774]              symbol_ITAMToken[this] := -1908028786;
[L10775]              decimals_ITAMToken[this] := 18;
[L10776]              TOTAL_CAP_ITAMToken[this] := 2500000000;
[L10777]              firstMaster_ITAMToken[this] := null;
[L10778]              secondMaster_ITAMToken[this] := null;
[L10779]              thirdMaster_ITAMToken[this] := null;
[L10780]              decidedOwner_ITAMToken[this] := zeroRefRefboolArr();
[L10781]              owner_ITAMToken[this] := null;
[L10782]              gameMaster_ITAMToken[this] := null;
[L10783]              blackLists_ITAMToken[this] := zeroRefboolArr();
[L10784]              unlockCount_ITAMToken[this] := 0;
[L10785]              strategicSaleAddress_ITAMToken[this] := null;
[L10786]              Length_strategicSaleReleaseCaps_ITAMToken_lvl0[this] := 0;
[L10787]              strategicSaleReleaseCaps_ITAMToken[this] := zerointintArr();
[L10788]              sum_strategicSaleReleaseCaps4[this] := 0;
[L10789]              privateSaleAddress_ITAMToken[this] := null;
[L10790]              Length_privateSaleReleaseCaps_ITAMToken_lvl0[this] := 0;
[L10791]              privateSaleReleaseCaps_ITAMToken[this] := zerointintArr();
[L10792]              sum_privateSaleReleaseCaps5[this] := 0;
[L10793]              publicSaleAddress_ITAMToken[this] := null;
[L10794]              publicSaleReleaseCap_ITAMToken[this] := 200000000;
[L10795]              teamAddress_ITAMToken[this] := null;
[L10796]              Length_teamReleaseCaps_ITAMToken_lvl0[this] := 0;
[L10797]              teamReleaseCaps_ITAMToken[this] := zerointintArr();
[L10798]              sum_teamReleaseCaps6[this] := 0;
[L10799]              advisorAddress_ITAMToken[this] := null;
[L10800]              Length_advisorReleaseCaps_ITAMToken_lvl0[this] := 0;
[L10801]              advisorReleaseCaps_ITAMToken[this] := zerointintArr();
[L10802]              sum_advisorReleaseCaps7[this] := 0;
[L10803]              marketingAddress_ITAMToken[this] := null;
[L10804]              Length_marketingReleaseCaps_ITAMToken_lvl0[this] := 0;
[L10805]              marketingReleaseCaps_ITAMToken[this] := zerointintArr();
[L10806]              sum_marketingReleaseCaps8[this] := 0;
[L10807]              ecoAddress_ITAMToken[this] := null;
[L10808]              Length_ecoReleaseCaps_ITAMToken_lvl0[this] := 0;
[L10809]              ecoReleaseCaps_ITAMToken[this] := zerointintArr();
[L10810]              sum_ecoReleaseCaps9[this] := 0;
[L10811]              inAppAddress_ITAMToken[this] := null;
[L10812]              items_ITAMToken[this] := zerointintRefintArr();
[L10813]              sum_items10[this] := 0;
[L10815]              firstMaster_ITAMToken[this] := _firstMaster_s868;
[L10816]              secondMaster_ITAMToken[this] := _secondMaster_s868;
[L10817]              thirdMaster_ITAMToken[this] := _thirdMaster_s868;
[L10818]              owner_ITAMToken[this] := _owner_s868;
[L10819]              gameMaster_ITAMToken[this] := _gameMaster_s868;
[L10820]              strategicSaleAddress_ITAMToken[this] := _strategicSaleAddress_s868;
[L10821]              privateSaleAddress_ITAMToken[this] := _privateSaleAddress_s868;
[L10822]              publicSaleAddress_ITAMToken[this] := _publicSaleAddress_s868;
[L10823]              teamAddress_ITAMToken[this] := _teamAddress_s868;
[L10824]              advisorAddress_ITAMToken[this] := _advisorAddress_s868;
[L10825]              marketingAddress_ITAMToken[this] := _marketingAddress_s868;
[L10826]              ecoAddress_ITAMToken[this] := _ecoAddress_s868;
[L10827]              inAppAddress_ITAMToken[this] := _inAppAddress_s868;
[L10856]  RET         call ITAMToken_ITAMToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, _firstMaster_s868, _secondMaster_s868, _thirdMaster_s868, _owner_s868, _gameMaster_s868, _strategicSaleAddress_s868, _privateSaleAddress_s868, _publicSaleAddress_s868, _teamAddress_s868, _advisorAddress_s868, _marketingAddress_s868, _ecoAddress_s868, _inAppAddress_s868);
[L10857]  COND FALSE  !(revert)
[L2040]   RET         call ITAMToken_ITAMToken__success(this, msgsender_MSG, msgvalue_MSG, _firstMaster_s868, _secondMaster_s868, _thirdMaster_s868, _owner_s868, _gameMaster_s868, _strategicSaleAddress_s868, _privateSaleAddress_s868, _publicSaleAddress_s868, _teamAddress_s868, _advisorAddress_s868, _marketingAddress_s868, _ecoAddress_s868, _inAppAddress_s868);
[L2041]               assume !revert && gas >= 0;
[L14669]  RET         call ITAMToken_ITAMToken(this, msgsender_MSG, msgvalue_MSG, _firstMaster_s868, _secondMaster_s868, _thirdMaster_s868, _owner_s868, _gameMaster_s868, _strategicSaleAddress_s868, _privateSaleAddress_s868, _publicSaleAddress_s868, _teamAddress_s868, _advisorAddress_s868, _marketingAddress_s868, _ecoAddress_s868, _inAppAddress_s868);
[L14670]              assume !revert && gas >= 0;
[L14673]  CALL        call CorralChoice_ITAMToken(this);
[L14239]              havoc msgsender_MSG;
[L14240]              havoc msgvalue_MSG;
[L14241]              havoc choice;
[L14242]              havoc _to_s941;
[L14243]              havoc _value_s941;
[L14244]              havoc __ret_0_transfer;
[L14245]              havoc spender_s980;
[L14246]              havoc value_s980;
[L14247]              havoc __ret_0_approve;
[L14248]              havoc _from_s962;
[L14249]              havoc _to_s962;
[L14250]              havoc _value_s962;
[L14251]              havoc __ret_0_transferFrom;
[L14252]              havoc __ret_0_totalSupply;
[L14253]              havoc owner_s247;
[L14254]              havoc __ret_0_balanceOf;
[L14255]              havoc owner_s263;
[L14256]              havoc spender_s263;
[L14257]              havoc __ret_0_allowance;
[L14258]              havoc cap_s528;
[L14259]              havoc __ret_0_cap;
[L14260]              havoc __ret_0_name;
[L14261]              havoc __ret_0_symbol;
[L14262]              havoc __ret_0_decimals;
[L14263]              havoc __ret_0_firstMaster;
[L14264]              havoc __ret_0_secondMaster;
[L14265]              havoc __ret_0_thirdMaster;
[L14266]              havoc arg1575_s0;
[L14267]              havoc arg1576_s0;
[L14268]              havoc __ret_0_decidedOwner;
[L14269]              havoc __ret_0_owner;
[L14270]              havoc __ret_0_gameMaster;
[L14271]              havoc arg1577_s0;
[L14272]              havoc __ret_0_blackLists;
[L14273]              havoc __ret_0_unlockCount;
[L14274]              havoc __ret_0_strategicSaleAddress;
[L14275]              havoc arg1578_s0;
[L14276]              havoc __ret_0_strategicSaleReleaseCaps;
[L14277]              havoc __ret_0_privateSaleAddress;
[L14278]              havoc arg1579_s0;
[L14279]              havoc __ret_0_privateSaleReleaseCaps;
[L14280]              havoc __ret_0_publicSaleAddress;
[L14281]              havoc __ret_0_publicSaleReleaseCap;
[L14282]              havoc __ret_0_teamAddress;
[L14283]              havoc arg1580_s0;
[L14284]              havoc __ret_0_teamReleaseCaps;
[L14285]              havoc __ret_0_advisorAddress;
[L14286]              havoc arg1581_s0;
[L14287]              havoc __ret_0_advisorReleaseCaps;
[L14288]              havoc __ret_0_marketingAddress;
[L14289]              havoc arg1582_s0;
[L14290]              havoc __ret_0_marketingReleaseCaps;
[L14291]              havoc __ret_0_ecoAddress;
[L14292]              havoc arg1583_s0;
[L14293]              havoc __ret_0_ecoReleaseCaps;
[L14294]              havoc __ret_0_inAppAddress;
[L14295]              havoc _firstMaster_s868;
[L14296]              havoc _secondMaster_s868;
[L14297]              havoc _thirdMaster_s868;
[L14298]              havoc _owner_s868;
[L14299]              havoc _gameMaster_s868;
[L14300]              havoc _strategicSaleAddress_s868;
[L14301]              havoc _privateSaleAddress_s868;
[L14302]              havoc _publicSaleAddress_s868;
[L14303]              havoc _teamAddress_s868;
[L14304]              havoc _advisorAddress_s868;
[L14305]              havoc _marketingAddress_s868;
[L14306]              havoc _ecoAddress_s868;
[L14307]              havoc _inAppAddress_s868;
[L14308]              havoc _gameMaster_s923;
[L14309]              havoc value_s996;
[L14310]              havoc __ret_0_unlock;
[L14311]              havoc _strategicSaleAddress_s1169;
[L14312]              havoc _privateSaleAddress_s1169;
[L14313]              havoc _publicSaleAddress_s1169;
[L14314]              havoc _teamAddress_s1169;
[L14315]              havoc _advisorAddress_s1169;
[L14316]              havoc _marketingAddress_s1169;
[L14317]              havoc _ecoAddress_s1169;
[L14318]              havoc _inAppAddress_s1169;
[L14319]              havoc _owner_s1242;
[L14320]              havoc _to_s1264;
[L14321]              havoc _to_s1285;
[L14322]              havoc amount_s1321;
[L14323]              havoc appId_s1413;
[L14324]              havoc itemIds_s1413;
[L14325]              havoc tokenAddresses_s1413;
[L14326]              havoc values_s1413;
[L14327]              havoc __ret_0_createOrUpdateItem;
[L14328]              havoc tokenAddress_s1494;
[L14329]              havoc appId_s1494;
[L14330]              havoc itemId_s1494;
[L14331]              havoc __ret_0_purchaseItemOnERC20;
[L14332]              havoc appId_s1531;
[L14333]              havoc itemId_s1531;
[L14334]              havoc __ret_0_purchaseItemOnITAM;
[L14335]              havoc appId_s1572;
[L14336]              havoc itemId_s1572;
[L14337]              havoc __ret_0_purchaseItemOnEther;
[L14338]              havoc tmpNow;
[L14339]              havoc gas;
[L14340]              assume gas > 4000000 && gas <= 8000000;
[L14341]              tmpNow := now;
[L14342]              havoc now;
[L14343]              assume now > tmpNow;
[L14344]              assume msgsender_MSG != null;
[L14345]              assume DType[msgsender_MSG] != SafeMath;
[L14346]              assume DType[msgsender_MSG] != IERC20;
[L14347]              assume DType[msgsender_MSG] != ERC20;
[L14348]              assume DType[msgsender_MSG] != ERC20Capped;
[L14349]              assume DType[msgsender_MSG] != ITAMToken;
[L14350]              Alloc[msgsender_MSG] := true;
[L14351]  COND TRUE   choice == 45
[L14352]              gas := gas - 21000;
[L14353]  COND TRUE   gas >= 0
[L14354]              assume _value_s941 >= 0 && _value_s941 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L14355]              assume msgvalue_MSG == 0;
[L14356]  CALL        call __ret_0_transfer := transfer~address~uint256_ITAMToken(this, msgsender_MSG, msgvalue_MSG, _to_s941, _value_s941);
[L2]                  revert_hold := revert;
[L2]                  revert := false;
[L2]                  assume !(((((((msgsender_MSG == _to_s941 && _value_s941 <= _balances_ERC20[this][msgsender_MSG]) && _value_s941 >= 0) && _value_s941 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][_to_s941] >= 0) && _balances_ERC20[this][_to_s941] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L2]                  revert := revert_hold;
[L2267]               havoc __exception;
[L2268]               revert := false;
[L2269]   COND FALSE  !(__exception)
[L2339]   CALL        call __ret_0_ := transfer~address~uint256_ITAMToken__success(this, msgsender_MSG, msgvalue_MSG, _to_s941, _value_s941);
[L10904]  CALL        call onlyNotBlackList_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L13804]  COND FALSE  !(!!blackLists_ITAMToken[this][msgsender_MSG])
[L10904]  RET         call onlyNotBlackList_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L10905]  COND FALSE  !(revert)
[L10908]  COND TRUE   DType[this] == ITAMToken
[L10909]  CALL        call __var_16 := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, _to_s941, _value_s941);
[L10206]  COND TRUE   DType[this] == ITAMToken
[L10207]  CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s282, value_s282);
[L10401]              __var_2 := null;
[L10402]  COND FALSE  !(!(to_s382 != null))
[L10406]  CALL        call __var_3 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][from_s382], value_s382);
[L10017]  COND FALSE  !(!(b_s82 <= a_s82))
[L10021]              c_s82 := (a_s82 - b_s82) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L10022]              __ret_0_ := c_s82;
[L10406]  RET         call __var_3 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][from_s382], value_s382);
[L10407]  COND FALSE  !(revert)
[L10410]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][from_s382];
[L10411]              _balances_ERC20[this][from_s382] := __var_3;
[L10412]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][from_s382];
[L10413]  CALL        call __var_4 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][to_s382], value_s382);
[L10041]              c_s106 := (a_s106 + b_s106) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L10042]  COND FALSE  !(!(c_s106 >= a_s106))
[L10046]              __ret_0_ := c_s106;
[L10413]  RET         call __var_4 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][to_s382], value_s382);
[L10414]  COND FALSE  !(revert)
[L10417]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][to_s382];
[L10418]              _balances_ERC20[this][to_s382] := __var_4;
[L10419]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][to_s382];
[L10420]              assert { :EventEmitted "Transfer_ERC20" } true;
[L10207]  RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s282, value_s282);
[L10208]  COND FALSE  !(revert)
[L10224]              __ret_0_ := true;
[L10909]  RET         call __var_16 := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, _to_s941, _value_s941);
[L10910]  COND FALSE  !(revert)
[L10916]              __ret_0_ := __var_16;
[L2339]   RET         call __ret_0_ := transfer~address~uint256_ITAMToken__success(this, msgsender_MSG, msgvalue_MSG, _to_s941, _value_s941);
[L2340]               assume !revert && gas >= 0;
[L2]                  revert_hold := revert;
[L2]                  revert := false;
[L2]                  assume !((((((((((((((((((((((((((((((((__ret_0_ == true && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _balances_ERC20[this] == old(_balances_ERC20[this])) && _allowed_ERC20[this] == old(_allowed_ERC20[this])) && name_ITAMToken[this] == old(name_ITAMToken[this])) && symbol_ITAMToken[this] == old(symbol_ITAMToken[this])) && decimals_ITAMToken[this] == old(decimals_ITAMToken[this])) && firstMaster_ITAMToken[this] == old(firstMaster_ITAMToken[this])) && secondMaster_ITAMToken[this] == old(secondMaster_ITAMToken[this])) && thirdMaster_ITAMToken[this] == old(thirdMaster_ITAMToken[this])) && decidedOwner_ITAMToken[this] == old(decidedOwner_ITAMToken[this])) && owner_ITAMToken[this] == old(owner_ITAMToken[this])) && gameMaster_ITAMToken[this] == old(gameMaster_ITAMToken[this])) && blackLists_ITAMToken[this] == old(blackLists_ITAMToken[this])) && unlockCount_ITAMToken[this] == old(unlockCount_ITAMToken[this])) && strategicSaleAddress_ITAMToken[this] == old(strategicSaleAddress_ITAMToken[this])) && strategicSaleReleaseCaps_ITAMToken[this] == old(strategicSaleReleaseCaps_ITAMToken[this])) && privateSaleAddress_ITAMToken[this] == old(privateSaleAddress_ITAMToken[this])) && privateSaleReleaseCaps_ITAMToken[this] == old(privateSaleReleaseCaps_ITAMToken[this])) && publicSaleAddress_ITAMToken[this] == old(publicSaleAddress_ITAMToken[this])) && publicSaleReleaseCap_ITAMToken[this] == old(publicSaleReleaseCap_ITAMToken[this])) && teamAddress_ITAMToken[this] == old(teamAddress_ITAMToken[this])) && teamReleaseCaps_ITAMToken[this] == old(teamReleaseCaps_ITAMToken[this])) && advisorAddress_ITAMToken[this] == old(advisorAddress_ITAMToken[this])) && advisorReleaseCaps_ITAMToken[this] == old(advisorReleaseCaps_ITAMToken[this])) && marketingAddress_ITAMToken[this] == old(marketingAddress_ITAMToken[this])) && marketingReleaseCaps_ITAMToken[this] == old(marketingReleaseCaps_ITAMToken[this])) && ecoAddress_ITAMToken[this] == old(ecoAddress_ITAMToken[this])) && ecoReleaseCaps_ITAMToken[this] == old(ecoReleaseCaps_ITAMToken[this])) && inAppAddress_ITAMToken[this] == old(inAppAddress_ITAMToken[this])) && erc20_ITAMToken[this] == old(erc20_ITAMToken[this])) && items_ITAMToken[this] == old(items_ITAMToken[this])) && _cap_ERC20Capped[this] == old(_cap_ERC20Capped[this]));
[L2]                  revert := revert_hold;
[L14356]  RET         call __ret_0_transfer := transfer~address~uint256_ITAMToken(this, msgsender_MSG, msgvalue_MSG, _to_s941, _value_s941);
[L14673]  RET         call CorralChoice_ITAMToken(this);
[L14673]  CALL        call CorralChoice_ITAMToken(this);
[L14239]              havoc msgsender_MSG;
[L14240]              havoc msgvalue_MSG;
[L14241]              havoc choice;
[L14242]              havoc _to_s941;
[L14243]              havoc _value_s941;
[L14244]              havoc __ret_0_transfer;
[L14245]              havoc spender_s980;
[L14246]              havoc value_s980;
[L14247]              havoc __ret_0_approve;
[L14248]              havoc _from_s962;
[L14249]              havoc _to_s962;
[L14250]              havoc _value_s962;
[L14251]              havoc __ret_0_transferFrom;
[L14252]              havoc __ret_0_totalSupply;
[L14253]              havoc owner_s247;
[L14254]              havoc __ret_0_balanceOf;
[L14255]              havoc owner_s263;
[L14256]              havoc spender_s263;
[L14257]              havoc __ret_0_allowance;
[L14258]              havoc cap_s528;
[L14259]              havoc __ret_0_cap;
[L14260]              havoc __ret_0_name;
[L14261]              havoc __ret_0_symbol;
[L14262]              havoc __ret_0_decimals;
[L14263]              havoc __ret_0_firstMaster;
[L14264]              havoc __ret_0_secondMaster;
[L14265]              havoc __ret_0_thirdMaster;
[L14266]              havoc arg1575_s0;
[L14267]              havoc arg1576_s0;
[L14268]              havoc __ret_0_decidedOwner;
[L14269]              havoc __ret_0_owner;
[L14270]              havoc __ret_0_gameMaster;
[L14271]              havoc arg1577_s0;
[L14272]              havoc __ret_0_blackLists;
[L14273]              havoc __ret_0_unlockCount;
[L14274]              havoc __ret_0_strategicSaleAddress;
[L14275]              havoc arg1578_s0;
[L14276]              havoc __ret_0_strategicSaleReleaseCaps;
[L14277]              havoc __ret_0_privateSaleAddress;
[L14278]              havoc arg1579_s0;
[L14279]              havoc __ret_0_privateSaleReleaseCaps;
[L14280]              havoc __ret_0_publicSaleAddress;
[L14281]              havoc __ret_0_publicSaleReleaseCap;
[L14282]              havoc __ret_0_teamAddress;
[L14283]              havoc arg1580_s0;
[L14284]              havoc __ret_0_teamReleaseCaps;
[L14285]              havoc __ret_0_advisorAddress;
[L14286]              havoc arg1581_s0;
[L14287]              havoc __ret_0_advisorReleaseCaps;
[L14288]              havoc __ret_0_marketingAddress;
[L14289]              havoc arg1582_s0;
[L14290]              havoc __ret_0_marketingReleaseCaps;
[L14291]              havoc __ret_0_ecoAddress;
[L14292]              havoc arg1583_s0;
[L14293]              havoc __ret_0_ecoReleaseCaps;
[L14294]              havoc __ret_0_inAppAddress;
[L14295]              havoc _firstMaster_s868;
[L14296]              havoc _secondMaster_s868;
[L14297]              havoc _thirdMaster_s868;
[L14298]              havoc _owner_s868;
[L14299]              havoc _gameMaster_s868;
[L14300]              havoc _strategicSaleAddress_s868;
[L14301]              havoc _privateSaleAddress_s868;
[L14302]              havoc _publicSaleAddress_s868;
[L14303]              havoc _teamAddress_s868;
[L14304]              havoc _advisorAddress_s868;
[L14305]              havoc _marketingAddress_s868;
[L14306]              havoc _ecoAddress_s868;
[L14307]              havoc _inAppAddress_s868;
[L14308]              havoc _gameMaster_s923;
[L14309]              havoc value_s996;
[L14310]              havoc __ret_0_unlock;
[L14311]              havoc _strategicSaleAddress_s1169;
[L14312]              havoc _privateSaleAddress_s1169;
[L14313]              havoc _publicSaleAddress_s1169;
[L14314]              havoc _teamAddress_s1169;
[L14315]              havoc _advisorAddress_s1169;
[L14316]              havoc _marketingAddress_s1169;
[L14317]              havoc _ecoAddress_s1169;
[L14318]              havoc _inAppAddress_s1169;
[L14319]              havoc _owner_s1242;
[L14320]              havoc _to_s1264;
[L14321]              havoc _to_s1285;
[L14322]              havoc amount_s1321;
[L14323]              havoc appId_s1413;
[L14324]              havoc itemIds_s1413;
[L14325]              havoc tokenAddresses_s1413;
[L14326]              havoc values_s1413;
[L14327]              havoc __ret_0_createOrUpdateItem;
[L14328]              havoc tokenAddress_s1494;
[L14329]              havoc appId_s1494;
[L14330]              havoc itemId_s1494;
[L14331]              havoc __ret_0_purchaseItemOnERC20;
[L14332]              havoc appId_s1531;
[L14333]              havoc itemId_s1531;
[L14334]              havoc __ret_0_purchaseItemOnITAM;
[L14335]              havoc appId_s1572;
[L14336]              havoc itemId_s1572;
[L14337]              havoc __ret_0_purchaseItemOnEther;
[L14338]              havoc tmpNow;
[L14339]              havoc gas;
[L14340]              assume gas > 4000000 && gas <= 8000000;
[L14341]              tmpNow := now;
[L14342]              havoc now;
[L14343]              assume now > tmpNow;
[L14344]              assume msgsender_MSG != null;
[L14345]              assume DType[msgsender_MSG] != SafeMath;
[L14346]              assume DType[msgsender_MSG] != IERC20;
[L14347]              assume DType[msgsender_MSG] != ERC20;
[L14348]              assume DType[msgsender_MSG] != ERC20Capped;
[L14349]              assume DType[msgsender_MSG] != ITAMToken;
[L14350]              Alloc[msgsender_MSG] := true;
[L14351]  COND TRUE   choice == 45
[L14352]              gas := gas - 21000;
[L14353]  COND TRUE   gas >= 0
[L14354]              assume _value_s941 >= 0 && _value_s941 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L14355]              assume msgvalue_MSG == 0;
[L14356]  CALL        call __ret_0_transfer := transfer~address~uint256_ITAMToken(this, msgsender_MSG, msgvalue_MSG, _to_s941, _value_s941);
[L2]                  revert_hold := revert;
[L2]                  revert := false;
[L2]                  assume ((((((msgsender_MSG == _to_s941 && _value_s941 <= _balances_ERC20[this][msgsender_MSG]) && _value_s941 >= 0) && _value_s941 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][_to_s941] >= 0) && _balances_ERC20[this][_to_s941] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                  call_transfer_ITAMToken0 := true;
[L2]                  call_transfer_ITAMToken0 := false;
[L2]                  revert := revert_hold;
[L2267]               havoc __exception;
[L2268]               revert := false;
[L2269]   COND TRUE   __exception
[L2270]               __tmp__Balance := Balance;
[L2271]               __tmp__DType := DType;
[L2272]               __tmp__Alloc := Alloc;
[L2273]               __tmp__balance_ADDR := balance_ADDR;
[L2274]               __tmp__M_Ref_int := M_Ref_int;
[L2275]               __tmp__sum__balances0 := sum__balances0;
[L2276]               __tmp__alloc__allowed_ERC20_lvl0 := alloc__allowed_ERC20_lvl0;
[L2277]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L2278]               __tmp__sum__allowed1 := sum__allowed1;
[L2279]               __tmp__M_Ref_bool := M_Ref_bool;
[L2280]               __tmp__alloc_decidedOwner_ITAMToken_lvl0 := alloc_decidedOwner_ITAMToken_lvl0;
[L2281]               __tmp__sum_decidedOwner2 := sum_decidedOwner2;
[L2282]               __tmp__sum_blackLists3 := sum_blackLists3;
[L2283]               __tmp__alloc_items_ITAMToken_lvl1 := alloc_items_ITAMToken_lvl1;
[L2284]               __tmp__M_int_Ref := M_int_Ref;
[L2285]               __tmp__alloc_items_ITAMToken_lvl0 := alloc_items_ITAMToken_lvl0;
[L2286]               __tmp__sum_items10 := sum_items10;
[L2287]               __tmp__M_int_int := M_int_int;
[L2288]               __tmp__sum_strategicSaleReleaseCaps4 := sum_strategicSaleReleaseCaps4;
[L2289]               __tmp__sum_privateSaleReleaseCaps5 := sum_privateSaleReleaseCaps5;
[L2290]               __tmp__sum_teamReleaseCaps6 := sum_teamReleaseCaps6;
[L2291]               __tmp__sum_advisorReleaseCaps7 := sum_advisorReleaseCaps7;
[L2292]               __tmp__sum_marketingReleaseCaps8 := sum_marketingReleaseCaps8;
[L2293]               __tmp__sum_ecoReleaseCaps9 := sum_ecoReleaseCaps9;
[L2294]               __tmp__sum := sum;
[L2295]               __tmp__Length := Length;
[L2296]               __tmp__now := now;
[L2297]               __tmp___balances_ERC20 := _balances_ERC20;
[L2298]               __tmp___allowed_ERC20 := _allowed_ERC20;
[L2299]               __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L2300]               __tmp___cap_ERC20Capped := _cap_ERC20Capped;
[L2301]               __tmp__name_ITAMToken := name_ITAMToken;
[L2302]               __tmp__symbol_ITAMToken := symbol_ITAMToken;
[L2303]               __tmp__decimals_ITAMToken := decimals_ITAMToken;
[L2304]               __tmp__TOTAL_CAP_ITAMToken := TOTAL_CAP_ITAMToken;
[L2305]               __tmp__firstMaster_ITAMToken := firstMaster_ITAMToken;
[L2306]               __tmp__secondMaster_ITAMToken := secondMaster_ITAMToken;
[L2307]               __tmp__thirdMaster_ITAMToken := thirdMaster_ITAMToken;
[L2308]               __tmp__decidedOwner_ITAMToken := decidedOwner_ITAMToken;
[L2309]               __tmp__owner_ITAMToken := owner_ITAMToken;
[L2310]               __tmp__gameMaster_ITAMToken := gameMaster_ITAMToken;
[L2311]               __tmp__blackLists_ITAMToken := blackLists_ITAMToken;
[L2312]               __tmp__unlockCount_ITAMToken := unlockCount_ITAMToken;
[L2313]               __tmp__strategicSaleAddress_ITAMToken := strategicSaleAddress_ITAMToken;
[L2314]               __tmp__Length_strategicSaleReleaseCaps_ITAMToken_lvl0 := Length_strategicSaleReleaseCaps_ITAMToken_lvl0;
[L2315]               __tmp__strategicSaleReleaseCaps_ITAMToken := strategicSaleReleaseCaps_ITAMToken;
[L2316]               __tmp__privateSaleAddress_ITAMToken := privateSaleAddress_ITAMToken;
[L2317]               __tmp__Length_privateSaleReleaseCaps_ITAMToken_lvl0 := Length_privateSaleReleaseCaps_ITAMToken_lvl0;
[L2318]               __tmp__privateSaleReleaseCaps_ITAMToken := privateSaleReleaseCaps_ITAMToken;
[L2319]               __tmp__publicSaleAddress_ITAMToken := publicSaleAddress_ITAMToken;
[L2320]               __tmp__publicSaleReleaseCap_ITAMToken := publicSaleReleaseCap_ITAMToken;
[L2321]               __tmp__teamAddress_ITAMToken := teamAddress_ITAMToken;
[L2322]               __tmp__Length_teamReleaseCaps_ITAMToken_lvl0 := Length_teamReleaseCaps_ITAMToken_lvl0;
[L2323]               __tmp__teamReleaseCaps_ITAMToken := teamReleaseCaps_ITAMToken;
[L2324]               __tmp__advisorAddress_ITAMToken := advisorAddress_ITAMToken;
[L2325]               __tmp__Length_advisorReleaseCaps_ITAMToken_lvl0 := Length_advisorReleaseCaps_ITAMToken_lvl0;
[L2326]               __tmp__advisorReleaseCaps_ITAMToken := advisorReleaseCaps_ITAMToken;
[L2327]               __tmp__marketingAddress_ITAMToken := marketingAddress_ITAMToken;
[L2328]               __tmp__Length_marketingReleaseCaps_ITAMToken_lvl0 := Length_marketingReleaseCaps_ITAMToken_lvl0;
[L2329]               __tmp__marketingReleaseCaps_ITAMToken := marketingReleaseCaps_ITAMToken;
[L2330]               __tmp__ecoAddress_ITAMToken := ecoAddress_ITAMToken;
[L2331]               __tmp__Length_ecoReleaseCaps_ITAMToken_lvl0 := Length_ecoReleaseCaps_ITAMToken_lvl0;
[L2332]               __tmp__ecoReleaseCaps_ITAMToken := ecoReleaseCaps_ITAMToken;
[L2333]               __tmp__inAppAddress_ITAMToken := inAppAddress_ITAMToken;
[L2334]               __tmp__erc20_ITAMToken := erc20_ITAMToken;
[L2335]               __tmp__items_ITAMToken := items_ITAMToken;
[L2336]   CALL        call __ret_0_ := transfer~address~uint256_ITAMToken__fail(this, msgsender_MSG, msgvalue_MSG, _to_s941, _value_s941);
[L10884]  CALL        call onlyNotBlackList_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L13796]  COND FALSE  !(!!__tmp__blackLists_ITAMToken[this][msgsender_MSG])
[L10884]  RET         call onlyNotBlackList_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L10885]  COND FALSE  !(revert)
[L10888]  COND TRUE   __tmp__DType[this] == ITAMToken
[L10889]  CALL        call __var_16 := transfer~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, _to_s941, _value_s941);
[L10182]  COND TRUE   __tmp__DType[this] == ITAMToken
[L10183]  CALL        call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s282, value_s282);
[L10375]              __var_2 := null;
[L10376]  COND FALSE  !(!(to_s382 != null))
[L10380]  CALL        call __var_3 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __tmp___balances_ERC20[this][from_s382], value_s382);
[L10005]  COND FALSE  !(!(b_s82 <= a_s82))
[L10009]              c_s82 := (a_s82 - b_s82) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L10010]              __ret_0_ := c_s82;
[L10380]  RET         call __var_3 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __tmp___balances_ERC20[this][from_s382], value_s382);
[L10381]  COND FALSE  !(revert)
[L10384]              __tmp__sum__balances0[this] := __tmp__sum__balances0[this] - __tmp___balances_ERC20[this][from_s382];
[L10385]              __tmp___balances_ERC20[this][from_s382] := __var_3;
[L10386]              __tmp__sum__balances0[this] := __tmp__sum__balances0[this] + __tmp___balances_ERC20[this][from_s382];
[L10387]  CALL        call __var_4 := add~uint256~uint256_SafeMath__fail(this, this, 0, __tmp___balances_ERC20[this][to_s382], value_s382);
[L10029]              c_s106 := (a_s106 + b_s106) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L10030]  COND TRUE   !(c_s106 >= a_s106)
[L10031]              revert := true;
[L10387]  RET         call __var_4 := add~uint256~uint256_SafeMath__fail(this, this, 0, __tmp___balances_ERC20[this][to_s382], value_s382);
[L10388]  COND TRUE   revert
[L10183]  RET         call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s282, value_s282);
[L10184]  COND TRUE   revert
[L10889]  RET         call __var_16 := transfer~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, _to_s941, _value_s941);
[L10890]  COND TRUE   revert
[L2336]   RET         call __ret_0_ := transfer~address~uint256_ITAMToken__fail(this, msgsender_MSG, msgvalue_MSG, _to_s941, _value_s941);
[L2337]               assume revert || gas < 0;
[L14356]  RET         call __ret_0_transfer := transfer~address~uint256_ITAMToken(this, msgsender_MSG, msgvalue_MSG, _to_s941, _value_s941);
[L14673]  RET         call CorralChoice_ITAMToken(this);

Loop:
[L14673]  CALL        call CorralChoice_ITAMToken(this);
[L14239]              havoc msgsender_MSG;
[L14240]              havoc msgvalue_MSG;
[L14241]              havoc choice;
[L14242]              havoc _to_s941;
[L14243]              havoc _value_s941;
[L14244]              havoc __ret_0_transfer;
[L14245]              havoc spender_s980;
[L14246]              havoc value_s980;
[L14247]              havoc __ret_0_approve;
[L14248]              havoc _from_s962;
[L14249]              havoc _to_s962;
[L14250]              havoc _value_s962;
[L14251]              havoc __ret_0_transferFrom;
[L14252]              havoc __ret_0_totalSupply;
[L14253]              havoc owner_s247;
[L14254]              havoc __ret_0_balanceOf;
[L14255]              havoc owner_s263;
[L14256]              havoc spender_s263;
[L14257]              havoc __ret_0_allowance;
[L14258]              havoc cap_s528;
[L14259]              havoc __ret_0_cap;
[L14260]              havoc __ret_0_name;
[L14261]              havoc __ret_0_symbol;
[L14262]              havoc __ret_0_decimals;
[L14263]              havoc __ret_0_firstMaster;
[L14264]              havoc __ret_0_secondMaster;
[L14265]              havoc __ret_0_thirdMaster;
[L14266]              havoc arg1575_s0;
[L14267]              havoc arg1576_s0;
[L14268]              havoc __ret_0_decidedOwner;
[L14269]              havoc __ret_0_owner;
[L14270]              havoc __ret_0_gameMaster;
[L14271]              havoc arg1577_s0;
[L14272]              havoc __ret_0_blackLists;
[L14273]              havoc __ret_0_unlockCount;
[L14274]              havoc __ret_0_strategicSaleAddress;
[L14275]              havoc arg1578_s0;
[L14276]              havoc __ret_0_strategicSaleReleaseCaps;
[L14277]              havoc __ret_0_privateSaleAddress;
[L14278]              havoc arg1579_s0;
[L14279]              havoc __ret_0_privateSaleReleaseCaps;
[L14280]              havoc __ret_0_publicSaleAddress;
[L14281]              havoc __ret_0_publicSaleReleaseCap;
[L14282]              havoc __ret_0_teamAddress;
[L14283]              havoc arg1580_s0;
[L14284]              havoc __ret_0_teamReleaseCaps;
[L14285]              havoc __ret_0_advisorAddress;
[L14286]              havoc arg1581_s0;
[L14287]              havoc __ret_0_advisorReleaseCaps;
[L14288]              havoc __ret_0_marketingAddress;
[L14289]              havoc arg1582_s0;
[L14290]              havoc __ret_0_marketingReleaseCaps;
[L14291]              havoc __ret_0_ecoAddress;
[L14292]              havoc arg1583_s0;
[L14293]              havoc __ret_0_ecoReleaseCaps;
[L14294]              havoc __ret_0_inAppAddress;
[L14295]              havoc _firstMaster_s868;
[L14296]              havoc _secondMaster_s868;
[L14297]              havoc _thirdMaster_s868;
[L14298]              havoc _owner_s868;
[L14299]              havoc _gameMaster_s868;
[L14300]              havoc _strategicSaleAddress_s868;
[L14301]              havoc _privateSaleAddress_s868;
[L14302]              havoc _publicSaleAddress_s868;
[L14303]              havoc _teamAddress_s868;
[L14304]              havoc _advisorAddress_s868;
[L14305]              havoc _marketingAddress_s868;
[L14306]              havoc _ecoAddress_s868;
[L14307]              havoc _inAppAddress_s868;
[L14308]              havoc _gameMaster_s923;
[L14309]              havoc value_s996;
[L14310]              havoc __ret_0_unlock;
[L14311]              havoc _strategicSaleAddress_s1169;
[L14312]              havoc _privateSaleAddress_s1169;
[L14313]              havoc _publicSaleAddress_s1169;
[L14314]              havoc _teamAddress_s1169;
[L14315]              havoc _advisorAddress_s1169;
[L14316]              havoc _marketingAddress_s1169;
[L14317]              havoc _ecoAddress_s1169;
[L14318]              havoc _inAppAddress_s1169;
[L14319]              havoc _owner_s1242;
[L14320]              havoc _to_s1264;
[L14321]              havoc _to_s1285;
[L14322]              havoc amount_s1321;
[L14323]              havoc appId_s1413;
[L14324]              havoc itemIds_s1413;
[L14325]              havoc tokenAddresses_s1413;
[L14326]              havoc values_s1413;
[L14327]              havoc __ret_0_createOrUpdateItem;
[L14328]              havoc tokenAddress_s1494;
[L14329]              havoc appId_s1494;
[L14330]              havoc itemId_s1494;
[L14331]              havoc __ret_0_purchaseItemOnERC20;
[L14332]              havoc appId_s1531;
[L14333]              havoc itemId_s1531;
[L14334]              havoc __ret_0_purchaseItemOnITAM;
[L14335]              havoc appId_s1572;
[L14336]              havoc itemId_s1572;
[L14337]              havoc __ret_0_purchaseItemOnEther;
[L14338]              havoc tmpNow;
[L14339]              havoc gas;
[L14340]              assume gas > 4000000 && gas <= 8000000;
[L14341]              tmpNow := now;
[L14342]              havoc now;
[L14343]              assume now > tmpNow;
[L14344]              assume msgsender_MSG != null;
[L14345]              assume DType[msgsender_MSG] != SafeMath;
[L14346]              assume DType[msgsender_MSG] != IERC20;
[L14347]              assume DType[msgsender_MSG] != ERC20;
[L14348]              assume DType[msgsender_MSG] != ERC20Capped;
[L14349]              assume DType[msgsender_MSG] != ITAMToken;
[L14350]              Alloc[msgsender_MSG] := true;
[L14351]  COND FALSE  !(choice == 45)
[L14358]  COND FALSE  !(choice == 44)
[L14365]  COND FALSE  !(choice == 43)
[L14372]  COND FALSE  !(choice == 42)
[L14378]  COND FALSE  !(choice == 41)
[L14384]  COND FALSE  !(choice == 40)
[L14390]  COND FALSE  !(choice == 39)
[L14396]  COND FALSE  !(choice == 38)
[L14402]  COND FALSE  !(choice == 37)
[L14408]  COND FALSE  !(choice == 36)
[L14414]  COND FALSE  !(choice == 35)
[L14420]  COND FALSE  !(choice == 34)
[L14426]  COND FALSE  !(choice == 33)
[L14432]  COND FALSE  !(choice == 32)
[L14438]  COND FALSE  !(choice == 31)
[L14444]  COND FALSE  !(choice == 30)
[L14450]  COND FALSE  !(choice == 29)
[L14456]  COND FALSE  !(choice == 28)
[L14462]  COND FALSE  !(choice == 27)
[L14468]  COND FALSE  !(choice == 26)
[L14475]  COND FALSE  !(choice == 25)
[L14481]  COND FALSE  !(choice == 24)
[L14488]  COND FALSE  !(choice == 23)
[L14494]  COND FALSE  !(choice == 22)
[L14500]  COND FALSE  !(choice == 21)
[L14506]  COND FALSE  !(choice == 20)
[L14513]  COND FALSE  !(choice == 19)
[L14519]  COND FALSE  !(choice == 18)
[L14526]  COND FALSE  !(choice == 17)
[L14532]  COND FALSE  !(choice == 16)
[L14539]  COND FALSE  !(choice == 15)
[L14545]  COND FALSE  !(choice == 14)
[L14552]  COND FALSE  !(choice == 13)
[L14558]  COND TRUE   choice == 12
[L14559]              gas := gas - 21000;
[L14560]  COND TRUE   gas >= 0
[L14561]              assume msgvalue_MSG == 0;
[L14562]  CALL        call setGameMaster~address_ITAMToken(this, msgsender_MSG, msgvalue_MSG, _gameMaster_s923);
[L2117]               havoc __exception;
[L2118]               revert := false;
[L2119]   COND TRUE   __exception
[L2120]               __tmp__Balance := Balance;
[L2121]               __tmp__DType := DType;
[L2122]               __tmp__Alloc := Alloc;
[L2123]               __tmp__balance_ADDR := balance_ADDR;
[L2124]               __tmp__M_Ref_int := M_Ref_int;
[L2125]               __tmp__sum__balances0 := sum__balances0;
[L2126]               __tmp__alloc__allowed_ERC20_lvl0 := alloc__allowed_ERC20_lvl0;
[L2127]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L2128]               __tmp__sum__allowed1 := sum__allowed1;
[L2129]               __tmp__M_Ref_bool := M_Ref_bool;
[L2130]               __tmp__alloc_decidedOwner_ITAMToken_lvl0 := alloc_decidedOwner_ITAMToken_lvl0;
[L2131]               __tmp__sum_decidedOwner2 := sum_decidedOwner2;
[L2132]               __tmp__sum_blackLists3 := sum_blackLists3;
[L2133]               __tmp__alloc_items_ITAMToken_lvl1 := alloc_items_ITAMToken_lvl1;
[L2134]               __tmp__M_int_Ref := M_int_Ref;
[L2135]               __tmp__alloc_items_ITAMToken_lvl0 := alloc_items_ITAMToken_lvl0;
[L2136]               __tmp__sum_items10 := sum_items10;
[L2137]               __tmp__M_int_int := M_int_int;
[L2138]               __tmp__sum_strategicSaleReleaseCaps4 := sum_strategicSaleReleaseCaps4;
[L2139]               __tmp__sum_privateSaleReleaseCaps5 := sum_privateSaleReleaseCaps5;
[L2140]               __tmp__sum_teamReleaseCaps6 := sum_teamReleaseCaps6;
[L2141]               __tmp__sum_advisorReleaseCaps7 := sum_advisorReleaseCaps7;
[L2142]               __tmp__sum_marketingReleaseCaps8 := sum_marketingReleaseCaps8;
[L2143]               __tmp__sum_ecoReleaseCaps9 := sum_ecoReleaseCaps9;
[L2144]               __tmp__sum := sum;
[L2145]               __tmp__Length := Length;
[L2146]               __tmp__now := now;
[L2147]               __tmp___balances_ERC20 := _balances_ERC20;
[L2148]               __tmp___allowed_ERC20 := _allowed_ERC20;
[L2149]               __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L2150]               __tmp___cap_ERC20Capped := _cap_ERC20Capped;
[L2151]               __tmp__name_ITAMToken := name_ITAMToken;
[L2152]               __tmp__symbol_ITAMToken := symbol_ITAMToken;
[L2153]               __tmp__decimals_ITAMToken := decimals_ITAMToken;
[L2154]               __tmp__TOTAL_CAP_ITAMToken := TOTAL_CAP_ITAMToken;
[L2155]               __tmp__firstMaster_ITAMToken := firstMaster_ITAMToken;
[L2156]               __tmp__secondMaster_ITAMToken := secondMaster_ITAMToken;
[L2157]               __tmp__thirdMaster_ITAMToken := thirdMaster_ITAMToken;
[L2158]               __tmp__decidedOwner_ITAMToken := decidedOwner_ITAMToken;
[L2159]               __tmp__owner_ITAMToken := owner_ITAMToken;
[L2160]               __tmp__gameMaster_ITAMToken := gameMaster_ITAMToken;
[L2161]               __tmp__blackLists_ITAMToken := blackLists_ITAMToken;
[L2162]               __tmp__unlockCount_ITAMToken := unlockCount_ITAMToken;
[L2163]               __tmp__strategicSaleAddress_ITAMToken := strategicSaleAddress_ITAMToken;
[L2164]               __tmp__Length_strategicSaleReleaseCaps_ITAMToken_lvl0 := Length_strategicSaleReleaseCaps_ITAMToken_lvl0;
[L2165]               __tmp__strategicSaleReleaseCaps_ITAMToken := strategicSaleReleaseCaps_ITAMToken;
[L2166]               __tmp__privateSaleAddress_ITAMToken := privateSaleAddress_ITAMToken;
[L2167]               __tmp__Length_privateSaleReleaseCaps_ITAMToken_lvl0 := Length_privateSaleReleaseCaps_ITAMToken_lvl0;
[L2168]               __tmp__privateSaleReleaseCaps_ITAMToken := privateSaleReleaseCaps_ITAMToken;
[L2169]               __tmp__publicSaleAddress_ITAMToken := publicSaleAddress_ITAMToken;
[L2170]               __tmp__publicSaleReleaseCap_ITAMToken := publicSaleReleaseCap_ITAMToken;
[L2171]               __tmp__teamAddress_ITAMToken := teamAddress_ITAMToken;
[L2172]               __tmp__Length_teamReleaseCaps_ITAMToken_lvl0 := Length_teamReleaseCaps_ITAMToken_lvl0;
[L2173]               __tmp__teamReleaseCaps_ITAMToken := teamReleaseCaps_ITAMToken;
[L2174]               __tmp__advisorAddress_ITAMToken := advisorAddress_ITAMToken;
[L2175]               __tmp__Length_advisorReleaseCaps_ITAMToken_lvl0 := Length_advisorReleaseCaps_ITAMToken_lvl0;
[L2176]               __tmp__advisorReleaseCaps_ITAMToken := advisorReleaseCaps_ITAMToken;
[L2177]               __tmp__marketingAddress_ITAMToken := marketingAddress_ITAMToken;
[L2178]               __tmp__Length_marketingReleaseCaps_ITAMToken_lvl0 := Length_marketingReleaseCaps_ITAMToken_lvl0;
[L2179]               __tmp__marketingReleaseCaps_ITAMToken := marketingReleaseCaps_ITAMToken;
[L2180]               __tmp__ecoAddress_ITAMToken := ecoAddress_ITAMToken;
[L2181]               __tmp__Length_ecoReleaseCaps_ITAMToken_lvl0 := Length_ecoReleaseCaps_ITAMToken_lvl0;
[L2182]               __tmp__ecoReleaseCaps_ITAMToken := ecoReleaseCaps_ITAMToken;
[L2183]               __tmp__inAppAddress_ITAMToken := inAppAddress_ITAMToken;
[L2184]               __tmp__erc20_ITAMToken := erc20_ITAMToken;
[L2185]               __tmp__items_ITAMToken := items_ITAMToken;
[L2186]   CALL        call setGameMaster~address_ITAMToken__fail(this, msgsender_MSG, msgvalue_MSG, _gameMaster_s923);
[L10864]  CALL        call onlyOwner_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L13748]  COND TRUE   !(msgsender_MSG == __tmp__owner_ITAMToken[this])
[L13749]              revert := true;
[L10864]  RET         call onlyOwner_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L10865]  COND TRUE   revert
[L2186]   RET         call setGameMaster~address_ITAMToken__fail(this, msgsender_MSG, msgvalue_MSG, _gameMaster_s923);
[L2187]               assume revert || gas < 0;
[L14562]  RET         call setGameMaster~address_ITAMToken(this, msgsender_MSG, msgvalue_MSG, _gameMaster_s923);
[L14673]  RET         call CorralChoice_ITAMToken(this);

[2020-11-25 18:37:12,803 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 18:37:12,803 INFO  L82        PathProgramCache]: Analyzing trace with hash -1547466990, now seen corresponding path program 1 times
[2020-11-25 18:37:12,804 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 18:37:12,829 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 18:37:13,034 INFO  L134       CoverageAnalysis]: Checked inductivity of 139 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 139 trivial. 0 not checked.
[2020-11-25 18:37:13,034 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 18:37:13,034 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [15] imperfect sequences [] total 15
[2020-11-25 18:37:13,035 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 18:37:13,035 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 15 interpolants.
[2020-11-25 18:37:13,035 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=30, Invalid=180, Unknown=0, NotChecked=0, Total=210
[2020-11-25 18:37:13,035 INFO  L87              Difference]: Start difference. First operand 10589 states and 12322 transitions. cyclomatic complexity: 1754 Second operand 15 states.
[2020-11-25 18:37:18,413 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 18:37:18,413 INFO  L93              Difference]: Finished difference Result 10961 states and 12863 transitions.
[2020-11-25 18:37:18,414 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 15 states. 
[2020-11-25 18:37:18,414 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 10961 states and 12863 transitions.
[2020-11-25 18:37:18,435 INFO  L131   ngComponentsAnalysis]: Automaton has 6 accepting balls. 24
[2020-11-25 18:37:18,457 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 10961 states to 10961 states and 12863 transitions.
[2020-11-25 18:37:18,457 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 408
[2020-11-25 18:37:18,457 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 408
[2020-11-25 18:37:18,457 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 10961 states and 12863 transitions.
[2020-11-25 18:37:18,464 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 18:37:18,464 INFO  L728         BuchiCegarLoop]: Abstraction has 10961 states and 12863 transitions.
[2020-11-25 18:37:18,471 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 10961 states and 12863 transitions.
[2020-11-25 18:37:18,511 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 10961 to 10543.
[2020-11-25 18:37:18,512 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 10543 states.
[2020-11-25 18:37:18,523 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 10543 states to 10543 states and 12213 transitions.
[2020-11-25 18:37:18,523 INFO  L751         BuchiCegarLoop]: Abstraction has 10543 states and 12213 transitions.
[2020-11-25 18:37:18,523 INFO  L631         BuchiCegarLoop]: Abstraction has 10543 states and 12213 transitions.
[2020-11-25 18:37:18,523 INFO  L445         BuchiCegarLoop]: ======== Iteration 12============
[2020-11-25 18:37:18,523 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 10543 states and 12213 transitions.
[2020-11-25 18:37:18,532 INFO  L131   ngComponentsAnalysis]: Automaton has 4 accepting balls. 16
[2020-11-25 18:37:18,532 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 18:37:18,532 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 18:37:18,535 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 18:37:18,535 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                  success_transfer_ITAMToken0 := false;
[L2]                  call_transfer_ITAMToken0 := false;
[L2]      CALL        call main();
[L14663]              assume null == 0;
[L14664]  CALL        call this := FreshRefGenerator__success();
[L9908]               havoc newRef;
[L9909]               assume Alloc[newRef] == false;
[L9910]               Alloc[newRef] := true;
[L9911]               assume newRef != null;
[L14664]  RET         call this := FreshRefGenerator__success();
[L14665]              assume now >= 0;
[L14666]              assume DType[this] == ITAMToken;
[L14667]              assume msgvalue_MSG == 0;
[L14668]              gas := gas - 53000;
[L14669]  CALL        call ITAMToken_ITAMToken(this, msgsender_MSG, msgvalue_MSG, _firstMaster_s868, _secondMaster_s868, _thirdMaster_s868, _owner_s868, _gameMaster_s868, _strategicSaleAddress_s868, _privateSaleAddress_s868, _publicSaleAddress_s868, _teamAddress_s868, _advisorAddress_s868, _marketingAddress_s868, _ecoAddress_s868, _inAppAddress_s868);
[L1968]               havoc __exception;
[L1969]               revert := false;
[L1970]   COND FALSE  !(__exception)
[L2040]   CALL        call ITAMToken_ITAMToken__success(this, msgsender_MSG, msgvalue_MSG, _firstMaster_s868, _secondMaster_s868, _thirdMaster_s868, _owner_s868, _gameMaster_s868, _strategicSaleAddress_s868, _privateSaleAddress_s868, _publicSaleAddress_s868, _teamAddress_s868, _advisorAddress_s868, _marketingAddress_s868, _ecoAddress_s868, _inAppAddress_s868);
[L10848]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L10138]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L10118]              assume msgsender_MSG != null;
[L10119]              Balance[this] := 0;
[L10120]              _balances_ERC20[this] := zeroRefintArr();
[L10121]              sum__balances0[this] := 0;
[L10122]              _allowed_ERC20[this] := zeroRefRefintArr();
[L10123]              sum__allowed1[this] := 0;
[L10124]              _totalSupply_ERC20[this] := 0;
[L10138]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L10139]  COND FALSE  !(revert)
[L10848]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L10849]  COND FALSE  !(revert)
[L10852]  CALL        call ERC20Capped_ERC20Capped__success(this, msgsender_MSG, msgvalue_MSG, TOTAL_CAP_ITAMToken[this]);
[L10602]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L10138]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L10118]              assume msgsender_MSG != null;
[L10119]              Balance[this] := 0;
[L10120]              _balances_ERC20[this] := zeroRefintArr();
[L10121]              sum__balances0[this] := 0;
[L10122]              _allowed_ERC20[this] := zeroRefRefintArr();
[L10123]              sum__allowed1[this] := 0;
[L10124]              _totalSupply_ERC20[this] := 0;
[L10138]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L10139]  COND FALSE  !(revert)
[L10602]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L10603]  COND FALSE  !(revert)
[L10606]  CALL        call ERC20Capped_ERC20Capped_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, cap_s528);
[L10577]              assume msgsender_MSG != null;
[L10578]              Balance[this] := 0;
[L10579]              _cap_ERC20Capped[this] := 0;
[L10581]  COND FALSE  !(!(cap_s528 > 0))
[L10585]              _cap_ERC20Capped[this] := cap_s528;
[L10606]  RET         call ERC20Capped_ERC20Capped_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, cap_s528);
[L10607]  COND FALSE  !(revert)
[L10852]  RET         call ERC20Capped_ERC20Capped__success(this, msgsender_MSG, msgvalue_MSG, TOTAL_CAP_ITAMToken[this]);
[L10853]  COND FALSE  !(revert)
[L10856]  CALL        call ITAMToken_ITAMToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, _firstMaster_s868, _secondMaster_s868, _thirdMaster_s868, _owner_s868, _gameMaster_s868, _strategicSaleAddress_s868, _privateSaleAddress_s868, _publicSaleAddress_s868, _teamAddress_s868, _advisorAddress_s868, _marketingAddress_s868, _ecoAddress_s868, _inAppAddress_s868);
[L10771]              assume msgsender_MSG != null;
[L10772]              Balance[this] := 0;
[L10773]              name_ITAMToken[this] := -1908028786;
[L10774]              symbol_ITAMToken[this] := -1908028786;
[L10775]              decimals_ITAMToken[this] := 18;
[L10776]              TOTAL_CAP_ITAMToken[this] := 2500000000;
[L10777]              firstMaster_ITAMToken[this] := null;
[L10778]              secondMaster_ITAMToken[this] := null;
[L10779]              thirdMaster_ITAMToken[this] := null;
[L10780]              decidedOwner_ITAMToken[this] := zeroRefRefboolArr();
[L10781]              owner_ITAMToken[this] := null;
[L10782]              gameMaster_ITAMToken[this] := null;
[L10783]              blackLists_ITAMToken[this] := zeroRefboolArr();
[L10784]              unlockCount_ITAMToken[this] := 0;
[L10785]              strategicSaleAddress_ITAMToken[this] := null;
[L10786]              Length_strategicSaleReleaseCaps_ITAMToken_lvl0[this] := 0;
[L10787]              strategicSaleReleaseCaps_ITAMToken[this] := zerointintArr();
[L10788]              sum_strategicSaleReleaseCaps4[this] := 0;
[L10789]              privateSaleAddress_ITAMToken[this] := null;
[L10790]              Length_privateSaleReleaseCaps_ITAMToken_lvl0[this] := 0;
[L10791]              privateSaleReleaseCaps_ITAMToken[this] := zerointintArr();
[L10792]              sum_privateSaleReleaseCaps5[this] := 0;
[L10793]              publicSaleAddress_ITAMToken[this] := null;
[L10794]              publicSaleReleaseCap_ITAMToken[this] := 200000000;
[L10795]              teamAddress_ITAMToken[this] := null;
[L10796]              Length_teamReleaseCaps_ITAMToken_lvl0[this] := 0;
[L10797]              teamReleaseCaps_ITAMToken[this] := zerointintArr();
[L10798]              sum_teamReleaseCaps6[this] := 0;
[L10799]              advisorAddress_ITAMToken[this] := null;
[L10800]              Length_advisorReleaseCaps_ITAMToken_lvl0[this] := 0;
[L10801]              advisorReleaseCaps_ITAMToken[this] := zerointintArr();
[L10802]              sum_advisorReleaseCaps7[this] := 0;
[L10803]              marketingAddress_ITAMToken[this] := null;
[L10804]              Length_marketingReleaseCaps_ITAMToken_lvl0[this] := 0;
[L10805]              marketingReleaseCaps_ITAMToken[this] := zerointintArr();
[L10806]              sum_marketingReleaseCaps8[this] := 0;
[L10807]              ecoAddress_ITAMToken[this] := null;
[L10808]              Length_ecoReleaseCaps_ITAMToken_lvl0[this] := 0;
[L10809]              ecoReleaseCaps_ITAMToken[this] := zerointintArr();
[L10810]              sum_ecoReleaseCaps9[this] := 0;
[L10811]              inAppAddress_ITAMToken[this] := null;
[L10812]              items_ITAMToken[this] := zerointintRefintArr();
[L10813]              sum_items10[this] := 0;
[L10815]              firstMaster_ITAMToken[this] := _firstMaster_s868;
[L10816]              secondMaster_ITAMToken[this] := _secondMaster_s868;
[L10817]              thirdMaster_ITAMToken[this] := _thirdMaster_s868;
[L10818]              owner_ITAMToken[this] := _owner_s868;
[L10819]              gameMaster_ITAMToken[this] := _gameMaster_s868;
[L10820]              strategicSaleAddress_ITAMToken[this] := _strategicSaleAddress_s868;
[L10821]              privateSaleAddress_ITAMToken[this] := _privateSaleAddress_s868;
[L10822]              publicSaleAddress_ITAMToken[this] := _publicSaleAddress_s868;
[L10823]              teamAddress_ITAMToken[this] := _teamAddress_s868;
[L10824]              advisorAddress_ITAMToken[this] := _advisorAddress_s868;
[L10825]              marketingAddress_ITAMToken[this] := _marketingAddress_s868;
[L10826]              ecoAddress_ITAMToken[this] := _ecoAddress_s868;
[L10827]              inAppAddress_ITAMToken[this] := _inAppAddress_s868;
[L10856]  RET         call ITAMToken_ITAMToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, _firstMaster_s868, _secondMaster_s868, _thirdMaster_s868, _owner_s868, _gameMaster_s868, _strategicSaleAddress_s868, _privateSaleAddress_s868, _publicSaleAddress_s868, _teamAddress_s868, _advisorAddress_s868, _marketingAddress_s868, _ecoAddress_s868, _inAppAddress_s868);
[L10857]  COND FALSE  !(revert)
[L2040]   RET         call ITAMToken_ITAMToken__success(this, msgsender_MSG, msgvalue_MSG, _firstMaster_s868, _secondMaster_s868, _thirdMaster_s868, _owner_s868, _gameMaster_s868, _strategicSaleAddress_s868, _privateSaleAddress_s868, _publicSaleAddress_s868, _teamAddress_s868, _advisorAddress_s868, _marketingAddress_s868, _ecoAddress_s868, _inAppAddress_s868);
[L2041]               assume !revert && gas >= 0;
[L14669]  RET         call ITAMToken_ITAMToken(this, msgsender_MSG, msgvalue_MSG, _firstMaster_s868, _secondMaster_s868, _thirdMaster_s868, _owner_s868, _gameMaster_s868, _strategicSaleAddress_s868, _privateSaleAddress_s868, _publicSaleAddress_s868, _teamAddress_s868, _advisorAddress_s868, _marketingAddress_s868, _ecoAddress_s868, _inAppAddress_s868);
[L14670]              assume !revert && gas >= 0;
[L14673]  CALL        call CorralChoice_ITAMToken(this);
[L14239]              havoc msgsender_MSG;
[L14240]              havoc msgvalue_MSG;
[L14241]              havoc choice;
[L14242]              havoc _to_s941;
[L14243]              havoc _value_s941;
[L14244]              havoc __ret_0_transfer;
[L14245]              havoc spender_s980;
[L14246]              havoc value_s980;
[L14247]              havoc __ret_0_approve;
[L14248]              havoc _from_s962;
[L14249]              havoc _to_s962;
[L14250]              havoc _value_s962;
[L14251]              havoc __ret_0_transferFrom;
[L14252]              havoc __ret_0_totalSupply;
[L14253]              havoc owner_s247;
[L14254]              havoc __ret_0_balanceOf;
[L14255]              havoc owner_s263;
[L14256]              havoc spender_s263;
[L14257]              havoc __ret_0_allowance;
[L14258]              havoc cap_s528;
[L14259]              havoc __ret_0_cap;
[L14260]              havoc __ret_0_name;
[L14261]              havoc __ret_0_symbol;
[L14262]              havoc __ret_0_decimals;
[L14263]              havoc __ret_0_firstMaster;
[L14264]              havoc __ret_0_secondMaster;
[L14265]              havoc __ret_0_thirdMaster;
[L14266]              havoc arg1575_s0;
[L14267]              havoc arg1576_s0;
[L14268]              havoc __ret_0_decidedOwner;
[L14269]              havoc __ret_0_owner;
[L14270]              havoc __ret_0_gameMaster;
[L14271]              havoc arg1577_s0;
[L14272]              havoc __ret_0_blackLists;
[L14273]              havoc __ret_0_unlockCount;
[L14274]              havoc __ret_0_strategicSaleAddress;
[L14275]              havoc arg1578_s0;
[L14276]              havoc __ret_0_strategicSaleReleaseCaps;
[L14277]              havoc __ret_0_privateSaleAddress;
[L14278]              havoc arg1579_s0;
[L14279]              havoc __ret_0_privateSaleReleaseCaps;
[L14280]              havoc __ret_0_publicSaleAddress;
[L14281]              havoc __ret_0_publicSaleReleaseCap;
[L14282]              havoc __ret_0_teamAddress;
[L14283]              havoc arg1580_s0;
[L14284]              havoc __ret_0_teamReleaseCaps;
[L14285]              havoc __ret_0_advisorAddress;
[L14286]              havoc arg1581_s0;
[L14287]              havoc __ret_0_advisorReleaseCaps;
[L14288]              havoc __ret_0_marketingAddress;
[L14289]              havoc arg1582_s0;
[L14290]              havoc __ret_0_marketingReleaseCaps;
[L14291]              havoc __ret_0_ecoAddress;
[L14292]              havoc arg1583_s0;
[L14293]              havoc __ret_0_ecoReleaseCaps;
[L14294]              havoc __ret_0_inAppAddress;
[L14295]              havoc _firstMaster_s868;
[L14296]              havoc _secondMaster_s868;
[L14297]              havoc _thirdMaster_s868;
[L14298]              havoc _owner_s868;
[L14299]              havoc _gameMaster_s868;
[L14300]              havoc _strategicSaleAddress_s868;
[L14301]              havoc _privateSaleAddress_s868;
[L14302]              havoc _publicSaleAddress_s868;
[L14303]              havoc _teamAddress_s868;
[L14304]              havoc _advisorAddress_s868;
[L14305]              havoc _marketingAddress_s868;
[L14306]              havoc _ecoAddress_s868;
[L14307]              havoc _inAppAddress_s868;
[L14308]              havoc _gameMaster_s923;
[L14309]              havoc value_s996;
[L14310]              havoc __ret_0_unlock;
[L14311]              havoc _strategicSaleAddress_s1169;
[L14312]              havoc _privateSaleAddress_s1169;
[L14313]              havoc _publicSaleAddress_s1169;
[L14314]              havoc _teamAddress_s1169;
[L14315]              havoc _advisorAddress_s1169;
[L14316]              havoc _marketingAddress_s1169;
[L14317]              havoc _ecoAddress_s1169;
[L14318]              havoc _inAppAddress_s1169;
[L14319]              havoc _owner_s1242;
[L14320]              havoc _to_s1264;
[L14321]              havoc _to_s1285;
[L14322]              havoc amount_s1321;
[L14323]              havoc appId_s1413;
[L14324]              havoc itemIds_s1413;
[L14325]              havoc tokenAddresses_s1413;
[L14326]              havoc values_s1413;
[L14327]              havoc __ret_0_createOrUpdateItem;
[L14328]              havoc tokenAddress_s1494;
[L14329]              havoc appId_s1494;
[L14330]              havoc itemId_s1494;
[L14331]              havoc __ret_0_purchaseItemOnERC20;
[L14332]              havoc appId_s1531;
[L14333]              havoc itemId_s1531;
[L14334]              havoc __ret_0_purchaseItemOnITAM;
[L14335]              havoc appId_s1572;
[L14336]              havoc itemId_s1572;
[L14337]              havoc __ret_0_purchaseItemOnEther;
[L14338]              havoc tmpNow;
[L14339]              havoc gas;
[L14340]              assume gas > 4000000 && gas <= 8000000;
[L14341]              tmpNow := now;
[L14342]              havoc now;
[L14343]              assume now > tmpNow;
[L14344]              assume msgsender_MSG != null;
[L14345]              assume DType[msgsender_MSG] != SafeMath;
[L14346]              assume DType[msgsender_MSG] != IERC20;
[L14347]              assume DType[msgsender_MSG] != ERC20;
[L14348]              assume DType[msgsender_MSG] != ERC20Capped;
[L14349]              assume DType[msgsender_MSG] != ITAMToken;
[L14350]              Alloc[msgsender_MSG] := true;
[L14351]  COND FALSE  !(choice == 45)
[L14358]  COND FALSE  !(choice == 44)
[L14365]  COND FALSE  !(choice == 43)
[L14372]  COND FALSE  !(choice == 42)
[L14378]  COND FALSE  !(choice == 41)
[L14384]  COND FALSE  !(choice == 40)
[L14390]  COND FALSE  !(choice == 39)
[L14396]  COND FALSE  !(choice == 38)
[L14402]  COND FALSE  !(choice == 37)
[L14408]  COND FALSE  !(choice == 36)
[L14414]  COND FALSE  !(choice == 35)
[L14420]  COND FALSE  !(choice == 34)
[L14426]  COND FALSE  !(choice == 33)
[L14432]  COND FALSE  !(choice == 32)
[L14438]  COND FALSE  !(choice == 31)
[L14444]  COND FALSE  !(choice == 30)
[L14450]  COND FALSE  !(choice == 29)
[L14456]  COND FALSE  !(choice == 28)
[L14462]  COND FALSE  !(choice == 27)
[L14468]  COND FALSE  !(choice == 26)
[L14475]  COND FALSE  !(choice == 25)
[L14481]  COND FALSE  !(choice == 24)
[L14488]  COND FALSE  !(choice == 23)
[L14494]  COND FALSE  !(choice == 22)
[L14500]  COND FALSE  !(choice == 21)
[L14506]  COND FALSE  !(choice == 20)
[L14513]  COND FALSE  !(choice == 19)
[L14519]  COND FALSE  !(choice == 18)
[L14526]  COND FALSE  !(choice == 17)
[L14532]  COND FALSE  !(choice == 16)
[L14539]  COND FALSE  !(choice == 15)
[L14545]  COND FALSE  !(choice == 14)
[L14552]  COND FALSE  !(choice == 13)
[L14558]  COND FALSE  !(choice == 12)
[L14564]  COND FALSE  !(choice == 11)
[L14571]  COND FALSE  !(choice == 10)
[L14577]  COND FALSE  !(choice == 9)
[L14583]  COND FALSE  !(choice == 8)
[L14589]  COND TRUE   choice == 7
[L14590]              gas := gas - 21000;
[L14591]  COND TRUE   gas >= 0
[L14592]              assume msgvalue_MSG == 0;
[L14593]  CALL        call addToBlackList~address_ITAMToken(this, msgsender_MSG, msgvalue_MSG, _to_s1264);
[L3327]               havoc __exception;
[L3328]               revert := false;
[L3329]   COND FALSE  !(__exception)
[L3399]   CALL        call addToBlackList~address_ITAMToken__success(this, msgsender_MSG, msgvalue_MSG, _to_s1264);
[L11308]  CALL        call onlyOwner_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L13756]  COND FALSE  !(!(msgsender_MSG == owner_ITAMToken[this]))
[L11308]  RET         call onlyOwner_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L11309]  COND FALSE  !(revert)
[L11312]  COND FALSE  !(!!blackLists_ITAMToken[this][_to_s1264])
[L11316]              blackLists_ITAMToken[this][_to_s1264] := true;
[L3399]   RET         call addToBlackList~address_ITAMToken__success(this, msgsender_MSG, msgvalue_MSG, _to_s1264);
[L3400]               assume !revert && gas >= 0;
[L14593]  RET         call addToBlackList~address_ITAMToken(this, msgsender_MSG, msgvalue_MSG, _to_s1264);
[L14673]  RET         call CorralChoice_ITAMToken(this);
[L14673]  CALL        call CorralChoice_ITAMToken(this);
[L14239]              havoc msgsender_MSG;
[L14240]              havoc msgvalue_MSG;
[L14241]              havoc choice;
[L14242]              havoc _to_s941;
[L14243]              havoc _value_s941;
[L14244]              havoc __ret_0_transfer;
[L14245]              havoc spender_s980;
[L14246]              havoc value_s980;
[L14247]              havoc __ret_0_approve;
[L14248]              havoc _from_s962;
[L14249]              havoc _to_s962;
[L14250]              havoc _value_s962;
[L14251]              havoc __ret_0_transferFrom;
[L14252]              havoc __ret_0_totalSupply;
[L14253]              havoc owner_s247;
[L14254]              havoc __ret_0_balanceOf;
[L14255]              havoc owner_s263;
[L14256]              havoc spender_s263;
[L14257]              havoc __ret_0_allowance;
[L14258]              havoc cap_s528;
[L14259]              havoc __ret_0_cap;
[L14260]              havoc __ret_0_name;
[L14261]              havoc __ret_0_symbol;
[L14262]              havoc __ret_0_decimals;
[L14263]              havoc __ret_0_firstMaster;
[L14264]              havoc __ret_0_secondMaster;
[L14265]              havoc __ret_0_thirdMaster;
[L14266]              havoc arg1575_s0;
[L14267]              havoc arg1576_s0;
[L14268]              havoc __ret_0_decidedOwner;
[L14269]              havoc __ret_0_owner;
[L14270]              havoc __ret_0_gameMaster;
[L14271]              havoc arg1577_s0;
[L14272]              havoc __ret_0_blackLists;
[L14273]              havoc __ret_0_unlockCount;
[L14274]              havoc __ret_0_strategicSaleAddress;
[L14275]              havoc arg1578_s0;
[L14276]              havoc __ret_0_strategicSaleReleaseCaps;
[L14277]              havoc __ret_0_privateSaleAddress;
[L14278]              havoc arg1579_s0;
[L14279]              havoc __ret_0_privateSaleReleaseCaps;
[L14280]              havoc __ret_0_publicSaleAddress;
[L14281]              havoc __ret_0_publicSaleReleaseCap;
[L14282]              havoc __ret_0_teamAddress;
[L14283]              havoc arg1580_s0;
[L14284]              havoc __ret_0_teamReleaseCaps;
[L14285]              havoc __ret_0_advisorAddress;
[L14286]              havoc arg1581_s0;
[L14287]              havoc __ret_0_advisorReleaseCaps;
[L14288]              havoc __ret_0_marketingAddress;
[L14289]              havoc arg1582_s0;
[L14290]              havoc __ret_0_marketingReleaseCaps;
[L14291]              havoc __ret_0_ecoAddress;
[L14292]              havoc arg1583_s0;
[L14293]              havoc __ret_0_ecoReleaseCaps;
[L14294]              havoc __ret_0_inAppAddress;
[L14295]              havoc _firstMaster_s868;
[L14296]              havoc _secondMaster_s868;
[L14297]              havoc _thirdMaster_s868;
[L14298]              havoc _owner_s868;
[L14299]              havoc _gameMaster_s868;
[L14300]              havoc _strategicSaleAddress_s868;
[L14301]              havoc _privateSaleAddress_s868;
[L14302]              havoc _publicSaleAddress_s868;
[L14303]              havoc _teamAddress_s868;
[L14304]              havoc _advisorAddress_s868;
[L14305]              havoc _marketingAddress_s868;
[L14306]              havoc _ecoAddress_s868;
[L14307]              havoc _inAppAddress_s868;
[L14308]              havoc _gameMaster_s923;
[L14309]              havoc value_s996;
[L14310]              havoc __ret_0_unlock;
[L14311]              havoc _strategicSaleAddress_s1169;
[L14312]              havoc _privateSaleAddress_s1169;
[L14313]              havoc _publicSaleAddress_s1169;
[L14314]              havoc _teamAddress_s1169;
[L14315]              havoc _advisorAddress_s1169;
[L14316]              havoc _marketingAddress_s1169;
[L14317]              havoc _ecoAddress_s1169;
[L14318]              havoc _inAppAddress_s1169;
[L14319]              havoc _owner_s1242;
[L14320]              havoc _to_s1264;
[L14321]              havoc _to_s1285;
[L14322]              havoc amount_s1321;
[L14323]              havoc appId_s1413;
[L14324]              havoc itemIds_s1413;
[L14325]              havoc tokenAddresses_s1413;
[L14326]              havoc values_s1413;
[L14327]              havoc __ret_0_createOrUpdateItem;
[L14328]              havoc tokenAddress_s1494;
[L14329]              havoc appId_s1494;
[L14330]              havoc itemId_s1494;
[L14331]              havoc __ret_0_purchaseItemOnERC20;
[L14332]              havoc appId_s1531;
[L14333]              havoc itemId_s1531;
[L14334]              havoc __ret_0_purchaseItemOnITAM;
[L14335]              havoc appId_s1572;
[L14336]              havoc itemId_s1572;
[L14337]              havoc __ret_0_purchaseItemOnEther;
[L14338]              havoc tmpNow;
[L14339]              havoc gas;
[L14340]              assume gas > 4000000 && gas <= 8000000;
[L14341]              tmpNow := now;
[L14342]              havoc now;
[L14343]              assume now > tmpNow;
[L14344]              assume msgsender_MSG != null;
[L14345]              assume DType[msgsender_MSG] != SafeMath;
[L14346]              assume DType[msgsender_MSG] != IERC20;
[L14347]              assume DType[msgsender_MSG] != ERC20;
[L14348]              assume DType[msgsender_MSG] != ERC20Capped;
[L14349]              assume DType[msgsender_MSG] != ITAMToken;
[L14350]              Alloc[msgsender_MSG] := true;
[L14351]  COND TRUE   choice == 45
[L14352]              gas := gas - 21000;
[L14353]  COND TRUE   gas >= 0
[L14354]              assume _value_s941 >= 0 && _value_s941 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L14355]              assume msgvalue_MSG == 0;
[L14356]  CALL        call __ret_0_transfer := transfer~address~uint256_ITAMToken(this, msgsender_MSG, msgvalue_MSG, _to_s941, _value_s941);
[L2]                  revert_hold := revert;
[L2]                  revert := false;
[L2]                  assume ((((((msgsender_MSG == _to_s941 && _value_s941 <= _balances_ERC20[this][msgsender_MSG]) && _value_s941 >= 0) && _value_s941 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][_to_s941] >= 0) && _balances_ERC20[this][_to_s941] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                  call_transfer_ITAMToken0 := true;
[L2]                  call_transfer_ITAMToken0 := false;
[L2]                  revert := revert_hold;
[L2267]               havoc __exception;
[L2268]               revert := false;
[L2269]   COND TRUE   __exception
[L2270]               __tmp__Balance := Balance;
[L2271]               __tmp__DType := DType;
[L2272]               __tmp__Alloc := Alloc;
[L2273]               __tmp__balance_ADDR := balance_ADDR;
[L2274]               __tmp__M_Ref_int := M_Ref_int;
[L2275]               __tmp__sum__balances0 := sum__balances0;
[L2276]               __tmp__alloc__allowed_ERC20_lvl0 := alloc__allowed_ERC20_lvl0;
[L2277]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L2278]               __tmp__sum__allowed1 := sum__allowed1;
[L2279]               __tmp__M_Ref_bool := M_Ref_bool;
[L2280]               __tmp__alloc_decidedOwner_ITAMToken_lvl0 := alloc_decidedOwner_ITAMToken_lvl0;
[L2281]               __tmp__sum_decidedOwner2 := sum_decidedOwner2;
[L2282]               __tmp__sum_blackLists3 := sum_blackLists3;
[L2283]               __tmp__alloc_items_ITAMToken_lvl1 := alloc_items_ITAMToken_lvl1;
[L2284]               __tmp__M_int_Ref := M_int_Ref;
[L2285]               __tmp__alloc_items_ITAMToken_lvl0 := alloc_items_ITAMToken_lvl0;
[L2286]               __tmp__sum_items10 := sum_items10;
[L2287]               __tmp__M_int_int := M_int_int;
[L2288]               __tmp__sum_strategicSaleReleaseCaps4 := sum_strategicSaleReleaseCaps4;
[L2289]               __tmp__sum_privateSaleReleaseCaps5 := sum_privateSaleReleaseCaps5;
[L2290]               __tmp__sum_teamReleaseCaps6 := sum_teamReleaseCaps6;
[L2291]               __tmp__sum_advisorReleaseCaps7 := sum_advisorReleaseCaps7;
[L2292]               __tmp__sum_marketingReleaseCaps8 := sum_marketingReleaseCaps8;
[L2293]               __tmp__sum_ecoReleaseCaps9 := sum_ecoReleaseCaps9;
[L2294]               __tmp__sum := sum;
[L2295]               __tmp__Length := Length;
[L2296]               __tmp__now := now;
[L2297]               __tmp___balances_ERC20 := _balances_ERC20;
[L2298]               __tmp___allowed_ERC20 := _allowed_ERC20;
[L2299]               __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L2300]               __tmp___cap_ERC20Capped := _cap_ERC20Capped;
[L2301]               __tmp__name_ITAMToken := name_ITAMToken;
[L2302]               __tmp__symbol_ITAMToken := symbol_ITAMToken;
[L2303]               __tmp__decimals_ITAMToken := decimals_ITAMToken;
[L2304]               __tmp__TOTAL_CAP_ITAMToken := TOTAL_CAP_ITAMToken;
[L2305]               __tmp__firstMaster_ITAMToken := firstMaster_ITAMToken;
[L2306]               __tmp__secondMaster_ITAMToken := secondMaster_ITAMToken;
[L2307]               __tmp__thirdMaster_ITAMToken := thirdMaster_ITAMToken;
[L2308]               __tmp__decidedOwner_ITAMToken := decidedOwner_ITAMToken;
[L2309]               __tmp__owner_ITAMToken := owner_ITAMToken;
[L2310]               __tmp__gameMaster_ITAMToken := gameMaster_ITAMToken;
[L2311]               __tmp__blackLists_ITAMToken := blackLists_ITAMToken;
[L2312]               __tmp__unlockCount_ITAMToken := unlockCount_ITAMToken;
[L2313]               __tmp__strategicSaleAddress_ITAMToken := strategicSaleAddress_ITAMToken;
[L2314]               __tmp__Length_strategicSaleReleaseCaps_ITAMToken_lvl0 := Length_strategicSaleReleaseCaps_ITAMToken_lvl0;
[L2315]               __tmp__strategicSaleReleaseCaps_ITAMToken := strategicSaleReleaseCaps_ITAMToken;
[L2316]               __tmp__privateSaleAddress_ITAMToken := privateSaleAddress_ITAMToken;
[L2317]               __tmp__Length_privateSaleReleaseCaps_ITAMToken_lvl0 := Length_privateSaleReleaseCaps_ITAMToken_lvl0;
[L2318]               __tmp__privateSaleReleaseCaps_ITAMToken := privateSaleReleaseCaps_ITAMToken;
[L2319]               __tmp__publicSaleAddress_ITAMToken := publicSaleAddress_ITAMToken;
[L2320]               __tmp__publicSaleReleaseCap_ITAMToken := publicSaleReleaseCap_ITAMToken;
[L2321]               __tmp__teamAddress_ITAMToken := teamAddress_ITAMToken;
[L2322]               __tmp__Length_teamReleaseCaps_ITAMToken_lvl0 := Length_teamReleaseCaps_ITAMToken_lvl0;
[L2323]               __tmp__teamReleaseCaps_ITAMToken := teamReleaseCaps_ITAMToken;
[L2324]               __tmp__advisorAddress_ITAMToken := advisorAddress_ITAMToken;
[L2325]               __tmp__Length_advisorReleaseCaps_ITAMToken_lvl0 := Length_advisorReleaseCaps_ITAMToken_lvl0;
[L2326]               __tmp__advisorReleaseCaps_ITAMToken := advisorReleaseCaps_ITAMToken;
[L2327]               __tmp__marketingAddress_ITAMToken := marketingAddress_ITAMToken;
[L2328]               __tmp__Length_marketingReleaseCaps_ITAMToken_lvl0 := Length_marketingReleaseCaps_ITAMToken_lvl0;
[L2329]               __tmp__marketingReleaseCaps_ITAMToken := marketingReleaseCaps_ITAMToken;
[L2330]               __tmp__ecoAddress_ITAMToken := ecoAddress_ITAMToken;
[L2331]               __tmp__Length_ecoReleaseCaps_ITAMToken_lvl0 := Length_ecoReleaseCaps_ITAMToken_lvl0;
[L2332]               __tmp__ecoReleaseCaps_ITAMToken := ecoReleaseCaps_ITAMToken;
[L2333]               __tmp__inAppAddress_ITAMToken := inAppAddress_ITAMToken;
[L2334]               __tmp__erc20_ITAMToken := erc20_ITAMToken;
[L2335]               __tmp__items_ITAMToken := items_ITAMToken;
[L2336]   CALL        call __ret_0_ := transfer~address~uint256_ITAMToken__fail(this, msgsender_MSG, msgvalue_MSG, _to_s941, _value_s941);
[L10884]  CALL        call onlyNotBlackList_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L13796]  COND TRUE   !!__tmp__blackLists_ITAMToken[this][msgsender_MSG]
[L13797]              revert := true;
[L10884]  RET         call onlyNotBlackList_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L10885]  COND TRUE   revert
[L2336]   RET         call __ret_0_ := transfer~address~uint256_ITAMToken__fail(this, msgsender_MSG, msgvalue_MSG, _to_s941, _value_s941);
[L2337]               assume revert || gas < 0;
[L14356]  RET         call __ret_0_transfer := transfer~address~uint256_ITAMToken(this, msgsender_MSG, msgvalue_MSG, _to_s941, _value_s941);
[L14673]  RET         call CorralChoice_ITAMToken(this);

Loop:
[L14673]  CALL        call CorralChoice_ITAMToken(this);
[L14239]              havoc msgsender_MSG;
[L14240]              havoc msgvalue_MSG;
[L14241]              havoc choice;
[L14242]              havoc _to_s941;
[L14243]              havoc _value_s941;
[L14244]              havoc __ret_0_transfer;
[L14245]              havoc spender_s980;
[L14246]              havoc value_s980;
[L14247]              havoc __ret_0_approve;
[L14248]              havoc _from_s962;
[L14249]              havoc _to_s962;
[L14250]              havoc _value_s962;
[L14251]              havoc __ret_0_transferFrom;
[L14252]              havoc __ret_0_totalSupply;
[L14253]              havoc owner_s247;
[L14254]              havoc __ret_0_balanceOf;
[L14255]              havoc owner_s263;
[L14256]              havoc spender_s263;
[L14257]              havoc __ret_0_allowance;
[L14258]              havoc cap_s528;
[L14259]              havoc __ret_0_cap;
[L14260]              havoc __ret_0_name;
[L14261]              havoc __ret_0_symbol;
[L14262]              havoc __ret_0_decimals;
[L14263]              havoc __ret_0_firstMaster;
[L14264]              havoc __ret_0_secondMaster;
[L14265]              havoc __ret_0_thirdMaster;
[L14266]              havoc arg1575_s0;
[L14267]              havoc arg1576_s0;
[L14268]              havoc __ret_0_decidedOwner;
[L14269]              havoc __ret_0_owner;
[L14270]              havoc __ret_0_gameMaster;
[L14271]              havoc arg1577_s0;
[L14272]              havoc __ret_0_blackLists;
[L14273]              havoc __ret_0_unlockCount;
[L14274]              havoc __ret_0_strategicSaleAddress;
[L14275]              havoc arg1578_s0;
[L14276]              havoc __ret_0_strategicSaleReleaseCaps;
[L14277]              havoc __ret_0_privateSaleAddress;
[L14278]              havoc arg1579_s0;
[L14279]              havoc __ret_0_privateSaleReleaseCaps;
[L14280]              havoc __ret_0_publicSaleAddress;
[L14281]              havoc __ret_0_publicSaleReleaseCap;
[L14282]              havoc __ret_0_teamAddress;
[L14283]              havoc arg1580_s0;
[L14284]              havoc __ret_0_teamReleaseCaps;
[L14285]              havoc __ret_0_advisorAddress;
[L14286]              havoc arg1581_s0;
[L14287]              havoc __ret_0_advisorReleaseCaps;
[L14288]              havoc __ret_0_marketingAddress;
[L14289]              havoc arg1582_s0;
[L14290]              havoc __ret_0_marketingReleaseCaps;
[L14291]              havoc __ret_0_ecoAddress;
[L14292]              havoc arg1583_s0;
[L14293]              havoc __ret_0_ecoReleaseCaps;
[L14294]              havoc __ret_0_inAppAddress;
[L14295]              havoc _firstMaster_s868;
[L14296]              havoc _secondMaster_s868;
[L14297]              havoc _thirdMaster_s868;
[L14298]              havoc _owner_s868;
[L14299]              havoc _gameMaster_s868;
[L14300]              havoc _strategicSaleAddress_s868;
[L14301]              havoc _privateSaleAddress_s868;
[L14302]              havoc _publicSaleAddress_s868;
[L14303]              havoc _teamAddress_s868;
[L14304]              havoc _advisorAddress_s868;
[L14305]              havoc _marketingAddress_s868;
[L14306]              havoc _ecoAddress_s868;
[L14307]              havoc _inAppAddress_s868;
[L14308]              havoc _gameMaster_s923;
[L14309]              havoc value_s996;
[L14310]              havoc __ret_0_unlock;
[L14311]              havoc _strategicSaleAddress_s1169;
[L14312]              havoc _privateSaleAddress_s1169;
[L14313]              havoc _publicSaleAddress_s1169;
[L14314]              havoc _teamAddress_s1169;
[L14315]              havoc _advisorAddress_s1169;
[L14316]              havoc _marketingAddress_s1169;
[L14317]              havoc _ecoAddress_s1169;
[L14318]              havoc _inAppAddress_s1169;
[L14319]              havoc _owner_s1242;
[L14320]              havoc _to_s1264;
[L14321]              havoc _to_s1285;
[L14322]              havoc amount_s1321;
[L14323]              havoc appId_s1413;
[L14324]              havoc itemIds_s1413;
[L14325]              havoc tokenAddresses_s1413;
[L14326]              havoc values_s1413;
[L14327]              havoc __ret_0_createOrUpdateItem;
[L14328]              havoc tokenAddress_s1494;
[L14329]              havoc appId_s1494;
[L14330]              havoc itemId_s1494;
[L14331]              havoc __ret_0_purchaseItemOnERC20;
[L14332]              havoc appId_s1531;
[L14333]              havoc itemId_s1531;
[L14334]              havoc __ret_0_purchaseItemOnITAM;
[L14335]              havoc appId_s1572;
[L14336]              havoc itemId_s1572;
[L14337]              havoc __ret_0_purchaseItemOnEther;
[L14338]              havoc tmpNow;
[L14339]              havoc gas;
[L14340]              assume gas > 4000000 && gas <= 8000000;
[L14341]              tmpNow := now;
[L14342]              havoc now;
[L14343]              assume now > tmpNow;
[L14344]              assume msgsender_MSG != null;
[L14345]              assume DType[msgsender_MSG] != SafeMath;
[L14346]              assume DType[msgsender_MSG] != IERC20;
[L14347]              assume DType[msgsender_MSG] != ERC20;
[L14348]              assume DType[msgsender_MSG] != ERC20Capped;
[L14349]              assume DType[msgsender_MSG] != ITAMToken;
[L14350]              Alloc[msgsender_MSG] := true;
[L14351]  COND FALSE  !(choice == 45)
[L14358]  COND FALSE  !(choice == 44)
[L14365]  COND FALSE  !(choice == 43)
[L14372]  COND FALSE  !(choice == 42)
[L14378]  COND FALSE  !(choice == 41)
[L14384]  COND FALSE  !(choice == 40)
[L14390]  COND FALSE  !(choice == 39)
[L14396]  COND FALSE  !(choice == 38)
[L14402]  COND FALSE  !(choice == 37)
[L14408]  COND FALSE  !(choice == 36)
[L14414]  COND FALSE  !(choice == 35)
[L14420]  COND FALSE  !(choice == 34)
[L14426]  COND FALSE  !(choice == 33)
[L14432]  COND FALSE  !(choice == 32)
[L14438]  COND FALSE  !(choice == 31)
[L14444]  COND FALSE  !(choice == 30)
[L14450]  COND FALSE  !(choice == 29)
[L14456]  COND FALSE  !(choice == 28)
[L14462]  COND FALSE  !(choice == 27)
[L14468]  COND FALSE  !(choice == 26)
[L14475]  COND FALSE  !(choice == 25)
[L14481]  COND FALSE  !(choice == 24)
[L14488]  COND FALSE  !(choice == 23)
[L14494]  COND FALSE  !(choice == 22)
[L14500]  COND FALSE  !(choice == 21)
[L14506]  COND FALSE  !(choice == 20)
[L14513]  COND FALSE  !(choice == 19)
[L14519]  COND FALSE  !(choice == 18)
[L14526]  COND FALSE  !(choice == 17)
[L14532]  COND FALSE  !(choice == 16)
[L14539]  COND FALSE  !(choice == 15)
[L14545]  COND FALSE  !(choice == 14)
[L14552]  COND FALSE  !(choice == 13)
[L14558]  COND TRUE   choice == 12
[L14559]              gas := gas - 21000;
[L14560]  COND TRUE   gas >= 0
[L14561]              assume msgvalue_MSG == 0;
[L14562]  CALL        call setGameMaster~address_ITAMToken(this, msgsender_MSG, msgvalue_MSG, _gameMaster_s923);
[L2117]               havoc __exception;
[L2118]               revert := false;
[L2119]   COND TRUE   __exception
[L2120]               __tmp__Balance := Balance;
[L2121]               __tmp__DType := DType;
[L2122]               __tmp__Alloc := Alloc;
[L2123]               __tmp__balance_ADDR := balance_ADDR;
[L2124]               __tmp__M_Ref_int := M_Ref_int;
[L2125]               __tmp__sum__balances0 := sum__balances0;
[L2126]               __tmp__alloc__allowed_ERC20_lvl0 := alloc__allowed_ERC20_lvl0;
[L2127]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L2128]               __tmp__sum__allowed1 := sum__allowed1;
[L2129]               __tmp__M_Ref_bool := M_Ref_bool;
[L2130]               __tmp__alloc_decidedOwner_ITAMToken_lvl0 := alloc_decidedOwner_ITAMToken_lvl0;
[L2131]               __tmp__sum_decidedOwner2 := sum_decidedOwner2;
[L2132]               __tmp__sum_blackLists3 := sum_blackLists3;
[L2133]               __tmp__alloc_items_ITAMToken_lvl1 := alloc_items_ITAMToken_lvl1;
[L2134]               __tmp__M_int_Ref := M_int_Ref;
[L2135]               __tmp__alloc_items_ITAMToken_lvl0 := alloc_items_ITAMToken_lvl0;
[L2136]               __tmp__sum_items10 := sum_items10;
[L2137]               __tmp__M_int_int := M_int_int;
[L2138]               __tmp__sum_strategicSaleReleaseCaps4 := sum_strategicSaleReleaseCaps4;
[L2139]               __tmp__sum_privateSaleReleaseCaps5 := sum_privateSaleReleaseCaps5;
[L2140]               __tmp__sum_teamReleaseCaps6 := sum_teamReleaseCaps6;
[L2141]               __tmp__sum_advisorReleaseCaps7 := sum_advisorReleaseCaps7;
[L2142]               __tmp__sum_marketingReleaseCaps8 := sum_marketingReleaseCaps8;
[L2143]               __tmp__sum_ecoReleaseCaps9 := sum_ecoReleaseCaps9;
[L2144]               __tmp__sum := sum;
[L2145]               __tmp__Length := Length;
[L2146]               __tmp__now := now;
[L2147]               __tmp___balances_ERC20 := _balances_ERC20;
[L2148]               __tmp___allowed_ERC20 := _allowed_ERC20;
[L2149]               __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L2150]               __tmp___cap_ERC20Capped := _cap_ERC20Capped;
[L2151]               __tmp__name_ITAMToken := name_ITAMToken;
[L2152]               __tmp__symbol_ITAMToken := symbol_ITAMToken;
[L2153]               __tmp__decimals_ITAMToken := decimals_ITAMToken;
[L2154]               __tmp__TOTAL_CAP_ITAMToken := TOTAL_CAP_ITAMToken;
[L2155]               __tmp__firstMaster_ITAMToken := firstMaster_ITAMToken;
[L2156]               __tmp__secondMaster_ITAMToken := secondMaster_ITAMToken;
[L2157]               __tmp__thirdMaster_ITAMToken := thirdMaster_ITAMToken;
[L2158]               __tmp__decidedOwner_ITAMToken := decidedOwner_ITAMToken;
[L2159]               __tmp__owner_ITAMToken := owner_ITAMToken;
[L2160]               __tmp__gameMaster_ITAMToken := gameMaster_ITAMToken;
[L2161]               __tmp__blackLists_ITAMToken := blackLists_ITAMToken;
[L2162]               __tmp__unlockCount_ITAMToken := unlockCount_ITAMToken;
[L2163]               __tmp__strategicSaleAddress_ITAMToken := strategicSaleAddress_ITAMToken;
[L2164]               __tmp__Length_strategicSaleReleaseCaps_ITAMToken_lvl0 := Length_strategicSaleReleaseCaps_ITAMToken_lvl0;
[L2165]               __tmp__strategicSaleReleaseCaps_ITAMToken := strategicSaleReleaseCaps_ITAMToken;
[L2166]               __tmp__privateSaleAddress_ITAMToken := privateSaleAddress_ITAMToken;
[L2167]               __tmp__Length_privateSaleReleaseCaps_ITAMToken_lvl0 := Length_privateSaleReleaseCaps_ITAMToken_lvl0;
[L2168]               __tmp__privateSaleReleaseCaps_ITAMToken := privateSaleReleaseCaps_ITAMToken;
[L2169]               __tmp__publicSaleAddress_ITAMToken := publicSaleAddress_ITAMToken;
[L2170]               __tmp__publicSaleReleaseCap_ITAMToken := publicSaleReleaseCap_ITAMToken;
[L2171]               __tmp__teamAddress_ITAMToken := teamAddress_ITAMToken;
[L2172]               __tmp__Length_teamReleaseCaps_ITAMToken_lvl0 := Length_teamReleaseCaps_ITAMToken_lvl0;
[L2173]               __tmp__teamReleaseCaps_ITAMToken := teamReleaseCaps_ITAMToken;
[L2174]               __tmp__advisorAddress_ITAMToken := advisorAddress_ITAMToken;
[L2175]               __tmp__Length_advisorReleaseCaps_ITAMToken_lvl0 := Length_advisorReleaseCaps_ITAMToken_lvl0;
[L2176]               __tmp__advisorReleaseCaps_ITAMToken := advisorReleaseCaps_ITAMToken;
[L2177]               __tmp__marketingAddress_ITAMToken := marketingAddress_ITAMToken;
[L2178]               __tmp__Length_marketingReleaseCaps_ITAMToken_lvl0 := Length_marketingReleaseCaps_ITAMToken_lvl0;
[L2179]               __tmp__marketingReleaseCaps_ITAMToken := marketingReleaseCaps_ITAMToken;
[L2180]               __tmp__ecoAddress_ITAMToken := ecoAddress_ITAMToken;
[L2181]               __tmp__Length_ecoReleaseCaps_ITAMToken_lvl0 := Length_ecoReleaseCaps_ITAMToken_lvl0;
[L2182]               __tmp__ecoReleaseCaps_ITAMToken := ecoReleaseCaps_ITAMToken;
[L2183]               __tmp__inAppAddress_ITAMToken := inAppAddress_ITAMToken;
[L2184]               __tmp__erc20_ITAMToken := erc20_ITAMToken;
[L2185]               __tmp__items_ITAMToken := items_ITAMToken;
[L2186]   CALL        call setGameMaster~address_ITAMToken__fail(this, msgsender_MSG, msgvalue_MSG, _gameMaster_s923);
[L10864]  CALL        call onlyOwner_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L13748]  COND TRUE   !(msgsender_MSG == __tmp__owner_ITAMToken[this])
[L13749]              revert := true;
[L10864]  RET         call onlyOwner_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L10865]  COND TRUE   revert
[L2186]   RET         call setGameMaster~address_ITAMToken__fail(this, msgsender_MSG, msgvalue_MSG, _gameMaster_s923);
[L2187]               assume revert || gas < 0;
[L14562]  RET         call setGameMaster~address_ITAMToken(this, msgsender_MSG, msgvalue_MSG, _gameMaster_s923);
[L14673]  RET         call CorralChoice_ITAMToken(this);

[2020-11-25 18:37:18,540 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 18:37:18,540 INFO  L82        PathProgramCache]: Analyzing trace with hash -2103415450, now seen corresponding path program 1 times
[2020-11-25 18:37:18,541 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 18:37:18,566 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 18:37:18,588 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 18:37:18,715 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 18:37:18,715 INFO  L82        PathProgramCache]: Analyzing trace with hash 1894316715, now seen corresponding path program 1 times
[2020-11-25 18:37:18,715 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 18:37:18,723 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 18:37:18,729 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 18:37:18,759 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 18:37:18,759 INFO  L82        PathProgramCache]: Analyzing trace with hash -907285296, now seen corresponding path program 1 times
[2020-11-25 18:37:18,760 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 18:37:18,786 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 18:37:18,816 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 37 to 73
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #2: 163 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 163 to 317
Garbage collection #3: 317 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 317 to 631
Garbage collection #4: 631 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 631 to 1259
Garbage collection #5: 1259 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 1259 to 2503
Garbage collection #6: 2503 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 2503 to 5003
Garbage collection #1: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #2: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #3: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #4: 547 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 547 to 1093
Garbage collection #5: 1093 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 1093 to 2179
Garbage collection #6: 2179 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 2179 to 4357
[2020-11-25 18:37:19,205 WARN  L188               SmtUtils]: Spent 177.00 ms on a formula simplification that was a NOOP. DAG size: 557
Garbage collection #1: 223 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 223 to 443
Garbage collection #2: 443 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 443 to 883
Garbage collection #3: 883 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 883 to 1759
Garbage collection #4: 1759 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 1759 to 3517
Garbage collection #5: 3517 nodes / 0 free / 0.0s / 0.002s total
Resizing node table from 3517 to 7027
Garbage collection #6: 7027 nodes / 0 free / 0.001s / 0.003s total
Resizing node table from 7027 to 14051
Garbage collection #7: 14051 nodes / 0 free / 0.003s / 0.006s total
Resizing node table from 14051 to 28099
[2020-11-25 18:37:19,577 WARN  L188               SmtUtils]: Spent 256.00 ms on a formula simplification. DAG size of input: 564 DAG size of output: 464
Garbage collection #1: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #2: 317 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 317 to 631
Garbage collection #3: 631 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 631 to 1259
Garbage collection #4: 1259 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1259 to 2503
Garbage collection #5: 2503 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2503 to 5003
Garbage collection #6: 5003 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 5003 to 9973
Garbage collection #7: 9973 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 9973 to 19937
Garbage collection #1: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #2: 173 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 173 to 337
Garbage collection #3: 337 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 337 to 673
Garbage collection #4: 673 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 673 to 1327
Garbage collection #5: 1327 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 1327 to 2647
Garbage collection #6: 2647 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 2647 to 5281
[2020-11-25 18:37:20,033 WARN  L188               SmtUtils]: Spent 412.00 ms on a formula simplification that was a NOOP. DAG size: 699
Garbage collection #1: 277 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 277 to 547
Garbage collection #2: 547 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 547 to 1093
Garbage collection #3: 1093 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 1093 to 2179
Garbage collection #4: 2179 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 2179 to 4357
Garbage collection #5: 4357 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 4357 to 8713
Garbage collection #6: 8713 nodes / 0 free / 0.0s / 0.002s total
Resizing node table from 8713 to 17419
Garbage collection #7: 17419 nodes / 0 free / 0.0s / 0.002s total
Resizing node table from 17419 to 34819
Garbage collection #8: 34819 nodes / 0 free / 0.001s / 0.003s total
Resizing node table from 34819 to 69623
[2020-11-25 18:37:20,209 WARN  L188               SmtUtils]: Spent 164.00 ms on a formula simplification that was a NOOP. DAG size: 557
[2020-11-25 18:37:20,405 WARN  L188               SmtUtils]: Spent 192.00 ms on a formula simplification that was a NOOP. DAG size: 557
Garbage collection #1: 211 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 211 to 421
Garbage collection #2: 421 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 421 to 839
Garbage collection #3: 839 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 839 to 1669
Garbage collection #4: 1669 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1669 to 3331
Garbage collection #5: 3331 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3331 to 6661
Garbage collection #6: 6661 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 6661 to 13313
Garbage collection #7: 13313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13313 to 26597
Garbage collection #1: 107 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 107 to 211
Garbage collection #2: 211 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 211 to 421
Garbage collection #3: 421 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 421 to 839
Garbage collection #4: 839 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 839 to 1669
Garbage collection #5: 1669 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1669 to 3331
Garbage collection #6: 3331 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3331 to 6661
[2020-11-25 18:37:20,478 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 7 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 7 to 13
Garbage collection #2: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #4: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #1: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #2: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #3: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #4: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
[2020-11-25 18:37:20,724 WARN  L188               SmtUtils]: Spent 127.00 ms on a formula simplification that was a NOOP. DAG size: 399
Garbage collection #1: 149 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 149 to 293
Garbage collection #2: 293 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 293 to 577
Garbage collection #3: 577 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 577 to 1153
Garbage collection #4: 1153 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 1153 to 2297
Garbage collection #5: 2297 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 2297 to 4591
Garbage collection #6: 4591 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 4591 to 9181
Garbage collection #7: 9181 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 9181 to 18353
[2020-11-25 18:37:21,495 WARN  L188               SmtUtils]: Spent 694.00 ms on a formula simplification. DAG size of input: 413 DAG size of output: 408
Garbage collection #1: 149 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 149 to 293
Garbage collection #2: 293 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 293 to 577
Garbage collection #3: 577 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 577 to 1153
Garbage collection #4: 1153 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1153 to 2297
Garbage collection #5: 2297 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2297 to 4591
Garbage collection #6: 4591 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4591 to 9181
Garbage collection #7: 9181 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 9181 to 18353
[2020-11-25 18:37:21,727 WARN  L188               SmtUtils]: Spent 193.00 ms on a formula simplification that was a NOOP. DAG size: 457
Garbage collection #1: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #2: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #3: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #4: 1327 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1327 to 2647
Garbage collection #5: 2647 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2647 to 5281
Garbage collection #6: 5281 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 5281 to 10559
Garbage collection #7: 10559 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 10559 to 21107
[2020-11-25 18:37:21,836 WARN  L188               SmtUtils]: Spent 104.00 ms on a formula simplification that was a NOOP. DAG size: 359
[2020-11-25 18:37:22,028 WARN  L188               SmtUtils]: Spent 190.00 ms on a formula simplification. DAG size of input: 364 DAG size of output: 363
Garbage collection #1: 127 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 127 to 251
Garbage collection #2: 251 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 251 to 499
Garbage collection #3: 499 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 499 to 997
Garbage collection #4: 997 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 997 to 1993
Garbage collection #5: 1993 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1993 to 3967
Garbage collection #6: 3967 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3967 to 7933
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
[2020-11-25 18:37:22,797 WARN  L188               SmtUtils]: Spent 729.00 ms on a formula simplification that was a NOOP. DAG size: 790
Garbage collection #1: 307 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 307 to 613
Garbage collection #2: 613 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 613 to 1223
Garbage collection #3: 1223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1223 to 2441
Garbage collection #4: 2441 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2441 to 4877
Garbage collection #5: 4877 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4877 to 9749
Garbage collection #6: 9749 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 9749 to 19489
Garbage collection #7: 19489 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19489 to 38977
Garbage collection #8: 38977 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 38977 to 77951
[2020-11-25 18:37:23,216 WARN  L188               SmtUtils]: Spent 409.00 ms on a formula simplification that was a NOOP. DAG size: 692
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
[2020-11-25 18:37:23,338 WARN  L188               SmtUtils]: Spent 111.00 ms on a formula simplification that was a NOOP. DAG size: 371
Garbage collection #1: 149 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 149 to 293
Garbage collection #2: 293 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 293 to 577
Garbage collection #3: 577 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 577 to 1153
Garbage collection #4: 1153 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1153 to 2297
Garbage collection #5: 2297 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2297 to 4591
Garbage collection #6: 4591 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4591 to 9181
Garbage collection #7: 9181 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 9181 to 18353
[2020-11-25 18:37:23,657 WARN  L188               SmtUtils]: Spent 242.00 ms on a formula simplification. DAG size of input: 522 DAG size of output: 407
Garbage collection #1: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #2: 317 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 317 to 631
Garbage collection #3: 631 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 631 to 1259
Garbage collection #4: 1259 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1259 to 2503
Garbage collection #5: 2503 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2503 to 5003
Garbage collection #6: 5003 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 5003 to 9973
Garbage collection #7: 9973 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 9973 to 19937
Garbage collection #1: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #2: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #3: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #4: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #5: 1327 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1327 to 2647
Garbage collection #6: 2647 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2647 to 5281
[2020-11-25 18:37:23,982 WARN  L188               SmtUtils]: Spent 284.00 ms on a formula simplification that was a NOOP. DAG size: 663
Garbage collection #1: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #2: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #3: 1093 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1093 to 2179
Garbage collection #4: 2179 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2179 to 4357
Garbage collection #5: 4357 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4357 to 8713
Garbage collection #6: 8713 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 8713 to 17419
Garbage collection #7: 17419 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17419 to 34819
Garbage collection #8: 34819 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 34819 to 69623
[2020-11-25 18:37:24,158 WARN  L188               SmtUtils]: Spent 167.00 ms on a formula simplification that was a NOOP. DAG size: 521
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #1: 97 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3019 to 6037
Garbage collection #7: 6037 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 6037 to 12073
Garbage collection #1: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #2: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #3: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #4: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #5: 1327 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1327 to 2647
Garbage collection #6: 2647 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2647 to 5281
Garbage collection #7: 5281 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 5281 to 10559
Garbage collection #8: 10559 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 10559 to 21107
[2020-11-25 18:37:24,440 WARN  L188               SmtUtils]: Spent 173.00 ms on a formula simplification. DAG size of input: 230 DAG size of output: 226
[2020-11-25 18:37:24,742 WARN  L188               SmtUtils]: Spent 300.00 ms on a formula simplification that was a NOOP. DAG size: 601
Garbage collection #1: 233 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 233 to 463
Garbage collection #2: 463 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 463 to 919
Garbage collection #3: 919 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 919 to 1831
Garbage collection #4: 1831 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1831 to 3659
Garbage collection #5: 3659 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3659 to 7309
Garbage collection #6: 7309 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 7309 to 14593
Garbage collection #7: 14593 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 14593 to 29179
[2020-11-25 18:37:25,202 WARN  L188               SmtUtils]: Spent 440.00 ms on a formula simplification that was a NOOP. DAG size: 461
[2020-11-25 18:37:26,346 WARN  L188               SmtUtils]: Spent 1.14 s on a formula simplification. DAG size of input: 505 DAG size of output: 502
Garbage collection #1: 179 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 179 to 353
Garbage collection #2: 353 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 353 to 701
Garbage collection #3: 701 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 701 to 1399
Garbage collection #4: 1399 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1399 to 2797
Garbage collection #5: 2797 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2797 to 5591
Garbage collection #6: 5591 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 5591 to 11177
Garbage collection #7: 11177 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11177 to 22349
Garbage collection #8: 22349 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 22349 to 44687
Garbage collection #1: 97 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3019 to 6037
Garbage collection #7: 6037 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 6037 to 12073
Garbage collection #8: 12073 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 12073 to 24137
[2020-11-25 18:37:26,569 WARN  L188               SmtUtils]: Spent 201.00 ms on a formula simplification. DAG size of input: 272 DAG size of output: 268
[2020-11-25 18:37:27,174 WARN  L188               SmtUtils]: Spent 602.00 ms on a formula simplification that was a NOOP. DAG size: 720
Garbage collection #1: 293 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 293 to 577
Garbage collection #2: 577 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 577 to 1153
Garbage collection #3: 1153 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1153 to 2297
Garbage collection #4: 2297 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2297 to 4591
Garbage collection #5: 4591 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4591 to 9181
Garbage collection #6: 9181 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 9181 to 18353
Garbage collection #7: 18353 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 18353 to 36697
[2020-11-25 18:37:27,634 WARN  L188               SmtUtils]: Spent 445.00 ms on a formula simplification that was a NOOP. DAG size: 569
[2020-11-25 18:37:53,247 WARN  L188               SmtUtils]: Spent 25.61 s on a formula simplification. DAG size of input: 1575 DAG size of output: 1566
Garbage collection #1: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #2: 1327 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1327 to 2647
Garbage collection #3: 2647 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2647 to 5281
Garbage collection #4: 5281 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 5281 to 10559
Garbage collection #5: 10559 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 10559 to 21107
Garbage collection #6: 21107 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 21107 to 42209
Garbage collection #7: 42209 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 42209 to 84407
Garbage collection #8: 84407 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 84407 to 134401
Garbage collection #9: 134401 nodes / 0 free / 0.003s / 0.004s total
Resizing node table from 134401 to 184369
Garbage collection #10: 184369 nodes / 0 free / 0.004s / 0.008s total
Resizing node table from 184369 to 234361
Garbage collection #1: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #2: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #3: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #4: 1237 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1237 to 2473
Garbage collection #5: 2473 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2473 to 4943
Garbage collection #6: 4943 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4943 to 9883
Garbage collection #7: 9883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 9883 to 19763
[2020-11-25 18:37:54,253 WARN  L188               SmtUtils]: Spent 898.00 ms on a formula simplification. DAG size of input: 456 DAG size of output: 453
[2020-11-25 18:37:55,460 WARN  L188               SmtUtils]: Spent 1.10 s on a formula simplification that was a NOOP. DAG size: 766
Garbage collection #1: 271 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 271 to 541
Garbage collection #2: 541 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 541 to 1069
Garbage collection #3: 1069 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1069 to 2137
Garbage collection #4: 2137 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2137 to 4273
Garbage collection #5: 4273 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4273 to 8543
Garbage collection #6: 8543 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 8543 to 17077
Garbage collection #7: 17077 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17077 to 34147
Garbage collection #8: 34147 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 34147 to 68281
Garbage collection #1: 149 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 149 to 293
Garbage collection #2: 293 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 293 to 577
Garbage collection #3: 577 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 577 to 1153
Garbage collection #4: 1153 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1153 to 2297
Garbage collection #5: 2297 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2297 to 4591
Garbage collection #6: 4591 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4591 to 9181
Garbage collection #7: 9181 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 9181 to 18353
[2020-11-25 18:37:55,752 WARN  L188               SmtUtils]: Spent 275.00 ms on a formula simplification that was a NOOP. DAG size: 453
[2020-11-25 18:37:58,357 WARN  L188               SmtUtils]: Spent 2.60 s on a formula simplification. DAG size of input: 768 DAG size of output: 767
Garbage collection #1: 271 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 271 to 541
Garbage collection #2: 541 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 541 to 1069
Garbage collection #3: 1069 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1069 to 2137
Garbage collection #4: 2137 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2137 to 4273
Garbage collection #5: 4273 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4273 to 8543
Garbage collection #6: 8543 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 8543 to 17077
Garbage collection #7: 17077 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 17077 to 34147
Garbage collection #8: 34147 nodes / 0 free / 0.002s / 0.004s total
Resizing node table from 34147 to 68281
Garbage collection #1: 269 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 269 to 523
Garbage collection #2: 523 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 523 to 1039
Garbage collection #3: 1039 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1039 to 2069
Garbage collection #4: 2069 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2069 to 4133
Garbage collection #5: 4133 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4133 to 8263
Garbage collection #6: 8263 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 8263 to 16519
Garbage collection #7: 16519 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 16519 to 33037
Garbage collection #8: 33037 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 33037 to 66071
[2020-11-25 18:37:59,747 WARN  L188               SmtUtils]: Spent 1.36 s on a formula simplification that was a NOOP. DAG size: 763
[2020-11-25 18:37:59,790 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 18:37:59,838 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 18:37:59,854 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 06:37:59 BasicIcfg
[2020-11-25 18:37:59,854 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-25 18:37:59,855 INFO  L168              Benchmark]: Toolchain (without parser) took 139241.52 ms. Allocated memory was 1.0 GB in the beginning and 3.8 GB in the end (delta: 2.8 GB). Free memory was 913.7 MB in the beginning and 1.4 GB in the end (delta: -465.0 MB). Peak memory consumption was 2.8 GB. Max. memory is 15.3 GB.
[2020-11-25 18:37:59,855 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.15 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 18:37:59,855 INFO  L168              Benchmark]: Boogie Preprocessor took 162.71 ms. Allocated memory is still 1.0 GB. Free memory was 913.7 MB in the beginning and 892.3 MB in the end (delta: 21.5 MB). Peak memory consumption was 21.5 MB. Max. memory is 15.3 GB.
[2020-11-25 18:37:59,856 INFO  L168              Benchmark]: UtopiaSpecLang took 115.63 ms. Allocated memory is still 1.0 GB. Free memory was 892.3 MB in the beginning and 870.8 MB in the end (delta: 21.5 MB). Peak memory consumption was 21.5 MB. Max. memory is 15.3 GB.
[2020-11-25 18:37:59,856 INFO  L168              Benchmark]: Boogie Printer took 39.09 ms. Allocated memory is still 1.0 GB. Free memory was 870.8 MB in the beginning and 865.4 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 18:37:59,857 INFO  L168              Benchmark]: RCFGBuilder took 1241.66 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 57.1 MB). Free memory was 865.4 MB in the beginning and 839.9 MB in the end (delta: 25.5 MB). Peak memory consumption was 160.4 MB. Max. memory is 15.3 GB.
[2020-11-25 18:37:59,857 INFO  L168              Benchmark]: UtopiaLTL2Aut took 41.32 ms. Allocated memory is still 1.1 GB. Free memory was 839.9 MB in the beginning and 836.6 MB in the end (delta: 3.3 MB). Peak memory consumption was 3.3 MB. Max. memory is 15.3 GB.
[2020-11-25 18:37:59,857 INFO  L168              Benchmark]: BÃ¼chi Program Product took 2399.99 ms. Allocated memory was 1.1 GB in the beginning and 1.3 GB in the end (delta: 203.9 MB). Free memory was 836.6 MB in the beginning and 614.6 MB in the end (delta: 222.0 MB). Peak memory consumption was 468.7 MB. Max. memory is 15.3 GB.
[2020-11-25 18:37:59,858 INFO  L168              Benchmark]: BlockEncodingV2 took 388.29 ms. Allocated memory was 1.3 GB in the beginning and 1.6 GB in the end (delta: 267.9 MB). Free memory was 614.6 MB in the beginning and 1.2 GB in the end (delta: -588.2 MB). Peak memory consumption was 86.5 MB. Max. memory is 15.3 GB.
[2020-11-25 18:37:59,858 INFO  L168              Benchmark]: BuchiAutomizer took 134849.64 ms. Allocated memory was 1.6 GB in the beginning and 3.8 GB in the end (delta: 2.3 GB). Free memory was 1.2 GB in the beginning and 1.4 GB in the end (delta: -175.9 MB). Peak memory consumption was 2.6 GB. Max. memory is 15.3 GB.
[2020-11-25 18:37:59,862 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    14824 locations, 24993 edges
  - StatisticsResult: Encoded RCFG
    14704 locations, 24653 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.15 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 162.71 ms. Allocated memory is still 1.0 GB. Free memory was 913.7 MB in the beginning and 892.3 MB in the end (delta: 21.5 MB). Peak memory consumption was 21.5 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 115.63 ms. Allocated memory is still 1.0 GB. Free memory was 892.3 MB in the beginning and 870.8 MB in the end (delta: 21.5 MB). Peak memory consumption was 21.5 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 39.09 ms. Allocated memory is still 1.0 GB. Free memory was 870.8 MB in the beginning and 865.4 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * RCFGBuilder took 1241.66 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 57.1 MB). Free memory was 865.4 MB in the beginning and 839.9 MB in the end (delta: 25.5 MB). Peak memory consumption was 160.4 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 41.32 ms. Allocated memory is still 1.1 GB. Free memory was 839.9 MB in the beginning and 836.6 MB in the end (delta: 3.3 MB). Peak memory consumption was 3.3 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 2399.99 ms. Allocated memory was 1.1 GB in the beginning and 1.3 GB in the end (delta: 203.9 MB). Free memory was 836.6 MB in the beginning and 614.6 MB in the end (delta: 222.0 MB). Peak memory consumption was 468.7 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 388.29 ms. Allocated memory was 1.3 GB in the beginning and 1.6 GB in the end (delta: 267.9 MB). Free memory was 614.6 MB in the beginning and 1.2 GB in the end (delta: -588.2 MB). Peak memory consumption was 86.5 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 134849.64 ms. Allocated memory was 1.6 GB in the beginning and 3.8 GB in the end (delta: 2.3 GB). Free memory was 1.2 GB in the beginning and 1.4 GB in the end (delta: -175.9 MB). Peak memory consumption was 2.6 GB. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    6543 locations, 8022 edges
  - StatisticsResult: BuchiProgram size
    14824 locations, 24993 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 11 terminating modules (11 trivial, 0 deterministic, 0 nondeterministic) and one nonterminating remainder module.11 modules have a trivial ranking function, the largest among these consists of 44 locations. The remainder module has 10543 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 134.7s and 12 iterations.  TraceHistogramMax:2. Analysis of lassos took 44.9s. Construction of modules took 70.6s. BÃ¼chi inclusion checks took 15.9s. Highest rank in rank-based complementation 0. Minimization of det autom 11. Minimization of nondet autom 0. Automata minimization 1.5s AutomataMinimizationTime, 11 MinimizatonAttempts, 14794 StatesRemovedByMinimization, 10 NontrivialMinimizations. Non-live state removal took 1.0s Buchi closure took 0.0s. Biggest automaton had 20286 states and ocurred in iteration 8.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 162344 SDtfs, 164273 SDslu, 604095 SDs, 0 SdLazy, 842423 SolverSat, 24870 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 70.6s Time	LassoAnalysisResults: nont1 unkn0 SFLI0 SFLT0 conc0 concLT0 SILN0 SILU11 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - TransactionCounterexample: Violation of LTL property LTL
    Found an infinite, lasso-shaped execution that violates the LTL property LTL.
Stem:
address(2500000022) = (new ITAMToken)({from : 2500000018, _firstMaster : 2500000010, _secondMaster : 2500000009, _thirdMaster : 2500000029, _owner : 2500000008, _gameMaster : 2500000028, _strategicSaleAddress : 2500000006, _privateSaleAddress : 2500000017, _publicSaleAddress : 2500000030, _teamAddress : 2500000027, _advisorAddress : 2500000025, _marketingAddress : 2500000003, _ecoAddress : 2500000001, _inAppAddress : 2500000021});
[L1968]               havoc __exception;
[L1969]               revert := false;
[L1970]   COND FALSE  !(__exception)
[L2040]   CALL        call ITAMToken_ITAMToken__success(this, msgsender_MSG, msgvalue_MSG, _firstMaster_s868, _secondMaster_s868, _thirdMaster_s868, _owner_s868, _gameMaster_s868, _strategicSaleAddress_s868, _privateSaleAddress_s868, _publicSaleAddress_s868, _teamAddress_s868, _advisorAddress_s868, _marketingAddress_s868, _ecoAddress_s868, _inAppAddress_s868);
[L10848]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L10138]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L10118]              assume msgsender_MSG != null;
[L10119]              Balance[this] := 0;
[L10120]              _balances_ERC20[this] := zeroRefintArr();
[L10121]              sum__balances0[this] := 0;
[L10122]              _allowed_ERC20[this] := zeroRefRefintArr();
[L10123]              sum__allowed1[this] := 0;
[L10124]              _totalSupply_ERC20[this] := 0;
[L10138]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L10139]  COND FALSE  !(revert)
[L10848]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L10849]  COND FALSE  !(revert)
[L10852]  CALL        call ERC20Capped_ERC20Capped__success(this, msgsender_MSG, msgvalue_MSG, TOTAL_CAP_ITAMToken[this]);
[L10602]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L10138]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L10118]              assume msgsender_MSG != null;
[L10119]              Balance[this] := 0;
[L10120]              _balances_ERC20[this] := zeroRefintArr();
[L10121]              sum__balances0[this] := 0;
[L10122]              _allowed_ERC20[this] := zeroRefRefintArr();
[L10123]              sum__allowed1[this] := 0;
[L10124]              _totalSupply_ERC20[this] := 0;
[L10138]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L10139]  COND FALSE  !(revert)
[L10602]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L10603]  COND FALSE  !(revert)
[L10606]  CALL        call ERC20Capped_ERC20Capped_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, cap_s528);
[L10577]              assume msgsender_MSG != null;
[L10578]              Balance[this] := 0;
[L10579]              _cap_ERC20Capped[this] := 0;
[L10581]  COND FALSE  !(!(cap_s528 > 0))
[L10585]              _cap_ERC20Capped[this] := cap_s528;
[L10606]  RET         call ERC20Capped_ERC20Capped_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, cap_s528);
[L10607]  COND FALSE  !(revert)
[L10852]  RET         call ERC20Capped_ERC20Capped__success(this, msgsender_MSG, msgvalue_MSG, TOTAL_CAP_ITAMToken[this]);
[L10853]  COND FALSE  !(revert)
[L10856]  CALL        call ITAMToken_ITAMToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, _firstMaster_s868, _secondMaster_s868, _thirdMaster_s868, _owner_s868, _gameMaster_s868, _strategicSaleAddress_s868, _privateSaleAddress_s868, _publicSaleAddress_s868, _teamAddress_s868, _advisorAddress_s868, _marketingAddress_s868, _ecoAddress_s868, _inAppAddress_s868);
[L10771]              assume msgsender_MSG != null;
[L10772]              Balance[this] := 0;
[L10773]              name_ITAMToken[this] := -1908028786;
[L10774]              symbol_ITAMToken[this] := -1908028786;
[L10775]              decimals_ITAMToken[this] := 18;
[L10776]              TOTAL_CAP_ITAMToken[this] := 2500000000;
[L10777]              firstMaster_ITAMToken[this] := null;
[L10778]              secondMaster_ITAMToken[this] := null;
[L10779]              thirdMaster_ITAMToken[this] := null;
[L10780]              decidedOwner_ITAMToken[this] := zeroRefRefboolArr();
[L10781]              owner_ITAMToken[this] := null;
[L10782]              gameMaster_ITAMToken[this] := null;
[L10783]              blackLists_ITAMToken[this] := zeroRefboolArr();
[L10784]              unlockCount_ITAMToken[this] := 0;
[L10785]              strategicSaleAddress_ITAMToken[this] := null;
[L10786]              Length_strategicSaleReleaseCaps_ITAMToken_lvl0[this] := 0;
[L10787]              strategicSaleReleaseCaps_ITAMToken[this] := zerointintArr();
[L10788]              sum_strategicSaleReleaseCaps4[this] := 0;
[L10789]              privateSaleAddress_ITAMToken[this] := null;
[L10790]              Length_privateSaleReleaseCaps_ITAMToken_lvl0[this] := 0;
[L10791]              privateSaleReleaseCaps_ITAMToken[this] := zerointintArr();
[L10792]              sum_privateSaleReleaseCaps5[this] := 0;
[L10793]              publicSaleAddress_ITAMToken[this] := null;
[L10794]              publicSaleReleaseCap_ITAMToken[this] := 200000000;
[L10795]              teamAddress_ITAMToken[this] := null;
[L10796]              Length_teamReleaseCaps_ITAMToken_lvl0[this] := 0;
[L10797]              teamReleaseCaps_ITAMToken[this] := zerointintArr();
[L10798]              sum_teamReleaseCaps6[this] := 0;
[L10799]              advisorAddress_ITAMToken[this] := null;
[L10800]              Length_advisorReleaseCaps_ITAMToken_lvl0[this] := 0;
[L10801]              advisorReleaseCaps_ITAMToken[this] := zerointintArr();
[L10802]              sum_advisorReleaseCaps7[this] := 0;
[L10803]              marketingAddress_ITAMToken[this] := null;
[L10804]              Length_marketingReleaseCaps_ITAMToken_lvl0[this] := 0;
[L10805]              marketingReleaseCaps_ITAMToken[this] := zerointintArr();
[L10806]              sum_marketingReleaseCaps8[this] := 0;
[L10807]              ecoAddress_ITAMToken[this] := null;
[L10808]              Length_ecoReleaseCaps_ITAMToken_lvl0[this] := 0;
[L10809]              ecoReleaseCaps_ITAMToken[this] := zerointintArr();
[L10810]              sum_ecoReleaseCaps9[this] := 0;
[L10811]              inAppAddress_ITAMToken[this] := null;
[L10812]              items_ITAMToken[this] := zerointintRefintArr();
[L10813]              sum_items10[this] := 0;
[L10815]              firstMaster_ITAMToken[this] := _firstMaster_s868;
[L10816]              secondMaster_ITAMToken[this] := _secondMaster_s868;
[L10817]              thirdMaster_ITAMToken[this] := _thirdMaster_s868;
[L10818]              owner_ITAMToken[this] := _owner_s868;
[L10819]              gameMaster_ITAMToken[this] := _gameMaster_s868;
[L10820]              strategicSaleAddress_ITAMToken[this] := _strategicSaleAddress_s868;
[L10821]              privateSaleAddress_ITAMToken[this] := _privateSaleAddress_s868;
[L10822]              publicSaleAddress_ITAMToken[this] := _publicSaleAddress_s868;
[L10823]              teamAddress_ITAMToken[this] := _teamAddress_s868;
[L10824]              advisorAddress_ITAMToken[this] := _advisorAddress_s868;
[L10825]              marketingAddress_ITAMToken[this] := _marketingAddress_s868;
[L10826]              ecoAddress_ITAMToken[this] := _ecoAddress_s868;
[L10827]              inAppAddress_ITAMToken[this] := _inAppAddress_s868;
[L10856]  RET         call ITAMToken_ITAMToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, _firstMaster_s868, _secondMaster_s868, _thirdMaster_s868, _owner_s868, _gameMaster_s868, _strategicSaleAddress_s868, _privateSaleAddress_s868, _publicSaleAddress_s868, _teamAddress_s868, _advisorAddress_s868, _marketingAddress_s868, _ecoAddress_s868, _inAppAddress_s868);
[L10857]  COND FALSE  !(revert)
[L2040]   RET         call ITAMToken_ITAMToken__success(this, msgsender_MSG, msgvalue_MSG, _firstMaster_s868, _secondMaster_s868, _thirdMaster_s868, _owner_s868, _gameMaster_s868, _strategicSaleAddress_s868, _privateSaleAddress_s868, _publicSaleAddress_s868, _teamAddress_s868, _advisorAddress_s868, _marketingAddress_s868, _ecoAddress_s868, _inAppAddress_s868);
[L2041]               assume !revert && gas >= 0;
[L14669]  RET         call ITAMToken_ITAMToken(this, msgsender_MSG, msgvalue_MSG, _firstMaster_s868, _secondMaster_s868, _thirdMaster_s868, _owner_s868, _gameMaster_s868, _strategicSaleAddress_s868, _privateSaleAddress_s868, _publicSaleAddress_s868, _teamAddress_s868, _advisorAddress_s868, _marketingAddress_s868, _ecoAddress_s868, _inAppAddress_s868);
ITAMToken(2500000022).addToBlackList~address.gas(3979002)({from : 2500000008, _to : 2500000012});
[L3327]               havoc __exception;
[L3328]               revert := false;
[L3329]   COND FALSE  !(__exception)
[L3399]   CALL        call addToBlackList~address_ITAMToken__success(this, msgsender_MSG, msgvalue_MSG, _to_s1264);
[L11308]  CALL        call onlyOwner_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L13756]  COND FALSE  !(!(msgsender_MSG == owner_ITAMToken[this]))
[L11308]  RET         call onlyOwner_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L11309]  COND FALSE  !(revert)
[L11312]  COND FALSE  !(!!blackLists_ITAMToken[this][_to_s1264])
[L11316]              blackLists_ITAMToken[this][_to_s1264] := true;
[L3399]   RET         call addToBlackList~address_ITAMToken__success(this, msgsender_MSG, msgvalue_MSG, _to_s1264);
[L3400]               assume !revert && gas >= 0;
[L14593]  RET         call addToBlackList~address_ITAMToken(this, msgsender_MSG, msgvalue_MSG, _to_s1264);
ITAMToken(2500000022).transfer~address~uint256.gas(3979003)({from : 2500000012, _to : 2500000012, _value : 0});
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == _to_s941 && _value_s941 <= _balances_ERC20[this][msgsender_MSG]) && _value_s941 >= 0) && _value_s941 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][_to_s941] >= 0) && _balances_ERC20[this][_to_s941] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_ITAMToken0 := true;
[L2]                 call_transfer_ITAMToken0 := false;
[L2]                 revert := revert_hold;
[L2267]              havoc __exception;
[L2268]              revert := false;
[L2269]   COND TRUE  __exception
[L2270]              __tmp__Balance := Balance;
[L2271]              __tmp__DType := DType;
[L2272]              __tmp__Alloc := Alloc;
[L2273]              __tmp__balance_ADDR := balance_ADDR;
[L2274]              __tmp__M_Ref_int := M_Ref_int;
[L2275]              __tmp__sum__balances0 := sum__balances0;
[L2276]              __tmp__alloc__allowed_ERC20_lvl0 := alloc__allowed_ERC20_lvl0;
[L2277]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L2278]              __tmp__sum__allowed1 := sum__allowed1;
[L2279]              __tmp__M_Ref_bool := M_Ref_bool;
[L2280]              __tmp__alloc_decidedOwner_ITAMToken_lvl0 := alloc_decidedOwner_ITAMToken_lvl0;
[L2281]              __tmp__sum_decidedOwner2 := sum_decidedOwner2;
[L2282]              __tmp__sum_blackLists3 := sum_blackLists3;
[L2283]              __tmp__alloc_items_ITAMToken_lvl1 := alloc_items_ITAMToken_lvl1;
[L2284]              __tmp__M_int_Ref := M_int_Ref;
[L2285]              __tmp__alloc_items_ITAMToken_lvl0 := alloc_items_ITAMToken_lvl0;
[L2286]              __tmp__sum_items10 := sum_items10;
[L2287]              __tmp__M_int_int := M_int_int;
[L2288]              __tmp__sum_strategicSaleReleaseCaps4 := sum_strategicSaleReleaseCaps4;
[L2289]              __tmp__sum_privateSaleReleaseCaps5 := sum_privateSaleReleaseCaps5;
[L2290]              __tmp__sum_teamReleaseCaps6 := sum_teamReleaseCaps6;
[L2291]              __tmp__sum_advisorReleaseCaps7 := sum_advisorReleaseCaps7;
[L2292]              __tmp__sum_marketingReleaseCaps8 := sum_marketingReleaseCaps8;
[L2293]              __tmp__sum_ecoReleaseCaps9 := sum_ecoReleaseCaps9;
[L2294]              __tmp__sum := sum;
[L2295]              __tmp__Length := Length;
[L2296]              __tmp__now := now;
[L2297]              __tmp___balances_ERC20 := _balances_ERC20;
[L2298]              __tmp___allowed_ERC20 := _allowed_ERC20;
[L2299]              __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L2300]              __tmp___cap_ERC20Capped := _cap_ERC20Capped;
[L2301]              __tmp__name_ITAMToken := name_ITAMToken;
[L2302]              __tmp__symbol_ITAMToken := symbol_ITAMToken;
[L2303]              __tmp__decimals_ITAMToken := decimals_ITAMToken;
[L2304]              __tmp__TOTAL_CAP_ITAMToken := TOTAL_CAP_ITAMToken;
[L2305]              __tmp__firstMaster_ITAMToken := firstMaster_ITAMToken;
[L2306]              __tmp__secondMaster_ITAMToken := secondMaster_ITAMToken;
[L2307]              __tmp__thirdMaster_ITAMToken := thirdMaster_ITAMToken;
[L2308]              __tmp__decidedOwner_ITAMToken := decidedOwner_ITAMToken;
[L2309]              __tmp__owner_ITAMToken := owner_ITAMToken;
[L2310]              __tmp__gameMaster_ITAMToken := gameMaster_ITAMToken;
[L2311]              __tmp__blackLists_ITAMToken := blackLists_ITAMToken;
[L2312]              __tmp__unlockCount_ITAMToken := unlockCount_ITAMToken;
[L2313]              __tmp__strategicSaleAddress_ITAMToken := strategicSaleAddress_ITAMToken;
[L2314]              __tmp__Length_strategicSaleReleaseCaps_ITAMToken_lvl0 := Length_strategicSaleReleaseCaps_ITAMToken_lvl0;
[L2315]              __tmp__strategicSaleReleaseCaps_ITAMToken := strategicSaleReleaseCaps_ITAMToken;
[L2316]              __tmp__privateSaleAddress_ITAMToken := privateSaleAddress_ITAMToken;
[L2317]              __tmp__Length_privateSaleReleaseCaps_ITAMToken_lvl0 := Length_privateSaleReleaseCaps_ITAMToken_lvl0;
[L2318]              __tmp__privateSaleReleaseCaps_ITAMToken := privateSaleReleaseCaps_ITAMToken;
[L2319]              __tmp__publicSaleAddress_ITAMToken := publicSaleAddress_ITAMToken;
[L2320]              __tmp__publicSaleReleaseCap_ITAMToken := publicSaleReleaseCap_ITAMToken;
[L2321]              __tmp__teamAddress_ITAMToken := teamAddress_ITAMToken;
[L2322]              __tmp__Length_teamReleaseCaps_ITAMToken_lvl0 := Length_teamReleaseCaps_ITAMToken_lvl0;
[L2323]              __tmp__teamReleaseCaps_ITAMToken := teamReleaseCaps_ITAMToken;
[L2324]              __tmp__advisorAddress_ITAMToken := advisorAddress_ITAMToken;
[L2325]              __tmp__Length_advisorReleaseCaps_ITAMToken_lvl0 := Length_advisorReleaseCaps_ITAMToken_lvl0;
[L2326]              __tmp__advisorReleaseCaps_ITAMToken := advisorReleaseCaps_ITAMToken;
[L2327]              __tmp__marketingAddress_ITAMToken := marketingAddress_ITAMToken;
[L2328]              __tmp__Length_marketingReleaseCaps_ITAMToken_lvl0 := Length_marketingReleaseCaps_ITAMToken_lvl0;
[L2329]              __tmp__marketingReleaseCaps_ITAMToken := marketingReleaseCaps_ITAMToken;
[L2330]              __tmp__ecoAddress_ITAMToken := ecoAddress_ITAMToken;
[L2331]              __tmp__Length_ecoReleaseCaps_ITAMToken_lvl0 := Length_ecoReleaseCaps_ITAMToken_lvl0;
[L2332]              __tmp__ecoReleaseCaps_ITAMToken := ecoReleaseCaps_ITAMToken;
[L2333]              __tmp__inAppAddress_ITAMToken := inAppAddress_ITAMToken;
[L2334]              __tmp__erc20_ITAMToken := erc20_ITAMToken;
[L2335]              __tmp__items_ITAMToken := items_ITAMToken;
[L2336]   CALL       call __ret_0_ := transfer~address~uint256_ITAMToken__fail(this, msgsender_MSG, msgvalue_MSG, _to_s941, _value_s941);
[L10884]  CALL       call onlyNotBlackList_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L13796]  COND TRUE  !!__tmp__blackLists_ITAMToken[this][msgsender_MSG]
[L13797]             revert := true;
[L10884]  RET        call onlyNotBlackList_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L10885]  COND TRUE  revert
[L2336]   RET        call __ret_0_ := transfer~address~uint256_ITAMToken__fail(this, msgsender_MSG, msgvalue_MSG, _to_s941, _value_s941);
[L2337]              assume revert || gas < 0;
[L14356]  RET        call __ret_0_transfer := transfer~address~uint256_ITAMToken(this, msgsender_MSG, msgvalue_MSG, _to_s941, _value_s941);

Loop:
ITAMToken(2500000022).setGameMaster~address.gas(3979001)({from : 2500000013, _gameMaster : 2500000020});
[L2117]              havoc __exception;
[L2118]              revert := false;
[L2119]   COND TRUE  __exception
[L2120]              __tmp__Balance := Balance;
[L2121]              __tmp__DType := DType;
[L2122]              __tmp__Alloc := Alloc;
[L2123]              __tmp__balance_ADDR := balance_ADDR;
[L2124]              __tmp__M_Ref_int := M_Ref_int;
[L2125]              __tmp__sum__balances0 := sum__balances0;
[L2126]              __tmp__alloc__allowed_ERC20_lvl0 := alloc__allowed_ERC20_lvl0;
[L2127]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L2128]              __tmp__sum__allowed1 := sum__allowed1;
[L2129]              __tmp__M_Ref_bool := M_Ref_bool;
[L2130]              __tmp__alloc_decidedOwner_ITAMToken_lvl0 := alloc_decidedOwner_ITAMToken_lvl0;
[L2131]              __tmp__sum_decidedOwner2 := sum_decidedOwner2;
[L2132]              __tmp__sum_blackLists3 := sum_blackLists3;
[L2133]              __tmp__alloc_items_ITAMToken_lvl1 := alloc_items_ITAMToken_lvl1;
[L2134]              __tmp__M_int_Ref := M_int_Ref;
[L2135]              __tmp__alloc_items_ITAMToken_lvl0 := alloc_items_ITAMToken_lvl0;
[L2136]              __tmp__sum_items10 := sum_items10;
[L2137]              __tmp__M_int_int := M_int_int;
[L2138]              __tmp__sum_strategicSaleReleaseCaps4 := sum_strategicSaleReleaseCaps4;
[L2139]              __tmp__sum_privateSaleReleaseCaps5 := sum_privateSaleReleaseCaps5;
[L2140]              __tmp__sum_teamReleaseCaps6 := sum_teamReleaseCaps6;
[L2141]              __tmp__sum_advisorReleaseCaps7 := sum_advisorReleaseCaps7;
[L2142]              __tmp__sum_marketingReleaseCaps8 := sum_marketingReleaseCaps8;
[L2143]              __tmp__sum_ecoReleaseCaps9 := sum_ecoReleaseCaps9;
[L2144]              __tmp__sum := sum;
[L2145]              __tmp__Length := Length;
[L2146]              __tmp__now := now;
[L2147]              __tmp___balances_ERC20 := _balances_ERC20;
[L2148]              __tmp___allowed_ERC20 := _allowed_ERC20;
[L2149]              __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L2150]              __tmp___cap_ERC20Capped := _cap_ERC20Capped;
[L2151]              __tmp__name_ITAMToken := name_ITAMToken;
[L2152]              __tmp__symbol_ITAMToken := symbol_ITAMToken;
[L2153]              __tmp__decimals_ITAMToken := decimals_ITAMToken;
[L2154]              __tmp__TOTAL_CAP_ITAMToken := TOTAL_CAP_ITAMToken;
[L2155]              __tmp__firstMaster_ITAMToken := firstMaster_ITAMToken;
[L2156]              __tmp__secondMaster_ITAMToken := secondMaster_ITAMToken;
[L2157]              __tmp__thirdMaster_ITAMToken := thirdMaster_ITAMToken;
[L2158]              __tmp__decidedOwner_ITAMToken := decidedOwner_ITAMToken;
[L2159]              __tmp__owner_ITAMToken := owner_ITAMToken;
[L2160]              __tmp__gameMaster_ITAMToken := gameMaster_ITAMToken;
[L2161]              __tmp__blackLists_ITAMToken := blackLists_ITAMToken;
[L2162]              __tmp__unlockCount_ITAMToken := unlockCount_ITAMToken;
[L2163]              __tmp__strategicSaleAddress_ITAMToken := strategicSaleAddress_ITAMToken;
[L2164]              __tmp__Length_strategicSaleReleaseCaps_ITAMToken_lvl0 := Length_strategicSaleReleaseCaps_ITAMToken_lvl0;
[L2165]              __tmp__strategicSaleReleaseCaps_ITAMToken := strategicSaleReleaseCaps_ITAMToken;
[L2166]              __tmp__privateSaleAddress_ITAMToken := privateSaleAddress_ITAMToken;
[L2167]              __tmp__Length_privateSaleReleaseCaps_ITAMToken_lvl0 := Length_privateSaleReleaseCaps_ITAMToken_lvl0;
[L2168]              __tmp__privateSaleReleaseCaps_ITAMToken := privateSaleReleaseCaps_ITAMToken;
[L2169]              __tmp__publicSaleAddress_ITAMToken := publicSaleAddress_ITAMToken;
[L2170]              __tmp__publicSaleReleaseCap_ITAMToken := publicSaleReleaseCap_ITAMToken;
[L2171]              __tmp__teamAddress_ITAMToken := teamAddress_ITAMToken;
[L2172]              __tmp__Length_teamReleaseCaps_ITAMToken_lvl0 := Length_teamReleaseCaps_ITAMToken_lvl0;
[L2173]              __tmp__teamReleaseCaps_ITAMToken := teamReleaseCaps_ITAMToken;
[L2174]              __tmp__advisorAddress_ITAMToken := advisorAddress_ITAMToken;
[L2175]              __tmp__Length_advisorReleaseCaps_ITAMToken_lvl0 := Length_advisorReleaseCaps_ITAMToken_lvl0;
[L2176]              __tmp__advisorReleaseCaps_ITAMToken := advisorReleaseCaps_ITAMToken;
[L2177]              __tmp__marketingAddress_ITAMToken := marketingAddress_ITAMToken;
[L2178]              __tmp__Length_marketingReleaseCaps_ITAMToken_lvl0 := Length_marketingReleaseCaps_ITAMToken_lvl0;
[L2179]              __tmp__marketingReleaseCaps_ITAMToken := marketingReleaseCaps_ITAMToken;
[L2180]              __tmp__ecoAddress_ITAMToken := ecoAddress_ITAMToken;
[L2181]              __tmp__Length_ecoReleaseCaps_ITAMToken_lvl0 := Length_ecoReleaseCaps_ITAMToken_lvl0;
[L2182]              __tmp__ecoReleaseCaps_ITAMToken := ecoReleaseCaps_ITAMToken;
[L2183]              __tmp__inAppAddress_ITAMToken := inAppAddress_ITAMToken;
[L2184]              __tmp__erc20_ITAMToken := erc20_ITAMToken;
[L2185]              __tmp__items_ITAMToken := items_ITAMToken;
[L2186]   CALL       call setGameMaster~address_ITAMToken__fail(this, msgsender_MSG, msgvalue_MSG, _gameMaster_s923);
[L10864]  CALL       call onlyOwner_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L13748]  COND TRUE  !(msgsender_MSG == __tmp__owner_ITAMToken[this])
[L13749]             revert := true;
[L10864]  RET        call onlyOwner_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L10865]  COND TRUE  revert
[L2186]   RET        call setGameMaster~address_ITAMToken__fail(this, msgsender_MSG, msgvalue_MSG, _gameMaster_s923);
[L2187]              assume revert || gas < 0;
[L14562]  RET        call setGameMaster~address_ITAMToken(this, msgsender_MSG, msgvalue_MSG, _gameMaster_s923);

End of lasso representation.
RESULT: Ultimate could not prove your program: Toolchain returned no result.
Received shutdown request...
