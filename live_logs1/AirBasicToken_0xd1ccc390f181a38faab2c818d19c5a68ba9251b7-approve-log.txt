This is Ultimate 0.1.24-f1553f5-m
[2020-11-24 23:40:34,487 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-24 23:40:34,488 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-24 23:40:34,501 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-24 23:40:34,501 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-24 23:40:34,502 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-24 23:40:34,503 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-24 23:40:34,504 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-24 23:40:34,506 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-24 23:40:34,507 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-24 23:40:34,508 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-24 23:40:34,508 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-24 23:40:34,509 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-24 23:40:34,509 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-24 23:40:34,510 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-24 23:40:34,511 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-24 23:40:34,512 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-24 23:40:34,513 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-24 23:40:34,514 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-24 23:40:34,515 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-24 23:40:34,516 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-24 23:40:34,517 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-24 23:40:34,519 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-24 23:40:34,519 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-24 23:40:34,519 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-24 23:40:34,520 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-24 23:40:34,520 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-24 23:40:34,520 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-24 23:40:34,521 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-24 23:40:34,521 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-24 23:40:34,521 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-24 23:40:34,522 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-24 23:40:34,522 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-24 23:40:34,523 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-24 23:40:34,524 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-24 23:40:34,524 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-24 23:40:34,524 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-24 23:40:34,525 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-24 23:40:34,525 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-24 23:40:34,525 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-24 23:40:34,526 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-24 23:40:34,526 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-24 23:40:34,534 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-24 23:40:34,534 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-24 23:40:34,535 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-24 23:40:34,535 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-24 23:40:34,536 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-24 23:40:34,536 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-24 23:40:34,536 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-24 23:40:34,536 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-24 23:40:34,536 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-24 23:40:34,536 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-24 23:40:34,536 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-24 23:40:34,536 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-24 23:40:34,536 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-24 23:40:34,537 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-24 23:40:34,537 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-24 23:40:34,537 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-24 23:40:34,537 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-24 23:40:34,537 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-24 23:40:34,537 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-24 23:40:34,537 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-24 23:40:34,537 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-24 23:40:34,537 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-24 23:40:34,537 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-24 23:40:34,538 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-24 23:40:34,538 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-24 23:40:34,538 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-24 23:40:34,561 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-24 23:40:34,574 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-24 23:40:34,577 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-24 23:40:34,578 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-24 23:40:34,578 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-24 23:40:34,579 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/AirBasicToken_0xd1ccc390f181a38faab2c818d19c5a68ba9251b7_approve.bpl
[2020-11-24 23:40:34,579 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/AirBasicToken_0xd1ccc390f181a38faab2c818d19c5a68ba9251b7_approve.bpl'
[2020-11-24 23:40:34,684 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-24 23:40:34,685 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-24 23:40:34,685 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-24 23:40:34,685 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-24 23:40:34,685 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-24 23:40:34,703 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "AirBasicToken_0xd1ccc390f181a38faab2c818d19c5a68ba9251b7_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 11:40:34" (1/1) ...
[2020-11-24 23:40:34,705 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "AirBasicToken_0xd1ccc390f181a38faab2c818d19c5a68ba9251b7_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 11:40:34" (1/1) ...
[2020-11-24 23:40:34,743 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "AirBasicToken_0xd1ccc390f181a38faab2c818d19c5a68ba9251b7_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 11:40:34" (1/1) ...
[2020-11-24 23:40:34,744 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "AirBasicToken_0xd1ccc390f181a38faab2c818d19c5a68ba9251b7_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 11:40:34" (1/1) ...
[2020-11-24 23:40:34,769 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "AirBasicToken_0xd1ccc390f181a38faab2c818d19c5a68ba9251b7_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 11:40:34" (1/1) ...
[2020-11-24 23:40:34,782 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "AirBasicToken_0xd1ccc390f181a38faab2c818d19c5a68ba9251b7_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 11:40:34" (1/1) ...
[2020-11-24 23:40:34,793 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "AirBasicToken_0xd1ccc390f181a38faab2c818d19c5a68ba9251b7_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 11:40:34" (1/1) ...
[2020-11-24 23:40:34,805 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-24 23:40:34,806 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-24 23:40:34,806 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-24 23:40:34,808 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-24 23:40:34,812 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "AirBasicToken_0xd1ccc390f181a38faab2c818d19c5a68ba9251b7_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 11:40:34" (1/1) ...
[2020-11-24 23:40:34,832 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(StandardToken.approve(spender, value), p1 != msg.sender || p2 != spender) ==> <>(finished(StandardToken.approve(spender, value), return == true && allowed_StandardToken[this][msg.sender][spender] == value &&  totalSupply__BasicToken[this] == old(totalSupply__BasicToken[this]) && balances_BasicToken[this] == old(balances_BasicToken[this]) && allowed_StandardToken[this][p1][p2] == old(allowed_StandardToken[this][p1][p2]) && balanceLocked_AirBasicToken[this] == old(balanceLocked_AirBasicToken[this]) && amountRaised_AirBasicToken[this] == old(amountRaised_AirBasicToken[this]) && buyPrice_AirBasicToken[this] == old(buyPrice_AirBasicToken[this]) && crowdsaleClosed_AirBasicToken[this] == old(crowdsaleClosed_AirBasicToken[this]) && transferEnabled_AirBasicToken[this] == old(transferEnabled_AirBasicToken[this]) && owner_Ownable[this] == old(owner_Ownable[this]))))
[2020-11-24 23:40:34,837 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(StandardToken.approve(spender, value), p1 != msg.sender || p2 != spender) ==> <>(finished(StandardToken.approve(spender, value), return == true && allowed_StandardToken[this][msg.sender][spender] == value &&  totalSupply__BasicToken[this] == old(totalSupply__BasicToken[this]) && balances_BasicToken[this] == old(balances_BasicToken[this]) && allowed_StandardToken[this][p1][p2] == old(allowed_StandardToken[this][p1][p2]) && balanceLocked_AirBasicToken[this] == old(balanceLocked_AirBasicToken[this]) && amountRaised_AirBasicToken[this] == old(amountRaised_AirBasicToken[this]) && buyPrice_AirBasicToken[this] == old(buyPrice_AirBasicToken[this]) && crowdsaleClosed_AirBasicToken[this] == old(crowdsaleClosed_AirBasicToken[this]) && transferEnabled_AirBasicToken[this] == old(transferEnabled_AirBasicToken[this]) && owner_Ownable[this] == old(owner_Ownable[this]))))
[2020-11-24 23:40:34,845 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(StandardToken.approve(spender, value), p1 != msg.sender || p2 != spender) ==> <>(finished(StandardToken.approve(spender, value), return == true && allowed_StandardToken[this][msg.sender][spender] == value &&  totalSupply__BasicToken[this] == old(totalSupply__BasicToken[this]) && balances_BasicToken[this] == old(balances_BasicToken[this]) && allowed_StandardToken[this][p1][p2] == old(allowed_StandardToken[this][p1][p2]) && balanceLocked_AirBasicToken[this] == old(balanceLocked_AirBasicToken[this]) && amountRaised_AirBasicToken[this] == old(amountRaised_AirBasicToken[this]) && buyPrice_AirBasicToken[this] == old(buyPrice_AirBasicToken[this]) && crowdsaleClosed_AirBasicToken[this] == old(crowdsaleClosed_AirBasicToken[this]) && transferEnabled_AirBasicToken[this] == old(transferEnabled_AirBasicToken[this]) && owner_Ownable[this] == old(owner_Ownable[this]))))
[2020-11-24 23:40:34,851 INFO  L636   opiaSpecLangObserver]: Parsed ( p1!=msg.sender || p2!=_spender_s470 ) to BinaryExpression[LOGICOR,BinaryExpression[COMPNEQ,IdentifierExpression[p1,GLOBAL],IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,approve~address~uint256_StandardToken>]],BinaryExpression[COMPNEQ,IdentifierExpression[p2,GLOBAL],IdentifierExpression[_spender_s470,<IMPLEMENTATION_INPARAM,approve~address~uint256_StandardToken>]]]
[2020-11-24 23:40:34,854 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( ( ( __ret_0_==true && allowed_StandardToken[this][msg.sender][_spender_s470]==_value_s470 ) && totalSupply__BasicToken[this]==( old(totalSupply__BasicToken[this]) ) ) && balances_BasicToken[this]==( old(balances_BasicToken[this]) ) ) && allowed_StandardToken[this][p1][p2]==( old(allowed_StandardToken[this][p1][p2]) ) ) && balanceLocked_AirBasicToken[this]==( old(balanceLocked_AirBasicToken[this]) ) ) && amountRaised_AirBasicToken[this]==( old(amountRaised_AirBasicToken[this]) ) ) && buyPrice_AirBasicToken[this]==( old(buyPrice_AirBasicToken[this]) ) ) && crowdsaleClosed_AirBasicToken[this]==( old(crowdsaleClosed_AirBasicToken[this]) ) ) && transferEnabled_AirBasicToken[this]==( old(transferEnabled_AirBasicToken[this]) ) ) && owner_Ownable[this]==( old(owner_Ownable[this]) ) ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[__ret_0_,<IMPLEMENTATION_OUTPARAM,approve~address~uint256_StandardToken>],BooleanLiteral[true]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowed_StandardToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_StandardToken>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,approve~address~uint256_StandardToken>]]],[IdentifierExpression[_spender_s470,<IMPLEMENTATION_INPARAM,approve~address~uint256_StandardToken>]]],IdentifierExpression[_value_s470,<IMPLEMENTATION_INPARAM,approve~address~uint256_StandardToken>]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[totalSupply__BasicToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_StandardToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[totalSupply__BasicToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_StandardToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[balances_BasicToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_StandardToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[balances_BasicToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_StandardToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowed_StandardToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_StandardToken>]]],[IdentifierExpression[p1,GLOBAL]]],[IdentifierExpression[p2,GLOBAL]]],UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowed_StandardToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_StandardToken>]]],[IdentifierExpression[p1,GLOBAL]]],[IdentifierExpression[p2,GLOBAL]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[balanceLocked_AirBasicToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_StandardToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[balanceLocked_AirBasicToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_StandardToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[amountRaised_AirBasicToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_StandardToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[amountRaised_AirBasicToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_StandardToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[buyPrice_AirBasicToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_StandardToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[buyPrice_AirBasicToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_StandardToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[crowdsaleClosed_AirBasicToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_StandardToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[crowdsaleClosed_AirBasicToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_StandardToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[transferEnabled_AirBasicToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_StandardToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[transferEnabled_AirBasicToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_StandardToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[owner_Ownable,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_StandardToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[owner_Ownable,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_StandardToken>]]]]]]
[2020-11-24 23:40:34,862 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(StandardToken.approve(spender, value), p1 != msg.sender || p2 != spender) ==> <>(finished(StandardToken.approve(spender, value), return == true && allowed_StandardToken[this][msg.sender][spender] == value &&  totalSupply__BasicToken[this] == old(totalSupply__BasicToken[this]) && balances_BasicToken[this] == old(balances_BasicToken[this]) && allowed_StandardToken[this][p1][p2] == old(allowed_StandardToken[this][p1][p2]) && balanceLocked_AirBasicToken[this] == old(balanceLocked_AirBasicToken[this]) && amountRaised_AirBasicToken[this] == old(amountRaised_AirBasicToken[this]) && buyPrice_AirBasicToken[this] == old(buyPrice_AirBasicToken[this]) && crowdsaleClosed_AirBasicToken[this] == old(crowdsaleClosed_AirBasicToken[this]) && transferEnabled_AirBasicToken[this] == old(transferEnabled_AirBasicToken[this]) && owner_Ownable[this] == old(owner_Ownable[this]))))
[2020-11-24 23:40:34,863 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_approve_StandardToken0) ==> ( <>AP(success_approve_StandardToken0) ) ) )
Executed UtopiaSpecLang
[2020-11-24 23:40:34,876 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 11:40:34 PropertyContainer
[2020-11-24 23:40:34,876 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-24 23:40:34,877 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-24 23:40:34,877 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-24 23:40:34,877 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-24 23:40:34,878 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "AirBasicToken_0xd1ccc390f181a38faab2c818d19c5a68ba9251b7_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 11:40:34" (1/2) ...
[2020-11-24 23:40:34,878 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-24 23:40:34,878 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-24 23:40:34,898 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 11:40:34" (2/2) ...
[2020-11-24 23:40:34,899 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-24 23:40:34,899 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-24 23:40:34,899 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-24 23:40:34,899 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-24 23:40:34,900 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "AirBasicToken_0xd1ccc390f181a38faab2c818d19c5a68ba9251b7_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 11:40:34" (1/2) ...
[2020-11-24 23:40:34,962 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-24 23:40:34,962 INFO  L130     BoogieDeclarations]: Found specification of procedure Ownable_Ownable_NoBaseCtor__success
[2020-11-24 23:40:34,963 INFO  L130     BoogieDeclarations]: Found specification of procedure Ownable_Ownable
[2020-11-24 23:40:34,963 INFO  L138     BoogieDeclarations]: Found implementation of procedure Ownable_Ownable
[2020-11-24 23:40:34,963 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_Ownable
[2020-11-24 23:40:34,963 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_Ownable
[2020-11-24 23:40:34,963 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-24 23:40:34,963 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath
[2020-11-24 23:40:34,963 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath
[2020-11-24 23:40:34,963 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__success
[2020-11-24 23:40:34,963 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256_SafeMath__success
[2020-11-24 23:40:34,963 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__success
[2020-11-24 23:40:34,964 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__success
[2020-11-24 23:40:34,964 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Basic_ERC20Basic_NoBaseCtor__success
[2020-11-24 23:40:34,964 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Basic_ERC20Basic
[2020-11-24 23:40:34,964 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Basic_ERC20Basic
[2020-11-24 23:40:34,964 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20Basic
[2020-11-24 23:40:34,964 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20Basic
[2020-11-24 23:40:34,965 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20Basic
[2020-11-24 23:40:34,965 INFO  L130     BoogieDeclarations]: Found specification of procedure BasicToken_BasicToken_NoBaseCtor__success
[2020-11-24 23:40:34,965 INFO  L130     BoogieDeclarations]: Found specification of procedure BasicToken_BasicToken
[2020-11-24 23:40:34,965 INFO  L138     BoogieDeclarations]: Found implementation of procedure BasicToken_BasicToken
[2020-11-24 23:40:34,965 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_BasicToken
[2020-11-24 23:40:34,965 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_BasicToken
[2020-11-24 23:40:34,965 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_BasicToken
[2020-11-24 23:40:34,965 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_BasicToken
[2020-11-24 23:40:34,965 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_BasicToken
[2020-11-24 23:40:34,965 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_BasicToken
[2020-11-24 23:40:34,966 INFO  L130     BoogieDeclarations]: Found specification of procedure BurnableToken_BurnableToken_NoBaseCtor__success
[2020-11-24 23:40:34,966 INFO  L130     BoogieDeclarations]: Found specification of procedure BurnableToken_BurnableToken
[2020-11-24 23:40:34,966 INFO  L138     BoogieDeclarations]: Found implementation of procedure BurnableToken_BurnableToken
[2020-11-24 23:40:34,966 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_BurnableToken
[2020-11-24 23:40:34,966 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_BurnableToken
[2020-11-24 23:40:34,966 INFO  L130     BoogieDeclarations]: Found specification of procedure _burn~address~uint256_BurnableToken__success
[2020-11-24 23:40:34,966 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20_NoBaseCtor__success
[2020-11-24 23:40:34,966 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20
[2020-11-24 23:40:34,966 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20
[2020-11-24 23:40:34,966 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20
[2020-11-24 23:40:34,966 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20
[2020-11-24 23:40:34,966 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20
[2020-11-24 23:40:34,966 INFO  L130     BoogieDeclarations]: Found specification of procedure StandardToken_StandardToken_NoBaseCtor__success
[2020-11-24 23:40:34,967 INFO  L130     BoogieDeclarations]: Found specification of procedure StandardToken_StandardToken
[2020-11-24 23:40:34,967 INFO  L138     BoogieDeclarations]: Found implementation of procedure StandardToken_StandardToken
[2020-11-24 23:40:34,967 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_StandardToken
[2020-11-24 23:40:34,967 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_StandardToken
[2020-11-24 23:40:34,967 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_StandardToken
[2020-11-24 23:40:34,967 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_StandardToken
[2020-11-24 23:40:34,967 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_StandardToken
[2020-11-24 23:40:34,967 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_StandardToken
[2020-11-24 23:40:34,967 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseApproval~address~uint256_StandardToken
[2020-11-24 23:40:34,967 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseApproval~address~uint256_StandardToken
[2020-11-24 23:40:34,967 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseApproval~address~uint256_StandardToken
[2020-11-24 23:40:34,967 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseApproval~address~uint256_StandardToken
[2020-11-24 23:40:34,967 INFO  L130     BoogieDeclarations]: Found specification of procedure AirBasicToken_AirBasicToken_NoBaseCtor__success
[2020-11-24 23:40:34,968 INFO  L130     BoogieDeclarations]: Found specification of procedure AirBasicToken_AirBasicToken
[2020-11-24 23:40:34,968 INFO  L138     BoogieDeclarations]: Found implementation of procedure AirBasicToken_AirBasicToken
[2020-11-24 23:40:34,968 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_AirBasicToken__success
[2020-11-24 23:40:34,968 INFO  L130     BoogieDeclarations]: Found specification of procedure setPrice~uint256_AirBasicToken
[2020-11-24 23:40:34,968 INFO  L138     BoogieDeclarations]: Found implementation of procedure setPrice~uint256_AirBasicToken
[2020-11-24 23:40:34,968 INFO  L130     BoogieDeclarations]: Found specification of procedure closeBuy~bool_AirBasicToken
[2020-11-24 23:40:34,968 INFO  L138     BoogieDeclarations]: Found implementation of procedure closeBuy~bool_AirBasicToken
[2020-11-24 23:40:34,968 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackMethod_AirBasicToken__success
[2020-11-24 23:40:34,968 INFO  L130     BoogieDeclarations]: Found specification of procedure enableTransfer~bool_AirBasicToken
[2020-11-24 23:40:34,968 INFO  L138     BoogieDeclarations]: Found implementation of procedure enableTransfer~bool_AirBasicToken
[2020-11-24 23:40:34,969 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_AirBasicToken
[2020-11-24 23:40:34,969 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_AirBasicToken
[2020-11-24 23:40:34,969 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_AirBasicToken
[2020-11-24 23:40:34,969 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_AirBasicToken
[2020-11-24 23:40:34,969 INFO  L130     BoogieDeclarations]: Found specification of procedure lock~arr_AirBasicToken
[2020-11-24 23:40:34,969 INFO  L138     BoogieDeclarations]: Found implementation of procedure lock~arr_AirBasicToken
[2020-11-24 23:40:34,969 INFO  L130     BoogieDeclarations]: Found specification of procedure unlock~arr_AirBasicToken
[2020-11-24 23:40:34,969 INFO  L138     BoogieDeclarations]: Found implementation of procedure unlock~arr_AirBasicToken
[2020-11-24 23:40:34,969 INFO  L130     BoogieDeclarations]: Found specification of procedure name_AirBasicToken
[2020-11-24 23:40:34,970 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_AirBasicToken
[2020-11-24 23:40:34,970 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_AirBasicToken
[2020-11-24 23:40:34,970 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_AirBasicToken
[2020-11-24 23:40:34,970 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_AirBasicToken
[2020-11-24 23:40:34,970 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_AirBasicToken
[2020-11-24 23:40:34,970 INFO  L130     BoogieDeclarations]: Found specification of procedure INITIAL_SUPPLY_AirBasicToken
[2020-11-24 23:40:34,970 INFO  L138     BoogieDeclarations]: Found implementation of procedure INITIAL_SUPPLY_AirBasicToken
[2020-11-24 23:40:34,970 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceLocked~address_AirBasicToken
[2020-11-24 23:40:34,970 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceLocked~address_AirBasicToken
[2020-11-24 23:40:34,970 INFO  L130     BoogieDeclarations]: Found specification of procedure amountRaised_AirBasicToken
[2020-11-24 23:40:34,971 INFO  L138     BoogieDeclarations]: Found implementation of procedure amountRaised_AirBasicToken
[2020-11-24 23:40:34,971 INFO  L130     BoogieDeclarations]: Found specification of procedure buyPrice_AirBasicToken
[2020-11-24 23:40:34,971 INFO  L138     BoogieDeclarations]: Found implementation of procedure buyPrice_AirBasicToken
[2020-11-24 23:40:34,971 INFO  L130     BoogieDeclarations]: Found specification of procedure crowdsaleClosed_AirBasicToken
[2020-11-24 23:40:34,971 INFO  L138     BoogieDeclarations]: Found implementation of procedure crowdsaleClosed_AirBasicToken
[2020-11-24 23:40:34,971 INFO  L130     BoogieDeclarations]: Found specification of procedure transferEnabled_AirBasicToken
[2020-11-24 23:40:34,971 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferEnabled_AirBasicToken
[2020-11-24 23:40:34,971 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-24 23:40:34,971 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-24 23:40:34,971 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-24 23:40:34,972 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__success
[2020-11-24 23:40:34,972 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_Ownable
[2020-11-24 23:40:34,972 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_Ownable
[2020-11-24 23:40:34,972 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_SafeMath
[2020-11-24 23:40:34,972 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_SafeMath
[2020-11-24 23:40:34,972 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20Basic
[2020-11-24 23:40:34,972 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20Basic
[2020-11-24 23:40:34,972 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_BasicToken
[2020-11-24 23:40:34,973 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_BasicToken
[2020-11-24 23:40:34,973 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_BurnableToken
[2020-11-24 23:40:34,973 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_BurnableToken
[2020-11-24 23:40:34,973 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20
[2020-11-24 23:40:34,973 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20
[2020-11-24 23:40:34,973 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_StandardToken
[2020-11-24 23:40:34,973 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_StandardToken
[2020-11-24 23:40:34,973 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_AirBasicToken
[2020-11-24 23:40:34,974 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-24 23:40:34,974 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-24 23:40:34,974 INFO  L130     BoogieDeclarations]: Found specification of procedure Ownable_Ownable_NoBaseCtor__fail
[2020-11-24 23:40:34,974 INFO  L130     BoogieDeclarations]: Found specification of procedure Ownable_Ownable__success
[2020-11-24 23:40:34,974 INFO  L130     BoogieDeclarations]: Found specification of procedure Ownable_Ownable__fail
[2020-11-24 23:40:34,974 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_Ownable__success
[2020-11-24 23:40:34,974 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_Ownable__fail
[2020-11-24 23:40:34,975 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-24 23:40:34,975 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__success
[2020-11-24 23:40:34,975 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__fail
[2020-11-24 23:40:34,975 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-24 23:40:34,975 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256_SafeMath__fail
[2020-11-24 23:40:34,975 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-24 23:40:34,975 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__fail
[2020-11-24 23:40:34,975 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Basic_ERC20Basic_NoBaseCtor__fail
[2020-11-24 23:40:34,975 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Basic_ERC20Basic__success
[2020-11-24 23:40:34,976 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Basic_ERC20Basic__fail
[2020-11-24 23:40:34,976 INFO  L130     BoogieDeclarations]: Found specification of procedure BasicToken_BasicToken_NoBaseCtor__fail
[2020-11-24 23:40:34,976 INFO  L130     BoogieDeclarations]: Found specification of procedure BasicToken_BasicToken__success
[2020-11-24 23:40:34,976 INFO  L130     BoogieDeclarations]: Found specification of procedure BasicToken_BasicToken__fail
[2020-11-24 23:40:34,976 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_BasicToken__success
[2020-11-24 23:40:34,976 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_BasicToken__fail
[2020-11-24 23:40:34,976 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_BasicToken__success
[2020-11-24 23:40:34,976 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_BasicToken__fail
[2020-11-24 23:40:34,976 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_BasicToken__success
[2020-11-24 23:40:34,977 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_BasicToken__fail
[2020-11-24 23:40:34,977 INFO  L130     BoogieDeclarations]: Found specification of procedure BurnableToken_BurnableToken_NoBaseCtor__fail
[2020-11-24 23:40:34,977 INFO  L130     BoogieDeclarations]: Found specification of procedure BurnableToken_BurnableToken__success
[2020-11-24 23:40:34,977 INFO  L130     BoogieDeclarations]: Found specification of procedure BurnableToken_BurnableToken__fail
[2020-11-24 23:40:34,977 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_BurnableToken__success
[2020-11-24 23:40:34,977 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_BurnableToken__fail
[2020-11-24 23:40:34,977 INFO  L130     BoogieDeclarations]: Found specification of procedure _burn~address~uint256_BurnableToken__fail
[2020-11-24 23:40:34,977 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20_NoBaseCtor__fail
[2020-11-24 23:40:34,977 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20__success
[2020-11-24 23:40:34,978 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20__fail
[2020-11-24 23:40:34,978 INFO  L130     BoogieDeclarations]: Found specification of procedure StandardToken_StandardToken_NoBaseCtor__fail
[2020-11-24 23:40:34,978 INFO  L130     BoogieDeclarations]: Found specification of procedure StandardToken_StandardToken__success
[2020-11-24 23:40:34,978 INFO  L130     BoogieDeclarations]: Found specification of procedure StandardToken_StandardToken__fail
[2020-11-24 23:40:34,978 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_StandardToken__success
[2020-11-24 23:40:34,978 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_StandardToken__fail
[2020-11-24 23:40:34,978 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_StandardToken__success
[2020-11-24 23:40:34,978 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_StandardToken__fail
[2020-11-24 23:40:34,979 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_StandardToken__success
[2020-11-24 23:40:34,979 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_StandardToken__fail
[2020-11-24 23:40:34,979 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseApproval~address~uint256_StandardToken__success
[2020-11-24 23:40:34,979 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseApproval~address~uint256_StandardToken__fail
[2020-11-24 23:40:34,979 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseApproval~address~uint256_StandardToken__success
[2020-11-24 23:40:34,979 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseApproval~address~uint256_StandardToken__fail
[2020-11-24 23:40:34,979 INFO  L130     BoogieDeclarations]: Found specification of procedure AirBasicToken_AirBasicToken_NoBaseCtor__fail
[2020-11-24 23:40:34,979 INFO  L130     BoogieDeclarations]: Found specification of procedure AirBasicToken_AirBasicToken__success
[2020-11-24 23:40:34,979 INFO  L130     BoogieDeclarations]: Found specification of procedure AirBasicToken_AirBasicToken__fail
[2020-11-24 23:40:34,980 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_AirBasicToken__fail
[2020-11-24 23:40:34,980 INFO  L130     BoogieDeclarations]: Found specification of procedure setPrice~uint256_AirBasicToken__success
[2020-11-24 23:40:34,980 INFO  L130     BoogieDeclarations]: Found specification of procedure setPrice~uint256_AirBasicToken__fail
[2020-11-24 23:40:34,980 INFO  L130     BoogieDeclarations]: Found specification of procedure closeBuy~bool_AirBasicToken__success
[2020-11-24 23:40:34,980 INFO  L130     BoogieDeclarations]: Found specification of procedure closeBuy~bool_AirBasicToken__fail
[2020-11-24 23:40:34,980 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackMethod_AirBasicToken__fail
[2020-11-24 23:40:34,980 INFO  L130     BoogieDeclarations]: Found specification of procedure enableTransfer~bool_AirBasicToken__success
[2020-11-24 23:40:34,980 INFO  L130     BoogieDeclarations]: Found specification of procedure enableTransfer~bool_AirBasicToken__fail
[2020-11-24 23:40:34,981 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_AirBasicToken__success
[2020-11-24 23:40:34,981 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_AirBasicToken__fail
[2020-11-24 23:40:34,981 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_AirBasicToken__success
[2020-11-24 23:40:34,981 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_AirBasicToken__fail
[2020-11-24 23:40:34,981 INFO  L130     BoogieDeclarations]: Found specification of procedure lock~arr_AirBasicToken__success
[2020-11-24 23:40:34,981 INFO  L130     BoogieDeclarations]: Found specification of procedure lock~arr_AirBasicToken__fail
[2020-11-24 23:40:34,981 INFO  L130     BoogieDeclarations]: Found specification of procedure unlock~arr_AirBasicToken__success
[2020-11-24 23:40:34,981 INFO  L130     BoogieDeclarations]: Found specification of procedure unlock~arr_AirBasicToken__fail
[2020-11-24 23:40:34,981 INFO  L130     BoogieDeclarations]: Found specification of procedure name_AirBasicToken__success
[2020-11-24 23:40:34,981 INFO  L130     BoogieDeclarations]: Found specification of procedure name_AirBasicToken__fail
[2020-11-24 23:40:34,981 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_AirBasicToken__success
[2020-11-24 23:40:34,982 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_AirBasicToken__fail
[2020-11-24 23:40:34,982 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_AirBasicToken__success
[2020-11-24 23:40:34,982 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_AirBasicToken__fail
[2020-11-24 23:40:34,982 INFO  L130     BoogieDeclarations]: Found specification of procedure INITIAL_SUPPLY_AirBasicToken__success
[2020-11-24 23:40:34,982 INFO  L130     BoogieDeclarations]: Found specification of procedure INITIAL_SUPPLY_AirBasicToken__fail
[2020-11-24 23:40:34,982 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceLocked~address_AirBasicToken__success
[2020-11-24 23:40:34,982 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceLocked~address_AirBasicToken__fail
[2020-11-24 23:40:34,982 INFO  L130     BoogieDeclarations]: Found specification of procedure amountRaised_AirBasicToken__success
[2020-11-24 23:40:34,982 INFO  L130     BoogieDeclarations]: Found specification of procedure amountRaised_AirBasicToken__fail
[2020-11-24 23:40:34,982 INFO  L130     BoogieDeclarations]: Found specification of procedure buyPrice_AirBasicToken__success
[2020-11-24 23:40:34,983 INFO  L130     BoogieDeclarations]: Found specification of procedure buyPrice_AirBasicToken__fail
[2020-11-24 23:40:34,983 INFO  L130     BoogieDeclarations]: Found specification of procedure crowdsaleClosed_AirBasicToken__success
[2020-11-24 23:40:34,983 INFO  L130     BoogieDeclarations]: Found specification of procedure crowdsaleClosed_AirBasicToken__fail
[2020-11-24 23:40:34,983 INFO  L130     BoogieDeclarations]: Found specification of procedure transferEnabled_AirBasicToken__success
[2020-11-24 23:40:34,983 INFO  L130     BoogieDeclarations]: Found specification of procedure transferEnabled_AirBasicToken__fail
[2020-11-24 23:40:34,983 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-24 23:40:34,983 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-24 23:40:34,983 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-24 23:40:34,983 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__fail
[2020-11-24 23:40:34,983 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-24 23:40:34,983 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-24 23:40:34,984 INFO  L138     BoogieDeclarations]: Found implementation of procedure Ownable_Ownable_NoBaseCtor__fail
[2020-11-24 23:40:34,984 INFO  L138     BoogieDeclarations]: Found implementation of procedure Ownable_Ownable_NoBaseCtor__success
[2020-11-24 23:40:34,984 INFO  L138     BoogieDeclarations]: Found implementation of procedure Ownable_Ownable__fail
[2020-11-24 23:40:34,984 INFO  L138     BoogieDeclarations]: Found implementation of procedure Ownable_Ownable__success
[2020-11-24 23:40:34,984 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_Ownable__fail
[2020-11-24 23:40:34,984 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_Ownable__success
[2020-11-24 23:40:34,984 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-24 23:40:34,984 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-24 23:40:34,984 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__fail
[2020-11-24 23:40:34,984 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__success
[2020-11-24 23:40:34,985 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-24 23:40:34,985 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__success
[2020-11-24 23:40:34,985 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256_SafeMath__fail
[2020-11-24 23:40:34,985 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256_SafeMath__success
[2020-11-24 23:40:34,985 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-24 23:40:34,985 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__success
[2020-11-24 23:40:34,985 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__fail
[2020-11-24 23:40:34,985 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__success
[2020-11-24 23:40:34,985 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Basic_ERC20Basic_NoBaseCtor__fail
[2020-11-24 23:40:34,985 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Basic_ERC20Basic_NoBaseCtor__success
[2020-11-24 23:40:34,986 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Basic_ERC20Basic__fail
[2020-11-24 23:40:34,986 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Basic_ERC20Basic__success
[2020-11-24 23:40:34,986 INFO  L138     BoogieDeclarations]: Found implementation of procedure BasicToken_BasicToken_NoBaseCtor__fail
[2020-11-24 23:40:34,986 INFO  L138     BoogieDeclarations]: Found implementation of procedure BasicToken_BasicToken_NoBaseCtor__success
[2020-11-24 23:40:34,986 INFO  L138     BoogieDeclarations]: Found implementation of procedure BasicToken_BasicToken__fail
[2020-11-24 23:40:34,986 INFO  L138     BoogieDeclarations]: Found implementation of procedure BasicToken_BasicToken__success
[2020-11-24 23:40:34,986 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_BasicToken__fail
[2020-11-24 23:40:34,986 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_BasicToken__success
[2020-11-24 23:40:34,986 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_BasicToken__fail
[2020-11-24 23:40:34,986 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_BasicToken__success
[2020-11-24 23:40:34,987 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_BasicToken__fail
[2020-11-24 23:40:34,987 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_BasicToken__success
[2020-11-24 23:40:34,987 INFO  L138     BoogieDeclarations]: Found implementation of procedure BurnableToken_BurnableToken_NoBaseCtor__fail
[2020-11-24 23:40:34,987 INFO  L138     BoogieDeclarations]: Found implementation of procedure BurnableToken_BurnableToken_NoBaseCtor__success
[2020-11-24 23:40:34,987 INFO  L138     BoogieDeclarations]: Found implementation of procedure BurnableToken_BurnableToken__fail
[2020-11-24 23:40:34,987 INFO  L138     BoogieDeclarations]: Found implementation of procedure BurnableToken_BurnableToken__success
[2020-11-24 23:40:34,987 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_BurnableToken__fail
[2020-11-24 23:40:34,987 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_BurnableToken__success
[2020-11-24 23:40:34,987 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burn~address~uint256_BurnableToken__fail
[2020-11-24 23:40:34,987 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burn~address~uint256_BurnableToken__success
[2020-11-24 23:40:34,987 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20_NoBaseCtor__fail
[2020-11-24 23:40:34,988 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20_NoBaseCtor__success
[2020-11-24 23:40:34,988 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20__fail
[2020-11-24 23:40:34,988 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20__success
[2020-11-24 23:40:34,988 INFO  L138     BoogieDeclarations]: Found implementation of procedure StandardToken_StandardToken_NoBaseCtor__fail
[2020-11-24 23:40:34,988 INFO  L138     BoogieDeclarations]: Found implementation of procedure StandardToken_StandardToken_NoBaseCtor__success
[2020-11-24 23:40:34,988 INFO  L138     BoogieDeclarations]: Found implementation of procedure StandardToken_StandardToken__fail
[2020-11-24 23:40:34,988 INFO  L138     BoogieDeclarations]: Found implementation of procedure StandardToken_StandardToken__success
[2020-11-24 23:40:34,988 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_StandardToken__fail
[2020-11-24 23:40:34,988 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_StandardToken__success
[2020-11-24 23:40:34,988 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_StandardToken__fail
[2020-11-24 23:40:34,988 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_StandardToken__success
[2020-11-24 23:40:34,988 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_StandardToken__fail
[2020-11-24 23:40:34,989 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_StandardToken__success
[2020-11-24 23:40:34,989 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseApproval~address~uint256_StandardToken__fail
[2020-11-24 23:40:34,989 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseApproval~address~uint256_StandardToken__success
[2020-11-24 23:40:34,989 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseApproval~address~uint256_StandardToken__fail
[2020-11-24 23:40:34,989 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseApproval~address~uint256_StandardToken__success
[2020-11-24 23:40:34,989 INFO  L138     BoogieDeclarations]: Found implementation of procedure AirBasicToken_AirBasicToken_NoBaseCtor__fail
[2020-11-24 23:40:34,989 INFO  L138     BoogieDeclarations]: Found implementation of procedure AirBasicToken_AirBasicToken_NoBaseCtor__success
[2020-11-24 23:40:34,989 INFO  L138     BoogieDeclarations]: Found implementation of procedure AirBasicToken_AirBasicToken__fail
[2020-11-24 23:40:34,989 INFO  L138     BoogieDeclarations]: Found implementation of procedure AirBasicToken_AirBasicToken__success
[2020-11-24 23:40:34,989 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_AirBasicToken__fail
[2020-11-24 23:40:34,989 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_AirBasicToken__success
[2020-11-24 23:40:34,989 INFO  L138     BoogieDeclarations]: Found implementation of procedure setPrice~uint256_AirBasicToken__fail
[2020-11-24 23:40:34,990 INFO  L138     BoogieDeclarations]: Found implementation of procedure setPrice~uint256_AirBasicToken__success
[2020-11-24 23:40:34,990 INFO  L138     BoogieDeclarations]: Found implementation of procedure closeBuy~bool_AirBasicToken__fail
[2020-11-24 23:40:34,990 INFO  L138     BoogieDeclarations]: Found implementation of procedure closeBuy~bool_AirBasicToken__success
[2020-11-24 23:40:34,990 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackMethod_AirBasicToken__fail
[2020-11-24 23:40:34,990 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackMethod_AirBasicToken__success
[2020-11-24 23:40:34,990 INFO  L138     BoogieDeclarations]: Found implementation of procedure enableTransfer~bool_AirBasicToken__fail
[2020-11-24 23:40:34,990 INFO  L138     BoogieDeclarations]: Found implementation of procedure enableTransfer~bool_AirBasicToken__success
[2020-11-24 23:40:34,991 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_AirBasicToken__fail
[2020-11-24 23:40:34,991 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_AirBasicToken__success
[2020-11-24 23:40:34,991 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_AirBasicToken__fail
[2020-11-24 23:40:34,991 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_AirBasicToken__success
[2020-11-24 23:40:34,991 INFO  L138     BoogieDeclarations]: Found implementation of procedure lock~arr_AirBasicToken__fail
[2020-11-24 23:40:34,991 INFO  L138     BoogieDeclarations]: Found implementation of procedure lock~arr_AirBasicToken__success
[2020-11-24 23:40:34,991 INFO  L138     BoogieDeclarations]: Found implementation of procedure unlock~arr_AirBasicToken__fail
[2020-11-24 23:40:34,991 INFO  L138     BoogieDeclarations]: Found implementation of procedure unlock~arr_AirBasicToken__success
[2020-11-24 23:40:34,992 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_AirBasicToken__fail
[2020-11-24 23:40:34,992 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_AirBasicToken__success
[2020-11-24 23:40:34,992 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_AirBasicToken__fail
[2020-11-24 23:40:34,992 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_AirBasicToken__success
[2020-11-24 23:40:34,992 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_AirBasicToken__fail
[2020-11-24 23:40:34,992 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_AirBasicToken__success
[2020-11-24 23:40:34,992 INFO  L138     BoogieDeclarations]: Found implementation of procedure INITIAL_SUPPLY_AirBasicToken__fail
[2020-11-24 23:40:34,992 INFO  L138     BoogieDeclarations]: Found implementation of procedure INITIAL_SUPPLY_AirBasicToken__success
[2020-11-24 23:40:34,992 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceLocked~address_AirBasicToken__fail
[2020-11-24 23:40:34,992 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceLocked~address_AirBasicToken__success
[2020-11-24 23:40:34,992 INFO  L138     BoogieDeclarations]: Found implementation of procedure amountRaised_AirBasicToken__fail
[2020-11-24 23:40:34,993 INFO  L138     BoogieDeclarations]: Found implementation of procedure amountRaised_AirBasicToken__success
[2020-11-24 23:40:34,993 INFO  L138     BoogieDeclarations]: Found implementation of procedure buyPrice_AirBasicToken__fail
[2020-11-24 23:40:34,993 INFO  L138     BoogieDeclarations]: Found implementation of procedure buyPrice_AirBasicToken__success
[2020-11-24 23:40:34,993 INFO  L138     BoogieDeclarations]: Found implementation of procedure crowdsaleClosed_AirBasicToken__fail
[2020-11-24 23:40:34,993 INFO  L138     BoogieDeclarations]: Found implementation of procedure crowdsaleClosed_AirBasicToken__success
[2020-11-24 23:40:34,993 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferEnabled_AirBasicToken__fail
[2020-11-24 23:40:34,993 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferEnabled_AirBasicToken__success
[2020-11-24 23:40:34,993 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-24 23:40:34,993 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-24 23:40:34,993 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-24 23:40:34,993 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-24 23:40:34,993 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-24 23:40:34,993 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-24 23:40:34,994 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__fail
[2020-11-24 23:40:34,994 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__success
[2020-11-24 23:40:34,994 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_Ownable
[2020-11-24 23:40:34,994 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_Ownable
[2020-11-24 23:40:34,994 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_SafeMath
[2020-11-24 23:40:34,994 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_SafeMath
[2020-11-24 23:40:34,994 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20Basic
[2020-11-24 23:40:34,994 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20Basic
[2020-11-24 23:40:34,994 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_BasicToken
[2020-11-24 23:40:34,994 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_BasicToken
[2020-11-24 23:40:34,994 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_BurnableToken
[2020-11-24 23:40:34,994 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_BurnableToken
[2020-11-24 23:40:34,995 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20
[2020-11-24 23:40:34,995 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20
[2020-11-24 23:40:34,995 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_StandardToken
[2020-11-24 23:40:34,995 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_StandardToken
[2020-11-24 23:40:34,995 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_AirBasicToken
[2020-11-24 23:40:34,995 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-24 23:40:34,995 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-24 23:40:34,995 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-24 23:40:35,640 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 23:40:35,726 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 23:40:35,726 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 23:40:35,728 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 23:40:36,022 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-24 23:40:36,022 INFO  L286             CfgBuilder]: Removed 8 assue(true) statements.
[2020-11-24 23:40:36,024 INFO  L202        PluginConnector]: Adding new model AirBasicToken_0xd1ccc390f181a38faab2c818d19c5a68ba9251b7_approve.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 11:40:36 BoogieIcfgContainer
[2020-11-24 23:40:36,025 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 11:40:34" (2/2) ...
[2020-11-24 23:40:36,025 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-24 23:40:36,025 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@6ada444f and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 11:40:36, skipping insertion in model container
[2020-11-24 23:40:36,025 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-24 23:40:36,025 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-24 23:40:36,025 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-24 23:40:36,027 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-24 23:40:36,027 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "AirBasicToken_0xd1ccc390f181a38faab2c818d19c5a68ba9251b7_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 11:40:34" (1/3) ...
[2020-11-24 23:40:36,027 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@7e50c23c and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 11:40:36, skipping insertion in model container
[2020-11-24 23:40:36,027 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 11:40:34" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-24 23:40:36,069 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 11:40:36 NWAContainer
[2020-11-24 23:40:36,069 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-24 23:40:36,069 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-24 23:40:36,069 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-24 23:40:36,070 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-24 23:40:36,071 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "AirBasicToken_0xd1ccc390f181a38faab2c818d19c5a68ba9251b7_approve.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 11:40:36" (3/4) ...
[2020-11-24 23:40:36,072 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@45dd3b32 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 11:40:36, skipping insertion in model container
[2020-11-24 23:40:36,072 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 11:40:36" (4/4) ...
[2020-11-24 23:40:36,075 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-24 23:40:36,082 INFO  L110   BuchiProductObserver]: Initial RCFG 3211 locations, 4265 edges
[2020-11-24 23:40:36,082 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-24 23:40:36,095 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-24 23:40:37,786 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-24 23:40:37,795 INFO  L110   BuchiProductObserver]: BuchiProgram size 7636 locations, 13504 edges
[2020-11-24 23:40:37,795 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 11:40:37 BoogieIcfgContainer
[2020-11-24 23:40:37,795 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-24 23:40:37,795 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-24 23:40:37,795 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-24 23:40:37,796 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-24 23:40:37,797 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 11:40:37" (1/1) ...
[2020-11-24 23:40:37,907 INFO  L313           BlockEncoder]: Initial Icfg 7636 locations, 13504 edges
[2020-11-24 23:40:37,907 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-24 23:40:37,907 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-24 23:40:37,908 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-24 23:40:37,908 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-24 23:40:37,922 INFO  L70    emoveInfeasibleEdges]: Removed 99 edges and 19 locations because of local infeasibility
[2020-11-24 23:40:37,937 INFO  L70        RemoveSinkStates]: Removed 20 edges and 13 locations by removing sink states
[2020-11-24 23:40:37,958 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-24 23:40:37,964 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-24 23:40:37,971 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-24 23:40:37,971 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-24 23:40:37,976 INFO  L313           BlockEncoder]: Encoded RCFG 7570 locations, 13335 edges
[2020-11-24 23:40:37,977 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 24.11 11:40:37 BasicIcfg
[2020-11-24 23:40:37,977 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-24 23:40:37,977 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-24 23:40:37,977 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-24 23:40:37,980 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-24 23:40:37,980 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 23:40:37,980 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "AirBasicToken_0xd1ccc390f181a38faab2c818d19c5a68ba9251b7_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 11:40:34" (1/6) ...
[2020-11-24 23:40:37,982 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@6041cc57 and model type AirBasicToken_0xd1ccc390f181a38faab2c818d19c5a68ba9251b7_approve.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 24.11 11:40:37, skipping insertion in model container
[2020-11-24 23:40:37,982 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 23:40:37,982 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 11:40:34" (2/6) ...
[2020-11-24 23:40:37,982 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@6041cc57 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 24.11 11:40:37, skipping insertion in model container
[2020-11-24 23:40:37,982 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 23:40:37,982 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "AirBasicToken_0xd1ccc390f181a38faab2c818d19c5a68ba9251b7_approve.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 11:40:36" (3/6) ...
[2020-11-24 23:40:37,982 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@6041cc57 and model type AirBasicToken_0xd1ccc390f181a38faab2c818d19c5a68ba9251b7_approve.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 24.11 11:40:37, skipping insertion in model container
[2020-11-24 23:40:37,983 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 23:40:37,983 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 11:40:36" (4/6) ...
[2020-11-24 23:40:37,983 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@6041cc57 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 24.11 11:40:37, skipping insertion in model container
[2020-11-24 23:40:37,983 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 23:40:37,983 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 11:40:37" (5/6) ...
[2020-11-24 23:40:37,983 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@6041cc57 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 24.11 11:40:37, skipping insertion in model container
[2020-11-24 23:40:37,984 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 23:40:37,984 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 24.11 11:40:37" (6/6) ...
[2020-11-24 23:40:37,985 INFO  L404   chiAutomizerObserver]: Analyzing ICFG AirBasicToken_0xd1ccc390f181a38faab2c818d19c5a68ba9251b7_approve.bpl_BEv2
[2020-11-24 23:40:38,023 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-24 23:40:38,023 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-24 23:40:38,023 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-24 23:40:38,023 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-24 23:40:38,023 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-24 23:40:38,024 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-24 23:40:38,024 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-24 23:40:38,024 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-24 23:40:38,024 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-24 23:40:38,083 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 7570 states.
[2020-11-24 23:40:38,147 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-24 23:40:38,147 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 23:40:38,147 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 23:40:38,156 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 23:40:38,157 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 23:40:38,157 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-24 23:40:38,157 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 7570 states.
[2020-11-24 23:40:38,182 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-24 23:40:38,182 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 23:40:38,182 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 23:40:38,185 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 23:40:38,185 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_approve_StandardToken0 := false;
[L3]                 call_approve_StandardToken0 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L7064]              assume null == 0;
[L7065]  CALL        call this := FreshRefGenerator__success();
[L3584]              havoc newRef;
[L3585]              assume Alloc[newRef] == false;
[L3586]              Alloc[newRef] := true;
[L3587]              assume newRef != null;
[L7065]  RET         call this := FreshRefGenerator__success();
[L7066]              assume now >= 0;
[L7067]              assume DType[this] == AirBasicToken;
[L7068]              assume msgvalue_MSG == 0;
[L7069]              gas := gas - 53000;
[L7070]  CALL        call AirBasicToken_AirBasicToken(this, msgsender_MSG, msgvalue_MSG);
[L1420]              havoc __exception;
[L1421]              revert := false;
[L1422]  COND FALSE  !(__exception)
[L1454]  CALL        call AirBasicToken_AirBasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4405]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3759]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3744]              assume msgsender_MSG != null;
[L3745]              Balance[this] := 0;
[L3759]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3760]  COND FALSE  !(revert)
[L4405]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4406]  COND TRUE   revert
[L1454]  RET         call AirBasicToken_AirBasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1455]              assume !revert && gas >= 0;
[L7070]  RET         call AirBasicToken_AirBasicToken(this, msgsender_MSG, msgvalue_MSG);
[L7071]              assume !revert && gas >= 0;

Loop:
[L7074]  CALL        call CorralChoice_AirBasicToken(this);
[L6845]              havoc msgsender_MSG;
[L6846]              havoc msgvalue_MSG;
[L6847]              havoc choice;
[L6848]              havoc __ret_0_owner;
[L6849]              havoc __ret_0_totalSupply;
[L6850]              havoc _owner_s237;
[L6851]              havoc __ret_0_balanceOf;
[L6852]              havoc _to_s841;
[L6853]              havoc _value_s841;
[L6854]              havoc __ret_0_transfer;
[L6855]              havoc _value_s258;
[L6856]              havoc _owner_s486;
[L6857]              havoc _spender_s486;
[L6858]              havoc __ret_0_allowance;
[L6859]              havoc _from_s813;
[L6860]              havoc _to_s813;
[L6861]              havoc _value_s813;
[L6862]              havoc __ret_0_transferFrom;
[L6863]              havoc _spender_s470;
[L6864]              havoc _value_s470;
[L6865]              havoc __ret_0_approve;
[L6866]              havoc _spender_s527;
[L6867]              havoc _addedValue_s527;
[L6868]              havoc __ret_0_increaseApproval;
[L6869]              havoc _spender_s587;
[L6870]              havoc _subtractedValue_s587;
[L6871]              havoc __ret_0_decreaseApproval;
[L6872]              havoc __ret_0_name;
[L6873]              havoc __ret_0_symbol;
[L6874]              havoc __ret_0_decimals;
[L6875]              havoc __ret_0_INITIAL_SUPPLY;
[L6876]              havoc arg904_s0;
[L6877]              havoc __ret_0_balanceLocked;
[L6878]              havoc __ret_0_amountRaised;
[L6879]              havoc __ret_0_buyPrice;
[L6880]              havoc __ret_0_crowdsaleClosed;
[L6881]              havoc __ret_0_transferEnabled;
[L6882]              havoc newBuyPrice_s722;
[L6883]              havoc closebuy_s734;
[L6884]              havoc _enable_s783;
[L6885]              havoc _addr_s871;
[L6886]              havoc _addr_s901;
[L6887]              havoc tmpNow;
[L6888]              havoc gas;
[L6889]              assume gas > 4000000 && gas <= 8000000;
[L6890]              tmpNow := now;
[L6891]              havoc now;
[L6892]              assume now > tmpNow;
[L6893]              assume msgsender_MSG != null;
[L6894]              assume DType[msgsender_MSG] != Ownable;
[L6895]              assume DType[msgsender_MSG] != SafeMath;
[L6896]              assume DType[msgsender_MSG] != ERC20Basic;
[L6897]              assume DType[msgsender_MSG] != BasicToken;
[L6898]              assume DType[msgsender_MSG] != BurnableToken;
[L6899]              assume DType[msgsender_MSG] != ERC20;
[L6900]              assume DType[msgsender_MSG] != StandardToken;
[L6901]              assume DType[msgsender_MSG] != AirBasicToken;
[L6902]              Alloc[msgsender_MSG] := true;
[L6903]  COND TRUE   choice == 24
[L6904]              gas := gas - 21000;
[L6905]  COND FALSE  !(gas >= 0)
[L7074]  RET         call CorralChoice_AirBasicToken(this);

[2020-11-24 23:40:38,202 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 23:40:38,202 INFO  L82        PathProgramCache]: Analyzing trace with hash 922294108, now seen corresponding path program 1 times
[2020-11-24 23:40:38,207 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 23:40:38,230 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 23:40:38,273 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 23:40:38,275 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 23:40:38,275 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-24 23:40:38,640 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 23:40:38,652 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-24 23:40:38,653 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-24 23:40:38,654 INFO  L87              Difference]: Start difference. First operand 7570 states. Second operand 4 states.
[2020-11-24 23:40:39,201 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 23:40:39,201 INFO  L93              Difference]: Finished difference Result 3773 states and 4173 transitions.
[2020-11-24 23:40:39,201 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-24 23:40:39,202 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3773 states and 4173 transitions.
[2020-11-24 23:40:39,220 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-24 23:40:39,243 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3773 states to 3769 states and 4165 transitions.
[2020-11-24 23:40:39,244 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 4
[2020-11-24 23:40:39,246 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 1010
[2020-11-24 23:40:39,247 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3769 states and 4165 transitions.
[2020-11-24 23:40:39,256 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 23:40:39,256 INFO  L728         BuchiCegarLoop]: Abstraction has 3769 states and 4165 transitions.
[2020-11-24 23:40:39,273 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3769 states and 4165 transitions.
[2020-11-24 23:40:39,324 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3769 to 3769.
[2020-11-24 23:40:39,325 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 3769 states.
[2020-11-24 23:40:39,330 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 3769 states to 3769 states and 4165 transitions.
[2020-11-24 23:40:39,330 INFO  L751         BuchiCegarLoop]: Abstraction has 3769 states and 4165 transitions.
[2020-11-24 23:40:39,330 INFO  L631         BuchiCegarLoop]: Abstraction has 3769 states and 4165 transitions.
[2020-11-24 23:40:39,331 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-24 23:40:39,331 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3769 states and 4165 transitions.
[2020-11-24 23:40:39,339 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-24 23:40:39,339 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 23:40:39,339 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 23:40:39,341 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 23:40:39,341 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_approve_StandardToken0 := false;
[L3]                 call_approve_StandardToken0 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L7064]              assume null == 0;
[L7065]  CALL        call this := FreshRefGenerator__success();
[L3584]              havoc newRef;
[L3585]              assume Alloc[newRef] == false;
[L3586]              Alloc[newRef] := true;
[L3587]              assume newRef != null;
[L7065]  RET         call this := FreshRefGenerator__success();
[L7066]              assume now >= 0;
[L7067]              assume DType[this] == AirBasicToken;
[L7068]              assume msgvalue_MSG == 0;
[L7069]              gas := gas - 53000;
[L7070]  CALL        call AirBasicToken_AirBasicToken(this, msgsender_MSG, msgvalue_MSG);
[L1420]              havoc __exception;
[L1421]              revert := false;
[L1422]  COND FALSE  !(__exception)
[L1454]  CALL        call AirBasicToken_AirBasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4405]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3759]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3744]              assume msgsender_MSG != null;
[L3745]              Balance[this] := 0;
[L3759]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3760]  COND FALSE  !(revert)
[L4405]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4406]  COND TRUE   revert
[L1454]  RET         call AirBasicToken_AirBasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1455]              assume !revert && gas >= 0;
[L7070]  RET         call AirBasicToken_AirBasicToken(this, msgsender_MSG, msgvalue_MSG);
[L7071]              assume !revert && gas >= 0;
[L7074]  CALL        call CorralChoice_AirBasicToken(this);
[L6845]              havoc msgsender_MSG;
[L6846]              havoc msgvalue_MSG;
[L6847]              havoc choice;
[L6848]              havoc __ret_0_owner;
[L6849]              havoc __ret_0_totalSupply;
[L6850]              havoc _owner_s237;
[L6851]              havoc __ret_0_balanceOf;
[L6852]              havoc _to_s841;
[L6853]              havoc _value_s841;
[L6854]              havoc __ret_0_transfer;
[L6855]              havoc _value_s258;
[L6856]              havoc _owner_s486;
[L6857]              havoc _spender_s486;
[L6858]              havoc __ret_0_allowance;
[L6859]              havoc _from_s813;
[L6860]              havoc _to_s813;
[L6861]              havoc _value_s813;
[L6862]              havoc __ret_0_transferFrom;
[L6863]              havoc _spender_s470;
[L6864]              havoc _value_s470;
[L6865]              havoc __ret_0_approve;
[L6866]              havoc _spender_s527;
[L6867]              havoc _addedValue_s527;
[L6868]              havoc __ret_0_increaseApproval;
[L6869]              havoc _spender_s587;
[L6870]              havoc _subtractedValue_s587;
[L6871]              havoc __ret_0_decreaseApproval;
[L6872]              havoc __ret_0_name;
[L6873]              havoc __ret_0_symbol;
[L6874]              havoc __ret_0_decimals;
[L6875]              havoc __ret_0_INITIAL_SUPPLY;
[L6876]              havoc arg904_s0;
[L6877]              havoc __ret_0_balanceLocked;
[L6878]              havoc __ret_0_amountRaised;
[L6879]              havoc __ret_0_buyPrice;
[L6880]              havoc __ret_0_crowdsaleClosed;
[L6881]              havoc __ret_0_transferEnabled;
[L6882]              havoc newBuyPrice_s722;
[L6883]              havoc closebuy_s734;
[L6884]              havoc _enable_s783;
[L6885]              havoc _addr_s871;
[L6886]              havoc _addr_s901;
[L6887]              havoc tmpNow;
[L6888]              havoc gas;
[L6889]              assume gas > 4000000 && gas <= 8000000;
[L6890]              tmpNow := now;
[L6891]              havoc now;
[L6892]              assume now > tmpNow;
[L6893]              assume msgsender_MSG != null;
[L6894]              assume DType[msgsender_MSG] != Ownable;
[L6895]              assume DType[msgsender_MSG] != SafeMath;
[L6896]              assume DType[msgsender_MSG] != ERC20Basic;
[L6897]              assume DType[msgsender_MSG] != BasicToken;
[L6898]              assume DType[msgsender_MSG] != BurnableToken;
[L6899]              assume DType[msgsender_MSG] != ERC20;
[L6900]              assume DType[msgsender_MSG] != StandardToken;
[L6901]              assume DType[msgsender_MSG] != AirBasicToken;
[L6902]              Alloc[msgsender_MSG] := true;
[L6903]  COND FALSE  !(choice == 24)
[L6909]  COND FALSE  !(choice == 23)
[L6915]  COND FALSE  !(choice == 22)
[L6921]  COND FALSE  !(choice == 21)
[L6928]  COND FALSE  !(choice == 20)
[L6935]  COND FALSE  !(choice == 19)
[L6941]  COND FALSE  !(choice == 18)
[L6948]  COND TRUE   choice == 17
[L6949]              gas := gas - 21000;
[L6950]  COND TRUE   gas >= 0
[L6951]              assume _value_s470 >= 0 && _value_s470 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L6952]              assume msgvalue_MSG == 0;
[L6953]  CALL        call __ret_0_approve := approve~address~uint256_StandardToken(this, msgsender_MSG, msgvalue_MSG, _spender_s470, _value_s470);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != _spender_s470;
[L3]                 call_approve_StandardToken0 := true;
[L3]                 call_approve_StandardToken0 := false;
[L3]                 revert := revert_hold;
[L1089]              havoc __exception;
[L1090]              revert := false;
[L1091]  COND FALSE  !(__exception)
[L1123]  CALL        call __ret_0_ := approve~address~uint256_StandardToken__success(this, msgsender_MSG, msgvalue_MSG, _spender_s470, _value_s470);
[L4228]              sum_allowed1[msgsender_MSG] := sum_allowed1[msgsender_MSG] - allowed_StandardToken[this][msgsender_MSG][_spender_s470];
[L4229]              allowed_StandardToken[this][msgsender_MSG][_spender_s470] := _value_s470;
[L4230]              sum_allowed1[msgsender_MSG] := sum_allowed1[msgsender_MSG] + allowed_StandardToken[this][msgsender_MSG][_spender_s470];
[L4231]              assert { :EventEmitted "Approval_StandardToken" } true;
[L4232]              __ret_0_ := true;
[L1123]  RET         call __ret_0_ := approve~address~uint256_StandardToken__success(this, msgsender_MSG, msgvalue_MSG, _spender_s470, _value_s470);
[L1124]              assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !((((((((((__ret_0_ == true && allowed_StandardToken[this][msgsender_MSG][_spender_s470] == _value_s470) && totalSupply__BasicToken[this] == old(totalSupply__BasicToken[this])) && balances_BasicToken[this] == old(balances_BasicToken[this])) && allowed_StandardToken[this][p1][p2] == old(allowed_StandardToken[this][p1][p2])) && balanceLocked_AirBasicToken[this] == old(balanceLocked_AirBasicToken[this])) && amountRaised_AirBasicToken[this] == old(amountRaised_AirBasicToken[this])) && buyPrice_AirBasicToken[this] == old(buyPrice_AirBasicToken[this])) && crowdsaleClosed_AirBasicToken[this] == old(crowdsaleClosed_AirBasicToken[this])) && transferEnabled_AirBasicToken[this] == old(transferEnabled_AirBasicToken[this])) && owner_Ownable[this] == old(owner_Ownable[this]));
[L3]                 revert := revert_hold;
[L6953]  RET         call __ret_0_approve := approve~address~uint256_StandardToken(this, msgsender_MSG, msgvalue_MSG, _spender_s470, _value_s470);
[L7074]  RET         call CorralChoice_AirBasicToken(this);

Loop:
[L7074]  CALL        call CorralChoice_AirBasicToken(this);
[L6845]              havoc msgsender_MSG;
[L6846]              havoc msgvalue_MSG;
[L6847]              havoc choice;
[L6848]              havoc __ret_0_owner;
[L6849]              havoc __ret_0_totalSupply;
[L6850]              havoc _owner_s237;
[L6851]              havoc __ret_0_balanceOf;
[L6852]              havoc _to_s841;
[L6853]              havoc _value_s841;
[L6854]              havoc __ret_0_transfer;
[L6855]              havoc _value_s258;
[L6856]              havoc _owner_s486;
[L6857]              havoc _spender_s486;
[L6858]              havoc __ret_0_allowance;
[L6859]              havoc _from_s813;
[L6860]              havoc _to_s813;
[L6861]              havoc _value_s813;
[L6862]              havoc __ret_0_transferFrom;
[L6863]              havoc _spender_s470;
[L6864]              havoc _value_s470;
[L6865]              havoc __ret_0_approve;
[L6866]              havoc _spender_s527;
[L6867]              havoc _addedValue_s527;
[L6868]              havoc __ret_0_increaseApproval;
[L6869]              havoc _spender_s587;
[L6870]              havoc _subtractedValue_s587;
[L6871]              havoc __ret_0_decreaseApproval;
[L6872]              havoc __ret_0_name;
[L6873]              havoc __ret_0_symbol;
[L6874]              havoc __ret_0_decimals;
[L6875]              havoc __ret_0_INITIAL_SUPPLY;
[L6876]              havoc arg904_s0;
[L6877]              havoc __ret_0_balanceLocked;
[L6878]              havoc __ret_0_amountRaised;
[L6879]              havoc __ret_0_buyPrice;
[L6880]              havoc __ret_0_crowdsaleClosed;
[L6881]              havoc __ret_0_transferEnabled;
[L6882]              havoc newBuyPrice_s722;
[L6883]              havoc closebuy_s734;
[L6884]              havoc _enable_s783;
[L6885]              havoc _addr_s871;
[L6886]              havoc _addr_s901;
[L6887]              havoc tmpNow;
[L6888]              havoc gas;
[L6889]              assume gas > 4000000 && gas <= 8000000;
[L6890]              tmpNow := now;
[L6891]              havoc now;
[L6892]              assume now > tmpNow;
[L6893]              assume msgsender_MSG != null;
[L6894]              assume DType[msgsender_MSG] != Ownable;
[L6895]              assume DType[msgsender_MSG] != SafeMath;
[L6896]              assume DType[msgsender_MSG] != ERC20Basic;
[L6897]              assume DType[msgsender_MSG] != BasicToken;
[L6898]              assume DType[msgsender_MSG] != BurnableToken;
[L6899]              assume DType[msgsender_MSG] != ERC20;
[L6900]              assume DType[msgsender_MSG] != StandardToken;
[L6901]              assume DType[msgsender_MSG] != AirBasicToken;
[L6902]              Alloc[msgsender_MSG] := true;
[L6903]  COND FALSE  !(choice == 24)
[L6909]  COND FALSE  !(choice == 23)
[L6915]  COND FALSE  !(choice == 22)
[L6921]  COND FALSE  !(choice == 21)
[L6928]  COND FALSE  !(choice == 20)
[L6935]  COND FALSE  !(choice == 19)
[L6941]  COND FALSE  !(choice == 18)
[L6948]  COND TRUE   choice == 17
[L6949]              gas := gas - 21000;
[L6950]  COND TRUE   gas >= 0
[L6951]              assume _value_s470 >= 0 && _value_s470 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L6952]              assume msgvalue_MSG == 0;
[L6953]  CALL        call __ret_0_approve := approve~address~uint256_StandardToken(this, msgsender_MSG, msgvalue_MSG, _spender_s470, _value_s470);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != _spender_s470;
[L3]                 call_approve_StandardToken0 := true;
[L3]                 call_approve_StandardToken0 := false;
[L3]                 revert := revert_hold;
[L1089]              havoc __exception;
[L1090]              revert := false;
[L1091]  COND FALSE  !(__exception)
[L1123]  CALL        call __ret_0_ := approve~address~uint256_StandardToken__success(this, msgsender_MSG, msgvalue_MSG, _spender_s470, _value_s470);
[L4228]              sum_allowed1[msgsender_MSG] := sum_allowed1[msgsender_MSG] - allowed_StandardToken[this][msgsender_MSG][_spender_s470];
[L4229]              allowed_StandardToken[this][msgsender_MSG][_spender_s470] := _value_s470;
[L4230]              sum_allowed1[msgsender_MSG] := sum_allowed1[msgsender_MSG] + allowed_StandardToken[this][msgsender_MSG][_spender_s470];
[L4231]              assert { :EventEmitted "Approval_StandardToken" } true;
[L4232]              __ret_0_ := true;
[L1123]  RET         call __ret_0_ := approve~address~uint256_StandardToken__success(this, msgsender_MSG, msgvalue_MSG, _spender_s470, _value_s470);
[L1124]              assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !((((((((((__ret_0_ == true && allowed_StandardToken[this][msgsender_MSG][_spender_s470] == _value_s470) && totalSupply__BasicToken[this] == old(totalSupply__BasicToken[this])) && balances_BasicToken[this] == old(balances_BasicToken[this])) && allowed_StandardToken[this][p1][p2] == old(allowed_StandardToken[this][p1][p2])) && balanceLocked_AirBasicToken[this] == old(balanceLocked_AirBasicToken[this])) && amountRaised_AirBasicToken[this] == old(amountRaised_AirBasicToken[this])) && buyPrice_AirBasicToken[this] == old(buyPrice_AirBasicToken[this])) && crowdsaleClosed_AirBasicToken[this] == old(crowdsaleClosed_AirBasicToken[this])) && transferEnabled_AirBasicToken[this] == old(transferEnabled_AirBasicToken[this])) && owner_Ownable[this] == old(owner_Ownable[this]));
[L3]                 revert := revert_hold;
[L6953]  RET         call __ret_0_approve := approve~address~uint256_StandardToken(this, msgsender_MSG, msgvalue_MSG, _spender_s470, _value_s470);
[L7074]  RET         call CorralChoice_AirBasicToken(this);

[2020-11-24 23:40:39,346 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 23:40:39,346 INFO  L82        PathProgramCache]: Analyzing trace with hash -1330096388, now seen corresponding path program 1 times
[2020-11-24 23:40:39,347 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 23:40:39,359 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 23:40:39,381 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 23:40:39,381 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 23:40:39,381 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-24 23:40:39,382 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 23:40:39,382 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-24 23:40:39,382 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-24 23:40:39,383 INFO  L87              Difference]: Start difference. First operand 3769 states and 4165 transitions. cyclomatic complexity: 406 Second operand 4 states.
[2020-11-24 23:40:40,016 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 23:40:40,016 INFO  L93              Difference]: Finished difference Result 5151 states and 5789 transitions.
[2020-11-24 23:40:40,016 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-24 23:40:40,016 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 5151 states and 5789 transitions.
[2020-11-24 23:40:40,032 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 6
[2020-11-24 23:40:40,052 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 5151 states to 5013 states and 5635 transitions.
[2020-11-24 23:40:40,052 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 1285
[2020-11-24 23:40:40,053 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 1292
[2020-11-24 23:40:40,053 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 5013 states and 5635 transitions.
[2020-11-24 23:40:40,060 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 23:40:40,061 INFO  L728         BuchiCegarLoop]: Abstraction has 5013 states and 5635 transitions.
[2020-11-24 23:40:40,065 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 5013 states and 5635 transitions.
[2020-11-24 23:40:40,101 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 5013 to 4138.
[2020-11-24 23:40:40,101 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 4138 states.
[2020-11-24 23:40:40,105 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 4138 states to 4138 states and 4512 transitions.
[2020-11-24 23:40:40,105 INFO  L751         BuchiCegarLoop]: Abstraction has 4138 states and 4512 transitions.
[2020-11-24 23:40:40,105 INFO  L631         BuchiCegarLoop]: Abstraction has 4138 states and 4512 transitions.
[2020-11-24 23:40:40,105 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-24 23:40:40,105 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 4138 states and 4512 transitions.
[2020-11-24 23:40:40,111 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-24 23:40:40,111 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 23:40:40,111 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 23:40:40,114 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [8, 8, 8, 8, 8, 8, 8, 8, 8, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 23:40:40,114 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_approve_StandardToken0 := false;
[L3]                 call_approve_StandardToken0 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L7064]              assume null == 0;
[L7065]  CALL        call this := FreshRefGenerator__success();
[L3584]              havoc newRef;
[L3585]              assume Alloc[newRef] == false;
[L3586]              Alloc[newRef] := true;
[L3587]              assume newRef != null;
[L7065]  RET         call this := FreshRefGenerator__success();
[L7066]              assume now >= 0;
[L7067]              assume DType[this] == AirBasicToken;
[L7068]              assume msgvalue_MSG == 0;
[L7069]              gas := gas - 53000;
[L7070]  CALL        call AirBasicToken_AirBasicToken(this, msgsender_MSG, msgvalue_MSG);
[L1420]              havoc __exception;
[L1421]              revert := false;
[L1422]  COND FALSE  !(__exception)
[L1454]  CALL        call AirBasicToken_AirBasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4405]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3759]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3744]              assume msgsender_MSG != null;
[L3745]              Balance[this] := 0;
[L3759]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3760]  COND FALSE  !(revert)
[L4405]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4406]  COND FALSE  !(revert)
[L4409]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4058]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3759]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3744]              assume msgsender_MSG != null;
[L3745]              Balance[this] := 0;
[L3759]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3760]  COND FALSE  !(revert)
[L4058]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4059]  COND FALSE  !(revert)
[L4062]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4039]              assume msgsender_MSG != null;
[L4040]              Balance[this] := 0;
[L4062]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4063]  COND FALSE  !(revert)
[L4409]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4410]  COND FALSE  !(revert)
[L4413]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3801]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3759]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3744]              assume msgsender_MSG != null;
[L3745]              Balance[this] := 0;
[L3759]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3760]  COND FALSE  !(revert)
[L3801]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3802]  COND FALSE  !(revert)
[L3805]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3779]              assume msgsender_MSG != null;
[L3780]              Balance[this] := 0;
[L3781]              balances_BasicToken[this] := zeroRefintArr();
[L3782]              sum_balances0[this] := 0;
[L3783]              totalSupply__BasicToken[this] := 0;
[L3805]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3806]  COND FALSE  !(revert)
[L4413]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4414]  COND FALSE  !(revert)
[L4417]  CALL        call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4110]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3759]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3744]              assume msgsender_MSG != null;
[L3745]              Balance[this] := 0;
[L3759]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3760]  COND FALSE  !(revert)
[L4110]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4111]  COND FALSE  !(revert)
[L4114]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4058]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3759]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3744]              assume msgsender_MSG != null;
[L3745]              Balance[this] := 0;
[L3759]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3760]  COND FALSE  !(revert)
[L4058]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4059]  COND FALSE  !(revert)
[L4062]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4039]              assume msgsender_MSG != null;
[L4040]              Balance[this] := 0;
[L4062]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4063]  COND FALSE  !(revert)
[L4114]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4115]  COND FALSE  !(revert)
[L4118]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3801]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3759]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3744]              assume msgsender_MSG != null;
[L3745]              Balance[this] := 0;
[L3759]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3760]  COND FALSE  !(revert)
[L3801]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3802]  COND FALSE  !(revert)
[L3805]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3779]              assume msgsender_MSG != null;
[L3780]              Balance[this] := 0;
[L3781]              balances_BasicToken[this] := zeroRefintArr();
[L3782]              sum_balances0[this] := 0;
[L3783]              totalSupply__BasicToken[this] := 0;
[L3805]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3806]  COND FALSE  !(revert)
[L4118]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4119]  COND FALSE  !(revert)
[L4122]  CALL        call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4081]              assume msgsender_MSG != null;
[L4082]              Balance[this] := 0;
[L4083]              allowed_StandardToken[this] := zeroRefRefintArr();
[L4084]              sum_allowed1[this] := 0;
[L4122]  RET         call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4123]  COND FALSE  !(revert)
[L4417]  RET         call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4418]  COND FALSE  !(revert)
[L4421]  CALL        call BurnableToken_BurnableToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3934]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3759]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3744]              assume msgsender_MSG != null;
[L3745]              Balance[this] := 0;
[L3759]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3760]  COND FALSE  !(revert)
[L3934]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3935]  COND FALSE  !(revert)
[L3938]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3801]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3759]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3744]              assume msgsender_MSG != null;
[L3745]              Balance[this] := 0;
[L3759]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3760]  COND FALSE  !(revert)
[L3801]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3802]  COND FALSE  !(revert)
[L3805]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3779]              assume msgsender_MSG != null;
[L3780]              Balance[this] := 0;
[L3781]              balances_BasicToken[this] := zeroRefintArr();
[L3782]              sum_balances0[this] := 0;
[L3783]              totalSupply__BasicToken[this] := 0;
[L3805]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3806]  COND FALSE  !(revert)
[L3938]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3939]  COND FALSE  !(revert)
[L3942]  CALL        call BurnableToken_BurnableToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3911]              assume msgsender_MSG != null;
[L3912]              Balance[this] := 0;
[L3942]  RET         call BurnableToken_BurnableToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3943]  COND FALSE  !(revert)
[L4421]  RET         call BurnableToken_BurnableToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4422]  COND FALSE  !(revert)
[L4425]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3620]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3603]              assume msgsender_MSG != null;
[L3604]              Balance[this] := 0;
[L3605]              owner_Ownable[this] := null;
[L3607]              owner_Ownable[this] := msgsender_MSG;
[L3620]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3621]  COND FALSE  !(revert)
[L4425]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4426]  COND FALSE  !(revert)
[L4429]  CALL        call AirBasicToken_AirBasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4349]              assume msgsender_MSG != null;
[L4350]              Balance[this] := 0;
[L4351]              name_AirBasicToken[this] := 1433815699;
[L4352]              symbol_AirBasicToken[this] := -1312980976;
[L4353]              decimals_AirBasicToken[this] := 18;
[L4354]              __var_12 := decimals_AirBasicToken[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4355]              INITIAL_SUPPLY_AirBasicToken[this] := 1282793976 * (nonlinearPow(10, decimals_AirBasicToken[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4356]              balanceLocked_AirBasicToken[this] := zeroRefboolArr();
[L4357]              amountRaised_AirBasicToken[this] := 0;
[L4358]              buyPrice_AirBasicToken[this] := 100000;
[L4359]              crowdsaleClosed_AirBasicToken[this] := true;
[L4360]              transferEnabled_AirBasicToken[this] := true;
[L4362]              totalSupply__BasicToken[this] := INITIAL_SUPPLY_AirBasicToken[this];
[L4363]              sum_balances0[this] := sum_balances0[this] - balances_BasicToken[this][msgsender_MSG];
[L4364]              balances_BasicToken[this][msgsender_MSG] := INITIAL_SUPPLY_AirBasicToken[this];
[L4365]              sum_balances0[this] := sum_balances0[this] + balances_BasicToken[this][msgsender_MSG];
[L4366]              assert { :EventEmitted "Transfer_AirBasicToken" } true;
[L4429]  RET         call AirBasicToken_AirBasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4430]  COND FALSE  !(revert)
[L1454]  RET         call AirBasicToken_AirBasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1455]              assume !revert && gas >= 0;
[L7070]  RET         call AirBasicToken_AirBasicToken(this, msgsender_MSG, msgvalue_MSG);
[L7071]              assume !revert && gas >= 0;
[L7074]  CALL        call CorralChoice_AirBasicToken(this);
[L6845]              havoc msgsender_MSG;
[L6846]              havoc msgvalue_MSG;
[L6847]              havoc choice;
[L6848]              havoc __ret_0_owner;
[L6849]              havoc __ret_0_totalSupply;
[L6850]              havoc _owner_s237;
[L6851]              havoc __ret_0_balanceOf;
[L6852]              havoc _to_s841;
[L6853]              havoc _value_s841;
[L6854]              havoc __ret_0_transfer;
[L6855]              havoc _value_s258;
[L6856]              havoc _owner_s486;
[L6857]              havoc _spender_s486;
[L6858]              havoc __ret_0_allowance;
[L6859]              havoc _from_s813;
[L6860]              havoc _to_s813;
[L6861]              havoc _value_s813;
[L6862]              havoc __ret_0_transferFrom;
[L6863]              havoc _spender_s470;
[L6864]              havoc _value_s470;
[L6865]              havoc __ret_0_approve;
[L6866]              havoc _spender_s527;
[L6867]              havoc _addedValue_s527;
[L6868]              havoc __ret_0_increaseApproval;
[L6869]              havoc _spender_s587;
[L6870]              havoc _subtractedValue_s587;
[L6871]              havoc __ret_0_decreaseApproval;
[L6872]              havoc __ret_0_name;
[L6873]              havoc __ret_0_symbol;
[L6874]              havoc __ret_0_decimals;
[L6875]              havoc __ret_0_INITIAL_SUPPLY;
[L6876]              havoc arg904_s0;
[L6877]              havoc __ret_0_balanceLocked;
[L6878]              havoc __ret_0_amountRaised;
[L6879]              havoc __ret_0_buyPrice;
[L6880]              havoc __ret_0_crowdsaleClosed;
[L6881]              havoc __ret_0_transferEnabled;
[L6882]              havoc newBuyPrice_s722;
[L6883]              havoc closebuy_s734;
[L6884]              havoc _enable_s783;
[L6885]              havoc _addr_s871;
[L6886]              havoc _addr_s901;
[L6887]              havoc tmpNow;
[L6888]              havoc gas;
[L6889]              assume gas > 4000000 && gas <= 8000000;
[L6890]              tmpNow := now;
[L6891]              havoc now;
[L6892]              assume now > tmpNow;
[L6893]              assume msgsender_MSG != null;
[L6894]              assume DType[msgsender_MSG] != Ownable;
[L6895]              assume DType[msgsender_MSG] != SafeMath;
[L6896]              assume DType[msgsender_MSG] != ERC20Basic;
[L6897]              assume DType[msgsender_MSG] != BasicToken;
[L6898]              assume DType[msgsender_MSG] != BurnableToken;
[L6899]              assume DType[msgsender_MSG] != ERC20;
[L6900]              assume DType[msgsender_MSG] != StandardToken;
[L6901]              assume DType[msgsender_MSG] != AirBasicToken;
[L6902]              Alloc[msgsender_MSG] := true;
[L6903]  COND FALSE  !(choice == 24)
[L6909]  COND FALSE  !(choice == 23)
[L6915]  COND FALSE  !(choice == 22)
[L6921]  COND FALSE  !(choice == 21)
[L6928]  COND FALSE  !(choice == 20)
[L6935]  COND FALSE  !(choice == 19)
[L6941]  COND FALSE  !(choice == 18)
[L6948]  COND TRUE   choice == 17
[L6949]              gas := gas - 21000;
[L6950]  COND TRUE   gas >= 0
[L6951]              assume _value_s470 >= 0 && _value_s470 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L6952]              assume msgvalue_MSG == 0;
[L6953]  CALL        call __ret_0_approve := approve~address~uint256_StandardToken(this, msgsender_MSG, msgvalue_MSG, _spender_s470, _value_s470);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != _spender_s470;
[L3]                 call_approve_StandardToken0 := true;
[L3]                 call_approve_StandardToken0 := false;
[L3]                 revert := revert_hold;
[L1089]              havoc __exception;
[L1090]              revert := false;
[L1091]  COND FALSE  !(__exception)
[L1123]  CALL        call __ret_0_ := approve~address~uint256_StandardToken__success(this, msgsender_MSG, msgvalue_MSG, _spender_s470, _value_s470);
[L4228]              sum_allowed1[msgsender_MSG] := sum_allowed1[msgsender_MSG] - allowed_StandardToken[this][msgsender_MSG][_spender_s470];
[L4229]              allowed_StandardToken[this][msgsender_MSG][_spender_s470] := _value_s470;
[L4230]              sum_allowed1[msgsender_MSG] := sum_allowed1[msgsender_MSG] + allowed_StandardToken[this][msgsender_MSG][_spender_s470];
[L4231]              assert { :EventEmitted "Approval_StandardToken" } true;
[L4232]              __ret_0_ := true;
[L1123]  RET         call __ret_0_ := approve~address~uint256_StandardToken__success(this, msgsender_MSG, msgvalue_MSG, _spender_s470, _value_s470);
[L1124]              assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !((((((((((__ret_0_ == true && allowed_StandardToken[this][msgsender_MSG][_spender_s470] == _value_s470) && totalSupply__BasicToken[this] == old(totalSupply__BasicToken[this])) && balances_BasicToken[this] == old(balances_BasicToken[this])) && allowed_StandardToken[this][p1][p2] == old(allowed_StandardToken[this][p1][p2])) && balanceLocked_AirBasicToken[this] == old(balanceLocked_AirBasicToken[this])) && amountRaised_AirBasicToken[this] == old(amountRaised_AirBasicToken[this])) && buyPrice_AirBasicToken[this] == old(buyPrice_AirBasicToken[this])) && crowdsaleClosed_AirBasicToken[this] == old(crowdsaleClosed_AirBasicToken[this])) && transferEnabled_AirBasicToken[this] == old(transferEnabled_AirBasicToken[this])) && owner_Ownable[this] == old(owner_Ownable[this]));
[L3]                 revert := revert_hold;
[L6953]  RET         call __ret_0_approve := approve~address~uint256_StandardToken(this, msgsender_MSG, msgvalue_MSG, _spender_s470, _value_s470);
[L7074]  RET         call CorralChoice_AirBasicToken(this);

Loop:
[L7074]  CALL        call CorralChoice_AirBasicToken(this);
[L6845]              havoc msgsender_MSG;
[L6846]              havoc msgvalue_MSG;
[L6847]              havoc choice;
[L6848]              havoc __ret_0_owner;
[L6849]              havoc __ret_0_totalSupply;
[L6850]              havoc _owner_s237;
[L6851]              havoc __ret_0_balanceOf;
[L6852]              havoc _to_s841;
[L6853]              havoc _value_s841;
[L6854]              havoc __ret_0_transfer;
[L6855]              havoc _value_s258;
[L6856]              havoc _owner_s486;
[L6857]              havoc _spender_s486;
[L6858]              havoc __ret_0_allowance;
[L6859]              havoc _from_s813;
[L6860]              havoc _to_s813;
[L6861]              havoc _value_s813;
[L6862]              havoc __ret_0_transferFrom;
[L6863]              havoc _spender_s470;
[L6864]              havoc _value_s470;
[L6865]              havoc __ret_0_approve;
[L6866]              havoc _spender_s527;
[L6867]              havoc _addedValue_s527;
[L6868]              havoc __ret_0_increaseApproval;
[L6869]              havoc _spender_s587;
[L6870]              havoc _subtractedValue_s587;
[L6871]              havoc __ret_0_decreaseApproval;
[L6872]              havoc __ret_0_name;
[L6873]              havoc __ret_0_symbol;
[L6874]              havoc __ret_0_decimals;
[L6875]              havoc __ret_0_INITIAL_SUPPLY;
[L6876]              havoc arg904_s0;
[L6877]              havoc __ret_0_balanceLocked;
[L6878]              havoc __ret_0_amountRaised;
[L6879]              havoc __ret_0_buyPrice;
[L6880]              havoc __ret_0_crowdsaleClosed;
[L6881]              havoc __ret_0_transferEnabled;
[L6882]              havoc newBuyPrice_s722;
[L6883]              havoc closebuy_s734;
[L6884]              havoc _enable_s783;
[L6885]              havoc _addr_s871;
[L6886]              havoc _addr_s901;
[L6887]              havoc tmpNow;
[L6888]              havoc gas;
[L6889]              assume gas > 4000000 && gas <= 8000000;
[L6890]              tmpNow := now;
[L6891]              havoc now;
[L6892]              assume now > tmpNow;
[L6893]              assume msgsender_MSG != null;
[L6894]              assume DType[msgsender_MSG] != Ownable;
[L6895]              assume DType[msgsender_MSG] != SafeMath;
[L6896]              assume DType[msgsender_MSG] != ERC20Basic;
[L6897]              assume DType[msgsender_MSG] != BasicToken;
[L6898]              assume DType[msgsender_MSG] != BurnableToken;
[L6899]              assume DType[msgsender_MSG] != ERC20;
[L6900]              assume DType[msgsender_MSG] != StandardToken;
[L6901]              assume DType[msgsender_MSG] != AirBasicToken;
[L6902]              Alloc[msgsender_MSG] := true;
[L6903]  COND FALSE  !(choice == 24)
[L6909]  COND FALSE  !(choice == 23)
[L6915]  COND FALSE  !(choice == 22)
[L6921]  COND FALSE  !(choice == 21)
[L6928]  COND FALSE  !(choice == 20)
[L6935]  COND FALSE  !(choice == 19)
[L6941]  COND FALSE  !(choice == 18)
[L6948]  COND TRUE   choice == 17
[L6949]              gas := gas - 21000;
[L6950]  COND TRUE   gas >= 0
[L6951]              assume _value_s470 >= 0 && _value_s470 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L6952]              assume msgvalue_MSG == 0;
[L6953]  CALL        call __ret_0_approve := approve~address~uint256_StandardToken(this, msgsender_MSG, msgvalue_MSG, _spender_s470, _value_s470);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != _spender_s470;
[L3]                 call_approve_StandardToken0 := true;
[L3]                 call_approve_StandardToken0 := false;
[L3]                 revert := revert_hold;
[L1089]              havoc __exception;
[L1090]              revert := false;
[L1091]  COND FALSE  !(__exception)
[L1123]  CALL        call __ret_0_ := approve~address~uint256_StandardToken__success(this, msgsender_MSG, msgvalue_MSG, _spender_s470, _value_s470);
[L4228]              sum_allowed1[msgsender_MSG] := sum_allowed1[msgsender_MSG] - allowed_StandardToken[this][msgsender_MSG][_spender_s470];
[L4229]              allowed_StandardToken[this][msgsender_MSG][_spender_s470] := _value_s470;
[L4230]              sum_allowed1[msgsender_MSG] := sum_allowed1[msgsender_MSG] + allowed_StandardToken[this][msgsender_MSG][_spender_s470];
[L4231]              assert { :EventEmitted "Approval_StandardToken" } true;
[L4232]              __ret_0_ := true;
[L1123]  RET         call __ret_0_ := approve~address~uint256_StandardToken__success(this, msgsender_MSG, msgvalue_MSG, _spender_s470, _value_s470);
[L1124]              assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !((((((((((__ret_0_ == true && allowed_StandardToken[this][msgsender_MSG][_spender_s470] == _value_s470) && totalSupply__BasicToken[this] == old(totalSupply__BasicToken[this])) && balances_BasicToken[this] == old(balances_BasicToken[this])) && allowed_StandardToken[this][p1][p2] == old(allowed_StandardToken[this][p1][p2])) && balanceLocked_AirBasicToken[this] == old(balanceLocked_AirBasicToken[this])) && amountRaised_AirBasicToken[this] == old(amountRaised_AirBasicToken[this])) && buyPrice_AirBasicToken[this] == old(buyPrice_AirBasicToken[this])) && crowdsaleClosed_AirBasicToken[this] == old(crowdsaleClosed_AirBasicToken[this])) && transferEnabled_AirBasicToken[this] == old(transferEnabled_AirBasicToken[this])) && owner_Ownable[this] == old(owner_Ownable[this]));
[L3]                 revert := revert_hold;
[L6953]  RET         call __ret_0_approve := approve~address~uint256_StandardToken(this, msgsender_MSG, msgvalue_MSG, _spender_s470, _value_s470);
[L7074]  RET         call CorralChoice_AirBasicToken(this);

[2020-11-24 23:40:40,119 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 23:40:40,119 INFO  L82        PathProgramCache]: Analyzing trace with hash 2093419855, now seen corresponding path program 1 times
[2020-11-24 23:40:40,120 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 23:40:40,157 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 23:40:40,362 INFO  L134       CoverageAnalysis]: Checked inductivity of 345 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 345 trivial. 0 not checked.
[2020-11-24 23:40:40,362 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 23:40:40,363 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [13] imperfect sequences [] total 13
[2020-11-24 23:40:40,363 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 23:40:40,363 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 14 interpolants.
[2020-11-24 23:40:40,363 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=27, Invalid=155, Unknown=0, NotChecked=0, Total=182
[2020-11-24 23:40:40,363 INFO  L87              Difference]: Start difference. First operand 4138 states and 4512 transitions. cyclomatic complexity: 384 Second operand 14 states.
[2020-11-24 23:40:42,547 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 23:40:42,547 INFO  L93              Difference]: Finished difference Result 4282 states and 4694 transitions.
[2020-11-24 23:40:42,547 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 14 states. 
[2020-11-24 23:40:42,548 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 4282 states and 4694 transitions.
[2020-11-24 23:40:42,556 INFO  L131   ngComponentsAnalysis]: Automaton has 3 accepting balls. 12
[2020-11-24 23:40:42,568 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 4282 states to 4282 states and 4694 transitions.
[2020-11-24 23:40:42,568 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 1186
[2020-11-24 23:40:42,569 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 1186
[2020-11-24 23:40:42,569 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 4282 states and 4694 transitions.
[2020-11-24 23:40:42,573 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 23:40:42,573 INFO  L728         BuchiCegarLoop]: Abstraction has 4282 states and 4694 transitions.
[2020-11-24 23:40:42,576 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 4282 states and 4694 transitions.
[2020-11-24 23:40:42,606 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 4282 to 4240.
[2020-11-24 23:40:42,606 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 4240 states.
[2020-11-24 23:40:42,612 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 4240 states to 4240 states and 4637 transitions.
[2020-11-24 23:40:42,612 INFO  L751         BuchiCegarLoop]: Abstraction has 4240 states and 4637 transitions.
[2020-11-24 23:40:42,612 INFO  L631         BuchiCegarLoop]: Abstraction has 4240 states and 4637 transitions.
[2020-11-24 23:40:42,612 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-24 23:40:42,612 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 4240 states and 4637 transitions.
[2020-11-24 23:40:42,617 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 8
[2020-11-24 23:40:42,617 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 23:40:42,618 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 23:40:42,619 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [8, 8, 8, 8, 8, 8, 8, 8, 8, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 23:40:42,619 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_approve_StandardToken0 := false;
[L3]                 call_approve_StandardToken0 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L7064]              assume null == 0;
[L7065]  CALL        call this := FreshRefGenerator__success();
[L3584]              havoc newRef;
[L3585]              assume Alloc[newRef] == false;
[L3586]              Alloc[newRef] := true;
[L3587]              assume newRef != null;
[L7065]  RET         call this := FreshRefGenerator__success();
[L7066]              assume now >= 0;
[L7067]              assume DType[this] == AirBasicToken;
[L7068]              assume msgvalue_MSG == 0;
[L7069]              gas := gas - 53000;
[L7070]  CALL        call AirBasicToken_AirBasicToken(this, msgsender_MSG, msgvalue_MSG);
[L1420]              havoc __exception;
[L1421]              revert := false;
[L1422]  COND FALSE  !(__exception)
[L1454]  CALL        call AirBasicToken_AirBasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4405]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3759]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3744]              assume msgsender_MSG != null;
[L3745]              Balance[this] := 0;
[L3759]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3760]  COND FALSE  !(revert)
[L4405]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4406]  COND FALSE  !(revert)
[L4409]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4058]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3759]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3744]              assume msgsender_MSG != null;
[L3745]              Balance[this] := 0;
[L3759]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3760]  COND FALSE  !(revert)
[L4058]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4059]  COND FALSE  !(revert)
[L4062]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4039]              assume msgsender_MSG != null;
[L4040]              Balance[this] := 0;
[L4062]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4063]  COND FALSE  !(revert)
[L4409]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4410]  COND FALSE  !(revert)
[L4413]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3801]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3759]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3744]              assume msgsender_MSG != null;
[L3745]              Balance[this] := 0;
[L3759]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3760]  COND FALSE  !(revert)
[L3801]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3802]  COND FALSE  !(revert)
[L3805]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3779]              assume msgsender_MSG != null;
[L3780]              Balance[this] := 0;
[L3781]              balances_BasicToken[this] := zeroRefintArr();
[L3782]              sum_balances0[this] := 0;
[L3783]              totalSupply__BasicToken[this] := 0;
[L3805]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3806]  COND FALSE  !(revert)
[L4413]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4414]  COND FALSE  !(revert)
[L4417]  CALL        call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4110]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3759]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3744]              assume msgsender_MSG != null;
[L3745]              Balance[this] := 0;
[L3759]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3760]  COND FALSE  !(revert)
[L4110]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4111]  COND FALSE  !(revert)
[L4114]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4058]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3759]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3744]              assume msgsender_MSG != null;
[L3745]              Balance[this] := 0;
[L3759]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3760]  COND FALSE  !(revert)
[L4058]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4059]  COND FALSE  !(revert)
[L4062]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4039]              assume msgsender_MSG != null;
[L4040]              Balance[this] := 0;
[L4062]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4063]  COND FALSE  !(revert)
[L4114]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4115]  COND FALSE  !(revert)
[L4118]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3801]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3759]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3744]              assume msgsender_MSG != null;
[L3745]              Balance[this] := 0;
[L3759]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3760]  COND FALSE  !(revert)
[L3801]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3802]  COND FALSE  !(revert)
[L3805]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3779]              assume msgsender_MSG != null;
[L3780]              Balance[this] := 0;
[L3781]              balances_BasicToken[this] := zeroRefintArr();
[L3782]              sum_balances0[this] := 0;
[L3783]              totalSupply__BasicToken[this] := 0;
[L3805]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3806]  COND FALSE  !(revert)
[L4118]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4119]  COND FALSE  !(revert)
[L4122]  CALL        call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4081]              assume msgsender_MSG != null;
[L4082]              Balance[this] := 0;
[L4083]              allowed_StandardToken[this] := zeroRefRefintArr();
[L4084]              sum_allowed1[this] := 0;
[L4122]  RET         call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4123]  COND FALSE  !(revert)
[L4417]  RET         call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4418]  COND FALSE  !(revert)
[L4421]  CALL        call BurnableToken_BurnableToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3934]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3759]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3744]              assume msgsender_MSG != null;
[L3745]              Balance[this] := 0;
[L3759]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3760]  COND FALSE  !(revert)
[L3934]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3935]  COND FALSE  !(revert)
[L3938]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3801]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3759]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3744]              assume msgsender_MSG != null;
[L3745]              Balance[this] := 0;
[L3759]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3760]  COND FALSE  !(revert)
[L3801]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3802]  COND FALSE  !(revert)
[L3805]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3779]              assume msgsender_MSG != null;
[L3780]              Balance[this] := 0;
[L3781]              balances_BasicToken[this] := zeroRefintArr();
[L3782]              sum_balances0[this] := 0;
[L3783]              totalSupply__BasicToken[this] := 0;
[L3805]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3806]  COND FALSE  !(revert)
[L3938]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3939]  COND FALSE  !(revert)
[L3942]  CALL        call BurnableToken_BurnableToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3911]              assume msgsender_MSG != null;
[L3912]              Balance[this] := 0;
[L3942]  RET         call BurnableToken_BurnableToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3943]  COND FALSE  !(revert)
[L4421]  RET         call BurnableToken_BurnableToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4422]  COND FALSE  !(revert)
[L4425]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3620]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3603]              assume msgsender_MSG != null;
[L3604]              Balance[this] := 0;
[L3605]              owner_Ownable[this] := null;
[L3607]              owner_Ownable[this] := msgsender_MSG;
[L3620]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3621]  COND FALSE  !(revert)
[L4425]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4426]  COND FALSE  !(revert)
[L4429]  CALL        call AirBasicToken_AirBasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4349]              assume msgsender_MSG != null;
[L4350]              Balance[this] := 0;
[L4351]              name_AirBasicToken[this] := 1433815699;
[L4352]              symbol_AirBasicToken[this] := -1312980976;
[L4353]              decimals_AirBasicToken[this] := 18;
[L4354]              __var_12 := decimals_AirBasicToken[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4355]              INITIAL_SUPPLY_AirBasicToken[this] := 1282793976 * (nonlinearPow(10, decimals_AirBasicToken[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4356]              balanceLocked_AirBasicToken[this] := zeroRefboolArr();
[L4357]              amountRaised_AirBasicToken[this] := 0;
[L4358]              buyPrice_AirBasicToken[this] := 100000;
[L4359]              crowdsaleClosed_AirBasicToken[this] := true;
[L4360]              transferEnabled_AirBasicToken[this] := true;
[L4362]              totalSupply__BasicToken[this] := INITIAL_SUPPLY_AirBasicToken[this];
[L4363]              sum_balances0[this] := sum_balances0[this] - balances_BasicToken[this][msgsender_MSG];
[L4364]              balances_BasicToken[this][msgsender_MSG] := INITIAL_SUPPLY_AirBasicToken[this];
[L4365]              sum_balances0[this] := sum_balances0[this] + balances_BasicToken[this][msgsender_MSG];
[L4366]              assert { :EventEmitted "Transfer_AirBasicToken" } true;
[L4429]  RET         call AirBasicToken_AirBasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4430]  COND FALSE  !(revert)
[L1454]  RET         call AirBasicToken_AirBasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1455]              assume !revert && gas >= 0;
[L7070]  RET         call AirBasicToken_AirBasicToken(this, msgsender_MSG, msgvalue_MSG);
[L7071]              assume !revert && gas >= 0;
[L7074]  CALL        call CorralChoice_AirBasicToken(this);
[L6845]              havoc msgsender_MSG;
[L6846]              havoc msgvalue_MSG;
[L6847]              havoc choice;
[L6848]              havoc __ret_0_owner;
[L6849]              havoc __ret_0_totalSupply;
[L6850]              havoc _owner_s237;
[L6851]              havoc __ret_0_balanceOf;
[L6852]              havoc _to_s841;
[L6853]              havoc _value_s841;
[L6854]              havoc __ret_0_transfer;
[L6855]              havoc _value_s258;
[L6856]              havoc _owner_s486;
[L6857]              havoc _spender_s486;
[L6858]              havoc __ret_0_allowance;
[L6859]              havoc _from_s813;
[L6860]              havoc _to_s813;
[L6861]              havoc _value_s813;
[L6862]              havoc __ret_0_transferFrom;
[L6863]              havoc _spender_s470;
[L6864]              havoc _value_s470;
[L6865]              havoc __ret_0_approve;
[L6866]              havoc _spender_s527;
[L6867]              havoc _addedValue_s527;
[L6868]              havoc __ret_0_increaseApproval;
[L6869]              havoc _spender_s587;
[L6870]              havoc _subtractedValue_s587;
[L6871]              havoc __ret_0_decreaseApproval;
[L6872]              havoc __ret_0_name;
[L6873]              havoc __ret_0_symbol;
[L6874]              havoc __ret_0_decimals;
[L6875]              havoc __ret_0_INITIAL_SUPPLY;
[L6876]              havoc arg904_s0;
[L6877]              havoc __ret_0_balanceLocked;
[L6878]              havoc __ret_0_amountRaised;
[L6879]              havoc __ret_0_buyPrice;
[L6880]              havoc __ret_0_crowdsaleClosed;
[L6881]              havoc __ret_0_transferEnabled;
[L6882]              havoc newBuyPrice_s722;
[L6883]              havoc closebuy_s734;
[L6884]              havoc _enable_s783;
[L6885]              havoc _addr_s871;
[L6886]              havoc _addr_s901;
[L6887]              havoc tmpNow;
[L6888]              havoc gas;
[L6889]              assume gas > 4000000 && gas <= 8000000;
[L6890]              tmpNow := now;
[L6891]              havoc now;
[L6892]              assume now > tmpNow;
[L6893]              assume msgsender_MSG != null;
[L6894]              assume DType[msgsender_MSG] != Ownable;
[L6895]              assume DType[msgsender_MSG] != SafeMath;
[L6896]              assume DType[msgsender_MSG] != ERC20Basic;
[L6897]              assume DType[msgsender_MSG] != BasicToken;
[L6898]              assume DType[msgsender_MSG] != BurnableToken;
[L6899]              assume DType[msgsender_MSG] != ERC20;
[L6900]              assume DType[msgsender_MSG] != StandardToken;
[L6901]              assume DType[msgsender_MSG] != AirBasicToken;
[L6902]              Alloc[msgsender_MSG] := true;
[L6903]  COND FALSE  !(choice == 24)
[L6909]  COND FALSE  !(choice == 23)
[L6915]  COND FALSE  !(choice == 22)
[L6921]  COND FALSE  !(choice == 21)
[L6928]  COND FALSE  !(choice == 20)
[L6935]  COND FALSE  !(choice == 19)
[L6941]  COND FALSE  !(choice == 18)
[L6948]  COND TRUE   choice == 17
[L6949]              gas := gas - 21000;
[L6950]  COND TRUE   gas >= 0
[L6951]              assume _value_s470 >= 0 && _value_s470 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L6952]              assume msgvalue_MSG == 0;
[L6953]  CALL        call __ret_0_approve := approve~address~uint256_StandardToken(this, msgsender_MSG, msgvalue_MSG, _spender_s470, _value_s470);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != _spender_s470;
[L3]                 call_approve_StandardToken0 := true;
[L3]                 call_approve_StandardToken0 := false;
[L3]                 revert := revert_hold;
[L1089]              havoc __exception;
[L1090]              revert := false;
[L1091]  COND TRUE   __exception
[L1092]              __tmp__Balance := Balance;
[L1093]              __tmp__DType := DType;
[L1094]              __tmp__Alloc := Alloc;
[L1095]              __tmp__balance_ADDR := balance_ADDR;
[L1096]              __tmp__M_Ref_int := M_Ref_int;
[L1097]              __tmp__sum_balances0 := sum_balances0;
[L1098]              __tmp__alloc_allowed_StandardToken_lvl0 := alloc_allowed_StandardToken_lvl0;
[L1099]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L1100]              __tmp__sum_allowed1 := sum_allowed1;
[L1101]              __tmp__M_Ref_bool := M_Ref_bool;
[L1102]              __tmp__sum_balanceLocked2 := sum_balanceLocked2;
[L1103]              __tmp__M_int_Ref := M_int_Ref;
[L1104]              __tmp__sum := sum;
[L1105]              __tmp__Length := Length;
[L1106]              __tmp__now := now;
[L1107]              __tmp__owner_Ownable := owner_Ownable;
[L1108]              __tmp__balances_BasicToken := balances_BasicToken;
[L1109]              __tmp__totalSupply__BasicToken := totalSupply__BasicToken;
[L1110]              __tmp__allowed_StandardToken := allowed_StandardToken;
[L1111]              __tmp__name_AirBasicToken := name_AirBasicToken;
[L1112]              __tmp__symbol_AirBasicToken := symbol_AirBasicToken;
[L1113]              __tmp__decimals_AirBasicToken := decimals_AirBasicToken;
[L1114]              __tmp__INITIAL_SUPPLY_AirBasicToken := INITIAL_SUPPLY_AirBasicToken;
[L1115]              __tmp__balanceLocked_AirBasicToken := balanceLocked_AirBasicToken;
[L1116]              __tmp__amountRaised_AirBasicToken := amountRaised_AirBasicToken;
[L1117]              __tmp__buyPrice_AirBasicToken := buyPrice_AirBasicToken;
[L1118]              __tmp__crowdsaleClosed_AirBasicToken := crowdsaleClosed_AirBasicToken;
[L1119]              __tmp__transferEnabled_AirBasicToken := transferEnabled_AirBasicToken;
[L1120]  CALL        call __ret_0_ := approve~address~uint256_StandardToken__fail(this, msgsender_MSG, msgvalue_MSG, _spender_s470, _value_s470);
[L4219]              __tmp__sum_allowed1[msgsender_MSG] := __tmp__sum_allowed1[msgsender_MSG] - __tmp__allowed_StandardToken[this][msgsender_MSG][_spender_s470];
[L4220]              __tmp__allowed_StandardToken[this][msgsender_MSG][_spender_s470] := _value_s470;
[L4221]              __tmp__sum_allowed1[msgsender_MSG] := __tmp__sum_allowed1[msgsender_MSG] + __tmp__allowed_StandardToken[this][msgsender_MSG][_spender_s470];
[L4222]              __ret_0_ := true;
[L1120]  RET         call __ret_0_ := approve~address~uint256_StandardToken__fail(this, msgsender_MSG, msgvalue_MSG, _spender_s470, _value_s470);
[L1121]              assume revert || gas < 0;
[L6953]  RET         call __ret_0_approve := approve~address~uint256_StandardToken(this, msgsender_MSG, msgvalue_MSG, _spender_s470, _value_s470);
[L7074]  RET         call CorralChoice_AirBasicToken(this);

Loop:
[L7074]  CALL        call CorralChoice_AirBasicToken(this);
[L6845]              havoc msgsender_MSG;
[L6846]              havoc msgvalue_MSG;
[L6847]              havoc choice;
[L6848]              havoc __ret_0_owner;
[L6849]              havoc __ret_0_totalSupply;
[L6850]              havoc _owner_s237;
[L6851]              havoc __ret_0_balanceOf;
[L6852]              havoc _to_s841;
[L6853]              havoc _value_s841;
[L6854]              havoc __ret_0_transfer;
[L6855]              havoc _value_s258;
[L6856]              havoc _owner_s486;
[L6857]              havoc _spender_s486;
[L6858]              havoc __ret_0_allowance;
[L6859]              havoc _from_s813;
[L6860]              havoc _to_s813;
[L6861]              havoc _value_s813;
[L6862]              havoc __ret_0_transferFrom;
[L6863]              havoc _spender_s470;
[L6864]              havoc _value_s470;
[L6865]              havoc __ret_0_approve;
[L6866]              havoc _spender_s527;
[L6867]              havoc _addedValue_s527;
[L6868]              havoc __ret_0_increaseApproval;
[L6869]              havoc _spender_s587;
[L6870]              havoc _subtractedValue_s587;
[L6871]              havoc __ret_0_decreaseApproval;
[L6872]              havoc __ret_0_name;
[L6873]              havoc __ret_0_symbol;
[L6874]              havoc __ret_0_decimals;
[L6875]              havoc __ret_0_INITIAL_SUPPLY;
[L6876]              havoc arg904_s0;
[L6877]              havoc __ret_0_balanceLocked;
[L6878]              havoc __ret_0_amountRaised;
[L6879]              havoc __ret_0_buyPrice;
[L6880]              havoc __ret_0_crowdsaleClosed;
[L6881]              havoc __ret_0_transferEnabled;
[L6882]              havoc newBuyPrice_s722;
[L6883]              havoc closebuy_s734;
[L6884]              havoc _enable_s783;
[L6885]              havoc _addr_s871;
[L6886]              havoc _addr_s901;
[L6887]              havoc tmpNow;
[L6888]              havoc gas;
[L6889]              assume gas > 4000000 && gas <= 8000000;
[L6890]              tmpNow := now;
[L6891]              havoc now;
[L6892]              assume now > tmpNow;
[L6893]              assume msgsender_MSG != null;
[L6894]              assume DType[msgsender_MSG] != Ownable;
[L6895]              assume DType[msgsender_MSG] != SafeMath;
[L6896]              assume DType[msgsender_MSG] != ERC20Basic;
[L6897]              assume DType[msgsender_MSG] != BasicToken;
[L6898]              assume DType[msgsender_MSG] != BurnableToken;
[L6899]              assume DType[msgsender_MSG] != ERC20;
[L6900]              assume DType[msgsender_MSG] != StandardToken;
[L6901]              assume DType[msgsender_MSG] != AirBasicToken;
[L6902]              Alloc[msgsender_MSG] := true;
[L6903]  COND FALSE  !(choice == 24)
[L6909]  COND FALSE  !(choice == 23)
[L6915]  COND FALSE  !(choice == 22)
[L6921]  COND FALSE  !(choice == 21)
[L6928]  COND FALSE  !(choice == 20)
[L6935]  COND FALSE  !(choice == 19)
[L6941]  COND FALSE  !(choice == 18)
[L6948]  COND TRUE   choice == 17
[L6949]              gas := gas - 21000;
[L6950]  COND TRUE   gas >= 0
[L6951]              assume _value_s470 >= 0 && _value_s470 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L6952]              assume msgvalue_MSG == 0;
[L6953]  CALL        call __ret_0_approve := approve~address~uint256_StandardToken(this, msgsender_MSG, msgvalue_MSG, _spender_s470, _value_s470);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != _spender_s470;
[L3]                 call_approve_StandardToken0 := true;
[L3]                 call_approve_StandardToken0 := false;
[L3]                 revert := revert_hold;
[L1089]              havoc __exception;
[L1090]              revert := false;
[L1091]  COND TRUE   __exception
[L1092]              __tmp__Balance := Balance;
[L1093]              __tmp__DType := DType;
[L1094]              __tmp__Alloc := Alloc;
[L1095]              __tmp__balance_ADDR := balance_ADDR;
[L1096]              __tmp__M_Ref_int := M_Ref_int;
[L1097]              __tmp__sum_balances0 := sum_balances0;
[L1098]              __tmp__alloc_allowed_StandardToken_lvl0 := alloc_allowed_StandardToken_lvl0;
[L1099]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L1100]              __tmp__sum_allowed1 := sum_allowed1;
[L1101]              __tmp__M_Ref_bool := M_Ref_bool;
[L1102]              __tmp__sum_balanceLocked2 := sum_balanceLocked2;
[L1103]              __tmp__M_int_Ref := M_int_Ref;
[L1104]              __tmp__sum := sum;
[L1105]              __tmp__Length := Length;
[L1106]              __tmp__now := now;
[L1107]              __tmp__owner_Ownable := owner_Ownable;
[L1108]              __tmp__balances_BasicToken := balances_BasicToken;
[L1109]              __tmp__totalSupply__BasicToken := totalSupply__BasicToken;
[L1110]              __tmp__allowed_StandardToken := allowed_StandardToken;
[L1111]              __tmp__name_AirBasicToken := name_AirBasicToken;
[L1112]              __tmp__symbol_AirBasicToken := symbol_AirBasicToken;
[L1113]              __tmp__decimals_AirBasicToken := decimals_AirBasicToken;
[L1114]              __tmp__INITIAL_SUPPLY_AirBasicToken := INITIAL_SUPPLY_AirBasicToken;
[L1115]              __tmp__balanceLocked_AirBasicToken := balanceLocked_AirBasicToken;
[L1116]              __tmp__amountRaised_AirBasicToken := amountRaised_AirBasicToken;
[L1117]              __tmp__buyPrice_AirBasicToken := buyPrice_AirBasicToken;
[L1118]              __tmp__crowdsaleClosed_AirBasicToken := crowdsaleClosed_AirBasicToken;
[L1119]              __tmp__transferEnabled_AirBasicToken := transferEnabled_AirBasicToken;
[L1120]  CALL        call __ret_0_ := approve~address~uint256_StandardToken__fail(this, msgsender_MSG, msgvalue_MSG, _spender_s470, _value_s470);
[L4219]              __tmp__sum_allowed1[msgsender_MSG] := __tmp__sum_allowed1[msgsender_MSG] - __tmp__allowed_StandardToken[this][msgsender_MSG][_spender_s470];
[L4220]              __tmp__allowed_StandardToken[this][msgsender_MSG][_spender_s470] := _value_s470;
[L4221]              __tmp__sum_allowed1[msgsender_MSG] := __tmp__sum_allowed1[msgsender_MSG] + __tmp__allowed_StandardToken[this][msgsender_MSG][_spender_s470];
[L4222]              __ret_0_ := true;
[L1120]  RET         call __ret_0_ := approve~address~uint256_StandardToken__fail(this, msgsender_MSG, msgvalue_MSG, _spender_s470, _value_s470);
[L1121]              assume revert || gas < 0;
[L6953]  RET         call __ret_0_approve := approve~address~uint256_StandardToken(this, msgsender_MSG, msgvalue_MSG, _spender_s470, _value_s470);
[L7074]  RET         call CorralChoice_AirBasicToken(this);

[2020-11-24 23:40:42,623 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 23:40:42,623 INFO  L82        PathProgramCache]: Analyzing trace with hash 2099507880, now seen corresponding path program 1 times
[2020-11-24 23:40:42,624 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 23:40:42,635 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 23:40:42,694 INFO  L134       CoverageAnalysis]: Checked inductivity of 345 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 345 trivial. 0 not checked.
[2020-11-24 23:40:42,694 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 23:40:42,695 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [5] imperfect sequences [] total 5
[2020-11-24 23:40:42,695 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 23:40:42,695 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 5 interpolants.
[2020-11-24 23:40:42,695 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=7, Invalid=13, Unknown=0, NotChecked=0, Total=20
[2020-11-24 23:40:42,695 INFO  L87              Difference]: Start difference. First operand 4240 states and 4637 transitions. cyclomatic complexity: 409 Second operand 5 states.
[2020-11-24 23:40:43,200 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 23:40:43,201 INFO  L93              Difference]: Finished difference Result 5122 states and 5686 transitions.
[2020-11-24 23:40:43,201 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 7 states. 
[2020-11-24 23:40:43,201 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 5122 states and 5686 transitions.
[2020-11-24 23:40:43,216 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 12
[2020-11-24 23:40:43,227 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 5122 states to 3490 states and 4023 transitions.
[2020-11-24 23:40:43,228 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 662
[2020-11-24 23:40:43,228 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 937
[2020-11-24 23:40:43,228 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3490 states and 4023 transitions.
[2020-11-24 23:40:43,232 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 23:40:43,232 INFO  L728         BuchiCegarLoop]: Abstraction has 3490 states and 4023 transitions.
[2020-11-24 23:40:43,234 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3490 states and 4023 transitions.
[2020-11-24 23:40:43,257 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3490 to 2450.
[2020-11-24 23:40:43,257 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2450 states.
[2020-11-24 23:40:43,261 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2450 states to 2450 states and 2695 transitions.
[2020-11-24 23:40:43,262 INFO  L751         BuchiCegarLoop]: Abstraction has 2450 states and 2695 transitions.
[2020-11-24 23:40:43,262 INFO  L631         BuchiCegarLoop]: Abstraction has 2450 states and 2695 transitions.
[2020-11-24 23:40:43,262 INFO  L445         BuchiCegarLoop]: ======== Iteration 5============
[2020-11-24 23:40:43,262 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2450 states and 2695 transitions.
[2020-11-24 23:40:43,266 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-24 23:40:43,266 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 23:40:43,266 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 23:40:43,269 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [8, 8, 8, 8, 8, 8, 8, 8, 8, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 23:40:43,269 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_approve_StandardToken0 := false;
[L3]                 call_approve_StandardToken0 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L7064]              assume null == 0;
[L7065]  CALL        call this := FreshRefGenerator__success();
[L3584]              havoc newRef;
[L3585]              assume Alloc[newRef] == false;
[L3586]              Alloc[newRef] := true;
[L3587]              assume newRef != null;
[L7065]  RET         call this := FreshRefGenerator__success();
[L7066]              assume now >= 0;
[L7067]              assume DType[this] == AirBasicToken;
[L7068]              assume msgvalue_MSG == 0;
[L7069]              gas := gas - 53000;
[L7070]  CALL        call AirBasicToken_AirBasicToken(this, msgsender_MSG, msgvalue_MSG);
[L1420]              havoc __exception;
[L1421]              revert := false;
[L1422]  COND FALSE  !(__exception)
[L1454]  CALL        call AirBasicToken_AirBasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4405]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3759]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3744]              assume msgsender_MSG != null;
[L3745]              Balance[this] := 0;
[L3759]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3760]  COND FALSE  !(revert)
[L4405]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4406]  COND FALSE  !(revert)
[L4409]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4058]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3759]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3744]              assume msgsender_MSG != null;
[L3745]              Balance[this] := 0;
[L3759]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3760]  COND FALSE  !(revert)
[L4058]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4059]  COND FALSE  !(revert)
[L4062]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4039]              assume msgsender_MSG != null;
[L4040]              Balance[this] := 0;
[L4062]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4063]  COND FALSE  !(revert)
[L4409]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4410]  COND FALSE  !(revert)
[L4413]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3801]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3759]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3744]              assume msgsender_MSG != null;
[L3745]              Balance[this] := 0;
[L3759]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3760]  COND FALSE  !(revert)
[L3801]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3802]  COND FALSE  !(revert)
[L3805]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3779]              assume msgsender_MSG != null;
[L3780]              Balance[this] := 0;
[L3781]              balances_BasicToken[this] := zeroRefintArr();
[L3782]              sum_balances0[this] := 0;
[L3783]              totalSupply__BasicToken[this] := 0;
[L3805]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3806]  COND FALSE  !(revert)
[L4413]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4414]  COND FALSE  !(revert)
[L4417]  CALL        call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4110]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3759]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3744]              assume msgsender_MSG != null;
[L3745]              Balance[this] := 0;
[L3759]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3760]  COND FALSE  !(revert)
[L4110]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4111]  COND FALSE  !(revert)
[L4114]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4058]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3759]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3744]              assume msgsender_MSG != null;
[L3745]              Balance[this] := 0;
[L3759]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3760]  COND FALSE  !(revert)
[L4058]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4059]  COND FALSE  !(revert)
[L4062]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4039]              assume msgsender_MSG != null;
[L4040]              Balance[this] := 0;
[L4062]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4063]  COND FALSE  !(revert)
[L4114]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4115]  COND FALSE  !(revert)
[L4118]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3801]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3759]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3744]              assume msgsender_MSG != null;
[L3745]              Balance[this] := 0;
[L3759]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3760]  COND FALSE  !(revert)
[L3801]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3802]  COND FALSE  !(revert)
[L3805]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3779]              assume msgsender_MSG != null;
[L3780]              Balance[this] := 0;
[L3781]              balances_BasicToken[this] := zeroRefintArr();
[L3782]              sum_balances0[this] := 0;
[L3783]              totalSupply__BasicToken[this] := 0;
[L3805]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3806]  COND FALSE  !(revert)
[L4118]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4119]  COND FALSE  !(revert)
[L4122]  CALL        call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4081]              assume msgsender_MSG != null;
[L4082]              Balance[this] := 0;
[L4083]              allowed_StandardToken[this] := zeroRefRefintArr();
[L4084]              sum_allowed1[this] := 0;
[L4122]  RET         call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4123]  COND FALSE  !(revert)
[L4417]  RET         call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4418]  COND FALSE  !(revert)
[L4421]  CALL        call BurnableToken_BurnableToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3934]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3759]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3744]              assume msgsender_MSG != null;
[L3745]              Balance[this] := 0;
[L3759]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3760]  COND FALSE  !(revert)
[L3934]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3935]  COND FALSE  !(revert)
[L3938]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3801]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3759]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3744]              assume msgsender_MSG != null;
[L3745]              Balance[this] := 0;
[L3759]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3760]  COND FALSE  !(revert)
[L3801]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3802]  COND FALSE  !(revert)
[L3805]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3779]              assume msgsender_MSG != null;
[L3780]              Balance[this] := 0;
[L3781]              balances_BasicToken[this] := zeroRefintArr();
[L3782]              sum_balances0[this] := 0;
[L3783]              totalSupply__BasicToken[this] := 0;
[L3805]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3806]  COND FALSE  !(revert)
[L3938]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3939]  COND FALSE  !(revert)
[L3942]  CALL        call BurnableToken_BurnableToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3911]              assume msgsender_MSG != null;
[L3912]              Balance[this] := 0;
[L3942]  RET         call BurnableToken_BurnableToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3943]  COND FALSE  !(revert)
[L4421]  RET         call BurnableToken_BurnableToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4422]  COND FALSE  !(revert)
[L4425]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3620]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3603]              assume msgsender_MSG != null;
[L3604]              Balance[this] := 0;
[L3605]              owner_Ownable[this] := null;
[L3607]              owner_Ownable[this] := msgsender_MSG;
[L3620]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3621]  COND FALSE  !(revert)
[L4425]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4426]  COND FALSE  !(revert)
[L4429]  CALL        call AirBasicToken_AirBasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4349]              assume msgsender_MSG != null;
[L4350]              Balance[this] := 0;
[L4351]              name_AirBasicToken[this] := 1433815699;
[L4352]              symbol_AirBasicToken[this] := -1312980976;
[L4353]              decimals_AirBasicToken[this] := 18;
[L4354]              __var_12 := decimals_AirBasicToken[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4355]              INITIAL_SUPPLY_AirBasicToken[this] := 1282793976 * (nonlinearPow(10, decimals_AirBasicToken[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4356]              balanceLocked_AirBasicToken[this] := zeroRefboolArr();
[L4357]              amountRaised_AirBasicToken[this] := 0;
[L4358]              buyPrice_AirBasicToken[this] := 100000;
[L4359]              crowdsaleClosed_AirBasicToken[this] := true;
[L4360]              transferEnabled_AirBasicToken[this] := true;
[L4362]              totalSupply__BasicToken[this] := INITIAL_SUPPLY_AirBasicToken[this];
[L4363]              sum_balances0[this] := sum_balances0[this] - balances_BasicToken[this][msgsender_MSG];
[L4364]              balances_BasicToken[this][msgsender_MSG] := INITIAL_SUPPLY_AirBasicToken[this];
[L4365]              sum_balances0[this] := sum_balances0[this] + balances_BasicToken[this][msgsender_MSG];
[L4366]              assert { :EventEmitted "Transfer_AirBasicToken" } true;
[L4429]  RET         call AirBasicToken_AirBasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4430]  COND FALSE  !(revert)
[L1454]  RET         call AirBasicToken_AirBasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1455]              assume !revert && gas >= 0;
[L7070]  RET         call AirBasicToken_AirBasicToken(this, msgsender_MSG, msgvalue_MSG);
[L7071]              assume !revert && gas >= 0;
[L7074]  CALL        call CorralChoice_AirBasicToken(this);
[L6845]              havoc msgsender_MSG;
[L6846]              havoc msgvalue_MSG;
[L6847]              havoc choice;
[L6848]              havoc __ret_0_owner;
[L6849]              havoc __ret_0_totalSupply;
[L6850]              havoc _owner_s237;
[L6851]              havoc __ret_0_balanceOf;
[L6852]              havoc _to_s841;
[L6853]              havoc _value_s841;
[L6854]              havoc __ret_0_transfer;
[L6855]              havoc _value_s258;
[L6856]              havoc _owner_s486;
[L6857]              havoc _spender_s486;
[L6858]              havoc __ret_0_allowance;
[L6859]              havoc _from_s813;
[L6860]              havoc _to_s813;
[L6861]              havoc _value_s813;
[L6862]              havoc __ret_0_transferFrom;
[L6863]              havoc _spender_s470;
[L6864]              havoc _value_s470;
[L6865]              havoc __ret_0_approve;
[L6866]              havoc _spender_s527;
[L6867]              havoc _addedValue_s527;
[L6868]              havoc __ret_0_increaseApproval;
[L6869]              havoc _spender_s587;
[L6870]              havoc _subtractedValue_s587;
[L6871]              havoc __ret_0_decreaseApproval;
[L6872]              havoc __ret_0_name;
[L6873]              havoc __ret_0_symbol;
[L6874]              havoc __ret_0_decimals;
[L6875]              havoc __ret_0_INITIAL_SUPPLY;
[L6876]              havoc arg904_s0;
[L6877]              havoc __ret_0_balanceLocked;
[L6878]              havoc __ret_0_amountRaised;
[L6879]              havoc __ret_0_buyPrice;
[L6880]              havoc __ret_0_crowdsaleClosed;
[L6881]              havoc __ret_0_transferEnabled;
[L6882]              havoc newBuyPrice_s722;
[L6883]              havoc closebuy_s734;
[L6884]              havoc _enable_s783;
[L6885]              havoc _addr_s871;
[L6886]              havoc _addr_s901;
[L6887]              havoc tmpNow;
[L6888]              havoc gas;
[L6889]              assume gas > 4000000 && gas <= 8000000;
[L6890]              tmpNow := now;
[L6891]              havoc now;
[L6892]              assume now > tmpNow;
[L6893]              assume msgsender_MSG != null;
[L6894]              assume DType[msgsender_MSG] != Ownable;
[L6895]              assume DType[msgsender_MSG] != SafeMath;
[L6896]              assume DType[msgsender_MSG] != ERC20Basic;
[L6897]              assume DType[msgsender_MSG] != BasicToken;
[L6898]              assume DType[msgsender_MSG] != BurnableToken;
[L6899]              assume DType[msgsender_MSG] != ERC20;
[L6900]              assume DType[msgsender_MSG] != StandardToken;
[L6901]              assume DType[msgsender_MSG] != AirBasicToken;
[L6902]              Alloc[msgsender_MSG] := true;
[L6903]  COND FALSE  !(choice == 24)
[L6909]  COND FALSE  !(choice == 23)
[L6915]  COND FALSE  !(choice == 22)
[L6921]  COND FALSE  !(choice == 21)
[L6928]  COND FALSE  !(choice == 20)
[L6935]  COND FALSE  !(choice == 19)
[L6941]  COND FALSE  !(choice == 18)
[L6948]  COND FALSE  !(choice == 17)
[L6955]  COND FALSE  !(choice == 16)
[L6962]  COND TRUE   choice == 15
[L6963]              gas := gas - 21000;
[L6964]  COND TRUE   gas >= 0
[L6965]              assume _subtractedValue_s587 >= 0 && _subtractedValue_s587 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L6966]              assume msgvalue_MSG == 0;
[L6967]  CALL        call __ret_0_decreaseApproval := decreaseApproval~address~uint256_StandardToken(this, msgsender_MSG, msgvalue_MSG, _spender_s587, _subtractedValue_s587);
[L1309]              havoc __exception;
[L1310]              revert := false;
[L1311]  COND FALSE  !(__exception)
[L1343]  CALL        call __ret_0_ := decreaseApproval~address~uint256_StandardToken__success(this, msgsender_MSG, msgvalue_MSG, _spender_s587, _subtractedValue_s587);
[L4303]              oldValue_s587 := allowed_StandardToken[this][msgsender_MSG][_spender_s587];
[L4304]  COND TRUE   _subtractedValue_s587 > oldValue_s587
[L4305]              sum_allowed1[msgsender_MSG] := sum_allowed1[msgsender_MSG] - allowed_StandardToken[this][msgsender_MSG][_spender_s587];
[L4306]              allowed_StandardToken[this][msgsender_MSG][_spender_s587] := 0;
[L4307]              sum_allowed1[msgsender_MSG] := sum_allowed1[msgsender_MSG] + allowed_StandardToken[this][msgsender_MSG][_spender_s587];
[L4317]              assert { :EventEmitted "Approval_StandardToken" } true;
[L4318]              __ret_0_ := true;
[L1343]  RET         call __ret_0_ := decreaseApproval~address~uint256_StandardToken__success(this, msgsender_MSG, msgvalue_MSG, _spender_s587, _subtractedValue_s587);
[L1344]              assume !revert && gas >= 0;
[L6967]  RET         call __ret_0_decreaseApproval := decreaseApproval~address~uint256_StandardToken(this, msgsender_MSG, msgvalue_MSG, _spender_s587, _subtractedValue_s587);
[L7074]  RET         call CorralChoice_AirBasicToken(this);
[L7074]  CALL        call CorralChoice_AirBasicToken(this);
[L6845]              havoc msgsender_MSG;
[L6846]              havoc msgvalue_MSG;
[L6847]              havoc choice;
[L6848]              havoc __ret_0_owner;
[L6849]              havoc __ret_0_totalSupply;
[L6850]              havoc _owner_s237;
[L6851]              havoc __ret_0_balanceOf;
[L6852]              havoc _to_s841;
[L6853]              havoc _value_s841;
[L6854]              havoc __ret_0_transfer;
[L6855]              havoc _value_s258;
[L6856]              havoc _owner_s486;
[L6857]              havoc _spender_s486;
[L6858]              havoc __ret_0_allowance;
[L6859]              havoc _from_s813;
[L6860]              havoc _to_s813;
[L6861]              havoc _value_s813;
[L6862]              havoc __ret_0_transferFrom;
[L6863]              havoc _spender_s470;
[L6864]              havoc _value_s470;
[L6865]              havoc __ret_0_approve;
[L6866]              havoc _spender_s527;
[L6867]              havoc _addedValue_s527;
[L6868]              havoc __ret_0_increaseApproval;
[L6869]              havoc _spender_s587;
[L6870]              havoc _subtractedValue_s587;
[L6871]              havoc __ret_0_decreaseApproval;
[L6872]              havoc __ret_0_name;
[L6873]              havoc __ret_0_symbol;
[L6874]              havoc __ret_0_decimals;
[L6875]              havoc __ret_0_INITIAL_SUPPLY;
[L6876]              havoc arg904_s0;
[L6877]              havoc __ret_0_balanceLocked;
[L6878]              havoc __ret_0_amountRaised;
[L6879]              havoc __ret_0_buyPrice;
[L6880]              havoc __ret_0_crowdsaleClosed;
[L6881]              havoc __ret_0_transferEnabled;
[L6882]              havoc newBuyPrice_s722;
[L6883]              havoc closebuy_s734;
[L6884]              havoc _enable_s783;
[L6885]              havoc _addr_s871;
[L6886]              havoc _addr_s901;
[L6887]              havoc tmpNow;
[L6888]              havoc gas;
[L6889]              assume gas > 4000000 && gas <= 8000000;
[L6890]              tmpNow := now;
[L6891]              havoc now;
[L6892]              assume now > tmpNow;
[L6893]              assume msgsender_MSG != null;
[L6894]              assume DType[msgsender_MSG] != Ownable;
[L6895]              assume DType[msgsender_MSG] != SafeMath;
[L6896]              assume DType[msgsender_MSG] != ERC20Basic;
[L6897]              assume DType[msgsender_MSG] != BasicToken;
[L6898]              assume DType[msgsender_MSG] != BurnableToken;
[L6899]              assume DType[msgsender_MSG] != ERC20;
[L6900]              assume DType[msgsender_MSG] != StandardToken;
[L6901]              assume DType[msgsender_MSG] != AirBasicToken;
[L6902]              Alloc[msgsender_MSG] := true;
[L6903]  COND FALSE  !(choice == 24)
[L6909]  COND FALSE  !(choice == 23)
[L6915]  COND FALSE  !(choice == 22)
[L6921]  COND FALSE  !(choice == 21)
[L6928]  COND FALSE  !(choice == 20)
[L6935]  COND FALSE  !(choice == 19)
[L6941]  COND FALSE  !(choice == 18)
[L6948]  COND TRUE   choice == 17
[L6949]              gas := gas - 21000;
[L6950]  COND TRUE   gas >= 0
[L6951]              assume _value_s470 >= 0 && _value_s470 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L6952]              assume msgvalue_MSG == 0;
[L6953]  CALL        call __ret_0_approve := approve~address~uint256_StandardToken(this, msgsender_MSG, msgvalue_MSG, _spender_s470, _value_s470);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != _spender_s470;
[L3]                 call_approve_StandardToken0 := true;
[L3]                 call_approve_StandardToken0 := false;
[L3]                 revert := revert_hold;
[L1089]              havoc __exception;
[L1090]              revert := false;
[L1091]  COND FALSE  !(__exception)
[L1123]  CALL        call __ret_0_ := approve~address~uint256_StandardToken__success(this, msgsender_MSG, msgvalue_MSG, _spender_s470, _value_s470);
[L4228]              sum_allowed1[msgsender_MSG] := sum_allowed1[msgsender_MSG] - allowed_StandardToken[this][msgsender_MSG][_spender_s470];
[L4229]              allowed_StandardToken[this][msgsender_MSG][_spender_s470] := _value_s470;
[L4230]              sum_allowed1[msgsender_MSG] := sum_allowed1[msgsender_MSG] + allowed_StandardToken[this][msgsender_MSG][_spender_s470];
[L4231]              assert { :EventEmitted "Approval_StandardToken" } true;
[L4232]              __ret_0_ := true;
[L1123]  RET         call __ret_0_ := approve~address~uint256_StandardToken__success(this, msgsender_MSG, msgvalue_MSG, _spender_s470, _value_s470);
[L1124]              assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !((((((((((__ret_0_ == true && allowed_StandardToken[this][msgsender_MSG][_spender_s470] == _value_s470) && totalSupply__BasicToken[this] == old(totalSupply__BasicToken[this])) && balances_BasicToken[this] == old(balances_BasicToken[this])) && allowed_StandardToken[this][p1][p2] == old(allowed_StandardToken[this][p1][p2])) && balanceLocked_AirBasicToken[this] == old(balanceLocked_AirBasicToken[this])) && amountRaised_AirBasicToken[this] == old(amountRaised_AirBasicToken[this])) && buyPrice_AirBasicToken[this] == old(buyPrice_AirBasicToken[this])) && crowdsaleClosed_AirBasicToken[this] == old(crowdsaleClosed_AirBasicToken[this])) && transferEnabled_AirBasicToken[this] == old(transferEnabled_AirBasicToken[this])) && owner_Ownable[this] == old(owner_Ownable[this]));
[L3]                 revert := revert_hold;
[L6953]  RET         call __ret_0_approve := approve~address~uint256_StandardToken(this, msgsender_MSG, msgvalue_MSG, _spender_s470, _value_s470);
[L7074]  RET         call CorralChoice_AirBasicToken(this);

Loop:
[L7074]  CALL        call CorralChoice_AirBasicToken(this);
[L6845]              havoc msgsender_MSG;
[L6846]              havoc msgvalue_MSG;
[L6847]              havoc choice;
[L6848]              havoc __ret_0_owner;
[L6849]              havoc __ret_0_totalSupply;
[L6850]              havoc _owner_s237;
[L6851]              havoc __ret_0_balanceOf;
[L6852]              havoc _to_s841;
[L6853]              havoc _value_s841;
[L6854]              havoc __ret_0_transfer;
[L6855]              havoc _value_s258;
[L6856]              havoc _owner_s486;
[L6857]              havoc _spender_s486;
[L6858]              havoc __ret_0_allowance;
[L6859]              havoc _from_s813;
[L6860]              havoc _to_s813;
[L6861]              havoc _value_s813;
[L6862]              havoc __ret_0_transferFrom;
[L6863]              havoc _spender_s470;
[L6864]              havoc _value_s470;
[L6865]              havoc __ret_0_approve;
[L6866]              havoc _spender_s527;
[L6867]              havoc _addedValue_s527;
[L6868]              havoc __ret_0_increaseApproval;
[L6869]              havoc _spender_s587;
[L6870]              havoc _subtractedValue_s587;
[L6871]              havoc __ret_0_decreaseApproval;
[L6872]              havoc __ret_0_name;
[L6873]              havoc __ret_0_symbol;
[L6874]              havoc __ret_0_decimals;
[L6875]              havoc __ret_0_INITIAL_SUPPLY;
[L6876]              havoc arg904_s0;
[L6877]              havoc __ret_0_balanceLocked;
[L6878]              havoc __ret_0_amountRaised;
[L6879]              havoc __ret_0_buyPrice;
[L6880]              havoc __ret_0_crowdsaleClosed;
[L6881]              havoc __ret_0_transferEnabled;
[L6882]              havoc newBuyPrice_s722;
[L6883]              havoc closebuy_s734;
[L6884]              havoc _enable_s783;
[L6885]              havoc _addr_s871;
[L6886]              havoc _addr_s901;
[L6887]              havoc tmpNow;
[L6888]              havoc gas;
[L6889]              assume gas > 4000000 && gas <= 8000000;
[L6890]              tmpNow := now;
[L6891]              havoc now;
[L6892]              assume now > tmpNow;
[L6893]              assume msgsender_MSG != null;
[L6894]              assume DType[msgsender_MSG] != Ownable;
[L6895]              assume DType[msgsender_MSG] != SafeMath;
[L6896]              assume DType[msgsender_MSG] != ERC20Basic;
[L6897]              assume DType[msgsender_MSG] != BasicToken;
[L6898]              assume DType[msgsender_MSG] != BurnableToken;
[L6899]              assume DType[msgsender_MSG] != ERC20;
[L6900]              assume DType[msgsender_MSG] != StandardToken;
[L6901]              assume DType[msgsender_MSG] != AirBasicToken;
[L6902]              Alloc[msgsender_MSG] := true;
[L6903]  COND TRUE   choice == 24
[L6904]              gas := gas - 21000;
[L6905]  COND FALSE  !(gas >= 0)
[L7074]  RET         call CorralChoice_AirBasicToken(this);

[2020-11-24 23:40:43,273 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 23:40:43,273 INFO  L82        PathProgramCache]: Analyzing trace with hash -1301649510, now seen corresponding path program 1 times
[2020-11-24 23:40:43,274 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 23:40:43,311 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 23:40:43,441 INFO  L134       CoverageAnalysis]: Checked inductivity of 413 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 413 trivial. 0 not checked.
[2020-11-24 23:40:43,441 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 23:40:43,441 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [7] imperfect sequences [] total 7
[2020-11-24 23:40:43,442 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 23:40:43,442 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 7 interpolants.
[2020-11-24 23:40:43,442 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=13, Invalid=29, Unknown=0, NotChecked=0, Total=42
[2020-11-24 23:40:43,442 INFO  L87              Difference]: Start difference. First operand 2450 states and 2695 transitions. cyclomatic complexity: 252 Second operand 7 states.
[2020-11-24 23:40:43,702 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 23:40:43,703 INFO  L93              Difference]: Finished difference Result 1403 states and 1554 transitions.
[2020-11-24 23:40:43,703 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 7 states. 
[2020-11-24 23:40:43,703 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 1403 states and 1554 transitions.
[2020-11-24 23:40:43,705 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-24 23:40:43,705 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 1403 states to 0 states and 0 transitions.
[2020-11-24 23:40:43,705 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 0
[2020-11-24 23:40:43,705 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 0
[2020-11-24 23:40:43,705 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 0 states and 0 transitions.
[2020-11-24 23:40:43,705 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 23:40:43,705 INFO  L728         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-24 23:40:43,705 INFO  L751         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-24 23:40:43,705 INFO  L631         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-24 23:40:43,705 INFO  L445         BuchiCegarLoop]: ======== Iteration 6============
[2020-11-24 23:40:43,706 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 0 states and 0 transitions.
[2020-11-24 23:40:43,706 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-24 23:40:43,706 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is true
[2020-11-24 23:40:43,709 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 24.11 11:40:43 BasicIcfg
[2020-11-24 23:40:43,709 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-24 23:40:43,709 INFO  L168              Benchmark]: Toolchain (without parser) took 9024.88 ms. Allocated memory was 1.0 GB in the beginning and 1.8 GB in the end (delta: 816.3 MB). Free memory was 929.8 MB in the beginning and 1.2 GB in the end (delta: -301.9 MB). Peak memory consumption was 514.4 MB. Max. memory is 15.3 GB.
[2020-11-24 23:40:43,710 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.17 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-24 23:40:43,710 INFO  L168              Benchmark]: Boogie Preprocessor took 120.26 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 913.7 MB in the end (delta: 16.1 MB). Peak memory consumption was 16.1 MB. Max. memory is 15.3 GB.
[2020-11-24 23:40:43,710 INFO  L168              Benchmark]: UtopiaSpecLang took 70.69 ms. Allocated memory is still 1.0 GB. Free memory was 913.7 MB in the beginning and 908.4 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-24 23:40:43,710 INFO  L168              Benchmark]: Boogie Printer took 21.97 ms. Allocated memory is still 1.0 GB. Free memory was 908.4 MB in the beginning and 903.0 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-24 23:40:43,711 INFO  L168              Benchmark]: RCFGBuilder took 1126.21 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 59.8 MB). Free memory was 903.0 MB in the beginning and 991.1 MB in the end (delta: -88.1 MB). Peak memory consumption was 190.6 MB. Max. memory is 15.3 GB.
[2020-11-24 23:40:43,711 INFO  L168              Benchmark]: UtopiaLTL2Aut took 43.79 ms. Allocated memory is still 1.1 GB. Free memory was 991.1 MB in the beginning and 987.7 MB in the end (delta: 3.4 MB). Peak memory consumption was 3.4 MB. Max. memory is 15.3 GB.
[2020-11-24 23:40:43,711 INFO  L168              Benchmark]: BÃ¼chi Program Product took 1725.59 ms. Allocated memory was 1.1 GB in the beginning and 1.3 GB in the end (delta: 164.6 MB). Free memory was 987.7 MB in the beginning and 922.4 MB in the end (delta: 65.3 MB). Peak memory consumption was 490.7 MB. Max. memory is 15.3 GB.
[2020-11-24 23:40:43,712 INFO  L168              Benchmark]: BlockEncodingV2 took 182.05 ms. Allocated memory is still 1.3 GB. Free memory was 922.4 MB in the beginning and 822.8 MB in the end (delta: 99.5 MB). Peak memory consumption was 99.5 MB. Max. memory is 15.3 GB.
[2020-11-24 23:40:43,712 INFO  L168              Benchmark]: BuchiAutomizer took 5731.20 ms. Allocated memory was 1.3 GB in the beginning and 1.8 GB in the end (delta: 591.9 MB). Free memory was 822.8 MB in the beginning and 1.2 GB in the end (delta: -409.0 MB). Peak memory consumption was 183.0 MB. Max. memory is 15.3 GB.
[2020-11-24 23:40:43,714 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    7636 locations, 13504 edges
  - StatisticsResult: Encoded RCFG
    7570 locations, 13335 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.17 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 120.26 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 913.7 MB in the end (delta: 16.1 MB). Peak memory consumption was 16.1 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 70.69 ms. Allocated memory is still 1.0 GB. Free memory was 913.7 MB in the beginning and 908.4 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 21.97 ms. Allocated memory is still 1.0 GB. Free memory was 908.4 MB in the beginning and 903.0 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * RCFGBuilder took 1126.21 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 59.8 MB). Free memory was 903.0 MB in the beginning and 991.1 MB in the end (delta: -88.1 MB). Peak memory consumption was 190.6 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 43.79 ms. Allocated memory is still 1.1 GB. Free memory was 991.1 MB in the beginning and 987.7 MB in the end (delta: 3.4 MB). Peak memory consumption was 3.4 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 1725.59 ms. Allocated memory was 1.1 GB in the beginning and 1.3 GB in the end (delta: 164.6 MB). Free memory was 987.7 MB in the beginning and 922.4 MB in the end (delta: 65.3 MB). Peak memory consumption was 490.7 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 182.05 ms. Allocated memory is still 1.3 GB. Free memory was 922.4 MB in the beginning and 822.8 MB in the end (delta: 99.5 MB). Peak memory consumption was 99.5 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 5731.20 ms. Allocated memory was 1.3 GB in the beginning and 1.8 GB in the end (delta: 591.9 MB). Free memory was 822.8 MB in the beginning and 1.2 GB in the end (delta: -409.0 MB). Peak memory consumption was 183.0 MB. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    3211 locations, 4265 edges
  - StatisticsResult: BuchiProgram size
    7636 locations, 13504 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 5 terminating modules (5 trivial, 0 deterministic, 0 nondeterministic). 5 modules have a trivial ranking function, the largest among these consists of 14 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 5.6s and 6 iterations.  TraceHistogramMax:8. Analysis of lassos took 0.9s. Construction of modules took 3.1s. BÃ¼chi inclusion checks took 1.0s. Highest rank in rank-based complementation 0. Minimization of det autom 5. Minimization of nondet autom 0. Automata minimization 0.1s AutomataMinimizationTime, 4 MinimizatonAttempts, 1957 StatesRemovedByMinimization, 3 NontrivialMinimizations. Non-live state removal took 0.1s Buchi closure took 0.0s. Biggest automaton had 4240 states and ocurred in iteration 3.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 18669 SDtfs, 20624 SDslu, 24722 SDs, 0 SdLazy, 37766 SolverSat, 3752 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 3.1s Time	LassoAnalysisResults: nont0 unkn0 SFLI0 SFLT0 conc0 concLT0 SILN0 SILU5 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - AllSpecificationsHoldResult: All specifications hold
    Buchi Automizer proved that the LTL property ! ( ( []( (call_approve_StandardToken0) ==> ( <>(success_approve_StandardToken0) ) ) )) holds
RESULT: Ultimate proved your program to be correct!
Received shutdown request...
