This is Ultimate 0.1.24-f1553f5-m
[2020-11-25 16:51:34,570 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-25 16:51:34,572 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-25 16:51:34,582 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-25 16:51:34,583 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-25 16:51:34,583 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-25 16:51:34,584 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-25 16:51:34,586 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-25 16:51:34,588 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-25 16:51:34,588 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-25 16:51:34,589 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-25 16:51:34,589 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-25 16:51:34,590 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-25 16:51:34,591 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-25 16:51:34,592 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-25 16:51:34,592 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-25 16:51:34,593 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-25 16:51:34,594 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-25 16:51:34,596 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-25 16:51:34,597 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-25 16:51:34,598 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-25 16:51:34,599 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-25 16:51:34,600 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-25 16:51:34,601 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-25 16:51:34,601 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-25 16:51:34,601 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-25 16:51:34,602 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-25 16:51:34,602 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-25 16:51:34,602 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-25 16:51:34,603 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-25 16:51:34,603 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-25 16:51:34,604 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-25 16:51:34,604 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-25 16:51:34,605 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-25 16:51:34,605 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-25 16:51:34,606 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-25 16:51:34,606 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-25 16:51:34,606 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-25 16:51:34,606 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-25 16:51:34,607 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-25 16:51:34,608 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-25 16:51:34,608 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-25 16:51:34,616 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-25 16:51:34,616 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-25 16:51:34,617 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-25 16:51:34,617 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-25 16:51:34,617 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-25 16:51:34,617 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-25 16:51:34,618 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-25 16:51:34,618 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-25 16:51:34,618 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-25 16:51:34,618 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-25 16:51:34,618 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-25 16:51:34,618 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-25 16:51:34,618 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-25 16:51:34,619 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-25 16:51:34,619 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-25 16:51:34,619 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-25 16:51:34,619 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-25 16:51:34,619 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-25 16:51:34,619 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-25 16:51:34,619 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-25 16:51:34,619 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-25 16:51:34,619 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-25 16:51:34,620 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-25 16:51:34,620 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-25 16:51:34,620 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-25 16:51:34,620 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-25 16:51:34,643 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-25 16:51:34,657 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-25 16:51:34,659 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-25 16:51:34,660 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-25 16:51:34,661 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-25 16:51:34,661 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/GatherToken_0xc3771d47E2Ab5A519E2917E61e23078d0C05Ed7f_balanceof.bpl
[2020-11-25 16:51:34,662 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/GatherToken_0xc3771d47E2Ab5A519E2917E61e23078d0C05Ed7f_balanceof.bpl'
[2020-11-25 16:51:34,760 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-25 16:51:34,762 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-25 16:51:34,762 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-25 16:51:34,763 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-25 16:51:34,763 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-25 16:51:34,779 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "GatherToken_0xc3771d47E2Ab5A519E2917E61e23078d0C05Ed7f_balanceof.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 04:51:34" (1/1) ...
[2020-11-25 16:51:34,781 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "GatherToken_0xc3771d47E2Ab5A519E2917E61e23078d0C05Ed7f_balanceof.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 04:51:34" (1/1) ...
[2020-11-25 16:51:34,821 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "GatherToken_0xc3771d47E2Ab5A519E2917E61e23078d0C05Ed7f_balanceof.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 04:51:34" (1/1) ...
[2020-11-25 16:51:34,822 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "GatherToken_0xc3771d47E2Ab5A519E2917E61e23078d0C05Ed7f_balanceof.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 04:51:34" (1/1) ...
[2020-11-25 16:51:34,849 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "GatherToken_0xc3771d47E2Ab5A519E2917E61e23078d0C05Ed7f_balanceof.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 04:51:34" (1/1) ...
[2020-11-25 16:51:34,862 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "GatherToken_0xc3771d47E2Ab5A519E2917E61e23078d0C05Ed7f_balanceof.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 04:51:34" (1/1) ...
[2020-11-25 16:51:34,872 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "GatherToken_0xc3771d47E2Ab5A519E2917E61e23078d0C05Ed7f_balanceof.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 04:51:34" (1/1) ...
[2020-11-25 16:51:34,884 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-25 16:51:34,884 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-25 16:51:34,885 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-25 16:51:34,888 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-25 16:51:34,894 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "GatherToken_0xc3771d47E2Ab5A519E2917E61e23078d0C05Ed7f_balanceof.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 04:51:34" (1/1) ...
[2020-11-25 16:51:34,915 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(BasicToken.balanceOf(owner), balances_BasicToken[this][owner] >= 0 && balances_BasicToken[this][owner] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(BasicToken.balanceOf(owner), return == balances_BasicToken[this][owner] && totalSupply__BasicToken[this] == old(totalSupply__BasicToken[this]) && balances_BasicToken[this] == old(balances_BasicToken[this]) && allowed_StandardToken[this] == old(allowed_StandardToken[this]) && transferPaused_GatherToken[this] == old(transferPaused_GatherToken[this]) && mintingFinished_MintableToken[this] == old(mintingFinished_MintableToken[this]) && mintPermissions_MintableToken[this] == old(mintPermissions_MintableToken[this]) && maxMintLimit_MintableToken[this] == old(maxMintLimit_MintableToken[this]) && owner_Ownable[this] == old(owner_Ownable[this]))))
[2020-11-25 16:51:34,921 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(BasicToken.balanceOf(owner), balances_BasicToken[this][owner] >= 0 && balances_BasicToken[this][owner] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(BasicToken.balanceOf(owner), return == balances_BasicToken[this][owner] && totalSupply__BasicToken[this] == old(totalSupply__BasicToken[this]) && balances_BasicToken[this] == old(balances_BasicToken[this]) && allowed_StandardToken[this] == old(allowed_StandardToken[this]) && transferPaused_GatherToken[this] == old(transferPaused_GatherToken[this]) && mintingFinished_MintableToken[this] == old(mintingFinished_MintableToken[this]) && mintPermissions_MintableToken[this] == old(mintPermissions_MintableToken[this]) && maxMintLimit_MintableToken[this] == old(maxMintLimit_MintableToken[this]) && owner_Ownable[this] == old(owner_Ownable[this]))))
[2020-11-25 16:51:34,928 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(BasicToken.balanceOf(owner), balances_BasicToken[this][owner] >= 0 && balances_BasicToken[this][owner] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(BasicToken.balanceOf(owner), return == balances_BasicToken[this][owner] && totalSupply__BasicToken[this] == old(totalSupply__BasicToken[this]) && balances_BasicToken[this] == old(balances_BasicToken[this]) && allowed_StandardToken[this] == old(allowed_StandardToken[this]) && transferPaused_GatherToken[this] == old(transferPaused_GatherToken[this]) && mintingFinished_MintableToken[this] == old(mintingFinished_MintableToken[this]) && mintPermissions_MintableToken[this] == old(mintPermissions_MintableToken[this]) && maxMintLimit_MintableToken[this] == old(maxMintLimit_MintableToken[this]) && owner_Ownable[this] == old(owner_Ownable[this]))))
[2020-11-25 16:51:34,934 INFO  L636   opiaSpecLangObserver]: Parsed ( balances_BasicToken[this][_owner_s312]>=0 && balances_BasicToken[this][_owner_s312]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) to BinaryExpression[LOGICAND,BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_BasicToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,balanceOf~address_BasicToken>]]],[IdentifierExpression[_owner_s312,<IMPLEMENTATION_INPARAM,balanceOf~address_BasicToken>]]],IntegerLiteral[0]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_BasicToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,balanceOf~address_BasicToken>]]],[IdentifierExpression[_owner_s312,<IMPLEMENTATION_INPARAM,balanceOf~address_BasicToken>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]]
[2020-11-25 16:51:34,936 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( __ret_0_==balances_BasicToken[this][_owner_s312] && totalSupply__BasicToken[this]==( old(totalSupply__BasicToken[this]) ) ) && balances_BasicToken[this]==( old(balances_BasicToken[this]) ) ) && allowed_StandardToken[this]==( old(allowed_StandardToken[this]) ) ) && transferPaused_GatherToken[this]==( old(transferPaused_GatherToken[this]) ) ) && mintingFinished_MintableToken[this]==( old(mintingFinished_MintableToken[this]) ) ) && mintPermissions_MintableToken[this]==( old(mintPermissions_MintableToken[this]) ) ) && maxMintLimit_MintableToken[this]==( old(maxMintLimit_MintableToken[this]) ) ) && owner_Ownable[this]==( old(owner_Ownable[this]) ) ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[__ret_0_,<IMPLEMENTATION_OUTPARAM,balanceOf~address_BasicToken>],ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_BasicToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,balanceOf~address_BasicToken>]]],[IdentifierExpression[_owner_s312,<IMPLEMENTATION_INPARAM,balanceOf~address_BasicToken>]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[totalSupply__BasicToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,balanceOf~address_BasicToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[totalSupply__BasicToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,balanceOf~address_BasicToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[balances_BasicToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,balanceOf~address_BasicToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[balances_BasicToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,balanceOf~address_BasicToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[allowed_StandardToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,balanceOf~address_BasicToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[allowed_StandardToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,balanceOf~address_BasicToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[transferPaused_GatherToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,balanceOf~address_BasicToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[transferPaused_GatherToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,balanceOf~address_BasicToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[mintingFinished_MintableToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,balanceOf~address_BasicToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[mintingFinished_MintableToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,balanceOf~address_BasicToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[mintPermissions_MintableToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,balanceOf~address_BasicToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[mintPermissions_MintableToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,balanceOf~address_BasicToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[maxMintLimit_MintableToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,balanceOf~address_BasicToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[maxMintLimit_MintableToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,balanceOf~address_BasicToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[owner_Ownable,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,balanceOf~address_BasicToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[owner_Ownable,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,balanceOf~address_BasicToken>]]]]]]
[2020-11-25 16:51:34,944 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(BasicToken.balanceOf(owner), balances_BasicToken[this][owner] >= 0 && balances_BasicToken[this][owner] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(BasicToken.balanceOf(owner), return == balances_BasicToken[this][owner] && totalSupply__BasicToken[this] == old(totalSupply__BasicToken[this]) && balances_BasicToken[this] == old(balances_BasicToken[this]) && allowed_StandardToken[this] == old(allowed_StandardToken[this]) && transferPaused_GatherToken[this] == old(transferPaused_GatherToken[this]) && mintingFinished_MintableToken[this] == old(mintingFinished_MintableToken[this]) && mintPermissions_MintableToken[this] == old(mintPermissions_MintableToken[this]) && maxMintLimit_MintableToken[this] == old(maxMintLimit_MintableToken[this]) && owner_Ownable[this] == old(owner_Ownable[this]))))
[2020-11-25 16:51:34,944 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_balanceOf_BasicToken0) ==> ( <>AP(success_balanceOf_BasicToken0) ) ) )
Executed UtopiaSpecLang
[2020-11-25 16:51:34,958 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 04:51:34 PropertyContainer
[2020-11-25 16:51:34,959 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-25 16:51:34,959 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-25 16:51:34,959 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-25 16:51:34,959 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-25 16:51:34,960 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "GatherToken_0xc3771d47E2Ab5A519E2917E61e23078d0C05Ed7f_balanceof.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 04:51:34" (1/2) ...
[2020-11-25 16:51:34,961 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-25 16:51:34,961 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-25 16:51:34,981 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 04:51:34" (2/2) ...
[2020-11-25 16:51:34,982 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-25 16:51:34,982 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-25 16:51:34,982 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-25 16:51:34,982 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-25 16:51:34,983 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "GatherToken_0xc3771d47E2Ab5A519E2917E61e23078d0C05Ed7f_balanceof.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 04:51:34" (1/2) ...
[2020-11-25 16:51:35,039 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-25 16:51:35,039 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 16:51:35,039 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath
[2020-11-25 16:51:35,040 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath
[2020-11-25 16:51:35,040 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__success
[2020-11-25 16:51:35,040 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256_SafeMath__success
[2020-11-25 16:51:35,040 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__success
[2020-11-25 16:51:35,040 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__success
[2020-11-25 16:51:35,040 INFO  L130     BoogieDeclarations]: Found specification of procedure Ownable_Ownable_NoBaseCtor__success
[2020-11-25 16:51:35,040 INFO  L130     BoogieDeclarations]: Found specification of procedure Ownable_Ownable
[2020-11-25 16:51:35,040 INFO  L138     BoogieDeclarations]: Found implementation of procedure Ownable_Ownable
[2020-11-25 16:51:35,040 INFO  L130     BoogieDeclarations]: Found specification of procedure transferOwnership~address_Ownable
[2020-11-25 16:51:35,041 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferOwnership~address_Ownable
[2020-11-25 16:51:35,041 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_Ownable
[2020-11-25 16:51:35,041 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_Ownable
[2020-11-25 16:51:35,041 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Basic_ERC20Basic_NoBaseCtor__success
[2020-11-25 16:51:35,041 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Basic_ERC20Basic
[2020-11-25 16:51:35,041 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Basic_ERC20Basic
[2020-11-25 16:51:35,041 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20Basic
[2020-11-25 16:51:35,041 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20Basic
[2020-11-25 16:51:35,042 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20Basic
[2020-11-25 16:51:35,042 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20_NoBaseCtor__success
[2020-11-25 16:51:35,042 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20
[2020-11-25 16:51:35,042 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20
[2020-11-25 16:51:35,042 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20
[2020-11-25 16:51:35,042 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20
[2020-11-25 16:51:35,042 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20
[2020-11-25 16:51:35,042 INFO  L130     BoogieDeclarations]: Found specification of procedure BasicToken_BasicToken_NoBaseCtor__success
[2020-11-25 16:51:35,042 INFO  L130     BoogieDeclarations]: Found specification of procedure BasicToken_BasicToken
[2020-11-25 16:51:35,042 INFO  L138     BoogieDeclarations]: Found implementation of procedure BasicToken_BasicToken
[2020-11-25 16:51:35,042 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_BasicToken
[2020-11-25 16:51:35,043 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_BasicToken
[2020-11-25 16:51:35,043 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_BasicToken
[2020-11-25 16:51:35,043 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_BasicToken
[2020-11-25 16:51:35,043 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_BasicToken
[2020-11-25 16:51:35,043 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_BasicToken
[2020-11-25 16:51:35,043 INFO  L130     BoogieDeclarations]: Found specification of procedure StandardToken_StandardToken_NoBaseCtor__success
[2020-11-25 16:51:35,043 INFO  L130     BoogieDeclarations]: Found specification of procedure StandardToken_StandardToken
[2020-11-25 16:51:35,043 INFO  L138     BoogieDeclarations]: Found implementation of procedure StandardToken_StandardToken
[2020-11-25 16:51:35,043 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_StandardToken
[2020-11-25 16:51:35,043 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_StandardToken
[2020-11-25 16:51:35,043 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_StandardToken
[2020-11-25 16:51:35,043 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_StandardToken
[2020-11-25 16:51:35,043 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_StandardToken
[2020-11-25 16:51:35,044 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_StandardToken
[2020-11-25 16:51:35,044 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseApproval~address~uint256_StandardToken
[2020-11-25 16:51:35,044 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseApproval~address~uint256_StandardToken
[2020-11-25 16:51:35,044 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseApproval~address~uint256_StandardToken
[2020-11-25 16:51:35,044 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseApproval~address~uint256_StandardToken
[2020-11-25 16:51:35,044 INFO  L130     BoogieDeclarations]: Found specification of procedure MintableToken_MintableToken_NoBaseCtor__success
[2020-11-25 16:51:35,044 INFO  L130     BoogieDeclarations]: Found specification of procedure MintableToken_MintableToken
[2020-11-25 16:51:35,044 INFO  L138     BoogieDeclarations]: Found implementation of procedure MintableToken_MintableToken
[2020-11-25 16:51:35,044 INFO  L130     BoogieDeclarations]: Found specification of procedure checkMintPermission~address_MintableToken__success
[2020-11-25 16:51:35,044 INFO  L130     BoogieDeclarations]: Found specification of procedure setMinter~address~uint256_MintableToken
[2020-11-25 16:51:35,044 INFO  L138     BoogieDeclarations]: Found implementation of procedure setMinter~address~uint256_MintableToken
[2020-11-25 16:51:35,044 INFO  L130     BoogieDeclarations]: Found specification of procedure mint~address~uint256_MintableToken
[2020-11-25 16:51:35,044 INFO  L138     BoogieDeclarations]: Found implementation of procedure mint~address~uint256_MintableToken
[2020-11-25 16:51:35,044 INFO  L130     BoogieDeclarations]: Found specification of procedure mintInternal~address~uint256_MintableToken__success
[2020-11-25 16:51:35,045 INFO  L130     BoogieDeclarations]: Found specification of procedure mintAllowed~address_MintableToken
[2020-11-25 16:51:35,045 INFO  L138     BoogieDeclarations]: Found implementation of procedure mintAllowed~address_MintableToken
[2020-11-25 16:51:35,045 INFO  L130     BoogieDeclarations]: Found specification of procedure finishMinting_MintableToken
[2020-11-25 16:51:35,045 INFO  L138     BoogieDeclarations]: Found implementation of procedure finishMinting_MintableToken
[2020-11-25 16:51:35,045 INFO  L130     BoogieDeclarations]: Found specification of procedure mintingFinished_MintableToken
[2020-11-25 16:51:35,045 INFO  L138     BoogieDeclarations]: Found implementation of procedure mintingFinished_MintableToken
[2020-11-25 16:51:35,045 INFO  L130     BoogieDeclarations]: Found specification of procedure maxMintLimit_MintableToken
[2020-11-25 16:51:35,045 INFO  L138     BoogieDeclarations]: Found implementation of procedure maxMintLimit_MintableToken
[2020-11-25 16:51:35,045 INFO  L130     BoogieDeclarations]: Found specification of procedure GatherToken_GatherToken_NoBaseCtor__success
[2020-11-25 16:51:35,045 INFO  L130     BoogieDeclarations]: Found specification of procedure GatherToken_GatherToken
[2020-11-25 16:51:35,045 INFO  L138     BoogieDeclarations]: Found implementation of procedure GatherToken_GatherToken
[2020-11-25 16:51:35,045 INFO  L130     BoogieDeclarations]: Found specification of procedure unpauseTransfer_GatherToken
[2020-11-25 16:51:35,046 INFO  L138     BoogieDeclarations]: Found implementation of procedure unpauseTransfer_GatherToken
[2020-11-25 16:51:35,046 INFO  L130     BoogieDeclarations]: Found specification of procedure pauseTransfer_GatherToken
[2020-11-25 16:51:35,046 INFO  L138     BoogieDeclarations]: Found implementation of procedure pauseTransfer_GatherToken
[2020-11-25 16:51:35,046 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_GatherToken
[2020-11-25 16:51:35,046 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_GatherToken
[2020-11-25 16:51:35,046 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_GatherToken
[2020-11-25 16:51:35,046 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_GatherToken
[2020-11-25 16:51:35,046 INFO  L130     BoogieDeclarations]: Found specification of procedure name_GatherToken
[2020-11-25 16:51:35,046 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_GatherToken
[2020-11-25 16:51:35,046 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_GatherToken
[2020-11-25 16:51:35,046 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_GatherToken
[2020-11-25 16:51:35,046 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_GatherToken
[2020-11-25 16:51:35,047 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_GatherToken
[2020-11-25 16:51:35,047 INFO  L130     BoogieDeclarations]: Found specification of procedure transferPaused_GatherToken
[2020-11-25 16:51:35,047 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferPaused_GatherToken
[2020-11-25 16:51:35,047 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-25 16:51:35,047 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-25 16:51:35,047 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-25 16:51:35,047 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__success
[2020-11-25 16:51:35,047 INFO  L130     BoogieDeclarations]: Found specification of procedure canMint_pre__success
[2020-11-25 16:51:35,047 INFO  L130     BoogieDeclarations]: Found specification of procedure hasMintPermission_pre__success
[2020-11-25 16:51:35,047 INFO  L130     BoogieDeclarations]: Found specification of procedure tranferable_pre__success
[2020-11-25 16:51:35,048 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_SafeMath
[2020-11-25 16:51:35,048 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_SafeMath
[2020-11-25 16:51:35,048 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_Ownable
[2020-11-25 16:51:35,048 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_Ownable
[2020-11-25 16:51:35,048 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20Basic
[2020-11-25 16:51:35,048 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20Basic
[2020-11-25 16:51:35,048 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20
[2020-11-25 16:51:35,048 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20
[2020-11-25 16:51:35,048 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_BasicToken
[2020-11-25 16:51:35,048 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_BasicToken
[2020-11-25 16:51:35,048 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_StandardToken
[2020-11-25 16:51:35,049 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_StandardToken
[2020-11-25 16:51:35,049 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_MintableToken
[2020-11-25 16:51:35,049 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_MintableToken
[2020-11-25 16:51:35,049 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_GatherToken
[2020-11-25 16:51:35,049 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-25 16:51:35,049 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-25 16:51:35,049 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 16:51:35,049 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__success
[2020-11-25 16:51:35,049 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__fail
[2020-11-25 16:51:35,049 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-25 16:51:35,050 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256_SafeMath__fail
[2020-11-25 16:51:35,050 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-25 16:51:35,050 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__fail
[2020-11-25 16:51:35,050 INFO  L130     BoogieDeclarations]: Found specification of procedure Ownable_Ownable_NoBaseCtor__fail
[2020-11-25 16:51:35,050 INFO  L130     BoogieDeclarations]: Found specification of procedure Ownable_Ownable__success
[2020-11-25 16:51:35,050 INFO  L130     BoogieDeclarations]: Found specification of procedure Ownable_Ownable__fail
[2020-11-25 16:51:35,050 INFO  L130     BoogieDeclarations]: Found specification of procedure transferOwnership~address_Ownable__success
[2020-11-25 16:51:35,050 INFO  L130     BoogieDeclarations]: Found specification of procedure transferOwnership~address_Ownable__fail
[2020-11-25 16:51:35,050 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_Ownable__success
[2020-11-25 16:51:35,050 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_Ownable__fail
[2020-11-25 16:51:35,051 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Basic_ERC20Basic_NoBaseCtor__fail
[2020-11-25 16:51:35,051 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Basic_ERC20Basic__success
[2020-11-25 16:51:35,051 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Basic_ERC20Basic__fail
[2020-11-25 16:51:35,051 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20_NoBaseCtor__fail
[2020-11-25 16:51:35,051 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20__success
[2020-11-25 16:51:35,051 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20__fail
[2020-11-25 16:51:35,051 INFO  L130     BoogieDeclarations]: Found specification of procedure BasicToken_BasicToken_NoBaseCtor__fail
[2020-11-25 16:51:35,051 INFO  L130     BoogieDeclarations]: Found specification of procedure BasicToken_BasicToken__success
[2020-11-25 16:51:35,052 INFO  L130     BoogieDeclarations]: Found specification of procedure BasicToken_BasicToken__fail
[2020-11-25 16:51:35,052 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_BasicToken__success
[2020-11-25 16:51:35,052 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_BasicToken__fail
[2020-11-25 16:51:35,052 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_BasicToken__success
[2020-11-25 16:51:35,052 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_BasicToken__fail
[2020-11-25 16:51:35,052 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_BasicToken__success
[2020-11-25 16:51:35,052 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_BasicToken__fail
[2020-11-25 16:51:35,052 INFO  L130     BoogieDeclarations]: Found specification of procedure StandardToken_StandardToken_NoBaseCtor__fail
[2020-11-25 16:51:35,052 INFO  L130     BoogieDeclarations]: Found specification of procedure StandardToken_StandardToken__success
[2020-11-25 16:51:35,053 INFO  L130     BoogieDeclarations]: Found specification of procedure StandardToken_StandardToken__fail
[2020-11-25 16:51:35,053 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_StandardToken__success
[2020-11-25 16:51:35,053 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_StandardToken__fail
[2020-11-25 16:51:35,053 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_StandardToken__success
[2020-11-25 16:51:35,053 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_StandardToken__fail
[2020-11-25 16:51:35,053 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_StandardToken__success
[2020-11-25 16:51:35,053 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_StandardToken__fail
[2020-11-25 16:51:35,053 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseApproval~address~uint256_StandardToken__success
[2020-11-25 16:51:35,053 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseApproval~address~uint256_StandardToken__fail
[2020-11-25 16:51:35,053 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseApproval~address~uint256_StandardToken__success
[2020-11-25 16:51:35,054 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseApproval~address~uint256_StandardToken__fail
[2020-11-25 16:51:35,054 INFO  L130     BoogieDeclarations]: Found specification of procedure MintableToken_MintableToken_NoBaseCtor__fail
[2020-11-25 16:51:35,054 INFO  L130     BoogieDeclarations]: Found specification of procedure MintableToken_MintableToken__success
[2020-11-25 16:51:35,054 INFO  L130     BoogieDeclarations]: Found specification of procedure MintableToken_MintableToken__fail
[2020-11-25 16:51:35,054 INFO  L130     BoogieDeclarations]: Found specification of procedure checkMintPermission~address_MintableToken__fail
[2020-11-25 16:51:35,054 INFO  L130     BoogieDeclarations]: Found specification of procedure setMinter~address~uint256_MintableToken__success
[2020-11-25 16:51:35,054 INFO  L130     BoogieDeclarations]: Found specification of procedure setMinter~address~uint256_MintableToken__fail
[2020-11-25 16:51:35,054 INFO  L130     BoogieDeclarations]: Found specification of procedure mint~address~uint256_MintableToken__success
[2020-11-25 16:51:35,054 INFO  L130     BoogieDeclarations]: Found specification of procedure mint~address~uint256_MintableToken__fail
[2020-11-25 16:51:35,055 INFO  L130     BoogieDeclarations]: Found specification of procedure mintInternal~address~uint256_MintableToken__fail
[2020-11-25 16:51:35,055 INFO  L130     BoogieDeclarations]: Found specification of procedure mintAllowed~address_MintableToken__success
[2020-11-25 16:51:35,055 INFO  L130     BoogieDeclarations]: Found specification of procedure mintAllowed~address_MintableToken__fail
[2020-11-25 16:51:35,055 INFO  L130     BoogieDeclarations]: Found specification of procedure finishMinting_MintableToken__success
[2020-11-25 16:51:35,055 INFO  L130     BoogieDeclarations]: Found specification of procedure finishMinting_MintableToken__fail
[2020-11-25 16:51:35,055 INFO  L130     BoogieDeclarations]: Found specification of procedure mintingFinished_MintableToken__success
[2020-11-25 16:51:35,055 INFO  L130     BoogieDeclarations]: Found specification of procedure mintingFinished_MintableToken__fail
[2020-11-25 16:51:35,056 INFO  L130     BoogieDeclarations]: Found specification of procedure maxMintLimit_MintableToken__success
[2020-11-25 16:51:35,056 INFO  L130     BoogieDeclarations]: Found specification of procedure maxMintLimit_MintableToken__fail
[2020-11-25 16:51:35,056 INFO  L130     BoogieDeclarations]: Found specification of procedure GatherToken_GatherToken_NoBaseCtor__fail
[2020-11-25 16:51:35,056 INFO  L130     BoogieDeclarations]: Found specification of procedure GatherToken_GatherToken__success
[2020-11-25 16:51:35,056 INFO  L130     BoogieDeclarations]: Found specification of procedure GatherToken_GatherToken__fail
[2020-11-25 16:51:35,056 INFO  L130     BoogieDeclarations]: Found specification of procedure unpauseTransfer_GatherToken__success
[2020-11-25 16:51:35,056 INFO  L130     BoogieDeclarations]: Found specification of procedure unpauseTransfer_GatherToken__fail
[2020-11-25 16:51:35,056 INFO  L130     BoogieDeclarations]: Found specification of procedure pauseTransfer_GatherToken__success
[2020-11-25 16:51:35,056 INFO  L130     BoogieDeclarations]: Found specification of procedure pauseTransfer_GatherToken__fail
[2020-11-25 16:51:35,056 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_GatherToken__success
[2020-11-25 16:51:35,056 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_GatherToken__fail
[2020-11-25 16:51:35,057 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_GatherToken__success
[2020-11-25 16:51:35,057 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_GatherToken__fail
[2020-11-25 16:51:35,057 INFO  L130     BoogieDeclarations]: Found specification of procedure name_GatherToken__success
[2020-11-25 16:51:35,057 INFO  L130     BoogieDeclarations]: Found specification of procedure name_GatherToken__fail
[2020-11-25 16:51:35,057 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_GatherToken__success
[2020-11-25 16:51:35,057 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_GatherToken__fail
[2020-11-25 16:51:35,057 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_GatherToken__success
[2020-11-25 16:51:35,057 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_GatherToken__fail
[2020-11-25 16:51:35,057 INFO  L130     BoogieDeclarations]: Found specification of procedure transferPaused_GatherToken__success
[2020-11-25 16:51:35,057 INFO  L130     BoogieDeclarations]: Found specification of procedure transferPaused_GatherToken__fail
[2020-11-25 16:51:35,057 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-25 16:51:35,057 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-25 16:51:35,058 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-25 16:51:35,058 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__fail
[2020-11-25 16:51:35,058 INFO  L130     BoogieDeclarations]: Found specification of procedure canMint_pre__fail
[2020-11-25 16:51:35,058 INFO  L130     BoogieDeclarations]: Found specification of procedure hasMintPermission_pre__fail
[2020-11-25 16:51:35,058 INFO  L130     BoogieDeclarations]: Found specification of procedure tranferable_pre__fail
[2020-11-25 16:51:35,058 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-25 16:51:35,058 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-25 16:51:35,058 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 16:51:35,058 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 16:51:35,058 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__fail
[2020-11-25 16:51:35,058 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__success
[2020-11-25 16:51:35,058 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-25 16:51:35,059 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__success
[2020-11-25 16:51:35,059 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256_SafeMath__fail
[2020-11-25 16:51:35,059 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256_SafeMath__success
[2020-11-25 16:51:35,059 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-25 16:51:35,059 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__success
[2020-11-25 16:51:35,059 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__fail
[2020-11-25 16:51:35,059 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__success
[2020-11-25 16:51:35,059 INFO  L138     BoogieDeclarations]: Found implementation of procedure Ownable_Ownable_NoBaseCtor__fail
[2020-11-25 16:51:35,059 INFO  L138     BoogieDeclarations]: Found implementation of procedure Ownable_Ownable_NoBaseCtor__success
[2020-11-25 16:51:35,059 INFO  L138     BoogieDeclarations]: Found implementation of procedure Ownable_Ownable__fail
[2020-11-25 16:51:35,059 INFO  L138     BoogieDeclarations]: Found implementation of procedure Ownable_Ownable__success
[2020-11-25 16:51:35,060 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferOwnership~address_Ownable__fail
[2020-11-25 16:51:35,060 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferOwnership~address_Ownable__success
[2020-11-25 16:51:35,060 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_Ownable__fail
[2020-11-25 16:51:35,060 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_Ownable__success
[2020-11-25 16:51:35,060 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Basic_ERC20Basic_NoBaseCtor__fail
[2020-11-25 16:51:35,060 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Basic_ERC20Basic_NoBaseCtor__success
[2020-11-25 16:51:35,060 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Basic_ERC20Basic__fail
[2020-11-25 16:51:35,060 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Basic_ERC20Basic__success
[2020-11-25 16:51:35,060 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20_NoBaseCtor__fail
[2020-11-25 16:51:35,060 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20_NoBaseCtor__success
[2020-11-25 16:51:35,060 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20__fail
[2020-11-25 16:51:35,061 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20__success
[2020-11-25 16:51:35,061 INFO  L138     BoogieDeclarations]: Found implementation of procedure BasicToken_BasicToken_NoBaseCtor__fail
[2020-11-25 16:51:35,061 INFO  L138     BoogieDeclarations]: Found implementation of procedure BasicToken_BasicToken_NoBaseCtor__success
[2020-11-25 16:51:35,061 INFO  L138     BoogieDeclarations]: Found implementation of procedure BasicToken_BasicToken__fail
[2020-11-25 16:51:35,061 INFO  L138     BoogieDeclarations]: Found implementation of procedure BasicToken_BasicToken__success
[2020-11-25 16:51:35,061 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_BasicToken__fail
[2020-11-25 16:51:35,061 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_BasicToken__success
[2020-11-25 16:51:35,061 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_BasicToken__fail
[2020-11-25 16:51:35,061 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_BasicToken__success
[2020-11-25 16:51:35,061 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_BasicToken__fail
[2020-11-25 16:51:35,061 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_BasicToken__success
[2020-11-25 16:51:35,062 INFO  L138     BoogieDeclarations]: Found implementation of procedure StandardToken_StandardToken_NoBaseCtor__fail
[2020-11-25 16:51:35,062 INFO  L138     BoogieDeclarations]: Found implementation of procedure StandardToken_StandardToken_NoBaseCtor__success
[2020-11-25 16:51:35,062 INFO  L138     BoogieDeclarations]: Found implementation of procedure StandardToken_StandardToken__fail
[2020-11-25 16:51:35,062 INFO  L138     BoogieDeclarations]: Found implementation of procedure StandardToken_StandardToken__success
[2020-11-25 16:51:35,062 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_StandardToken__fail
[2020-11-25 16:51:35,062 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_StandardToken__success
[2020-11-25 16:51:35,062 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_StandardToken__fail
[2020-11-25 16:51:35,062 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_StandardToken__success
[2020-11-25 16:51:35,062 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_StandardToken__fail
[2020-11-25 16:51:35,062 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_StandardToken__success
[2020-11-25 16:51:35,062 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseApproval~address~uint256_StandardToken__fail
[2020-11-25 16:51:35,062 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseApproval~address~uint256_StandardToken__success
[2020-11-25 16:51:35,063 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseApproval~address~uint256_StandardToken__fail
[2020-11-25 16:51:35,063 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseApproval~address~uint256_StandardToken__success
[2020-11-25 16:51:35,063 INFO  L138     BoogieDeclarations]: Found implementation of procedure MintableToken_MintableToken_NoBaseCtor__fail
[2020-11-25 16:51:35,063 INFO  L138     BoogieDeclarations]: Found implementation of procedure MintableToken_MintableToken_NoBaseCtor__success
[2020-11-25 16:51:35,063 INFO  L138     BoogieDeclarations]: Found implementation of procedure MintableToken_MintableToken__fail
[2020-11-25 16:51:35,063 INFO  L138     BoogieDeclarations]: Found implementation of procedure MintableToken_MintableToken__success
[2020-11-25 16:51:35,063 INFO  L138     BoogieDeclarations]: Found implementation of procedure checkMintPermission~address_MintableToken__fail
[2020-11-25 16:51:35,063 INFO  L138     BoogieDeclarations]: Found implementation of procedure checkMintPermission~address_MintableToken__success
[2020-11-25 16:51:35,063 INFO  L138     BoogieDeclarations]: Found implementation of procedure setMinter~address~uint256_MintableToken__fail
[2020-11-25 16:51:35,063 INFO  L138     BoogieDeclarations]: Found implementation of procedure setMinter~address~uint256_MintableToken__success
[2020-11-25 16:51:35,063 INFO  L138     BoogieDeclarations]: Found implementation of procedure mint~address~uint256_MintableToken__fail
[2020-11-25 16:51:35,063 INFO  L138     BoogieDeclarations]: Found implementation of procedure mint~address~uint256_MintableToken__success
[2020-11-25 16:51:35,064 INFO  L138     BoogieDeclarations]: Found implementation of procedure mintInternal~address~uint256_MintableToken__fail
[2020-11-25 16:51:35,064 INFO  L138     BoogieDeclarations]: Found implementation of procedure mintInternal~address~uint256_MintableToken__success
[2020-11-25 16:51:35,064 INFO  L138     BoogieDeclarations]: Found implementation of procedure mintAllowed~address_MintableToken__fail
[2020-11-25 16:51:35,064 INFO  L138     BoogieDeclarations]: Found implementation of procedure mintAllowed~address_MintableToken__success
[2020-11-25 16:51:35,064 INFO  L138     BoogieDeclarations]: Found implementation of procedure finishMinting_MintableToken__fail
[2020-11-25 16:51:35,064 INFO  L138     BoogieDeclarations]: Found implementation of procedure finishMinting_MintableToken__success
[2020-11-25 16:51:35,064 INFO  L138     BoogieDeclarations]: Found implementation of procedure mintingFinished_MintableToken__fail
[2020-11-25 16:51:35,064 INFO  L138     BoogieDeclarations]: Found implementation of procedure mintingFinished_MintableToken__success
[2020-11-25 16:51:35,064 INFO  L138     BoogieDeclarations]: Found implementation of procedure maxMintLimit_MintableToken__fail
[2020-11-25 16:51:35,064 INFO  L138     BoogieDeclarations]: Found implementation of procedure maxMintLimit_MintableToken__success
[2020-11-25 16:51:35,064 INFO  L138     BoogieDeclarations]: Found implementation of procedure GatherToken_GatherToken_NoBaseCtor__fail
[2020-11-25 16:51:35,065 INFO  L138     BoogieDeclarations]: Found implementation of procedure GatherToken_GatherToken_NoBaseCtor__success
[2020-11-25 16:51:35,065 INFO  L138     BoogieDeclarations]: Found implementation of procedure GatherToken_GatherToken__fail
[2020-11-25 16:51:35,065 INFO  L138     BoogieDeclarations]: Found implementation of procedure GatherToken_GatherToken__success
[2020-11-25 16:51:35,065 INFO  L138     BoogieDeclarations]: Found implementation of procedure unpauseTransfer_GatherToken__fail
[2020-11-25 16:51:35,065 INFO  L138     BoogieDeclarations]: Found implementation of procedure unpauseTransfer_GatherToken__success
[2020-11-25 16:51:35,065 INFO  L138     BoogieDeclarations]: Found implementation of procedure pauseTransfer_GatherToken__fail
[2020-11-25 16:51:35,066 INFO  L138     BoogieDeclarations]: Found implementation of procedure pauseTransfer_GatherToken__success
[2020-11-25 16:51:35,066 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_GatherToken__fail
[2020-11-25 16:51:35,066 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_GatherToken__success
[2020-11-25 16:51:35,066 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_GatherToken__fail
[2020-11-25 16:51:35,066 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_GatherToken__success
[2020-11-25 16:51:35,066 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_GatherToken__fail
[2020-11-25 16:51:35,066 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_GatherToken__success
[2020-11-25 16:51:35,066 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_GatherToken__fail
[2020-11-25 16:51:35,066 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_GatherToken__success
[2020-11-25 16:51:35,066 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_GatherToken__fail
[2020-11-25 16:51:35,067 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_GatherToken__success
[2020-11-25 16:51:35,067 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferPaused_GatherToken__fail
[2020-11-25 16:51:35,067 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferPaused_GatherToken__success
[2020-11-25 16:51:35,067 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-25 16:51:35,067 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-25 16:51:35,067 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-25 16:51:35,067 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-25 16:51:35,067 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-25 16:51:35,067 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-25 16:51:35,067 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__fail
[2020-11-25 16:51:35,067 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__success
[2020-11-25 16:51:35,067 INFO  L138     BoogieDeclarations]: Found implementation of procedure canMint_pre__fail
[2020-11-25 16:51:35,068 INFO  L138     BoogieDeclarations]: Found implementation of procedure canMint_pre__success
[2020-11-25 16:51:35,068 INFO  L138     BoogieDeclarations]: Found implementation of procedure hasMintPermission_pre__fail
[2020-11-25 16:51:35,068 INFO  L138     BoogieDeclarations]: Found implementation of procedure hasMintPermission_pre__success
[2020-11-25 16:51:35,068 INFO  L138     BoogieDeclarations]: Found implementation of procedure tranferable_pre__fail
[2020-11-25 16:51:35,068 INFO  L138     BoogieDeclarations]: Found implementation of procedure tranferable_pre__success
[2020-11-25 16:51:35,068 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_SafeMath
[2020-11-25 16:51:35,068 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_SafeMath
[2020-11-25 16:51:35,068 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_Ownable
[2020-11-25 16:51:35,068 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_Ownable
[2020-11-25 16:51:35,068 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20Basic
[2020-11-25 16:51:35,068 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20Basic
[2020-11-25 16:51:35,069 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20
[2020-11-25 16:51:35,069 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20
[2020-11-25 16:51:35,069 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_BasicToken
[2020-11-25 16:51:35,069 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_BasicToken
[2020-11-25 16:51:35,069 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_StandardToken
[2020-11-25 16:51:35,069 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_StandardToken
[2020-11-25 16:51:35,069 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_MintableToken
[2020-11-25 16:51:35,069 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_MintableToken
[2020-11-25 16:51:35,069 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_GatherToken
[2020-11-25 16:51:35,069 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-25 16:51:35,069 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-25 16:51:35,069 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-25 16:51:35,515 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 16:51:35,516 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 16:51:35,516 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 16:51:35,964 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-25 16:51:35,964 INFO  L286             CfgBuilder]: Removed 8 assue(true) statements.
[2020-11-25 16:51:35,966 INFO  L202        PluginConnector]: Adding new model GatherToken_0xc3771d47E2Ab5A519E2917E61e23078d0C05Ed7f_balanceof.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 04:51:35 BoogieIcfgContainer
[2020-11-25 16:51:35,966 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 04:51:34" (2/2) ...
[2020-11-25 16:51:35,966 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-25 16:51:35,966 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@295032c4 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 04:51:35, skipping insertion in model container
[2020-11-25 16:51:35,966 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-25 16:51:35,966 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-25 16:51:35,966 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-25 16:51:35,968 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-25 16:51:35,968 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "GatherToken_0xc3771d47E2Ab5A519E2917E61e23078d0C05Ed7f_balanceof.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 04:51:34" (1/3) ...
[2020-11-25 16:51:35,968 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@4fe40bad and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 04:51:35, skipping insertion in model container
[2020-11-25 16:51:35,968 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 04:51:34" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-25 16:51:36,006 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 04:51:36 NWAContainer
[2020-11-25 16:51:36,006 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-25 16:51:36,006 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-25 16:51:36,006 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-25 16:51:36,007 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-25 16:51:36,008 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "GatherToken_0xc3771d47E2Ab5A519E2917E61e23078d0C05Ed7f_balanceof.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 04:51:35" (3/4) ...
[2020-11-25 16:51:36,008 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@6ae20417 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 04:51:36, skipping insertion in model container
[2020-11-25 16:51:36,008 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 04:51:36" (4/4) ...
[2020-11-25 16:51:36,011 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-25 16:51:36,016 INFO  L110   BuchiProductObserver]: Initial RCFG 2395 locations, 3202 edges
[2020-11-25 16:51:36,016 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-25 16:51:36,027 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-25 16:51:37,664 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-25 16:51:37,671 INFO  L110   BuchiProductObserver]: BuchiProgram size 5904 locations, 10484 edges
[2020-11-25 16:51:37,672 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 04:51:37 BoogieIcfgContainer
[2020-11-25 16:51:37,672 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-25 16:51:37,672 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-25 16:51:37,672 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-25 16:51:37,673 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-25 16:51:37,674 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 04:51:37" (1/1) ...
[2020-11-25 16:51:37,780 INFO  L313           BlockEncoder]: Initial Icfg 5904 locations, 10484 edges
[2020-11-25 16:51:37,780 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-25 16:51:37,781 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-25 16:51:37,781 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-25 16:51:37,781 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-25 16:51:37,795 INFO  L70    emoveInfeasibleEdges]: Removed 99 edges and 19 locations because of local infeasibility
[2020-11-25 16:51:37,808 INFO  L70        RemoveSinkStates]: Removed 20 edges and 13 locations by removing sink states
[2020-11-25 16:51:37,819 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-25 16:51:37,824 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-25 16:51:37,827 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-25 16:51:37,827 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-25 16:51:37,830 INFO  L313           BlockEncoder]: Encoded RCFG 5838 locations, 10315 edges
[2020-11-25 16:51:37,831 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 04:51:37 BasicIcfg
[2020-11-25 16:51:37,831 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-25 16:51:37,831 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-25 16:51:37,831 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-25 16:51:37,832 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-25 16:51:37,833 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 16:51:37,833 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "GatherToken_0xc3771d47E2Ab5A519E2917E61e23078d0C05Ed7f_balanceof.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 04:51:34" (1/6) ...
[2020-11-25 16:51:37,834 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@38d10aad and model type GatherToken_0xc3771d47E2Ab5A519E2917E61e23078d0C05Ed7f_balanceof.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 04:51:37, skipping insertion in model container
[2020-11-25 16:51:37,834 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 16:51:37,834 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 04:51:34" (2/6) ...
[2020-11-25 16:51:37,834 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@38d10aad and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 04:51:37, skipping insertion in model container
[2020-11-25 16:51:37,834 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 16:51:37,834 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "GatherToken_0xc3771d47E2Ab5A519E2917E61e23078d0C05Ed7f_balanceof.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 04:51:35" (3/6) ...
[2020-11-25 16:51:37,834 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@38d10aad and model type GatherToken_0xc3771d47E2Ab5A519E2917E61e23078d0C05Ed7f_balanceof.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 04:51:37, skipping insertion in model container
[2020-11-25 16:51:37,834 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 16:51:37,834 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 04:51:36" (4/6) ...
[2020-11-25 16:51:37,835 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@38d10aad and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 04:51:37, skipping insertion in model container
[2020-11-25 16:51:37,835 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 16:51:37,835 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 04:51:37" (5/6) ...
[2020-11-25 16:51:37,835 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@38d10aad and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 25.11 04:51:37, skipping insertion in model container
[2020-11-25 16:51:37,835 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 16:51:37,835 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 04:51:37" (6/6) ...
[2020-11-25 16:51:37,836 INFO  L404   chiAutomizerObserver]: Analyzing ICFG GatherToken_0xc3771d47E2Ab5A519E2917E61e23078d0C05Ed7f_balanceof.bpl_BEv2
[2020-11-25 16:51:37,866 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-25 16:51:37,866 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-25 16:51:37,866 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-25 16:51:37,866 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-25 16:51:37,866 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-25 16:51:37,866 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-25 16:51:37,866 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-25 16:51:37,866 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-25 16:51:37,866 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-25 16:51:37,905 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 5838 states.
[2020-11-25 16:51:37,963 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 16:51:37,964 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 16:51:37,964 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 16:51:37,977 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 16:51:37,977 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 16:51:37,977 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-25 16:51:37,977 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 5838 states.
[2020-11-25 16:51:38,006 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 16:51:38,006 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 16:51:38,006 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 16:51:38,008 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 16:51:38,008 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 success_balanceOf_BasicToken0 := false;
[L2]                 call_balanceOf_BasicToken0 := false;
[L2]     CALL        call main();
[L6692]              assume null == 0;
[L6693]  CALL        call this := FreshRefGenerator__success();
[L2967]              havoc newRef;
[L2968]              assume Alloc[newRef] == false;
[L2969]              Alloc[newRef] := true;
[L2970]              assume newRef != null;
[L6693]  RET         call this := FreshRefGenerator__success();
[L6694]              assume now >= 0;
[L6695]              assume DType[this] == GatherToken;
[L6696]              assume msgvalue_MSG == 0;
[L6697]              gas := gas - 53000;
[L6698]  CALL        call GatherToken_GatherToken(this, msgsender_MSG, msgvalue_MSG);
[L1621]              havoc __exception;
[L1622]              revert := false;
[L1623]  COND FALSE  !(__exception)
[L1650]  CALL        call GatherToken_GatherToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3997]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3173]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3158]              assume msgsender_MSG != null;
[L3159]              Balance[this] := 0;
[L3173]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3174]  COND FALSE  !(revert)
[L3997]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3998]  COND TRUE   revert
[L1650]  RET         call GatherToken_GatherToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1651]              assume !revert && gas >= 0;
[L6698]  RET         call GatherToken_GatherToken(this, msgsender_MSG, msgvalue_MSG);
[L6699]              assume !revert && gas >= 0;

Loop:
[L6702]  CALL        call CorralChoice_GatherToken(this);
[L6488]              havoc msgsender_MSG;
[L6489]              havoc msgvalue_MSG;
[L6490]              havoc choice;
[L6491]              havoc __ret_0_owner;
[L6492]              havoc newOwner_s150;
[L6493]              havoc __ret_0_totalSupply;
[L6494]              havoc _owner_s312;
[L6495]              havoc __ret_0_balanceOf;
[L6496]              havoc _to_s867;
[L6497]              havoc _value_s867;
[L6498]              havoc __ret_0_transfer;
[L6499]              havoc _owner_s453;
[L6500]              havoc _spender_s453;
[L6501]              havoc __ret_0_allowance;
[L6502]              havoc _from_s849;
[L6503]              havoc _to_s849;
[L6504]              havoc _value_s849;
[L6505]              havoc __ret_0_transferFrom;
[L6506]              havoc _spender_s437;
[L6507]              havoc _value_s437;
[L6508]              havoc __ret_0_approve;
[L6509]              havoc _spender_s495;
[L6510]              havoc _addedValue_s495;
[L6511]              havoc __ret_0_increaseApproval;
[L6512]              havoc _spender_s555;
[L6513]              havoc _subtractedValue_s555;
[L6514]              havoc __ret_0_decreaseApproval;
[L6515]              havoc __ret_0_mintingFinished;
[L6516]              havoc __ret_0_maxMintLimit;
[L6517]              havoc _minter_s650;
[L6518]              havoc _amount_s650;
[L6519]              havoc _to_s669;
[L6520]              havoc _amount_s669;
[L6521]              havoc __ret_0_mint;
[L6522]              havoc _minter_s749;
[L6523]              havoc __ret_0_mintAllowed;
[L6524]              havoc __ret_0_finishMinting;
[L6525]              havoc __ret_0_name;
[L6526]              havoc __ret_0_symbol;
[L6527]              havoc __ret_0_decimals;
[L6528]              havoc __ret_0_transferPaused;
[L6529]              havoc tmpNow;
[L6530]              havoc gas;
[L6531]              assume gas > 4000000 && gas <= 8000000;
[L6532]              tmpNow := now;
[L6533]              havoc now;
[L6534]              assume now > tmpNow;
[L6535]              assume msgsender_MSG != null;
[L6536]              assume DType[msgsender_MSG] != SafeMath;
[L6537]              assume DType[msgsender_MSG] != Ownable;
[L6538]              assume DType[msgsender_MSG] != ERC20Basic;
[L6539]              assume DType[msgsender_MSG] != ERC20;
[L6540]              assume DType[msgsender_MSG] != BasicToken;
[L6541]              assume DType[msgsender_MSG] != StandardToken;
[L6542]              assume DType[msgsender_MSG] != MintableToken;
[L6543]              assume DType[msgsender_MSG] != GatherToken;
[L6544]              Alloc[msgsender_MSG] := true;
[L6545]  COND TRUE   choice == 22
[L6546]              gas := gas - 21000;
[L6547]  COND FALSE  !(gas >= 0)
[L6702]  RET         call CorralChoice_GatherToken(this);

[2020-11-25 16:51:38,025 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 16:51:38,026 INFO  L82        PathProgramCache]: Analyzing trace with hash -471381811, now seen corresponding path program 1 times
[2020-11-25 16:51:38,031 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 16:51:38,055 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 16:51:38,094 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 16:51:38,096 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 16:51:38,096 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 16:51:38,461 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 16:51:38,469 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 16:51:38,470 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 16:51:38,471 INFO  L87              Difference]: Start difference. First operand 5838 states. Second operand 4 states.
[2020-11-25 16:51:39,635 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 16:51:39,636 INFO  L93              Difference]: Finished difference Result 5186 states and 8285 transitions.
[2020-11-25 16:51:39,636 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 16:51:39,637 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 5186 states and 8285 transitions.
[2020-11-25 16:51:39,670 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 6
[2020-11-25 16:51:39,711 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 5186 states to 5010 states and 8004 transitions.
[2020-11-25 16:51:39,712 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 13
[2020-11-25 16:51:39,716 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 1239
[2020-11-25 16:51:39,716 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 5010 states and 8004 transitions.
[2020-11-25 16:51:39,732 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 16:51:39,732 INFO  L728         BuchiCegarLoop]: Abstraction has 5010 states and 8004 transitions.
[2020-11-25 16:51:39,747 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 5010 states and 8004 transitions.
[2020-11-25 16:51:39,809 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 5010 to 3912.
[2020-11-25 16:51:39,810 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 3912 states.
[2020-11-25 16:51:39,816 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 3912 states to 3912 states and 5954 transitions.
[2020-11-25 16:51:39,816 INFO  L751         BuchiCegarLoop]: Abstraction has 3912 states and 5954 transitions.
[2020-11-25 16:51:39,817 INFO  L631         BuchiCegarLoop]: Abstraction has 3912 states and 5954 transitions.
[2020-11-25 16:51:39,817 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-25 16:51:39,817 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3912 states and 5954 transitions.
[2020-11-25 16:51:39,826 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 16:51:39,826 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 16:51:39,826 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 16:51:39,830 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [10, 10, 10, 10, 10, 10, 10, 10, 10, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 16:51:39,830 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 success_balanceOf_BasicToken0 := false;
[L2]                 call_balanceOf_BasicToken0 := false;
[L2]     CALL        call main();
[L6692]              assume null == 0;
[L6693]  CALL        call this := FreshRefGenerator__success();
[L2967]              havoc newRef;
[L2968]              assume Alloc[newRef] == false;
[L2969]              Alloc[newRef] := true;
[L2970]              assume newRef != null;
[L6693]  RET         call this := FreshRefGenerator__success();
[L6694]              assume now >= 0;
[L6695]              assume DType[this] == GatherToken;
[L6696]              assume msgvalue_MSG == 0;
[L6697]              gas := gas - 53000;
[L6698]  CALL        call GatherToken_GatherToken(this, msgsender_MSG, msgvalue_MSG);
[L1621]              havoc __exception;
[L1622]              revert := false;
[L1623]  COND FALSE  !(__exception)
[L1650]  CALL        call GatherToken_GatherToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3997]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3173]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3158]              assume msgsender_MSG != null;
[L3159]              Balance[this] := 0;
[L3173]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3174]  COND FALSE  !(revert)
[L3997]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3998]  COND FALSE  !(revert)
[L4001]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3209]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3173]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3158]              assume msgsender_MSG != null;
[L3159]              Balance[this] := 0;
[L3173]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3174]  COND FALSE  !(revert)
[L3209]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3210]  COND FALSE  !(revert)
[L3213]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3190]              assume msgsender_MSG != null;
[L3191]              Balance[this] := 0;
[L3213]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3214]  COND FALSE  !(revert)
[L4001]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4002]  COND FALSE  !(revert)
[L4005]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3255]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3173]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3158]              assume msgsender_MSG != null;
[L3159]              Balance[this] := 0;
[L3173]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3174]  COND FALSE  !(revert)
[L3255]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3256]  COND FALSE  !(revert)
[L3259]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3233]              assume msgsender_MSG != null;
[L3234]              Balance[this] := 0;
[L3235]              balances_BasicToken[this] := zeroRefintArr();
[L3236]              sum_balances0[this] := 0;
[L3237]              totalSupply__BasicToken[this] := 0;
[L3259]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3260]  COND FALSE  !(revert)
[L4005]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4006]  COND FALSE  !(revert)
[L4009]  CALL        call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3396]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3173]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3158]              assume msgsender_MSG != null;
[L3159]              Balance[this] := 0;
[L3173]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3174]  COND FALSE  !(revert)
[L3396]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3397]  COND FALSE  !(revert)
[L3400]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3209]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3173]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3158]              assume msgsender_MSG != null;
[L3159]              Balance[this] := 0;
[L3173]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3174]  COND FALSE  !(revert)
[L3209]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3210]  COND FALSE  !(revert)
[L3213]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3190]              assume msgsender_MSG != null;
[L3191]              Balance[this] := 0;
[L3213]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3214]  COND FALSE  !(revert)
[L3400]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3401]  COND FALSE  !(revert)
[L3404]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3255]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3173]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3158]              assume msgsender_MSG != null;
[L3159]              Balance[this] := 0;
[L3173]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3174]  COND FALSE  !(revert)
[L3255]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3256]  COND FALSE  !(revert)
[L3259]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3233]              assume msgsender_MSG != null;
[L3234]              Balance[this] := 0;
[L3235]              balances_BasicToken[this] := zeroRefintArr();
[L3236]              sum_balances0[this] := 0;
[L3237]              totalSupply__BasicToken[this] := 0;
[L3259]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3260]  COND FALSE  !(revert)
[L3404]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3405]  COND FALSE  !(revert)
[L3408]  CALL        call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3367]              assume msgsender_MSG != null;
[L3368]              Balance[this] := 0;
[L3369]              allowed_StandardToken[this] := zeroRefRefintArr();
[L3370]              sum_allowed1[this] := 0;
[L3408]  RET         call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3409]  COND FALSE  !(revert)
[L4009]  RET         call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4010]  COND FALSE  !(revert)
[L4013]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3098]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3081]              assume msgsender_MSG != null;
[L3082]              Balance[this] := 0;
[L3083]              owner_Ownable[this] := null;
[L3085]              owner_Ownable[this] := msgsender_MSG;
[L3098]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3099]  COND FALSE  !(revert)
[L4013]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4014]  COND FALSE  !(revert)
[L4017]  CALL        call MintableToken_MintableToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3662]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3173]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3158]              assume msgsender_MSG != null;
[L3159]              Balance[this] := 0;
[L3173]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3174]  COND FALSE  !(revert)
[L3662]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3663]  COND FALSE  !(revert)
[L3666]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3209]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3173]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3158]              assume msgsender_MSG != null;
[L3159]              Balance[this] := 0;
[L3173]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3174]  COND FALSE  !(revert)
[L3209]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3210]  COND FALSE  !(revert)
[L3213]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3190]              assume msgsender_MSG != null;
[L3191]              Balance[this] := 0;
[L3213]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3214]  COND FALSE  !(revert)
[L3666]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3667]  COND FALSE  !(revert)
[L3670]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3255]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3173]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3158]              assume msgsender_MSG != null;
[L3159]              Balance[this] := 0;
[L3173]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3174]  COND FALSE  !(revert)
[L3255]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3256]  COND FALSE  !(revert)
[L3259]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3233]              assume msgsender_MSG != null;
[L3234]              Balance[this] := 0;
[L3235]              balances_BasicToken[this] := zeroRefintArr();
[L3236]              sum_balances0[this] := 0;
[L3237]              totalSupply__BasicToken[this] := 0;
[L3259]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3260]  COND FALSE  !(revert)
[L3670]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3671]  COND FALSE  !(revert)
[L3674]  CALL        call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3396]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3173]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3158]              assume msgsender_MSG != null;
[L3159]              Balance[this] := 0;
[L3173]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3174]  COND FALSE  !(revert)
[L3396]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3397]  COND FALSE  !(revert)
[L3400]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3209]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3173]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3158]              assume msgsender_MSG != null;
[L3159]              Balance[this] := 0;
[L3173]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3174]  COND FALSE  !(revert)
[L3209]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3210]  COND FALSE  !(revert)
[L3213]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3190]              assume msgsender_MSG != null;
[L3191]              Balance[this] := 0;
[L3213]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3214]  COND FALSE  !(revert)
[L3400]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3401]  COND FALSE  !(revert)
[L3404]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3255]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3173]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3158]              assume msgsender_MSG != null;
[L3159]              Balance[this] := 0;
[L3173]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3174]  COND FALSE  !(revert)
[L3255]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3256]  COND FALSE  !(revert)
[L3259]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3233]              assume msgsender_MSG != null;
[L3234]              Balance[this] := 0;
[L3235]              balances_BasicToken[this] := zeroRefintArr();
[L3236]              sum_balances0[this] := 0;
[L3237]              totalSupply__BasicToken[this] := 0;
[L3259]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3260]  COND FALSE  !(revert)
[L3404]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3405]  COND FALSE  !(revert)
[L3408]  CALL        call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3367]              assume msgsender_MSG != null;
[L3368]              Balance[this] := 0;
[L3369]              allowed_StandardToken[this] := zeroRefRefintArr();
[L3370]              sum_allowed1[this] := 0;
[L3408]  RET         call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3409]  COND FALSE  !(revert)
[L3674]  RET         call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3675]  COND FALSE  !(revert)
[L3678]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3098]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3081]              assume msgsender_MSG != null;
[L3082]              Balance[this] := 0;
[L3083]              owner_Ownable[this] := null;
[L3085]              owner_Ownable[this] := msgsender_MSG;
[L3098]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3099]  COND FALSE  !(revert)
[L3678]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3679]  COND FALSE  !(revert)
[L3682]  CALL        call MintableToken_MintableToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3623]              assume msgsender_MSG != null;
[L3624]              Balance[this] := 0;
[L3625]              mintingFinished_MintableToken[this] := false;
[L3626]              mintPermissions_MintableToken[this] := zeroRefintArr();
[L3627]              sum_mintPermissions2[this] := 0;
[L3628]              maxMintLimit_MintableToken[this] := 0;
[L3682]  RET         call MintableToken_MintableToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3683]  COND FALSE  !(revert)
[L4017]  RET         call MintableToken_MintableToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4018]  COND FALSE  !(revert)
[L4021]  CALL        call GatherToken_GatherToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3950]              assume msgsender_MSG != null;
[L3951]              Balance[this] := 0;
[L3952]              name_GatherToken[this] := 1979683959;
[L3953]              symbol_GatherToken[this] := -286833360;
[L3954]              decimals_GatherToken[this] := 18;
[L3955]              transferPaused_GatherToken[this] := true;
[L3957]              __var_16 := decimals_GatherToken[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3958]              maxMintLimit_MintableToken[this] := 400000000 * (nonlinearPow(10, decimals_GatherToken[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4021]  RET         call GatherToken_GatherToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4022]  COND FALSE  !(revert)
[L1650]  RET         call GatherToken_GatherToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1651]              assume !revert && gas >= 0;
[L6698]  RET         call GatherToken_GatherToken(this, msgsender_MSG, msgvalue_MSG);
[L6699]              assume !revert && gas >= 0;

Loop:
[L6702]  CALL        call CorralChoice_GatherToken(this);
[L6488]              havoc msgsender_MSG;
[L6489]              havoc msgvalue_MSG;
[L6490]              havoc choice;
[L6491]              havoc __ret_0_owner;
[L6492]              havoc newOwner_s150;
[L6493]              havoc __ret_0_totalSupply;
[L6494]              havoc _owner_s312;
[L6495]              havoc __ret_0_balanceOf;
[L6496]              havoc _to_s867;
[L6497]              havoc _value_s867;
[L6498]              havoc __ret_0_transfer;
[L6499]              havoc _owner_s453;
[L6500]              havoc _spender_s453;
[L6501]              havoc __ret_0_allowance;
[L6502]              havoc _from_s849;
[L6503]              havoc _to_s849;
[L6504]              havoc _value_s849;
[L6505]              havoc __ret_0_transferFrom;
[L6506]              havoc _spender_s437;
[L6507]              havoc _value_s437;
[L6508]              havoc __ret_0_approve;
[L6509]              havoc _spender_s495;
[L6510]              havoc _addedValue_s495;
[L6511]              havoc __ret_0_increaseApproval;
[L6512]              havoc _spender_s555;
[L6513]              havoc _subtractedValue_s555;
[L6514]              havoc __ret_0_decreaseApproval;
[L6515]              havoc __ret_0_mintingFinished;
[L6516]              havoc __ret_0_maxMintLimit;
[L6517]              havoc _minter_s650;
[L6518]              havoc _amount_s650;
[L6519]              havoc _to_s669;
[L6520]              havoc _amount_s669;
[L6521]              havoc __ret_0_mint;
[L6522]              havoc _minter_s749;
[L6523]              havoc __ret_0_mintAllowed;
[L6524]              havoc __ret_0_finishMinting;
[L6525]              havoc __ret_0_name;
[L6526]              havoc __ret_0_symbol;
[L6527]              havoc __ret_0_decimals;
[L6528]              havoc __ret_0_transferPaused;
[L6529]              havoc tmpNow;
[L6530]              havoc gas;
[L6531]              assume gas > 4000000 && gas <= 8000000;
[L6532]              tmpNow := now;
[L6533]              havoc now;
[L6534]              assume now > tmpNow;
[L6535]              assume msgsender_MSG != null;
[L6536]              assume DType[msgsender_MSG] != SafeMath;
[L6537]              assume DType[msgsender_MSG] != Ownable;
[L6538]              assume DType[msgsender_MSG] != ERC20Basic;
[L6539]              assume DType[msgsender_MSG] != ERC20;
[L6540]              assume DType[msgsender_MSG] != BasicToken;
[L6541]              assume DType[msgsender_MSG] != StandardToken;
[L6542]              assume DType[msgsender_MSG] != MintableToken;
[L6543]              assume DType[msgsender_MSG] != GatherToken;
[L6544]              Alloc[msgsender_MSG] := true;
[L6545]  COND TRUE   choice == 22
[L6546]              gas := gas - 21000;
[L6547]  COND FALSE  !(gas >= 0)
[L6702]  RET         call CorralChoice_GatherToken(this);

[2020-11-25 16:51:39,836 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 16:51:39,836 INFO  L82        PathProgramCache]: Analyzing trace with hash -1815131413, now seen corresponding path program 1 times
[2020-11-25 16:51:39,837 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 16:51:39,849 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 16:51:39,950 INFO  L134       CoverageAnalysis]: Checked inductivity of 685 backedges. 0 proven. 31 refuted. 0 times theorem prover too weak. 654 trivial. 0 not checked.
[2020-11-25 16:51:39,950 INFO  L312   seRefinementStrategy]: Constructing automaton from 0 perfect and 1 imperfect interpolant sequences.
[2020-11-25 16:51:39,951 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [] imperfect sequences [4] total 4
[2020-11-25 16:51:39,954 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 16:51:39,954 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 16:51:39,954 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 16:51:39,955 INFO  L87              Difference]: Start difference. First operand 3912 states and 5954 transitions. cyclomatic complexity: 2044 Second operand 4 states.
[2020-11-25 16:51:40,246 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 16:51:40,246 INFO  L93              Difference]: Finished difference Result 3557 states and 3830 transitions.
[2020-11-25 16:51:40,246 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 16:51:40,246 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3557 states and 3830 transitions.
[2020-11-25 16:51:40,256 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 16:51:40,265 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3557 states to 3557 states and 3830 transitions.
[2020-11-25 16:51:40,265 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 912
[2020-11-25 16:51:40,266 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 912
[2020-11-25 16:51:40,266 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3557 states and 3830 transitions.
[2020-11-25 16:51:40,268 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 16:51:40,268 INFO  L728         BuchiCegarLoop]: Abstraction has 3557 states and 3830 transitions.
[2020-11-25 16:51:40,271 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3557 states and 3830 transitions.
[2020-11-25 16:51:40,293 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3557 to 3557.
[2020-11-25 16:51:40,293 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 3557 states.
[2020-11-25 16:51:40,296 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 3557 states to 3557 states and 3830 transitions.
[2020-11-25 16:51:40,296 INFO  L751         BuchiCegarLoop]: Abstraction has 3557 states and 3830 transitions.
[2020-11-25 16:51:40,296 INFO  L631         BuchiCegarLoop]: Abstraction has 3557 states and 3830 transitions.
[2020-11-25 16:51:40,296 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-25 16:51:40,296 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3557 states and 3830 transitions.
[2020-11-25 16:51:40,301 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 16:51:40,301 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 16:51:40,301 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 16:51:40,303 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [12, 12, 12, 12, 12, 12, 12, 12, 12, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 16:51:40,303 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 success_balanceOf_BasicToken0 := false;
[L2]                 call_balanceOf_BasicToken0 := false;
[L2]     CALL        call main();
[L6692]              assume null == 0;
[L6693]  CALL        call this := FreshRefGenerator__success();
[L2967]              havoc newRef;
[L2968]              assume Alloc[newRef] == false;
[L2969]              Alloc[newRef] := true;
[L2970]              assume newRef != null;
[L6693]  RET         call this := FreshRefGenerator__success();
[L6694]              assume now >= 0;
[L6695]              assume DType[this] == GatherToken;
[L6696]              assume msgvalue_MSG == 0;
[L6697]              gas := gas - 53000;
[L6698]  CALL        call GatherToken_GatherToken(this, msgsender_MSG, msgvalue_MSG);
[L1621]              havoc __exception;
[L1622]              revert := false;
[L1623]  COND FALSE  !(__exception)
[L1650]  CALL        call GatherToken_GatherToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3997]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3173]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3158]              assume msgsender_MSG != null;
[L3159]              Balance[this] := 0;
[L3173]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3174]  COND FALSE  !(revert)
[L3997]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3998]  COND FALSE  !(revert)
[L4001]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3209]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3173]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3158]              assume msgsender_MSG != null;
[L3159]              Balance[this] := 0;
[L3173]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3174]  COND FALSE  !(revert)
[L3209]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3210]  COND FALSE  !(revert)
[L3213]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3190]              assume msgsender_MSG != null;
[L3191]              Balance[this] := 0;
[L3213]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3214]  COND FALSE  !(revert)
[L4001]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4002]  COND FALSE  !(revert)
[L4005]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3255]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3173]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3158]              assume msgsender_MSG != null;
[L3159]              Balance[this] := 0;
[L3173]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3174]  COND FALSE  !(revert)
[L3255]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3256]  COND FALSE  !(revert)
[L3259]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3233]              assume msgsender_MSG != null;
[L3234]              Balance[this] := 0;
[L3235]              balances_BasicToken[this] := zeroRefintArr();
[L3236]              sum_balances0[this] := 0;
[L3237]              totalSupply__BasicToken[this] := 0;
[L3259]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3260]  COND FALSE  !(revert)
[L4005]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4006]  COND FALSE  !(revert)
[L4009]  CALL        call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3396]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3173]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3158]              assume msgsender_MSG != null;
[L3159]              Balance[this] := 0;
[L3173]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3174]  COND FALSE  !(revert)
[L3396]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3397]  COND FALSE  !(revert)
[L3400]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3209]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3173]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3158]              assume msgsender_MSG != null;
[L3159]              Balance[this] := 0;
[L3173]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3174]  COND FALSE  !(revert)
[L3209]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3210]  COND FALSE  !(revert)
[L3213]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3190]              assume msgsender_MSG != null;
[L3191]              Balance[this] := 0;
[L3213]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3214]  COND FALSE  !(revert)
[L3400]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3401]  COND FALSE  !(revert)
[L3404]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3255]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3173]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3158]              assume msgsender_MSG != null;
[L3159]              Balance[this] := 0;
[L3173]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3174]  COND FALSE  !(revert)
[L3255]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3256]  COND FALSE  !(revert)
[L3259]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3233]              assume msgsender_MSG != null;
[L3234]              Balance[this] := 0;
[L3235]              balances_BasicToken[this] := zeroRefintArr();
[L3236]              sum_balances0[this] := 0;
[L3237]              totalSupply__BasicToken[this] := 0;
[L3259]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3260]  COND FALSE  !(revert)
[L3404]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3405]  COND FALSE  !(revert)
[L3408]  CALL        call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3367]              assume msgsender_MSG != null;
[L3368]              Balance[this] := 0;
[L3369]              allowed_StandardToken[this] := zeroRefRefintArr();
[L3370]              sum_allowed1[this] := 0;
[L3408]  RET         call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3409]  COND FALSE  !(revert)
[L4009]  RET         call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4010]  COND FALSE  !(revert)
[L4013]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3098]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3081]              assume msgsender_MSG != null;
[L3082]              Balance[this] := 0;
[L3083]              owner_Ownable[this] := null;
[L3085]              owner_Ownable[this] := msgsender_MSG;
[L3098]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3099]  COND FALSE  !(revert)
[L4013]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4014]  COND FALSE  !(revert)
[L4017]  CALL        call MintableToken_MintableToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3662]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3173]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3158]              assume msgsender_MSG != null;
[L3159]              Balance[this] := 0;
[L3173]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3174]  COND FALSE  !(revert)
[L3662]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3663]  COND FALSE  !(revert)
[L3666]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3209]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3173]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3158]              assume msgsender_MSG != null;
[L3159]              Balance[this] := 0;
[L3173]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3174]  COND FALSE  !(revert)
[L3209]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3210]  COND FALSE  !(revert)
[L3213]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3190]              assume msgsender_MSG != null;
[L3191]              Balance[this] := 0;
[L3213]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3214]  COND FALSE  !(revert)
[L3666]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3667]  COND FALSE  !(revert)
[L3670]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3255]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3173]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3158]              assume msgsender_MSG != null;
[L3159]              Balance[this] := 0;
[L3173]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3174]  COND FALSE  !(revert)
[L3255]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3256]  COND FALSE  !(revert)
[L3259]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3233]              assume msgsender_MSG != null;
[L3234]              Balance[this] := 0;
[L3235]              balances_BasicToken[this] := zeroRefintArr();
[L3236]              sum_balances0[this] := 0;
[L3237]              totalSupply__BasicToken[this] := 0;
[L3259]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3260]  COND FALSE  !(revert)
[L3670]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3671]  COND FALSE  !(revert)
[L3674]  CALL        call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3396]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3173]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3158]              assume msgsender_MSG != null;
[L3159]              Balance[this] := 0;
[L3173]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3174]  COND FALSE  !(revert)
[L3396]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3397]  COND FALSE  !(revert)
[L3400]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3209]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3173]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3158]              assume msgsender_MSG != null;
[L3159]              Balance[this] := 0;
[L3173]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3174]  COND FALSE  !(revert)
[L3209]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3210]  COND FALSE  !(revert)
[L3213]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3190]              assume msgsender_MSG != null;
[L3191]              Balance[this] := 0;
[L3213]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3214]  COND FALSE  !(revert)
[L3400]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3401]  COND FALSE  !(revert)
[L3404]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3255]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3173]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3158]              assume msgsender_MSG != null;
[L3159]              Balance[this] := 0;
[L3173]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3174]  COND FALSE  !(revert)
[L3255]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3256]  COND FALSE  !(revert)
[L3259]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3233]              assume msgsender_MSG != null;
[L3234]              Balance[this] := 0;
[L3235]              balances_BasicToken[this] := zeroRefintArr();
[L3236]              sum_balances0[this] := 0;
[L3237]              totalSupply__BasicToken[this] := 0;
[L3259]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3260]  COND FALSE  !(revert)
[L3404]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3405]  COND FALSE  !(revert)
[L3408]  CALL        call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3367]              assume msgsender_MSG != null;
[L3368]              Balance[this] := 0;
[L3369]              allowed_StandardToken[this] := zeroRefRefintArr();
[L3370]              sum_allowed1[this] := 0;
[L3408]  RET         call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3409]  COND FALSE  !(revert)
[L3674]  RET         call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3675]  COND FALSE  !(revert)
[L3678]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3098]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3081]              assume msgsender_MSG != null;
[L3082]              Balance[this] := 0;
[L3083]              owner_Ownable[this] := null;
[L3085]              owner_Ownable[this] := msgsender_MSG;
[L3098]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3099]  COND FALSE  !(revert)
[L3678]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3679]  COND FALSE  !(revert)
[L3682]  CALL        call MintableToken_MintableToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3623]              assume msgsender_MSG != null;
[L3624]              Balance[this] := 0;
[L3625]              mintingFinished_MintableToken[this] := false;
[L3626]              mintPermissions_MintableToken[this] := zeroRefintArr();
[L3627]              sum_mintPermissions2[this] := 0;
[L3628]              maxMintLimit_MintableToken[this] := 0;
[L3682]  RET         call MintableToken_MintableToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3683]  COND FALSE  !(revert)
[L4017]  RET         call MintableToken_MintableToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4018]  COND FALSE  !(revert)
[L4021]  CALL        call GatherToken_GatherToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3950]              assume msgsender_MSG != null;
[L3951]              Balance[this] := 0;
[L3952]              name_GatherToken[this] := 1979683959;
[L3953]              symbol_GatherToken[this] := -286833360;
[L3954]              decimals_GatherToken[this] := 18;
[L3955]              transferPaused_GatherToken[this] := true;
[L3957]              __var_16 := decimals_GatherToken[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3958]              maxMintLimit_MintableToken[this] := 400000000 * (nonlinearPow(10, decimals_GatherToken[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4021]  RET         call GatherToken_GatherToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4022]  COND FALSE  !(revert)
[L1650]  RET         call GatherToken_GatherToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1651]              assume !revert && gas >= 0;
[L6698]  RET         call GatherToken_GatherToken(this, msgsender_MSG, msgvalue_MSG);
[L6699]              assume !revert && gas >= 0;
[L6702]  CALL        call CorralChoice_GatherToken(this);
[L6488]              havoc msgsender_MSG;
[L6489]              havoc msgvalue_MSG;
[L6490]              havoc choice;
[L6491]              havoc __ret_0_owner;
[L6492]              havoc newOwner_s150;
[L6493]              havoc __ret_0_totalSupply;
[L6494]              havoc _owner_s312;
[L6495]              havoc __ret_0_balanceOf;
[L6496]              havoc _to_s867;
[L6497]              havoc _value_s867;
[L6498]              havoc __ret_0_transfer;
[L6499]              havoc _owner_s453;
[L6500]              havoc _spender_s453;
[L6501]              havoc __ret_0_allowance;
[L6502]              havoc _from_s849;
[L6503]              havoc _to_s849;
[L6504]              havoc _value_s849;
[L6505]              havoc __ret_0_transferFrom;
[L6506]              havoc _spender_s437;
[L6507]              havoc _value_s437;
[L6508]              havoc __ret_0_approve;
[L6509]              havoc _spender_s495;
[L6510]              havoc _addedValue_s495;
[L6511]              havoc __ret_0_increaseApproval;
[L6512]              havoc _spender_s555;
[L6513]              havoc _subtractedValue_s555;
[L6514]              havoc __ret_0_decreaseApproval;
[L6515]              havoc __ret_0_mintingFinished;
[L6516]              havoc __ret_0_maxMintLimit;
[L6517]              havoc _minter_s650;
[L6518]              havoc _amount_s650;
[L6519]              havoc _to_s669;
[L6520]              havoc _amount_s669;
[L6521]              havoc __ret_0_mint;
[L6522]              havoc _minter_s749;
[L6523]              havoc __ret_0_mintAllowed;
[L6524]              havoc __ret_0_finishMinting;
[L6525]              havoc __ret_0_name;
[L6526]              havoc __ret_0_symbol;
[L6527]              havoc __ret_0_decimals;
[L6528]              havoc __ret_0_transferPaused;
[L6529]              havoc tmpNow;
[L6530]              havoc gas;
[L6531]              assume gas > 4000000 && gas <= 8000000;
[L6532]              tmpNow := now;
[L6533]              havoc now;
[L6534]              assume now > tmpNow;
[L6535]              assume msgsender_MSG != null;
[L6536]              assume DType[msgsender_MSG] != SafeMath;
[L6537]              assume DType[msgsender_MSG] != Ownable;
[L6538]              assume DType[msgsender_MSG] != ERC20Basic;
[L6539]              assume DType[msgsender_MSG] != ERC20;
[L6540]              assume DType[msgsender_MSG] != BasicToken;
[L6541]              assume DType[msgsender_MSG] != StandardToken;
[L6542]              assume DType[msgsender_MSG] != MintableToken;
[L6543]              assume DType[msgsender_MSG] != GatherToken;
[L6544]              Alloc[msgsender_MSG] := true;
[L6545]  COND FALSE  !(choice == 22)
[L6551]  COND FALSE  !(choice == 21)
[L6557]  COND FALSE  !(choice == 20)
[L6563]  COND TRUE   choice == 19
[L6564]              gas := gas - 21000;
[L6565]  COND TRUE   gas >= 0
[L6566]              assume msgvalue_MSG == 0;
[L6567]  CALL        call __ret_0_balanceOf := balanceOf~address_BasicToken(this, msgsender_MSG, msgvalue_MSG, _owner_s312);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume balances_BasicToken[this][_owner_s312] >= 0 && balances_BasicToken[this][_owner_s312] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_balanceOf_BasicToken0 := true;
[L2]                 call_balanceOf_BasicToken0 := false;
[L2]                 revert := revert_hold;
[L670]               havoc __exception;
[L671]               revert := false;
[L672]   COND FALSE  !(__exception)
[L699]   CALL        call __ret_0_ := balanceOf~address_BasicToken__success(this, msgsender_MSG, msgvalue_MSG, _owner_s312);
[L3350]              __ret_0_ := balances_BasicToken[this][_owner_s312];
[L699]   RET         call __ret_0_ := balanceOf~address_BasicToken__success(this, msgsender_MSG, msgvalue_MSG, _owner_s312);
[L700]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !((((((((__ret_0_ == balances_BasicToken[this][_owner_s312] && totalSupply__BasicToken[this] == old(totalSupply__BasicToken[this])) && balances_BasicToken[this] == old(balances_BasicToken[this])) && allowed_StandardToken[this] == old(allowed_StandardToken[this])) && transferPaused_GatherToken[this] == old(transferPaused_GatherToken[this])) && mintingFinished_MintableToken[this] == old(mintingFinished_MintableToken[this])) && mintPermissions_MintableToken[this] == old(mintPermissions_MintableToken[this])) && maxMintLimit_MintableToken[this] == old(maxMintLimit_MintableToken[this])) && owner_Ownable[this] == old(owner_Ownable[this]));
[L2]                 revert := revert_hold;
[L6567]  RET         call __ret_0_balanceOf := balanceOf~address_BasicToken(this, msgsender_MSG, msgvalue_MSG, _owner_s312);
[L6702]  RET         call CorralChoice_GatherToken(this);

Loop:
[L6702]  CALL        call CorralChoice_GatherToken(this);
[L6488]              havoc msgsender_MSG;
[L6489]              havoc msgvalue_MSG;
[L6490]              havoc choice;
[L6491]              havoc __ret_0_owner;
[L6492]              havoc newOwner_s150;
[L6493]              havoc __ret_0_totalSupply;
[L6494]              havoc _owner_s312;
[L6495]              havoc __ret_0_balanceOf;
[L6496]              havoc _to_s867;
[L6497]              havoc _value_s867;
[L6498]              havoc __ret_0_transfer;
[L6499]              havoc _owner_s453;
[L6500]              havoc _spender_s453;
[L6501]              havoc __ret_0_allowance;
[L6502]              havoc _from_s849;
[L6503]              havoc _to_s849;
[L6504]              havoc _value_s849;
[L6505]              havoc __ret_0_transferFrom;
[L6506]              havoc _spender_s437;
[L6507]              havoc _value_s437;
[L6508]              havoc __ret_0_approve;
[L6509]              havoc _spender_s495;
[L6510]              havoc _addedValue_s495;
[L6511]              havoc __ret_0_increaseApproval;
[L6512]              havoc _spender_s555;
[L6513]              havoc _subtractedValue_s555;
[L6514]              havoc __ret_0_decreaseApproval;
[L6515]              havoc __ret_0_mintingFinished;
[L6516]              havoc __ret_0_maxMintLimit;
[L6517]              havoc _minter_s650;
[L6518]              havoc _amount_s650;
[L6519]              havoc _to_s669;
[L6520]              havoc _amount_s669;
[L6521]              havoc __ret_0_mint;
[L6522]              havoc _minter_s749;
[L6523]              havoc __ret_0_mintAllowed;
[L6524]              havoc __ret_0_finishMinting;
[L6525]              havoc __ret_0_name;
[L6526]              havoc __ret_0_symbol;
[L6527]              havoc __ret_0_decimals;
[L6528]              havoc __ret_0_transferPaused;
[L6529]              havoc tmpNow;
[L6530]              havoc gas;
[L6531]              assume gas > 4000000 && gas <= 8000000;
[L6532]              tmpNow := now;
[L6533]              havoc now;
[L6534]              assume now > tmpNow;
[L6535]              assume msgsender_MSG != null;
[L6536]              assume DType[msgsender_MSG] != SafeMath;
[L6537]              assume DType[msgsender_MSG] != Ownable;
[L6538]              assume DType[msgsender_MSG] != ERC20Basic;
[L6539]              assume DType[msgsender_MSG] != ERC20;
[L6540]              assume DType[msgsender_MSG] != BasicToken;
[L6541]              assume DType[msgsender_MSG] != StandardToken;
[L6542]              assume DType[msgsender_MSG] != MintableToken;
[L6543]              assume DType[msgsender_MSG] != GatherToken;
[L6544]              Alloc[msgsender_MSG] := true;
[L6545]  COND FALSE  !(choice == 22)
[L6551]  COND FALSE  !(choice == 21)
[L6557]  COND FALSE  !(choice == 20)
[L6563]  COND TRUE   choice == 19
[L6564]              gas := gas - 21000;
[L6565]  COND TRUE   gas >= 0
[L6566]              assume msgvalue_MSG == 0;
[L6567]  CALL        call __ret_0_balanceOf := balanceOf~address_BasicToken(this, msgsender_MSG, msgvalue_MSG, _owner_s312);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume balances_BasicToken[this][_owner_s312] >= 0 && balances_BasicToken[this][_owner_s312] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_balanceOf_BasicToken0 := true;
[L2]                 call_balanceOf_BasicToken0 := false;
[L2]                 revert := revert_hold;
[L670]               havoc __exception;
[L671]               revert := false;
[L672]   COND FALSE  !(__exception)
[L699]   CALL        call __ret_0_ := balanceOf~address_BasicToken__success(this, msgsender_MSG, msgvalue_MSG, _owner_s312);
[L3350]              __ret_0_ := balances_BasicToken[this][_owner_s312];
[L699]   RET         call __ret_0_ := balanceOf~address_BasicToken__success(this, msgsender_MSG, msgvalue_MSG, _owner_s312);
[L700]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !((((((((__ret_0_ == balances_BasicToken[this][_owner_s312] && totalSupply__BasicToken[this] == old(totalSupply__BasicToken[this])) && balances_BasicToken[this] == old(balances_BasicToken[this])) && allowed_StandardToken[this] == old(allowed_StandardToken[this])) && transferPaused_GatherToken[this] == old(transferPaused_GatherToken[this])) && mintingFinished_MintableToken[this] == old(mintingFinished_MintableToken[this])) && mintPermissions_MintableToken[this] == old(mintPermissions_MintableToken[this])) && maxMintLimit_MintableToken[this] == old(maxMintLimit_MintableToken[this])) && owner_Ownable[this] == old(owner_Ownable[this]));
[L2]                 revert := revert_hold;
[L6567]  RET         call __ret_0_balanceOf := balanceOf~address_BasicToken(this, msgsender_MSG, msgvalue_MSG, _owner_s312);
[L6702]  RET         call CorralChoice_GatherToken(this);

[2020-11-25 16:51:40,308 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 16:51:40,308 INFO  L82        PathProgramCache]: Analyzing trace with hash 26766416, now seen corresponding path program 1 times
[2020-11-25 16:51:40,309 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 16:51:40,325 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 16:51:40,426 INFO  L134       CoverageAnalysis]: Checked inductivity of 882 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 882 trivial. 0 not checked.
[2020-11-25 16:51:40,426 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 16:51:40,427 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 16:51:40,427 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 16:51:40,427 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 16:51:40,427 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 16:51:40,427 INFO  L87              Difference]: Start difference. First operand 3557 states and 3830 transitions. cyclomatic complexity: 275 Second operand 4 states.
[2020-11-25 16:51:40,486 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 16:51:40,486 INFO  L93              Difference]: Finished difference Result 3558 states and 3829 transitions.
[2020-11-25 16:51:40,486 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 16:51:40,486 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3558 states and 3829 transitions.
[2020-11-25 16:51:40,493 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 16:51:40,501 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3558 states to 3548 states and 3819 transitions.
[2020-11-25 16:51:40,501 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 901
[2020-11-25 16:51:40,502 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 901
[2020-11-25 16:51:40,502 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3548 states and 3819 transitions.
[2020-11-25 16:51:40,504 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 16:51:40,505 INFO  L728         BuchiCegarLoop]: Abstraction has 3548 states and 3819 transitions.
[2020-11-25 16:51:40,508 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3548 states and 3819 transitions.
[2020-11-25 16:51:40,532 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3548 to 3546.
[2020-11-25 16:51:40,532 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 3546 states.
[2020-11-25 16:51:40,535 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 3546 states to 3546 states and 3817 transitions.
[2020-11-25 16:51:40,536 INFO  L751         BuchiCegarLoop]: Abstraction has 3546 states and 3817 transitions.
[2020-11-25 16:51:40,536 INFO  L631         BuchiCegarLoop]: Abstraction has 3546 states and 3817 transitions.
[2020-11-25 16:51:40,536 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-25 16:51:40,536 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3546 states and 3817 transitions.
[2020-11-25 16:51:40,541 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 16:51:40,541 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 16:51:40,541 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 16:51:40,543 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [12, 12, 12, 12, 12, 12, 12, 12, 12, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 16:51:40,544 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 success_balanceOf_BasicToken0 := false;
[L2]                 call_balanceOf_BasicToken0 := false;
[L2]     CALL        call main();
[L6692]              assume null == 0;
[L6693]  CALL        call this := FreshRefGenerator__success();
[L2967]              havoc newRef;
[L2968]              assume Alloc[newRef] == false;
[L2969]              Alloc[newRef] := true;
[L2970]              assume newRef != null;
[L6693]  RET         call this := FreshRefGenerator__success();
[L6694]              assume now >= 0;
[L6695]              assume DType[this] == GatherToken;
[L6696]              assume msgvalue_MSG == 0;
[L6697]              gas := gas - 53000;
[L6698]  CALL        call GatherToken_GatherToken(this, msgsender_MSG, msgvalue_MSG);
[L1621]              havoc __exception;
[L1622]              revert := false;
[L1623]  COND FALSE  !(__exception)
[L1650]  CALL        call GatherToken_GatherToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3997]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3173]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3158]              assume msgsender_MSG != null;
[L3159]              Balance[this] := 0;
[L3173]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3174]  COND FALSE  !(revert)
[L3997]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3998]  COND FALSE  !(revert)
[L4001]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3209]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3173]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3158]              assume msgsender_MSG != null;
[L3159]              Balance[this] := 0;
[L3173]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3174]  COND FALSE  !(revert)
[L3209]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3210]  COND FALSE  !(revert)
[L3213]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3190]              assume msgsender_MSG != null;
[L3191]              Balance[this] := 0;
[L3213]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3214]  COND FALSE  !(revert)
[L4001]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4002]  COND FALSE  !(revert)
[L4005]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3255]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3173]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3158]              assume msgsender_MSG != null;
[L3159]              Balance[this] := 0;
[L3173]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3174]  COND FALSE  !(revert)
[L3255]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3256]  COND FALSE  !(revert)
[L3259]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3233]              assume msgsender_MSG != null;
[L3234]              Balance[this] := 0;
[L3235]              balances_BasicToken[this] := zeroRefintArr();
[L3236]              sum_balances0[this] := 0;
[L3237]              totalSupply__BasicToken[this] := 0;
[L3259]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3260]  COND FALSE  !(revert)
[L4005]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4006]  COND FALSE  !(revert)
[L4009]  CALL        call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3396]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3173]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3158]              assume msgsender_MSG != null;
[L3159]              Balance[this] := 0;
[L3173]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3174]  COND FALSE  !(revert)
[L3396]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3397]  COND FALSE  !(revert)
[L3400]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3209]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3173]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3158]              assume msgsender_MSG != null;
[L3159]              Balance[this] := 0;
[L3173]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3174]  COND FALSE  !(revert)
[L3209]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3210]  COND FALSE  !(revert)
[L3213]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3190]              assume msgsender_MSG != null;
[L3191]              Balance[this] := 0;
[L3213]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3214]  COND FALSE  !(revert)
[L3400]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3401]  COND FALSE  !(revert)
[L3404]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3255]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3173]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3158]              assume msgsender_MSG != null;
[L3159]              Balance[this] := 0;
[L3173]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3174]  COND FALSE  !(revert)
[L3255]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3256]  COND FALSE  !(revert)
[L3259]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3233]              assume msgsender_MSG != null;
[L3234]              Balance[this] := 0;
[L3235]              balances_BasicToken[this] := zeroRefintArr();
[L3236]              sum_balances0[this] := 0;
[L3237]              totalSupply__BasicToken[this] := 0;
[L3259]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3260]  COND FALSE  !(revert)
[L3404]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3405]  COND FALSE  !(revert)
[L3408]  CALL        call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3367]              assume msgsender_MSG != null;
[L3368]              Balance[this] := 0;
[L3369]              allowed_StandardToken[this] := zeroRefRefintArr();
[L3370]              sum_allowed1[this] := 0;
[L3408]  RET         call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3409]  COND FALSE  !(revert)
[L4009]  RET         call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4010]  COND FALSE  !(revert)
[L4013]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3098]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3081]              assume msgsender_MSG != null;
[L3082]              Balance[this] := 0;
[L3083]              owner_Ownable[this] := null;
[L3085]              owner_Ownable[this] := msgsender_MSG;
[L3098]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3099]  COND FALSE  !(revert)
[L4013]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4014]  COND FALSE  !(revert)
[L4017]  CALL        call MintableToken_MintableToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3662]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3173]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3158]              assume msgsender_MSG != null;
[L3159]              Balance[this] := 0;
[L3173]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3174]  COND FALSE  !(revert)
[L3662]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3663]  COND FALSE  !(revert)
[L3666]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3209]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3173]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3158]              assume msgsender_MSG != null;
[L3159]              Balance[this] := 0;
[L3173]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3174]  COND FALSE  !(revert)
[L3209]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3210]  COND FALSE  !(revert)
[L3213]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3190]              assume msgsender_MSG != null;
[L3191]              Balance[this] := 0;
[L3213]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3214]  COND FALSE  !(revert)
[L3666]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3667]  COND FALSE  !(revert)
[L3670]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3255]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3173]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3158]              assume msgsender_MSG != null;
[L3159]              Balance[this] := 0;
[L3173]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3174]  COND FALSE  !(revert)
[L3255]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3256]  COND FALSE  !(revert)
[L3259]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3233]              assume msgsender_MSG != null;
[L3234]              Balance[this] := 0;
[L3235]              balances_BasicToken[this] := zeroRefintArr();
[L3236]              sum_balances0[this] := 0;
[L3237]              totalSupply__BasicToken[this] := 0;
[L3259]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3260]  COND FALSE  !(revert)
[L3670]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3671]  COND FALSE  !(revert)
[L3674]  CALL        call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3396]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3173]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3158]              assume msgsender_MSG != null;
[L3159]              Balance[this] := 0;
[L3173]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3174]  COND FALSE  !(revert)
[L3396]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3397]  COND FALSE  !(revert)
[L3400]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3209]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3173]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3158]              assume msgsender_MSG != null;
[L3159]              Balance[this] := 0;
[L3173]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3174]  COND FALSE  !(revert)
[L3209]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3210]  COND FALSE  !(revert)
[L3213]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3190]              assume msgsender_MSG != null;
[L3191]              Balance[this] := 0;
[L3213]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3214]  COND FALSE  !(revert)
[L3400]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3401]  COND FALSE  !(revert)
[L3404]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3255]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3173]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3158]              assume msgsender_MSG != null;
[L3159]              Balance[this] := 0;
[L3173]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3174]  COND FALSE  !(revert)
[L3255]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3256]  COND FALSE  !(revert)
[L3259]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3233]              assume msgsender_MSG != null;
[L3234]              Balance[this] := 0;
[L3235]              balances_BasicToken[this] := zeroRefintArr();
[L3236]              sum_balances0[this] := 0;
[L3237]              totalSupply__BasicToken[this] := 0;
[L3259]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3260]  COND FALSE  !(revert)
[L3404]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3405]  COND FALSE  !(revert)
[L3408]  CALL        call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3367]              assume msgsender_MSG != null;
[L3368]              Balance[this] := 0;
[L3369]              allowed_StandardToken[this] := zeroRefRefintArr();
[L3370]              sum_allowed1[this] := 0;
[L3408]  RET         call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3409]  COND FALSE  !(revert)
[L3674]  RET         call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3675]  COND FALSE  !(revert)
[L3678]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3098]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3081]              assume msgsender_MSG != null;
[L3082]              Balance[this] := 0;
[L3083]              owner_Ownable[this] := null;
[L3085]              owner_Ownable[this] := msgsender_MSG;
[L3098]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3099]  COND FALSE  !(revert)
[L3678]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3679]  COND FALSE  !(revert)
[L3682]  CALL        call MintableToken_MintableToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3623]              assume msgsender_MSG != null;
[L3624]              Balance[this] := 0;
[L3625]              mintingFinished_MintableToken[this] := false;
[L3626]              mintPermissions_MintableToken[this] := zeroRefintArr();
[L3627]              sum_mintPermissions2[this] := 0;
[L3628]              maxMintLimit_MintableToken[this] := 0;
[L3682]  RET         call MintableToken_MintableToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3683]  COND FALSE  !(revert)
[L4017]  RET         call MintableToken_MintableToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4018]  COND FALSE  !(revert)
[L4021]  CALL        call GatherToken_GatherToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3950]              assume msgsender_MSG != null;
[L3951]              Balance[this] := 0;
[L3952]              name_GatherToken[this] := 1979683959;
[L3953]              symbol_GatherToken[this] := -286833360;
[L3954]              decimals_GatherToken[this] := 18;
[L3955]              transferPaused_GatherToken[this] := true;
[L3957]              __var_16 := decimals_GatherToken[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3958]              maxMintLimit_MintableToken[this] := 400000000 * (nonlinearPow(10, decimals_GatherToken[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4021]  RET         call GatherToken_GatherToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4022]  COND FALSE  !(revert)
[L1650]  RET         call GatherToken_GatherToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1651]              assume !revert && gas >= 0;
[L6698]  RET         call GatherToken_GatherToken(this, msgsender_MSG, msgvalue_MSG);
[L6699]              assume !revert && gas >= 0;
[L6702]  CALL        call CorralChoice_GatherToken(this);
[L6488]              havoc msgsender_MSG;
[L6489]              havoc msgvalue_MSG;
[L6490]              havoc choice;
[L6491]              havoc __ret_0_owner;
[L6492]              havoc newOwner_s150;
[L6493]              havoc __ret_0_totalSupply;
[L6494]              havoc _owner_s312;
[L6495]              havoc __ret_0_balanceOf;
[L6496]              havoc _to_s867;
[L6497]              havoc _value_s867;
[L6498]              havoc __ret_0_transfer;
[L6499]              havoc _owner_s453;
[L6500]              havoc _spender_s453;
[L6501]              havoc __ret_0_allowance;
[L6502]              havoc _from_s849;
[L6503]              havoc _to_s849;
[L6504]              havoc _value_s849;
[L6505]              havoc __ret_0_transferFrom;
[L6506]              havoc _spender_s437;
[L6507]              havoc _value_s437;
[L6508]              havoc __ret_0_approve;
[L6509]              havoc _spender_s495;
[L6510]              havoc _addedValue_s495;
[L6511]              havoc __ret_0_increaseApproval;
[L6512]              havoc _spender_s555;
[L6513]              havoc _subtractedValue_s555;
[L6514]              havoc __ret_0_decreaseApproval;
[L6515]              havoc __ret_0_mintingFinished;
[L6516]              havoc __ret_0_maxMintLimit;
[L6517]              havoc _minter_s650;
[L6518]              havoc _amount_s650;
[L6519]              havoc _to_s669;
[L6520]              havoc _amount_s669;
[L6521]              havoc __ret_0_mint;
[L6522]              havoc _minter_s749;
[L6523]              havoc __ret_0_mintAllowed;
[L6524]              havoc __ret_0_finishMinting;
[L6525]              havoc __ret_0_name;
[L6526]              havoc __ret_0_symbol;
[L6527]              havoc __ret_0_decimals;
[L6528]              havoc __ret_0_transferPaused;
[L6529]              havoc tmpNow;
[L6530]              havoc gas;
[L6531]              assume gas > 4000000 && gas <= 8000000;
[L6532]              tmpNow := now;
[L6533]              havoc now;
[L6534]              assume now > tmpNow;
[L6535]              assume msgsender_MSG != null;
[L6536]              assume DType[msgsender_MSG] != SafeMath;
[L6537]              assume DType[msgsender_MSG] != Ownable;
[L6538]              assume DType[msgsender_MSG] != ERC20Basic;
[L6539]              assume DType[msgsender_MSG] != ERC20;
[L6540]              assume DType[msgsender_MSG] != BasicToken;
[L6541]              assume DType[msgsender_MSG] != StandardToken;
[L6542]              assume DType[msgsender_MSG] != MintableToken;
[L6543]              assume DType[msgsender_MSG] != GatherToken;
[L6544]              Alloc[msgsender_MSG] := true;
[L6545]  COND FALSE  !(choice == 22)
[L6551]  COND FALSE  !(choice == 21)
[L6557]  COND FALSE  !(choice == 20)
[L6563]  COND TRUE   choice == 19
[L6564]              gas := gas - 21000;
[L6565]  COND TRUE   gas >= 0
[L6566]              assume msgvalue_MSG == 0;
[L6567]  CALL        call __ret_0_balanceOf := balanceOf~address_BasicToken(this, msgsender_MSG, msgvalue_MSG, _owner_s312);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume balances_BasicToken[this][_owner_s312] >= 0 && balances_BasicToken[this][_owner_s312] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_balanceOf_BasicToken0 := true;
[L2]                 call_balanceOf_BasicToken0 := false;
[L2]                 revert := revert_hold;
[L670]               havoc __exception;
[L671]               revert := false;
[L672]   COND TRUE   __exception
[L673]               __tmp__Balance := Balance;
[L674]               __tmp__DType := DType;
[L675]               __tmp__Alloc := Alloc;
[L676]               __tmp__balance_ADDR := balance_ADDR;
[L677]               __tmp__M_Ref_int := M_Ref_int;
[L678]               __tmp__sum_balances0 := sum_balances0;
[L679]               __tmp__alloc_allowed_StandardToken_lvl0 := alloc_allowed_StandardToken_lvl0;
[L680]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L681]               __tmp__sum_allowed1 := sum_allowed1;
[L682]               __tmp__sum_mintPermissions2 := sum_mintPermissions2;
[L683]               __tmp__Length := Length;
[L684]               __tmp__now := now;
[L685]               __tmp__owner_Ownable := owner_Ownable;
[L686]               __tmp__balances_BasicToken := balances_BasicToken;
[L687]               __tmp__totalSupply__BasicToken := totalSupply__BasicToken;
[L688]               __tmp__allowed_StandardToken := allowed_StandardToken;
[L689]               __tmp__mintingFinished_MintableToken := mintingFinished_MintableToken;
[L690]               __tmp__mintPermissions_MintableToken := mintPermissions_MintableToken;
[L691]               __tmp__maxMintLimit_MintableToken := maxMintLimit_MintableToken;
[L692]               __tmp__name_GatherToken := name_GatherToken;
[L693]               __tmp__symbol_GatherToken := symbol_GatherToken;
[L694]               __tmp__decimals_GatherToken := decimals_GatherToken;
[L695]               __tmp__transferPaused_GatherToken := transferPaused_GatherToken;
[L696]   CALL        call __ret_0_ := balanceOf~address_BasicToken__fail(this, msgsender_MSG, msgvalue_MSG, _owner_s312);
[L3344]              __ret_0_ := __tmp__balances_BasicToken[this][_owner_s312];
[L696]   RET         call __ret_0_ := balanceOf~address_BasicToken__fail(this, msgsender_MSG, msgvalue_MSG, _owner_s312);
[L697]               assume revert || gas < 0;
[L6567]  RET         call __ret_0_balanceOf := balanceOf~address_BasicToken(this, msgsender_MSG, msgvalue_MSG, _owner_s312);
[L6702]  RET         call CorralChoice_GatherToken(this);

Loop:
[L6702]  CALL        call CorralChoice_GatherToken(this);
[L6488]              havoc msgsender_MSG;
[L6489]              havoc msgvalue_MSG;
[L6490]              havoc choice;
[L6491]              havoc __ret_0_owner;
[L6492]              havoc newOwner_s150;
[L6493]              havoc __ret_0_totalSupply;
[L6494]              havoc _owner_s312;
[L6495]              havoc __ret_0_balanceOf;
[L6496]              havoc _to_s867;
[L6497]              havoc _value_s867;
[L6498]              havoc __ret_0_transfer;
[L6499]              havoc _owner_s453;
[L6500]              havoc _spender_s453;
[L6501]              havoc __ret_0_allowance;
[L6502]              havoc _from_s849;
[L6503]              havoc _to_s849;
[L6504]              havoc _value_s849;
[L6505]              havoc __ret_0_transferFrom;
[L6506]              havoc _spender_s437;
[L6507]              havoc _value_s437;
[L6508]              havoc __ret_0_approve;
[L6509]              havoc _spender_s495;
[L6510]              havoc _addedValue_s495;
[L6511]              havoc __ret_0_increaseApproval;
[L6512]              havoc _spender_s555;
[L6513]              havoc _subtractedValue_s555;
[L6514]              havoc __ret_0_decreaseApproval;
[L6515]              havoc __ret_0_mintingFinished;
[L6516]              havoc __ret_0_maxMintLimit;
[L6517]              havoc _minter_s650;
[L6518]              havoc _amount_s650;
[L6519]              havoc _to_s669;
[L6520]              havoc _amount_s669;
[L6521]              havoc __ret_0_mint;
[L6522]              havoc _minter_s749;
[L6523]              havoc __ret_0_mintAllowed;
[L6524]              havoc __ret_0_finishMinting;
[L6525]              havoc __ret_0_name;
[L6526]              havoc __ret_0_symbol;
[L6527]              havoc __ret_0_decimals;
[L6528]              havoc __ret_0_transferPaused;
[L6529]              havoc tmpNow;
[L6530]              havoc gas;
[L6531]              assume gas > 4000000 && gas <= 8000000;
[L6532]              tmpNow := now;
[L6533]              havoc now;
[L6534]              assume now > tmpNow;
[L6535]              assume msgsender_MSG != null;
[L6536]              assume DType[msgsender_MSG] != SafeMath;
[L6537]              assume DType[msgsender_MSG] != Ownable;
[L6538]              assume DType[msgsender_MSG] != ERC20Basic;
[L6539]              assume DType[msgsender_MSG] != ERC20;
[L6540]              assume DType[msgsender_MSG] != BasicToken;
[L6541]              assume DType[msgsender_MSG] != StandardToken;
[L6542]              assume DType[msgsender_MSG] != MintableToken;
[L6543]              assume DType[msgsender_MSG] != GatherToken;
[L6544]              Alloc[msgsender_MSG] := true;
[L6545]  COND FALSE  !(choice == 22)
[L6551]  COND FALSE  !(choice == 21)
[L6557]  COND FALSE  !(choice == 20)
[L6563]  COND TRUE   choice == 19
[L6564]              gas := gas - 21000;
[L6565]  COND TRUE   gas >= 0
[L6566]              assume msgvalue_MSG == 0;
[L6567]  CALL        call __ret_0_balanceOf := balanceOf~address_BasicToken(this, msgsender_MSG, msgvalue_MSG, _owner_s312);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume balances_BasicToken[this][_owner_s312] >= 0 && balances_BasicToken[this][_owner_s312] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_balanceOf_BasicToken0 := true;
[L2]                 call_balanceOf_BasicToken0 := false;
[L2]                 revert := revert_hold;
[L670]               havoc __exception;
[L671]               revert := false;
[L672]   COND TRUE   __exception
[L673]               __tmp__Balance := Balance;
[L674]               __tmp__DType := DType;
[L675]               __tmp__Alloc := Alloc;
[L676]               __tmp__balance_ADDR := balance_ADDR;
[L677]               __tmp__M_Ref_int := M_Ref_int;
[L678]               __tmp__sum_balances0 := sum_balances0;
[L679]               __tmp__alloc_allowed_StandardToken_lvl0 := alloc_allowed_StandardToken_lvl0;
[L680]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L681]               __tmp__sum_allowed1 := sum_allowed1;
[L682]               __tmp__sum_mintPermissions2 := sum_mintPermissions2;
[L683]               __tmp__Length := Length;
[L684]               __tmp__now := now;
[L685]               __tmp__owner_Ownable := owner_Ownable;
[L686]               __tmp__balances_BasicToken := balances_BasicToken;
[L687]               __tmp__totalSupply__BasicToken := totalSupply__BasicToken;
[L688]               __tmp__allowed_StandardToken := allowed_StandardToken;
[L689]               __tmp__mintingFinished_MintableToken := mintingFinished_MintableToken;
[L690]               __tmp__mintPermissions_MintableToken := mintPermissions_MintableToken;
[L691]               __tmp__maxMintLimit_MintableToken := maxMintLimit_MintableToken;
[L692]               __tmp__name_GatherToken := name_GatherToken;
[L693]               __tmp__symbol_GatherToken := symbol_GatherToken;
[L694]               __tmp__decimals_GatherToken := decimals_GatherToken;
[L695]               __tmp__transferPaused_GatherToken := transferPaused_GatherToken;
[L696]   CALL        call __ret_0_ := balanceOf~address_BasicToken__fail(this, msgsender_MSG, msgvalue_MSG, _owner_s312);
[L3344]              __ret_0_ := __tmp__balances_BasicToken[this][_owner_s312];
[L696]   RET         call __ret_0_ := balanceOf~address_BasicToken__fail(this, msgsender_MSG, msgvalue_MSG, _owner_s312);
[L697]               assume revert || gas < 0;
[L6567]  RET         call __ret_0_balanceOf := balanceOf~address_BasicToken(this, msgsender_MSG, msgvalue_MSG, _owner_s312);
[L6702]  RET         call CorralChoice_GatherToken(this);

[2020-11-25 16:51:40,548 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 16:51:40,549 INFO  L82        PathProgramCache]: Analyzing trace with hash 1672725986, now seen corresponding path program 1 times
[2020-11-25 16:51:40,550 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 16:51:40,567 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 16:51:40,680 INFO  L134       CoverageAnalysis]: Checked inductivity of 882 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 882 trivial. 0 not checked.
[2020-11-25 16:51:40,680 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 16:51:40,680 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [5] imperfect sequences [] total 5
[2020-11-25 16:51:40,680 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 16:51:40,681 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 5 interpolants.
[2020-11-25 16:51:40,681 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=7, Invalid=13, Unknown=0, NotChecked=0, Total=20
[2020-11-25 16:51:40,681 INFO  L87              Difference]: Start difference. First operand 3546 states and 3817 transitions. cyclomatic complexity: 273 Second operand 5 states.
[2020-11-25 16:51:40,880 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 16:51:40,880 INFO  L93              Difference]: Finished difference Result 2395 states and 2599 transitions.
[2020-11-25 16:51:40,880 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 7 states. 
[2020-11-25 16:51:40,880 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2395 states and 2599 transitions.
[2020-11-25 16:51:40,885 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-25 16:51:40,885 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2395 states to 0 states and 0 transitions.
[2020-11-25 16:51:40,885 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 0
[2020-11-25 16:51:40,885 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 0
[2020-11-25 16:51:40,885 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 0 states and 0 transitions.
[2020-11-25 16:51:40,885 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 16:51:40,885 INFO  L728         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 16:51:40,885 INFO  L751         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 16:51:40,885 INFO  L631         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 16:51:40,885 INFO  L445         BuchiCegarLoop]: ======== Iteration 5============
[2020-11-25 16:51:40,885 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 0 states and 0 transitions.
[2020-11-25 16:51:40,885 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-25 16:51:40,886 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is true
[2020-11-25 16:51:40,889 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 04:51:40 BasicIcfg
[2020-11-25 16:51:40,889 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-25 16:51:40,889 INFO  L168              Benchmark]: Toolchain (without parser) took 6128.28 ms. Allocated memory was 1.0 GB in the beginning and 1.7 GB in the end (delta: 689.4 MB). Free memory was 929.8 MB in the beginning and 1.2 GB in the end (delta: -252.7 MB). Peak memory consumption was 436.7 MB. Max. memory is 15.3 GB.
[2020-11-25 16:51:40,890 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.17 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 16:51:40,890 INFO  L168              Benchmark]: Boogie Preprocessor took 121.73 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 919.1 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
[2020-11-25 16:51:40,890 INFO  L168              Benchmark]: UtopiaSpecLang took 74.21 ms. Allocated memory is still 1.0 GB. Free memory was 919.1 MB in the beginning and 908.4 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
[2020-11-25 16:51:40,891 INFO  L168              Benchmark]: Boogie Printer took 22.77 ms. Allocated memory is still 1.0 GB. Free memory was 908.4 MB in the beginning and 903.0 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 16:51:40,891 INFO  L168              Benchmark]: RCFGBuilder took 984.24 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 48.2 MB). Free memory was 903.0 MB in the beginning and 998.8 MB in the end (delta: -95.8 MB). Peak memory consumption was 190.9 MB. Max. memory is 15.3 GB.
[2020-11-25 16:51:40,891 INFO  L168              Benchmark]: UtopiaLTL2Aut took 39.56 ms. Allocated memory is still 1.1 GB. Free memory was 998.8 MB in the beginning and 986.4 MB in the end (delta: 12.5 MB). Peak memory consumption was 12.5 MB. Max. memory is 15.3 GB.
[2020-11-25 16:51:40,892 INFO  L168              Benchmark]: BÃ¼chi Program Product took 1665.67 ms. Allocated memory was 1.1 GB in the beginning and 1.3 GB in the end (delta: 176.2 MB). Free memory was 986.4 MB in the beginning and 921.9 MB in the end (delta: 64.4 MB). Peak memory consumption was 477.3 MB. Max. memory is 15.3 GB.
[2020-11-25 16:51:40,892 INFO  L168              Benchmark]: BlockEncodingV2 took 158.70 ms. Allocated memory is still 1.3 GB. Free memory was 921.9 MB in the beginning and 835.5 MB in the end (delta: 86.4 MB). Peak memory consumption was 86.4 MB. Max. memory is 15.3 GB.
[2020-11-25 16:51:40,892 INFO  L168              Benchmark]: BuchiAutomizer took 3058.02 ms. Allocated memory was 1.3 GB in the beginning and 1.7 GB in the end (delta: 465.0 MB). Free memory was 835.5 MB in the beginning and 1.2 GB in the end (delta: -347.1 MB). Peak memory consumption was 118.0 MB. Max. memory is 15.3 GB.
[2020-11-25 16:51:40,894 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    5904 locations, 10484 edges
  - StatisticsResult: Encoded RCFG
    5838 locations, 10315 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.17 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 121.73 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 919.1 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 74.21 ms. Allocated memory is still 1.0 GB. Free memory was 919.1 MB in the beginning and 908.4 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 22.77 ms. Allocated memory is still 1.0 GB. Free memory was 908.4 MB in the beginning and 903.0 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * RCFGBuilder took 984.24 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 48.2 MB). Free memory was 903.0 MB in the beginning and 998.8 MB in the end (delta: -95.8 MB). Peak memory consumption was 190.9 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 39.56 ms. Allocated memory is still 1.1 GB. Free memory was 998.8 MB in the beginning and 986.4 MB in the end (delta: 12.5 MB). Peak memory consumption was 12.5 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 1665.67 ms. Allocated memory was 1.1 GB in the beginning and 1.3 GB in the end (delta: 176.2 MB). Free memory was 986.4 MB in the beginning and 921.9 MB in the end (delta: 64.4 MB). Peak memory consumption was 477.3 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 158.70 ms. Allocated memory is still 1.3 GB. Free memory was 921.9 MB in the beginning and 835.5 MB in the end (delta: 86.4 MB). Peak memory consumption was 86.4 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 3058.02 ms. Allocated memory was 1.3 GB in the beginning and 1.7 GB in the end (delta: 465.0 MB). Free memory was 835.5 MB in the beginning and 1.2 GB in the end (delta: -347.1 MB). Peak memory consumption was 118.0 MB. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    2395 locations, 3202 edges
  - StatisticsResult: BuchiProgram size
    5904 locations, 10484 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 4 terminating modules (4 trivial, 0 deterministic, 0 nondeterministic). 4 modules have a trivial ranking function, the largest among these consists of 5 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 3.0s and 5 iterations.  TraceHistogramMax:12. Analysis of lassos took 0.8s. Construction of modules took 1.3s. BÃ¼chi inclusion checks took 0.4s. Highest rank in rank-based complementation 0. Minimization of det autom 4. Minimization of nondet autom 0. Automata minimization 0.1s AutomataMinimizationTime, 3 MinimizatonAttempts, 1100 StatesRemovedByMinimization, 2 NontrivialMinimizations. Non-live state removal took 0.1s Buchi closure took 0.0s. Biggest automaton had 3912 states and ocurred in iteration 1.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 16446 SDtfs, 14463 SDslu, 19227 SDs, 0 SdLazy, 4119 SolverSat, 2851 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 1.3s Time	LassoAnalysisResults: nont0 unkn0 SFLI0 SFLT0 conc0 concLT0 SILN0 SILU4 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - AllSpecificationsHoldResult: All specifications hold
    Buchi Automizer proved that the LTL property ! ( ( []( (call_balanceOf_(success_balanceOf_BasicToken0)asicToken0) ==> ( <>(success_balanceOf_BasicToken0) ) ) )) holds
RESULT: Ultimate proved your program to be correct!
Received shutdown request...
