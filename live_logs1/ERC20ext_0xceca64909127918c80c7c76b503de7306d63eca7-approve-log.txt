This is Ultimate 0.1.24-f1553f5-m
[2020-11-25 15:06:12,246 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-25 15:06:12,247 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-25 15:06:12,255 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-25 15:06:12,255 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-25 15:06:12,255 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-25 15:06:12,256 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-25 15:06:12,257 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-25 15:06:12,258 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-25 15:06:12,259 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-25 15:06:12,259 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-25 15:06:12,259 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-25 15:06:12,260 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-25 15:06:12,260 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-25 15:06:12,261 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-25 15:06:12,261 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-25 15:06:12,262 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-25 15:06:12,263 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-25 15:06:12,264 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-25 15:06:12,265 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-25 15:06:12,266 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-25 15:06:12,267 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-25 15:06:12,268 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-25 15:06:12,268 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-25 15:06:12,268 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-25 15:06:12,269 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-25 15:06:12,269 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-25 15:06:12,270 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-25 15:06:12,270 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-25 15:06:12,270 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-25 15:06:12,271 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-25 15:06:12,271 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-25 15:06:12,272 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-25 15:06:12,272 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-25 15:06:12,273 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-25 15:06:12,273 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-25 15:06:12,273 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-25 15:06:12,273 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-25 15:06:12,274 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-25 15:06:12,274 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-25 15:06:12,275 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-25 15:06:12,275 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-25 15:06:12,282 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-25 15:06:12,283 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-25 15:06:12,283 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-25 15:06:12,284 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-25 15:06:12,284 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-25 15:06:12,284 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-25 15:06:12,284 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-25 15:06:12,284 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-25 15:06:12,284 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-25 15:06:12,284 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-25 15:06:12,284 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-25 15:06:12,284 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-25 15:06:12,285 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-25 15:06:12,285 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-25 15:06:12,285 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-25 15:06:12,285 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-25 15:06:12,285 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-25 15:06:12,285 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-25 15:06:12,285 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-25 15:06:12,285 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-25 15:06:12,285 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-25 15:06:12,285 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-25 15:06:12,285 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-25 15:06:12,286 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-25 15:06:12,286 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-25 15:06:12,286 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-25 15:06:12,310 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-25 15:06:12,323 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-25 15:06:12,325 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-25 15:06:12,326 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-25 15:06:12,326 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-25 15:06:12,327 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/ERC20ext_0xceca64909127918c80c7c76b503de7306d63eca7_approve.bpl
[2020-11-25 15:06:12,327 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/ERC20ext_0xceca64909127918c80c7c76b503de7306d63eca7_approve.bpl'
[2020-11-25 15:06:12,411 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-25 15:06:12,412 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-25 15:06:12,413 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-25 15:06:12,413 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-25 15:06:12,413 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-25 15:06:12,429 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "ERC20ext_0xceca64909127918c80c7c76b503de7306d63eca7_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 03:06:12" (1/1) ...
[2020-11-25 15:06:12,431 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "ERC20ext_0xceca64909127918c80c7c76b503de7306d63eca7_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 03:06:12" (1/1) ...
[2020-11-25 15:06:12,461 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "ERC20ext_0xceca64909127918c80c7c76b503de7306d63eca7_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 03:06:12" (1/1) ...
[2020-11-25 15:06:12,462 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "ERC20ext_0xceca64909127918c80c7c76b503de7306d63eca7_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 03:06:12" (1/1) ...
[2020-11-25 15:06:12,482 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "ERC20ext_0xceca64909127918c80c7c76b503de7306d63eca7_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 03:06:12" (1/1) ...
[2020-11-25 15:06:12,492 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "ERC20ext_0xceca64909127918c80c7c76b503de7306d63eca7_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 03:06:12" (1/1) ...
[2020-11-25 15:06:12,501 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "ERC20ext_0xceca64909127918c80c7c76b503de7306d63eca7_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 03:06:12" (1/1) ...
[2020-11-25 15:06:12,511 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-25 15:06:12,511 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-25 15:06:12,512 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-25 15:06:12,514 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-25 15:06:12,517 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "ERC20ext_0xceca64909127918c80c7c76b503de7306d63eca7_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 03:06:12" (1/1) ...
[2020-11-25 15:06:12,538 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(TokenERC20.approve(spender, value), p1 != msg.sender || p2 != spender) ==> <>(finished(TokenERC20.approve(spender, value), return == true && allowance_TokenERC20[this][msg.sender][spender] == value &&  totalSupply_TokenERC20[this] == old(totalSupply_TokenERC20[this]) && balanceOf_TokenERC20[this] == old(balanceOf_TokenERC20[this]) && allowance_TokenERC20[this][p1][p2] == old(allowance_TokenERC20[this][p1][p2]) && frozenAccount_ERC20ext[this] == old(frozenAccount_ERC20ext[this]) && lockedAccount_ERC20ext[this] == old(lockedAccount_ERC20ext[this]) && lockedAmount_ERC20ext[this] == old(lockedAmount_ERC20ext[this]) && name_TokenERC20[this] == old(name_TokenERC20[this]) && symbol_TokenERC20[this] == old(symbol_TokenERC20[this]) && decimals_TokenERC20[this] == old(decimals_TokenERC20[this]) && owner_owned[this] == old(owner_owned[this]))))
[2020-11-25 15:06:12,546 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(TokenERC20.approve(spender, value), p1 != msg.sender || p2 != spender) ==> <>(finished(TokenERC20.approve(spender, value), return == true && allowance_TokenERC20[this][msg.sender][spender] == value &&  totalSupply_TokenERC20[this] == old(totalSupply_TokenERC20[this]) && balanceOf_TokenERC20[this] == old(balanceOf_TokenERC20[this]) && allowance_TokenERC20[this][p1][p2] == old(allowance_TokenERC20[this][p1][p2]) && frozenAccount_ERC20ext[this] == old(frozenAccount_ERC20ext[this]) && lockedAccount_ERC20ext[this] == old(lockedAccount_ERC20ext[this]) && lockedAmount_ERC20ext[this] == old(lockedAmount_ERC20ext[this]) && name_TokenERC20[this] == old(name_TokenERC20[this]) && symbol_TokenERC20[this] == old(symbol_TokenERC20[this]) && decimals_TokenERC20[this] == old(decimals_TokenERC20[this]) && owner_owned[this] == old(owner_owned[this]))))
[2020-11-25 15:06:12,553 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(TokenERC20.approve(spender, value), p1 != msg.sender || p2 != spender) ==> <>(finished(TokenERC20.approve(spender, value), return == true && allowance_TokenERC20[this][msg.sender][spender] == value &&  totalSupply_TokenERC20[this] == old(totalSupply_TokenERC20[this]) && balanceOf_TokenERC20[this] == old(balanceOf_TokenERC20[this]) && allowance_TokenERC20[this][p1][p2] == old(allowance_TokenERC20[this][p1][p2]) && frozenAccount_ERC20ext[this] == old(frozenAccount_ERC20ext[this]) && lockedAccount_ERC20ext[this] == old(lockedAccount_ERC20ext[this]) && lockedAmount_ERC20ext[this] == old(lockedAmount_ERC20ext[this]) && name_TokenERC20[this] == old(name_TokenERC20[this]) && symbol_TokenERC20[this] == old(symbol_TokenERC20[this]) && decimals_TokenERC20[this] == old(decimals_TokenERC20[this]) && owner_owned[this] == old(owner_owned[this]))))
[2020-11-25 15:06:12,561 INFO  L636   opiaSpecLangObserver]: Parsed ( p1!=msg.sender || p2!=_spender_s441 ) to BinaryExpression[LOGICOR,BinaryExpression[COMPNEQ,IdentifierExpression[p1,GLOBAL],IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,approve~address~uint256_TokenERC20>]],BinaryExpression[COMPNEQ,IdentifierExpression[p2,GLOBAL],IdentifierExpression[_spender_s441,<IMPLEMENTATION_INPARAM,approve~address~uint256_TokenERC20>]]]
[2020-11-25 15:06:12,566 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( ( ( ( success_s441==true && allowance_TokenERC20[this][msg.sender][_spender_s441]==_value_s441 ) && totalSupply_TokenERC20[this]==( old(totalSupply_TokenERC20[this]) ) ) && balanceOf_TokenERC20[this]==( old(balanceOf_TokenERC20[this]) ) ) && allowance_TokenERC20[this][p1][p2]==( old(allowance_TokenERC20[this][p1][p2]) ) ) && frozenAccount_ERC20ext[this]==( old(frozenAccount_ERC20ext[this]) ) ) && lockedAccount_ERC20ext[this]==( old(lockedAccount_ERC20ext[this]) ) ) && lockedAmount_ERC20ext[this]==( old(lockedAmount_ERC20ext[this]) ) ) && name_TokenERC20[this]==( old(name_TokenERC20[this]) ) ) && symbol_TokenERC20[this]==( old(symbol_TokenERC20[this]) ) ) && decimals_TokenERC20[this]==( old(decimals_TokenERC20[this]) ) ) && owner_owned[this]==( old(owner_owned[this]) ) ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[success_s441,<IMPLEMENTATION_OUTPARAM,approve~address~uint256_TokenERC20>],BooleanLiteral[true]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowance_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_TokenERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,approve~address~uint256_TokenERC20>]]],[IdentifierExpression[_spender_s441,<IMPLEMENTATION_INPARAM,approve~address~uint256_TokenERC20>]]],IdentifierExpression[_value_s441,<IMPLEMENTATION_INPARAM,approve~address~uint256_TokenERC20>]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[totalSupply_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[totalSupply_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_TokenERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[balanceOf_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[balanceOf_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_TokenERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowance_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_TokenERC20>]]],[IdentifierExpression[p1,GLOBAL]]],[IdentifierExpression[p2,GLOBAL]]],UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowance_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_TokenERC20>]]],[IdentifierExpression[p1,GLOBAL]]],[IdentifierExpression[p2,GLOBAL]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[frozenAccount_ERC20ext,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[frozenAccount_ERC20ext,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_TokenERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[lockedAccount_ERC20ext,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[lockedAccount_ERC20ext,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_TokenERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[lockedAmount_ERC20ext,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[lockedAmount_ERC20ext,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_TokenERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[name_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[name_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_TokenERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[symbol_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[symbol_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_TokenERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[decimals_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[decimals_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_TokenERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[owner_owned,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[owner_owned,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_TokenERC20>]]]]]]
[2020-11-25 15:06:12,572 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(TokenERC20.approve(spender, value), p1 != msg.sender || p2 != spender) ==> <>(finished(TokenERC20.approve(spender, value), return == true && allowance_TokenERC20[this][msg.sender][spender] == value &&  totalSupply_TokenERC20[this] == old(totalSupply_TokenERC20[this]) && balanceOf_TokenERC20[this] == old(balanceOf_TokenERC20[this]) && allowance_TokenERC20[this][p1][p2] == old(allowance_TokenERC20[this][p1][p2]) && frozenAccount_ERC20ext[this] == old(frozenAccount_ERC20ext[this]) && lockedAccount_ERC20ext[this] == old(lockedAccount_ERC20ext[this]) && lockedAmount_ERC20ext[this] == old(lockedAmount_ERC20ext[this]) && name_TokenERC20[this] == old(name_TokenERC20[this]) && symbol_TokenERC20[this] == old(symbol_TokenERC20[this]) && decimals_TokenERC20[this] == old(decimals_TokenERC20[this]) && owner_owned[this] == old(owner_owned[this]))))
[2020-11-25 15:06:12,572 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_approve_TokenERC200) ==> ( <>AP(success_approve_TokenERC200) ) ) )
Executed UtopiaSpecLang
[2020-11-25 15:06:12,582 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 03:06:12 PropertyContainer
[2020-11-25 15:06:12,582 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-25 15:06:12,582 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-25 15:06:12,582 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-25 15:06:12,582 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-25 15:06:12,583 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "ERC20ext_0xceca64909127918c80c7c76b503de7306d63eca7_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 03:06:12" (1/2) ...
[2020-11-25 15:06:12,583 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-25 15:06:12,584 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-25 15:06:12,598 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 03:06:12" (2/2) ...
[2020-11-25 15:06:12,599 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-25 15:06:12,599 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-25 15:06:12,599 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-25 15:06:12,600 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-25 15:06:12,600 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "ERC20ext_0xceca64909127918c80c7c76b503de7306d63eca7_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 03:06:12" (1/2) ...
[2020-11-25 15:06:12,651 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-25 15:06:12,651 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 15:06:12,651 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath
[2020-11-25 15:06:12,651 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath
[2020-11-25 15:06:12,652 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__success
[2020-11-25 15:06:12,652 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__success
[2020-11-25 15:06:12,652 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__success
[2020-11-25 15:06:12,652 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256_SafeMath__success
[2020-11-25 15:06:12,652 INFO  L130     BoogieDeclarations]: Found specification of procedure mod~uint256~uint256_SafeMath__success
[2020-11-25 15:06:12,652 INFO  L130     BoogieDeclarations]: Found specification of procedure owned_owned_NoBaseCtor__success
[2020-11-25 15:06:12,652 INFO  L130     BoogieDeclarations]: Found specification of procedure owned_owned
[2020-11-25 15:06:12,652 INFO  L138     BoogieDeclarations]: Found implementation of procedure owned_owned
[2020-11-25 15:06:12,652 INFO  L130     BoogieDeclarations]: Found specification of procedure transferOwnership~address_owned
[2020-11-25 15:06:12,653 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferOwnership~address_owned
[2020-11-25 15:06:12,653 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_owned
[2020-11-25 15:06:12,653 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_owned
[2020-11-25 15:06:12,653 INFO  L130     BoogieDeclarations]: Found specification of procedure tokenRecipient_tokenRecipient_NoBaseCtor__success
[2020-11-25 15:06:12,653 INFO  L130     BoogieDeclarations]: Found specification of procedure tokenRecipient_tokenRecipient
[2020-11-25 15:06:12,653 INFO  L138     BoogieDeclarations]: Found implementation of procedure tokenRecipient_tokenRecipient
[2020-11-25 15:06:12,653 INFO  L130     BoogieDeclarations]: Found specification of procedure receiveApproval~address~uint256~address~bytes_tokenRecipient
[2020-11-25 15:06:12,653 INFO  L130     BoogieDeclarations]: Found specification of procedure TokenERC20_TokenERC20_NoBaseCtor__success
[2020-11-25 15:06:12,654 INFO  L130     BoogieDeclarations]: Found specification of procedure TokenERC20_TokenERC20
[2020-11-25 15:06:12,654 INFO  L138     BoogieDeclarations]: Found implementation of procedure TokenERC20_TokenERC20
[2020-11-25 15:06:12,654 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_TokenERC20__success
[2020-11-25 15:06:12,654 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_TokenERC20
[2020-11-25 15:06:12,654 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_TokenERC20
[2020-11-25 15:06:12,654 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_TokenERC20
[2020-11-25 15:06:12,654 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_TokenERC20
[2020-11-25 15:06:12,654 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_TokenERC20
[2020-11-25 15:06:12,654 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_TokenERC20
[2020-11-25 15:06:12,655 INFO  L130     BoogieDeclarations]: Found specification of procedure approveAndCall~address~uint256~bytes_TokenERC20
[2020-11-25 15:06:12,655 INFO  L138     BoogieDeclarations]: Found implementation of procedure approveAndCall~address~uint256~bytes_TokenERC20
[2020-11-25 15:06:12,655 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_TokenERC20
[2020-11-25 15:06:12,655 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_TokenERC20
[2020-11-25 15:06:12,655 INFO  L130     BoogieDeclarations]: Found specification of procedure burnFrom~address~uint256_TokenERC20
[2020-11-25 15:06:12,655 INFO  L138     BoogieDeclarations]: Found implementation of procedure burnFrom~address~uint256_TokenERC20
[2020-11-25 15:06:12,655 INFO  L130     BoogieDeclarations]: Found specification of procedure name_TokenERC20
[2020-11-25 15:06:12,655 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_TokenERC20
[2020-11-25 15:06:12,655 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_TokenERC20
[2020-11-25 15:06:12,655 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_TokenERC20
[2020-11-25 15:06:12,655 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_TokenERC20
[2020-11-25 15:06:12,656 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_TokenERC20
[2020-11-25 15:06:12,656 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_TokenERC20
[2020-11-25 15:06:12,656 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_TokenERC20
[2020-11-25 15:06:12,656 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_TokenERC20
[2020-11-25 15:06:12,656 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_TokenERC20
[2020-11-25 15:06:12,656 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_TokenERC20
[2020-11-25 15:06:12,656 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_TokenERC20
[2020-11-25 15:06:12,656 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20ext_ERC20ext_NoBaseCtor__success
[2020-11-25 15:06:12,656 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20ext_ERC20ext
[2020-11-25 15:06:12,656 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20ext_ERC20ext
[2020-11-25 15:06:12,656 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_ERC20ext__success
[2020-11-25 15:06:12,657 INFO  L130     BoogieDeclarations]: Found specification of procedure mintToken~address~uint256_ERC20ext
[2020-11-25 15:06:12,657 INFO  L138     BoogieDeclarations]: Found implementation of procedure mintToken~address~uint256_ERC20ext
[2020-11-25 15:06:12,657 INFO  L130     BoogieDeclarations]: Found specification of procedure freezeAccount~address~bool_ERC20ext
[2020-11-25 15:06:12,657 INFO  L138     BoogieDeclarations]: Found implementation of procedure freezeAccount~address~bool_ERC20ext
[2020-11-25 15:06:12,657 INFO  L130     BoogieDeclarations]: Found specification of procedure lock~address~uint256~uint256_ERC20ext
[2020-11-25 15:06:12,657 INFO  L138     BoogieDeclarations]: Found implementation of procedure lock~address~uint256~uint256_ERC20ext
[2020-11-25 15:06:12,657 INFO  L130     BoogieDeclarations]: Found specification of procedure frozenAccount~address_ERC20ext
[2020-11-25 15:06:12,657 INFO  L138     BoogieDeclarations]: Found implementation of procedure frozenAccount~address_ERC20ext
[2020-11-25 15:06:12,657 INFO  L130     BoogieDeclarations]: Found specification of procedure lockedAccount~address_ERC20ext
[2020-11-25 15:06:12,657 INFO  L138     BoogieDeclarations]: Found implementation of procedure lockedAccount~address_ERC20ext
[2020-11-25 15:06:12,658 INFO  L130     BoogieDeclarations]: Found specification of procedure lockedAmount~address_ERC20ext
[2020-11-25 15:06:12,658 INFO  L138     BoogieDeclarations]: Found implementation of procedure lockedAmount~address_ERC20ext
[2020-11-25 15:06:12,658 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-25 15:06:12,658 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-25 15:06:12,658 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-25 15:06:12,658 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__success
[2020-11-25 15:06:12,658 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_SafeMath
[2020-11-25 15:06:12,658 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_SafeMath
[2020-11-25 15:06:12,658 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_owned
[2020-11-25 15:06:12,658 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_owned
[2020-11-25 15:06:12,658 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_tokenRecipient
[2020-11-25 15:06:12,659 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_tokenRecipient
[2020-11-25 15:06:12,659 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_TokenERC20
[2020-11-25 15:06:12,659 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_TokenERC20
[2020-11-25 15:06:12,659 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20ext
[2020-11-25 15:06:12,659 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-25 15:06:12,659 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-25 15:06:12,659 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 15:06:12,659 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__success
[2020-11-25 15:06:12,659 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__fail
[2020-11-25 15:06:12,659 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__fail
[2020-11-25 15:06:12,660 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-25 15:06:12,660 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-25 15:06:12,660 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256_SafeMath__fail
[2020-11-25 15:06:12,660 INFO  L130     BoogieDeclarations]: Found specification of procedure mod~uint256~uint256_SafeMath__fail
[2020-11-25 15:06:12,660 INFO  L130     BoogieDeclarations]: Found specification of procedure owned_owned_NoBaseCtor__fail
[2020-11-25 15:06:12,660 INFO  L130     BoogieDeclarations]: Found specification of procedure owned_owned__success
[2020-11-25 15:06:12,660 INFO  L130     BoogieDeclarations]: Found specification of procedure owned_owned__fail
[2020-11-25 15:06:12,660 INFO  L130     BoogieDeclarations]: Found specification of procedure transferOwnership~address_owned__success
[2020-11-25 15:06:12,660 INFO  L130     BoogieDeclarations]: Found specification of procedure transferOwnership~address_owned__fail
[2020-11-25 15:06:12,660 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_owned__success
[2020-11-25 15:06:12,661 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_owned__fail
[2020-11-25 15:06:12,661 INFO  L130     BoogieDeclarations]: Found specification of procedure tokenRecipient_tokenRecipient_NoBaseCtor__fail
[2020-11-25 15:06:12,661 INFO  L130     BoogieDeclarations]: Found specification of procedure tokenRecipient_tokenRecipient__success
[2020-11-25 15:06:12,661 INFO  L130     BoogieDeclarations]: Found specification of procedure tokenRecipient_tokenRecipient__fail
[2020-11-25 15:06:12,661 INFO  L130     BoogieDeclarations]: Found specification of procedure TokenERC20_TokenERC20_NoBaseCtor__fail
[2020-11-25 15:06:12,661 INFO  L130     BoogieDeclarations]: Found specification of procedure TokenERC20_TokenERC20__success
[2020-11-25 15:06:12,661 INFO  L130     BoogieDeclarations]: Found specification of procedure TokenERC20_TokenERC20__fail
[2020-11-25 15:06:12,661 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_TokenERC20__fail
[2020-11-25 15:06:12,661 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_TokenERC20__success
[2020-11-25 15:06:12,661 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_TokenERC20__fail
[2020-11-25 15:06:12,661 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_TokenERC20__success
[2020-11-25 15:06:12,662 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_TokenERC20__fail
[2020-11-25 15:06:12,662 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_TokenERC20__success
[2020-11-25 15:06:12,662 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_TokenERC20__fail
[2020-11-25 15:06:12,662 INFO  L130     BoogieDeclarations]: Found specification of procedure approveAndCall~address~uint256~bytes_TokenERC20__success
[2020-11-25 15:06:12,662 INFO  L130     BoogieDeclarations]: Found specification of procedure approveAndCall~address~uint256~bytes_TokenERC20__fail
[2020-11-25 15:06:12,662 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_TokenERC20__success
[2020-11-25 15:06:12,663 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_TokenERC20__fail
[2020-11-25 15:06:12,663 INFO  L130     BoogieDeclarations]: Found specification of procedure burnFrom~address~uint256_TokenERC20__success
[2020-11-25 15:06:12,663 INFO  L130     BoogieDeclarations]: Found specification of procedure burnFrom~address~uint256_TokenERC20__fail
[2020-11-25 15:06:12,663 INFO  L130     BoogieDeclarations]: Found specification of procedure name_TokenERC20__success
[2020-11-25 15:06:12,663 INFO  L130     BoogieDeclarations]: Found specification of procedure name_TokenERC20__fail
[2020-11-25 15:06:12,663 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_TokenERC20__success
[2020-11-25 15:06:12,664 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_TokenERC20__fail
[2020-11-25 15:06:12,664 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_TokenERC20__success
[2020-11-25 15:06:12,664 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_TokenERC20__fail
[2020-11-25 15:06:12,664 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_TokenERC20__success
[2020-11-25 15:06:12,664 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_TokenERC20__fail
[2020-11-25 15:06:12,664 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_TokenERC20__success
[2020-11-25 15:06:12,665 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_TokenERC20__fail
[2020-11-25 15:06:12,665 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_TokenERC20__success
[2020-11-25 15:06:12,665 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_TokenERC20__fail
[2020-11-25 15:06:12,665 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20ext_ERC20ext_NoBaseCtor__fail
[2020-11-25 15:06:12,666 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20ext_ERC20ext__success
[2020-11-25 15:06:12,666 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20ext_ERC20ext__fail
[2020-11-25 15:06:12,666 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_ERC20ext__fail
[2020-11-25 15:06:12,666 INFO  L130     BoogieDeclarations]: Found specification of procedure mintToken~address~uint256_ERC20ext__success
[2020-11-25 15:06:12,666 INFO  L130     BoogieDeclarations]: Found specification of procedure mintToken~address~uint256_ERC20ext__fail
[2020-11-25 15:06:12,667 INFO  L130     BoogieDeclarations]: Found specification of procedure freezeAccount~address~bool_ERC20ext__success
[2020-11-25 15:06:12,667 INFO  L130     BoogieDeclarations]: Found specification of procedure freezeAccount~address~bool_ERC20ext__fail
[2020-11-25 15:06:12,667 INFO  L130     BoogieDeclarations]: Found specification of procedure lock~address~uint256~uint256_ERC20ext__success
[2020-11-25 15:06:12,667 INFO  L130     BoogieDeclarations]: Found specification of procedure lock~address~uint256~uint256_ERC20ext__fail
[2020-11-25 15:06:12,668 INFO  L130     BoogieDeclarations]: Found specification of procedure frozenAccount~address_ERC20ext__success
[2020-11-25 15:06:12,668 INFO  L130     BoogieDeclarations]: Found specification of procedure frozenAccount~address_ERC20ext__fail
[2020-11-25 15:06:12,668 INFO  L130     BoogieDeclarations]: Found specification of procedure lockedAccount~address_ERC20ext__success
[2020-11-25 15:06:12,668 INFO  L130     BoogieDeclarations]: Found specification of procedure lockedAccount~address_ERC20ext__fail
[2020-11-25 15:06:12,668 INFO  L130     BoogieDeclarations]: Found specification of procedure lockedAmount~address_ERC20ext__success
[2020-11-25 15:06:12,669 INFO  L130     BoogieDeclarations]: Found specification of procedure lockedAmount~address_ERC20ext__fail
[2020-11-25 15:06:12,669 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-25 15:06:12,669 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-25 15:06:12,669 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-25 15:06:12,670 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__fail
[2020-11-25 15:06:12,670 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-25 15:06:12,670 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-25 15:06:12,670 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 15:06:12,671 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 15:06:12,671 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__fail
[2020-11-25 15:06:12,671 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__success
[2020-11-25 15:06:12,671 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__fail
[2020-11-25 15:06:12,672 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__success
[2020-11-25 15:06:12,672 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-25 15:06:12,672 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__success
[2020-11-25 15:06:12,672 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-25 15:06:12,672 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__success
[2020-11-25 15:06:12,673 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256_SafeMath__fail
[2020-11-25 15:06:12,673 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256_SafeMath__success
[2020-11-25 15:06:12,673 INFO  L138     BoogieDeclarations]: Found implementation of procedure mod~uint256~uint256_SafeMath__fail
[2020-11-25 15:06:12,673 INFO  L138     BoogieDeclarations]: Found implementation of procedure mod~uint256~uint256_SafeMath__success
[2020-11-25 15:06:12,674 INFO  L138     BoogieDeclarations]: Found implementation of procedure owned_owned_NoBaseCtor__fail
[2020-11-25 15:06:12,674 INFO  L138     BoogieDeclarations]: Found implementation of procedure owned_owned_NoBaseCtor__success
[2020-11-25 15:06:12,674 INFO  L138     BoogieDeclarations]: Found implementation of procedure owned_owned__fail
[2020-11-25 15:06:12,674 INFO  L138     BoogieDeclarations]: Found implementation of procedure owned_owned__success
[2020-11-25 15:06:12,674 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferOwnership~address_owned__fail
[2020-11-25 15:06:12,674 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferOwnership~address_owned__success
[2020-11-25 15:06:12,675 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_owned__fail
[2020-11-25 15:06:12,675 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_owned__success
[2020-11-25 15:06:12,675 INFO  L138     BoogieDeclarations]: Found implementation of procedure tokenRecipient_tokenRecipient_NoBaseCtor__fail
[2020-11-25 15:06:12,675 INFO  L138     BoogieDeclarations]: Found implementation of procedure tokenRecipient_tokenRecipient_NoBaseCtor__success
[2020-11-25 15:06:12,675 INFO  L138     BoogieDeclarations]: Found implementation of procedure tokenRecipient_tokenRecipient__fail
[2020-11-25 15:06:12,676 INFO  L138     BoogieDeclarations]: Found implementation of procedure tokenRecipient_tokenRecipient__success
[2020-11-25 15:06:12,676 INFO  L138     BoogieDeclarations]: Found implementation of procedure TokenERC20_TokenERC20_NoBaseCtor__fail
[2020-11-25 15:06:12,676 INFO  L138     BoogieDeclarations]: Found implementation of procedure TokenERC20_TokenERC20_NoBaseCtor__success
[2020-11-25 15:06:12,676 INFO  L138     BoogieDeclarations]: Found implementation of procedure TokenERC20_TokenERC20__fail
[2020-11-25 15:06:12,676 INFO  L138     BoogieDeclarations]: Found implementation of procedure TokenERC20_TokenERC20__success
[2020-11-25 15:06:12,676 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_TokenERC20__fail
[2020-11-25 15:06:12,676 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_TokenERC20__success
[2020-11-25 15:06:12,676 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_TokenERC20__fail
[2020-11-25 15:06:12,676 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_TokenERC20__success
[2020-11-25 15:06:12,676 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_TokenERC20__fail
[2020-11-25 15:06:12,676 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_TokenERC20__success
[2020-11-25 15:06:12,676 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_TokenERC20__fail
[2020-11-25 15:06:12,677 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_TokenERC20__success
[2020-11-25 15:06:12,677 INFO  L138     BoogieDeclarations]: Found implementation of procedure approveAndCall~address~uint256~bytes_TokenERC20__fail
[2020-11-25 15:06:12,677 INFO  L138     BoogieDeclarations]: Found implementation of procedure approveAndCall~address~uint256~bytes_TokenERC20__success
[2020-11-25 15:06:12,677 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_TokenERC20__fail
[2020-11-25 15:06:12,677 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_TokenERC20__success
[2020-11-25 15:06:12,677 INFO  L138     BoogieDeclarations]: Found implementation of procedure burnFrom~address~uint256_TokenERC20__fail
[2020-11-25 15:06:12,677 INFO  L138     BoogieDeclarations]: Found implementation of procedure burnFrom~address~uint256_TokenERC20__success
[2020-11-25 15:06:12,677 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_TokenERC20__fail
[2020-11-25 15:06:12,677 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_TokenERC20__success
[2020-11-25 15:06:12,677 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_TokenERC20__fail
[2020-11-25 15:06:12,677 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_TokenERC20__success
[2020-11-25 15:06:12,677 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_TokenERC20__fail
[2020-11-25 15:06:12,677 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_TokenERC20__success
[2020-11-25 15:06:12,677 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_TokenERC20__fail
[2020-11-25 15:06:12,677 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_TokenERC20__success
[2020-11-25 15:06:12,677 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_TokenERC20__fail
[2020-11-25 15:06:12,677 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_TokenERC20__success
[2020-11-25 15:06:12,678 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_TokenERC20__fail
[2020-11-25 15:06:12,678 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_TokenERC20__success
[2020-11-25 15:06:12,678 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20ext_ERC20ext_NoBaseCtor__fail
[2020-11-25 15:06:12,678 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20ext_ERC20ext_NoBaseCtor__success
[2020-11-25 15:06:12,678 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20ext_ERC20ext__fail
[2020-11-25 15:06:12,678 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20ext_ERC20ext__success
[2020-11-25 15:06:12,678 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_ERC20ext__fail
[2020-11-25 15:06:12,678 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_ERC20ext__success
[2020-11-25 15:06:12,678 INFO  L138     BoogieDeclarations]: Found implementation of procedure mintToken~address~uint256_ERC20ext__fail
[2020-11-25 15:06:12,678 INFO  L138     BoogieDeclarations]: Found implementation of procedure mintToken~address~uint256_ERC20ext__success
[2020-11-25 15:06:12,678 INFO  L138     BoogieDeclarations]: Found implementation of procedure freezeAccount~address~bool_ERC20ext__fail
[2020-11-25 15:06:12,678 INFO  L138     BoogieDeclarations]: Found implementation of procedure freezeAccount~address~bool_ERC20ext__success
[2020-11-25 15:06:12,678 INFO  L138     BoogieDeclarations]: Found implementation of procedure lock~address~uint256~uint256_ERC20ext__fail
[2020-11-25 15:06:12,678 INFO  L138     BoogieDeclarations]: Found implementation of procedure lock~address~uint256~uint256_ERC20ext__success
[2020-11-25 15:06:12,678 INFO  L138     BoogieDeclarations]: Found implementation of procedure frozenAccount~address_ERC20ext__fail
[2020-11-25 15:06:12,678 INFO  L138     BoogieDeclarations]: Found implementation of procedure frozenAccount~address_ERC20ext__success
[2020-11-25 15:06:12,679 INFO  L138     BoogieDeclarations]: Found implementation of procedure lockedAccount~address_ERC20ext__fail
[2020-11-25 15:06:12,679 INFO  L138     BoogieDeclarations]: Found implementation of procedure lockedAccount~address_ERC20ext__success
[2020-11-25 15:06:12,679 INFO  L138     BoogieDeclarations]: Found implementation of procedure lockedAmount~address_ERC20ext__fail
[2020-11-25 15:06:12,679 INFO  L138     BoogieDeclarations]: Found implementation of procedure lockedAmount~address_ERC20ext__success
[2020-11-25 15:06:12,679 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-25 15:06:12,679 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-25 15:06:12,679 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-25 15:06:12,679 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-25 15:06:12,679 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-25 15:06:12,679 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-25 15:06:12,679 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__fail
[2020-11-25 15:06:12,679 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__success
[2020-11-25 15:06:12,679 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_SafeMath
[2020-11-25 15:06:12,679 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_SafeMath
[2020-11-25 15:06:12,679 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_owned
[2020-11-25 15:06:12,680 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_owned
[2020-11-25 15:06:12,680 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_tokenRecipient
[2020-11-25 15:06:12,680 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_tokenRecipient
[2020-11-25 15:06:12,680 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_TokenERC20
[2020-11-25 15:06:12,680 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_TokenERC20
[2020-11-25 15:06:12,680 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20ext
[2020-11-25 15:06:12,680 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-25 15:06:12,680 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-25 15:06:12,680 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-25 15:06:13,124 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 15:06:13,249 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 15:06:13,249 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 15:06:13,249 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 15:06:13,402 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-25 15:06:13,402 INFO  L286             CfgBuilder]: Removed 5 assue(true) statements.
[2020-11-25 15:06:13,404 INFO  L202        PluginConnector]: Adding new model ERC20ext_0xceca64909127918c80c7c76b503de7306d63eca7_approve.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 03:06:13 BoogieIcfgContainer
[2020-11-25 15:06:13,404 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 03:06:12" (2/2) ...
[2020-11-25 15:06:13,405 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-25 15:06:13,406 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@37a930bf and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 03:06:13, skipping insertion in model container
[2020-11-25 15:06:13,406 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-25 15:06:13,406 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-25 15:06:13,406 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-25 15:06:13,408 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-25 15:06:13,408 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "ERC20ext_0xceca64909127918c80c7c76b503de7306d63eca7_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 03:06:12" (1/3) ...
[2020-11-25 15:06:13,408 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@d4168e and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 03:06:13, skipping insertion in model container
[2020-11-25 15:06:13,408 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 03:06:12" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-25 15:06:13,453 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 03:06:13 NWAContainer
[2020-11-25 15:06:13,453 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-25 15:06:13,453 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-25 15:06:13,453 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-25 15:06:13,454 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-25 15:06:13,455 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "ERC20ext_0xceca64909127918c80c7c76b503de7306d63eca7_approve.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 03:06:13" (3/4) ...
[2020-11-25 15:06:13,455 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@ff5fc28 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 03:06:13, skipping insertion in model container
[2020-11-25 15:06:13,456 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 03:06:13" (4/4) ...
[2020-11-25 15:06:13,458 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-25 15:06:13,462 INFO  L110   BuchiProductObserver]: Initial RCFG 1883 locations, 2420 edges
[2020-11-25 15:06:13,462 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-25 15:06:13,473 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-25 15:06:14,837 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-25 15:06:14,842 INFO  L110   BuchiProductObserver]: BuchiProgram size 4508 locations, 7830 edges
[2020-11-25 15:06:14,842 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 03:06:14 BoogieIcfgContainer
[2020-11-25 15:06:14,842 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-25 15:06:14,843 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-25 15:06:14,843 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-25 15:06:14,845 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-25 15:06:14,845 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 03:06:14" (1/1) ...
[2020-11-25 15:06:14,934 INFO  L313           BlockEncoder]: Initial Icfg 4508 locations, 7830 edges
[2020-11-25 15:06:14,935 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-25 15:06:14,935 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-25 15:06:14,935 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-25 15:06:14,936 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-25 15:06:14,948 INFO  L70    emoveInfeasibleEdges]: Removed 75 edges and 13 locations because of local infeasibility
[2020-11-25 15:06:14,956 INFO  L70        RemoveSinkStates]: Removed 20 edges and 13 locations by removing sink states
[2020-11-25 15:06:14,966 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-25 15:06:14,970 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-25 15:06:14,973 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-25 15:06:14,973 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-25 15:06:14,978 INFO  L313           BlockEncoder]: Encoded RCFG 4458 locations, 7700 edges
[2020-11-25 15:06:14,978 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 03:06:14 BasicIcfg
[2020-11-25 15:06:14,978 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-25 15:06:14,979 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-25 15:06:14,979 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-25 15:06:14,980 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-25 15:06:14,981 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 15:06:14,981 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "ERC20ext_0xceca64909127918c80c7c76b503de7306d63eca7_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 03:06:12" (1/6) ...
[2020-11-25 15:06:14,982 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@3b199fae and model type ERC20ext_0xceca64909127918c80c7c76b503de7306d63eca7_approve.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 03:06:14, skipping insertion in model container
[2020-11-25 15:06:14,982 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 15:06:14,982 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 03:06:12" (2/6) ...
[2020-11-25 15:06:14,982 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@3b199fae and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 03:06:14, skipping insertion in model container
[2020-11-25 15:06:14,983 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 15:06:14,983 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "ERC20ext_0xceca64909127918c80c7c76b503de7306d63eca7_approve.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 03:06:13" (3/6) ...
[2020-11-25 15:06:14,983 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@3b199fae and model type ERC20ext_0xceca64909127918c80c7c76b503de7306d63eca7_approve.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 03:06:14, skipping insertion in model container
[2020-11-25 15:06:14,983 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 15:06:14,983 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 03:06:13" (4/6) ...
[2020-11-25 15:06:14,983 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@3b199fae and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 03:06:14, skipping insertion in model container
[2020-11-25 15:06:14,983 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 15:06:14,983 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 03:06:14" (5/6) ...
[2020-11-25 15:06:14,983 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@3b199fae and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 25.11 03:06:14, skipping insertion in model container
[2020-11-25 15:06:14,983 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 15:06:14,983 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 03:06:14" (6/6) ...
[2020-11-25 15:06:14,984 INFO  L404   chiAutomizerObserver]: Analyzing ICFG ERC20ext_0xceca64909127918c80c7c76b503de7306d63eca7_approve.bpl_BEv2
[2020-11-25 15:06:15,010 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-25 15:06:15,011 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-25 15:06:15,011 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-25 15:06:15,011 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-25 15:06:15,011 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-25 15:06:15,011 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-25 15:06:15,011 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-25 15:06:15,011 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-25 15:06:15,011 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-25 15:06:15,045 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 4458 states.
[2020-11-25 15:06:15,099 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 15:06:15,100 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 15:06:15,100 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 15:06:15,107 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 15:06:15,107 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 15:06:15,107 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-25 15:06:15,107 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 4458 states.
[2020-11-25 15:06:15,134 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 15:06:15,134 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 15:06:15,134 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 15:06:15,136 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 15:06:15,136 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_approve_TokenERC200 := false;
[L3]                 call_approve_TokenERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L5090]              assume null == 0;
[L5091]  CALL        call this := FreshRefGenerator__success();
[L2433]              havoc newRef;
[L2434]              assume Alloc[newRef] == false;
[L2435]              Alloc[newRef] := true;
[L2436]              assume newRef != null;
[L5091]  RET         call this := FreshRefGenerator__success();
[L5092]              assume now >= 0;
[L5093]              assume DType[this] == ERC20ext;
[L5094]              assume msgvalue_MSG == 0;
[L5095]              gas := gas - 53000;
[L5096]  CALL        call ERC20ext_ERC20ext(this, msgsender_MSG, msgvalue_MSG, initialSupply_s639, tokenName_s639, tokenSymbol_s639);
[L1361]              havoc __exception;
[L1362]              revert := false;
[L1363]  COND FALSE  !(__exception)
[L1392]  CALL        call ERC20ext_ERC20ext__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s639, tokenName_s639, tokenSymbol_s639);
[L3248]  CALL        call owned_owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2625]  CALL        call owned_owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2608]              assume msgsender_MSG != null;
[L2609]              Balance[this] := 0;
[L2610]              owner_owned[this] := null;
[L2612]              owner_owned[this] := msgsender_MSG;
[L2625]  RET         call owned_owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2626]  COND FALSE  !(revert)
[L3248]  RET         call owned_owned__success(this, msgsender_MSG, msgvalue_MSG);
[L3249]  COND TRUE   revert
[L1392]  RET         call ERC20ext_ERC20ext__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s639, tokenName_s639, tokenSymbol_s639);
[L1393]              assume !revert && gas >= 0;
[L5096]  RET         call ERC20ext_ERC20ext(this, msgsender_MSG, msgvalue_MSG, initialSupply_s639, tokenName_s639, tokenSymbol_s639);
[L5097]              assume !revert && gas >= 0;

Loop:
[L5100]  CALL        call CorralChoice_ERC20ext(this);
[L4882]              havoc msgsender_MSG;
[L4883]              havoc msgvalue_MSG;
[L4884]              havoc choice;
[L4885]              havoc __ret_0_owner;
[L4886]              havoc newOwner_s166;
[L4887]              havoc __ret_0_name;
[L4888]              havoc __ret_0_symbol;
[L4889]              havoc __ret_0_decimals;
[L4890]              havoc __ret_0_totalSupply;
[L4891]              havoc arg835_s0;
[L4892]              havoc __ret_0_balanceOf;
[L4893]              havoc arg836_s0;
[L4894]              havoc arg837_s0;
[L4895]              havoc __ret_0_allowance;
[L4896]              havoc initialSupply_s258;
[L4897]              havoc tokenName_s258;
[L4898]              havoc tokenSymbol_s258;
[L4899]              havoc _to_s365;
[L4900]              havoc _value_s365;
[L4901]              havoc success_s365;
[L4902]              havoc _from_s413;
[L4903]              havoc _to_s413;
[L4904]              havoc _value_s413;
[L4905]              havoc success_s413;
[L4906]              havoc _spender_s441;
[L4907]              havoc _value_s441;
[L4908]              havoc success_s441;
[L4909]              havoc _spender_s479;
[L4910]              havoc _value_s479;
[L4911]              havoc _extraData_s479;
[L4912]              havoc success_s479;
[L4913]              havoc _value_s527;
[L4914]              havoc success_s527;
[L4915]              havoc _from_s598;
[L4916]              havoc _value_s598;
[L4917]              havoc success_s598;
[L4918]              havoc arg838_s0;
[L4919]              havoc __ret_0_frozenAccount;
[L4920]              havoc arg839_s0;
[L4921]              havoc __ret_0_lockedAccount;
[L4922]              havoc arg840_s0;
[L4923]              havoc __ret_0_lockedAmount;
[L4924]              havoc initialSupply_s639;
[L4925]              havoc tokenName_s639;
[L4926]              havoc tokenSymbol_s639;
[L4927]              havoc target_s779;
[L4928]              havoc mintedAmount_s779;
[L4929]              havoc success_s779;
[L4930]              havoc target_s804;
[L4931]              havoc freeze_s804;
[L4932]              havoc success_s804;
[L4933]              havoc target_s832;
[L4934]              havoc time_s832;
[L4935]              havoc amount_s832;
[L4936]              havoc success_s832;
[L4937]              havoc tmpNow;
[L4938]              havoc gas;
[L4939]              assume gas > 4000000 && gas <= 8000000;
[L4940]              tmpNow := now;
[L4941]              havoc now;
[L4942]              assume now > tmpNow;
[L4943]              assume msgsender_MSG != null;
[L4944]              assume DType[msgsender_MSG] != SafeMath;
[L4945]              assume DType[msgsender_MSG] != owned;
[L4946]              assume DType[msgsender_MSG] != tokenRecipient;
[L4947]              assume DType[msgsender_MSG] != TokenERC20;
[L4948]              assume DType[msgsender_MSG] != ERC20ext;
[L4949]              Alloc[msgsender_MSG] := true;
[L4950]  COND TRUE   choice == 20
[L4951]              gas := gas - 21000;
[L4952]  COND FALSE  !(gas >= 0)
[L5100]  RET         call CorralChoice_ERC20ext(this);

[2020-11-25 15:06:15,149 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 15:06:15,150 INFO  L82        PathProgramCache]: Analyzing trace with hash -1689576843, now seen corresponding path program 1 times
[2020-11-25 15:06:15,153 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 15:06:15,177 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 15:06:15,211 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 15:06:15,213 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 15:06:15,213 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 15:06:15,506 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 15:06:15,515 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 15:06:15,515 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 15:06:15,516 INFO  L87              Difference]: Start difference. First operand 4458 states. Second operand 4 states.
[2020-11-25 15:06:16,491 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 15:06:16,491 INFO  L93              Difference]: Finished difference Result 4704 states and 7617 transitions.
[2020-11-25 15:06:16,491 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 15:06:16,493 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 4704 states and 7617 transitions.
[2020-11-25 15:06:16,521 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 6
[2020-11-25 15:06:16,555 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 4704 states to 4506 states and 7276 transitions.
[2020-11-25 15:06:16,555 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 15
[2020-11-25 15:06:16,560 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 1334
[2020-11-25 15:06:16,560 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 4506 states and 7276 transitions.
[2020-11-25 15:06:16,582 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 15:06:16,582 INFO  L728         BuchiCegarLoop]: Abstraction has 4506 states and 7276 transitions.
[2020-11-25 15:06:16,602 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 4506 states and 7276 transitions.
[2020-11-25 15:06:16,676 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 4506 to 3420.
[2020-11-25 15:06:16,677 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 3420 states.
[2020-11-25 15:06:16,685 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 3420 states to 3420 states and 5276 transitions.
[2020-11-25 15:06:16,686 INFO  L751         BuchiCegarLoop]: Abstraction has 3420 states and 5276 transitions.
[2020-11-25 15:06:16,687 INFO  L631         BuchiCegarLoop]: Abstraction has 3420 states and 5276 transitions.
[2020-11-25 15:06:16,687 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-25 15:06:16,687 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3420 states and 5276 transitions.
[2020-11-25 15:06:16,699 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 15:06:16,699 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 15:06:16,699 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 15:06:16,701 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 15:06:16,701 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_approve_TokenERC200 := false;
[L3]                 call_approve_TokenERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L5090]              assume null == 0;
[L5091]  CALL        call this := FreshRefGenerator__success();
[L2433]              havoc newRef;
[L2434]              assume Alloc[newRef] == false;
[L2435]              Alloc[newRef] := true;
[L2436]              assume newRef != null;
[L5091]  RET         call this := FreshRefGenerator__success();
[L5092]              assume now >= 0;
[L5093]              assume DType[this] == ERC20ext;
[L5094]              assume msgvalue_MSG == 0;
[L5095]              gas := gas - 53000;
[L5096]  CALL        call ERC20ext_ERC20ext(this, msgsender_MSG, msgvalue_MSG, initialSupply_s639, tokenName_s639, tokenSymbol_s639);
[L1361]              havoc __exception;
[L1362]              revert := false;
[L1363]  COND FALSE  !(__exception)
[L1392]  CALL        call ERC20ext_ERC20ext__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s639, tokenName_s639, tokenSymbol_s639);
[L3248]  CALL        call owned_owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2625]  CALL        call owned_owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2608]              assume msgsender_MSG != null;
[L2609]              Balance[this] := 0;
[L2610]              owner_owned[this] := null;
[L2612]              owner_owned[this] := msgsender_MSG;
[L2625]  RET         call owned_owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2626]  COND FALSE  !(revert)
[L3248]  RET         call owned_owned__success(this, msgsender_MSG, msgvalue_MSG);
[L3249]  COND FALSE  !(revert)
[L3252]  CALL        call TokenERC20_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s639, tokenName_s639, tokenSymbol_s639);
[L2753]  CALL        call TokenERC20_TokenERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s258, tokenName_s258, tokenSymbol_s258);
[L2721]              assume msgsender_MSG != null;
[L2722]              Balance[this] := 0;
[L2723]              name_TokenERC20[this] := 1101944712;
[L2724]              symbol_TokenERC20[this] := 1101944712;
[L2725]              decimals_TokenERC20[this] := 18;
[L2726]              totalSupply_TokenERC20[this] := 0;
[L2727]              balanceOf_TokenERC20[this] := zeroRefintArr();
[L2728]              sum_balanceOf0[this] := 0;
[L2729]              allowance_TokenERC20[this] := zeroRefRefintArr();
[L2730]              sum_allowance1[this] := 0;
[L2732]              __var_1 := decimals_TokenERC20[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2733]              totalSupply_TokenERC20[this] := nonlinearMul(initialSupply_s258, nonlinearPow(10, decimals_TokenERC20[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2734]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_TokenERC20[this][msgsender_MSG];
[L2735]              balanceOf_TokenERC20[this][msgsender_MSG] := totalSupply_TokenERC20[this];
[L2736]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_TokenERC20[this][msgsender_MSG];
[L2737]              name_TokenERC20[this] := tokenName_s258;
[L2738]              symbol_TokenERC20[this] := tokenSymbol_s258;
[L2753]  RET         call TokenERC20_TokenERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s258, tokenName_s258, tokenSymbol_s258);
[L2754]  COND FALSE  !(revert)
[L3252]  RET         call TokenERC20_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s639, tokenName_s639, tokenSymbol_s639);
[L3253]  COND FALSE  !(revert)
[L3256]  CALL        call ERC20ext_ERC20ext_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s639, tokenName_s639, tokenSymbol_s639);
[L3220]              assume msgsender_MSG != null;
[L3221]              Balance[this] := 0;
[L3222]              frozenAccount_ERC20ext[this] := zeroRefboolArr();
[L3223]              lockedAccount_ERC20ext[this] := zeroRefintArr();
[L3224]              sum_lockedAccount3[this] := 0;
[L3225]              lockedAmount_ERC20ext[this] := zeroRefintArr();
[L3226]              sum_lockedAmount4[this] := 0;
[L3256]  RET         call ERC20ext_ERC20ext_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s639, tokenName_s639, tokenSymbol_s639);
[L3257]  COND FALSE  !(revert)
[L1392]  RET         call ERC20ext_ERC20ext__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s639, tokenName_s639, tokenSymbol_s639);
[L1393]              assume !revert && gas >= 0;
[L5096]  RET         call ERC20ext_ERC20ext(this, msgsender_MSG, msgvalue_MSG, initialSupply_s639, tokenName_s639, tokenSymbol_s639);
[L5097]              assume !revert && gas >= 0;

Loop:
[L5100]  CALL        call CorralChoice_ERC20ext(this);
[L4882]              havoc msgsender_MSG;
[L4883]              havoc msgvalue_MSG;
[L4884]              havoc choice;
[L4885]              havoc __ret_0_owner;
[L4886]              havoc newOwner_s166;
[L4887]              havoc __ret_0_name;
[L4888]              havoc __ret_0_symbol;
[L4889]              havoc __ret_0_decimals;
[L4890]              havoc __ret_0_totalSupply;
[L4891]              havoc arg835_s0;
[L4892]              havoc __ret_0_balanceOf;
[L4893]              havoc arg836_s0;
[L4894]              havoc arg837_s0;
[L4895]              havoc __ret_0_allowance;
[L4896]              havoc initialSupply_s258;
[L4897]              havoc tokenName_s258;
[L4898]              havoc tokenSymbol_s258;
[L4899]              havoc _to_s365;
[L4900]              havoc _value_s365;
[L4901]              havoc success_s365;
[L4902]              havoc _from_s413;
[L4903]              havoc _to_s413;
[L4904]              havoc _value_s413;
[L4905]              havoc success_s413;
[L4906]              havoc _spender_s441;
[L4907]              havoc _value_s441;
[L4908]              havoc success_s441;
[L4909]              havoc _spender_s479;
[L4910]              havoc _value_s479;
[L4911]              havoc _extraData_s479;
[L4912]              havoc success_s479;
[L4913]              havoc _value_s527;
[L4914]              havoc success_s527;
[L4915]              havoc _from_s598;
[L4916]              havoc _value_s598;
[L4917]              havoc success_s598;
[L4918]              havoc arg838_s0;
[L4919]              havoc __ret_0_frozenAccount;
[L4920]              havoc arg839_s0;
[L4921]              havoc __ret_0_lockedAccount;
[L4922]              havoc arg840_s0;
[L4923]              havoc __ret_0_lockedAmount;
[L4924]              havoc initialSupply_s639;
[L4925]              havoc tokenName_s639;
[L4926]              havoc tokenSymbol_s639;
[L4927]              havoc target_s779;
[L4928]              havoc mintedAmount_s779;
[L4929]              havoc success_s779;
[L4930]              havoc target_s804;
[L4931]              havoc freeze_s804;
[L4932]              havoc success_s804;
[L4933]              havoc target_s832;
[L4934]              havoc time_s832;
[L4935]              havoc amount_s832;
[L4936]              havoc success_s832;
[L4937]              havoc tmpNow;
[L4938]              havoc gas;
[L4939]              assume gas > 4000000 && gas <= 8000000;
[L4940]              tmpNow := now;
[L4941]              havoc now;
[L4942]              assume now > tmpNow;
[L4943]              assume msgsender_MSG != null;
[L4944]              assume DType[msgsender_MSG] != SafeMath;
[L4945]              assume DType[msgsender_MSG] != owned;
[L4946]              assume DType[msgsender_MSG] != tokenRecipient;
[L4947]              assume DType[msgsender_MSG] != TokenERC20;
[L4948]              assume DType[msgsender_MSG] != ERC20ext;
[L4949]              Alloc[msgsender_MSG] := true;
[L4950]  COND TRUE   choice == 20
[L4951]              gas := gas - 21000;
[L4952]  COND FALSE  !(gas >= 0)
[L5100]  RET         call CorralChoice_ERC20ext(this);

[2020-11-25 15:06:16,704 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 15:06:16,705 INFO  L82        PathProgramCache]: Analyzing trace with hash -222256201, now seen corresponding path program 1 times
[2020-11-25 15:06:16,705 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 15:06:16,716 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 15:06:16,736 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 15:06:16,736 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 15:06:16,736 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 15:06:16,737 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 15:06:16,738 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 15:06:16,738 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 15:06:16,738 INFO  L87              Difference]: Start difference. First operand 3420 states and 5276 transitions. cyclomatic complexity: 1858 Second operand 4 states.
[2020-11-25 15:06:17,351 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 15:06:17,352 INFO  L93              Difference]: Finished difference Result 3243 states and 3516 transitions.
[2020-11-25 15:06:17,352 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 15:06:17,352 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3243 states and 3516 transitions.
[2020-11-25 15:06:17,363 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 15:06:17,372 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3243 states to 3243 states and 3516 transitions.
[2020-11-25 15:06:17,372 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 918
[2020-11-25 15:06:17,372 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 918
[2020-11-25 15:06:17,372 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3243 states and 3516 transitions.
[2020-11-25 15:06:17,375 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 15:06:17,375 INFO  L728         BuchiCegarLoop]: Abstraction has 3243 states and 3516 transitions.
[2020-11-25 15:06:17,378 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3243 states and 3516 transitions.
[2020-11-25 15:06:17,400 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3243 to 3243.
[2020-11-25 15:06:17,400 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 3243 states.
[2020-11-25 15:06:17,404 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 3243 states to 3243 states and 3516 transitions.
[2020-11-25 15:06:17,404 INFO  L751         BuchiCegarLoop]: Abstraction has 3243 states and 3516 transitions.
[2020-11-25 15:06:17,404 INFO  L631         BuchiCegarLoop]: Abstraction has 3243 states and 3516 transitions.
[2020-11-25 15:06:17,404 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-25 15:06:17,404 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3243 states and 3516 transitions.
[2020-11-25 15:06:17,411 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 15:06:17,411 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 15:06:17,411 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 15:06:17,413 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 15:06:17,413 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_approve_TokenERC200 := false;
[L3]                 call_approve_TokenERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L5090]              assume null == 0;
[L5091]  CALL        call this := FreshRefGenerator__success();
[L2433]              havoc newRef;
[L2434]              assume Alloc[newRef] == false;
[L2435]              Alloc[newRef] := true;
[L2436]              assume newRef != null;
[L5091]  RET         call this := FreshRefGenerator__success();
[L5092]              assume now >= 0;
[L5093]              assume DType[this] == ERC20ext;
[L5094]              assume msgvalue_MSG == 0;
[L5095]              gas := gas - 53000;
[L5096]  CALL        call ERC20ext_ERC20ext(this, msgsender_MSG, msgvalue_MSG, initialSupply_s639, tokenName_s639, tokenSymbol_s639);
[L1361]              havoc __exception;
[L1362]              revert := false;
[L1363]  COND FALSE  !(__exception)
[L1392]  CALL        call ERC20ext_ERC20ext__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s639, tokenName_s639, tokenSymbol_s639);
[L3248]  CALL        call owned_owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2625]  CALL        call owned_owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2608]              assume msgsender_MSG != null;
[L2609]              Balance[this] := 0;
[L2610]              owner_owned[this] := null;
[L2612]              owner_owned[this] := msgsender_MSG;
[L2625]  RET         call owned_owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2626]  COND FALSE  !(revert)
[L3248]  RET         call owned_owned__success(this, msgsender_MSG, msgvalue_MSG);
[L3249]  COND FALSE  !(revert)
[L3252]  CALL        call TokenERC20_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s639, tokenName_s639, tokenSymbol_s639);
[L2753]  CALL        call TokenERC20_TokenERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s258, tokenName_s258, tokenSymbol_s258);
[L2721]              assume msgsender_MSG != null;
[L2722]              Balance[this] := 0;
[L2723]              name_TokenERC20[this] := 1101944712;
[L2724]              symbol_TokenERC20[this] := 1101944712;
[L2725]              decimals_TokenERC20[this] := 18;
[L2726]              totalSupply_TokenERC20[this] := 0;
[L2727]              balanceOf_TokenERC20[this] := zeroRefintArr();
[L2728]              sum_balanceOf0[this] := 0;
[L2729]              allowance_TokenERC20[this] := zeroRefRefintArr();
[L2730]              sum_allowance1[this] := 0;
[L2732]              __var_1 := decimals_TokenERC20[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2733]              totalSupply_TokenERC20[this] := nonlinearMul(initialSupply_s258, nonlinearPow(10, decimals_TokenERC20[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2734]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_TokenERC20[this][msgsender_MSG];
[L2735]              balanceOf_TokenERC20[this][msgsender_MSG] := totalSupply_TokenERC20[this];
[L2736]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_TokenERC20[this][msgsender_MSG];
[L2737]              name_TokenERC20[this] := tokenName_s258;
[L2738]              symbol_TokenERC20[this] := tokenSymbol_s258;
[L2753]  RET         call TokenERC20_TokenERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s258, tokenName_s258, tokenSymbol_s258);
[L2754]  COND FALSE  !(revert)
[L3252]  RET         call TokenERC20_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s639, tokenName_s639, tokenSymbol_s639);
[L3253]  COND FALSE  !(revert)
[L3256]  CALL        call ERC20ext_ERC20ext_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s639, tokenName_s639, tokenSymbol_s639);
[L3220]              assume msgsender_MSG != null;
[L3221]              Balance[this] := 0;
[L3222]              frozenAccount_ERC20ext[this] := zeroRefboolArr();
[L3223]              lockedAccount_ERC20ext[this] := zeroRefintArr();
[L3224]              sum_lockedAccount3[this] := 0;
[L3225]              lockedAmount_ERC20ext[this] := zeroRefintArr();
[L3226]              sum_lockedAmount4[this] := 0;
[L3256]  RET         call ERC20ext_ERC20ext_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s639, tokenName_s639, tokenSymbol_s639);
[L3257]  COND FALSE  !(revert)
[L1392]  RET         call ERC20ext_ERC20ext__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s639, tokenName_s639, tokenSymbol_s639);
[L1393]              assume !revert && gas >= 0;
[L5096]  RET         call ERC20ext_ERC20ext(this, msgsender_MSG, msgvalue_MSG, initialSupply_s639, tokenName_s639, tokenSymbol_s639);
[L5097]              assume !revert && gas >= 0;
[L5100]  CALL        call CorralChoice_ERC20ext(this);
[L4882]              havoc msgsender_MSG;
[L4883]              havoc msgvalue_MSG;
[L4884]              havoc choice;
[L4885]              havoc __ret_0_owner;
[L4886]              havoc newOwner_s166;
[L4887]              havoc __ret_0_name;
[L4888]              havoc __ret_0_symbol;
[L4889]              havoc __ret_0_decimals;
[L4890]              havoc __ret_0_totalSupply;
[L4891]              havoc arg835_s0;
[L4892]              havoc __ret_0_balanceOf;
[L4893]              havoc arg836_s0;
[L4894]              havoc arg837_s0;
[L4895]              havoc __ret_0_allowance;
[L4896]              havoc initialSupply_s258;
[L4897]              havoc tokenName_s258;
[L4898]              havoc tokenSymbol_s258;
[L4899]              havoc _to_s365;
[L4900]              havoc _value_s365;
[L4901]              havoc success_s365;
[L4902]              havoc _from_s413;
[L4903]              havoc _to_s413;
[L4904]              havoc _value_s413;
[L4905]              havoc success_s413;
[L4906]              havoc _spender_s441;
[L4907]              havoc _value_s441;
[L4908]              havoc success_s441;
[L4909]              havoc _spender_s479;
[L4910]              havoc _value_s479;
[L4911]              havoc _extraData_s479;
[L4912]              havoc success_s479;
[L4913]              havoc _value_s527;
[L4914]              havoc success_s527;
[L4915]              havoc _from_s598;
[L4916]              havoc _value_s598;
[L4917]              havoc success_s598;
[L4918]              havoc arg838_s0;
[L4919]              havoc __ret_0_frozenAccount;
[L4920]              havoc arg839_s0;
[L4921]              havoc __ret_0_lockedAccount;
[L4922]              havoc arg840_s0;
[L4923]              havoc __ret_0_lockedAmount;
[L4924]              havoc initialSupply_s639;
[L4925]              havoc tokenName_s639;
[L4926]              havoc tokenSymbol_s639;
[L4927]              havoc target_s779;
[L4928]              havoc mintedAmount_s779;
[L4929]              havoc success_s779;
[L4930]              havoc target_s804;
[L4931]              havoc freeze_s804;
[L4932]              havoc success_s804;
[L4933]              havoc target_s832;
[L4934]              havoc time_s832;
[L4935]              havoc amount_s832;
[L4936]              havoc success_s832;
[L4937]              havoc tmpNow;
[L4938]              havoc gas;
[L4939]              assume gas > 4000000 && gas <= 8000000;
[L4940]              tmpNow := now;
[L4941]              havoc now;
[L4942]              assume now > tmpNow;
[L4943]              assume msgsender_MSG != null;
[L4944]              assume DType[msgsender_MSG] != SafeMath;
[L4945]              assume DType[msgsender_MSG] != owned;
[L4946]              assume DType[msgsender_MSG] != tokenRecipient;
[L4947]              assume DType[msgsender_MSG] != TokenERC20;
[L4948]              assume DType[msgsender_MSG] != ERC20ext;
[L4949]              Alloc[msgsender_MSG] := true;
[L4950]  COND FALSE  !(choice == 20)
[L4956]  COND FALSE  !(choice == 19)
[L4962]  COND FALSE  !(choice == 18)
[L4968]  COND FALSE  !(choice == 17)
[L4974]  COND FALSE  !(choice == 16)
[L4980]  COND FALSE  !(choice == 15)
[L4986]  COND FALSE  !(choice == 14)
[L4992]  COND FALSE  !(choice == 13)
[L4998]  COND FALSE  !(choice == 12)
[L5005]  COND FALSE  !(choice == 11)
[L5012]  COND TRUE   choice == 10
[L5013]              gas := gas - 21000;
[L5014]  COND TRUE   gas >= 0
[L5015]              assume _value_s441 >= 0 && _value_s441 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L5016]              assume msgvalue_MSG == 0;
[L5017]  CALL        call success_s441 := approve~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, _spender_s441, _value_s441);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != _spender_s441;
[L3]                 call_approve_TokenERC200 := true;
[L3]                 call_approve_TokenERC200 := false;
[L3]                 revert := revert_hold;
[L666]               havoc __exception;
[L667]               revert := false;
[L668]   COND FALSE  !(__exception)
[L697]   CALL        call success_s441 := approve~address~uint256_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, _spender_s441, _value_s441);
[L2944]              sum_allowance1[msgsender_MSG] := sum_allowance1[msgsender_MSG] - allowance_TokenERC20[this][msgsender_MSG][_spender_s441];
[L2945]              allowance_TokenERC20[this][msgsender_MSG][_spender_s441] := _value_s441;
[L2946]              sum_allowance1[msgsender_MSG] := sum_allowance1[msgsender_MSG] + allowance_TokenERC20[this][msgsender_MSG][_spender_s441];
[L2947]              assert { :EventEmitted "Approval_TokenERC20" } true;
[L2948]              success_s441 := true;
[L697]   RET         call success_s441 := approve~address~uint256_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, _spender_s441, _value_s441);
[L698]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((((((success_s441 == true && allowance_TokenERC20[this][msgsender_MSG][_spender_s441] == _value_s441) && totalSupply_TokenERC20[this] == old(totalSupply_TokenERC20[this])) && balanceOf_TokenERC20[this] == old(balanceOf_TokenERC20[this])) && allowance_TokenERC20[this][p1][p2] == old(allowance_TokenERC20[this][p1][p2])) && frozenAccount_ERC20ext[this] == old(frozenAccount_ERC20ext[this])) && lockedAccount_ERC20ext[this] == old(lockedAccount_ERC20ext[this])) && lockedAmount_ERC20ext[this] == old(lockedAmount_ERC20ext[this])) && name_TokenERC20[this] == old(name_TokenERC20[this])) && symbol_TokenERC20[this] == old(symbol_TokenERC20[this])) && decimals_TokenERC20[this] == old(decimals_TokenERC20[this])) && owner_owned[this] == old(owner_owned[this]));
[L3]                 revert := revert_hold;
[L5017]  RET         call success_s441 := approve~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, _spender_s441, _value_s441);
[L5100]  RET         call CorralChoice_ERC20ext(this);

Loop:
[L5100]  CALL        call CorralChoice_ERC20ext(this);
[L4882]              havoc msgsender_MSG;
[L4883]              havoc msgvalue_MSG;
[L4884]              havoc choice;
[L4885]              havoc __ret_0_owner;
[L4886]              havoc newOwner_s166;
[L4887]              havoc __ret_0_name;
[L4888]              havoc __ret_0_symbol;
[L4889]              havoc __ret_0_decimals;
[L4890]              havoc __ret_0_totalSupply;
[L4891]              havoc arg835_s0;
[L4892]              havoc __ret_0_balanceOf;
[L4893]              havoc arg836_s0;
[L4894]              havoc arg837_s0;
[L4895]              havoc __ret_0_allowance;
[L4896]              havoc initialSupply_s258;
[L4897]              havoc tokenName_s258;
[L4898]              havoc tokenSymbol_s258;
[L4899]              havoc _to_s365;
[L4900]              havoc _value_s365;
[L4901]              havoc success_s365;
[L4902]              havoc _from_s413;
[L4903]              havoc _to_s413;
[L4904]              havoc _value_s413;
[L4905]              havoc success_s413;
[L4906]              havoc _spender_s441;
[L4907]              havoc _value_s441;
[L4908]              havoc success_s441;
[L4909]              havoc _spender_s479;
[L4910]              havoc _value_s479;
[L4911]              havoc _extraData_s479;
[L4912]              havoc success_s479;
[L4913]              havoc _value_s527;
[L4914]              havoc success_s527;
[L4915]              havoc _from_s598;
[L4916]              havoc _value_s598;
[L4917]              havoc success_s598;
[L4918]              havoc arg838_s0;
[L4919]              havoc __ret_0_frozenAccount;
[L4920]              havoc arg839_s0;
[L4921]              havoc __ret_0_lockedAccount;
[L4922]              havoc arg840_s0;
[L4923]              havoc __ret_0_lockedAmount;
[L4924]              havoc initialSupply_s639;
[L4925]              havoc tokenName_s639;
[L4926]              havoc tokenSymbol_s639;
[L4927]              havoc target_s779;
[L4928]              havoc mintedAmount_s779;
[L4929]              havoc success_s779;
[L4930]              havoc target_s804;
[L4931]              havoc freeze_s804;
[L4932]              havoc success_s804;
[L4933]              havoc target_s832;
[L4934]              havoc time_s832;
[L4935]              havoc amount_s832;
[L4936]              havoc success_s832;
[L4937]              havoc tmpNow;
[L4938]              havoc gas;
[L4939]              assume gas > 4000000 && gas <= 8000000;
[L4940]              tmpNow := now;
[L4941]              havoc now;
[L4942]              assume now > tmpNow;
[L4943]              assume msgsender_MSG != null;
[L4944]              assume DType[msgsender_MSG] != SafeMath;
[L4945]              assume DType[msgsender_MSG] != owned;
[L4946]              assume DType[msgsender_MSG] != tokenRecipient;
[L4947]              assume DType[msgsender_MSG] != TokenERC20;
[L4948]              assume DType[msgsender_MSG] != ERC20ext;
[L4949]              Alloc[msgsender_MSG] := true;
[L4950]  COND FALSE  !(choice == 20)
[L4956]  COND FALSE  !(choice == 19)
[L4962]  COND FALSE  !(choice == 18)
[L4968]  COND FALSE  !(choice == 17)
[L4974]  COND FALSE  !(choice == 16)
[L4980]  COND FALSE  !(choice == 15)
[L4986]  COND FALSE  !(choice == 14)
[L4992]  COND FALSE  !(choice == 13)
[L4998]  COND FALSE  !(choice == 12)
[L5005]  COND FALSE  !(choice == 11)
[L5012]  COND TRUE   choice == 10
[L5013]              gas := gas - 21000;
[L5014]  COND TRUE   gas >= 0
[L5015]              assume _value_s441 >= 0 && _value_s441 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L5016]              assume msgvalue_MSG == 0;
[L5017]  CALL        call success_s441 := approve~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, _spender_s441, _value_s441);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != _spender_s441;
[L3]                 call_approve_TokenERC200 := true;
[L3]                 call_approve_TokenERC200 := false;
[L3]                 revert := revert_hold;
[L666]               havoc __exception;
[L667]               revert := false;
[L668]   COND FALSE  !(__exception)
[L697]   CALL        call success_s441 := approve~address~uint256_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, _spender_s441, _value_s441);
[L2944]              sum_allowance1[msgsender_MSG] := sum_allowance1[msgsender_MSG] - allowance_TokenERC20[this][msgsender_MSG][_spender_s441];
[L2945]              allowance_TokenERC20[this][msgsender_MSG][_spender_s441] := _value_s441;
[L2946]              sum_allowance1[msgsender_MSG] := sum_allowance1[msgsender_MSG] + allowance_TokenERC20[this][msgsender_MSG][_spender_s441];
[L2947]              assert { :EventEmitted "Approval_TokenERC20" } true;
[L2948]              success_s441 := true;
[L697]   RET         call success_s441 := approve~address~uint256_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, _spender_s441, _value_s441);
[L698]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((((((success_s441 == true && allowance_TokenERC20[this][msgsender_MSG][_spender_s441] == _value_s441) && totalSupply_TokenERC20[this] == old(totalSupply_TokenERC20[this])) && balanceOf_TokenERC20[this] == old(balanceOf_TokenERC20[this])) && allowance_TokenERC20[this][p1][p2] == old(allowance_TokenERC20[this][p1][p2])) && frozenAccount_ERC20ext[this] == old(frozenAccount_ERC20ext[this])) && lockedAccount_ERC20ext[this] == old(lockedAccount_ERC20ext[this])) && lockedAmount_ERC20ext[this] == old(lockedAmount_ERC20ext[this])) && name_TokenERC20[this] == old(name_TokenERC20[this])) && symbol_TokenERC20[this] == old(symbol_TokenERC20[this])) && decimals_TokenERC20[this] == old(decimals_TokenERC20[this])) && owner_owned[this] == old(owner_owned[this]));
[L3]                 revert := revert_hold;
[L5017]  RET         call success_s441 := approve~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, _spender_s441, _value_s441);
[L5100]  RET         call CorralChoice_ERC20ext(this);

[2020-11-25 15:06:17,417 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 15:06:17,417 INFO  L82        PathProgramCache]: Analyzing trace with hash 1357845986, now seen corresponding path program 1 times
[2020-11-25 15:06:17,418 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 15:06:17,451 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 15:06:17,642 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 15:06:17,642 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 15:06:17,642 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [13] imperfect sequences [] total 13
[2020-11-25 15:06:17,642 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 15:06:17,643 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 14 interpolants.
[2020-11-25 15:06:17,643 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=27, Invalid=155, Unknown=0, NotChecked=0, Total=182
[2020-11-25 15:06:17,643 INFO  L87              Difference]: Start difference. First operand 3243 states and 3516 transitions. cyclomatic complexity: 275 Second operand 14 states.
[2020-11-25 15:06:19,491 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 15:06:19,492 INFO  L93              Difference]: Finished difference Result 3378 states and 3673 transitions.
[2020-11-25 15:06:19,492 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 14 states. 
[2020-11-25 15:06:19,492 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3378 states and 3673 transitions.
[2020-11-25 15:06:19,499 INFO  L131   ngComponentsAnalysis]: Automaton has 3 accepting balls. 6
[2020-11-25 15:06:19,509 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3378 states to 3378 states and 3673 transitions.
[2020-11-25 15:06:19,509 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 982
[2020-11-25 15:06:19,510 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 982
[2020-11-25 15:06:19,511 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3378 states and 3673 transitions.
[2020-11-25 15:06:19,513 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 15:06:19,514 INFO  L728         BuchiCegarLoop]: Abstraction has 3378 states and 3673 transitions.
[2020-11-25 15:06:19,516 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3378 states and 3673 transitions.
[2020-11-25 15:06:19,545 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3378 to 3341.
[2020-11-25 15:06:19,545 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 3341 states.
[2020-11-25 15:06:19,550 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 3341 states to 3341 states and 3627 transitions.
[2020-11-25 15:06:19,550 INFO  L751         BuchiCegarLoop]: Abstraction has 3341 states and 3627 transitions.
[2020-11-25 15:06:19,550 INFO  L631         BuchiCegarLoop]: Abstraction has 3341 states and 3627 transitions.
[2020-11-25 15:06:19,550 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-25 15:06:19,550 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3341 states and 3627 transitions.
[2020-11-25 15:06:19,554 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 4
[2020-11-25 15:06:19,554 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 15:06:19,554 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 15:06:19,556 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 15:06:19,556 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_approve_TokenERC200 := false;
[L3]                 call_approve_TokenERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L5090]              assume null == 0;
[L5091]  CALL        call this := FreshRefGenerator__success();
[L2433]              havoc newRef;
[L2434]              assume Alloc[newRef] == false;
[L2435]              Alloc[newRef] := true;
[L2436]              assume newRef != null;
[L5091]  RET         call this := FreshRefGenerator__success();
[L5092]              assume now >= 0;
[L5093]              assume DType[this] == ERC20ext;
[L5094]              assume msgvalue_MSG == 0;
[L5095]              gas := gas - 53000;
[L5096]  CALL        call ERC20ext_ERC20ext(this, msgsender_MSG, msgvalue_MSG, initialSupply_s639, tokenName_s639, tokenSymbol_s639);
[L1361]              havoc __exception;
[L1362]              revert := false;
[L1363]  COND FALSE  !(__exception)
[L1392]  CALL        call ERC20ext_ERC20ext__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s639, tokenName_s639, tokenSymbol_s639);
[L3248]  CALL        call owned_owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2625]  CALL        call owned_owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2608]              assume msgsender_MSG != null;
[L2609]              Balance[this] := 0;
[L2610]              owner_owned[this] := null;
[L2612]              owner_owned[this] := msgsender_MSG;
[L2625]  RET         call owned_owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2626]  COND FALSE  !(revert)
[L3248]  RET         call owned_owned__success(this, msgsender_MSG, msgvalue_MSG);
[L3249]  COND FALSE  !(revert)
[L3252]  CALL        call TokenERC20_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s639, tokenName_s639, tokenSymbol_s639);
[L2753]  CALL        call TokenERC20_TokenERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s258, tokenName_s258, tokenSymbol_s258);
[L2721]              assume msgsender_MSG != null;
[L2722]              Balance[this] := 0;
[L2723]              name_TokenERC20[this] := 1101944712;
[L2724]              symbol_TokenERC20[this] := 1101944712;
[L2725]              decimals_TokenERC20[this] := 18;
[L2726]              totalSupply_TokenERC20[this] := 0;
[L2727]              balanceOf_TokenERC20[this] := zeroRefintArr();
[L2728]              sum_balanceOf0[this] := 0;
[L2729]              allowance_TokenERC20[this] := zeroRefRefintArr();
[L2730]              sum_allowance1[this] := 0;
[L2732]              __var_1 := decimals_TokenERC20[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2733]              totalSupply_TokenERC20[this] := nonlinearMul(initialSupply_s258, nonlinearPow(10, decimals_TokenERC20[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2734]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_TokenERC20[this][msgsender_MSG];
[L2735]              balanceOf_TokenERC20[this][msgsender_MSG] := totalSupply_TokenERC20[this];
[L2736]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_TokenERC20[this][msgsender_MSG];
[L2737]              name_TokenERC20[this] := tokenName_s258;
[L2738]              symbol_TokenERC20[this] := tokenSymbol_s258;
[L2753]  RET         call TokenERC20_TokenERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s258, tokenName_s258, tokenSymbol_s258);
[L2754]  COND FALSE  !(revert)
[L3252]  RET         call TokenERC20_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s639, tokenName_s639, tokenSymbol_s639);
[L3253]  COND FALSE  !(revert)
[L3256]  CALL        call ERC20ext_ERC20ext_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s639, tokenName_s639, tokenSymbol_s639);
[L3220]              assume msgsender_MSG != null;
[L3221]              Balance[this] := 0;
[L3222]              frozenAccount_ERC20ext[this] := zeroRefboolArr();
[L3223]              lockedAccount_ERC20ext[this] := zeroRefintArr();
[L3224]              sum_lockedAccount3[this] := 0;
[L3225]              lockedAmount_ERC20ext[this] := zeroRefintArr();
[L3226]              sum_lockedAmount4[this] := 0;
[L3256]  RET         call ERC20ext_ERC20ext_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s639, tokenName_s639, tokenSymbol_s639);
[L3257]  COND FALSE  !(revert)
[L1392]  RET         call ERC20ext_ERC20ext__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s639, tokenName_s639, tokenSymbol_s639);
[L1393]              assume !revert && gas >= 0;
[L5096]  RET         call ERC20ext_ERC20ext(this, msgsender_MSG, msgvalue_MSG, initialSupply_s639, tokenName_s639, tokenSymbol_s639);
[L5097]              assume !revert && gas >= 0;
[L5100]  CALL        call CorralChoice_ERC20ext(this);
[L4882]              havoc msgsender_MSG;
[L4883]              havoc msgvalue_MSG;
[L4884]              havoc choice;
[L4885]              havoc __ret_0_owner;
[L4886]              havoc newOwner_s166;
[L4887]              havoc __ret_0_name;
[L4888]              havoc __ret_0_symbol;
[L4889]              havoc __ret_0_decimals;
[L4890]              havoc __ret_0_totalSupply;
[L4891]              havoc arg835_s0;
[L4892]              havoc __ret_0_balanceOf;
[L4893]              havoc arg836_s0;
[L4894]              havoc arg837_s0;
[L4895]              havoc __ret_0_allowance;
[L4896]              havoc initialSupply_s258;
[L4897]              havoc tokenName_s258;
[L4898]              havoc tokenSymbol_s258;
[L4899]              havoc _to_s365;
[L4900]              havoc _value_s365;
[L4901]              havoc success_s365;
[L4902]              havoc _from_s413;
[L4903]              havoc _to_s413;
[L4904]              havoc _value_s413;
[L4905]              havoc success_s413;
[L4906]              havoc _spender_s441;
[L4907]              havoc _value_s441;
[L4908]              havoc success_s441;
[L4909]              havoc _spender_s479;
[L4910]              havoc _value_s479;
[L4911]              havoc _extraData_s479;
[L4912]              havoc success_s479;
[L4913]              havoc _value_s527;
[L4914]              havoc success_s527;
[L4915]              havoc _from_s598;
[L4916]              havoc _value_s598;
[L4917]              havoc success_s598;
[L4918]              havoc arg838_s0;
[L4919]              havoc __ret_0_frozenAccount;
[L4920]              havoc arg839_s0;
[L4921]              havoc __ret_0_lockedAccount;
[L4922]              havoc arg840_s0;
[L4923]              havoc __ret_0_lockedAmount;
[L4924]              havoc initialSupply_s639;
[L4925]              havoc tokenName_s639;
[L4926]              havoc tokenSymbol_s639;
[L4927]              havoc target_s779;
[L4928]              havoc mintedAmount_s779;
[L4929]              havoc success_s779;
[L4930]              havoc target_s804;
[L4931]              havoc freeze_s804;
[L4932]              havoc success_s804;
[L4933]              havoc target_s832;
[L4934]              havoc time_s832;
[L4935]              havoc amount_s832;
[L4936]              havoc success_s832;
[L4937]              havoc tmpNow;
[L4938]              havoc gas;
[L4939]              assume gas > 4000000 && gas <= 8000000;
[L4940]              tmpNow := now;
[L4941]              havoc now;
[L4942]              assume now > tmpNow;
[L4943]              assume msgsender_MSG != null;
[L4944]              assume DType[msgsender_MSG] != SafeMath;
[L4945]              assume DType[msgsender_MSG] != owned;
[L4946]              assume DType[msgsender_MSG] != tokenRecipient;
[L4947]              assume DType[msgsender_MSG] != TokenERC20;
[L4948]              assume DType[msgsender_MSG] != ERC20ext;
[L4949]              Alloc[msgsender_MSG] := true;
[L4950]  COND FALSE  !(choice == 20)
[L4956]  COND FALSE  !(choice == 19)
[L4962]  COND FALSE  !(choice == 18)
[L4968]  COND FALSE  !(choice == 17)
[L4974]  COND FALSE  !(choice == 16)
[L4980]  COND FALSE  !(choice == 15)
[L4986]  COND FALSE  !(choice == 14)
[L4992]  COND FALSE  !(choice == 13)
[L4998]  COND FALSE  !(choice == 12)
[L5005]  COND FALSE  !(choice == 11)
[L5012]  COND TRUE   choice == 10
[L5013]              gas := gas - 21000;
[L5014]  COND TRUE   gas >= 0
[L5015]              assume _value_s441 >= 0 && _value_s441 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L5016]              assume msgvalue_MSG == 0;
[L5017]  CALL        call success_s441 := approve~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, _spender_s441, _value_s441);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != _spender_s441;
[L3]                 call_approve_TokenERC200 := true;
[L3]                 call_approve_TokenERC200 := false;
[L3]                 revert := revert_hold;
[L666]               havoc __exception;
[L667]               revert := false;
[L668]   COND TRUE   __exception
[L669]               __tmp__Balance := Balance;
[L670]               __tmp__DType := DType;
[L671]               __tmp__Alloc := Alloc;
[L672]               __tmp__balance_ADDR := balance_ADDR;
[L673]               __tmp__M_Ref_int := M_Ref_int;
[L674]               __tmp__sum_balanceOf0 := sum_balanceOf0;
[L675]               __tmp__alloc_allowance_TokenERC20_lvl0 := alloc_allowance_TokenERC20_lvl0;
[L676]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L677]               __tmp__sum_allowance1 := sum_allowance1;
[L678]               __tmp__M_Ref_bool := M_Ref_bool;
[L679]               __tmp__sum_frozenAccount2 := sum_frozenAccount2;
[L680]               __tmp__sum_lockedAccount3 := sum_lockedAccount3;
[L681]               __tmp__sum_lockedAmount4 := sum_lockedAmount4;
[L682]               __tmp__Length := Length;
[L683]               __tmp__now := now;
[L684]               __tmp__owner_owned := owner_owned;
[L685]               __tmp__name_TokenERC20 := name_TokenERC20;
[L686]               __tmp__symbol_TokenERC20 := symbol_TokenERC20;
[L687]               __tmp__decimals_TokenERC20 := decimals_TokenERC20;
[L688]               __tmp__totalSupply_TokenERC20 := totalSupply_TokenERC20;
[L689]               __tmp__balanceOf_TokenERC20 := balanceOf_TokenERC20;
[L690]               __tmp__allowance_TokenERC20 := allowance_TokenERC20;
[L691]               __tmp__frozenAccount_ERC20ext := frozenAccount_ERC20ext;
[L692]               __tmp__lockedAccount_ERC20ext := lockedAccount_ERC20ext;
[L693]               __tmp__lockedAmount_ERC20ext := lockedAmount_ERC20ext;
[L694]   CALL        call success_s441 := approve~address~uint256_TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, _spender_s441, _value_s441);
[L2935]              __tmp__sum_allowance1[msgsender_MSG] := __tmp__sum_allowance1[msgsender_MSG] - __tmp__allowance_TokenERC20[this][msgsender_MSG][_spender_s441];
[L2936]              __tmp__allowance_TokenERC20[this][msgsender_MSG][_spender_s441] := _value_s441;
[L2937]              __tmp__sum_allowance1[msgsender_MSG] := __tmp__sum_allowance1[msgsender_MSG] + __tmp__allowance_TokenERC20[this][msgsender_MSG][_spender_s441];
[L2938]              success_s441 := true;
[L694]   RET         call success_s441 := approve~address~uint256_TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, _spender_s441, _value_s441);
[L695]               assume revert || gas < 0;
[L5017]  RET         call success_s441 := approve~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, _spender_s441, _value_s441);
[L5100]  RET         call CorralChoice_ERC20ext(this);

Loop:
[L5100]  CALL        call CorralChoice_ERC20ext(this);
[L4882]              havoc msgsender_MSG;
[L4883]              havoc msgvalue_MSG;
[L4884]              havoc choice;
[L4885]              havoc __ret_0_owner;
[L4886]              havoc newOwner_s166;
[L4887]              havoc __ret_0_name;
[L4888]              havoc __ret_0_symbol;
[L4889]              havoc __ret_0_decimals;
[L4890]              havoc __ret_0_totalSupply;
[L4891]              havoc arg835_s0;
[L4892]              havoc __ret_0_balanceOf;
[L4893]              havoc arg836_s0;
[L4894]              havoc arg837_s0;
[L4895]              havoc __ret_0_allowance;
[L4896]              havoc initialSupply_s258;
[L4897]              havoc tokenName_s258;
[L4898]              havoc tokenSymbol_s258;
[L4899]              havoc _to_s365;
[L4900]              havoc _value_s365;
[L4901]              havoc success_s365;
[L4902]              havoc _from_s413;
[L4903]              havoc _to_s413;
[L4904]              havoc _value_s413;
[L4905]              havoc success_s413;
[L4906]              havoc _spender_s441;
[L4907]              havoc _value_s441;
[L4908]              havoc success_s441;
[L4909]              havoc _spender_s479;
[L4910]              havoc _value_s479;
[L4911]              havoc _extraData_s479;
[L4912]              havoc success_s479;
[L4913]              havoc _value_s527;
[L4914]              havoc success_s527;
[L4915]              havoc _from_s598;
[L4916]              havoc _value_s598;
[L4917]              havoc success_s598;
[L4918]              havoc arg838_s0;
[L4919]              havoc __ret_0_frozenAccount;
[L4920]              havoc arg839_s0;
[L4921]              havoc __ret_0_lockedAccount;
[L4922]              havoc arg840_s0;
[L4923]              havoc __ret_0_lockedAmount;
[L4924]              havoc initialSupply_s639;
[L4925]              havoc tokenName_s639;
[L4926]              havoc tokenSymbol_s639;
[L4927]              havoc target_s779;
[L4928]              havoc mintedAmount_s779;
[L4929]              havoc success_s779;
[L4930]              havoc target_s804;
[L4931]              havoc freeze_s804;
[L4932]              havoc success_s804;
[L4933]              havoc target_s832;
[L4934]              havoc time_s832;
[L4935]              havoc amount_s832;
[L4936]              havoc success_s832;
[L4937]              havoc tmpNow;
[L4938]              havoc gas;
[L4939]              assume gas > 4000000 && gas <= 8000000;
[L4940]              tmpNow := now;
[L4941]              havoc now;
[L4942]              assume now > tmpNow;
[L4943]              assume msgsender_MSG != null;
[L4944]              assume DType[msgsender_MSG] != SafeMath;
[L4945]              assume DType[msgsender_MSG] != owned;
[L4946]              assume DType[msgsender_MSG] != tokenRecipient;
[L4947]              assume DType[msgsender_MSG] != TokenERC20;
[L4948]              assume DType[msgsender_MSG] != ERC20ext;
[L4949]              Alloc[msgsender_MSG] := true;
[L4950]  COND FALSE  !(choice == 20)
[L4956]  COND FALSE  !(choice == 19)
[L4962]  COND FALSE  !(choice == 18)
[L4968]  COND FALSE  !(choice == 17)
[L4974]  COND FALSE  !(choice == 16)
[L4980]  COND FALSE  !(choice == 15)
[L4986]  COND FALSE  !(choice == 14)
[L4992]  COND FALSE  !(choice == 13)
[L4998]  COND FALSE  !(choice == 12)
[L5005]  COND FALSE  !(choice == 11)
[L5012]  COND TRUE   choice == 10
[L5013]              gas := gas - 21000;
[L5014]  COND TRUE   gas >= 0
[L5015]              assume _value_s441 >= 0 && _value_s441 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L5016]              assume msgvalue_MSG == 0;
[L5017]  CALL        call success_s441 := approve~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, _spender_s441, _value_s441);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != _spender_s441;
[L3]                 call_approve_TokenERC200 := true;
[L3]                 call_approve_TokenERC200 := false;
[L3]                 revert := revert_hold;
[L666]               havoc __exception;
[L667]               revert := false;
[L668]   COND TRUE   __exception
[L669]               __tmp__Balance := Balance;
[L670]               __tmp__DType := DType;
[L671]               __tmp__Alloc := Alloc;
[L672]               __tmp__balance_ADDR := balance_ADDR;
[L673]               __tmp__M_Ref_int := M_Ref_int;
[L674]               __tmp__sum_balanceOf0 := sum_balanceOf0;
[L675]               __tmp__alloc_allowance_TokenERC20_lvl0 := alloc_allowance_TokenERC20_lvl0;
[L676]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L677]               __tmp__sum_allowance1 := sum_allowance1;
[L678]               __tmp__M_Ref_bool := M_Ref_bool;
[L679]               __tmp__sum_frozenAccount2 := sum_frozenAccount2;
[L680]               __tmp__sum_lockedAccount3 := sum_lockedAccount3;
[L681]               __tmp__sum_lockedAmount4 := sum_lockedAmount4;
[L682]               __tmp__Length := Length;
[L683]               __tmp__now := now;
[L684]               __tmp__owner_owned := owner_owned;
[L685]               __tmp__name_TokenERC20 := name_TokenERC20;
[L686]               __tmp__symbol_TokenERC20 := symbol_TokenERC20;
[L687]               __tmp__decimals_TokenERC20 := decimals_TokenERC20;
[L688]               __tmp__totalSupply_TokenERC20 := totalSupply_TokenERC20;
[L689]               __tmp__balanceOf_TokenERC20 := balanceOf_TokenERC20;
[L690]               __tmp__allowance_TokenERC20 := allowance_TokenERC20;
[L691]               __tmp__frozenAccount_ERC20ext := frozenAccount_ERC20ext;
[L692]               __tmp__lockedAccount_ERC20ext := lockedAccount_ERC20ext;
[L693]               __tmp__lockedAmount_ERC20ext := lockedAmount_ERC20ext;
[L694]   CALL        call success_s441 := approve~address~uint256_TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, _spender_s441, _value_s441);
[L2935]              __tmp__sum_allowance1[msgsender_MSG] := __tmp__sum_allowance1[msgsender_MSG] - __tmp__allowance_TokenERC20[this][msgsender_MSG][_spender_s441];
[L2936]              __tmp__allowance_TokenERC20[this][msgsender_MSG][_spender_s441] := _value_s441;
[L2937]              __tmp__sum_allowance1[msgsender_MSG] := __tmp__sum_allowance1[msgsender_MSG] + __tmp__allowance_TokenERC20[this][msgsender_MSG][_spender_s441];
[L2938]              success_s441 := true;
[L694]   RET         call success_s441 := approve~address~uint256_TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, _spender_s441, _value_s441);
[L695]               assume revert || gas < 0;
[L5017]  RET         call success_s441 := approve~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, _spender_s441, _value_s441);
[L5100]  RET         call CorralChoice_ERC20ext(this);

[2020-11-25 15:06:19,559 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 15:06:19,559 INFO  L82        PathProgramCache]: Analyzing trace with hash -365871820, now seen corresponding path program 1 times
[2020-11-25 15:06:19,560 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 15:06:19,568 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 15:06:19,605 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 15:06:19,605 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 15:06:19,605 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [5] imperfect sequences [] total 5
[2020-11-25 15:06:19,606 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 15:06:19,606 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 5 interpolants.
[2020-11-25 15:06:19,606 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=7, Invalid=13, Unknown=0, NotChecked=0, Total=20
[2020-11-25 15:06:19,606 INFO  L87              Difference]: Start difference. First operand 3341 states and 3627 transitions. cyclomatic complexity: 290 Second operand 5 states.
[2020-11-25 15:06:20,054 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 15:06:20,054 INFO  L93              Difference]: Finished difference Result 4167 states and 4600 transitions.
[2020-11-25 15:06:20,054 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 7 states. 
[2020-11-25 15:06:20,055 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 4167 states and 4600 transitions.
[2020-11-25 15:06:20,066 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 8
[2020-11-25 15:06:20,076 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 4167 states to 3074 states and 3493 transitions.
[2020-11-25 15:06:20,076 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 606
[2020-11-25 15:06:20,077 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 606
[2020-11-25 15:06:20,077 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3074 states and 3493 transitions.
[2020-11-25 15:06:20,080 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 15:06:20,080 INFO  L728         BuchiCegarLoop]: Abstraction has 3074 states and 3493 transitions.
[2020-11-25 15:06:20,082 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3074 states and 3493 transitions.
[2020-11-25 15:06:20,101 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3074 to 2288.
[2020-11-25 15:06:20,101 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2288 states.
[2020-11-25 15:06:20,103 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2288 states to 2288 states and 2513 transitions.
[2020-11-25 15:06:20,103 INFO  L751         BuchiCegarLoop]: Abstraction has 2288 states and 2513 transitions.
[2020-11-25 15:06:20,103 INFO  L631         BuchiCegarLoop]: Abstraction has 2288 states and 2513 transitions.
[2020-11-25 15:06:20,103 INFO  L445         BuchiCegarLoop]: ======== Iteration 5============
[2020-11-25 15:06:20,104 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2288 states and 2513 transitions.
[2020-11-25 15:06:20,106 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 15:06:20,106 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 15:06:20,106 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 15:06:20,108 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 15:06:20,108 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_approve_TokenERC200 := false;
[L3]                 call_approve_TokenERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L5090]              assume null == 0;
[L5091]  CALL        call this := FreshRefGenerator__success();
[L2433]              havoc newRef;
[L2434]              assume Alloc[newRef] == false;
[L2435]              Alloc[newRef] := true;
[L2436]              assume newRef != null;
[L5091]  RET         call this := FreshRefGenerator__success();
[L5092]              assume now >= 0;
[L5093]              assume DType[this] == ERC20ext;
[L5094]              assume msgvalue_MSG == 0;
[L5095]              gas := gas - 53000;
[L5096]  CALL        call ERC20ext_ERC20ext(this, msgsender_MSG, msgvalue_MSG, initialSupply_s639, tokenName_s639, tokenSymbol_s639);
[L1361]              havoc __exception;
[L1362]              revert := false;
[L1363]  COND FALSE  !(__exception)
[L1392]  CALL        call ERC20ext_ERC20ext__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s639, tokenName_s639, tokenSymbol_s639);
[L3248]  CALL        call owned_owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2625]  CALL        call owned_owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2608]              assume msgsender_MSG != null;
[L2609]              Balance[this] := 0;
[L2610]              owner_owned[this] := null;
[L2612]              owner_owned[this] := msgsender_MSG;
[L2625]  RET         call owned_owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2626]  COND FALSE  !(revert)
[L3248]  RET         call owned_owned__success(this, msgsender_MSG, msgvalue_MSG);
[L3249]  COND FALSE  !(revert)
[L3252]  CALL        call TokenERC20_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s639, tokenName_s639, tokenSymbol_s639);
[L2753]  CALL        call TokenERC20_TokenERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s258, tokenName_s258, tokenSymbol_s258);
[L2721]              assume msgsender_MSG != null;
[L2722]              Balance[this] := 0;
[L2723]              name_TokenERC20[this] := 1101944712;
[L2724]              symbol_TokenERC20[this] := 1101944712;
[L2725]              decimals_TokenERC20[this] := 18;
[L2726]              totalSupply_TokenERC20[this] := 0;
[L2727]              balanceOf_TokenERC20[this] := zeroRefintArr();
[L2728]              sum_balanceOf0[this] := 0;
[L2729]              allowance_TokenERC20[this] := zeroRefRefintArr();
[L2730]              sum_allowance1[this] := 0;
[L2732]              __var_1 := decimals_TokenERC20[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2733]              totalSupply_TokenERC20[this] := nonlinearMul(initialSupply_s258, nonlinearPow(10, decimals_TokenERC20[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2734]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_TokenERC20[this][msgsender_MSG];
[L2735]              balanceOf_TokenERC20[this][msgsender_MSG] := totalSupply_TokenERC20[this];
[L2736]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_TokenERC20[this][msgsender_MSG];
[L2737]              name_TokenERC20[this] := tokenName_s258;
[L2738]              symbol_TokenERC20[this] := tokenSymbol_s258;
[L2753]  RET         call TokenERC20_TokenERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s258, tokenName_s258, tokenSymbol_s258);
[L2754]  COND FALSE  !(revert)
[L3252]  RET         call TokenERC20_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s639, tokenName_s639, tokenSymbol_s639);
[L3253]  COND FALSE  !(revert)
[L3256]  CALL        call ERC20ext_ERC20ext_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s639, tokenName_s639, tokenSymbol_s639);
[L3220]              assume msgsender_MSG != null;
[L3221]              Balance[this] := 0;
[L3222]              frozenAccount_ERC20ext[this] := zeroRefboolArr();
[L3223]              lockedAccount_ERC20ext[this] := zeroRefintArr();
[L3224]              sum_lockedAccount3[this] := 0;
[L3225]              lockedAmount_ERC20ext[this] := zeroRefintArr();
[L3226]              sum_lockedAmount4[this] := 0;
[L3256]  RET         call ERC20ext_ERC20ext_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s639, tokenName_s639, tokenSymbol_s639);
[L3257]  COND FALSE  !(revert)
[L1392]  RET         call ERC20ext_ERC20ext__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s639, tokenName_s639, tokenSymbol_s639);
[L1393]              assume !revert && gas >= 0;
[L5096]  RET         call ERC20ext_ERC20ext(this, msgsender_MSG, msgvalue_MSG, initialSupply_s639, tokenName_s639, tokenSymbol_s639);
[L5097]              assume !revert && gas >= 0;
[L5100]  CALL        call CorralChoice_ERC20ext(this);
[L4882]              havoc msgsender_MSG;
[L4883]              havoc msgvalue_MSG;
[L4884]              havoc choice;
[L4885]              havoc __ret_0_owner;
[L4886]              havoc newOwner_s166;
[L4887]              havoc __ret_0_name;
[L4888]              havoc __ret_0_symbol;
[L4889]              havoc __ret_0_decimals;
[L4890]              havoc __ret_0_totalSupply;
[L4891]              havoc arg835_s0;
[L4892]              havoc __ret_0_balanceOf;
[L4893]              havoc arg836_s0;
[L4894]              havoc arg837_s0;
[L4895]              havoc __ret_0_allowance;
[L4896]              havoc initialSupply_s258;
[L4897]              havoc tokenName_s258;
[L4898]              havoc tokenSymbol_s258;
[L4899]              havoc _to_s365;
[L4900]              havoc _value_s365;
[L4901]              havoc success_s365;
[L4902]              havoc _from_s413;
[L4903]              havoc _to_s413;
[L4904]              havoc _value_s413;
[L4905]              havoc success_s413;
[L4906]              havoc _spender_s441;
[L4907]              havoc _value_s441;
[L4908]              havoc success_s441;
[L4909]              havoc _spender_s479;
[L4910]              havoc _value_s479;
[L4911]              havoc _extraData_s479;
[L4912]              havoc success_s479;
[L4913]              havoc _value_s527;
[L4914]              havoc success_s527;
[L4915]              havoc _from_s598;
[L4916]              havoc _value_s598;
[L4917]              havoc success_s598;
[L4918]              havoc arg838_s0;
[L4919]              havoc __ret_0_frozenAccount;
[L4920]              havoc arg839_s0;
[L4921]              havoc __ret_0_lockedAccount;
[L4922]              havoc arg840_s0;
[L4923]              havoc __ret_0_lockedAmount;
[L4924]              havoc initialSupply_s639;
[L4925]              havoc tokenName_s639;
[L4926]              havoc tokenSymbol_s639;
[L4927]              havoc target_s779;
[L4928]              havoc mintedAmount_s779;
[L4929]              havoc success_s779;
[L4930]              havoc target_s804;
[L4931]              havoc freeze_s804;
[L4932]              havoc success_s804;
[L4933]              havoc target_s832;
[L4934]              havoc time_s832;
[L4935]              havoc amount_s832;
[L4936]              havoc success_s832;
[L4937]              havoc tmpNow;
[L4938]              havoc gas;
[L4939]              assume gas > 4000000 && gas <= 8000000;
[L4940]              tmpNow := now;
[L4941]              havoc now;
[L4942]              assume now > tmpNow;
[L4943]              assume msgsender_MSG != null;
[L4944]              assume DType[msgsender_MSG] != SafeMath;
[L4945]              assume DType[msgsender_MSG] != owned;
[L4946]              assume DType[msgsender_MSG] != tokenRecipient;
[L4947]              assume DType[msgsender_MSG] != TokenERC20;
[L4948]              assume DType[msgsender_MSG] != ERC20ext;
[L4949]              Alloc[msgsender_MSG] := true;
[L4950]  COND FALSE  !(choice == 20)
[L4956]  COND FALSE  !(choice == 19)
[L4962]  COND FALSE  !(choice == 18)
[L4968]  COND FALSE  !(choice == 17)
[L4974]  COND FALSE  !(choice == 16)
[L4980]  COND FALSE  !(choice == 15)
[L4986]  COND FALSE  !(choice == 14)
[L4992]  COND FALSE  !(choice == 13)
[L4998]  COND FALSE  !(choice == 12)
[L5005]  COND FALSE  !(choice == 11)
[L5012]  COND TRUE   choice == 10
[L5013]              gas := gas - 21000;
[L5014]  COND TRUE   gas >= 0
[L5015]              assume _value_s441 >= 0 && _value_s441 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L5016]              assume msgvalue_MSG == 0;
[L5017]  CALL        call success_s441 := approve~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, _spender_s441, _value_s441);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(p1 != msgsender_MSG || p2 != _spender_s441);
[L3]                 revert := revert_hold;
[L666]               havoc __exception;
[L667]               revert := false;
[L668]   COND FALSE  !(__exception)
[L697]   CALL        call success_s441 := approve~address~uint256_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, _spender_s441, _value_s441);
[L2944]              sum_allowance1[msgsender_MSG] := sum_allowance1[msgsender_MSG] - allowance_TokenERC20[this][msgsender_MSG][_spender_s441];
[L2945]              allowance_TokenERC20[this][msgsender_MSG][_spender_s441] := _value_s441;
[L2946]              sum_allowance1[msgsender_MSG] := sum_allowance1[msgsender_MSG] + allowance_TokenERC20[this][msgsender_MSG][_spender_s441];
[L2947]              assert { :EventEmitted "Approval_TokenERC20" } true;
[L2948]              success_s441 := true;
[L697]   RET         call success_s441 := approve~address~uint256_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, _spender_s441, _value_s441);
[L698]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((((((success_s441 == true && allowance_TokenERC20[this][msgsender_MSG][_spender_s441] == _value_s441) && totalSupply_TokenERC20[this] == old(totalSupply_TokenERC20[this])) && balanceOf_TokenERC20[this] == old(balanceOf_TokenERC20[this])) && allowance_TokenERC20[this][p1][p2] == old(allowance_TokenERC20[this][p1][p2])) && frozenAccount_ERC20ext[this] == old(frozenAccount_ERC20ext[this])) && lockedAccount_ERC20ext[this] == old(lockedAccount_ERC20ext[this])) && lockedAmount_ERC20ext[this] == old(lockedAmount_ERC20ext[this])) && name_TokenERC20[this] == old(name_TokenERC20[this])) && symbol_TokenERC20[this] == old(symbol_TokenERC20[this])) && decimals_TokenERC20[this] == old(decimals_TokenERC20[this])) && owner_owned[this] == old(owner_owned[this]));
[L3]                 revert := revert_hold;
[L5017]  RET         call success_s441 := approve~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, _spender_s441, _value_s441);
[L5100]  RET         call CorralChoice_ERC20ext(this);
[L5100]  CALL        call CorralChoice_ERC20ext(this);
[L4882]              havoc msgsender_MSG;
[L4883]              havoc msgvalue_MSG;
[L4884]              havoc choice;
[L4885]              havoc __ret_0_owner;
[L4886]              havoc newOwner_s166;
[L4887]              havoc __ret_0_name;
[L4888]              havoc __ret_0_symbol;
[L4889]              havoc __ret_0_decimals;
[L4890]              havoc __ret_0_totalSupply;
[L4891]              havoc arg835_s0;
[L4892]              havoc __ret_0_balanceOf;
[L4893]              havoc arg836_s0;
[L4894]              havoc arg837_s0;
[L4895]              havoc __ret_0_allowance;
[L4896]              havoc initialSupply_s258;
[L4897]              havoc tokenName_s258;
[L4898]              havoc tokenSymbol_s258;
[L4899]              havoc _to_s365;
[L4900]              havoc _value_s365;
[L4901]              havoc success_s365;
[L4902]              havoc _from_s413;
[L4903]              havoc _to_s413;
[L4904]              havoc _value_s413;
[L4905]              havoc success_s413;
[L4906]              havoc _spender_s441;
[L4907]              havoc _value_s441;
[L4908]              havoc success_s441;
[L4909]              havoc _spender_s479;
[L4910]              havoc _value_s479;
[L4911]              havoc _extraData_s479;
[L4912]              havoc success_s479;
[L4913]              havoc _value_s527;
[L4914]              havoc success_s527;
[L4915]              havoc _from_s598;
[L4916]              havoc _value_s598;
[L4917]              havoc success_s598;
[L4918]              havoc arg838_s0;
[L4919]              havoc __ret_0_frozenAccount;
[L4920]              havoc arg839_s0;
[L4921]              havoc __ret_0_lockedAccount;
[L4922]              havoc arg840_s0;
[L4923]              havoc __ret_0_lockedAmount;
[L4924]              havoc initialSupply_s639;
[L4925]              havoc tokenName_s639;
[L4926]              havoc tokenSymbol_s639;
[L4927]              havoc target_s779;
[L4928]              havoc mintedAmount_s779;
[L4929]              havoc success_s779;
[L4930]              havoc target_s804;
[L4931]              havoc freeze_s804;
[L4932]              havoc success_s804;
[L4933]              havoc target_s832;
[L4934]              havoc time_s832;
[L4935]              havoc amount_s832;
[L4936]              havoc success_s832;
[L4937]              havoc tmpNow;
[L4938]              havoc gas;
[L4939]              assume gas > 4000000 && gas <= 8000000;
[L4940]              tmpNow := now;
[L4941]              havoc now;
[L4942]              assume now > tmpNow;
[L4943]              assume msgsender_MSG != null;
[L4944]              assume DType[msgsender_MSG] != SafeMath;
[L4945]              assume DType[msgsender_MSG] != owned;
[L4946]              assume DType[msgsender_MSG] != tokenRecipient;
[L4947]              assume DType[msgsender_MSG] != TokenERC20;
[L4948]              assume DType[msgsender_MSG] != ERC20ext;
[L4949]              Alloc[msgsender_MSG] := true;
[L4950]  COND FALSE  !(choice == 20)
[L4956]  COND FALSE  !(choice == 19)
[L4962]  COND FALSE  !(choice == 18)
[L4968]  COND FALSE  !(choice == 17)
[L4974]  COND FALSE  !(choice == 16)
[L4980]  COND FALSE  !(choice == 15)
[L4986]  COND FALSE  !(choice == 14)
[L4992]  COND FALSE  !(choice == 13)
[L4998]  COND FALSE  !(choice == 12)
[L5005]  COND FALSE  !(choice == 11)
[L5012]  COND TRUE   choice == 10
[L5013]              gas := gas - 21000;
[L5014]  COND TRUE   gas >= 0
[L5015]              assume _value_s441 >= 0 && _value_s441 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L5016]              assume msgvalue_MSG == 0;
[L5017]  CALL        call success_s441 := approve~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, _spender_s441, _value_s441);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != _spender_s441;
[L3]                 call_approve_TokenERC200 := true;
[L3]                 call_approve_TokenERC200 := false;
[L3]                 revert := revert_hold;
[L666]               havoc __exception;
[L667]               revert := false;
[L668]   COND FALSE  !(__exception)
[L697]   CALL        call success_s441 := approve~address~uint256_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, _spender_s441, _value_s441);
[L2944]              sum_allowance1[msgsender_MSG] := sum_allowance1[msgsender_MSG] - allowance_TokenERC20[this][msgsender_MSG][_spender_s441];
[L2945]              allowance_TokenERC20[this][msgsender_MSG][_spender_s441] := _value_s441;
[L2946]              sum_allowance1[msgsender_MSG] := sum_allowance1[msgsender_MSG] + allowance_TokenERC20[this][msgsender_MSG][_spender_s441];
[L2947]              assert { :EventEmitted "Approval_TokenERC20" } true;
[L2948]              success_s441 := true;
[L697]   RET         call success_s441 := approve~address~uint256_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, _spender_s441, _value_s441);
[L698]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((((((success_s441 == true && allowance_TokenERC20[this][msgsender_MSG][_spender_s441] == _value_s441) && totalSupply_TokenERC20[this] == old(totalSupply_TokenERC20[this])) && balanceOf_TokenERC20[this] == old(balanceOf_TokenERC20[this])) && allowance_TokenERC20[this][p1][p2] == old(allowance_TokenERC20[this][p1][p2])) && frozenAccount_ERC20ext[this] == old(frozenAccount_ERC20ext[this])) && lockedAccount_ERC20ext[this] == old(lockedAccount_ERC20ext[this])) && lockedAmount_ERC20ext[this] == old(lockedAmount_ERC20ext[this])) && name_TokenERC20[this] == old(name_TokenERC20[this])) && symbol_TokenERC20[this] == old(symbol_TokenERC20[this])) && decimals_TokenERC20[this] == old(decimals_TokenERC20[this])) && owner_owned[this] == old(owner_owned[this]));
[L3]                 revert := revert_hold;
[L5017]  RET         call success_s441 := approve~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, _spender_s441, _value_s441);
[L5100]  RET         call CorralChoice_ERC20ext(this);

Loop:
[L5100]  CALL        call CorralChoice_ERC20ext(this);
[L4882]              havoc msgsender_MSG;
[L4883]              havoc msgvalue_MSG;
[L4884]              havoc choice;
[L4885]              havoc __ret_0_owner;
[L4886]              havoc newOwner_s166;
[L4887]              havoc __ret_0_name;
[L4888]              havoc __ret_0_symbol;
[L4889]              havoc __ret_0_decimals;
[L4890]              havoc __ret_0_totalSupply;
[L4891]              havoc arg835_s0;
[L4892]              havoc __ret_0_balanceOf;
[L4893]              havoc arg836_s0;
[L4894]              havoc arg837_s0;
[L4895]              havoc __ret_0_allowance;
[L4896]              havoc initialSupply_s258;
[L4897]              havoc tokenName_s258;
[L4898]              havoc tokenSymbol_s258;
[L4899]              havoc _to_s365;
[L4900]              havoc _value_s365;
[L4901]              havoc success_s365;
[L4902]              havoc _from_s413;
[L4903]              havoc _to_s413;
[L4904]              havoc _value_s413;
[L4905]              havoc success_s413;
[L4906]              havoc _spender_s441;
[L4907]              havoc _value_s441;
[L4908]              havoc success_s441;
[L4909]              havoc _spender_s479;
[L4910]              havoc _value_s479;
[L4911]              havoc _extraData_s479;
[L4912]              havoc success_s479;
[L4913]              havoc _value_s527;
[L4914]              havoc success_s527;
[L4915]              havoc _from_s598;
[L4916]              havoc _value_s598;
[L4917]              havoc success_s598;
[L4918]              havoc arg838_s0;
[L4919]              havoc __ret_0_frozenAccount;
[L4920]              havoc arg839_s0;
[L4921]              havoc __ret_0_lockedAccount;
[L4922]              havoc arg840_s0;
[L4923]              havoc __ret_0_lockedAmount;
[L4924]              havoc initialSupply_s639;
[L4925]              havoc tokenName_s639;
[L4926]              havoc tokenSymbol_s639;
[L4927]              havoc target_s779;
[L4928]              havoc mintedAmount_s779;
[L4929]              havoc success_s779;
[L4930]              havoc target_s804;
[L4931]              havoc freeze_s804;
[L4932]              havoc success_s804;
[L4933]              havoc target_s832;
[L4934]              havoc time_s832;
[L4935]              havoc amount_s832;
[L4936]              havoc success_s832;
[L4937]              havoc tmpNow;
[L4938]              havoc gas;
[L4939]              assume gas > 4000000 && gas <= 8000000;
[L4940]              tmpNow := now;
[L4941]              havoc now;
[L4942]              assume now > tmpNow;
[L4943]              assume msgsender_MSG != null;
[L4944]              assume DType[msgsender_MSG] != SafeMath;
[L4945]              assume DType[msgsender_MSG] != owned;
[L4946]              assume DType[msgsender_MSG] != tokenRecipient;
[L4947]              assume DType[msgsender_MSG] != TokenERC20;
[L4948]              assume DType[msgsender_MSG] != ERC20ext;
[L4949]              Alloc[msgsender_MSG] := true;
[L4950]  COND TRUE   choice == 20
[L4951]              gas := gas - 21000;
[L4952]  COND FALSE  !(gas >= 0)
[L5100]  RET         call CorralChoice_ERC20ext(this);

[2020-11-25 15:06:20,111 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 15:06:20,111 INFO  L82        PathProgramCache]: Analyzing trace with hash 768341024, now seen corresponding path program 1 times
[2020-11-25 15:06:20,112 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 15:06:20,133 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 15:06:20,204 INFO  L134       CoverageAnalysis]: Checked inductivity of 90 backedges. 4 proven. 0 refuted. 0 times theorem prover too weak. 86 trivial. 0 not checked.
[2020-11-25 15:06:20,204 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 15:06:20,204 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [7] imperfect sequences [] total 7
[2020-11-25 15:06:20,204 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 15:06:20,204 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 7 interpolants.
[2020-11-25 15:06:20,204 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=13, Invalid=29, Unknown=0, NotChecked=0, Total=42
[2020-11-25 15:06:20,205 INFO  L87              Difference]: Start difference. First operand 2288 states and 2513 transitions. cyclomatic complexity: 228 Second operand 7 states.
[2020-11-25 15:06:20,526 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 15:06:20,526 INFO  L93              Difference]: Finished difference Result 1212 states and 1324 transitions.
[2020-11-25 15:06:20,526 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 7 states. 
[2020-11-25 15:06:20,526 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 1212 states and 1324 transitions.
[2020-11-25 15:06:20,528 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-25 15:06:20,528 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 1212 states to 0 states and 0 transitions.
[2020-11-25 15:06:20,528 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 0
[2020-11-25 15:06:20,528 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 0
[2020-11-25 15:06:20,528 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 0 states and 0 transitions.
[2020-11-25 15:06:20,529 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 15:06:20,529 INFO  L728         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 15:06:20,529 INFO  L751         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 15:06:20,529 INFO  L631         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 15:06:20,529 INFO  L445         BuchiCegarLoop]: ======== Iteration 6============
[2020-11-25 15:06:20,529 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 0 states and 0 transitions.
[2020-11-25 15:06:20,529 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-25 15:06:20,529 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is true
[2020-11-25 15:06:20,532 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 03:06:20 BasicIcfg
[2020-11-25 15:06:20,532 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-25 15:06:20,532 INFO  L168              Benchmark]: Toolchain (without parser) took 8120.70 ms. Allocated memory was 1.0 GB in the beginning and 1.6 GB in the end (delta: 612.9 MB). Free memory was 940.6 MB in the beginning and 1.0 GB in the end (delta: -98.0 MB). Peak memory consumption was 514.9 MB. Max. memory is 15.3 GB.
[2020-11-25 15:06:20,534 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.14 ms. Allocated memory is still 1.0 GB. Free memory is still 956.7 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 15:06:20,534 INFO  L168              Benchmark]: Boogie Preprocessor took 98.32 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 924.5 MB in the end (delta: 16.1 MB). Peak memory consumption was 16.1 MB. Max. memory is 15.3 GB.
[2020-11-25 15:06:20,535 INFO  L168              Benchmark]: UtopiaSpecLang took 70.48 ms. Allocated memory is still 1.0 GB. Free memory was 924.5 MB in the beginning and 913.7 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
[2020-11-25 15:06:20,535 INFO  L168              Benchmark]: Boogie Printer took 17.00 ms. Allocated memory is still 1.0 GB. Free memory is still 913.7 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 15:06:20,535 INFO  L168              Benchmark]: RCFGBuilder took 806.65 ms. Allocated memory is still 1.0 GB. Free memory was 913.7 MB in the beginning and 779.5 MB in the end (delta: 134.3 MB). Peak memory consumption was 134.3 MB. Max. memory is 15.3 GB.
[2020-11-25 15:06:20,536 INFO  L168              Benchmark]: UtopiaLTL2Aut took 46.78 ms. Allocated memory is still 1.0 GB. Free memory was 779.5 MB in the beginning and 775.9 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
[2020-11-25 15:06:20,536 INFO  L168              Benchmark]: BÃ¼chi Program Product took 1389.39 ms. Allocated memory was 1.0 GB in the beginning and 1.2 GB in the end (delta: 206.6 MB). Free memory was 775.9 MB in the beginning and 910.8 MB in the end (delta: -134.9 MB). Peak memory consumption was 173.5 MB. Max. memory is 15.3 GB.
[2020-11-25 15:06:20,537 INFO  L168              Benchmark]: BlockEncodingV2 took 135.66 ms. Allocated memory is still 1.2 GB. Free memory was 907.7 MB in the beginning and 831.9 MB in the end (delta: 75.8 MB). Peak memory consumption was 75.8 MB. Max. memory is 15.3 GB.
[2020-11-25 15:06:20,537 INFO  L168              Benchmark]: BuchiAutomizer took 5553.56 ms. Allocated memory was 1.2 GB in the beginning and 1.6 GB in the end (delta: 406.3 MB). Free memory was 831.9 MB in the beginning and 1.0 GB in the end (delta: -206.6 MB). Peak memory consumption was 199.7 MB. Max. memory is 15.3 GB.
[2020-11-25 15:06:20,541 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    4508 locations, 7830 edges
  - StatisticsResult: Encoded RCFG
    4458 locations, 7700 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.14 ms. Allocated memory is still 1.0 GB. Free memory is still 956.7 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 98.32 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 924.5 MB in the end (delta: 16.1 MB). Peak memory consumption was 16.1 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 70.48 ms. Allocated memory is still 1.0 GB. Free memory was 924.5 MB in the beginning and 913.7 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 17.00 ms. Allocated memory is still 1.0 GB. Free memory is still 913.7 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * RCFGBuilder took 806.65 ms. Allocated memory is still 1.0 GB. Free memory was 913.7 MB in the beginning and 779.5 MB in the end (delta: 134.3 MB). Peak memory consumption was 134.3 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 46.78 ms. Allocated memory is still 1.0 GB. Free memory was 779.5 MB in the beginning and 775.9 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 1389.39 ms. Allocated memory was 1.0 GB in the beginning and 1.2 GB in the end (delta: 206.6 MB). Free memory was 775.9 MB in the beginning and 910.8 MB in the end (delta: -134.9 MB). Peak memory consumption was 173.5 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 135.66 ms. Allocated memory is still 1.2 GB. Free memory was 907.7 MB in the beginning and 831.9 MB in the end (delta: 75.8 MB). Peak memory consumption was 75.8 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 5553.56 ms. Allocated memory was 1.2 GB in the beginning and 1.6 GB in the end (delta: 406.3 MB). Free memory was 831.9 MB in the beginning and 1.0 GB in the end (delta: -206.6 MB). Peak memory consumption was 199.7 MB. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    1883 locations, 2420 edges
  - StatisticsResult: BuchiProgram size
    4508 locations, 7830 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 5 terminating modules (5 trivial, 0 deterministic, 0 nondeterministic). 5 modules have a trivial ranking function, the largest among these consists of 14 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 5.5s and 6 iterations.  TraceHistogramMax:2. Analysis of lassos took 0.7s. Construction of modules took 3.3s. BÃ¼chi inclusion checks took 0.9s. Highest rank in rank-based complementation 0. Minimization of det autom 5. Minimization of nondet autom 0. Automata minimization 0.1s AutomataMinimizationTime, 4 MinimizatonAttempts, 1909 StatesRemovedByMinimization, 3 NontrivialMinimizations. Non-live state removal took 0.1s Buchi closure took 0.0s. Biggest automaton had 3420 states and ocurred in iteration 1.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 17948 SDtfs, 19890 SDslu, 23921 SDs, 0 SdLazy, 32552 SolverSat, 3433 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 3.3s Time	LassoAnalysisResults: nont0 unkn0 SFLI0 SFLT0 conc0 concLT0 SILN0 SILU5 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - AllSpecificationsHoldResult: All specifications hold
    Buchi Automizer proved that the LTL property ! ( ( []( (call_approve_TokenERC200) ==> ( <>(success_approve_TokenERC200) ) ) )) holds
RESULT: Ultimate proved your program to be correct!
Received shutdown request...
