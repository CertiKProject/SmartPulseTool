This is Ultimate 0.1.24-f1553f5-m
[2020-11-25 05:53:56,730 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-25 05:53:56,731 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-25 05:53:56,744 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-25 05:53:56,745 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-25 05:53:56,745 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-25 05:53:56,746 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-25 05:53:56,748 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-25 05:53:56,749 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-25 05:53:56,750 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-25 05:53:56,751 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-25 05:53:56,751 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-25 05:53:56,752 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-25 05:53:56,752 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-25 05:53:56,753 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-25 05:53:56,754 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-25 05:53:56,754 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-25 05:53:56,755 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-25 05:53:56,757 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-25 05:53:56,758 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-25 05:53:56,759 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-25 05:53:56,759 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-25 05:53:56,761 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-25 05:53:56,761 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-25 05:53:56,761 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-25 05:53:56,762 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-25 05:53:56,762 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-25 05:53:56,763 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-25 05:53:56,763 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-25 05:53:56,763 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-25 05:53:56,764 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-25 05:53:56,764 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-25 05:53:56,765 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-25 05:53:56,765 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-25 05:53:56,766 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-25 05:53:56,766 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-25 05:53:56,767 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-25 05:53:56,767 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-25 05:53:56,767 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-25 05:53:56,768 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-25 05:53:56,768 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-25 05:53:56,768 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-25 05:53:56,776 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-25 05:53:56,777 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-25 05:53:56,777 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-25 05:53:56,777 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-25 05:53:56,778 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-25 05:53:56,778 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-25 05:53:56,778 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-25 05:53:56,778 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-25 05:53:56,778 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-25 05:53:56,778 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-25 05:53:56,778 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-25 05:53:56,778 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-25 05:53:56,778 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-25 05:53:56,779 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-25 05:53:56,779 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-25 05:53:56,779 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-25 05:53:56,779 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-25 05:53:56,779 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-25 05:53:56,779 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-25 05:53:56,779 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-25 05:53:56,779 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-25 05:53:56,779 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-25 05:53:56,779 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-25 05:53:56,780 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-25 05:53:56,780 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-25 05:53:56,780 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-25 05:53:56,808 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-25 05:53:56,822 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-25 05:53:56,824 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-25 05:53:56,826 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-25 05:53:56,826 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-25 05:53:56,826 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/StrikeFarm_0x8a309E9fb32055CB8ad3524C6e53A6C3480e66B7_transferfrom-self.bpl
[2020-11-25 05:53:56,827 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/StrikeFarm_0x8a309E9fb32055CB8ad3524C6e53A6C3480e66B7_transferfrom-self.bpl'
[2020-11-25 05:53:56,916 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-25 05:53:56,917 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-25 05:53:56,918 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-25 05:53:56,918 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-25 05:53:56,918 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-25 05:53:56,935 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "StrikeFarm_0x8a309E9fb32055CB8ad3524C6e53A6C3480e66B7_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:53:56" (1/1) ...
[2020-11-25 05:53:56,936 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "StrikeFarm_0x8a309E9fb32055CB8ad3524C6e53A6C3480e66B7_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:53:56" (1/1) ...
[2020-11-25 05:53:56,977 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "StrikeFarm_0x8a309E9fb32055CB8ad3524C6e53A6C3480e66B7_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:53:56" (1/1) ...
[2020-11-25 05:53:56,978 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "StrikeFarm_0x8a309E9fb32055CB8ad3524C6e53A6C3480e66B7_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:53:56" (1/1) ...
[2020-11-25 05:53:56,999 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "StrikeFarm_0x8a309E9fb32055CB8ad3524C6e53A6C3480e66B7_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:53:56" (1/1) ...
[2020-11-25 05:53:57,009 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "StrikeFarm_0x8a309E9fb32055CB8ad3524C6e53A6C3480e66B7_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:53:56" (1/1) ...
[2020-11-25 05:53:57,018 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "StrikeFarm_0x8a309E9fb32055CB8ad3524C6e53A6C3480e66B7_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:53:56" (1/1) ...
[2020-11-25 05:53:57,027 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-25 05:53:57,027 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-25 05:53:57,027 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-25 05:53:57,029 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-25 05:53:57,033 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "StrikeFarm_0x8a309E9fb32055CB8ad3524C6e53A6C3480e66B7_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:53:56" (1/1) ...
[2020-11-25 05:53:57,053 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(ERC20.transferFrom(from, to, value), (p1 != from || p2 != msg.sender) && from == to && value <= _balances_ERC20[this][from] && value <= _allowances_ERC20[this][from][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][to] >= 0 && _balances_ERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][from] >= 0 &&  _balances_ERC20[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _allowances_ERC20[this][from][msg.sender] >= 0 && _allowances_ERC20[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(ERC20.transferFrom(from, to, value), return == true && _allowances_ERC20[this][from][msg.sender] == old(_allowances_ERC20[this][from][msg.sender]) - value && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this]) && _balances_ERC20[this] == old(_balances_ERC20[this]) && _allowances_ERC20[this][p1][p2] == old(_allowances_ERC20[this][p1][p2]) && _total_StrikeFarm[this] == old(_total_StrikeFarm[this]) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this]) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this]) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]))))
[2020-11-25 05:53:57,059 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(ERC20.transferFrom(from, to, value), (p1 != from || p2 != msg.sender) && from == to && value <= _balances_ERC20[this][from] && value <= _allowances_ERC20[this][from][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][to] >= 0 && _balances_ERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][from] >= 0 &&  _balances_ERC20[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _allowances_ERC20[this][from][msg.sender] >= 0 && _allowances_ERC20[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(ERC20.transferFrom(from, to, value), return == true && _allowances_ERC20[this][from][msg.sender] == old(_allowances_ERC20[this][from][msg.sender]) - value && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this]) && _balances_ERC20[this] == old(_balances_ERC20[this]) && _allowances_ERC20[this][p1][p2] == old(_allowances_ERC20[this][p1][p2]) && _total_StrikeFarm[this] == old(_total_StrikeFarm[this]) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this]) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this]) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]))))
[2020-11-25 05:53:57,066 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(ERC20.transferFrom(from, to, value), (p1 != from || p2 != msg.sender) && from == to && value <= _balances_ERC20[this][from] && value <= _allowances_ERC20[this][from][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][to] >= 0 && _balances_ERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][from] >= 0 &&  _balances_ERC20[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _allowances_ERC20[this][from][msg.sender] >= 0 && _allowances_ERC20[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(ERC20.transferFrom(from, to, value), return == true && _allowances_ERC20[this][from][msg.sender] == old(_allowances_ERC20[this][from][msg.sender]) - value && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this]) && _balances_ERC20[this] == old(_balances_ERC20[this]) && _allowances_ERC20[this][p1][p2] == old(_allowances_ERC20[this][p1][p2]) && _total_StrikeFarm[this] == old(_total_StrikeFarm[this]) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this]) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this]) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]))))
[2020-11-25 05:53:57,074 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( ( ( ( ( p1!=sender_s211 || p2!=msg.sender ) && sender_s211==recipient_s211 ) && amount_s211<=_balances_ERC20[this][sender_s211] ) && amount_s211<=_allowances_ERC20[this][sender_s211][msg.sender] ) && amount_s211>=0 ) && amount_s211<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && _balances_ERC20[this][recipient_s211]>=0 ) && _balances_ERC20[this][recipient_s211]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && _balances_ERC20[this][sender_s211]>=0 ) && _balances_ERC20[this][sender_s211]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && _allowances_ERC20[this][sender_s211][msg.sender]>=0 ) && _allowances_ERC20[this][sender_s211][msg.sender]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICOR,BinaryExpression[COMPNEQ,IdentifierExpression[p1,GLOBAL],IdentifierExpression[sender_s211,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]],BinaryExpression[COMPNEQ,IdentifierExpression[p2,GLOBAL],IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],BinaryExpression[COMPEQ,IdentifierExpression[sender_s211,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>],IdentifierExpression[recipient_s211,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],BinaryExpression[COMPLEQ,IdentifierExpression[amount_s211,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>],ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[sender_s211,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]]]],BinaryExpression[COMPLEQ,IdentifierExpression[amount_s211,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>],ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_allowances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[sender_s211,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]]]],BinaryExpression[COMPGEQ,IdentifierExpression[amount_s211,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>],IntegerLiteral[0]]],BinaryExpression[COMPLT,IdentifierExpression[amount_s211,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[recipient_s211,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[recipient_s211,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[sender_s211,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[sender_s211,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_allowances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[sender_s211,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_allowances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[sender_s211,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]]
[2020-11-25 05:53:57,077 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( __ret_0_==true && _allowances_ERC20[this][sender_s211][msg.sender]==( ( old(_allowances_ERC20[this][sender_s211][msg.sender]) ) - amount_s211 ) ) && _totalSupply_ERC20[this]==( old(_totalSupply_ERC20[this]) ) ) && _balances_ERC20[this]==( old(_balances_ERC20[this]) ) ) && _allowances_ERC20[this][p1][p2]==( old(_allowances_ERC20[this][p1][p2]) ) ) && _total_StrikeFarm[this]==( old(_total_StrikeFarm[this]) ) ) && _name_ERC20Detailed[this]==( old(_name_ERC20Detailed[this]) ) ) && _symbol_ERC20Detailed[this]==( old(_symbol_ERC20Detailed[this]) ) ) && _decimals_ERC20Detailed[this]==( old(_decimals_ERC20Detailed[this]) ) ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[__ret_0_,<IMPLEMENTATION_OUTPARAM,transferFrom~address~address~uint256_ERC20>],BooleanLiteral[true]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_allowances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[sender_s211,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],BinaryExpression[ARITHMINUS,UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_allowances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[sender_s211,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]]],IdentifierExpression[amount_s211,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_totalSupply_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_totalSupply_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_allowances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[p1,GLOBAL]]],[IdentifierExpression[p2,GLOBAL]]],UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_allowances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[p1,GLOBAL]]],[IdentifierExpression[p2,GLOBAL]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_total_StrikeFarm,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_total_StrikeFarm,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_name_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_name_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_symbol_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_symbol_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_decimals_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_decimals_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]]]]]
[2020-11-25 05:53:57,083 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(ERC20.transferFrom(from, to, value), (p1 != from || p2 != msg.sender) && from == to && value <= _balances_ERC20[this][from] && value <= _allowances_ERC20[this][from][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][to] >= 0 && _balances_ERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][from] >= 0 &&  _balances_ERC20[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _allowances_ERC20[this][from][msg.sender] >= 0 && _allowances_ERC20[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(ERC20.transferFrom(from, to, value), return == true && _allowances_ERC20[this][from][msg.sender] == old(_allowances_ERC20[this][from][msg.sender]) - value && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this]) && _balances_ERC20[this] == old(_balances_ERC20[this]) && _allowances_ERC20[this][p1][p2] == old(_allowances_ERC20[this][p1][p2]) && _total_StrikeFarm[this] == old(_total_StrikeFarm[this]) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this]) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this]) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]))))
[2020-11-25 05:53:57,083 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_transferFrom_ERC200) ==> ( <>AP(success_transferFrom_ERC200) ) ) )
Executed UtopiaSpecLang
[2020-11-25 05:53:57,091 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 05:53:57 PropertyContainer
[2020-11-25 05:53:57,091 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-25 05:53:57,092 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-25 05:53:57,092 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-25 05:53:57,092 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-25 05:53:57,093 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "StrikeFarm_0x8a309E9fb32055CB8ad3524C6e53A6C3480e66B7_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:53:56" (1/2) ...
[2020-11-25 05:53:57,093 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-25 05:53:57,093 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-25 05:53:57,108 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 05:53:57" (2/2) ...
[2020-11-25 05:53:57,108 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-25 05:53:57,109 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-25 05:53:57,109 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-25 05:53:57,109 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-25 05:53:57,110 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "StrikeFarm_0x8a309E9fb32055CB8ad3524C6e53A6C3480e66B7_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:53:56" (1/2) ...
[2020-11-25 05:53:57,163 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-25 05:53:57,164 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20_NoBaseCtor__success
[2020-11-25 05:53:57,164 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20
[2020-11-25 05:53:57,164 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20
[2020-11-25 05:53:57,164 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_IERC20
[2020-11-25 05:53:57,164 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_IERC20
[2020-11-25 05:53:57,164 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_IERC20
[2020-11-25 05:53:57,164 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_IERC20
[2020-11-25 05:53:57,164 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_IERC20
[2020-11-25 05:53:57,164 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_IERC20
[2020-11-25 05:53:57,165 INFO  L130     BoogieDeclarations]: Found specification of procedure Context_Context_NoBaseCtor__success
[2020-11-25 05:53:57,165 INFO  L130     BoogieDeclarations]: Found specification of procedure Context_Context
[2020-11-25 05:53:57,165 INFO  L138     BoogieDeclarations]: Found implementation of procedure Context_Context
[2020-11-25 05:53:57,165 INFO  L130     BoogieDeclarations]: Found specification of procedure _msgSender_Context__success
[2020-11-25 05:53:57,165 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20_NoBaseCtor__success
[2020-11-25 05:53:57,165 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20
[2020-11-25 05:53:57,166 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20
[2020-11-25 05:53:57,166 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20
[2020-11-25 05:53:57,166 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ERC20
[2020-11-25 05:53:57,166 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20
[2020-11-25 05:53:57,166 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ERC20
[2020-11-25 05:53:57,166 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20
[2020-11-25 05:53:57,166 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20
[2020-11-25 05:53:57,166 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20
[2020-11-25 05:53:57,167 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ERC20
[2020-11-25 05:53:57,167 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20
[2020-11-25 05:53:57,167 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ERC20
[2020-11-25 05:53:57,167 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20
[2020-11-25 05:53:57,167 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20
[2020-11-25 05:53:57,167 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_ERC20
[2020-11-25 05:53:57,167 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_ERC20
[2020-11-25 05:53:57,167 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_ERC20
[2020-11-25 05:53:57,167 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_ERC20
[2020-11-25 05:53:57,167 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_ERC20__success
[2020-11-25 05:53:57,167 INFO  L130     BoogieDeclarations]: Found specification of procedure _mint~address~uint256_ERC20__success
[2020-11-25 05:53:57,167 INFO  L130     BoogieDeclarations]: Found specification of procedure _burn~address~uint256_ERC20__success
[2020-11-25 05:53:57,167 INFO  L130     BoogieDeclarations]: Found specification of procedure _approve~address~address~uint256_ERC20__success
[2020-11-25 05:53:57,168 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed_NoBaseCtor__success
[2020-11-25 05:53:57,168 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed
[2020-11-25 05:53:57,168 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed
[2020-11-25 05:53:57,168 INFO  L130     BoogieDeclarations]: Found specification of procedure name_ERC20Detailed
[2020-11-25 05:53:57,168 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_ERC20Detailed
[2020-11-25 05:53:57,168 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_ERC20Detailed
[2020-11-25 05:53:57,168 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_ERC20Detailed
[2020-11-25 05:53:57,168 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_ERC20Detailed
[2020-11-25 05:53:57,168 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_ERC20Detailed
[2020-11-25 05:53:57,168 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 05:53:57,168 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath
[2020-11-25 05:53:57,168 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath
[2020-11-25 05:53:57,169 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__success
[2020-11-25 05:53:57,169 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__success
[2020-11-25 05:53:57,169 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256~string_SafeMath__success
[2020-11-25 05:53:57,169 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__success
[2020-11-25 05:53:57,169 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256_SafeMath__success
[2020-11-25 05:53:57,169 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256~string_SafeMath__success
[2020-11-25 05:53:57,169 INFO  L130     BoogieDeclarations]: Found specification of procedure StrikeFarm_StrikeFarm_NoBaseCtor__success
[2020-11-25 05:53:57,169 INFO  L130     BoogieDeclarations]: Found specification of procedure StrikeFarm_StrikeFarm
[2020-11-25 05:53:57,169 INFO  L138     BoogieDeclarations]: Found implementation of procedure StrikeFarm_StrikeFarm
[2020-11-25 05:53:57,169 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-25 05:53:57,169 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-25 05:53:57,169 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-25 05:53:57,170 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_IERC20
[2020-11-25 05:53:57,170 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_IERC20
[2020-11-25 05:53:57,170 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_Context
[2020-11-25 05:53:57,170 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_Context
[2020-11-25 05:53:57,170 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20
[2020-11-25 05:53:57,170 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20
[2020-11-25 05:53:57,170 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20Detailed
[2020-11-25 05:53:57,170 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20Detailed
[2020-11-25 05:53:57,170 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_SafeMath
[2020-11-25 05:53:57,170 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_SafeMath
[2020-11-25 05:53:57,171 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_StrikeFarm
[2020-11-25 05:53:57,171 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-25 05:53:57,171 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-25 05:53:57,171 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20_NoBaseCtor__fail
[2020-11-25 05:53:57,171 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20__success
[2020-11-25 05:53:57,171 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20__fail
[2020-11-25 05:53:57,171 INFO  L130     BoogieDeclarations]: Found specification of procedure Context_Context_NoBaseCtor__fail
[2020-11-25 05:53:57,171 INFO  L130     BoogieDeclarations]: Found specification of procedure Context_Context__success
[2020-11-25 05:53:57,171 INFO  L130     BoogieDeclarations]: Found specification of procedure Context_Context__fail
[2020-11-25 05:53:57,171 INFO  L130     BoogieDeclarations]: Found specification of procedure _msgSender_Context__fail
[2020-11-25 05:53:57,172 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20_NoBaseCtor__fail
[2020-11-25 05:53:57,172 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20__success
[2020-11-25 05:53:57,172 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20__fail
[2020-11-25 05:53:57,172 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20__success
[2020-11-25 05:53:57,172 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20__fail
[2020-11-25 05:53:57,172 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20__success
[2020-11-25 05:53:57,172 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20__fail
[2020-11-25 05:53:57,172 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20__success
[2020-11-25 05:53:57,173 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20__fail
[2020-11-25 05:53:57,173 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20__success
[2020-11-25 05:53:57,173 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20__fail
[2020-11-25 05:53:57,173 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20__success
[2020-11-25 05:53:57,173 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20__fail
[2020-11-25 05:53:57,173 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20__success
[2020-11-25 05:53:57,173 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20__fail
[2020-11-25 05:53:57,173 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_ERC20__success
[2020-11-25 05:53:57,173 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_ERC20__fail
[2020-11-25 05:53:57,173 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_ERC20__success
[2020-11-25 05:53:57,173 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_ERC20__fail
[2020-11-25 05:53:57,174 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_ERC20__fail
[2020-11-25 05:53:57,174 INFO  L130     BoogieDeclarations]: Found specification of procedure _mint~address~uint256_ERC20__fail
[2020-11-25 05:53:57,174 INFO  L130     BoogieDeclarations]: Found specification of procedure _burn~address~uint256_ERC20__fail
[2020-11-25 05:53:57,174 INFO  L130     BoogieDeclarations]: Found specification of procedure _approve~address~address~uint256_ERC20__fail
[2020-11-25 05:53:57,174 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed_NoBaseCtor__fail
[2020-11-25 05:53:57,174 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed__success
[2020-11-25 05:53:57,174 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed__fail
[2020-11-25 05:53:57,174 INFO  L130     BoogieDeclarations]: Found specification of procedure name_ERC20Detailed__success
[2020-11-25 05:53:57,174 INFO  L130     BoogieDeclarations]: Found specification of procedure name_ERC20Detailed__fail
[2020-11-25 05:53:57,174 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_ERC20Detailed__success
[2020-11-25 05:53:57,175 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_ERC20Detailed__fail
[2020-11-25 05:53:57,175 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_ERC20Detailed__success
[2020-11-25 05:53:57,175 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_ERC20Detailed__fail
[2020-11-25 05:53:57,175 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 05:53:57,175 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__success
[2020-11-25 05:53:57,175 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__fail
[2020-11-25 05:53:57,175 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__fail
[2020-11-25 05:53:57,175 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-25 05:53:57,175 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256~string_SafeMath__fail
[2020-11-25 05:53:57,176 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-25 05:53:57,176 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256_SafeMath__fail
[2020-11-25 05:53:57,176 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256~string_SafeMath__fail
[2020-11-25 05:53:57,176 INFO  L130     BoogieDeclarations]: Found specification of procedure StrikeFarm_StrikeFarm_NoBaseCtor__fail
[2020-11-25 05:53:57,176 INFO  L130     BoogieDeclarations]: Found specification of procedure StrikeFarm_StrikeFarm__success
[2020-11-25 05:53:57,176 INFO  L130     BoogieDeclarations]: Found specification of procedure StrikeFarm_StrikeFarm__fail
[2020-11-25 05:53:57,176 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-25 05:53:57,176 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-25 05:53:57,176 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-25 05:53:57,176 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-25 05:53:57,177 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-25 05:53:57,177 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20_NoBaseCtor__fail
[2020-11-25 05:53:57,177 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20_NoBaseCtor__success
[2020-11-25 05:53:57,177 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20__fail
[2020-11-25 05:53:57,177 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20__success
[2020-11-25 05:53:57,177 INFO  L138     BoogieDeclarations]: Found implementation of procedure Context_Context_NoBaseCtor__fail
[2020-11-25 05:53:57,177 INFO  L138     BoogieDeclarations]: Found implementation of procedure Context_Context_NoBaseCtor__success
[2020-11-25 05:53:57,177 INFO  L138     BoogieDeclarations]: Found implementation of procedure Context_Context__fail
[2020-11-25 05:53:57,177 INFO  L138     BoogieDeclarations]: Found implementation of procedure Context_Context__success
[2020-11-25 05:53:57,178 INFO  L138     BoogieDeclarations]: Found implementation of procedure _msgSender_Context__fail
[2020-11-25 05:53:57,178 INFO  L138     BoogieDeclarations]: Found implementation of procedure _msgSender_Context__success
[2020-11-25 05:53:57,178 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20_NoBaseCtor__fail
[2020-11-25 05:53:57,178 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20_NoBaseCtor__success
[2020-11-25 05:53:57,178 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20__fail
[2020-11-25 05:53:57,178 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20__success
[2020-11-25 05:53:57,178 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ERC20__fail
[2020-11-25 05:53:57,178 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ERC20__success
[2020-11-25 05:53:57,179 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ERC20__fail
[2020-11-25 05:53:57,179 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ERC20__success
[2020-11-25 05:53:57,179 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20__fail
[2020-11-25 05:53:57,179 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20__success
[2020-11-25 05:53:57,179 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ERC20__fail
[2020-11-25 05:53:57,179 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ERC20__success
[2020-11-25 05:53:57,179 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ERC20__fail
[2020-11-25 05:53:57,179 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ERC20__success
[2020-11-25 05:53:57,179 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20__fail
[2020-11-25 05:53:57,179 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20__success
[2020-11-25 05:53:57,180 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_ERC20__fail
[2020-11-25 05:53:57,180 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_ERC20__success
[2020-11-25 05:53:57,180 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_ERC20__fail
[2020-11-25 05:53:57,180 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_ERC20__success
[2020-11-25 05:53:57,180 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_ERC20__fail
[2020-11-25 05:53:57,180 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_ERC20__success
[2020-11-25 05:53:57,180 INFO  L138     BoogieDeclarations]: Found implementation of procedure _mint~address~uint256_ERC20__fail
[2020-11-25 05:53:57,180 INFO  L138     BoogieDeclarations]: Found implementation of procedure _mint~address~uint256_ERC20__success
[2020-11-25 05:53:57,180 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burn~address~uint256_ERC20__fail
[2020-11-25 05:53:57,180 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burn~address~uint256_ERC20__success
[2020-11-25 05:53:57,181 INFO  L138     BoogieDeclarations]: Found implementation of procedure _approve~address~address~uint256_ERC20__fail
[2020-11-25 05:53:57,181 INFO  L138     BoogieDeclarations]: Found implementation of procedure _approve~address~address~uint256_ERC20__success
[2020-11-25 05:53:57,181 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed_NoBaseCtor__fail
[2020-11-25 05:53:57,181 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed_NoBaseCtor__success
[2020-11-25 05:53:57,181 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed__fail
[2020-11-25 05:53:57,181 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed__success
[2020-11-25 05:53:57,181 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_ERC20Detailed__fail
[2020-11-25 05:53:57,181 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_ERC20Detailed__success
[2020-11-25 05:53:57,181 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_ERC20Detailed__fail
[2020-11-25 05:53:57,181 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_ERC20Detailed__success
[2020-11-25 05:53:57,181 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_ERC20Detailed__fail
[2020-11-25 05:53:57,182 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_ERC20Detailed__success
[2020-11-25 05:53:57,182 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 05:53:57,182 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 05:53:57,182 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__fail
[2020-11-25 05:53:57,182 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__success
[2020-11-25 05:53:57,182 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__fail
[2020-11-25 05:53:57,182 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__success
[2020-11-25 05:53:57,182 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-25 05:53:57,182 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__success
[2020-11-25 05:53:57,182 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256~string_SafeMath__fail
[2020-11-25 05:53:57,182 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256~string_SafeMath__success
[2020-11-25 05:53:57,183 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-25 05:53:57,183 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__success
[2020-11-25 05:53:57,183 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256_SafeMath__fail
[2020-11-25 05:53:57,183 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256_SafeMath__success
[2020-11-25 05:53:57,183 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256~string_SafeMath__fail
[2020-11-25 05:53:57,183 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256~string_SafeMath__success
[2020-11-25 05:53:57,183 INFO  L138     BoogieDeclarations]: Found implementation of procedure StrikeFarm_StrikeFarm_NoBaseCtor__fail
[2020-11-25 05:53:57,183 INFO  L138     BoogieDeclarations]: Found implementation of procedure StrikeFarm_StrikeFarm_NoBaseCtor__success
[2020-11-25 05:53:57,183 INFO  L138     BoogieDeclarations]: Found implementation of procedure StrikeFarm_StrikeFarm__fail
[2020-11-25 05:53:57,183 INFO  L138     BoogieDeclarations]: Found implementation of procedure StrikeFarm_StrikeFarm__success
[2020-11-25 05:53:57,183 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-25 05:53:57,184 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-25 05:53:57,184 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-25 05:53:57,184 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-25 05:53:57,184 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-25 05:53:57,184 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-25 05:53:57,184 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_IERC20
[2020-11-25 05:53:57,184 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_IERC20
[2020-11-25 05:53:57,184 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_Context
[2020-11-25 05:53:57,184 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_Context
[2020-11-25 05:53:57,184 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20
[2020-11-25 05:53:57,184 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20
[2020-11-25 05:53:57,185 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20Detailed
[2020-11-25 05:53:57,185 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20Detailed
[2020-11-25 05:53:57,185 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_SafeMath
[2020-11-25 05:53:57,185 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_SafeMath
[2020-11-25 05:53:57,185 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_StrikeFarm
[2020-11-25 05:53:57,185 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-25 05:53:57,185 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-25 05:53:57,185 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-25 05:53:57,560 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 05:53:57,560 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 05:53:57,560 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 05:53:57,669 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 05:53:57,901 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-25 05:53:57,902 INFO  L286             CfgBuilder]: Removed 6 assue(true) statements.
[2020-11-25 05:53:57,904 INFO  L202        PluginConnector]: Adding new model StrikeFarm_0x8a309E9fb32055CB8ad3524C6e53A6C3480e66B7_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 05:53:57 BoogieIcfgContainer
[2020-11-25 05:53:57,904 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 05:53:57" (2/2) ...
[2020-11-25 05:53:57,904 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-25 05:53:57,904 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@1f61ff6a and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 05:53:57, skipping insertion in model container
[2020-11-25 05:53:57,904 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-25 05:53:57,905 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-25 05:53:57,905 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-25 05:53:57,906 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-25 05:53:57,906 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "StrikeFarm_0x8a309E9fb32055CB8ad3524C6e53A6C3480e66B7_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:53:56" (1/3) ...
[2020-11-25 05:53:57,907 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@6659d78f and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 05:53:57, skipping insertion in model container
[2020-11-25 05:53:57,907 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 05:53:57" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-25 05:53:57,946 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 05:53:57 NWAContainer
[2020-11-25 05:53:57,947 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-25 05:53:57,947 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-25 05:53:57,947 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-25 05:53:57,948 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-25 05:53:57,949 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "StrikeFarm_0x8a309E9fb32055CB8ad3524C6e53A6C3480e66B7_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 05:53:57" (3/4) ...
[2020-11-25 05:53:57,949 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@3f767102 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 05:53:57, skipping insertion in model container
[2020-11-25 05:53:57,950 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 05:53:57" (4/4) ...
[2020-11-25 05:53:57,953 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-25 05:53:57,957 INFO  L110   BuchiProductObserver]: Initial RCFG 1477 locations, 2079 edges
[2020-11-25 05:53:57,958 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-25 05:53:57,970 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-25 05:53:59,408 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-25 05:53:59,415 INFO  L110   BuchiProductObserver]: BuchiProgram size 3736 locations, 6791 edges
[2020-11-25 05:53:59,415 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 05:53:59 BoogieIcfgContainer
[2020-11-25 05:53:59,416 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-25 05:53:59,416 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-25 05:53:59,416 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-25 05:53:59,418 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-25 05:53:59,419 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 05:53:59" (1/1) ...
[2020-11-25 05:53:59,504 WARN  L196         IcfgDuplicator]: Creating raw copy for unreachable call because return is reachable in graph view: call __var_25 := div~uint256~uint256~string_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, a_s626, b_s626, -1445521449);
[2020-11-25 05:53:59,508 WARN  L196         IcfgDuplicator]: Creating raw copy for unreachable call because return is reachable in graph view: call __var_25 := div~uint256~uint256~string_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, a_s626, b_s626, -1445521449);
[2020-11-25 05:53:59,522 INFO  L313           BlockEncoder]: Initial Icfg 3736 locations, 6791 edges
[2020-11-25 05:53:59,523 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-25 05:53:59,523 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-25 05:53:59,523 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-25 05:53:59,524 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-25 05:53:59,538 INFO  L70    emoveInfeasibleEdges]: Removed 150 edges and 15 locations because of local infeasibility
[2020-11-25 05:53:59,547 INFO  L70        RemoveSinkStates]: Removed 98 edges and 65 locations by removing sink states
[2020-11-25 05:53:59,560 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-25 05:53:59,564 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-25 05:53:59,569 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-25 05:53:59,570 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-25 05:53:59,575 INFO  L313           BlockEncoder]: Encoded RCFG 3636 locations, 6514 edges
[2020-11-25 05:53:59,575 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 05:53:59 BasicIcfg
[2020-11-25 05:53:59,575 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-25 05:53:59,576 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-25 05:53:59,576 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-25 05:53:59,579 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-25 05:53:59,580 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 05:53:59,580 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "StrikeFarm_0x8a309E9fb32055CB8ad3524C6e53A6C3480e66B7_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:53:56" (1/6) ...
[2020-11-25 05:53:59,583 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@37543ce6 and model type StrikeFarm_0x8a309E9fb32055CB8ad3524C6e53A6C3480e66B7_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 05:53:59, skipping insertion in model container
[2020-11-25 05:53:59,584 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 05:53:59,584 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 05:53:57" (2/6) ...
[2020-11-25 05:53:59,584 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@37543ce6 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 05:53:59, skipping insertion in model container
[2020-11-25 05:53:59,584 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 05:53:59,585 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "StrikeFarm_0x8a309E9fb32055CB8ad3524C6e53A6C3480e66B7_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 05:53:57" (3/6) ...
[2020-11-25 05:53:59,585 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@37543ce6 and model type StrikeFarm_0x8a309E9fb32055CB8ad3524C6e53A6C3480e66B7_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 05:53:59, skipping insertion in model container
[2020-11-25 05:53:59,585 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 05:53:59,585 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 05:53:57" (4/6) ...
[2020-11-25 05:53:59,586 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@37543ce6 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 05:53:59, skipping insertion in model container
[2020-11-25 05:53:59,586 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 05:53:59,586 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 05:53:59" (5/6) ...
[2020-11-25 05:53:59,586 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@37543ce6 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 25.11 05:53:59, skipping insertion in model container
[2020-11-25 05:53:59,587 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 05:53:59,587 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 05:53:59" (6/6) ...
[2020-11-25 05:53:59,588 INFO  L404   chiAutomizerObserver]: Analyzing ICFG StrikeFarm_0x8a309E9fb32055CB8ad3524C6e53A6C3480e66B7_transferfrom-self.bpl_BEv2
[2020-11-25 05:53:59,626 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-25 05:53:59,626 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-25 05:53:59,628 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-25 05:53:59,628 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-25 05:53:59,629 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-25 05:53:59,629 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-25 05:53:59,629 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-25 05:53:59,629 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-25 05:53:59,629 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-25 05:53:59,663 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3636 states.
[2020-11-25 05:53:59,701 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 05:53:59,701 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 05:53:59,701 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 05:53:59,707 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 05:53:59,707 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 05:53:59,708 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-25 05:53:59,708 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3636 states.
[2020-11-25 05:53:59,721 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 05:53:59,721 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 05:53:59,721 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 05:53:59,723 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 05:53:59,723 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transferFrom_ERC200 := false;
[L3]                 call_transferFrom_ERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L4109]              assume null == 0;
[L4110]  CALL        call this := FreshRefGenerator__success();
[L1524]              havoc newRef;
[L1525]              assume Alloc[newRef] == false;
[L1526]              Alloc[newRef] := true;
[L1527]              assume newRef != null;
[L4110]  RET         call this := FreshRefGenerator__success();
[L4111]              assume now >= 0;
[L4112]              assume DType[this] == StrikeFarm;
[L4113]              assume msgvalue_MSG == 0;
[L4114]              gas := gas - 53000;
[L4115]  CALL        call StrikeFarm_StrikeFarm(this, msgsender_MSG, msgvalue_MSG);
[L1002]              havoc __exception;
[L1003]              revert := false;
[L1004]  COND FALSE  !(__exception)
[L1026]  CALL        call StrikeFarm_StrikeFarm__success(this, msgsender_MSG, msgvalue_MSG);
[L2726]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L1588]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1573]              assume msgsender_MSG != null;
[L1574]              Balance[this] := 0;
[L1588]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1589]  COND FALSE  !(revert)
[L2726]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2727]  COND TRUE   revert
[L1026]  RET         call StrikeFarm_StrikeFarm__success(this, msgsender_MSG, msgvalue_MSG);
[L1027]              assume !revert && gas >= 0;
[L4115]  RET         call StrikeFarm_StrikeFarm(this, msgsender_MSG, msgvalue_MSG);
[L4116]              assume !revert && gas >= 0;

Loop:
[L4119]  CALL        call CorralChoice_StrikeFarm(this);
[L3985]              havoc msgsender_MSG;
[L3986]              havoc msgvalue_MSG;
[L3987]              havoc choice;
[L3988]              havoc __ret_0_totalSupply;
[L3989]              havoc account_s121;
[L3990]              havoc __ret_0_balanceOf;
[L3991]              havoc recipient_s140;
[L3992]              havoc amount_s140;
[L3993]              havoc __ret_0_transfer;
[L3994]              havoc owner_s156;
[L3995]              havoc spender_s156;
[L3996]              havoc __ret_0_allowance;
[L3997]              havoc spender_s175;
[L3998]              havoc amount_s175;
[L3999]              havoc __ret_0_approve;
[L4000]              havoc sender_s211;
[L4001]              havoc recipient_s211;
[L4002]              havoc amount_s211;
[L4003]              havoc __ret_0_transferFrom;
[L4004]              havoc spender_s238;
[L4005]              havoc addedValue_s238;
[L4006]              havoc __ret_0_increaseAllowance;
[L4007]              havoc spender_s266;
[L4008]              havoc subtractedValue_s266;
[L4009]              havoc __ret_0_decreaseAllowance;
[L4010]              havoc name_s483;
[L4011]              havoc symbol_s483;
[L4012]              havoc decimals_s483;
[L4013]              havoc __ret_0_name;
[L4014]              havoc __ret_0_symbol;
[L4015]              havoc __ret_0_decimals;
[L4016]              havoc tmpNow;
[L4017]              havoc gas;
[L4018]              assume gas > 4000000 && gas <= 8000000;
[L4019]              tmpNow := now;
[L4020]              havoc now;
[L4021]              assume now > tmpNow;
[L4022]              assume msgsender_MSG != null;
[L4023]              assume DType[msgsender_MSG] != IERC20;
[L4024]              assume DType[msgsender_MSG] != Context;
[L4025]              assume DType[msgsender_MSG] != ERC20;
[L4026]              assume DType[msgsender_MSG] != ERC20Detailed;
[L4027]              assume DType[msgsender_MSG] != SafeMath;
[L4028]              assume DType[msgsender_MSG] != StrikeFarm;
[L4029]              Alloc[msgsender_MSG] := true;
[L4030]  COND TRUE   choice == 11
[L4031]              gas := gas - 21000;
[L4032]  COND FALSE  !(gas >= 0)
[L4119]  RET         call CorralChoice_StrikeFarm(this);

[2020-11-25 05:53:59,735 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 05:53:59,735 INFO  L82        PathProgramCache]: Analyzing trace with hash -1439393867, now seen corresponding path program 1 times
[2020-11-25 05:53:59,739 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 05:53:59,755 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 05:53:59,785 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 05:53:59,786 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 05:53:59,787 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 05:53:59,789 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 05:53:59,950 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 05:53:59,950 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 05:53:59,951 INFO  L87              Difference]: Start difference. First operand 3636 states. Second operand 4 states.
[2020-11-25 05:54:00,269 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 05:54:00,269 INFO  L93              Difference]: Finished difference Result 2195 states and 2638 transitions.
[2020-11-25 05:54:00,269 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 05:54:00,270 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2195 states and 2638 transitions.
[2020-11-25 05:54:00,281 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 05:54:00,296 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2195 states to 2195 states and 2638 transitions.
[2020-11-25 05:54:00,297 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 4
[2020-11-25 05:54:00,299 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 477
[2020-11-25 05:54:00,300 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2195 states and 2638 transitions.
[2020-11-25 05:54:00,307 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 05:54:00,308 INFO  L728         BuchiCegarLoop]: Abstraction has 2195 states and 2638 transitions.
[2020-11-25 05:54:00,323 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2195 states and 2638 transitions.
[2020-11-25 05:54:00,363 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2195 to 2195.
[2020-11-25 05:54:00,363 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2195 states.
[2020-11-25 05:54:00,368 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2195 states to 2195 states and 2638 transitions.
[2020-11-25 05:54:00,368 INFO  L751         BuchiCegarLoop]: Abstraction has 2195 states and 2638 transitions.
[2020-11-25 05:54:00,368 INFO  L631         BuchiCegarLoop]: Abstraction has 2195 states and 2638 transitions.
[2020-11-25 05:54:00,369 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-25 05:54:00,369 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2195 states and 2638 transitions.
[2020-11-25 05:54:00,374 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 05:54:00,374 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 05:54:00,374 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 05:54:00,376 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 05:54:00,376 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transferFrom_ERC200 := false;
[L3]                 call_transferFrom_ERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L4109]              assume null == 0;
[L4110]  CALL        call this := FreshRefGenerator__success();
[L1524]              havoc newRef;
[L1525]              assume Alloc[newRef] == false;
[L1526]              Alloc[newRef] := true;
[L1527]              assume newRef != null;
[L4110]  RET         call this := FreshRefGenerator__success();
[L4111]              assume now >= 0;
[L4112]              assume DType[this] == StrikeFarm;
[L4113]              assume msgvalue_MSG == 0;
[L4114]              gas := gas - 53000;
[L4115]  CALL        call StrikeFarm_StrikeFarm(this, msgsender_MSG, msgvalue_MSG);
[L1002]              havoc __exception;
[L1003]              revert := false;
[L1004]  COND FALSE  !(__exception)
[L1026]  CALL        call StrikeFarm_StrikeFarm__success(this, msgsender_MSG, msgvalue_MSG);
[L2726]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L1588]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1573]              assume msgsender_MSG != null;
[L1574]              Balance[this] := 0;
[L1588]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1589]  COND FALSE  !(revert)
[L2726]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2727]  COND TRUE   revert
[L1026]  RET         call StrikeFarm_StrikeFarm__success(this, msgsender_MSG, msgvalue_MSG);
[L1027]              assume !revert && gas >= 0;
[L4115]  RET         call StrikeFarm_StrikeFarm(this, msgsender_MSG, msgvalue_MSG);
[L4116]              assume !revert && gas >= 0;
[L4119]  CALL        call CorralChoice_StrikeFarm(this);
[L3985]              havoc msgsender_MSG;
[L3986]              havoc msgvalue_MSG;
[L3987]              havoc choice;
[L3988]              havoc __ret_0_totalSupply;
[L3989]              havoc account_s121;
[L3990]              havoc __ret_0_balanceOf;
[L3991]              havoc recipient_s140;
[L3992]              havoc amount_s140;
[L3993]              havoc __ret_0_transfer;
[L3994]              havoc owner_s156;
[L3995]              havoc spender_s156;
[L3996]              havoc __ret_0_allowance;
[L3997]              havoc spender_s175;
[L3998]              havoc amount_s175;
[L3999]              havoc __ret_0_approve;
[L4000]              havoc sender_s211;
[L4001]              havoc recipient_s211;
[L4002]              havoc amount_s211;
[L4003]              havoc __ret_0_transferFrom;
[L4004]              havoc spender_s238;
[L4005]              havoc addedValue_s238;
[L4006]              havoc __ret_0_increaseAllowance;
[L4007]              havoc spender_s266;
[L4008]              havoc subtractedValue_s266;
[L4009]              havoc __ret_0_decreaseAllowance;
[L4010]              havoc name_s483;
[L4011]              havoc symbol_s483;
[L4012]              havoc decimals_s483;
[L4013]              havoc __ret_0_name;
[L4014]              havoc __ret_0_symbol;
[L4015]              havoc __ret_0_decimals;
[L4016]              havoc tmpNow;
[L4017]              havoc gas;
[L4018]              assume gas > 4000000 && gas <= 8000000;
[L4019]              tmpNow := now;
[L4020]              havoc now;
[L4021]              assume now > tmpNow;
[L4022]              assume msgsender_MSG != null;
[L4023]              assume DType[msgsender_MSG] != IERC20;
[L4024]              assume DType[msgsender_MSG] != Context;
[L4025]              assume DType[msgsender_MSG] != ERC20;
[L4026]              assume DType[msgsender_MSG] != ERC20Detailed;
[L4027]              assume DType[msgsender_MSG] != SafeMath;
[L4028]              assume DType[msgsender_MSG] != StrikeFarm;
[L4029]              Alloc[msgsender_MSG] := true;
[L4030]  COND FALSE  !(choice == 11)
[L4036]  COND FALSE  !(choice == 10)
[L4042]  COND FALSE  !(choice == 9)
[L4049]  COND FALSE  !(choice == 8)
[L4055]  COND FALSE  !(choice == 7)
[L4062]  COND TRUE   choice == 6
[L4063]              gas := gas - 21000;
[L4064]  COND TRUE   gas >= 0
[L4065]              assume amount_s211 >= 0 && amount_s211 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4066]              assume msgvalue_MSG == 0;
[L4067]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, sender_s211, recipient_s211, amount_s211);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != sender_s211 || p2 != msgsender_MSG) && sender_s211 == recipient_s211) && amount_s211 <= _balances_ERC20[this][sender_s211]) && amount_s211 <= _allowances_ERC20[this][sender_s211][msgsender_MSG]) && amount_s211 >= 0) && amount_s211 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s211] >= 0) && _balances_ERC20[this][recipient_s211] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][sender_s211] >= 0) && _balances_ERC20[this][sender_s211] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowances_ERC20[this][sender_s211][msgsender_MSG] >= 0) && _allowances_ERC20[this][sender_s211][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_ERC200 := true;
[L3]                 call_transferFrom_ERC200 := false;
[L3]                 revert := revert_hold;
[L519]               havoc __exception;
[L520]               revert := false;
[L521]   COND FALSE  !(__exception)
[L543]   CALL        call __ret_0_ := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s211, recipient_s211, amount_s211);
[L1902]  COND TRUE   DType[this] == StrikeFarm
[L1903]  CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s211, recipient_s211, amount_s211);
[L2208]              __var_12 := null;
[L2209]  COND TRUE   !(sender_s323 != null)
[L2210]              revert := true;
[L1903]  RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s211, recipient_s211, amount_s211);
[L1904]  COND TRUE   revert
[L543]   RET         call __ret_0_ := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s211, recipient_s211, amount_s211);
[L544]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !((((((((__ret_0_ == true && _allowances_ERC20[this][sender_s211][msgsender_MSG] == old(_allowances_ERC20[this][sender_s211][msgsender_MSG]) - amount_s211) && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _balances_ERC20[this] == old(_balances_ERC20[this])) && _allowances_ERC20[this][p1][p2] == old(_allowances_ERC20[this][p1][p2])) && _total_StrikeFarm[this] == old(_total_StrikeFarm[this])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]));
[L3]                 revert := revert_hold;
[L4067]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, sender_s211, recipient_s211, amount_s211);
[L4119]  RET         call CorralChoice_StrikeFarm(this);

Loop:
[L4119]  CALL        call CorralChoice_StrikeFarm(this);
[L3985]              havoc msgsender_MSG;
[L3986]              havoc msgvalue_MSG;
[L3987]              havoc choice;
[L3988]              havoc __ret_0_totalSupply;
[L3989]              havoc account_s121;
[L3990]              havoc __ret_0_balanceOf;
[L3991]              havoc recipient_s140;
[L3992]              havoc amount_s140;
[L3993]              havoc __ret_0_transfer;
[L3994]              havoc owner_s156;
[L3995]              havoc spender_s156;
[L3996]              havoc __ret_0_allowance;
[L3997]              havoc spender_s175;
[L3998]              havoc amount_s175;
[L3999]              havoc __ret_0_approve;
[L4000]              havoc sender_s211;
[L4001]              havoc recipient_s211;
[L4002]              havoc amount_s211;
[L4003]              havoc __ret_0_transferFrom;
[L4004]              havoc spender_s238;
[L4005]              havoc addedValue_s238;
[L4006]              havoc __ret_0_increaseAllowance;
[L4007]              havoc spender_s266;
[L4008]              havoc subtractedValue_s266;
[L4009]              havoc __ret_0_decreaseAllowance;
[L4010]              havoc name_s483;
[L4011]              havoc symbol_s483;
[L4012]              havoc decimals_s483;
[L4013]              havoc __ret_0_name;
[L4014]              havoc __ret_0_symbol;
[L4015]              havoc __ret_0_decimals;
[L4016]              havoc tmpNow;
[L4017]              havoc gas;
[L4018]              assume gas > 4000000 && gas <= 8000000;
[L4019]              tmpNow := now;
[L4020]              havoc now;
[L4021]              assume now > tmpNow;
[L4022]              assume msgsender_MSG != null;
[L4023]              assume DType[msgsender_MSG] != IERC20;
[L4024]              assume DType[msgsender_MSG] != Context;
[L4025]              assume DType[msgsender_MSG] != ERC20;
[L4026]              assume DType[msgsender_MSG] != ERC20Detailed;
[L4027]              assume DType[msgsender_MSG] != SafeMath;
[L4028]              assume DType[msgsender_MSG] != StrikeFarm;
[L4029]              Alloc[msgsender_MSG] := true;
[L4030]  COND FALSE  !(choice == 11)
[L4036]  COND FALSE  !(choice == 10)
[L4042]  COND FALSE  !(choice == 9)
[L4049]  COND FALSE  !(choice == 8)
[L4055]  COND FALSE  !(choice == 7)
[L4062]  COND TRUE   choice == 6
[L4063]              gas := gas - 21000;
[L4064]  COND TRUE   gas >= 0
[L4065]              assume amount_s211 >= 0 && amount_s211 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4066]              assume msgvalue_MSG == 0;
[L4067]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, sender_s211, recipient_s211, amount_s211);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != sender_s211 || p2 != msgsender_MSG) && sender_s211 == recipient_s211) && amount_s211 <= _balances_ERC20[this][sender_s211]) && amount_s211 <= _allowances_ERC20[this][sender_s211][msgsender_MSG]) && amount_s211 >= 0) && amount_s211 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s211] >= 0) && _balances_ERC20[this][recipient_s211] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][sender_s211] >= 0) && _balances_ERC20[this][sender_s211] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowances_ERC20[this][sender_s211][msgsender_MSG] >= 0) && _allowances_ERC20[this][sender_s211][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_ERC200 := true;
[L3]                 call_transferFrom_ERC200 := false;
[L3]                 revert := revert_hold;
[L519]               havoc __exception;
[L520]               revert := false;
[L521]   COND FALSE  !(__exception)
[L543]   CALL        call __ret_0_ := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s211, recipient_s211, amount_s211);
[L1902]  COND TRUE   DType[this] == StrikeFarm
[L1903]  CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s211, recipient_s211, amount_s211);
[L2208]              __var_12 := null;
[L2209]  COND TRUE   !(sender_s323 != null)
[L2210]              revert := true;
[L1903]  RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s211, recipient_s211, amount_s211);
[L1904]  COND TRUE   revert
[L543]   RET         call __ret_0_ := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s211, recipient_s211, amount_s211);
[L544]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !((((((((__ret_0_ == true && _allowances_ERC20[this][sender_s211][msgsender_MSG] == old(_allowances_ERC20[this][sender_s211][msgsender_MSG]) - amount_s211) && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _balances_ERC20[this] == old(_balances_ERC20[this])) && _allowances_ERC20[this][p1][p2] == old(_allowances_ERC20[this][p1][p2])) && _total_StrikeFarm[this] == old(_total_StrikeFarm[this])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]));
[L3]                 revert := revert_hold;
[L4067]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, sender_s211, recipient_s211, amount_s211);
[L4119]  RET         call CorralChoice_StrikeFarm(this);

[2020-11-25 05:54:00,379 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 05:54:00,380 INFO  L82        PathProgramCache]: Analyzing trace with hash -346111517, now seen corresponding path program 1 times
[2020-11-25 05:54:00,380 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 05:54:00,388 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 05:54:00,406 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 05:54:00,406 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 05:54:00,406 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-25 05:54:00,407 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 05:54:00,407 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-25 05:54:00,407 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-25 05:54:00,408 INFO  L87              Difference]: Start difference. First operand 2195 states and 2638 transitions. cyclomatic complexity: 445 Second operand 3 states.
[2020-11-25 05:54:00,471 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 05:54:00,471 INFO  L93              Difference]: Finished difference Result 2795 states and 3292 transitions.
[2020-11-25 05:54:00,471 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-25 05:54:00,472 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2795 states and 3292 transitions.
[2020-11-25 05:54:00,482 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 05:54:00,494 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2795 states to 2795 states and 3292 transitions.
[2020-11-25 05:54:00,494 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 645
[2020-11-25 05:54:00,495 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 645
[2020-11-25 05:54:00,495 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2795 states and 3292 transitions.
[2020-11-25 05:54:00,500 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 05:54:00,500 INFO  L728         BuchiCegarLoop]: Abstraction has 2795 states and 3292 transitions.
[2020-11-25 05:54:00,502 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2795 states and 3292 transitions.
[2020-11-25 05:54:00,526 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2795 to 2387.
[2020-11-25 05:54:00,526 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2387 states.
[2020-11-25 05:54:00,530 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2387 states to 2387 states and 2798 transitions.
[2020-11-25 05:54:00,530 INFO  L751         BuchiCegarLoop]: Abstraction has 2387 states and 2798 transitions.
[2020-11-25 05:54:00,530 INFO  L631         BuchiCegarLoop]: Abstraction has 2387 states and 2798 transitions.
[2020-11-25 05:54:00,531 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-25 05:54:00,531 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2387 states and 2798 transitions.
[2020-11-25 05:54:00,536 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 05:54:00,536 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 05:54:00,536 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 05:54:00,538 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 05:54:00,538 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transferFrom_ERC200 := false;
[L3]                 call_transferFrom_ERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L4109]              assume null == 0;
[L4110]  CALL        call this := FreshRefGenerator__success();
[L1524]              havoc newRef;
[L1525]              assume Alloc[newRef] == false;
[L1526]              Alloc[newRef] := true;
[L1527]              assume newRef != null;
[L4110]  RET         call this := FreshRefGenerator__success();
[L4111]              assume now >= 0;
[L4112]              assume DType[this] == StrikeFarm;
[L4113]              assume msgvalue_MSG == 0;
[L4114]              gas := gas - 53000;
[L4115]  CALL        call StrikeFarm_StrikeFarm(this, msgsender_MSG, msgvalue_MSG);
[L1002]              havoc __exception;
[L1003]              revert := false;
[L1004]  COND FALSE  !(__exception)
[L1026]  CALL        call StrikeFarm_StrikeFarm__success(this, msgsender_MSG, msgvalue_MSG);
[L2726]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L1588]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1573]              assume msgsender_MSG != null;
[L1574]              Balance[this] := 0;
[L1588]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1589]  COND FALSE  !(revert)
[L2726]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2727]  COND FALSE  !(revert)
[L2730]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1556]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1541]              assume msgsender_MSG != null;
[L1542]              Balance[this] := 0;
[L1556]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1557]  COND FALSE  !(revert)
[L2730]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2731]  COND FALSE  !(revert)
[L2734]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1650]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L1588]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1573]              assume msgsender_MSG != null;
[L1574]              Balance[this] := 0;
[L1588]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1589]  COND FALSE  !(revert)
[L1650]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L1651]  COND FALSE  !(revert)
[L1654]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1556]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1541]              assume msgsender_MSG != null;
[L1542]              Balance[this] := 0;
[L1556]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1557]  COND FALSE  !(revert)
[L1654]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1655]  COND FALSE  !(revert)
[L1658]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1622]              assume msgsender_MSG != null;
[L1623]              Balance[this] := 0;
[L1624]              _balances_ERC20[this] := zeroRefintArr();
[L1625]              sum__balances0[this] := 0;
[L1626]              _allowances_ERC20[this] := zeroRefRefintArr();
[L1627]              sum__allowances1[this] := 0;
[L1628]              _totalSupply_ERC20[this] := 0;
[L1658]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1659]  COND FALSE  !(revert)
[L2734]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2735]  COND FALSE  !(revert)
[L2738]  CALL        call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, 879309088, -1713371657, 18);
[L2414]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1556]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1541]              assume msgsender_MSG != null;
[L1542]              Balance[this] := 0;
[L1556]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1557]  COND FALSE  !(revert)
[L2414]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2415]  COND FALSE  !(revert)
[L2418]  CALL        call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s483, symbol_s483, decimals_s483);
[L2389]              assume msgsender_MSG != null;
[L2390]              Balance[this] := 0;
[L2391]              _name_ERC20Detailed[this] := -1368110498;
[L2392]              _symbol_ERC20Detailed[this] := -1368110498;
[L2393]              _decimals_ERC20Detailed[this] := 0;
[L2395]              _name_ERC20Detailed[this] := name_s483;
[L2396]              _symbol_ERC20Detailed[this] := symbol_s483;
[L2397]              _decimals_ERC20Detailed[this] := decimals_s483;
[L2418]  RET         call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s483, symbol_s483, decimals_s483);
[L2419]  COND FALSE  !(revert)
[L2738]  RET         call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, 879309088, -1713371657, 18);
[L2739]  COND FALSE  !(revert)
[L2742]  CALL        call StrikeFarm_StrikeFarm_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2673]              assume msgsender_MSG != null;
[L2674]              Balance[this] := 0;
[L2675]              _total_StrikeFarm[this] := 11000;
[L2677]  COND TRUE   DType[this] == StrikeFarm
[L2678]  CALL        call __var_27 := decimals_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG);
[L2456]              __ret_0_ := _decimals_ERC20Detailed[this];
[L2678]  RET         call __var_27 := decimals_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG);
[L2679]  COND FALSE  !(revert)
[L2685]              __var_26 := __var_27 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2686]  COND TRUE   DType[this] == StrikeFarm
[L2687]  CALL        call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, nonlinearMul(_total_StrikeFarm[this], nonlinearPow(10, __var_27 % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L2264]              __var_16 := null;
[L2265]  COND TRUE   !(account_s366 != null)
[L2266]              revert := true;
[L2687]  RET         call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, nonlinearMul(_total_StrikeFarm[this], nonlinearPow(10, __var_27 % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L2688]  COND TRUE   revert
[L2742]  RET         call StrikeFarm_StrikeFarm_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2743]  COND FALSE  !(revert)
[L1026]  RET         call StrikeFarm_StrikeFarm__success(this, msgsender_MSG, msgvalue_MSG);
[L1027]              assume !revert && gas >= 0;
[L4115]  RET         call StrikeFarm_StrikeFarm(this, msgsender_MSG, msgvalue_MSG);
[L4116]              assume !revert && gas >= 0;
[L4119]  CALL        call CorralChoice_StrikeFarm(this);
[L3985]              havoc msgsender_MSG;
[L3986]              havoc msgvalue_MSG;
[L3987]              havoc choice;
[L3988]              havoc __ret_0_totalSupply;
[L3989]              havoc account_s121;
[L3990]              havoc __ret_0_balanceOf;
[L3991]              havoc recipient_s140;
[L3992]              havoc amount_s140;
[L3993]              havoc __ret_0_transfer;
[L3994]              havoc owner_s156;
[L3995]              havoc spender_s156;
[L3996]              havoc __ret_0_allowance;
[L3997]              havoc spender_s175;
[L3998]              havoc amount_s175;
[L3999]              havoc __ret_0_approve;
[L4000]              havoc sender_s211;
[L4001]              havoc recipient_s211;
[L4002]              havoc amount_s211;
[L4003]              havoc __ret_0_transferFrom;
[L4004]              havoc spender_s238;
[L4005]              havoc addedValue_s238;
[L4006]              havoc __ret_0_increaseAllowance;
[L4007]              havoc spender_s266;
[L4008]              havoc subtractedValue_s266;
[L4009]              havoc __ret_0_decreaseAllowance;
[L4010]              havoc name_s483;
[L4011]              havoc symbol_s483;
[L4012]              havoc decimals_s483;
[L4013]              havoc __ret_0_name;
[L4014]              havoc __ret_0_symbol;
[L4015]              havoc __ret_0_decimals;
[L4016]              havoc tmpNow;
[L4017]              havoc gas;
[L4018]              assume gas > 4000000 && gas <= 8000000;
[L4019]              tmpNow := now;
[L4020]              havoc now;
[L4021]              assume now > tmpNow;
[L4022]              assume msgsender_MSG != null;
[L4023]              assume DType[msgsender_MSG] != IERC20;
[L4024]              assume DType[msgsender_MSG] != Context;
[L4025]              assume DType[msgsender_MSG] != ERC20;
[L4026]              assume DType[msgsender_MSG] != ERC20Detailed;
[L4027]              assume DType[msgsender_MSG] != SafeMath;
[L4028]              assume DType[msgsender_MSG] != StrikeFarm;
[L4029]              Alloc[msgsender_MSG] := true;
[L4030]  COND FALSE  !(choice == 11)
[L4036]  COND FALSE  !(choice == 10)
[L4042]  COND FALSE  !(choice == 9)
[L4049]  COND FALSE  !(choice == 8)
[L4055]  COND FALSE  !(choice == 7)
[L4062]  COND TRUE   choice == 6
[L4063]              gas := gas - 21000;
[L4064]  COND TRUE   gas >= 0
[L4065]              assume amount_s211 >= 0 && amount_s211 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4066]              assume msgvalue_MSG == 0;
[L4067]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, sender_s211, recipient_s211, amount_s211);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != sender_s211 || p2 != msgsender_MSG) && sender_s211 == recipient_s211) && amount_s211 <= _balances_ERC20[this][sender_s211]) && amount_s211 <= _allowances_ERC20[this][sender_s211][msgsender_MSG]) && amount_s211 >= 0) && amount_s211 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s211] >= 0) && _balances_ERC20[this][recipient_s211] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][sender_s211] >= 0) && _balances_ERC20[this][sender_s211] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowances_ERC20[this][sender_s211][msgsender_MSG] >= 0) && _allowances_ERC20[this][sender_s211][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_ERC200 := true;
[L3]                 call_transferFrom_ERC200 := false;
[L3]                 revert := revert_hold;
[L519]               havoc __exception;
[L520]               revert := false;
[L521]   COND FALSE  !(__exception)
[L543]   CALL        call __ret_0_ := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s211, recipient_s211, amount_s211);
[L1902]  COND TRUE   DType[this] == StrikeFarm
[L1903]  CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s211, recipient_s211, amount_s211);
[L2208]              __var_12 := null;
[L2209]  COND TRUE   !(sender_s323 != null)
[L2210]              revert := true;
[L1903]  RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s211, recipient_s211, amount_s211);
[L1904]  COND TRUE   revert
[L543]   RET         call __ret_0_ := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s211, recipient_s211, amount_s211);
[L544]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !((((((((__ret_0_ == true && _allowances_ERC20[this][sender_s211][msgsender_MSG] == old(_allowances_ERC20[this][sender_s211][msgsender_MSG]) - amount_s211) && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _balances_ERC20[this] == old(_balances_ERC20[this])) && _allowances_ERC20[this][p1][p2] == old(_allowances_ERC20[this][p1][p2])) && _total_StrikeFarm[this] == old(_total_StrikeFarm[this])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]));
[L3]                 revert := revert_hold;
[L4067]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, sender_s211, recipient_s211, amount_s211);
[L4119]  RET         call CorralChoice_StrikeFarm(this);

Loop:
[L4119]  CALL        call CorralChoice_StrikeFarm(this);
[L3985]              havoc msgsender_MSG;
[L3986]              havoc msgvalue_MSG;
[L3987]              havoc choice;
[L3988]              havoc __ret_0_totalSupply;
[L3989]              havoc account_s121;
[L3990]              havoc __ret_0_balanceOf;
[L3991]              havoc recipient_s140;
[L3992]              havoc amount_s140;
[L3993]              havoc __ret_0_transfer;
[L3994]              havoc owner_s156;
[L3995]              havoc spender_s156;
[L3996]              havoc __ret_0_allowance;
[L3997]              havoc spender_s175;
[L3998]              havoc amount_s175;
[L3999]              havoc __ret_0_approve;
[L4000]              havoc sender_s211;
[L4001]              havoc recipient_s211;
[L4002]              havoc amount_s211;
[L4003]              havoc __ret_0_transferFrom;
[L4004]              havoc spender_s238;
[L4005]              havoc addedValue_s238;
[L4006]              havoc __ret_0_increaseAllowance;
[L4007]              havoc spender_s266;
[L4008]              havoc subtractedValue_s266;
[L4009]              havoc __ret_0_decreaseAllowance;
[L4010]              havoc name_s483;
[L4011]              havoc symbol_s483;
[L4012]              havoc decimals_s483;
[L4013]              havoc __ret_0_name;
[L4014]              havoc __ret_0_symbol;
[L4015]              havoc __ret_0_decimals;
[L4016]              havoc tmpNow;
[L4017]              havoc gas;
[L4018]              assume gas > 4000000 && gas <= 8000000;
[L4019]              tmpNow := now;
[L4020]              havoc now;
[L4021]              assume now > tmpNow;
[L4022]              assume msgsender_MSG != null;
[L4023]              assume DType[msgsender_MSG] != IERC20;
[L4024]              assume DType[msgsender_MSG] != Context;
[L4025]              assume DType[msgsender_MSG] != ERC20;
[L4026]              assume DType[msgsender_MSG] != ERC20Detailed;
[L4027]              assume DType[msgsender_MSG] != SafeMath;
[L4028]              assume DType[msgsender_MSG] != StrikeFarm;
[L4029]              Alloc[msgsender_MSG] := true;
[L4030]  COND FALSE  !(choice == 11)
[L4036]  COND FALSE  !(choice == 10)
[L4042]  COND FALSE  !(choice == 9)
[L4049]  COND FALSE  !(choice == 8)
[L4055]  COND FALSE  !(choice == 7)
[L4062]  COND TRUE   choice == 6
[L4063]              gas := gas - 21000;
[L4064]  COND TRUE   gas >= 0
[L4065]              assume amount_s211 >= 0 && amount_s211 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4066]              assume msgvalue_MSG == 0;
[L4067]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, sender_s211, recipient_s211, amount_s211);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != sender_s211 || p2 != msgsender_MSG) && sender_s211 == recipient_s211) && amount_s211 <= _balances_ERC20[this][sender_s211]) && amount_s211 <= _allowances_ERC20[this][sender_s211][msgsender_MSG]) && amount_s211 >= 0) && amount_s211 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s211] >= 0) && _balances_ERC20[this][recipient_s211] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][sender_s211] >= 0) && _balances_ERC20[this][sender_s211] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowances_ERC20[this][sender_s211][msgsender_MSG] >= 0) && _allowances_ERC20[this][sender_s211][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_ERC200 := true;
[L3]                 call_transferFrom_ERC200 := false;
[L3]                 revert := revert_hold;
[L519]               havoc __exception;
[L520]               revert := false;
[L521]   COND FALSE  !(__exception)
[L543]   CALL        call __ret_0_ := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s211, recipient_s211, amount_s211);
[L1902]  COND TRUE   DType[this] == StrikeFarm
[L1903]  CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s211, recipient_s211, amount_s211);
[L2208]              __var_12 := null;
[L2209]  COND TRUE   !(sender_s323 != null)
[L2210]              revert := true;
[L1903]  RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s211, recipient_s211, amount_s211);
[L1904]  COND TRUE   revert
[L543]   RET         call __ret_0_ := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s211, recipient_s211, amount_s211);
[L544]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !((((((((__ret_0_ == true && _allowances_ERC20[this][sender_s211][msgsender_MSG] == old(_allowances_ERC20[this][sender_s211][msgsender_MSG]) - amount_s211) && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _balances_ERC20[this] == old(_balances_ERC20[this])) && _allowances_ERC20[this][p1][p2] == old(_allowances_ERC20[this][p1][p2])) && _total_StrikeFarm[this] == old(_total_StrikeFarm[this])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]));
[L3]                 revert := revert_hold;
[L4067]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, sender_s211, recipient_s211, amount_s211);
[L4119]  RET         call CorralChoice_StrikeFarm(this);

[2020-11-25 05:54:00,542 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 05:54:00,542 INFO  L82        PathProgramCache]: Analyzing trace with hash -467228694, now seen corresponding path program 1 times
[2020-11-25 05:54:00,542 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 05:54:00,553 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 05:54:00,597 INFO  L134       CoverageAnalysis]: Checked inductivity of 40 backedges. 0 proven. 7 refuted. 0 times theorem prover too weak. 33 trivial. 0 not checked.
[2020-11-25 05:54:00,598 INFO  L312   seRefinementStrategy]: Constructing automaton from 0 perfect and 1 imperfect interpolant sequences.
[2020-11-25 05:54:00,598 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [] imperfect sequences [7] total 7
[2020-11-25 05:54:00,598 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 05:54:00,598 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 7 interpolants.
[2020-11-25 05:54:00,598 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=11, Invalid=31, Unknown=0, NotChecked=0, Total=42
[2020-11-25 05:54:00,599 INFO  L87              Difference]: Start difference. First operand 2387 states and 2798 transitions. cyclomatic complexity: 413 Second operand 7 states.
[2020-11-25 05:54:00,636 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 05:54:00,636 INFO  L93              Difference]: Finished difference Result 2395 states and 2805 transitions.
[2020-11-25 05:54:00,636 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 7 states. 
[2020-11-25 05:54:00,636 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2395 states and 2805 transitions.
[2020-11-25 05:54:00,644 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 05:54:00,653 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2395 states to 2386 states and 2796 transitions.
[2020-11-25 05:54:00,653 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 533
[2020-11-25 05:54:00,653 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 533
[2020-11-25 05:54:00,653 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2386 states and 2796 transitions.
[2020-11-25 05:54:00,656 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 05:54:00,656 INFO  L728         BuchiCegarLoop]: Abstraction has 2386 states and 2796 transitions.
[2020-11-25 05:54:00,658 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2386 states and 2796 transitions.
[2020-11-25 05:54:00,678 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2386 to 2386.
[2020-11-25 05:54:00,678 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2386 states.
[2020-11-25 05:54:00,681 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2386 states to 2386 states and 2796 transitions.
[2020-11-25 05:54:00,681 INFO  L751         BuchiCegarLoop]: Abstraction has 2386 states and 2796 transitions.
[2020-11-25 05:54:00,681 INFO  L631         BuchiCegarLoop]: Abstraction has 2386 states and 2796 transitions.
[2020-11-25 05:54:00,681 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-25 05:54:00,682 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2386 states and 2796 transitions.
[2020-11-25 05:54:00,687 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 05:54:00,687 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 05:54:00,687 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 05:54:00,689 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 05:54:00,689 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transferFrom_ERC200 := false;
[L3]                 call_transferFrom_ERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L4109]              assume null == 0;
[L4110]  CALL        call this := FreshRefGenerator__success();
[L1524]              havoc newRef;
[L1525]              assume Alloc[newRef] == false;
[L1526]              Alloc[newRef] := true;
[L1527]              assume newRef != null;
[L4110]  RET         call this := FreshRefGenerator__success();
[L4111]              assume now >= 0;
[L4112]              assume DType[this] == StrikeFarm;
[L4113]              assume msgvalue_MSG == 0;
[L4114]              gas := gas - 53000;
[L4115]  CALL        call StrikeFarm_StrikeFarm(this, msgsender_MSG, msgvalue_MSG);
[L1002]              havoc __exception;
[L1003]              revert := false;
[L1004]  COND FALSE  !(__exception)
[L1026]  CALL        call StrikeFarm_StrikeFarm__success(this, msgsender_MSG, msgvalue_MSG);
[L2726]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L1588]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1573]              assume msgsender_MSG != null;
[L1574]              Balance[this] := 0;
[L1588]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1589]  COND FALSE  !(revert)
[L2726]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2727]  COND FALSE  !(revert)
[L2730]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1556]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1541]              assume msgsender_MSG != null;
[L1542]              Balance[this] := 0;
[L1556]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1557]  COND FALSE  !(revert)
[L2730]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2731]  COND FALSE  !(revert)
[L2734]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1650]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L1588]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1573]              assume msgsender_MSG != null;
[L1574]              Balance[this] := 0;
[L1588]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1589]  COND FALSE  !(revert)
[L1650]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L1651]  COND FALSE  !(revert)
[L1654]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1556]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1541]              assume msgsender_MSG != null;
[L1542]              Balance[this] := 0;
[L1556]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1557]  COND FALSE  !(revert)
[L1654]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1655]  COND FALSE  !(revert)
[L1658]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1622]              assume msgsender_MSG != null;
[L1623]              Balance[this] := 0;
[L1624]              _balances_ERC20[this] := zeroRefintArr();
[L1625]              sum__balances0[this] := 0;
[L1626]              _allowances_ERC20[this] := zeroRefRefintArr();
[L1627]              sum__allowances1[this] := 0;
[L1628]              _totalSupply_ERC20[this] := 0;
[L1658]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1659]  COND FALSE  !(revert)
[L2734]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2735]  COND FALSE  !(revert)
[L2738]  CALL        call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, 879309088, -1713371657, 18);
[L2414]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1556]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1541]              assume msgsender_MSG != null;
[L1542]              Balance[this] := 0;
[L1556]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1557]  COND FALSE  !(revert)
[L2414]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2415]  COND FALSE  !(revert)
[L2418]  CALL        call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s483, symbol_s483, decimals_s483);
[L2389]              assume msgsender_MSG != null;
[L2390]              Balance[this] := 0;
[L2391]              _name_ERC20Detailed[this] := -1368110498;
[L2392]              _symbol_ERC20Detailed[this] := -1368110498;
[L2393]              _decimals_ERC20Detailed[this] := 0;
[L2395]              _name_ERC20Detailed[this] := name_s483;
[L2396]              _symbol_ERC20Detailed[this] := symbol_s483;
[L2397]              _decimals_ERC20Detailed[this] := decimals_s483;
[L2418]  RET         call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s483, symbol_s483, decimals_s483);
[L2419]  COND FALSE  !(revert)
[L2738]  RET         call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, 879309088, -1713371657, 18);
[L2739]  COND FALSE  !(revert)
[L2742]  CALL        call StrikeFarm_StrikeFarm_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2673]              assume msgsender_MSG != null;
[L2674]              Balance[this] := 0;
[L2675]              _total_StrikeFarm[this] := 11000;
[L2677]  COND TRUE   DType[this] == StrikeFarm
[L2678]  CALL        call __var_27 := decimals_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG);
[L2456]              __ret_0_ := _decimals_ERC20Detailed[this];
[L2678]  RET         call __var_27 := decimals_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG);
[L2679]  COND FALSE  !(revert)
[L2685]              __var_26 := __var_27 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2686]  COND TRUE   DType[this] == StrikeFarm
[L2687]  CALL        call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, nonlinearMul(_total_StrikeFarm[this], nonlinearPow(10, __var_27 % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L2264]              __var_16 := null;
[L2265]  COND FALSE  !(!(account_s366 != null))
[L2269]  CALL        call __var_17 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], amount_s366);
[L2507]              c_s533 := (a_s533 + b_s533) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2508]  COND TRUE   !(c_s533 >= a_s533)
[L2509]              revert := true;
[L2269]  RET         call __var_17 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], amount_s366);
[L2270]  COND TRUE   revert
[L2687]  RET         call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, nonlinearMul(_total_StrikeFarm[this], nonlinearPow(10, __var_27 % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L2688]  COND TRUE   revert
[L2742]  RET         call StrikeFarm_StrikeFarm_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2743]  COND FALSE  !(revert)
[L1026]  RET         call StrikeFarm_StrikeFarm__success(this, msgsender_MSG, msgvalue_MSG);
[L1027]              assume !revert && gas >= 0;
[L4115]  RET         call StrikeFarm_StrikeFarm(this, msgsender_MSG, msgvalue_MSG);
[L4116]              assume !revert && gas >= 0;
[L4119]  CALL        call CorralChoice_StrikeFarm(this);
[L3985]              havoc msgsender_MSG;
[L3986]              havoc msgvalue_MSG;
[L3987]              havoc choice;
[L3988]              havoc __ret_0_totalSupply;
[L3989]              havoc account_s121;
[L3990]              havoc __ret_0_balanceOf;
[L3991]              havoc recipient_s140;
[L3992]              havoc amount_s140;
[L3993]              havoc __ret_0_transfer;
[L3994]              havoc owner_s156;
[L3995]              havoc spender_s156;
[L3996]              havoc __ret_0_allowance;
[L3997]              havoc spender_s175;
[L3998]              havoc amount_s175;
[L3999]              havoc __ret_0_approve;
[L4000]              havoc sender_s211;
[L4001]              havoc recipient_s211;
[L4002]              havoc amount_s211;
[L4003]              havoc __ret_0_transferFrom;
[L4004]              havoc spender_s238;
[L4005]              havoc addedValue_s238;
[L4006]              havoc __ret_0_increaseAllowance;
[L4007]              havoc spender_s266;
[L4008]              havoc subtractedValue_s266;
[L4009]              havoc __ret_0_decreaseAllowance;
[L4010]              havoc name_s483;
[L4011]              havoc symbol_s483;
[L4012]              havoc decimals_s483;
[L4013]              havoc __ret_0_name;
[L4014]              havoc __ret_0_symbol;
[L4015]              havoc __ret_0_decimals;
[L4016]              havoc tmpNow;
[L4017]              havoc gas;
[L4018]              assume gas > 4000000 && gas <= 8000000;
[L4019]              tmpNow := now;
[L4020]              havoc now;
[L4021]              assume now > tmpNow;
[L4022]              assume msgsender_MSG != null;
[L4023]              assume DType[msgsender_MSG] != IERC20;
[L4024]              assume DType[msgsender_MSG] != Context;
[L4025]              assume DType[msgsender_MSG] != ERC20;
[L4026]              assume DType[msgsender_MSG] != ERC20Detailed;
[L4027]              assume DType[msgsender_MSG] != SafeMath;
[L4028]              assume DType[msgsender_MSG] != StrikeFarm;
[L4029]              Alloc[msgsender_MSG] := true;
[L4030]  COND FALSE  !(choice == 11)
[L4036]  COND FALSE  !(choice == 10)
[L4042]  COND FALSE  !(choice == 9)
[L4049]  COND FALSE  !(choice == 8)
[L4055]  COND FALSE  !(choice == 7)
[L4062]  COND TRUE   choice == 6
[L4063]              gas := gas - 21000;
[L4064]  COND TRUE   gas >= 0
[L4065]              assume amount_s211 >= 0 && amount_s211 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4066]              assume msgvalue_MSG == 0;
[L4067]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, sender_s211, recipient_s211, amount_s211);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != sender_s211 || p2 != msgsender_MSG) && sender_s211 == recipient_s211) && amount_s211 <= _balances_ERC20[this][sender_s211]) && amount_s211 <= _allowances_ERC20[this][sender_s211][msgsender_MSG]) && amount_s211 >= 0) && amount_s211 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s211] >= 0) && _balances_ERC20[this][recipient_s211] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][sender_s211] >= 0) && _balances_ERC20[this][sender_s211] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowances_ERC20[this][sender_s211][msgsender_MSG] >= 0) && _allowances_ERC20[this][sender_s211][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_ERC200 := true;
[L3]                 call_transferFrom_ERC200 := false;
[L3]                 revert := revert_hold;
[L519]               havoc __exception;
[L520]               revert := false;
[L521]   COND FALSE  !(__exception)
[L543]   CALL        call __ret_0_ := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s211, recipient_s211, amount_s211);
[L1902]  COND TRUE   DType[this] == StrikeFarm
[L1903]  CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s211, recipient_s211, amount_s211);
[L2208]              __var_12 := null;
[L2209]  COND TRUE   !(sender_s323 != null)
[L2210]              revert := true;
[L1903]  RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s211, recipient_s211, amount_s211);
[L1904]  COND TRUE   revert
[L543]   RET         call __ret_0_ := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s211, recipient_s211, amount_s211);
[L544]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !((((((((__ret_0_ == true && _allowances_ERC20[this][sender_s211][msgsender_MSG] == old(_allowances_ERC20[this][sender_s211][msgsender_MSG]) - amount_s211) && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _balances_ERC20[this] == old(_balances_ERC20[this])) && _allowances_ERC20[this][p1][p2] == old(_allowances_ERC20[this][p1][p2])) && _total_StrikeFarm[this] == old(_total_StrikeFarm[this])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]));
[L3]                 revert := revert_hold;
[L4067]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, sender_s211, recipient_s211, amount_s211);
[L4119]  RET         call CorralChoice_StrikeFarm(this);

Loop:
[L4119]  CALL        call CorralChoice_StrikeFarm(this);
[L3985]              havoc msgsender_MSG;
[L3986]              havoc msgvalue_MSG;
[L3987]              havoc choice;
[L3988]              havoc __ret_0_totalSupply;
[L3989]              havoc account_s121;
[L3990]              havoc __ret_0_balanceOf;
[L3991]              havoc recipient_s140;
[L3992]              havoc amount_s140;
[L3993]              havoc __ret_0_transfer;
[L3994]              havoc owner_s156;
[L3995]              havoc spender_s156;
[L3996]              havoc __ret_0_allowance;
[L3997]              havoc spender_s175;
[L3998]              havoc amount_s175;
[L3999]              havoc __ret_0_approve;
[L4000]              havoc sender_s211;
[L4001]              havoc recipient_s211;
[L4002]              havoc amount_s211;
[L4003]              havoc __ret_0_transferFrom;
[L4004]              havoc spender_s238;
[L4005]              havoc addedValue_s238;
[L4006]              havoc __ret_0_increaseAllowance;
[L4007]              havoc spender_s266;
[L4008]              havoc subtractedValue_s266;
[L4009]              havoc __ret_0_decreaseAllowance;
[L4010]              havoc name_s483;
[L4011]              havoc symbol_s483;
[L4012]              havoc decimals_s483;
[L4013]              havoc __ret_0_name;
[L4014]              havoc __ret_0_symbol;
[L4015]              havoc __ret_0_decimals;
[L4016]              havoc tmpNow;
[L4017]              havoc gas;
[L4018]              assume gas > 4000000 && gas <= 8000000;
[L4019]              tmpNow := now;
[L4020]              havoc now;
[L4021]              assume now > tmpNow;
[L4022]              assume msgsender_MSG != null;
[L4023]              assume DType[msgsender_MSG] != IERC20;
[L4024]              assume DType[msgsender_MSG] != Context;
[L4025]              assume DType[msgsender_MSG] != ERC20;
[L4026]              assume DType[msgsender_MSG] != ERC20Detailed;
[L4027]              assume DType[msgsender_MSG] != SafeMath;
[L4028]              assume DType[msgsender_MSG] != StrikeFarm;
[L4029]              Alloc[msgsender_MSG] := true;
[L4030]  COND FALSE  !(choice == 11)
[L4036]  COND FALSE  !(choice == 10)
[L4042]  COND FALSE  !(choice == 9)
[L4049]  COND FALSE  !(choice == 8)
[L4055]  COND FALSE  !(choice == 7)
[L4062]  COND TRUE   choice == 6
[L4063]              gas := gas - 21000;
[L4064]  COND TRUE   gas >= 0
[L4065]              assume amount_s211 >= 0 && amount_s211 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4066]              assume msgvalue_MSG == 0;
[L4067]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, sender_s211, recipient_s211, amount_s211);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != sender_s211 || p2 != msgsender_MSG) && sender_s211 == recipient_s211) && amount_s211 <= _balances_ERC20[this][sender_s211]) && amount_s211 <= _allowances_ERC20[this][sender_s211][msgsender_MSG]) && amount_s211 >= 0) && amount_s211 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s211] >= 0) && _balances_ERC20[this][recipient_s211] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][sender_s211] >= 0) && _balances_ERC20[this][sender_s211] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowances_ERC20[this][sender_s211][msgsender_MSG] >= 0) && _allowances_ERC20[this][sender_s211][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_ERC200 := true;
[L3]                 call_transferFrom_ERC200 := false;
[L3]                 revert := revert_hold;
[L519]               havoc __exception;
[L520]               revert := false;
[L521]   COND FALSE  !(__exception)
[L543]   CALL        call __ret_0_ := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s211, recipient_s211, amount_s211);
[L1902]  COND TRUE   DType[this] == StrikeFarm
[L1903]  CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s211, recipient_s211, amount_s211);
[L2208]              __var_12 := null;
[L2209]  COND TRUE   !(sender_s323 != null)
[L2210]              revert := true;
[L1903]  RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s211, recipient_s211, amount_s211);
[L1904]  COND TRUE   revert
[L543]   RET         call __ret_0_ := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s211, recipient_s211, amount_s211);
[L544]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !((((((((__ret_0_ == true && _allowances_ERC20[this][sender_s211][msgsender_MSG] == old(_allowances_ERC20[this][sender_s211][msgsender_MSG]) - amount_s211) && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _balances_ERC20[this] == old(_balances_ERC20[this])) && _allowances_ERC20[this][p1][p2] == old(_allowances_ERC20[this][p1][p2])) && _total_StrikeFarm[this] == old(_total_StrikeFarm[this])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]));
[L3]                 revert := revert_hold;
[L4067]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, sender_s211, recipient_s211, amount_s211);
[L4119]  RET         call CorralChoice_StrikeFarm(this);

[2020-11-25 05:54:00,692 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 05:54:00,692 INFO  L82        PathProgramCache]: Analyzing trace with hash -1038080687, now seen corresponding path program 1 times
[2020-11-25 05:54:00,693 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 05:54:00,702 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 05:54:00,753 INFO  L134       CoverageAnalysis]: Checked inductivity of 40 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 40 trivial. 0 not checked.
[2020-11-25 05:54:00,753 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 05:54:00,753 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-25 05:54:00,753 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 05:54:00,754 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-25 05:54:00,754 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-25 05:54:00,754 INFO  L87              Difference]: Start difference. First operand 2386 states and 2796 transitions. cyclomatic complexity: 412 Second operand 3 states.
[2020-11-25 05:54:00,795 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 05:54:00,795 INFO  L93              Difference]: Finished difference Result 2794 states and 3202 transitions.
[2020-11-25 05:54:00,795 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-25 05:54:00,795 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2794 states and 3202 transitions.
[2020-11-25 05:54:00,804 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 05:54:00,816 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2794 states to 2621 states and 2998 transitions.
[2020-11-25 05:54:00,816 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 595
[2020-11-25 05:54:00,817 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 613
[2020-11-25 05:54:00,817 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2621 states and 2998 transitions.
[2020-11-25 05:54:00,820 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 05:54:00,820 INFO  L728         BuchiCegarLoop]: Abstraction has 2621 states and 2998 transitions.
[2020-11-25 05:54:00,822 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2621 states and 2998 transitions.
[2020-11-25 05:54:00,861 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2621 to 2265.
[2020-11-25 05:54:00,862 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2265 states.
[2020-11-25 05:54:00,865 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2265 states to 2265 states and 2556 transitions.
[2020-11-25 05:54:00,866 INFO  L751         BuchiCegarLoop]: Abstraction has 2265 states and 2556 transitions.
[2020-11-25 05:54:00,866 INFO  L631         BuchiCegarLoop]: Abstraction has 2265 states and 2556 transitions.
[2020-11-25 05:54:00,866 INFO  L445         BuchiCegarLoop]: ======== Iteration 5============
[2020-11-25 05:54:00,866 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2265 states and 2556 transitions.
[2020-11-25 05:54:00,869 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 05:54:00,869 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 05:54:00,869 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 05:54:00,870 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 05:54:00,870 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transferFrom_ERC200 := false;
[L3]                 call_transferFrom_ERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L4109]              assume null == 0;
[L4110]  CALL        call this := FreshRefGenerator__success();
[L1524]              havoc newRef;
[L1525]              assume Alloc[newRef] == false;
[L1526]              Alloc[newRef] := true;
[L1527]              assume newRef != null;
[L4110]  RET         call this := FreshRefGenerator__success();
[L4111]              assume now >= 0;
[L4112]              assume DType[this] == StrikeFarm;
[L4113]              assume msgvalue_MSG == 0;
[L4114]              gas := gas - 53000;
[L4115]  CALL        call StrikeFarm_StrikeFarm(this, msgsender_MSG, msgvalue_MSG);
[L1002]              havoc __exception;
[L1003]              revert := false;
[L1004]  COND FALSE  !(__exception)
[L1026]  CALL        call StrikeFarm_StrikeFarm__success(this, msgsender_MSG, msgvalue_MSG);
[L2726]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L1588]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1573]              assume msgsender_MSG != null;
[L1574]              Balance[this] := 0;
[L1588]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1589]  COND FALSE  !(revert)
[L2726]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2727]  COND FALSE  !(revert)
[L2730]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1556]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1541]              assume msgsender_MSG != null;
[L1542]              Balance[this] := 0;
[L1556]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1557]  COND FALSE  !(revert)
[L2730]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2731]  COND FALSE  !(revert)
[L2734]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1650]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L1588]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1573]              assume msgsender_MSG != null;
[L1574]              Balance[this] := 0;
[L1588]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1589]  COND FALSE  !(revert)
[L1650]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L1651]  COND FALSE  !(revert)
[L1654]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1556]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1541]              assume msgsender_MSG != null;
[L1542]              Balance[this] := 0;
[L1556]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1557]  COND FALSE  !(revert)
[L1654]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1655]  COND FALSE  !(revert)
[L1658]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1622]              assume msgsender_MSG != null;
[L1623]              Balance[this] := 0;
[L1624]              _balances_ERC20[this] := zeroRefintArr();
[L1625]              sum__balances0[this] := 0;
[L1626]              _allowances_ERC20[this] := zeroRefRefintArr();
[L1627]              sum__allowances1[this] := 0;
[L1628]              _totalSupply_ERC20[this] := 0;
[L1658]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1659]  COND FALSE  !(revert)
[L2734]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2735]  COND FALSE  !(revert)
[L2738]  CALL        call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, 879309088, -1713371657, 18);
[L2414]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1556]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1541]              assume msgsender_MSG != null;
[L1542]              Balance[this] := 0;
[L1556]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1557]  COND FALSE  !(revert)
[L2414]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2415]  COND FALSE  !(revert)
[L2418]  CALL        call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s483, symbol_s483, decimals_s483);
[L2389]              assume msgsender_MSG != null;
[L2390]              Balance[this] := 0;
[L2391]              _name_ERC20Detailed[this] := -1368110498;
[L2392]              _symbol_ERC20Detailed[this] := -1368110498;
[L2393]              _decimals_ERC20Detailed[this] := 0;
[L2395]              _name_ERC20Detailed[this] := name_s483;
[L2396]              _symbol_ERC20Detailed[this] := symbol_s483;
[L2397]              _decimals_ERC20Detailed[this] := decimals_s483;
[L2418]  RET         call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s483, symbol_s483, decimals_s483);
[L2419]  COND FALSE  !(revert)
[L2738]  RET         call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, 879309088, -1713371657, 18);
[L2739]  COND FALSE  !(revert)
[L2742]  CALL        call StrikeFarm_StrikeFarm_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2673]              assume msgsender_MSG != null;
[L2674]              Balance[this] := 0;
[L2675]              _total_StrikeFarm[this] := 11000;
[L2677]  COND TRUE   DType[this] == StrikeFarm
[L2678]  CALL        call __var_27 := decimals_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG);
[L2456]              __ret_0_ := _decimals_ERC20Detailed[this];
[L2678]  RET         call __var_27 := decimals_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG);
[L2679]  COND FALSE  !(revert)
[L2685]              __var_26 := __var_27 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2686]  COND TRUE   DType[this] == StrikeFarm
[L2687]  CALL        call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, nonlinearMul(_total_StrikeFarm[this], nonlinearPow(10, __var_27 % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L2264]              __var_16 := null;
[L2265]  COND FALSE  !(!(account_s366 != null))
[L2269]  CALL        call __var_17 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], amount_s366);
[L2507]              c_s533 := (a_s533 + b_s533) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2508]  COND FALSE  !(!(c_s533 >= a_s533))
[L2512]              __ret_0_ := c_s533;
[L2269]  RET         call __var_17 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], amount_s366);
[L2270]  COND FALSE  !(revert)
[L2273]              _totalSupply_ERC20[this] := __var_17;
[L2274]  CALL        call __var_18 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s366], amount_s366);
[L2507]              c_s533 := (a_s533 + b_s533) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2508]  COND FALSE  !(!(c_s533 >= a_s533))
[L2512]              __ret_0_ := c_s533;
[L2274]  RET         call __var_18 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s366], amount_s366);
[L2275]  COND FALSE  !(revert)
[L2278]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][account_s366];
[L2279]              _balances_ERC20[this][account_s366] := __var_18;
[L2280]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][account_s366];
[L2281]              assert { :EventEmitted "Transfer_ERC20" } true;
[L2687]  RET         call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, nonlinearMul(_total_StrikeFarm[this], nonlinearPow(10, __var_27 % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L2688]  COND FALSE  !(revert)
[L2742]  RET         call StrikeFarm_StrikeFarm_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2743]  COND FALSE  !(revert)
[L1026]  RET         call StrikeFarm_StrikeFarm__success(this, msgsender_MSG, msgvalue_MSG);
[L1027]              assume !revert && gas >= 0;
[L4115]  RET         call StrikeFarm_StrikeFarm(this, msgsender_MSG, msgvalue_MSG);
[L4116]              assume !revert && gas >= 0;
[L4119]  CALL        call CorralChoice_StrikeFarm(this);
[L3985]              havoc msgsender_MSG;
[L3986]              havoc msgvalue_MSG;
[L3987]              havoc choice;
[L3988]              havoc __ret_0_totalSupply;
[L3989]              havoc account_s121;
[L3990]              havoc __ret_0_balanceOf;
[L3991]              havoc recipient_s140;
[L3992]              havoc amount_s140;
[L3993]              havoc __ret_0_transfer;
[L3994]              havoc owner_s156;
[L3995]              havoc spender_s156;
[L3996]              havoc __ret_0_allowance;
[L3997]              havoc spender_s175;
[L3998]              havoc amount_s175;
[L3999]              havoc __ret_0_approve;
[L4000]              havoc sender_s211;
[L4001]              havoc recipient_s211;
[L4002]              havoc amount_s211;
[L4003]              havoc __ret_0_transferFrom;
[L4004]              havoc spender_s238;
[L4005]              havoc addedValue_s238;
[L4006]              havoc __ret_0_increaseAllowance;
[L4007]              havoc spender_s266;
[L4008]              havoc subtractedValue_s266;
[L4009]              havoc __ret_0_decreaseAllowance;
[L4010]              havoc name_s483;
[L4011]              havoc symbol_s483;
[L4012]              havoc decimals_s483;
[L4013]              havoc __ret_0_name;
[L4014]              havoc __ret_0_symbol;
[L4015]              havoc __ret_0_decimals;
[L4016]              havoc tmpNow;
[L4017]              havoc gas;
[L4018]              assume gas > 4000000 && gas <= 8000000;
[L4019]              tmpNow := now;
[L4020]              havoc now;
[L4021]              assume now > tmpNow;
[L4022]              assume msgsender_MSG != null;
[L4023]              assume DType[msgsender_MSG] != IERC20;
[L4024]              assume DType[msgsender_MSG] != Context;
[L4025]              assume DType[msgsender_MSG] != ERC20;
[L4026]              assume DType[msgsender_MSG] != ERC20Detailed;
[L4027]              assume DType[msgsender_MSG] != SafeMath;
[L4028]              assume DType[msgsender_MSG] != StrikeFarm;
[L4029]              Alloc[msgsender_MSG] := true;
[L4030]  COND FALSE  !(choice == 11)
[L4036]  COND FALSE  !(choice == 10)
[L4042]  COND FALSE  !(choice == 9)
[L4049]  COND FALSE  !(choice == 8)
[L4055]  COND FALSE  !(choice == 7)
[L4062]  COND TRUE   choice == 6
[L4063]              gas := gas - 21000;
[L4064]  COND TRUE   gas >= 0
[L4065]              assume amount_s211 >= 0 && amount_s211 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4066]              assume msgvalue_MSG == 0;
[L4067]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, sender_s211, recipient_s211, amount_s211);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != sender_s211 || p2 != msgsender_MSG) && sender_s211 == recipient_s211) && amount_s211 <= _balances_ERC20[this][sender_s211]) && amount_s211 <= _allowances_ERC20[this][sender_s211][msgsender_MSG]) && amount_s211 >= 0) && amount_s211 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s211] >= 0) && _balances_ERC20[this][recipient_s211] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][sender_s211] >= 0) && _balances_ERC20[this][sender_s211] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowances_ERC20[this][sender_s211][msgsender_MSG] >= 0) && _allowances_ERC20[this][sender_s211][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_ERC200 := true;
[L3]                 call_transferFrom_ERC200 := false;
[L3]                 revert := revert_hold;
[L519]               havoc __exception;
[L520]               revert := false;
[L521]   COND TRUE   __exception
[L522]               __tmp__Balance := Balance;
[L523]               __tmp__DType := DType;
[L524]               __tmp__Alloc := Alloc;
[L525]               __tmp__balance_ADDR := balance_ADDR;
[L526]               __tmp__M_Ref_int := M_Ref_int;
[L527]               __tmp__sum__balances0 := sum__balances0;
[L528]               __tmp__alloc__allowances_ERC20_lvl0 := alloc__allowances_ERC20_lvl0;
[L529]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L530]               __tmp__sum__allowances1 := sum__allowances1;
[L531]               __tmp__Length := Length;
[L532]               __tmp__now := now;
[L533]               __tmp___balances_ERC20 := _balances_ERC20;
[L534]               __tmp___allowances_ERC20 := _allowances_ERC20;
[L535]               __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L536]               __tmp___name_ERC20Detailed := _name_ERC20Detailed;
[L537]               __tmp___symbol_ERC20Detailed := _symbol_ERC20Detailed;
[L538]               __tmp___decimals_ERC20Detailed := _decimals_ERC20Detailed;
[L539]               __tmp___total_StrikeFarm := _total_StrikeFarm;
[L540]   CALL        call __ret_0_ := transferFrom~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, sender_s211, recipient_s211, amount_s211);
[L1837]  COND TRUE   __tmp__DType[this] == StrikeFarm
[L1838]  CALL        call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, sender_s211, recipient_s211, amount_s211);
[L2176]              __var_12 := null;
[L2177]  COND TRUE   !(sender_s323 != null)
[L2178]              revert := true;
[L1838]  RET         call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, sender_s211, recipient_s211, amount_s211);
[L1839]  COND TRUE   revert
[L540]   RET         call __ret_0_ := transferFrom~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, sender_s211, recipient_s211, amount_s211);
[L541]               assume revert || gas < 0;
[L4067]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, sender_s211, recipient_s211, amount_s211);
[L4119]  RET         call CorralChoice_StrikeFarm(this);

Loop:
[L4119]  CALL        call CorralChoice_StrikeFarm(this);
[L3985]              havoc msgsender_MSG;
[L3986]              havoc msgvalue_MSG;
[L3987]              havoc choice;
[L3988]              havoc __ret_0_totalSupply;
[L3989]              havoc account_s121;
[L3990]              havoc __ret_0_balanceOf;
[L3991]              havoc recipient_s140;
[L3992]              havoc amount_s140;
[L3993]              havoc __ret_0_transfer;
[L3994]              havoc owner_s156;
[L3995]              havoc spender_s156;
[L3996]              havoc __ret_0_allowance;
[L3997]              havoc spender_s175;
[L3998]              havoc amount_s175;
[L3999]              havoc __ret_0_approve;
[L4000]              havoc sender_s211;
[L4001]              havoc recipient_s211;
[L4002]              havoc amount_s211;
[L4003]              havoc __ret_0_transferFrom;
[L4004]              havoc spender_s238;
[L4005]              havoc addedValue_s238;
[L4006]              havoc __ret_0_increaseAllowance;
[L4007]              havoc spender_s266;
[L4008]              havoc subtractedValue_s266;
[L4009]              havoc __ret_0_decreaseAllowance;
[L4010]              havoc name_s483;
[L4011]              havoc symbol_s483;
[L4012]              havoc decimals_s483;
[L4013]              havoc __ret_0_name;
[L4014]              havoc __ret_0_symbol;
[L4015]              havoc __ret_0_decimals;
[L4016]              havoc tmpNow;
[L4017]              havoc gas;
[L4018]              assume gas > 4000000 && gas <= 8000000;
[L4019]              tmpNow := now;
[L4020]              havoc now;
[L4021]              assume now > tmpNow;
[L4022]              assume msgsender_MSG != null;
[L4023]              assume DType[msgsender_MSG] != IERC20;
[L4024]              assume DType[msgsender_MSG] != Context;
[L4025]              assume DType[msgsender_MSG] != ERC20;
[L4026]              assume DType[msgsender_MSG] != ERC20Detailed;
[L4027]              assume DType[msgsender_MSG] != SafeMath;
[L4028]              assume DType[msgsender_MSG] != StrikeFarm;
[L4029]              Alloc[msgsender_MSG] := true;
[L4030]  COND FALSE  !(choice == 11)
[L4036]  COND FALSE  !(choice == 10)
[L4042]  COND FALSE  !(choice == 9)
[L4049]  COND FALSE  !(choice == 8)
[L4055]  COND FALSE  !(choice == 7)
[L4062]  COND TRUE   choice == 6
[L4063]              gas := gas - 21000;
[L4064]  COND TRUE   gas >= 0
[L4065]              assume amount_s211 >= 0 && amount_s211 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4066]              assume msgvalue_MSG == 0;
[L4067]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, sender_s211, recipient_s211, amount_s211);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != sender_s211 || p2 != msgsender_MSG) && sender_s211 == recipient_s211) && amount_s211 <= _balances_ERC20[this][sender_s211]) && amount_s211 <= _allowances_ERC20[this][sender_s211][msgsender_MSG]) && amount_s211 >= 0) && amount_s211 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s211] >= 0) && _balances_ERC20[this][recipient_s211] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][sender_s211] >= 0) && _balances_ERC20[this][sender_s211] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowances_ERC20[this][sender_s211][msgsender_MSG] >= 0) && _allowances_ERC20[this][sender_s211][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_ERC200 := true;
[L3]                 call_transferFrom_ERC200 := false;
[L3]                 revert := revert_hold;
[L519]               havoc __exception;
[L520]               revert := false;
[L521]   COND TRUE   __exception
[L522]               __tmp__Balance := Balance;
[L523]               __tmp__DType := DType;
[L524]               __tmp__Alloc := Alloc;
[L525]               __tmp__balance_ADDR := balance_ADDR;
[L526]               __tmp__M_Ref_int := M_Ref_int;
[L527]               __tmp__sum__balances0 := sum__balances0;
[L528]               __tmp__alloc__allowances_ERC20_lvl0 := alloc__allowances_ERC20_lvl0;
[L529]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L530]               __tmp__sum__allowances1 := sum__allowances1;
[L531]               __tmp__Length := Length;
[L532]               __tmp__now := now;
[L533]               __tmp___balances_ERC20 := _balances_ERC20;
[L534]               __tmp___allowances_ERC20 := _allowances_ERC20;
[L535]               __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L536]               __tmp___name_ERC20Detailed := _name_ERC20Detailed;
[L537]               __tmp___symbol_ERC20Detailed := _symbol_ERC20Detailed;
[L538]               __tmp___decimals_ERC20Detailed := _decimals_ERC20Detailed;
[L539]               __tmp___total_StrikeFarm := _total_StrikeFarm;
[L540]   CALL        call __ret_0_ := transferFrom~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, sender_s211, recipient_s211, amount_s211);
[L1837]  COND TRUE   __tmp__DType[this] == StrikeFarm
[L1838]  CALL        call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, sender_s211, recipient_s211, amount_s211);
[L2176]              __var_12 := null;
[L2177]  COND TRUE   !(sender_s323 != null)
[L2178]              revert := true;
[L1838]  RET         call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, sender_s211, recipient_s211, amount_s211);
[L1839]  COND TRUE   revert
[L540]   RET         call __ret_0_ := transferFrom~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, sender_s211, recipient_s211, amount_s211);
[L541]               assume revert || gas < 0;
[L4067]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, sender_s211, recipient_s211, amount_s211);
[L4119]  RET         call CorralChoice_StrikeFarm(this);

[2020-11-25 05:54:00,875 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 05:54:00,876 INFO  L82        PathProgramCache]: Analyzing trace with hash 41823866, now seen corresponding path program 1 times
[2020-11-25 05:54:00,876 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 05:54:00,896 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 05:54:00,918 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 05:54:00,979 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 05:54:00,979 INFO  L82        PathProgramCache]: Analyzing trace with hash -1715768392, now seen corresponding path program 1 times
[2020-11-25 05:54:00,980 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 05:54:00,985 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 05:54:00,990 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 05:54:00,999 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 05:54:00,999 INFO  L82        PathProgramCache]: Analyzing trace with hash -125548367, now seen corresponding path program 1 times
[2020-11-25 05:54:00,999 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 05:54:01,016 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 05:54:01,036 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
[2020-11-25 05:54:01,214 WARN  L188               SmtUtils]: Spent 101.00 ms on a formula simplification. DAG size of input: 155 DAG size of output: 146
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 883 to 1759
Garbage collection #6: 1759 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 1759 to 3517
Garbage collection #1: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #2: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #3: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #4: 317 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 317 to 631
Garbage collection #5: 631 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 631 to 1259
Garbage collection #6: 1259 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1259 to 2503
Garbage collection #7: 2503 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 2503 to 5003
[2020-11-25 05:54:01,371 WARN  L188               SmtUtils]: Spent 124.00 ms on a formula simplification. DAG size of input: 104 DAG size of output: 98
[2020-11-25 05:54:01,519 WARN  L188               SmtUtils]: Spent 146.00 ms on a formula simplification that was a NOOP. DAG size: 243
Garbage collection #1: 97 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.0s / 0.002s total
Resizing node table from 3019 to 6037
[2020-11-25 05:54:02,134 WARN  L188               SmtUtils]: Spent 601.00 ms on a formula simplification. DAG size of input: 201 DAG size of output: 201
[2020-11-25 05:54:02,815 WARN  L188               SmtUtils]: Spent 678.00 ms on a formula simplification. DAG size of input: 262 DAG size of output: 243
Garbage collection #1: 97 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3019 to 6037
Garbage collection #7: 6037 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 6037 to 12073
Garbage collection #8: 12073 nodes / 0 free / 0.003s / 0.004s total
Resizing node table from 12073 to 24137
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 883 to 1759
Garbage collection #6: 1759 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 1759 to 3517
Garbage collection #7: 3517 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 3517 to 7027
Garbage collection #8: 7027 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 7027 to 14051
[2020-11-25 05:54:03,065 WARN  L188               SmtUtils]: Spent 214.00 ms on a formula simplification. DAG size of input: 163 DAG size of output: 148
[2020-11-25 05:54:03,277 WARN  L188               SmtUtils]: Spent 210.00 ms on a formula simplification that was a NOOP. DAG size: 288
Garbage collection #1: 127 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 127 to 251
Garbage collection #2: 251 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 251 to 499
Garbage collection #3: 499 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 499 to 997
Garbage collection #4: 997 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 997 to 1993
Garbage collection #5: 1993 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 1993 to 3967
Garbage collection #6: 3967 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 3967 to 7933
Garbage collection #7: 7933 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 7933 to 15859
[2020-11-25 05:54:03,652 WARN  L188               SmtUtils]: Spent 362.00 ms on a formula simplification. DAG size of input: 234 DAG size of output: 229
[2020-11-25 05:54:03,823 WARN  L188               SmtUtils]: Spent 169.00 ms on a formula simplification that was a NOOP. DAG size: 229
Garbage collection #1: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #2: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #3: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #4: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #5: 1327 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1327 to 2647
Garbage collection #6: 2647 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2647 to 5281
Garbage collection #7: 5281 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 5281 to 10559
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #6: 1759 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1759 to 3517
[2020-11-25 05:54:04,223 WARN  L188               SmtUtils]: Spent 384.00 ms on a formula simplification. DAG size of input: 175 DAG size of output: 152
[2020-11-25 05:54:04,231 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #5: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #2: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #3: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #4: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #5: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #2: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #3: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #4: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #5: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #1: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #2: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #3: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #4: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
[2020-11-25 05:54:04,853 WARN  L188               SmtUtils]: Spent 220.00 ms on a formula simplification. DAG size of input: 193 DAG size of output: 182
Garbage collection #1: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #6: 1759 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1759 to 3517
Garbage collection #1: 41 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 41 to 79
Garbage collection #2: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #3: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #4: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #5: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #1: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #2: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #3: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #4: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #5: 1237 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1237 to 2473
Garbage collection #6: 2473 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2473 to 4943
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #1: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #2: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #3: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #4: 317 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 317 to 631
Garbage collection #5: 631 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 631 to 1259
Garbage collection #6: 1259 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1259 to 2503
Garbage collection #7: 2503 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2503 to 5003
Garbage collection #1: 97 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3019 to 6037
[2020-11-25 05:54:05,808 WARN  L188               SmtUtils]: Spent 390.00 ms on a formula simplification. DAG size of input: 202 DAG size of output: 202
[2020-11-25 05:54:06,406 WARN  L188               SmtUtils]: Spent 595.00 ms on a formula simplification. DAG size of input: 262 DAG size of output: 244
Garbage collection #1: 97 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3019 to 6037
Garbage collection #7: 6037 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 6037 to 12073
Garbage collection #8: 12073 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 12073 to 24137
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #6: 1759 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1759 to 3517
Garbage collection #7: 3517 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 3517 to 7027
Garbage collection #8: 7027 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 7027 to 14051
[2020-11-25 05:54:06,569 WARN  L188               SmtUtils]: Spent 147.00 ms on a formula simplification. DAG size of input: 152 DAG size of output: 146
[2020-11-25 05:54:06,714 WARN  L188               SmtUtils]: Spent 143.00 ms on a formula simplification that was a NOOP. DAG size: 286
Garbage collection #1: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #2: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #3: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #4: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #5: 1759 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1759 to 3517
Garbage collection #6: 3517 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3517 to 7027
Garbage collection #7: 7027 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 7027 to 14051
[2020-11-25 05:54:07,033 WARN  L188               SmtUtils]: Spent 312.00 ms on a formula simplification. DAG size of input: 227 DAG size of output: 227
[2020-11-25 05:54:07,946 WARN  L188               SmtUtils]: Spent 911.00 ms on a formula simplification. DAG size of input: 412 DAG size of output: 399
Garbage collection #1: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #2: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #3: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #4: 1237 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1237 to 2473
Garbage collection #5: 2473 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2473 to 4943
Garbage collection #6: 4943 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4943 to 9883
Garbage collection #1: 71 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 71 to 139
Garbage collection #2: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #3: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #4: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #5: 1093 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1093 to 2179
Garbage collection #6: 2179 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2179 to 4357
[2020-11-25 05:54:08,336 WARN  L188               SmtUtils]: Spent 375.00 ms on a formula simplification. DAG size of input: 213 DAG size of output: 196
[2020-11-25 05:54:08,565 WARN  L188               SmtUtils]: Spent 214.00 ms on a formula simplification that was a NOOP. DAG size: 294
Garbage collection #1: 101 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 101 to 199
Garbage collection #2: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #3: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #4: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #5: 1571 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1571 to 3137
Garbage collection #6: 3137 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3137 to 6271
Garbage collection #7: 6271 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 6271 to 12541
Garbage collection #1: 67 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 67 to 131
Garbage collection #2: 131 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 131 to 257
Garbage collection #3: 257 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 257 to 509
Garbage collection #4: 509 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 509 to 1013
Garbage collection #5: 1013 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1013 to 2017
Garbage collection #6: 2017 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2017 to 4027
Garbage collection #7: 4027 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4027 to 8053
Garbage collection #8: 8053 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 8053 to 16103
[2020-11-25 05:54:09,028 WARN  L188               SmtUtils]: Spent 444.00 ms on a formula simplification. DAG size of input: 208 DAG size of output: 196
[2020-11-25 05:54:09,502 WARN  L188               SmtUtils]: Spent 473.00 ms on a formula simplification. DAG size of input: 296 DAG size of output: 295
Garbage collection #1: 103 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 103 to 199
Garbage collection #2: 199 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 199 to 397
Garbage collection #3: 397 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 397 to 787
Garbage collection #4: 787 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 787 to 1571
Garbage collection #5: 1571 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 1571 to 3137
Garbage collection #6: 3137 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 3137 to 6271
Garbage collection #1: 107 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 107 to 211
Garbage collection #2: 211 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 211 to 421
Garbage collection #3: 421 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 421 to 839
Garbage collection #4: 839 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 839 to 1669
Garbage collection #5: 1669 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1669 to 3331
Garbage collection #6: 3331 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 3331 to 6661
Garbage collection #7: 6661 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 6661 to 13313
Garbage collection #8: 13313 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 13313 to 26597
Garbage collection #9: 26597 nodes / 0 free / 0.0s / 0.002s total
Resizing node table from 26597 to 53189
[2020-11-25 05:54:10,087 WARN  L188               SmtUtils]: Spent 572.00 ms on a formula simplification. DAG size of input: 300 DAG size of output: 290
[2020-11-25 05:54:10,107 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 05:54:10,131 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 05:54:10,140 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 05:54:10 BasicIcfg
[2020-11-25 05:54:10,140 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-25 05:54:10,140 INFO  L168              Benchmark]: Toolchain (without parser) took 13224.49 ms. Allocated memory was 1.0 GB in the beginning and 2.2 GB in the end (delta: 1.2 GB). Free memory was 935.2 MB in the beginning and 835.2 MB in the end (delta: 100.0 MB). Peak memory consumption was 1.3 GB. Max. memory is 15.3 GB.
[2020-11-25 05:54:10,141 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.16 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 05:54:10,141 INFO  L168              Benchmark]: Boogie Preprocessor took 109.42 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 929.8 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 05:54:10,141 INFO  L168              Benchmark]: UtopiaSpecLang took 64.18 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 919.1 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
[2020-11-25 05:54:10,142 INFO  L168              Benchmark]: Boogie Printer took 16.89 ms. Allocated memory is still 1.0 GB. Free memory is still 919.1 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 05:54:10,142 INFO  L168              Benchmark]: RCFGBuilder took 795.61 ms. Allocated memory is still 1.0 GB. Free memory was 919.1 MB in the beginning and 806.4 MB in the end (delta: 112.7 MB). Peak memory consumption was 112.7 MB. Max. memory is 15.3 GB.
[2020-11-25 05:54:10,142 INFO  L168              Benchmark]: UtopiaLTL2Aut took 42.11 ms. Allocated memory is still 1.0 GB. Free memory was 806.4 MB in the beginning and 802.8 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
[2020-11-25 05:54:10,142 INFO  L168              Benchmark]: BÃ¼chi Program Product took 1468.75 ms. Allocated memory was 1.0 GB in the beginning and 1.2 GB in the end (delta: 177.2 MB). Free memory was 802.8 MB in the beginning and 999.4 MB in the end (delta: -196.6 MB). Peak memory consumption was 173.8 MB. Max. memory is 15.3 GB.
[2020-11-25 05:54:10,143 INFO  L168              Benchmark]: BlockEncodingV2 took 159.45 ms. Allocated memory is still 1.2 GB. Free memory was 999.4 MB in the beginning and 937.6 MB in the end (delta: 61.8 MB). Peak memory consumption was 61.8 MB. Max. memory is 15.3 GB.
[2020-11-25 05:54:10,143 INFO  L168              Benchmark]: BuchiAutomizer took 10564.56 ms. Allocated memory was 1.2 GB in the beginning and 2.2 GB in the end (delta: 989.9 MB). Free memory was 937.6 MB in the beginning and 835.2 MB in the end (delta: 102.4 MB). Peak memory consumption was 1.1 GB. Max. memory is 15.3 GB.
[2020-11-25 05:54:10,145 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    3736 locations, 6791 edges
  - StatisticsResult: Encoded RCFG
    3636 locations, 6514 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.16 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 109.42 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 929.8 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 64.18 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 919.1 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 16.89 ms. Allocated memory is still 1.0 GB. Free memory is still 919.1 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * RCFGBuilder took 795.61 ms. Allocated memory is still 1.0 GB. Free memory was 919.1 MB in the beginning and 806.4 MB in the end (delta: 112.7 MB). Peak memory consumption was 112.7 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 42.11 ms. Allocated memory is still 1.0 GB. Free memory was 806.4 MB in the beginning and 802.8 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 1468.75 ms. Allocated memory was 1.0 GB in the beginning and 1.2 GB in the end (delta: 177.2 MB). Free memory was 802.8 MB in the beginning and 999.4 MB in the end (delta: -196.6 MB). Peak memory consumption was 173.8 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 159.45 ms. Allocated memory is still 1.2 GB. Free memory was 999.4 MB in the beginning and 937.6 MB in the end (delta: 61.8 MB). Peak memory consumption was 61.8 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 10564.56 ms. Allocated memory was 1.2 GB in the beginning and 2.2 GB in the end (delta: 989.9 MB). Free memory was 937.6 MB in the beginning and 835.2 MB in the end (delta: 102.4 MB). Peak memory consumption was 1.1 GB. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    1477 locations, 2079 edges
  - StatisticsResult: BuchiProgram size
    3736 locations, 6791 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 4 terminating modules (4 trivial, 0 deterministic, 0 nondeterministic) and one nonterminating remainder module.4 modules have a trivial ranking function, the largest among these consists of 7 locations. The remainder module has 2265 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 10.4s and 5 iterations.  TraceHistogramMax:3. Analysis of lassos took 9.4s. Construction of modules took 0.2s. BÃ¼chi inclusion checks took 0.3s. Highest rank in rank-based complementation 0. Minimization of det autom 4. Minimization of nondet autom 0. Automata minimization 0.1s AutomataMinimizationTime, 4 MinimizatonAttempts, 764 StatesRemovedByMinimization, 2 NontrivialMinimizations. Non-live state removal took 0.0s Buchi closure took 0.0s. Biggest automaton had 2387 states and ocurred in iteration 2.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 10728 SDtfs, 5625 SDslu, 17693 SDs, 0 SdLazy, 1199 SolverSat, 1478 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 0.2s Time	LassoAnalysisResults: nont1 unkn0 SFLI0 SFLT0 conc0 concLT0 SILN0 SILU4 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - TransactionCounterexample: Violation of LTL property LTL
    Found an infinite, lasso-shaped execution that violates the LTL property LTL.
Stem:
address(115792089237316195423570985008687907853269984665640564039457584007913129639949) = (new StrikeFarm).gas(2)({from : 115792089237316195423570985008687907853269984665640564039457584007913129639951});
[L1002]              havoc __exception;
[L1003]              revert := false;
[L1004]  COND FALSE  !(__exception)
[L1026]  CALL        call StrikeFarm_StrikeFarm__success(this, msgsender_MSG, msgvalue_MSG);
[L2726]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L1588]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1573]              assume msgsender_MSG != null;
[L1574]              Balance[this] := 0;
[L1588]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1589]  COND FALSE  !(revert)
[L2726]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2727]  COND FALSE  !(revert)
[L2730]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1556]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1541]              assume msgsender_MSG != null;
[L1542]              Balance[this] := 0;
[L1556]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1557]  COND FALSE  !(revert)
[L2730]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2731]  COND FALSE  !(revert)
[L2734]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1650]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L1588]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1573]              assume msgsender_MSG != null;
[L1574]              Balance[this] := 0;
[L1588]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1589]  COND FALSE  !(revert)
[L1650]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L1651]  COND FALSE  !(revert)
[L1654]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1556]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1541]              assume msgsender_MSG != null;
[L1542]              Balance[this] := 0;
[L1556]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1557]  COND FALSE  !(revert)
[L1654]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1655]  COND FALSE  !(revert)
[L1658]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1622]              assume msgsender_MSG != null;
[L1623]              Balance[this] := 0;
[L1624]              _balances_ERC20[this] := zeroRefintArr();
[L1625]              sum__balances0[this] := 0;
[L1626]              _allowances_ERC20[this] := zeroRefRefintArr();
[L1627]              sum__allowances1[this] := 0;
[L1628]              _totalSupply_ERC20[this] := 0;
[L1658]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1659]  COND FALSE  !(revert)
[L2734]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2735]  COND FALSE  !(revert)
[L2738]  CALL        call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, 879309088, -1713371657, 18);
[L2414]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1556]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1541]              assume msgsender_MSG != null;
[L1542]              Balance[this] := 0;
[L1556]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1557]  COND FALSE  !(revert)
[L2414]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2415]  COND FALSE  !(revert)
[L2418]  CALL        call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s483, symbol_s483, decimals_s483);
[L2389]              assume msgsender_MSG != null;
[L2390]              Balance[this] := 0;
[L2391]              _name_ERC20Detailed[this] := -1368110498;
[L2392]              _symbol_ERC20Detailed[this] := -1368110498;
[L2393]              _decimals_ERC20Detailed[this] := 0;
[L2395]              _name_ERC20Detailed[this] := name_s483;
[L2396]              _symbol_ERC20Detailed[this] := symbol_s483;
[L2397]              _decimals_ERC20Detailed[this] := decimals_s483;
[L2418]  RET         call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s483, symbol_s483, decimals_s483);
[L2419]  COND FALSE  !(revert)
[L2738]  RET         call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, 879309088, -1713371657, 18);
[L2739]  COND FALSE  !(revert)
[L2742]  CALL        call StrikeFarm_StrikeFarm_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2673]              assume msgsender_MSG != null;
[L2674]              Balance[this] := 0;
[L2675]              _total_StrikeFarm[this] := 11000;
[L2677]  COND TRUE   DType[this] == StrikeFarm
[L2678]  CALL        call __var_27 := decimals_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG);
[L2456]              __ret_0_ := _decimals_ERC20Detailed[this];
[L2678]  RET         call __var_27 := decimals_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG);
[L2679]  COND FALSE  !(revert)
[L2685]              __var_26 := __var_27 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2686]  COND TRUE   DType[this] == StrikeFarm
[L2687]  CALL        call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, nonlinearMul(_total_StrikeFarm[this], nonlinearPow(10, __var_27 % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L2264]              __var_16 := null;
[L2265]  COND FALSE  !(!(account_s366 != null))
[L2269]  CALL        call __var_17 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], amount_s366);
[L2507]              c_s533 := (a_s533 + b_s533) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2508]  COND FALSE  !(!(c_s533 >= a_s533))
[L2512]              __ret_0_ := c_s533;
[L2269]  RET         call __var_17 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], amount_s366);
[L2270]  COND FALSE  !(revert)
[L2273]              _totalSupply_ERC20[this] := __var_17;
[L2274]  CALL        call __var_18 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s366], amount_s366);
[L2507]              c_s533 := (a_s533 + b_s533) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2508]  COND FALSE  !(!(c_s533 >= a_s533))
[L2512]              __ret_0_ := c_s533;
[L2274]  RET         call __var_18 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s366], amount_s366);
[L2275]  COND FALSE  !(revert)
[L2278]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][account_s366];
[L2279]              _balances_ERC20[this][account_s366] := __var_18;
[L2280]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][account_s366];
[L2281]              assert { :EventEmitted "Transfer_ERC20" } true;
[L2687]  RET         call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, nonlinearMul(_total_StrikeFarm[this], nonlinearPow(10, __var_27 % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L2688]  COND FALSE  !(revert)
[L2742]  RET         call StrikeFarm_StrikeFarm_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2743]  COND FALSE  !(revert)
[L1026]  RET         call StrikeFarm_StrikeFarm__success(this, msgsender_MSG, msgvalue_MSG);
[L1027]              assume !revert && gas >= 0;
[L4115]  RET         call StrikeFarm_StrikeFarm(this, msgsender_MSG, msgvalue_MSG);
ERC20(115792089237316195423570985008687907853269984665640564039457584007913129639949).transferFrom~address~address~uint256.gas(3979002)({from : 115792089237316195423570985008687907853269984665640564039457584007913129639938, sender : 0, recipient : 0, amount : 0});
[L3]                revert_hold := revert;
[L3]                revert := false;
[L3]                assume (((((((((((p1 != sender_s211 || p2 != msgsender_MSG) && sender_s211 == recipient_s211) && amount_s211 <= _balances_ERC20[this][sender_s211]) && amount_s211 <= _allowances_ERC20[this][sender_s211][msgsender_MSG]) && amount_s211 >= 0) && amount_s211 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s211] >= 0) && _balances_ERC20[this][recipient_s211] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][sender_s211] >= 0) && _balances_ERC20[this][sender_s211] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowances_ERC20[this][sender_s211][msgsender_MSG] >= 0) && _allowances_ERC20[this][sender_s211][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                call_transferFrom_ERC200 := true;
[L3]                call_transferFrom_ERC200 := false;
[L3]                revert := revert_hold;
[L519]              havoc __exception;
[L520]              revert := false;
[L521]   COND TRUE  __exception
[L522]              __tmp__Balance := Balance;
[L523]              __tmp__DType := DType;
[L524]              __tmp__Alloc := Alloc;
[L525]              __tmp__balance_ADDR := balance_ADDR;
[L526]              __tmp__M_Ref_int := M_Ref_int;
[L527]              __tmp__sum__balances0 := sum__balances0;
[L528]              __tmp__alloc__allowances_ERC20_lvl0 := alloc__allowances_ERC20_lvl0;
[L529]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L530]              __tmp__sum__allowances1 := sum__allowances1;
[L531]              __tmp__Length := Length;
[L532]              __tmp__now := now;
[L533]              __tmp___balances_ERC20 := _balances_ERC20;
[L534]              __tmp___allowances_ERC20 := _allowances_ERC20;
[L535]              __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L536]              __tmp___name_ERC20Detailed := _name_ERC20Detailed;
[L537]              __tmp___symbol_ERC20Detailed := _symbol_ERC20Detailed;
[L538]              __tmp___decimals_ERC20Detailed := _decimals_ERC20Detailed;
[L539]              __tmp___total_StrikeFarm := _total_StrikeFarm;
[L540]   CALL       call __ret_0_ := transferFrom~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, sender_s211, recipient_s211, amount_s211);
[L1837]  COND TRUE  __tmp__DType[this] == StrikeFarm
[L1838]  CALL       call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, sender_s211, recipient_s211, amount_s211);
[L2176]             __var_12 := null;
[L2177]  COND TRUE  !(sender_s323 != null)
[L2178]             revert := true;
[L1838]  RET        call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, sender_s211, recipient_s211, amount_s211);
[L1839]  COND TRUE  revert
[L540]   RET        call __ret_0_ := transferFrom~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, sender_s211, recipient_s211, amount_s211);
[L541]              assume revert || gas < 0;
[L4067]  RET        call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, sender_s211, recipient_s211, amount_s211);

Loop:
ERC20(115792089237316195423570985008687907853269984665640564039457584007913129639949).transferFrom~address~address~uint256.gas(3979001)({from : 115792089237316195423570985008687907853269984665640564039457584007913129639952, sender : 0, recipient : 0, amount : 0});
[L3]                revert_hold := revert;
[L3]                revert := false;
[L3]                assume (((((((((((p1 != sender_s211 || p2 != msgsender_MSG) && sender_s211 == recipient_s211) && amount_s211 <= _balances_ERC20[this][sender_s211]) && amount_s211 <= _allowances_ERC20[this][sender_s211][msgsender_MSG]) && amount_s211 >= 0) && amount_s211 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s211] >= 0) && _balances_ERC20[this][recipient_s211] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][sender_s211] >= 0) && _balances_ERC20[this][sender_s211] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowances_ERC20[this][sender_s211][msgsender_MSG] >= 0) && _allowances_ERC20[this][sender_s211][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                call_transferFrom_ERC200 := true;
[L3]                call_transferFrom_ERC200 := false;
[L3]                revert := revert_hold;
[L519]              havoc __exception;
[L520]              revert := false;
[L521]   COND TRUE  __exception
[L522]              __tmp__Balance := Balance;
[L523]              __tmp__DType := DType;
[L524]              __tmp__Alloc := Alloc;
[L525]              __tmp__balance_ADDR := balance_ADDR;
[L526]              __tmp__M_Ref_int := M_Ref_int;
[L527]              __tmp__sum__balances0 := sum__balances0;
[L528]              __tmp__alloc__allowances_ERC20_lvl0 := alloc__allowances_ERC20_lvl0;
[L529]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L530]              __tmp__sum__allowances1 := sum__allowances1;
[L531]              __tmp__Length := Length;
[L532]              __tmp__now := now;
[L533]              __tmp___balances_ERC20 := _balances_ERC20;
[L534]              __tmp___allowances_ERC20 := _allowances_ERC20;
[L535]              __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L536]              __tmp___name_ERC20Detailed := _name_ERC20Detailed;
[L537]              __tmp___symbol_ERC20Detailed := _symbol_ERC20Detailed;
[L538]              __tmp___decimals_ERC20Detailed := _decimals_ERC20Detailed;
[L539]              __tmp___total_StrikeFarm := _total_StrikeFarm;
[L540]   CALL       call __ret_0_ := transferFrom~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, sender_s211, recipient_s211, amount_s211);
[L1837]  COND TRUE  __tmp__DType[this] == StrikeFarm
[L1838]  CALL       call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, sender_s211, recipient_s211, amount_s211);
[L2176]             __var_12 := null;
[L2177]  COND TRUE  !(sender_s323 != null)
[L2178]             revert := true;
[L1838]  RET        call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, sender_s211, recipient_s211, amount_s211);
[L1839]  COND TRUE  revert
[L540]   RET        call __ret_0_ := transferFrom~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, sender_s211, recipient_s211, amount_s211);
[L541]              assume revert || gas < 0;
[L4067]  RET        call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, sender_s211, recipient_s211, amount_s211);

End of lasso representation.
RESULT: Ultimate could not prove your program: Toolchain returned no result.
Received shutdown request...
