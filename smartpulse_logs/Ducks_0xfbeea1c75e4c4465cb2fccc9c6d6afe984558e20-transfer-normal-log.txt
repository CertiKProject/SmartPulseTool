This is Ultimate 0.1.24-f1553f5-m
[2020-11-24 18:35:28,908 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-24 18:35:28,909 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-24 18:35:28,917 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-24 18:35:28,917 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-24 18:35:28,917 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-24 18:35:28,918 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-24 18:35:28,919 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-24 18:35:28,920 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-24 18:35:28,920 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-24 18:35:28,921 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-24 18:35:28,921 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-24 18:35:28,921 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-24 18:35:28,922 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-24 18:35:28,923 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-24 18:35:28,923 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-24 18:35:28,923 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-24 18:35:28,924 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-24 18:35:28,925 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-24 18:35:28,926 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-24 18:35:28,926 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-24 18:35:28,927 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-24 18:35:28,928 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-24 18:35:28,928 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-24 18:35:28,928 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-24 18:35:28,929 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-24 18:35:28,929 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-24 18:35:28,930 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-24 18:35:28,930 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-24 18:35:28,930 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-24 18:35:28,930 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-24 18:35:28,931 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-24 18:35:28,931 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-24 18:35:28,931 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-24 18:35:28,932 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-24 18:35:28,932 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-24 18:35:28,932 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-24 18:35:28,932 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-24 18:35:28,932 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-24 18:35:28,933 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-24 18:35:28,933 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-24 18:35:28,933 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-24 18:35:28,939 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-24 18:35:28,939 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-24 18:35:28,940 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-24 18:35:28,940 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-24 18:35:28,940 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-24 18:35:28,940 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-24 18:35:28,940 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-24 18:35:28,940 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-24 18:35:28,940 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-24 18:35:28,940 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-24 18:35:28,940 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-24 18:35:28,940 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-24 18:35:28,940 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-24 18:35:28,941 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-24 18:35:28,941 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-24 18:35:28,941 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-24 18:35:28,941 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-24 18:35:28,941 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-24 18:35:28,941 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-24 18:35:28,941 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-24 18:35:28,941 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-24 18:35:28,941 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-24 18:35:28,941 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-24 18:35:28,941 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-24 18:35:28,941 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-24 18:35:28,942 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-24 18:35:28,957 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-24 18:35:28,968 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-24 18:35:28,970 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-24 18:35:28,971 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-24 18:35:28,972 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-24 18:35:28,972 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/Ducks_0xfbeea1c75e4c4465cb2fccc9c6d6afe984558e20_transfer-normal.bpl
[2020-11-24 18:35:28,972 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/Ducks_0xfbeea1c75e4c4465cb2fccc9c6d6afe984558e20_transfer-normal.bpl'
[2020-11-24 18:35:29,031 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-24 18:35:29,032 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-24 18:35:29,033 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-24 18:35:29,033 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-24 18:35:29,033 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-24 18:35:29,049 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "Ducks_0xfbeea1c75e4c4465cb2fccc9c6d6afe984558e20_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 06:35:29" (1/1) ...
[2020-11-24 18:35:29,050 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "Ducks_0xfbeea1c75e4c4465cb2fccc9c6d6afe984558e20_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 06:35:29" (1/1) ...
[2020-11-24 18:35:29,070 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "Ducks_0xfbeea1c75e4c4465cb2fccc9c6d6afe984558e20_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 06:35:29" (1/1) ...
[2020-11-24 18:35:29,071 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "Ducks_0xfbeea1c75e4c4465cb2fccc9c6d6afe984558e20_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 06:35:29" (1/1) ...
[2020-11-24 18:35:29,084 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "Ducks_0xfbeea1c75e4c4465cb2fccc9c6d6afe984558e20_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 06:35:29" (1/1) ...
[2020-11-24 18:35:29,091 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "Ducks_0xfbeea1c75e4c4465cb2fccc9c6d6afe984558e20_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 06:35:29" (1/1) ...
[2020-11-24 18:35:29,095 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "Ducks_0xfbeea1c75e4c4465cb2fccc9c6d6afe984558e20_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 06:35:29" (1/1) ...
[2020-11-24 18:35:29,101 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-24 18:35:29,102 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-24 18:35:29,102 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-24 18:35:29,104 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-24 18:35:29,107 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "Ducks_0xfbeea1c75e4c4465cb2fccc9c6d6afe984558e20_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 06:35:29" (1/1) ...
[2020-11-24 18:35:29,120 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(Ducks.transfer(to, value), p1 != msg.sender && p1 != to && msg.sender != to && value <= balances_Ducks[this][msg.sender] && balances_Ducks[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_Ducks[this][to] >= 0 && balances_Ducks[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_Ducks[this][msg.sender] >= 0 &&  balances_Ducks[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(Ducks.transfer(to, value), return == true && balances_Ducks[this][msg.sender] == old(balances_Ducks[this][msg.sender]) - value && balances_Ducks[this][to] == old(balances_Ducks[this][to]) + value && _totalSupply_Ducks[this] == old(_totalSupply_Ducks[this]) && allowed_Ducks[this] == old(allowed_Ducks[this]) && balances_Ducks[this][p1] == old(balances_Ducks[this][p1]) && name_Ducks[this] == old(name_Ducks[this]) && symbol_Ducks[this] == old(symbol_Ducks[this]) && decimals_Ducks[this] == old(decimals_Ducks[this]))))
[2020-11-24 18:35:29,125 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(Ducks.transfer(to, value), p1 != msg.sender && p1 != to && msg.sender != to && value <= balances_Ducks[this][msg.sender] && balances_Ducks[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_Ducks[this][to] >= 0 && balances_Ducks[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_Ducks[this][msg.sender] >= 0 &&  balances_Ducks[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(Ducks.transfer(to, value), return == true && balances_Ducks[this][msg.sender] == old(balances_Ducks[this][msg.sender]) - value && balances_Ducks[this][to] == old(balances_Ducks[this][to]) + value && _totalSupply_Ducks[this] == old(_totalSupply_Ducks[this]) && allowed_Ducks[this] == old(allowed_Ducks[this]) && balances_Ducks[this][p1] == old(balances_Ducks[this][p1]) && name_Ducks[this] == old(name_Ducks[this]) && symbol_Ducks[this] == old(symbol_Ducks[this]) && decimals_Ducks[this] == old(decimals_Ducks[this]))))
[2020-11-24 18:35:29,132 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(Ducks.transfer(to, value), p1 != msg.sender && p1 != to && msg.sender != to && value <= balances_Ducks[this][msg.sender] && balances_Ducks[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_Ducks[this][to] >= 0 && balances_Ducks[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_Ducks[this][msg.sender] >= 0 &&  balances_Ducks[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(Ducks.transfer(to, value), return == true && balances_Ducks[this][msg.sender] == old(balances_Ducks[this][msg.sender]) - value && balances_Ducks[this][to] == old(balances_Ducks[this][to]) + value && _totalSupply_Ducks[this] == old(_totalSupply_Ducks[this]) && allowed_Ducks[this] == old(allowed_Ducks[this]) && balances_Ducks[this][p1] == old(balances_Ducks[this][p1]) && name_Ducks[this] == old(name_Ducks[this]) && symbol_Ducks[this] == old(symbol_Ducks[this]) && decimals_Ducks[this] == old(decimals_Ducks[this]))))
[2020-11-24 18:35:29,137 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( ( ( p1!=msg.sender && p1!=to_s334 ) && msg.sender!=to_s334 ) && tokens_s334<=balances_Ducks[this][msg.sender] ) && ( balances_Ducks[this][to_s334] + tokens_s334 )<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && tokens_s334>=0 ) && tokens_s334<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && balances_Ducks[this][to_s334]>=0 ) && balances_Ducks[this][to_s334]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && balances_Ducks[this][msg.sender]>=0 ) && balances_Ducks[this][msg.sender]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPNEQ,IdentifierExpression[p1,GLOBAL],IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_Ducks>]],BinaryExpression[COMPNEQ,IdentifierExpression[p1,GLOBAL],IdentifierExpression[to_s334,<IMPLEMENTATION_INPARAM,transfer~address~uint256_Ducks>]]],BinaryExpression[COMPNEQ,IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_Ducks>],IdentifierExpression[to_s334,<IMPLEMENTATION_INPARAM,transfer~address~uint256_Ducks>]]],BinaryExpression[COMPLEQ,IdentifierExpression[tokens_s334,<IMPLEMENTATION_INPARAM,transfer~address~uint256_Ducks>],ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_Ducks,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_Ducks>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_Ducks>]]]]],BinaryExpression[COMPLT,BinaryExpression[ARITHPLUS,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_Ducks,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_Ducks>]]],[IdentifierExpression[to_s334,<IMPLEMENTATION_INPARAM,transfer~address~uint256_Ducks>]]],IdentifierExpression[tokens_s334,<IMPLEMENTATION_INPARAM,transfer~address~uint256_Ducks>]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,IdentifierExpression[tokens_s334,<IMPLEMENTATION_INPARAM,transfer~address~uint256_Ducks>],IntegerLiteral[0]]],BinaryExpression[COMPLT,IdentifierExpression[tokens_s334,<IMPLEMENTATION_INPARAM,transfer~address~uint256_Ducks>],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_Ducks,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_Ducks>]]],[IdentifierExpression[to_s334,<IMPLEMENTATION_INPARAM,transfer~address~uint256_Ducks>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_Ducks,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_Ducks>]]],[IdentifierExpression[to_s334,<IMPLEMENTATION_INPARAM,transfer~address~uint256_Ducks>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_Ducks,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_Ducks>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_Ducks>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_Ducks,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_Ducks>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_Ducks>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]]
[2020-11-24 18:35:29,140 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( success_s334==true && balances_Ducks[this][msg.sender]==( ( old(balances_Ducks[this][msg.sender]) ) - tokens_s334 ) ) && balances_Ducks[this][to_s334]==( ( old(balances_Ducks[this][to_s334]) ) + tokens_s334 ) ) && _totalSupply_Ducks[this]==( old(_totalSupply_Ducks[this]) ) ) && allowed_Ducks[this]==( old(allowed_Ducks[this]) ) ) && balances_Ducks[this][p1]==( old(balances_Ducks[this][p1]) ) ) && name_Ducks[this]==( old(name_Ducks[this]) ) ) && symbol_Ducks[this]==( old(symbol_Ducks[this]) ) ) && decimals_Ducks[this]==( old(decimals_Ducks[this]) ) ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[success_s334,<IMPLEMENTATION_OUTPARAM,transfer~address~uint256_Ducks>],BooleanLiteral[true]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_Ducks,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_Ducks>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_Ducks>]]],BinaryExpression[ARITHMINUS,UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_Ducks,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_Ducks>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_Ducks>]]]],IdentifierExpression[tokens_s334,<IMPLEMENTATION_INPARAM,transfer~address~uint256_Ducks>]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_Ducks,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_Ducks>]]],[IdentifierExpression[to_s334,<IMPLEMENTATION_INPARAM,transfer~address~uint256_Ducks>]]],BinaryExpression[ARITHPLUS,UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_Ducks,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_Ducks>]]],[IdentifierExpression[to_s334,<IMPLEMENTATION_INPARAM,transfer~address~uint256_Ducks>]]]],IdentifierExpression[tokens_s334,<IMPLEMENTATION_INPARAM,transfer~address~uint256_Ducks>]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_totalSupply_Ducks,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_Ducks>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_totalSupply_Ducks,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_Ducks>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[allowed_Ducks,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_Ducks>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[allowed_Ducks,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_Ducks>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_Ducks,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_Ducks>]]],[IdentifierExpression[p1,GLOBAL]]],UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_Ducks,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_Ducks>]]],[IdentifierExpression[p1,GLOBAL]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[name_Ducks,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_Ducks>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[name_Ducks,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_Ducks>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[symbol_Ducks,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_Ducks>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[symbol_Ducks,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_Ducks>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[decimals_Ducks,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_Ducks>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[decimals_Ducks,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_Ducks>]]]]]]
[2020-11-24 18:35:29,142 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(Ducks.transfer(to, value), p1 != msg.sender && p1 != to && msg.sender != to && value <= balances_Ducks[this][msg.sender] && balances_Ducks[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_Ducks[this][to] >= 0 && balances_Ducks[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_Ducks[this][msg.sender] >= 0 &&  balances_Ducks[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(Ducks.transfer(to, value), return == true && balances_Ducks[this][msg.sender] == old(balances_Ducks[this][msg.sender]) - value && balances_Ducks[this][to] == old(balances_Ducks[this][to]) + value && _totalSupply_Ducks[this] == old(_totalSupply_Ducks[this]) && allowed_Ducks[this] == old(allowed_Ducks[this]) && balances_Ducks[this][p1] == old(balances_Ducks[this][p1]) && name_Ducks[this] == old(name_Ducks[this]) && symbol_Ducks[this] == old(symbol_Ducks[this]) && decimals_Ducks[this] == old(decimals_Ducks[this]))))
[2020-11-24 18:35:29,143 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_transfer_Ducks0) ==> ( <>AP(success_transfer_Ducks0) ) ) )
Executed UtopiaSpecLang
[2020-11-24 18:35:29,146 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 06:35:29 PropertyContainer
[2020-11-24 18:35:29,147 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-24 18:35:29,147 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-24 18:35:29,147 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-24 18:35:29,147 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-24 18:35:29,148 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Ducks_0xfbeea1c75e4c4465cb2fccc9c6d6afe984558e20_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 06:35:29" (1/2) ...
[2020-11-24 18:35:29,148 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-24 18:35:29,148 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-24 18:35:29,156 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 06:35:29" (2/2) ...
[2020-11-24 18:35:29,156 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-24 18:35:29,156 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-24 18:35:29,156 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-24 18:35:29,156 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-24 18:35:29,157 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Ducks_0xfbeea1c75e4c4465cb2fccc9c6d6afe984558e20_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 06:35:29" (1/2) ...
[2020-11-24 18:35:29,208 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-24 18:35:29,208 INFO  L130     BoogieDeclarations]: Found specification of procedure safeAdd~uint256~uint256_SafeMath
[2020-11-24 18:35:29,208 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeAdd~uint256~uint256_SafeMath
[2020-11-24 18:35:29,208 INFO  L130     BoogieDeclarations]: Found specification of procedure safeSub~uint256~uint256_SafeMath
[2020-11-24 18:35:29,208 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeSub~uint256~uint256_SafeMath
[2020-11-24 18:35:29,208 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_Ducks
[2020-11-24 18:35:29,209 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_Ducks
[2020-11-24 18:35:29,209 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_Ducks
[2020-11-24 18:35:29,209 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_Ducks
[2020-11-24 18:35:29,209 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_Ducks
[2020-11-24 18:35:29,209 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_Ducks
[2020-11-24 18:35:29,209 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_Ducks
[2020-11-24 18:35:29,209 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_Ducks
[2020-11-24 18:35:29,209 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_Ducks
[2020-11-24 18:35:29,209 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_Ducks
[2020-11-24 18:35:29,209 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_Ducks
[2020-11-24 18:35:29,210 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_Ducks
[2020-11-24 18:35:29,210 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-24 18:35:29,210 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-24 18:35:29,211 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-24 18:35:29,211 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20Interface
[2020-11-24 18:35:29,211 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20Interface
[2020-11-24 18:35:29,211 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_SafeMath
[2020-11-24 18:35:29,211 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_SafeMath
[2020-11-24 18:35:29,211 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_Ducks
[2020-11-24 18:35:29,211 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-24 18:35:29,211 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-24 18:35:29,211 INFO  L130     BoogieDeclarations]: Found specification of procedure safeAdd~uint256~uint256_SafeMath__success
[2020-11-24 18:35:29,211 INFO  L130     BoogieDeclarations]: Found specification of procedure safeAdd~uint256~uint256_SafeMath__fail
[2020-11-24 18:35:29,211 INFO  L130     BoogieDeclarations]: Found specification of procedure safeSub~uint256~uint256_SafeMath__success
[2020-11-24 18:35:29,211 INFO  L130     BoogieDeclarations]: Found specification of procedure safeSub~uint256~uint256_SafeMath__fail
[2020-11-24 18:35:29,212 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_Ducks__success
[2020-11-24 18:35:29,212 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_Ducks__fail
[2020-11-24 18:35:29,212 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_Ducks__success
[2020-11-24 18:35:29,212 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_Ducks__fail
[2020-11-24 18:35:29,212 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_Ducks__success
[2020-11-24 18:35:29,212 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_Ducks__fail
[2020-11-24 18:35:29,212 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_Ducks__success
[2020-11-24 18:35:29,212 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_Ducks__fail
[2020-11-24 18:35:29,212 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_Ducks__success
[2020-11-24 18:35:29,212 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_Ducks__fail
[2020-11-24 18:35:29,212 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_Ducks__success
[2020-11-24 18:35:29,212 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_Ducks__fail
[2020-11-24 18:35:29,212 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-24 18:35:29,212 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-24 18:35:29,213 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-24 18:35:29,213 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-24 18:35:29,213 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-24 18:35:29,213 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeAdd~uint256~uint256_SafeMath__fail
[2020-11-24 18:35:29,213 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeAdd~uint256~uint256_SafeMath__success
[2020-11-24 18:35:29,213 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeSub~uint256~uint256_SafeMath__fail
[2020-11-24 18:35:29,213 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeSub~uint256~uint256_SafeMath__success
[2020-11-24 18:35:29,213 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_Ducks__fail
[2020-11-24 18:35:29,213 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_Ducks__success
[2020-11-24 18:35:29,213 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_Ducks__fail
[2020-11-24 18:35:29,213 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_Ducks__success
[2020-11-24 18:35:29,213 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_Ducks__fail
[2020-11-24 18:35:29,213 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_Ducks__success
[2020-11-24 18:35:29,214 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_Ducks__fail
[2020-11-24 18:35:29,214 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_Ducks__success
[2020-11-24 18:35:29,214 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_Ducks__fail
[2020-11-24 18:35:29,214 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_Ducks__success
[2020-11-24 18:35:29,214 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_Ducks__fail
[2020-11-24 18:35:29,214 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_Ducks__success
[2020-11-24 18:35:29,214 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-24 18:35:29,214 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-24 18:35:29,214 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-24 18:35:29,214 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-24 18:35:29,214 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-24 18:35:29,214 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-24 18:35:29,214 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20Interface
[2020-11-24 18:35:29,215 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20Interface
[2020-11-24 18:35:29,215 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_SafeMath
[2020-11-24 18:35:29,215 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_SafeMath
[2020-11-24 18:35:29,215 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_Ducks
[2020-11-24 18:35:29,215 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-24 18:35:29,215 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-24 18:35:29,215 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-24 18:35:29,371 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 18:35:29,371 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 18:35:29,373 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 18:35:29,431 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 18:35:29,644 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-24 18:35:29,644 INFO  L286             CfgBuilder]: Removed 3 assue(true) statements.
[2020-11-24 18:35:29,646 INFO  L202        PluginConnector]: Adding new model Ducks_0xfbeea1c75e4c4465cb2fccc9c6d6afe984558e20_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 06:35:29 BoogieIcfgContainer
[2020-11-24 18:35:29,646 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 06:35:29" (2/2) ...
[2020-11-24 18:35:29,646 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-24 18:35:29,647 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@33325fd7 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 06:35:29, skipping insertion in model container
[2020-11-24 18:35:29,647 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-24 18:35:29,647 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-24 18:35:29,647 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-24 18:35:29,648 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-24 18:35:29,649 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Ducks_0xfbeea1c75e4c4465cb2fccc9c6d6afe984558e20_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 06:35:29" (1/3) ...
[2020-11-24 18:35:29,649 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@25f88a9c and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 06:35:29, skipping insertion in model container
[2020-11-24 18:35:29,649 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 06:35:29" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-24 18:35:29,686 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 06:35:29 NWAContainer
[2020-11-24 18:35:29,686 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-24 18:35:29,686 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-24 18:35:29,686 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-24 18:35:29,687 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-24 18:35:29,688 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Ducks_0xfbeea1c75e4c4465cb2fccc9c6d6afe984558e20_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 06:35:29" (3/4) ...
[2020-11-24 18:35:29,688 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@4fc139c9 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 06:35:29, skipping insertion in model container
[2020-11-24 18:35:29,689 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 06:35:29" (4/4) ...
[2020-11-24 18:35:29,692 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-24 18:35:29,694 INFO  L110   BuchiProductObserver]: Initial RCFG 613 locations, 764 edges
[2020-11-24 18:35:29,694 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-24 18:35:29,703 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-24 18:35:30,555 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-24 18:35:30,557 INFO  L110   BuchiProductObserver]: BuchiProgram size 1436 locations, 2465 edges
[2020-11-24 18:35:30,558 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 06:35:30 BoogieIcfgContainer
[2020-11-24 18:35:30,558 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-24 18:35:30,558 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-24 18:35:30,558 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-24 18:35:30,560 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-24 18:35:30,560 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 06:35:30" (1/1) ...
[2020-11-24 18:35:30,610 INFO  L313           BlockEncoder]: Initial Icfg 1436 locations, 2465 edges
[2020-11-24 18:35:30,610 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-24 18:35:30,610 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-24 18:35:30,611 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-24 18:35:30,611 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-24 18:35:30,618 INFO  L70    emoveInfeasibleEdges]: Removed 63 edges and 9 locations because of local infeasibility
[2020-11-24 18:35:30,622 INFO  L70        RemoveSinkStates]: Removed 32 edges and 21 locations by removing sink states
[2020-11-24 18:35:30,628 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-24 18:35:30,630 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-24 18:35:30,631 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-24 18:35:30,632 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-24 18:35:30,634 INFO  L313           BlockEncoder]: Encoded RCFG 1394 locations, 2353 edges
[2020-11-24 18:35:30,634 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 24.11 06:35:30 BasicIcfg
[2020-11-24 18:35:30,634 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-24 18:35:30,635 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-24 18:35:30,635 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-24 18:35:30,637 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-24 18:35:30,637 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 18:35:30,637 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Ducks_0xfbeea1c75e4c4465cb2fccc9c6d6afe984558e20_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 06:35:29" (1/6) ...
[2020-11-24 18:35:30,639 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@5dcffcca and model type Ducks_0xfbeea1c75e4c4465cb2fccc9c6d6afe984558e20_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 24.11 06:35:30, skipping insertion in model container
[2020-11-24 18:35:30,639 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 18:35:30,639 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 06:35:29" (2/6) ...
[2020-11-24 18:35:30,640 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@5dcffcca and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 24.11 06:35:30, skipping insertion in model container
[2020-11-24 18:35:30,640 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 18:35:30,640 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Ducks_0xfbeea1c75e4c4465cb2fccc9c6d6afe984558e20_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 06:35:29" (3/6) ...
[2020-11-24 18:35:30,640 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@5dcffcca and model type Ducks_0xfbeea1c75e4c4465cb2fccc9c6d6afe984558e20_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 24.11 06:35:30, skipping insertion in model container
[2020-11-24 18:35:30,640 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 18:35:30,640 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 06:35:29" (4/6) ...
[2020-11-24 18:35:30,641 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@5dcffcca and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 24.11 06:35:30, skipping insertion in model container
[2020-11-24 18:35:30,641 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 18:35:30,641 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 06:35:30" (5/6) ...
[2020-11-24 18:35:30,641 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@5dcffcca and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 24.11 06:35:30, skipping insertion in model container
[2020-11-24 18:35:30,641 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 18:35:30,641 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 24.11 06:35:30" (6/6) ...
[2020-11-24 18:35:30,643 INFO  L404   chiAutomizerObserver]: Analyzing ICFG Ducks_0xfbeea1c75e4c4465cb2fccc9c6d6afe984558e20_transfer-normal.bpl_BEv2
[2020-11-24 18:35:30,681 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-24 18:35:30,681 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-24 18:35:30,681 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-24 18:35:30,681 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-24 18:35:30,681 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-24 18:35:30,681 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-24 18:35:30,682 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-24 18:35:30,682 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-24 18:35:30,682 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-24 18:35:30,699 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1394 states.
[2020-11-24 18:35:30,737 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 18:35:30,737 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 18:35:30,738 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 18:35:30,746 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 18:35:30,746 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
[2020-11-24 18:35:30,746 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-24 18:35:30,746 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1394 states.
[2020-11-24 18:35:30,757 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 18:35:30,757 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 18:35:30,757 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 18:35:30,759 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 18:35:30,759 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L3]                 success_transfer_Ducks0 := false;
[L3]                 call_transfer_Ducks0 := false;
[L3]     CALL        call main();
[L3]                 havoc p1;
[L1722]              assume null == 0;
[L1723]  CALL        call this := FreshRefGenerator__success();
[L701]               havoc newRef;
[L702]               assume Alloc[newRef] == false;
[L703]               Alloc[newRef] := true;
[L704]               assume newRef != null;
[L1723]  RET         call this := FreshRefGenerator__success();
[L1724]              assume now >= 0;
[L1725]              assume DType[this] == Ducks;
[L1726]              assume !revert && gas >= 0;
[L1727]  CALL        call CorralChoice_Ducks(this);
[L1617]              havoc msgsender_MSG;
[L1618]              havoc msgvalue_MSG;
[L1619]              havoc choice;
[L1620]              havoc __ret_0_totalSupply;
[L1621]              havoc tokenOwner_s247;
[L1622]              havoc balance_s247;
[L1623]              havoc tokenOwner_s263;
[L1624]              havoc spender_s263;
[L1625]              havoc remaining_s263;
[L1626]              havoc to_s334;
[L1627]              havoc tokens_s334;
[L1628]              havoc success_s334;
[L1629]              havoc spender_s291;
[L1630]              havoc tokens_s291;
[L1631]              havoc success_s291;
[L1632]              havoc from_s393;
[L1633]              havoc to_s393;
[L1634]              havoc tokens_s393;
[L1635]              havoc success_s393;
[L1636]              havoc a_s90;
[L1637]              havoc b_s90;
[L1638]              havoc c_s90;
[L1639]              havoc a_s112;
[L1640]              havoc b_s112;
[L1641]              havoc c_s112;
[L1642]              havoc a_s140;
[L1643]              havoc b_s140;
[L1644]              havoc c_s140;
[L1645]              havoc a_s162;
[L1646]              havoc b_s162;
[L1647]              havoc c_s162;
[L1648]              havoc __ret_0_name;
[L1649]              havoc __ret_0_symbol;
[L1650]              havoc __ret_0_decimals;
[L1651]              havoc __ret_0__totalSupply;
[L1652]              havoc tmpNow;
[L1653]              havoc gas;
[L1654]              assume gas > 4000000 && gas <= 8000000;
[L1655]              tmpNow := now;
[L1656]              havoc now;
[L1657]              assume now > tmpNow;
[L1658]              assume msgsender_MSG != null;
[L1659]  COND TRUE   choice == 8
[L1660]              gas := gas - 21000;
[L1661]  COND FALSE  !(gas >= 0)
[L1727]  RET         call CorralChoice_Ducks(this);

Loop:
[L1727]        assume true;

[2020-11-24 18:35:30,776 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 18:35:30,776 INFO  L82        PathProgramCache]: Analyzing trace with hash -182400712, now seen corresponding path program 1 times
[2020-11-24 18:35:30,781 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 18:35:30,800 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 18:35:30,855 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 18:35:30,857 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 18:35:30,857 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [5] imperfect sequences [] total 5
[2020-11-24 18:35:30,861 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 18:35:30,873 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 5 interpolants.
[2020-11-24 18:35:30,873 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=9, Invalid=11, Unknown=0, NotChecked=0, Total=20
[2020-11-24 18:35:30,875 INFO  L87              Difference]: Start difference. First operand 1394 states. Second operand 5 states.
[2020-11-24 18:35:31,113 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 18:35:31,114 INFO  L93              Difference]: Finished difference Result 627 states and 687 transitions.
[2020-11-24 18:35:31,114 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-24 18:35:31,115 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 627 states and 687 transitions.
[2020-11-24 18:35:31,121 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 18:35:31,126 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 627 states to 175 states and 184 transitions.
[2020-11-24 18:35:31,127 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 4
[2020-11-24 18:35:31,127 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 175
[2020-11-24 18:35:31,128 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 175 states and 184 transitions.
[2020-11-24 18:35:31,129 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 18:35:31,129 INFO  L728         BuchiCegarLoop]: Abstraction has 175 states and 184 transitions.
[2020-11-24 18:35:31,144 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 175 states and 184 transitions.
[2020-11-24 18:35:31,156 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 175 to 175.
[2020-11-24 18:35:31,157 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 175 states.
[2020-11-24 18:35:31,157 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 175 states to 175 states and 184 transitions.
[2020-11-24 18:35:31,158 INFO  L751         BuchiCegarLoop]: Abstraction has 175 states and 184 transitions.
[2020-11-24 18:35:31,158 INFO  L631         BuchiCegarLoop]: Abstraction has 175 states and 184 transitions.
[2020-11-24 18:35:31,158 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-24 18:35:31,159 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 175 states and 184 transitions.
[2020-11-24 18:35:31,160 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 18:35:31,160 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 18:35:31,160 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 18:35:31,161 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 18:35:31,161 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L3]                 success_transfer_Ducks0 := false;
[L3]                 call_transfer_Ducks0 := false;
[L3]     CALL        call main();
[L3]                 havoc p1;
[L1722]              assume null == 0;
[L1723]  CALL        call this := FreshRefGenerator__success();
[L701]               havoc newRef;
[L702]               assume Alloc[newRef] == false;
[L703]               Alloc[newRef] := true;
[L704]               assume newRef != null;
[L1723]  RET         call this := FreshRefGenerator__success();
[L1724]              assume now >= 0;
[L1725]              assume DType[this] == Ducks;
[L1726]              assume !revert && gas >= 0;
[L1727]  CALL        call CorralChoice_Ducks(this);
[L1617]              havoc msgsender_MSG;
[L1618]              havoc msgvalue_MSG;
[L1619]              havoc choice;
[L1620]              havoc __ret_0_totalSupply;
[L1621]              havoc tokenOwner_s247;
[L1622]              havoc balance_s247;
[L1623]              havoc tokenOwner_s263;
[L1624]              havoc spender_s263;
[L1625]              havoc remaining_s263;
[L1626]              havoc to_s334;
[L1627]              havoc tokens_s334;
[L1628]              havoc success_s334;
[L1629]              havoc spender_s291;
[L1630]              havoc tokens_s291;
[L1631]              havoc success_s291;
[L1632]              havoc from_s393;
[L1633]              havoc to_s393;
[L1634]              havoc tokens_s393;
[L1635]              havoc success_s393;
[L1636]              havoc a_s90;
[L1637]              havoc b_s90;
[L1638]              havoc c_s90;
[L1639]              havoc a_s112;
[L1640]              havoc b_s112;
[L1641]              havoc c_s112;
[L1642]              havoc a_s140;
[L1643]              havoc b_s140;
[L1644]              havoc c_s140;
[L1645]              havoc a_s162;
[L1646]              havoc b_s162;
[L1647]              havoc c_s162;
[L1648]              havoc __ret_0_name;
[L1649]              havoc __ret_0_symbol;
[L1650]              havoc __ret_0_decimals;
[L1651]              havoc __ret_0__totalSupply;
[L1652]              havoc tmpNow;
[L1653]              havoc gas;
[L1654]              assume gas > 4000000 && gas <= 8000000;
[L1655]              tmpNow := now;
[L1656]              havoc now;
[L1657]              assume now > tmpNow;
[L1658]              assume msgsender_MSG != null;
[L1659]  COND FALSE  !(choice == 8)
[L1665]  COND FALSE  !(choice == 7)
[L1671]  COND FALSE  !(choice == 6)
[L1677]  COND TRUE   choice == 5
[L1678]              gas := gas - 21000;
[L1679]  COND TRUE   gas >= 0
[L1680]              assume tokens_s334 >= 0 && tokens_s334 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1681]              assume msgvalue_MSG == 0;
[L1682]  CALL        call success_s334 := transfer~address~uint256_Ducks(this, msgsender_MSG, msgvalue_MSG, to_s334, tokens_s334);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != to_s334) && msgsender_MSG != to_s334) && tokens_s334 <= balances_Ducks[this][msgsender_MSG]) && balances_Ducks[this][to_s334] + tokens_s334 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && tokens_s334 >= 0) && tokens_s334 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_Ducks[this][to_s334] >= 0) && balances_Ducks[this][to_s334] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_Ducks[this][msgsender_MSG] >= 0) && balances_Ducks[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_Ducks0 := true;
[L3]                 call_transfer_Ducks0 := false;
[L3]                 revert := revert_hold;
[L372]               havoc __exception;
[L373]               revert := false;
[L374]   COND FALSE  !(__exception)
[L395]   CALL        call success_s334 := transfer~address~uint256_Ducks__success(this, msgsender_MSG, msgvalue_MSG, to_s334, tokens_s334);
[L836]   COND TRUE   DType[this] == Ducks
[L837]   CALL        call __var_2 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_Ducks[this][msgsender_MSG], tokens_s334);
[L736]   COND TRUE   !(b_s112 <= a_s112)
[L737]               revert := true;
[L837]   RET         call __var_2 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_Ducks[this][msgsender_MSG], tokens_s334);
[L838]   COND TRUE   revert
[L395]   RET         call success_s334 := transfer~address~uint256_Ducks__success(this, msgsender_MSG, msgvalue_MSG, to_s334, tokens_s334);
[L396]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !((((((((success_s334 == true && balances_Ducks[this][msgsender_MSG] == old(balances_Ducks[this][msgsender_MSG]) - tokens_s334) && balances_Ducks[this][to_s334] == old(balances_Ducks[this][to_s334]) + tokens_s334) && _totalSupply_Ducks[this] == old(_totalSupply_Ducks[this])) && allowed_Ducks[this] == old(allowed_Ducks[this])) && balances_Ducks[this][p1] == old(balances_Ducks[this][p1])) && name_Ducks[this] == old(name_Ducks[this])) && symbol_Ducks[this] == old(symbol_Ducks[this])) && decimals_Ducks[this] == old(decimals_Ducks[this]));
[L3]                 revert := revert_hold;
[L1682]  RET         call success_s334 := transfer~address~uint256_Ducks(this, msgsender_MSG, msgvalue_MSG, to_s334, tokens_s334);
[L1727]  RET         call CorralChoice_Ducks(this);

Loop:
[L1727]        assume true;

[2020-11-24 18:35:31,164 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 18:35:31,164 INFO  L82        PathProgramCache]: Analyzing trace with hash 1718985775, now seen corresponding path program 1 times
[2020-11-24 18:35:31,165 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 18:35:31,176 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 18:35:31,192 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 18:35:31,193 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 18:35:31,193 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-24 18:35:31,194 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 18:35:31,194 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-24 18:35:31,194 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-24 18:35:31,195 INFO  L87              Difference]: Start difference. First operand 175 states and 184 transitions. cyclomatic complexity: 10 Second operand 3 states.
[2020-11-24 18:35:31,201 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 18:35:31,201 INFO  L93              Difference]: Finished difference Result 206 states and 214 transitions.
[2020-11-24 18:35:31,201 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-24 18:35:31,202 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 206 states and 214 transitions.
[2020-11-24 18:35:31,203 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 2
[2020-11-24 18:35:31,205 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 206 states to 192 states and 197 transitions.
[2020-11-24 18:35:31,205 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 192
[2020-11-24 18:35:31,205 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 192
[2020-11-24 18:35:31,206 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 192 states and 197 transitions.
[2020-11-24 18:35:31,206 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 18:35:31,206 INFO  L728         BuchiCegarLoop]: Abstraction has 192 states and 197 transitions.
[2020-11-24 18:35:31,207 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 192 states and 197 transitions.
[2020-11-24 18:35:31,212 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 192 to 181.
[2020-11-24 18:35:31,212 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 181 states.
[2020-11-24 18:35:31,213 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 181 states to 181 states and 186 transitions.
[2020-11-24 18:35:31,213 INFO  L751         BuchiCegarLoop]: Abstraction has 181 states and 186 transitions.
[2020-11-24 18:35:31,213 INFO  L631         BuchiCegarLoop]: Abstraction has 181 states and 186 transitions.
[2020-11-24 18:35:31,213 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-24 18:35:31,213 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 181 states and 186 transitions.
[2020-11-24 18:35:31,214 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 18:35:31,214 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 18:35:31,214 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 18:35:31,215 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 18:35:31,215 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L3]                 success_transfer_Ducks0 := false;
[L3]                 call_transfer_Ducks0 := false;
[L3]     CALL        call main();
[L3]                 havoc p1;
[L1722]              assume null == 0;
[L1723]  CALL        call this := FreshRefGenerator__success();
[L701]               havoc newRef;
[L702]               assume Alloc[newRef] == false;
[L703]               Alloc[newRef] := true;
[L704]               assume newRef != null;
[L1723]  RET         call this := FreshRefGenerator__success();
[L1724]              assume now >= 0;
[L1725]              assume DType[this] == Ducks;
[L1726]              assume !revert && gas >= 0;
[L1727]  CALL        call CorralChoice_Ducks(this);
[L1617]              havoc msgsender_MSG;
[L1618]              havoc msgvalue_MSG;
[L1619]              havoc choice;
[L1620]              havoc __ret_0_totalSupply;
[L1621]              havoc tokenOwner_s247;
[L1622]              havoc balance_s247;
[L1623]              havoc tokenOwner_s263;
[L1624]              havoc spender_s263;
[L1625]              havoc remaining_s263;
[L1626]              havoc to_s334;
[L1627]              havoc tokens_s334;
[L1628]              havoc success_s334;
[L1629]              havoc spender_s291;
[L1630]              havoc tokens_s291;
[L1631]              havoc success_s291;
[L1632]              havoc from_s393;
[L1633]              havoc to_s393;
[L1634]              havoc tokens_s393;
[L1635]              havoc success_s393;
[L1636]              havoc a_s90;
[L1637]              havoc b_s90;
[L1638]              havoc c_s90;
[L1639]              havoc a_s112;
[L1640]              havoc b_s112;
[L1641]              havoc c_s112;
[L1642]              havoc a_s140;
[L1643]              havoc b_s140;
[L1644]              havoc c_s140;
[L1645]              havoc a_s162;
[L1646]              havoc b_s162;
[L1647]              havoc c_s162;
[L1648]              havoc __ret_0_name;
[L1649]              havoc __ret_0_symbol;
[L1650]              havoc __ret_0_decimals;
[L1651]              havoc __ret_0__totalSupply;
[L1652]              havoc tmpNow;
[L1653]              havoc gas;
[L1654]              assume gas > 4000000 && gas <= 8000000;
[L1655]              tmpNow := now;
[L1656]              havoc now;
[L1657]              assume now > tmpNow;
[L1658]              assume msgsender_MSG != null;
[L1659]  COND FALSE  !(choice == 8)
[L1665]  COND FALSE  !(choice == 7)
[L1671]  COND FALSE  !(choice == 6)
[L1677]  COND TRUE   choice == 5
[L1678]              gas := gas - 21000;
[L1679]  COND TRUE   gas >= 0
[L1680]              assume tokens_s334 >= 0 && tokens_s334 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1681]              assume msgvalue_MSG == 0;
[L1682]  CALL        call success_s334 := transfer~address~uint256_Ducks(this, msgsender_MSG, msgvalue_MSG, to_s334, tokens_s334);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != to_s334) && msgsender_MSG != to_s334) && tokens_s334 <= balances_Ducks[this][msgsender_MSG]) && balances_Ducks[this][to_s334] + tokens_s334 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && tokens_s334 >= 0) && tokens_s334 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_Ducks[this][to_s334] >= 0) && balances_Ducks[this][to_s334] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_Ducks[this][msgsender_MSG] >= 0) && balances_Ducks[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_Ducks0 := true;
[L3]                 call_transfer_Ducks0 := false;
[L3]                 revert := revert_hold;
[L372]               havoc __exception;
[L373]               revert := false;
[L374]   COND TRUE   __exception
[L375]               __tmp__Balance := Balance;
[L376]               __tmp__DType := DType;
[L377]               __tmp__Alloc := Alloc;
[L378]               __tmp__balance_ADDR := balance_ADDR;
[L379]               __tmp__M_Ref_int := M_Ref_int;
[L380]               __tmp__sum_balances0 := sum_balances0;
[L381]               __tmp__alloc_allowed_Ducks_lvl0 := alloc_allowed_Ducks_lvl0;
[L382]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L383]               __tmp__sum_allowed1 := sum_allowed1;
[L384]               __tmp__Length := Length;
[L385]               __tmp__now := now;
[L386]               __tmp__name_Ducks := name_Ducks;
[L387]               __tmp__symbol_Ducks := symbol_Ducks;
[L388]               __tmp__decimals_Ducks := decimals_Ducks;
[L389]               __tmp___totalSupply_Ducks := _totalSupply_Ducks;
[L390]               __tmp__balances_Ducks := balances_Ducks;
[L391]               __tmp__allowed_Ducks := allowed_Ducks;
[L392]   CALL        call success_s334 := transfer~address~uint256_Ducks__fail(this, msgsender_MSG, msgvalue_MSG, to_s334, tokens_s334);
[L806]   COND TRUE   __tmp__DType[this] == Ducks
[L807]   CALL        call __var_2 := safeSub~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balances_Ducks[this][msgsender_MSG], tokens_s334);
[L727]   COND TRUE   !(b_s112 <= a_s112)
[L728]               revert := true;
[L807]   RET         call __var_2 := safeSub~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balances_Ducks[this][msgsender_MSG], tokens_s334);
[L808]   COND TRUE   revert
[L392]   RET         call success_s334 := transfer~address~uint256_Ducks__fail(this, msgsender_MSG, msgvalue_MSG, to_s334, tokens_s334);
[L393]               assume revert || gas < 0;
[L1682]  RET         call success_s334 := transfer~address~uint256_Ducks(this, msgsender_MSG, msgvalue_MSG, to_s334, tokens_s334);
[L1727]  RET         call CorralChoice_Ducks(this);

Loop:
[L1727]        assume true;

[2020-11-24 18:35:31,218 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 18:35:31,218 INFO  L82        PathProgramCache]: Analyzing trace with hash 139783465, now seen corresponding path program 1 times
[2020-11-24 18:35:31,219 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 18:35:31,228 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 18:35:31,272 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 18:35:31,272 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 18:35:31,272 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [7] imperfect sequences [] total 7
[2020-11-24 18:35:31,273 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 18:35:31,273 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 7 interpolants.
[2020-11-24 18:35:31,273 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=11, Invalid=31, Unknown=0, NotChecked=0, Total=42
[2020-11-24 18:35:31,273 INFO  L87              Difference]: Start difference. First operand 181 states and 186 transitions. cyclomatic complexity: 6 Second operand 7 states.
[2020-11-24 18:35:31,350 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 18:35:31,351 INFO  L93              Difference]: Finished difference Result 196 states and 200 transitions.
[2020-11-24 18:35:31,351 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 8 states. 
[2020-11-24 18:35:31,351 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 196 states and 200 transitions.
[2020-11-24 18:35:31,352 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 2
[2020-11-24 18:35:31,354 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 196 states to 189 states and 193 transitions.
[2020-11-24 18:35:31,354 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 189
[2020-11-24 18:35:31,354 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 189
[2020-11-24 18:35:31,354 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 189 states and 193 transitions.
[2020-11-24 18:35:31,355 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 18:35:31,355 INFO  L728         BuchiCegarLoop]: Abstraction has 189 states and 193 transitions.
[2020-11-24 18:35:31,355 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 189 states and 193 transitions.
[2020-11-24 18:35:31,359 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 189 to 176.
[2020-11-24 18:35:31,359 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 176 states.
[2020-11-24 18:35:31,359 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 176 states to 176 states and 180 transitions.
[2020-11-24 18:35:31,360 INFO  L751         BuchiCegarLoop]: Abstraction has 176 states and 180 transitions.
[2020-11-24 18:35:31,360 INFO  L631         BuchiCegarLoop]: Abstraction has 176 states and 180 transitions.
[2020-11-24 18:35:31,360 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-24 18:35:31,360 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 176 states and 180 transitions.
[2020-11-24 18:35:31,361 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 18:35:31,361 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 18:35:31,361 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 18:35:31,362 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 18:35:31,362 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L3]                 success_transfer_Ducks0 := false;
[L3]                 call_transfer_Ducks0 := false;
[L3]     CALL        call main();
[L3]                 havoc p1;
[L1722]              assume null == 0;
[L1723]  CALL        call this := FreshRefGenerator__success();
[L701]               havoc newRef;
[L702]               assume Alloc[newRef] == false;
[L703]               Alloc[newRef] := true;
[L704]               assume newRef != null;
[L1723]  RET         call this := FreshRefGenerator__success();
[L1724]              assume now >= 0;
[L1725]              assume DType[this] == Ducks;
[L1726]              assume !revert && gas >= 0;
[L1727]  CALL        call CorralChoice_Ducks(this);
[L1617]              havoc msgsender_MSG;
[L1618]              havoc msgvalue_MSG;
[L1619]              havoc choice;
[L1620]              havoc __ret_0_totalSupply;
[L1621]              havoc tokenOwner_s247;
[L1622]              havoc balance_s247;
[L1623]              havoc tokenOwner_s263;
[L1624]              havoc spender_s263;
[L1625]              havoc remaining_s263;
[L1626]              havoc to_s334;
[L1627]              havoc tokens_s334;
[L1628]              havoc success_s334;
[L1629]              havoc spender_s291;
[L1630]              havoc tokens_s291;
[L1631]              havoc success_s291;
[L1632]              havoc from_s393;
[L1633]              havoc to_s393;
[L1634]              havoc tokens_s393;
[L1635]              havoc success_s393;
[L1636]              havoc a_s90;
[L1637]              havoc b_s90;
[L1638]              havoc c_s90;
[L1639]              havoc a_s112;
[L1640]              havoc b_s112;
[L1641]              havoc c_s112;
[L1642]              havoc a_s140;
[L1643]              havoc b_s140;
[L1644]              havoc c_s140;
[L1645]              havoc a_s162;
[L1646]              havoc b_s162;
[L1647]              havoc c_s162;
[L1648]              havoc __ret_0_name;
[L1649]              havoc __ret_0_symbol;
[L1650]              havoc __ret_0_decimals;
[L1651]              havoc __ret_0__totalSupply;
[L1652]              havoc tmpNow;
[L1653]              havoc gas;
[L1654]              assume gas > 4000000 && gas <= 8000000;
[L1655]              tmpNow := now;
[L1656]              havoc now;
[L1657]              assume now > tmpNow;
[L1658]              assume msgsender_MSG != null;
[L1659]  COND FALSE  !(choice == 8)
[L1665]  COND FALSE  !(choice == 7)
[L1671]  COND FALSE  !(choice == 6)
[L1677]  COND TRUE   choice == 5
[L1678]              gas := gas - 21000;
[L1679]  COND TRUE   gas >= 0
[L1680]              assume tokens_s334 >= 0 && tokens_s334 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1681]              assume msgvalue_MSG == 0;
[L1682]  CALL        call success_s334 := transfer~address~uint256_Ducks(this, msgsender_MSG, msgvalue_MSG, to_s334, tokens_s334);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != to_s334) && msgsender_MSG != to_s334) && tokens_s334 <= balances_Ducks[this][msgsender_MSG]) && balances_Ducks[this][to_s334] + tokens_s334 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && tokens_s334 >= 0) && tokens_s334 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_Ducks[this][to_s334] >= 0) && balances_Ducks[this][to_s334] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_Ducks[this][msgsender_MSG] >= 0) && balances_Ducks[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_Ducks0 := true;
[L3]                 call_transfer_Ducks0 := false;
[L3]                 revert := revert_hold;
[L372]               havoc __exception;
[L373]               revert := false;
[L374]   COND TRUE   __exception
[L375]               __tmp__Balance := Balance;
[L376]               __tmp__DType := DType;
[L377]               __tmp__Alloc := Alloc;
[L378]               __tmp__balance_ADDR := balance_ADDR;
[L379]               __tmp__M_Ref_int := M_Ref_int;
[L380]               __tmp__sum_balances0 := sum_balances0;
[L381]               __tmp__alloc_allowed_Ducks_lvl0 := alloc_allowed_Ducks_lvl0;
[L382]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L383]               __tmp__sum_allowed1 := sum_allowed1;
[L384]               __tmp__Length := Length;
[L385]               __tmp__now := now;
[L386]               __tmp__name_Ducks := name_Ducks;
[L387]               __tmp__symbol_Ducks := symbol_Ducks;
[L388]               __tmp__decimals_Ducks := decimals_Ducks;
[L389]               __tmp___totalSupply_Ducks := _totalSupply_Ducks;
[L390]               __tmp__balances_Ducks := balances_Ducks;
[L391]               __tmp__allowed_Ducks := allowed_Ducks;
[L392]   CALL        call success_s334 := transfer~address~uint256_Ducks__fail(this, msgsender_MSG, msgvalue_MSG, to_s334, tokens_s334);
[L806]   COND TRUE   __tmp__DType[this] == Ducks
[L807]   CALL        call __var_2 := safeSub~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balances_Ducks[this][msgsender_MSG], tokens_s334);
[L727]   COND FALSE  !(!(b_s112 <= a_s112))
[L731]               c_s112 := (a_s112 - b_s112) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L807]   RET         call __var_2 := safeSub~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balances_Ducks[this][msgsender_MSG], tokens_s334);
[L808]   COND TRUE   revert
[L392]   RET         call success_s334 := transfer~address~uint256_Ducks__fail(this, msgsender_MSG, msgvalue_MSG, to_s334, tokens_s334);
[L393]               assume revert || gas < 0;
[L1682]  RET         call success_s334 := transfer~address~uint256_Ducks(this, msgsender_MSG, msgvalue_MSG, to_s334, tokens_s334);
[L1727]  RET         call CorralChoice_Ducks(this);

Loop:
[L1727]        assume true;

[2020-11-24 18:35:31,365 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 18:35:31,365 INFO  L82        PathProgramCache]: Analyzing trace with hash 1471923749, now seen corresponding path program 1 times
[2020-11-24 18:35:31,366 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 18:35:31,373 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 18:35:31,391 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 18:35:31,391 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 18:35:31,391 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [5] imperfect sequences [] total 5
[2020-11-24 18:35:31,392 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 18:35:31,392 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 5 interpolants.
[2020-11-24 18:35:31,392 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=9, Invalid=11, Unknown=0, NotChecked=0, Total=20
[2020-11-24 18:35:31,392 INFO  L87              Difference]: Start difference. First operand 176 states and 180 transitions. cyclomatic complexity: 5 Second operand 5 states.
[2020-11-24 18:35:31,402 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 18:35:31,403 INFO  L93              Difference]: Finished difference Result 187 states and 189 transitions.
[2020-11-24 18:35:31,403 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-24 18:35:31,403 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 187 states and 189 transitions.
[2020-11-24 18:35:31,404 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 2
[2020-11-24 18:35:31,405 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 187 states to 187 states and 189 transitions.
[2020-11-24 18:35:31,405 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 187
[2020-11-24 18:35:31,405 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 187
[2020-11-24 18:35:31,405 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 187 states and 189 transitions.
[2020-11-24 18:35:31,406 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 18:35:31,406 INFO  L728         BuchiCegarLoop]: Abstraction has 187 states and 189 transitions.
[2020-11-24 18:35:31,406 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 187 states and 189 transitions.
[2020-11-24 18:35:31,408 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 187 to 176.
[2020-11-24 18:35:31,408 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 176 states.
[2020-11-24 18:35:31,409 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 176 states to 176 states and 178 transitions.
[2020-11-24 18:35:31,409 INFO  L751         BuchiCegarLoop]: Abstraction has 176 states and 178 transitions.
[2020-11-24 18:35:31,409 INFO  L631         BuchiCegarLoop]: Abstraction has 176 states and 178 transitions.
[2020-11-24 18:35:31,409 INFO  L445         BuchiCegarLoop]: ======== Iteration 5============
[2020-11-24 18:35:31,409 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 176 states and 178 transitions.
[2020-11-24 18:35:31,410 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 18:35:31,410 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 18:35:31,410 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 18:35:31,411 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 18:35:31,411 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L3]                 success_transfer_Ducks0 := false;
[L3]                 call_transfer_Ducks0 := false;
[L3]     CALL        call main();
[L3]                 havoc p1;
[L1722]              assume null == 0;
[L1723]  CALL        call this := FreshRefGenerator__success();
[L701]               havoc newRef;
[L702]               assume Alloc[newRef] == false;
[L703]               Alloc[newRef] := true;
[L704]               assume newRef != null;
[L1723]  RET         call this := FreshRefGenerator__success();
[L1724]              assume now >= 0;
[L1725]              assume DType[this] == Ducks;
[L1726]              assume !revert && gas >= 0;
[L1727]  CALL        call CorralChoice_Ducks(this);
[L1617]              havoc msgsender_MSG;
[L1618]              havoc msgvalue_MSG;
[L1619]              havoc choice;
[L1620]              havoc __ret_0_totalSupply;
[L1621]              havoc tokenOwner_s247;
[L1622]              havoc balance_s247;
[L1623]              havoc tokenOwner_s263;
[L1624]              havoc spender_s263;
[L1625]              havoc remaining_s263;
[L1626]              havoc to_s334;
[L1627]              havoc tokens_s334;
[L1628]              havoc success_s334;
[L1629]              havoc spender_s291;
[L1630]              havoc tokens_s291;
[L1631]              havoc success_s291;
[L1632]              havoc from_s393;
[L1633]              havoc to_s393;
[L1634]              havoc tokens_s393;
[L1635]              havoc success_s393;
[L1636]              havoc a_s90;
[L1637]              havoc b_s90;
[L1638]              havoc c_s90;
[L1639]              havoc a_s112;
[L1640]              havoc b_s112;
[L1641]              havoc c_s112;
[L1642]              havoc a_s140;
[L1643]              havoc b_s140;
[L1644]              havoc c_s140;
[L1645]              havoc a_s162;
[L1646]              havoc b_s162;
[L1647]              havoc c_s162;
[L1648]              havoc __ret_0_name;
[L1649]              havoc __ret_0_symbol;
[L1650]              havoc __ret_0_decimals;
[L1651]              havoc __ret_0__totalSupply;
[L1652]              havoc tmpNow;
[L1653]              havoc gas;
[L1654]              assume gas > 4000000 && gas <= 8000000;
[L1655]              tmpNow := now;
[L1656]              havoc now;
[L1657]              assume now > tmpNow;
[L1658]              assume msgsender_MSG != null;
[L1659]  COND FALSE  !(choice == 8)
[L1665]  COND FALSE  !(choice == 7)
[L1671]  COND FALSE  !(choice == 6)
[L1677]  COND TRUE   choice == 5
[L1678]              gas := gas - 21000;
[L1679]  COND TRUE   gas >= 0
[L1680]              assume tokens_s334 >= 0 && tokens_s334 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1681]              assume msgvalue_MSG == 0;
[L1682]  CALL        call success_s334 := transfer~address~uint256_Ducks(this, msgsender_MSG, msgvalue_MSG, to_s334, tokens_s334);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != to_s334) && msgsender_MSG != to_s334) && tokens_s334 <= balances_Ducks[this][msgsender_MSG]) && balances_Ducks[this][to_s334] + tokens_s334 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && tokens_s334 >= 0) && tokens_s334 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_Ducks[this][to_s334] >= 0) && balances_Ducks[this][to_s334] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_Ducks[this][msgsender_MSG] >= 0) && balances_Ducks[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_Ducks0 := true;
[L3]                 call_transfer_Ducks0 := false;
[L3]                 revert := revert_hold;
[L372]               havoc __exception;
[L373]               revert := false;
[L374]   COND FALSE  !(__exception)
[L395]   CALL        call success_s334 := transfer~address~uint256_Ducks__success(this, msgsender_MSG, msgvalue_MSG, to_s334, tokens_s334);
[L836]   COND TRUE   DType[this] == Ducks
[L837]   CALL        call __var_2 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_Ducks[this][msgsender_MSG], tokens_s334);
[L736]   COND FALSE  !(!(b_s112 <= a_s112))
[L740]               c_s112 := (a_s112 - b_s112) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L837]   RET         call __var_2 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_Ducks[this][msgsender_MSG], tokens_s334);
[L838]   COND FALSE  !(revert)
[L844]               sum_balances0[this] := sum_balances0[this] - balances_Ducks[this][msgsender_MSG];
[L845]               balances_Ducks[this][msgsender_MSG] := __var_2;
[L846]               sum_balances0[this] := sum_balances0[this] + balances_Ducks[this][msgsender_MSG];
[L847]   COND TRUE   DType[this] == Ducks
[L848]   CALL        call __var_3 := safeAdd~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_Ducks[this][to_s334], tokens_s334);
[L718]               c_s90 := (a_s90 + b_s90) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L719]   COND FALSE  !(!(c_s90 >= a_s90))
[L848]   RET         call __var_3 := safeAdd~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_Ducks[this][to_s334], tokens_s334);
[L849]   COND FALSE  !(revert)
[L855]               sum_balances0[this] := sum_balances0[this] - balances_Ducks[this][to_s334];
[L856]               balances_Ducks[this][to_s334] := __var_3;
[L857]               sum_balances0[this] := sum_balances0[this] + balances_Ducks[this][to_s334];
[L858]               assert { :EventEmitted "Transfer_Ducks" } true;
[L859]               success_s334 := true;
[L395]   RET         call success_s334 := transfer~address~uint256_Ducks__success(this, msgsender_MSG, msgvalue_MSG, to_s334, tokens_s334);
[L396]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !((((((((success_s334 == true && balances_Ducks[this][msgsender_MSG] == old(balances_Ducks[this][msgsender_MSG]) - tokens_s334) && balances_Ducks[this][to_s334] == old(balances_Ducks[this][to_s334]) + tokens_s334) && _totalSupply_Ducks[this] == old(_totalSupply_Ducks[this])) && allowed_Ducks[this] == old(allowed_Ducks[this])) && balances_Ducks[this][p1] == old(balances_Ducks[this][p1])) && name_Ducks[this] == old(name_Ducks[this])) && symbol_Ducks[this] == old(symbol_Ducks[this])) && decimals_Ducks[this] == old(decimals_Ducks[this]));
[L3]                 revert := revert_hold;
[L1682]  RET         call success_s334 := transfer~address~uint256_Ducks(this, msgsender_MSG, msgvalue_MSG, to_s334, tokens_s334);
[L1727]  RET         call CorralChoice_Ducks(this);

Loop:
[L1727]        assume true;

[2020-11-24 18:35:31,413 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 18:35:31,413 INFO  L82        PathProgramCache]: Analyzing trace with hash 205921963, now seen corresponding path program 1 times
[2020-11-24 18:35:31,414 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 18:35:31,472 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 18:35:31,868 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 18:35:31,868 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 18:35:31,868 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [16] imperfect sequences [] total 16
[2020-11-24 18:35:31,869 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 18:35:31,869 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 16 interpolants.
[2020-11-24 18:35:31,869 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=35, Invalid=205, Unknown=0, NotChecked=0, Total=240
[2020-11-24 18:35:31,869 INFO  L87              Difference]: Start difference. First operand 176 states and 178 transitions. cyclomatic complexity: 3 Second operand 16 states.
[2020-11-24 18:35:32,272 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 18:35:32,272 INFO  L93              Difference]: Finished difference Result 175 states and 176 transitions.
[2020-11-24 18:35:32,272 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 14 states. 
[2020-11-24 18:35:32,272 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 175 states and 176 transitions.
[2020-11-24 18:35:32,273 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 18:35:32,274 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 175 states to 140 states and 141 transitions.
[2020-11-24 18:35:32,274 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 140
[2020-11-24 18:35:32,274 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 140
[2020-11-24 18:35:32,274 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 140 states and 141 transitions.
[2020-11-24 18:35:32,274 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 18:35:32,274 INFO  L728         BuchiCegarLoop]: Abstraction has 140 states and 141 transitions.
[2020-11-24 18:35:32,275 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 140 states and 141 transitions.
[2020-11-24 18:35:32,276 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 140 to 140.
[2020-11-24 18:35:32,276 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 140 states.
[2020-11-24 18:35:32,276 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 140 states to 140 states and 141 transitions.
[2020-11-24 18:35:32,276 INFO  L751         BuchiCegarLoop]: Abstraction has 140 states and 141 transitions.
[2020-11-24 18:35:32,276 INFO  L631         BuchiCegarLoop]: Abstraction has 140 states and 141 transitions.
[2020-11-24 18:35:32,276 INFO  L445         BuchiCegarLoop]: ======== Iteration 6============
[2020-11-24 18:35:32,276 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 140 states and 141 transitions.
[2020-11-24 18:35:32,277 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 18:35:32,278 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 18:35:32,278 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 18:35:32,278 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 18:35:32,279 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L3]                 success_transfer_Ducks0 := false;
[L3]                 call_transfer_Ducks0 := false;
[L3]     CALL        call main();
[L3]                 havoc p1;
[L1722]              assume null == 0;
[L1723]  CALL        call this := FreshRefGenerator__success();
[L701]               havoc newRef;
[L702]               assume Alloc[newRef] == false;
[L703]               Alloc[newRef] := true;
[L704]               assume newRef != null;
[L1723]  RET         call this := FreshRefGenerator__success();
[L1724]              assume now >= 0;
[L1725]              assume DType[this] == Ducks;
[L1726]              assume !revert && gas >= 0;
[L1727]  CALL        call CorralChoice_Ducks(this);
[L1617]              havoc msgsender_MSG;
[L1618]              havoc msgvalue_MSG;
[L1619]              havoc choice;
[L1620]              havoc __ret_0_totalSupply;
[L1621]              havoc tokenOwner_s247;
[L1622]              havoc balance_s247;
[L1623]              havoc tokenOwner_s263;
[L1624]              havoc spender_s263;
[L1625]              havoc remaining_s263;
[L1626]              havoc to_s334;
[L1627]              havoc tokens_s334;
[L1628]              havoc success_s334;
[L1629]              havoc spender_s291;
[L1630]              havoc tokens_s291;
[L1631]              havoc success_s291;
[L1632]              havoc from_s393;
[L1633]              havoc to_s393;
[L1634]              havoc tokens_s393;
[L1635]              havoc success_s393;
[L1636]              havoc a_s90;
[L1637]              havoc b_s90;
[L1638]              havoc c_s90;
[L1639]              havoc a_s112;
[L1640]              havoc b_s112;
[L1641]              havoc c_s112;
[L1642]              havoc a_s140;
[L1643]              havoc b_s140;
[L1644]              havoc c_s140;
[L1645]              havoc a_s162;
[L1646]              havoc b_s162;
[L1647]              havoc c_s162;
[L1648]              havoc __ret_0_name;
[L1649]              havoc __ret_0_symbol;
[L1650]              havoc __ret_0_decimals;
[L1651]              havoc __ret_0__totalSupply;
[L1652]              havoc tmpNow;
[L1653]              havoc gas;
[L1654]              assume gas > 4000000 && gas <= 8000000;
[L1655]              tmpNow := now;
[L1656]              havoc now;
[L1657]              assume now > tmpNow;
[L1658]              assume msgsender_MSG != null;
[L1659]  COND FALSE  !(choice == 8)
[L1665]  COND FALSE  !(choice == 7)
[L1671]  COND FALSE  !(choice == 6)
[L1677]  COND TRUE   choice == 5
[L1678]              gas := gas - 21000;
[L1679]  COND TRUE   gas >= 0
[L1680]              assume tokens_s334 >= 0 && tokens_s334 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1681]              assume msgvalue_MSG == 0;
[L1682]  CALL        call success_s334 := transfer~address~uint256_Ducks(this, msgsender_MSG, msgvalue_MSG, to_s334, tokens_s334);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != to_s334) && msgsender_MSG != to_s334) && tokens_s334 <= balances_Ducks[this][msgsender_MSG]) && balances_Ducks[this][to_s334] + tokens_s334 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && tokens_s334 >= 0) && tokens_s334 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_Ducks[this][to_s334] >= 0) && balances_Ducks[this][to_s334] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_Ducks[this][msgsender_MSG] >= 0) && balances_Ducks[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_Ducks0 := true;
[L3]                 call_transfer_Ducks0 := false;
[L3]                 revert := revert_hold;
[L372]               havoc __exception;
[L373]               revert := false;
[L374]   COND TRUE   __exception
[L375]               __tmp__Balance := Balance;
[L376]               __tmp__DType := DType;
[L377]               __tmp__Alloc := Alloc;
[L378]               __tmp__balance_ADDR := balance_ADDR;
[L379]               __tmp__M_Ref_int := M_Ref_int;
[L380]               __tmp__sum_balances0 := sum_balances0;
[L381]               __tmp__alloc_allowed_Ducks_lvl0 := alloc_allowed_Ducks_lvl0;
[L382]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L383]               __tmp__sum_allowed1 := sum_allowed1;
[L384]               __tmp__Length := Length;
[L385]               __tmp__now := now;
[L386]               __tmp__name_Ducks := name_Ducks;
[L387]               __tmp__symbol_Ducks := symbol_Ducks;
[L388]               __tmp__decimals_Ducks := decimals_Ducks;
[L389]               __tmp___totalSupply_Ducks := _totalSupply_Ducks;
[L390]               __tmp__balances_Ducks := balances_Ducks;
[L391]               __tmp__allowed_Ducks := allowed_Ducks;
[L392]   CALL        call success_s334 := transfer~address~uint256_Ducks__fail(this, msgsender_MSG, msgvalue_MSG, to_s334, tokens_s334);
[L806]   COND TRUE   __tmp__DType[this] == Ducks
[L807]   CALL        call __var_2 := safeSub~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balances_Ducks[this][msgsender_MSG], tokens_s334);
[L727]   COND FALSE  !(!(b_s112 <= a_s112))
[L731]               c_s112 := (a_s112 - b_s112) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L807]   RET         call __var_2 := safeSub~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balances_Ducks[this][msgsender_MSG], tokens_s334);
[L808]   COND FALSE  !(revert)
[L814]               __tmp__sum_balances0[this] := __tmp__sum_balances0[this] - __tmp__balances_Ducks[this][msgsender_MSG];
[L815]               __tmp__balances_Ducks[this][msgsender_MSG] := __var_2;
[L816]               __tmp__sum_balances0[this] := __tmp__sum_balances0[this] + __tmp__balances_Ducks[this][msgsender_MSG];
[L817]   COND TRUE   __tmp__DType[this] == Ducks
[L818]   CALL        call __var_3 := safeAdd~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balances_Ducks[this][to_s334], tokens_s334);
[L709]               c_s90 := (a_s90 + b_s90) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L710]   COND TRUE   !(c_s90 >= a_s90)
[L711]               revert := true;
[L818]   RET         call __var_3 := safeAdd~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balances_Ducks[this][to_s334], tokens_s334);
[L819]   COND TRUE   revert
[L392]   RET         call success_s334 := transfer~address~uint256_Ducks__fail(this, msgsender_MSG, msgvalue_MSG, to_s334, tokens_s334);
[L393]               assume revert || gas < 0;
[L1682]  RET         call success_s334 := transfer~address~uint256_Ducks(this, msgsender_MSG, msgvalue_MSG, to_s334, tokens_s334);
[L1727]  RET         call CorralChoice_Ducks(this);

Loop:
[L1727]        assume true;

[2020-11-24 18:35:32,280 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 18:35:32,280 INFO  L82        PathProgramCache]: Analyzing trace with hash -713701225, now seen corresponding path program 1 times
[2020-11-24 18:35:32,281 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 18:35:32,289 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 18:35:32,340 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 18:35:32,340 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 18:35:32,340 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [9] imperfect sequences [] total 9
[2020-11-24 18:35:32,341 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 18:35:32,341 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 9 interpolants.
[2020-11-24 18:35:32,341 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=16, Invalid=56, Unknown=0, NotChecked=0, Total=72
[2020-11-24 18:35:32,341 INFO  L87              Difference]: Start difference. First operand 140 states and 141 transitions. cyclomatic complexity: 2 Second operand 9 states.
[2020-11-24 18:35:32,383 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 18:35:32,383 INFO  L93              Difference]: Finished difference Result 142 states and 142 transitions.
[2020-11-24 18:35:32,383 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 10 states. 
[2020-11-24 18:35:32,383 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 142 states and 142 transitions.
[2020-11-24 18:35:32,384 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 18:35:32,385 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 142 states to 135 states and 135 transitions.
[2020-11-24 18:35:32,385 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 135
[2020-11-24 18:35:32,385 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 135
[2020-11-24 18:35:32,385 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 135 states and 135 transitions.
[2020-11-24 18:35:32,385 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 18:35:32,385 INFO  L728         BuchiCegarLoop]: Abstraction has 135 states and 135 transitions.
[2020-11-24 18:35:32,385 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 135 states and 135 transitions.
[2020-11-24 18:35:32,386 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 135 to 135.
[2020-11-24 18:35:32,386 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 135 states.
[2020-11-24 18:35:32,386 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 135 states to 135 states and 135 transitions.
[2020-11-24 18:35:32,386 INFO  L751         BuchiCegarLoop]: Abstraction has 135 states and 135 transitions.
[2020-11-24 18:35:32,386 INFO  L631         BuchiCegarLoop]: Abstraction has 135 states and 135 transitions.
[2020-11-24 18:35:32,387 INFO  L445         BuchiCegarLoop]: ======== Iteration 7============
[2020-11-24 18:35:32,387 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 135 states and 135 transitions.
[2020-11-24 18:35:32,387 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 18:35:32,387 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 18:35:32,387 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 18:35:32,388 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 18:35:32,388 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L3]                 success_transfer_Ducks0 := false;
[L3]                 call_transfer_Ducks0 := false;
[L3]     CALL        call main();
[L3]                 havoc p1;
[L1722]              assume null == 0;
[L1723]  CALL        call this := FreshRefGenerator__success();
[L701]               havoc newRef;
[L702]               assume Alloc[newRef] == false;
[L703]               Alloc[newRef] := true;
[L704]               assume newRef != null;
[L1723]  RET         call this := FreshRefGenerator__success();
[L1724]              assume now >= 0;
[L1725]              assume DType[this] == Ducks;
[L1726]              assume !revert && gas >= 0;
[L1727]  CALL        call CorralChoice_Ducks(this);
[L1617]              havoc msgsender_MSG;
[L1618]              havoc msgvalue_MSG;
[L1619]              havoc choice;
[L1620]              havoc __ret_0_totalSupply;
[L1621]              havoc tokenOwner_s247;
[L1622]              havoc balance_s247;
[L1623]              havoc tokenOwner_s263;
[L1624]              havoc spender_s263;
[L1625]              havoc remaining_s263;
[L1626]              havoc to_s334;
[L1627]              havoc tokens_s334;
[L1628]              havoc success_s334;
[L1629]              havoc spender_s291;
[L1630]              havoc tokens_s291;
[L1631]              havoc success_s291;
[L1632]              havoc from_s393;
[L1633]              havoc to_s393;
[L1634]              havoc tokens_s393;
[L1635]              havoc success_s393;
[L1636]              havoc a_s90;
[L1637]              havoc b_s90;
[L1638]              havoc c_s90;
[L1639]              havoc a_s112;
[L1640]              havoc b_s112;
[L1641]              havoc c_s112;
[L1642]              havoc a_s140;
[L1643]              havoc b_s140;
[L1644]              havoc c_s140;
[L1645]              havoc a_s162;
[L1646]              havoc b_s162;
[L1647]              havoc c_s162;
[L1648]              havoc __ret_0_name;
[L1649]              havoc __ret_0_symbol;
[L1650]              havoc __ret_0_decimals;
[L1651]              havoc __ret_0__totalSupply;
[L1652]              havoc tmpNow;
[L1653]              havoc gas;
[L1654]              assume gas > 4000000 && gas <= 8000000;
[L1655]              tmpNow := now;
[L1656]              havoc now;
[L1657]              assume now > tmpNow;
[L1658]              assume msgsender_MSG != null;
[L1659]  COND FALSE  !(choice == 8)
[L1665]  COND FALSE  !(choice == 7)
[L1671]  COND FALSE  !(choice == 6)
[L1677]  COND TRUE   choice == 5
[L1678]              gas := gas - 21000;
[L1679]  COND TRUE   gas >= 0
[L1680]              assume tokens_s334 >= 0 && tokens_s334 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1681]              assume msgvalue_MSG == 0;
[L1682]  CALL        call success_s334 := transfer~address~uint256_Ducks(this, msgsender_MSG, msgvalue_MSG, to_s334, tokens_s334);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != to_s334) && msgsender_MSG != to_s334) && tokens_s334 <= balances_Ducks[this][msgsender_MSG]) && balances_Ducks[this][to_s334] + tokens_s334 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && tokens_s334 >= 0) && tokens_s334 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_Ducks[this][to_s334] >= 0) && balances_Ducks[this][to_s334] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_Ducks[this][msgsender_MSG] >= 0) && balances_Ducks[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_Ducks0 := true;
[L3]                 call_transfer_Ducks0 := false;
[L3]                 revert := revert_hold;
[L372]               havoc __exception;
[L373]               revert := false;
[L374]   COND TRUE   __exception
[L375]               __tmp__Balance := Balance;
[L376]               __tmp__DType := DType;
[L377]               __tmp__Alloc := Alloc;
[L378]               __tmp__balance_ADDR := balance_ADDR;
[L379]               __tmp__M_Ref_int := M_Ref_int;
[L380]               __tmp__sum_balances0 := sum_balances0;
[L381]               __tmp__alloc_allowed_Ducks_lvl0 := alloc_allowed_Ducks_lvl0;
[L382]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L383]               __tmp__sum_allowed1 := sum_allowed1;
[L384]               __tmp__Length := Length;
[L385]               __tmp__now := now;
[L386]               __tmp__name_Ducks := name_Ducks;
[L387]               __tmp__symbol_Ducks := symbol_Ducks;
[L388]               __tmp__decimals_Ducks := decimals_Ducks;
[L389]               __tmp___totalSupply_Ducks := _totalSupply_Ducks;
[L390]               __tmp__balances_Ducks := balances_Ducks;
[L391]               __tmp__allowed_Ducks := allowed_Ducks;
[L392]   CALL        call success_s334 := transfer~address~uint256_Ducks__fail(this, msgsender_MSG, msgvalue_MSG, to_s334, tokens_s334);
[L806]   COND TRUE   __tmp__DType[this] == Ducks
[L807]   CALL        call __var_2 := safeSub~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balances_Ducks[this][msgsender_MSG], tokens_s334);
[L727]   COND FALSE  !(!(b_s112 <= a_s112))
[L731]               c_s112 := (a_s112 - b_s112) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L807]   RET         call __var_2 := safeSub~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balances_Ducks[this][msgsender_MSG], tokens_s334);
[L808]   COND FALSE  !(revert)
[L814]               __tmp__sum_balances0[this] := __tmp__sum_balances0[this] - __tmp__balances_Ducks[this][msgsender_MSG];
[L815]               __tmp__balances_Ducks[this][msgsender_MSG] := __var_2;
[L816]               __tmp__sum_balances0[this] := __tmp__sum_balances0[this] + __tmp__balances_Ducks[this][msgsender_MSG];
[L817]   COND TRUE   __tmp__DType[this] == Ducks
[L818]   CALL        call __var_3 := safeAdd~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balances_Ducks[this][to_s334], tokens_s334);
[L709]               c_s90 := (a_s90 + b_s90) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L710]   COND FALSE  !(!(c_s90 >= a_s90))
[L818]   RET         call __var_3 := safeAdd~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balances_Ducks[this][to_s334], tokens_s334);
[L819]   COND FALSE  !(revert)
[L825]               __tmp__sum_balances0[this] := __tmp__sum_balances0[this] - __tmp__balances_Ducks[this][to_s334];
[L826]               __tmp__balances_Ducks[this][to_s334] := __var_3;
[L827]               __tmp__sum_balances0[this] := __tmp__sum_balances0[this] + __tmp__balances_Ducks[this][to_s334];
[L828]               success_s334 := true;
[L392]   RET         call success_s334 := transfer~address~uint256_Ducks__fail(this, msgsender_MSG, msgvalue_MSG, to_s334, tokens_s334);
[L393]               assume revert || gas < 0;
[L1682]  RET         call success_s334 := transfer~address~uint256_Ducks(this, msgsender_MSG, msgvalue_MSG, to_s334, tokens_s334);
[L1727]  RET         call CorralChoice_Ducks(this);

Loop:
[L1727]        assume true;

[2020-11-24 18:35:32,389 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 18:35:32,389 INFO  L82        PathProgramCache]: Analyzing trace with hash -1702211253, now seen corresponding path program 1 times
[2020-11-24 18:35:32,390 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 18:35:32,394 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 18:35:32,406 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 18:35:32,406 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 18:35:32,406 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [5] imperfect sequences [] total 5
[2020-11-24 18:35:32,407 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 18:35:32,407 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 5 interpolants.
[2020-11-24 18:35:32,407 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=7, Invalid=13, Unknown=0, NotChecked=0, Total=20
[2020-11-24 18:35:32,407 INFO  L87              Difference]: Start difference. First operand 135 states and 135 transitions. cyclomatic complexity: 1 Second operand 5 states.
[2020-11-24 18:35:32,413 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 18:35:32,413 INFO  L93              Difference]: Finished difference Result 128 states and 127 transitions.
[2020-11-24 18:35:32,413 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 5 states. 
[2020-11-24 18:35:32,413 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 128 states and 127 transitions.
[2020-11-24 18:35:32,414 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-24 18:35:32,414 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 128 states to 0 states and 0 transitions.
[2020-11-24 18:35:32,414 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 0
[2020-11-24 18:35:32,414 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 0
[2020-11-24 18:35:32,414 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 0 states and 0 transitions.
[2020-11-24 18:35:32,414 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 18:35:32,414 INFO  L728         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-24 18:35:32,414 INFO  L751         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-24 18:35:32,414 INFO  L631         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-24 18:35:32,414 INFO  L445         BuchiCegarLoop]: ======== Iteration 8============
[2020-11-24 18:35:32,415 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 0 states and 0 transitions.
[2020-11-24 18:35:32,415 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-24 18:35:32,415 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is true
[2020-11-24 18:35:32,418 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 24.11 06:35:32 BasicIcfg
[2020-11-24 18:35:32,418 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-24 18:35:32,419 INFO  L168              Benchmark]: Toolchain (without parser) took 3386.69 ms. Allocated memory was 1.0 GB in the beginning and 1.3 GB in the end (delta: 255.3 MB). Free memory was 940.6 MB in the beginning and 1.2 GB in the end (delta: -215.4 MB). Peak memory consumption was 39.9 MB. Max. memory is 15.3 GB.
[2020-11-24 18:35:32,420 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.15 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-24 18:35:32,420 INFO  L168              Benchmark]: Boogie Preprocessor took 68.79 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 935.2 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-24 18:35:32,420 INFO  L168              Benchmark]: UtopiaSpecLang took 44.89 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 929.8 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-24 18:35:32,421 INFO  L168              Benchmark]: Boogie Printer took 9.06 ms. Allocated memory is still 1.0 GB. Free memory is still 929.8 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-24 18:35:32,421 INFO  L168              Benchmark]: RCFGBuilder took 490.58 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 886.9 MB in the end (delta: 42.9 MB). Peak memory consumption was 42.9 MB. Max. memory is 15.3 GB.
[2020-11-24 18:35:32,421 INFO  L168              Benchmark]: UtopiaLTL2Aut took 39.12 ms. Allocated memory is still 1.0 GB. Free memory was 886.9 MB in the beginning and 877.9 MB in the end (delta: 8.9 MB). Peak memory consumption was 8.9 MB. Max. memory is 15.3 GB.
[2020-11-24 18:35:32,421 INFO  L168              Benchmark]: BÃ¼chi Program Product took 871.72 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 64.5 MB). Free memory was 877.9 MB in the beginning and 977.0 MB in the end (delta: -99.1 MB). Peak memory consumption was 160.9 MB. Max. memory is 15.3 GB.
[2020-11-24 18:35:32,422 INFO  L168              Benchmark]: BlockEncodingV2 took 76.39 ms. Allocated memory is still 1.1 GB. Free memory was 977.0 MB in the beginning and 947.5 MB in the end (delta: 29.5 MB). Peak memory consumption was 29.5 MB. Max. memory is 15.3 GB.
[2020-11-24 18:35:32,422 INFO  L168              Benchmark]: BuchiAutomizer took 1783.12 ms. Allocated memory was 1.1 GB in the beginning and 1.3 GB in the end (delta: 190.8 MB). Free memory was 947.5 MB in the beginning and 1.2 GB in the end (delta: -208.5 MB). There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-24 18:35:32,424 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    1436 locations, 2465 edges
  - StatisticsResult: Encoded RCFG
    1394 locations, 2353 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.15 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 68.79 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 935.2 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 44.89 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 929.8 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 9.06 ms. Allocated memory is still 1.0 GB. Free memory is still 929.8 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * RCFGBuilder took 490.58 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 886.9 MB in the end (delta: 42.9 MB). Peak memory consumption was 42.9 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 39.12 ms. Allocated memory is still 1.0 GB. Free memory was 886.9 MB in the beginning and 877.9 MB in the end (delta: 8.9 MB). Peak memory consumption was 8.9 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 871.72 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 64.5 MB). Free memory was 877.9 MB in the beginning and 977.0 MB in the end (delta: -99.1 MB). Peak memory consumption was 160.9 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 76.39 ms. Allocated memory is still 1.1 GB. Free memory was 977.0 MB in the beginning and 947.5 MB in the end (delta: 29.5 MB). Peak memory consumption was 29.5 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 1783.12 ms. Allocated memory was 1.1 GB in the beginning and 1.3 GB in the end (delta: 190.8 MB). Free memory was 947.5 MB in the beginning and 1.2 GB in the end (delta: -208.5 MB). There was no memory consumed. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    613 locations, 764 edges
  - StatisticsResult: BuchiProgram size
    1436 locations, 2465 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 7 terminating modules (7 trivial, 0 deterministic, 0 nondeterministic). 7 modules have a trivial ranking function, the largest among these consists of 16 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 1.7s and 8 iterations.  TraceHistogramMax:1. Analysis of lassos took 0.7s. Construction of modules took 0.4s. BÃ¼chi inclusion checks took 0.3s. Highest rank in rank-based complementation 0. Minimization of det autom 7. Minimization of nondet autom 0. Automata minimization 0.0s AutomataMinimizationTime, 6 MinimizatonAttempts, 35 StatesRemovedByMinimization, 3 NontrivialMinimizations. Non-live state removal took 0.0s Buchi closure took 0.0s. Biggest automaton had 181 states and ocurred in iteration 2.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 1627 SDtfs, 1481 SDslu, 2875 SDs, 0 SdLazy, 1719 SolverSat, 547 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 0.4s Time	LassoAnalysisResults: nont0 unkn0 SFLI0 SFLT0 conc0 concLT0 SILN0 SILU7 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - AllSpecificationsHoldResult: All specifications hold
    Buchi Automizer proved that the LTL property ! ( ( []( (call_transfer_Ducks0) ==> ( <>(success_transfer_Ducks0) ) ) )) holds
RESULT: Ultimate proved your program to be correct!
Received shutdown request...
