This is Ultimate 0.1.24-f1553f5-m
[2020-11-24 16:07:50,684 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-24 16:07:50,686 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-24 16:07:50,696 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-24 16:07:50,696 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-24 16:07:50,697 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-24 16:07:50,698 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-24 16:07:50,699 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-24 16:07:50,701 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-24 16:07:50,701 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-24 16:07:50,702 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-24 16:07:50,702 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-24 16:07:50,703 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-24 16:07:50,703 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-24 16:07:50,704 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-24 16:07:50,705 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-24 16:07:50,705 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-24 16:07:50,706 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-24 16:07:50,708 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-24 16:07:50,709 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-24 16:07:50,710 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-24 16:07:50,710 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-24 16:07:50,712 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-24 16:07:50,712 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-24 16:07:50,712 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-24 16:07:50,713 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-24 16:07:50,713 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-24 16:07:50,714 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-24 16:07:50,714 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-24 16:07:50,714 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-24 16:07:50,714 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-24 16:07:50,715 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-24 16:07:50,715 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-24 16:07:50,716 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-24 16:07:50,717 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-24 16:07:50,717 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-24 16:07:50,717 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-24 16:07:50,717 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-24 16:07:50,717 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-24 16:07:50,718 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-24 16:07:50,718 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-24 16:07:50,719 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-24 16:07:50,726 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-24 16:07:50,726 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-24 16:07:50,727 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-24 16:07:50,727 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-24 16:07:50,727 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-24 16:07:50,728 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-24 16:07:50,728 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-24 16:07:50,728 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-24 16:07:50,728 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-24 16:07:50,728 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-24 16:07:50,728 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-24 16:07:50,728 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-24 16:07:50,728 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-24 16:07:50,729 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-24 16:07:50,729 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-24 16:07:50,729 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-24 16:07:50,729 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-24 16:07:50,729 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-24 16:07:50,729 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-24 16:07:50,729 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-24 16:07:50,729 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-24 16:07:50,730 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-24 16:07:50,730 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-24 16:07:50,730 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-24 16:07:50,730 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-24 16:07:50,730 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-24 16:07:50,750 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-24 16:07:50,763 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-24 16:07:50,765 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-24 16:07:50,766 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-24 16:07:50,767 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-24 16:07:50,767 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/RICH_0x025daf950c6e814dee4c96e13c98d3196d22e60c_transfer-self.bpl
[2020-11-24 16:07:50,767 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/RICH_0x025daf950c6e814dee4c96e13c98d3196d22e60c_transfer-self.bpl'
[2020-11-24 16:07:50,830 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-24 16:07:50,831 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-24 16:07:50,831 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-24 16:07:50,831 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-24 16:07:50,831 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-24 16:07:50,847 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "RICH_0x025daf950c6e814dee4c96e13c98d3196d22e60c_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 04:07:50" (1/1) ...
[2020-11-24 16:07:50,848 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "RICH_0x025daf950c6e814dee4c96e13c98d3196d22e60c_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 04:07:50" (1/1) ...
[2020-11-24 16:07:50,871 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "RICH_0x025daf950c6e814dee4c96e13c98d3196d22e60c_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 04:07:50" (1/1) ...
[2020-11-24 16:07:50,872 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "RICH_0x025daf950c6e814dee4c96e13c98d3196d22e60c_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 04:07:50" (1/1) ...
[2020-11-24 16:07:50,889 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "RICH_0x025daf950c6e814dee4c96e13c98d3196d22e60c_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 04:07:50" (1/1) ...
[2020-11-24 16:07:50,896 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "RICH_0x025daf950c6e814dee4c96e13c98d3196d22e60c_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 04:07:50" (1/1) ...
[2020-11-24 16:07:50,901 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "RICH_0x025daf950c6e814dee4c96e13c98d3196d22e60c_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 04:07:50" (1/1) ...
[2020-11-24 16:07:50,909 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-24 16:07:50,909 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-24 16:07:50,909 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-24 16:07:50,911 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-24 16:07:50,915 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "RICH_0x025daf950c6e814dee4c96e13c98d3196d22e60c_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 04:07:50" (1/1) ...
[2020-11-24 16:07:50,931 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(TokenERC20.transfer(to, value), msg.sender == to && value <= balances_TokenERC20[this][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_TokenERC20[this][to] >= 0 && balances_TokenERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_TokenERC20[this][msg.sender] >= 0 &&  balances_TokenERC20[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(TokenERC20.transfer(to, value), return == true && _totalSupply_TokenERC20[this] == old(_totalSupply_TokenERC20[this]) && balances_TokenERC20[this] == old(balances_TokenERC20[this]) && allowed_TokenERC20[this] == old(allowed_TokenERC20[this]) && aSBlock_RICH[this] == old(aSBlock_RICH[this]) && aEBlock_RICH[this] == old(aEBlock_RICH[this]) && aCap_RICH[this] == old(aCap_RICH[this]) && aTot_RICH[this] == old(aTot_RICH[this]) && aAmt_RICH[this] == old(aAmt_RICH[this]) && sSBlock_RICH[this] == old(sSBlock_RICH[this]) && sEBlock_RICH[this] == old(sEBlock_RICH[this]) && sCap_RICH[this] == old(sCap_RICH[this]) && sTot_RICH[this] == old(sTot_RICH[this]) && sChunk_RICH[this] == old(sChunk_RICH[this]) && sPrice_RICH[this] == old(sPrice_RICH[this]) && symbol_TokenERC20[this] == old(symbol_TokenERC20[this]) && name_TokenERC20[this] == old(name_TokenERC20[this]) && decimals_TokenERC20[this] == old(decimals_TokenERC20[this]) && owner_Owned[this] == old(owner_Owned[this]) && newOwner_Owned[this] == old(newOwner_Owned[this]))))
[2020-11-24 16:07:50,936 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(TokenERC20.transfer(to, value), msg.sender == to && value <= balances_TokenERC20[this][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_TokenERC20[this][to] >= 0 && balances_TokenERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_TokenERC20[this][msg.sender] >= 0 &&  balances_TokenERC20[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(TokenERC20.transfer(to, value), return == true && _totalSupply_TokenERC20[this] == old(_totalSupply_TokenERC20[this]) && balances_TokenERC20[this] == old(balances_TokenERC20[this]) && allowed_TokenERC20[this] == old(allowed_TokenERC20[this]) && aSBlock_RICH[this] == old(aSBlock_RICH[this]) && aEBlock_RICH[this] == old(aEBlock_RICH[this]) && aCap_RICH[this] == old(aCap_RICH[this]) && aTot_RICH[this] == old(aTot_RICH[this]) && aAmt_RICH[this] == old(aAmt_RICH[this]) && sSBlock_RICH[this] == old(sSBlock_RICH[this]) && sEBlock_RICH[this] == old(sEBlock_RICH[this]) && sCap_RICH[this] == old(sCap_RICH[this]) && sTot_RICH[this] == old(sTot_RICH[this]) && sChunk_RICH[this] == old(sChunk_RICH[this]) && sPrice_RICH[this] == old(sPrice_RICH[this]) && symbol_TokenERC20[this] == old(symbol_TokenERC20[this]) && name_TokenERC20[this] == old(name_TokenERC20[this]) && decimals_TokenERC20[this] == old(decimals_TokenERC20[this]) && owner_Owned[this] == old(owner_Owned[this]) && newOwner_Owned[this] == old(newOwner_Owned[this]))))
[2020-11-24 16:07:50,944 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(TokenERC20.transfer(to, value), msg.sender == to && value <= balances_TokenERC20[this][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_TokenERC20[this][to] >= 0 && balances_TokenERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_TokenERC20[this][msg.sender] >= 0 &&  balances_TokenERC20[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(TokenERC20.transfer(to, value), return == true && _totalSupply_TokenERC20[this] == old(_totalSupply_TokenERC20[this]) && balances_TokenERC20[this] == old(balances_TokenERC20[this]) && allowed_TokenERC20[this] == old(allowed_TokenERC20[this]) && aSBlock_RICH[this] == old(aSBlock_RICH[this]) && aEBlock_RICH[this] == old(aEBlock_RICH[this]) && aCap_RICH[this] == old(aCap_RICH[this]) && aTot_RICH[this] == old(aTot_RICH[this]) && aAmt_RICH[this] == old(aAmt_RICH[this]) && sSBlock_RICH[this] == old(sSBlock_RICH[this]) && sEBlock_RICH[this] == old(sEBlock_RICH[this]) && sCap_RICH[this] == old(sCap_RICH[this]) && sTot_RICH[this] == old(sTot_RICH[this]) && sChunk_RICH[this] == old(sChunk_RICH[this]) && sPrice_RICH[this] == old(sPrice_RICH[this]) && symbol_TokenERC20[this] == old(symbol_TokenERC20[this]) && name_TokenERC20[this] == old(name_TokenERC20[this]) && decimals_TokenERC20[this] == old(decimals_TokenERC20[this]) && owner_Owned[this] == old(owner_Owned[this]) && newOwner_Owned[this] == old(newOwner_Owned[this]))))
[2020-11-24 16:07:50,949 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( msg.sender==to_s381 && tokens_s381<=balances_TokenERC20[this][msg.sender] ) && tokens_s381>=0 ) && tokens_s381<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && balances_TokenERC20[this][to_s381]>=0 ) && balances_TokenERC20[this][to_s381]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && balances_TokenERC20[this][msg.sender]>=0 ) && balances_TokenERC20[this][msg.sender]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>],IdentifierExpression[to_s381,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]],BinaryExpression[COMPLEQ,IdentifierExpression[tokens_s381,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>],ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]]]],BinaryExpression[COMPGEQ,IdentifierExpression[tokens_s381,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>],IntegerLiteral[0]]],BinaryExpression[COMPLT,IdentifierExpression[tokens_s381,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]],[IdentifierExpression[to_s381,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]],[IdentifierExpression[to_s381,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]]
[2020-11-24 16:07:50,953 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( success_s381==true && _totalSupply_TokenERC20[this]==( old(_totalSupply_TokenERC20[this]) ) ) && balances_TokenERC20[this]==( old(balances_TokenERC20[this]) ) ) && allowed_TokenERC20[this]==( old(allowed_TokenERC20[this]) ) ) && aSBlock_RICH[this]==( old(aSBlock_RICH[this]) ) ) && aEBlock_RICH[this]==( old(aEBlock_RICH[this]) ) ) && aCap_RICH[this]==( old(aCap_RICH[this]) ) ) && aTot_RICH[this]==( old(aTot_RICH[this]) ) ) && aAmt_RICH[this]==( old(aAmt_RICH[this]) ) ) && sSBlock_RICH[this]==( old(sSBlock_RICH[this]) ) ) && sEBlock_RICH[this]==( old(sEBlock_RICH[this]) ) ) && sCap_RICH[this]==( old(sCap_RICH[this]) ) ) && sTot_RICH[this]==( old(sTot_RICH[this]) ) ) && sChunk_RICH[this]==( old(sChunk_RICH[this]) ) ) && sPrice_RICH[this]==( old(sPrice_RICH[this]) ) ) && symbol_TokenERC20[this]==( old(symbol_TokenERC20[this]) ) ) && name_TokenERC20[this]==( old(name_TokenERC20[this]) ) ) && decimals_TokenERC20[this]==( old(decimals_TokenERC20[this]) ) ) && owner_Owned[this]==( old(owner_Owned[this]) ) ) && newOwner_Owned[this]==( old(newOwner_Owned[this]) ) ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[success_s381,<IMPLEMENTATION_OUTPARAM,transfer~address~uint256_TokenERC20>],BooleanLiteral[true]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_totalSupply_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_totalSupply_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[balances_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[balances_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[allowed_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[allowed_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[aSBlock_RICH,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[aSBlock_RICH,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[aEBlock_RICH,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[aEBlock_RICH,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[aCap_RICH,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[aCap_RICH,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[aTot_RICH,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[aTot_RICH,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[aAmt_RICH,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[aAmt_RICH,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[sSBlock_RICH,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[sSBlock_RICH,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[sEBlock_RICH,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[sEBlock_RICH,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[sCap_RICH,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[sCap_RICH,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[sTot_RICH,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[sTot_RICH,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[sChunk_RICH,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[sChunk_RICH,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[sPrice_RICH,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[sPrice_RICH,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[symbol_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[symbol_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[name_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[name_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[decimals_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[decimals_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[owner_Owned,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[owner_Owned,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[newOwner_Owned,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[newOwner_Owned,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]]]]]
[2020-11-24 16:07:50,956 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(TokenERC20.transfer(to, value), msg.sender == to && value <= balances_TokenERC20[this][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_TokenERC20[this][to] >= 0 && balances_TokenERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_TokenERC20[this][msg.sender] >= 0 &&  balances_TokenERC20[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(TokenERC20.transfer(to, value), return == true && _totalSupply_TokenERC20[this] == old(_totalSupply_TokenERC20[this]) && balances_TokenERC20[this] == old(balances_TokenERC20[this]) && allowed_TokenERC20[this] == old(allowed_TokenERC20[this]) && aSBlock_RICH[this] == old(aSBlock_RICH[this]) && aEBlock_RICH[this] == old(aEBlock_RICH[this]) && aCap_RICH[this] == old(aCap_RICH[this]) && aTot_RICH[this] == old(aTot_RICH[this]) && aAmt_RICH[this] == old(aAmt_RICH[this]) && sSBlock_RICH[this] == old(sSBlock_RICH[this]) && sEBlock_RICH[this] == old(sEBlock_RICH[this]) && sCap_RICH[this] == old(sCap_RICH[this]) && sTot_RICH[this] == old(sTot_RICH[this]) && sChunk_RICH[this] == old(sChunk_RICH[this]) && sPrice_RICH[this] == old(sPrice_RICH[this]) && symbol_TokenERC20[this] == old(symbol_TokenERC20[this]) && name_TokenERC20[this] == old(name_TokenERC20[this]) && decimals_TokenERC20[this] == old(decimals_TokenERC20[this]) && owner_Owned[this] == old(owner_Owned[this]) && newOwner_Owned[this] == old(newOwner_Owned[this]))))
[2020-11-24 16:07:50,956 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_transfer_TokenERC200) ==> ( <>AP(success_transfer_TokenERC200) ) ) )
Executed UtopiaSpecLang
[2020-11-24 16:07:50,961 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 04:07:50 PropertyContainer
[2020-11-24 16:07:50,961 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-24 16:07:50,961 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-24 16:07:50,961 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-24 16:07:50,961 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-24 16:07:50,962 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "RICH_0x025daf950c6e814dee4c96e13c98d3196d22e60c_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 04:07:50" (1/2) ...
[2020-11-24 16:07:50,962 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-24 16:07:50,962 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-24 16:07:50,971 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 04:07:50" (2/2) ...
[2020-11-24 16:07:50,971 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-24 16:07:50,971 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-24 16:07:50,972 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-24 16:07:50,972 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-24 16:07:50,972 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "RICH_0x025daf950c6e814dee4c96e13c98d3196d22e60c_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 04:07:50" (1/2) ...
[2020-11-24 16:07:51,023 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-24 16:07:51,023 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__success
[2020-11-24 16:07:51,023 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__success
[2020-11-24 16:07:51,023 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_TokenERC20
[2020-11-24 16:07:51,023 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_TokenERC20
[2020-11-24 16:07:51,024 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_TokenERC20
[2020-11-24 16:07:51,024 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_TokenERC20
[2020-11-24 16:07:51,024 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_TokenERC20
[2020-11-24 16:07:51,024 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_TokenERC20
[2020-11-24 16:07:51,024 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_TokenERC20
[2020-11-24 16:07:51,024 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_TokenERC20
[2020-11-24 16:07:51,024 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_TokenERC20
[2020-11-24 16:07:51,024 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_TokenERC20
[2020-11-24 16:07:51,024 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_TokenERC20
[2020-11-24 16:07:51,024 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_TokenERC20
[2020-11-24 16:07:51,024 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-24 16:07:51,025 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-24 16:07:51,025 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-24 16:07:51,025 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__success
[2020-11-24 16:07:51,025 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_SafeMath
[2020-11-24 16:07:51,025 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_SafeMath
[2020-11-24 16:07:51,025 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20Interface
[2020-11-24 16:07:51,025 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20Interface
[2020-11-24 16:07:51,025 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ApproveAndCallFallBack
[2020-11-24 16:07:51,025 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ApproveAndCallFallBack
[2020-11-24 16:07:51,025 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_Owned
[2020-11-24 16:07:51,025 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_Owned
[2020-11-24 16:07:51,025 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_TokenERC20
[2020-11-24 16:07:51,026 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_TokenERC20
[2020-11-24 16:07:51,026 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_RICH
[2020-11-24 16:07:51,026 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-24 16:07:51,026 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-24 16:07:51,026 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__fail
[2020-11-24 16:07:51,026 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-24 16:07:51,026 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_TokenERC20__success
[2020-11-24 16:07:51,026 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_TokenERC20__fail
[2020-11-24 16:07:51,026 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_TokenERC20__success
[2020-11-24 16:07:51,027 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_TokenERC20__fail
[2020-11-24 16:07:51,027 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_TokenERC20__success
[2020-11-24 16:07:51,027 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_TokenERC20__fail
[2020-11-24 16:07:51,027 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_TokenERC20__success
[2020-11-24 16:07:51,027 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_TokenERC20__fail
[2020-11-24 16:07:51,027 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_TokenERC20__success
[2020-11-24 16:07:51,027 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_TokenERC20__fail
[2020-11-24 16:07:51,027 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_TokenERC20__success
[2020-11-24 16:07:51,027 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_TokenERC20__fail
[2020-11-24 16:07:51,027 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-24 16:07:51,027 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-24 16:07:51,027 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-24 16:07:51,027 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__fail
[2020-11-24 16:07:51,027 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-24 16:07:51,028 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-24 16:07:51,028 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__fail
[2020-11-24 16:07:51,028 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__success
[2020-11-24 16:07:51,028 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-24 16:07:51,028 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__success
[2020-11-24 16:07:51,028 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_TokenERC20__fail
[2020-11-24 16:07:51,028 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_TokenERC20__success
[2020-11-24 16:07:51,028 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_TokenERC20__fail
[2020-11-24 16:07:51,028 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_TokenERC20__success
[2020-11-24 16:07:51,028 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_TokenERC20__fail
[2020-11-24 16:07:51,028 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_TokenERC20__success
[2020-11-24 16:07:51,028 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_TokenERC20__fail
[2020-11-24 16:07:51,029 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_TokenERC20__success
[2020-11-24 16:07:51,029 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_TokenERC20__fail
[2020-11-24 16:07:51,029 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_TokenERC20__success
[2020-11-24 16:07:51,029 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_TokenERC20__fail
[2020-11-24 16:07:51,029 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_TokenERC20__success
[2020-11-24 16:07:51,029 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-24 16:07:51,029 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-24 16:07:51,029 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-24 16:07:51,029 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-24 16:07:51,029 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-24 16:07:51,029 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-24 16:07:51,029 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__fail
[2020-11-24 16:07:51,029 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__success
[2020-11-24 16:07:51,030 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_SafeMath
[2020-11-24 16:07:51,030 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_SafeMath
[2020-11-24 16:07:51,030 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20Interface
[2020-11-24 16:07:51,030 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20Interface
[2020-11-24 16:07:51,030 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ApproveAndCallFallBack
[2020-11-24 16:07:51,030 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ApproveAndCallFallBack
[2020-11-24 16:07:51,030 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_Owned
[2020-11-24 16:07:51,030 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_Owned
[2020-11-24 16:07:51,030 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_TokenERC20
[2020-11-24 16:07:51,030 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_TokenERC20
[2020-11-24 16:07:51,030 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_RICH
[2020-11-24 16:07:51,030 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-24 16:07:51,030 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-24 16:07:51,031 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-24 16:07:51,518 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 16:07:51,519 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 16:07:51,521 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 16:07:51,564 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-24 16:07:51,565 INFO  L286             CfgBuilder]: Removed 6 assue(true) statements.
[2020-11-24 16:07:51,566 INFO  L202        PluginConnector]: Adding new model RICH_0x025daf950c6e814dee4c96e13c98d3196d22e60c_transfer-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 04:07:51 BoogieIcfgContainer
[2020-11-24 16:07:51,566 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 04:07:50" (2/2) ...
[2020-11-24 16:07:51,566 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-24 16:07:51,567 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@379f8c25 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 04:07:51, skipping insertion in model container
[2020-11-24 16:07:51,567 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-24 16:07:51,567 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-24 16:07:51,567 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-24 16:07:51,569 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-24 16:07:51,569 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "RICH_0x025daf950c6e814dee4c96e13c98d3196d22e60c_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 04:07:50" (1/3) ...
[2020-11-24 16:07:51,569 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@528fc3bf and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 04:07:51, skipping insertion in model container
[2020-11-24 16:07:51,569 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 04:07:50" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-24 16:07:51,606 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 04:07:51 NWAContainer
[2020-11-24 16:07:51,607 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-24 16:07:51,607 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-24 16:07:51,607 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-24 16:07:51,608 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-24 16:07:51,609 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "RICH_0x025daf950c6e814dee4c96e13c98d3196d22e60c_transfer-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 04:07:51" (3/4) ...
[2020-11-24 16:07:51,610 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@4a34ff89 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 04:07:51, skipping insertion in model container
[2020-11-24 16:07:51,610 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 04:07:51" (4/4) ...
[2020-11-24 16:07:51,613 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-24 16:07:51,616 INFO  L110   BuchiProductObserver]: Initial RCFG 751 locations, 912 edges
[2020-11-24 16:07:51,616 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-24 16:07:51,627 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-24 16:07:52,546 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-24 16:07:52,549 INFO  L110   BuchiProductObserver]: BuchiProgram size 1738 locations, 2945 edges
[2020-11-24 16:07:52,549 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 04:07:52 BoogieIcfgContainer
[2020-11-24 16:07:52,549 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-24 16:07:52,549 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-24 16:07:52,549 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-24 16:07:52,551 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-24 16:07:52,552 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 04:07:52" (1/1) ...
[2020-11-24 16:07:52,593 INFO  L313           BlockEncoder]: Initial Icfg 1738 locations, 2945 edges
[2020-11-24 16:07:52,593 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-24 16:07:52,593 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-24 16:07:52,594 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-24 16:07:52,594 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-24 16:07:52,603 INFO  L70    emoveInfeasibleEdges]: Removed 51 edges and 15 locations because of local infeasibility
[2020-11-24 16:07:52,612 INFO  L70        RemoveSinkStates]: Removed 2 edges and 1 locations by removing sink states
[2020-11-24 16:07:52,619 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-24 16:07:52,621 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-24 16:07:52,623 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-24 16:07:52,623 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-24 16:07:52,626 INFO  L313           BlockEncoder]: Encoded RCFG 1704 locations, 2866 edges
[2020-11-24 16:07:52,626 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 24.11 04:07:52 BasicIcfg
[2020-11-24 16:07:52,626 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-24 16:07:52,627 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-24 16:07:52,627 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-24 16:07:52,629 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-24 16:07:52,630 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 16:07:52,630 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "RICH_0x025daf950c6e814dee4c96e13c98d3196d22e60c_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 04:07:50" (1/6) ...
[2020-11-24 16:07:52,632 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@38277e10 and model type RICH_0x025daf950c6e814dee4c96e13c98d3196d22e60c_transfer-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 24.11 04:07:52, skipping insertion in model container
[2020-11-24 16:07:52,632 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 16:07:52,632 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 04:07:50" (2/6) ...
[2020-11-24 16:07:52,632 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@38277e10 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 24.11 04:07:52, skipping insertion in model container
[2020-11-24 16:07:52,632 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 16:07:52,632 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "RICH_0x025daf950c6e814dee4c96e13c98d3196d22e60c_transfer-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 04:07:51" (3/6) ...
[2020-11-24 16:07:52,633 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@38277e10 and model type RICH_0x025daf950c6e814dee4c96e13c98d3196d22e60c_transfer-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 24.11 04:07:52, skipping insertion in model container
[2020-11-24 16:07:52,633 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 16:07:52,633 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 04:07:51" (4/6) ...
[2020-11-24 16:07:52,633 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@38277e10 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 24.11 04:07:52, skipping insertion in model container
[2020-11-24 16:07:52,633 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 16:07:52,633 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 04:07:52" (5/6) ...
[2020-11-24 16:07:52,633 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@38277e10 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 24.11 04:07:52, skipping insertion in model container
[2020-11-24 16:07:52,633 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 16:07:52,633 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 24.11 04:07:52" (6/6) ...
[2020-11-24 16:07:52,634 INFO  L404   chiAutomizerObserver]: Analyzing ICFG RICH_0x025daf950c6e814dee4c96e13c98d3196d22e60c_transfer-self.bpl_BEv2
[2020-11-24 16:07:52,672 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-24 16:07:52,672 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-24 16:07:52,673 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-24 16:07:52,673 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-24 16:07:52,673 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-24 16:07:52,673 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-24 16:07:52,673 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-24 16:07:52,673 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-24 16:07:52,673 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-24 16:07:52,693 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1704 states.
[2020-11-24 16:07:52,733 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 16:07:52,733 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 16:07:52,733 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 16:07:52,742 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 16:07:52,742 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
[2020-11-24 16:07:52,742 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-24 16:07:52,743 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1704 states.
[2020-11-24 16:07:52,752 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 16:07:52,752 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 16:07:52,752 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 16:07:52,755 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 16:07:52,755 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L2]                 success_transfer_TokenERC200 := false;
[L2]                 call_transfer_TokenERC200 := false;
[L2]     CALL        call main();
[L2248]              assume null == 0;
[L2249]  CALL        call this := FreshRefGenerator__success();
[L896]               havoc newRef;
[L897]               assume Alloc[newRef] == false;
[L898]               Alloc[newRef] := true;
[L899]               assume newRef != null;
[L2249]  RET         call this := FreshRefGenerator__success();
[L2250]              assume now >= 0;
[L2251]              assume DType[this] == RICH;
[L2252]              assume !revert && gas >= 0;
[L2253]  CALL        call CorralChoice_RICH(this);
[L2130]              havoc msgsender_MSG;
[L2131]              havoc msgvalue_MSG;
[L2132]              havoc choice;
[L2133]              havoc __ret_0_totalSupply;
[L2134]              havoc tokenOwner_s338;
[L2135]              havoc balance_s338;
[L2136]              havoc tokenOwner_s484;
[L2137]              havoc spender_s484;
[L2138]              havoc remaining_s484;
[L2139]              havoc to_s381;
[L2140]              havoc tokens_s381;
[L2141]              havoc success_s381;
[L2142]              havoc spender_s409;
[L2143]              havoc tokens_s409;
[L2144]              havoc success_s409;
[L2145]              havoc from_s468;
[L2146]              havoc to_s468;
[L2147]              havoc tokens_s468;
[L2148]              havoc success_s468;
[L2149]              havoc __ret_0_owner;
[L2150]              havoc __ret_0_newOwner;
[L2151]              havoc _newOwner_s217;
[L2152]              havoc __ret_0_symbol;
[L2153]              havoc __ret_0_name;
[L2154]              havoc __ret_0_decimals;
[L2155]              havoc spender_s527;
[L2156]              havoc tokens_s527;
[L2157]              havoc data_s527;
[L2158]              havoc success_s527;
[L2159]              havoc __ret_0_aSBlock;
[L2160]              havoc __ret_0_aEBlock;
[L2161]              havoc __ret_0_aCap;
[L2162]              havoc __ret_0_aTot;
[L2163]              havoc __ret_0_aAmt;
[L2164]              havoc __ret_0_sSBlock;
[L2165]              havoc __ret_0_sEBlock;
[L2166]              havoc __ret_0_sCap;
[L2167]              havoc __ret_0_sTot;
[L2168]              havoc __ret_0_sChunk;
[L2169]              havoc __ret_0_sPrice;
[L2170]              havoc _refer_s687;
[L2171]              havoc success_s687;
[L2172]              havoc _refer_s847;
[L2173]              havoc success_s847;
[L2174]              havoc StartBlock_s868;
[L2175]              havoc EndBlock_s868;
[L2176]              havoc DropCap_s868;
[L2177]              havoc DropCount_s868;
[L2178]              havoc DropAmount_s868;
[L2179]              havoc StartBlock_s892;
[L2180]              havoc EndBlock_s892;
[L2181]              havoc SaleCap_s892;
[L2182]              havoc SaleCount_s892;
[L2183]              havoc ChunkSize_s892;
[L2184]              havoc SalePrice_s892;
[L2185]              havoc _aSBlock_s926;
[L2186]              havoc _aEBlock_s926;
[L2187]              havoc _aAmt_s926;
[L2188]              havoc _aCap_s926;
[L2189]              havoc _sSBlock_s966;
[L2190]              havoc _sEBlock_s966;
[L2191]              havoc _sChunk_s966;
[L2192]              havoc _sPrice_s966;
[L2193]              havoc _sCap_s966;
[L2194]              havoc tmpNow;
[L2195]              havoc gas;
[L2196]              assume gas > 4000000 && gas <= 8000000;
[L2197]              tmpNow := now;
[L2198]              havoc now;
[L2199]              assume now > tmpNow;
[L2200]              assume msgsender_MSG != null;
[L2201]  COND TRUE   choice == 6
[L2202]              gas := gas - 21000;
[L2203]  COND FALSE  !(gas >= 0)
[L2253]  RET         call CorralChoice_RICH(this);

Loop:
[L2253]        assume true;

[2020-11-24 16:07:52,772 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 16:07:52,772 INFO  L82        PathProgramCache]: Analyzing trace with hash 1583287349, now seen corresponding path program 1 times
[2020-11-24 16:07:52,777 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 16:07:52,802 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 16:07:52,862 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 16:07:52,864 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 16:07:52,864 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [5] imperfect sequences [] total 5
[2020-11-24 16:07:52,868 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 16:07:52,963 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 5 interpolants.
[2020-11-24 16:07:52,964 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=9, Invalid=11, Unknown=0, NotChecked=0, Total=20
[2020-11-24 16:07:52,966 INFO  L87              Difference]: Start difference. First operand 1704 states. Second operand 5 states.
[2020-11-24 16:07:53,134 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 16:07:53,134 INFO  L93              Difference]: Finished difference Result 662 states and 716 transitions.
[2020-11-24 16:07:53,134 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-24 16:07:53,136 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 662 states and 716 transitions.
[2020-11-24 16:07:53,140 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 16:07:53,144 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 662 states to 212 states and 221 transitions.
[2020-11-24 16:07:53,144 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 4
[2020-11-24 16:07:53,145 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 212
[2020-11-24 16:07:53,145 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 212 states and 221 transitions.
[2020-11-24 16:07:53,146 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 16:07:53,146 INFO  L728         BuchiCegarLoop]: Abstraction has 212 states and 221 transitions.
[2020-11-24 16:07:53,157 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 212 states and 221 transitions.
[2020-11-24 16:07:53,169 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 212 to 212.
[2020-11-24 16:07:53,170 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 212 states.
[2020-11-24 16:07:53,171 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 212 states to 212 states and 221 transitions.
[2020-11-24 16:07:53,172 INFO  L751         BuchiCegarLoop]: Abstraction has 212 states and 221 transitions.
[2020-11-24 16:07:53,172 INFO  L631         BuchiCegarLoop]: Abstraction has 212 states and 221 transitions.
[2020-11-24 16:07:53,172 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-24 16:07:53,172 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 212 states and 221 transitions.
[2020-11-24 16:07:53,173 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 16:07:53,174 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 16:07:53,174 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 16:07:53,175 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 16:07:53,175 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L2]                 success_transfer_TokenERC200 := false;
[L2]                 call_transfer_TokenERC200 := false;
[L2]     CALL        call main();
[L2248]              assume null == 0;
[L2249]  CALL        call this := FreshRefGenerator__success();
[L896]               havoc newRef;
[L897]               assume Alloc[newRef] == false;
[L898]               Alloc[newRef] := true;
[L899]               assume newRef != null;
[L2249]  RET         call this := FreshRefGenerator__success();
[L2250]              assume now >= 0;
[L2251]              assume DType[this] == RICH;
[L2252]              assume !revert && gas >= 0;
[L2253]  CALL        call CorralChoice_RICH(this);
[L2130]              havoc msgsender_MSG;
[L2131]              havoc msgvalue_MSG;
[L2132]              havoc choice;
[L2133]              havoc __ret_0_totalSupply;
[L2134]              havoc tokenOwner_s338;
[L2135]              havoc balance_s338;
[L2136]              havoc tokenOwner_s484;
[L2137]              havoc spender_s484;
[L2138]              havoc remaining_s484;
[L2139]              havoc to_s381;
[L2140]              havoc tokens_s381;
[L2141]              havoc success_s381;
[L2142]              havoc spender_s409;
[L2143]              havoc tokens_s409;
[L2144]              havoc success_s409;
[L2145]              havoc from_s468;
[L2146]              havoc to_s468;
[L2147]              havoc tokens_s468;
[L2148]              havoc success_s468;
[L2149]              havoc __ret_0_owner;
[L2150]              havoc __ret_0_newOwner;
[L2151]              havoc _newOwner_s217;
[L2152]              havoc __ret_0_symbol;
[L2153]              havoc __ret_0_name;
[L2154]              havoc __ret_0_decimals;
[L2155]              havoc spender_s527;
[L2156]              havoc tokens_s527;
[L2157]              havoc data_s527;
[L2158]              havoc success_s527;
[L2159]              havoc __ret_0_aSBlock;
[L2160]              havoc __ret_0_aEBlock;
[L2161]              havoc __ret_0_aCap;
[L2162]              havoc __ret_0_aTot;
[L2163]              havoc __ret_0_aAmt;
[L2164]              havoc __ret_0_sSBlock;
[L2165]              havoc __ret_0_sEBlock;
[L2166]              havoc __ret_0_sCap;
[L2167]              havoc __ret_0_sTot;
[L2168]              havoc __ret_0_sChunk;
[L2169]              havoc __ret_0_sPrice;
[L2170]              havoc _refer_s687;
[L2171]              havoc success_s687;
[L2172]              havoc _refer_s847;
[L2173]              havoc success_s847;
[L2174]              havoc StartBlock_s868;
[L2175]              havoc EndBlock_s868;
[L2176]              havoc DropCap_s868;
[L2177]              havoc DropCount_s868;
[L2178]              havoc DropAmount_s868;
[L2179]              havoc StartBlock_s892;
[L2180]              havoc EndBlock_s892;
[L2181]              havoc SaleCap_s892;
[L2182]              havoc SaleCount_s892;
[L2183]              havoc ChunkSize_s892;
[L2184]              havoc SalePrice_s892;
[L2185]              havoc _aSBlock_s926;
[L2186]              havoc _aEBlock_s926;
[L2187]              havoc _aAmt_s926;
[L2188]              havoc _aCap_s926;
[L2189]              havoc _sSBlock_s966;
[L2190]              havoc _sEBlock_s966;
[L2191]              havoc _sChunk_s966;
[L2192]              havoc _sPrice_s966;
[L2193]              havoc _sCap_s966;
[L2194]              havoc tmpNow;
[L2195]              havoc gas;
[L2196]              assume gas > 4000000 && gas <= 8000000;
[L2197]              tmpNow := now;
[L2198]              havoc now;
[L2199]              assume now > tmpNow;
[L2200]              assume msgsender_MSG != null;
[L2201]  COND FALSE  !(choice == 6)
[L2207]  COND FALSE  !(choice == 5)
[L2213]  COND FALSE  !(choice == 4)
[L2219]  COND TRUE   choice == 3
[L2220]              gas := gas - 21000;
[L2221]  COND TRUE   gas >= 0
[L2222]              assume tokens_s381 >= 0 && tokens_s381 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2223]              assume msgvalue_MSG == 0;
[L2224]  CALL        call success_s381 := transfer~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, to_s381, tokens_s381);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == to_s381 && tokens_s381 <= balances_TokenERC20[this][msgsender_MSG]) && tokens_s381 >= 0) && tokens_s381 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_TokenERC20[this][to_s381] >= 0) && balances_TokenERC20[this][to_s381] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_TokenERC20[this][msgsender_MSG] >= 0) && balances_TokenERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_TokenERC200 := true;
[L2]                 call_transfer_TokenERC200 := false;
[L2]                 revert := revert_hold;
[L243]               havoc __exception;
[L244]               revert := false;
[L245]   COND FALSE  !(__exception)
[L279]   CALL        call success_s381 := transfer~address~uint256_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, to_s381, tokens_s381);
[L1002]  CALL        call __var_3 := sub~uint256~uint256_SafeMath__success(this, this, 0, balances_TokenERC20[this][msgsender_MSG], tokens_s381);
[L931]   COND TRUE   !(b_s45 <= a_s45)
[L932]               revert := true;
[L1002]  RET         call __var_3 := sub~uint256~uint256_SafeMath__success(this, this, 0, balances_TokenERC20[this][msgsender_MSG], tokens_s381);
[L1003]  COND TRUE   revert
[L279]   RET         call success_s381 := transfer~address~uint256_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, to_s381, tokens_s381);
[L280]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !(((((((((((((((((((success_s381 == true && _totalSupply_TokenERC20[this] == old(_totalSupply_TokenERC20[this])) && balances_TokenERC20[this] == old(balances_TokenERC20[this])) && allowed_TokenERC20[this] == old(allowed_TokenERC20[this])) && aSBlock_RICH[this] == old(aSBlock_RICH[this])) && aEBlock_RICH[this] == old(aEBlock_RICH[this])) && aCap_RICH[this] == old(aCap_RICH[this])) && aTot_RICH[this] == old(aTot_RICH[this])) && aAmt_RICH[this] == old(aAmt_RICH[this])) && sSBlock_RICH[this] == old(sSBlock_RICH[this])) && sEBlock_RICH[this] == old(sEBlock_RICH[this])) && sCap_RICH[this] == old(sCap_RICH[this])) && sTot_RICH[this] == old(sTot_RICH[this])) && sChunk_RICH[this] == old(sChunk_RICH[this])) && sPrice_RICH[this] == old(sPrice_RICH[this])) && symbol_TokenERC20[this] == old(symbol_TokenERC20[this])) && name_TokenERC20[this] == old(name_TokenERC20[this])) && decimals_TokenERC20[this] == old(decimals_TokenERC20[this])) && owner_Owned[this] == old(owner_Owned[this])) && newOwner_Owned[this] == old(newOwner_Owned[this]));
[L2]                 revert := revert_hold;
[L2224]  RET         call success_s381 := transfer~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, to_s381, tokens_s381);
[L2253]  RET         call CorralChoice_RICH(this);

Loop:
[L2253]        assume true;

[2020-11-24 16:07:53,178 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 16:07:53,178 INFO  L82        PathProgramCache]: Analyzing trace with hash 1173711083, now seen corresponding path program 1 times
[2020-11-24 16:07:53,179 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 16:07:53,190 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 16:07:53,209 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 16:07:53,209 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 16:07:53,209 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-24 16:07:53,210 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 16:07:53,211 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-24 16:07:53,211 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-24 16:07:53,211 INFO  L87              Difference]: Start difference. First operand 212 states and 221 transitions. cyclomatic complexity: 10 Second operand 3 states.
[2020-11-24 16:07:53,216 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 16:07:53,217 INFO  L93              Difference]: Finished difference Result 243 states and 251 transitions.
[2020-11-24 16:07:53,217 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-24 16:07:53,217 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 243 states and 251 transitions.
[2020-11-24 16:07:53,218 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 2
[2020-11-24 16:07:53,220 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 243 states to 229 states and 234 transitions.
[2020-11-24 16:07:53,220 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 229
[2020-11-24 16:07:53,220 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 229
[2020-11-24 16:07:53,220 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 229 states and 234 transitions.
[2020-11-24 16:07:53,221 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 16:07:53,221 INFO  L728         BuchiCegarLoop]: Abstraction has 229 states and 234 transitions.
[2020-11-24 16:07:53,221 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 229 states and 234 transitions.
[2020-11-24 16:07:53,225 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 229 to 218.
[2020-11-24 16:07:53,226 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 218 states.
[2020-11-24 16:07:53,226 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 218 states to 218 states and 223 transitions.
[2020-11-24 16:07:53,226 INFO  L751         BuchiCegarLoop]: Abstraction has 218 states and 223 transitions.
[2020-11-24 16:07:53,226 INFO  L631         BuchiCegarLoop]: Abstraction has 218 states and 223 transitions.
[2020-11-24 16:07:53,226 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-24 16:07:53,226 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 218 states and 223 transitions.
[2020-11-24 16:07:53,227 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 16:07:53,227 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 16:07:53,227 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 16:07:53,228 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 16:07:53,228 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L2]                 success_transfer_TokenERC200 := false;
[L2]                 call_transfer_TokenERC200 := false;
[L2]     CALL        call main();
[L2248]              assume null == 0;
[L2249]  CALL        call this := FreshRefGenerator__success();
[L896]               havoc newRef;
[L897]               assume Alloc[newRef] == false;
[L898]               Alloc[newRef] := true;
[L899]               assume newRef != null;
[L2249]  RET         call this := FreshRefGenerator__success();
[L2250]              assume now >= 0;
[L2251]              assume DType[this] == RICH;
[L2252]              assume !revert && gas >= 0;
[L2253]  CALL        call CorralChoice_RICH(this);
[L2130]              havoc msgsender_MSG;
[L2131]              havoc msgvalue_MSG;
[L2132]              havoc choice;
[L2133]              havoc __ret_0_totalSupply;
[L2134]              havoc tokenOwner_s338;
[L2135]              havoc balance_s338;
[L2136]              havoc tokenOwner_s484;
[L2137]              havoc spender_s484;
[L2138]              havoc remaining_s484;
[L2139]              havoc to_s381;
[L2140]              havoc tokens_s381;
[L2141]              havoc success_s381;
[L2142]              havoc spender_s409;
[L2143]              havoc tokens_s409;
[L2144]              havoc success_s409;
[L2145]              havoc from_s468;
[L2146]              havoc to_s468;
[L2147]              havoc tokens_s468;
[L2148]              havoc success_s468;
[L2149]              havoc __ret_0_owner;
[L2150]              havoc __ret_0_newOwner;
[L2151]              havoc _newOwner_s217;
[L2152]              havoc __ret_0_symbol;
[L2153]              havoc __ret_0_name;
[L2154]              havoc __ret_0_decimals;
[L2155]              havoc spender_s527;
[L2156]              havoc tokens_s527;
[L2157]              havoc data_s527;
[L2158]              havoc success_s527;
[L2159]              havoc __ret_0_aSBlock;
[L2160]              havoc __ret_0_aEBlock;
[L2161]              havoc __ret_0_aCap;
[L2162]              havoc __ret_0_aTot;
[L2163]              havoc __ret_0_aAmt;
[L2164]              havoc __ret_0_sSBlock;
[L2165]              havoc __ret_0_sEBlock;
[L2166]              havoc __ret_0_sCap;
[L2167]              havoc __ret_0_sTot;
[L2168]              havoc __ret_0_sChunk;
[L2169]              havoc __ret_0_sPrice;
[L2170]              havoc _refer_s687;
[L2171]              havoc success_s687;
[L2172]              havoc _refer_s847;
[L2173]              havoc success_s847;
[L2174]              havoc StartBlock_s868;
[L2175]              havoc EndBlock_s868;
[L2176]              havoc DropCap_s868;
[L2177]              havoc DropCount_s868;
[L2178]              havoc DropAmount_s868;
[L2179]              havoc StartBlock_s892;
[L2180]              havoc EndBlock_s892;
[L2181]              havoc SaleCap_s892;
[L2182]              havoc SaleCount_s892;
[L2183]              havoc ChunkSize_s892;
[L2184]              havoc SalePrice_s892;
[L2185]              havoc _aSBlock_s926;
[L2186]              havoc _aEBlock_s926;
[L2187]              havoc _aAmt_s926;
[L2188]              havoc _aCap_s926;
[L2189]              havoc _sSBlock_s966;
[L2190]              havoc _sEBlock_s966;
[L2191]              havoc _sChunk_s966;
[L2192]              havoc _sPrice_s966;
[L2193]              havoc _sCap_s966;
[L2194]              havoc tmpNow;
[L2195]              havoc gas;
[L2196]              assume gas > 4000000 && gas <= 8000000;
[L2197]              tmpNow := now;
[L2198]              havoc now;
[L2199]              assume now > tmpNow;
[L2200]              assume msgsender_MSG != null;
[L2201]  COND FALSE  !(choice == 6)
[L2207]  COND FALSE  !(choice == 5)
[L2213]  COND FALSE  !(choice == 4)
[L2219]  COND TRUE   choice == 3
[L2220]              gas := gas - 21000;
[L2221]  COND TRUE   gas >= 0
[L2222]              assume tokens_s381 >= 0 && tokens_s381 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2223]              assume msgvalue_MSG == 0;
[L2224]  CALL        call success_s381 := transfer~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, to_s381, tokens_s381);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == to_s381 && tokens_s381 <= balances_TokenERC20[this][msgsender_MSG]) && tokens_s381 >= 0) && tokens_s381 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_TokenERC20[this][to_s381] >= 0) && balances_TokenERC20[this][to_s381] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_TokenERC20[this][msgsender_MSG] >= 0) && balances_TokenERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_TokenERC200 := true;
[L2]                 call_transfer_TokenERC200 := false;
[L2]                 revert := revert_hold;
[L243]               havoc __exception;
[L244]               revert := false;
[L245]   COND FALSE  !(__exception)
[L279]   CALL        call success_s381 := transfer~address~uint256_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, to_s381, tokens_s381);
[L1002]  CALL        call __var_3 := sub~uint256~uint256_SafeMath__success(this, this, 0, balances_TokenERC20[this][msgsender_MSG], tokens_s381);
[L931]   COND FALSE  !(!(b_s45 <= a_s45))
[L935]               c_s45 := (a_s45 - b_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1002]  RET         call __var_3 := sub~uint256~uint256_SafeMath__success(this, this, 0, balances_TokenERC20[this][msgsender_MSG], tokens_s381);
[L1003]  COND FALSE  !(revert)
[L1006]              sum_balances0[this] := sum_balances0[this] - balances_TokenERC20[this][msgsender_MSG];
[L1007]              balances_TokenERC20[this][msgsender_MSG] := __var_3;
[L1008]              sum_balances0[this] := sum_balances0[this] + balances_TokenERC20[this][msgsender_MSG];
[L1009]  CALL        call __var_4 := add~uint256~uint256_SafeMath__success(this, this, 0, balances_TokenERC20[this][to_s381], tokens_s381);
[L913]               c_s23 := (a_s23 + b_s23) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L914]   COND FALSE  !(!(c_s23 >= a_s23))
[L1009]  RET         call __var_4 := add~uint256~uint256_SafeMath__success(this, this, 0, balances_TokenERC20[this][to_s381], tokens_s381);
[L1010]  COND FALSE  !(revert)
[L1013]              sum_balances0[this] := sum_balances0[this] - balances_TokenERC20[this][to_s381];
[L1014]              balances_TokenERC20[this][to_s381] := __var_4;
[L1015]              sum_balances0[this] := sum_balances0[this] + balances_TokenERC20[this][to_s381];
[L1016]              assert { :EventEmitted "Transfer_TokenERC20" } true;
[L1017]              success_s381 := true;
[L279]   RET         call success_s381 := transfer~address~uint256_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, to_s381, tokens_s381);
[L280]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !(((((((((((((((((((success_s381 == true && _totalSupply_TokenERC20[this] == old(_totalSupply_TokenERC20[this])) && balances_TokenERC20[this] == old(balances_TokenERC20[this])) && allowed_TokenERC20[this] == old(allowed_TokenERC20[this])) && aSBlock_RICH[this] == old(aSBlock_RICH[this])) && aEBlock_RICH[this] == old(aEBlock_RICH[this])) && aCap_RICH[this] == old(aCap_RICH[this])) && aTot_RICH[this] == old(aTot_RICH[this])) && aAmt_RICH[this] == old(aAmt_RICH[this])) && sSBlock_RICH[this] == old(sSBlock_RICH[this])) && sEBlock_RICH[this] == old(sEBlock_RICH[this])) && sCap_RICH[this] == old(sCap_RICH[this])) && sTot_RICH[this] == old(sTot_RICH[this])) && sChunk_RICH[this] == old(sChunk_RICH[this])) && sPrice_RICH[this] == old(sPrice_RICH[this])) && symbol_TokenERC20[this] == old(symbol_TokenERC20[this])) && name_TokenERC20[this] == old(name_TokenERC20[this])) && decimals_TokenERC20[this] == old(decimals_TokenERC20[this])) && owner_Owned[this] == old(owner_Owned[this])) && newOwner_Owned[this] == old(newOwner_Owned[this]));
[L2]                 revert := revert_hold;
[L2224]  RET         call success_s381 := transfer~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, to_s381, tokens_s381);
[L2253]  RET         call CorralChoice_RICH(this);

Loop:
[L2253]        assume true;

[2020-11-24 16:07:53,231 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 16:07:53,231 INFO  L82        PathProgramCache]: Analyzing trace with hash 288261583, now seen corresponding path program 1 times
[2020-11-24 16:07:53,231 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 16:07:53,266 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 16:07:53,443 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 16:07:53,443 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 16:07:53,443 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [14] imperfect sequences [] total 14
[2020-11-24 16:07:53,444 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 16:07:53,444 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 14 interpolants.
[2020-11-24 16:07:53,444 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=29, Invalid=153, Unknown=0, NotChecked=0, Total=182
[2020-11-24 16:07:53,444 INFO  L87              Difference]: Start difference. First operand 218 states and 223 transitions. cyclomatic complexity: 6 Second operand 14 states.
[2020-11-24 16:07:53,740 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 16:07:53,740 INFO  L93              Difference]: Finished difference Result 217 states and 221 transitions.
[2020-11-24 16:07:53,740 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 13 states. 
[2020-11-24 16:07:53,741 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 217 states and 221 transitions.
[2020-11-24 16:07:53,742 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 16:07:53,743 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 217 states to 184 states and 188 transitions.
[2020-11-24 16:07:53,743 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 184
[2020-11-24 16:07:53,743 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 184
[2020-11-24 16:07:53,743 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 184 states and 188 transitions.
[2020-11-24 16:07:53,744 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 16:07:53,744 INFO  L728         BuchiCegarLoop]: Abstraction has 184 states and 188 transitions.
[2020-11-24 16:07:53,744 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 184 states and 188 transitions.
[2020-11-24 16:07:53,746 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 184 to 184.
[2020-11-24 16:07:53,747 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 184 states.
[2020-11-24 16:07:53,747 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 184 states to 184 states and 188 transitions.
[2020-11-24 16:07:53,747 INFO  L751         BuchiCegarLoop]: Abstraction has 184 states and 188 transitions.
[2020-11-24 16:07:53,747 INFO  L631         BuchiCegarLoop]: Abstraction has 184 states and 188 transitions.
[2020-11-24 16:07:53,747 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-24 16:07:53,747 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 184 states and 188 transitions.
[2020-11-24 16:07:53,748 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 16:07:53,748 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 16:07:53,748 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 16:07:53,749 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 16:07:53,749 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L2]                 success_transfer_TokenERC200 := false;
[L2]                 call_transfer_TokenERC200 := false;
[L2]     CALL        call main();
[L2248]              assume null == 0;
[L2249]  CALL        call this := FreshRefGenerator__success();
[L896]               havoc newRef;
[L897]               assume Alloc[newRef] == false;
[L898]               Alloc[newRef] := true;
[L899]               assume newRef != null;
[L2249]  RET         call this := FreshRefGenerator__success();
[L2250]              assume now >= 0;
[L2251]              assume DType[this] == RICH;
[L2252]              assume !revert && gas >= 0;
[L2253]  CALL        call CorralChoice_RICH(this);
[L2130]              havoc msgsender_MSG;
[L2131]              havoc msgvalue_MSG;
[L2132]              havoc choice;
[L2133]              havoc __ret_0_totalSupply;
[L2134]              havoc tokenOwner_s338;
[L2135]              havoc balance_s338;
[L2136]              havoc tokenOwner_s484;
[L2137]              havoc spender_s484;
[L2138]              havoc remaining_s484;
[L2139]              havoc to_s381;
[L2140]              havoc tokens_s381;
[L2141]              havoc success_s381;
[L2142]              havoc spender_s409;
[L2143]              havoc tokens_s409;
[L2144]              havoc success_s409;
[L2145]              havoc from_s468;
[L2146]              havoc to_s468;
[L2147]              havoc tokens_s468;
[L2148]              havoc success_s468;
[L2149]              havoc __ret_0_owner;
[L2150]              havoc __ret_0_newOwner;
[L2151]              havoc _newOwner_s217;
[L2152]              havoc __ret_0_symbol;
[L2153]              havoc __ret_0_name;
[L2154]              havoc __ret_0_decimals;
[L2155]              havoc spender_s527;
[L2156]              havoc tokens_s527;
[L2157]              havoc data_s527;
[L2158]              havoc success_s527;
[L2159]              havoc __ret_0_aSBlock;
[L2160]              havoc __ret_0_aEBlock;
[L2161]              havoc __ret_0_aCap;
[L2162]              havoc __ret_0_aTot;
[L2163]              havoc __ret_0_aAmt;
[L2164]              havoc __ret_0_sSBlock;
[L2165]              havoc __ret_0_sEBlock;
[L2166]              havoc __ret_0_sCap;
[L2167]              havoc __ret_0_sTot;
[L2168]              havoc __ret_0_sChunk;
[L2169]              havoc __ret_0_sPrice;
[L2170]              havoc _refer_s687;
[L2171]              havoc success_s687;
[L2172]              havoc _refer_s847;
[L2173]              havoc success_s847;
[L2174]              havoc StartBlock_s868;
[L2175]              havoc EndBlock_s868;
[L2176]              havoc DropCap_s868;
[L2177]              havoc DropCount_s868;
[L2178]              havoc DropAmount_s868;
[L2179]              havoc StartBlock_s892;
[L2180]              havoc EndBlock_s892;
[L2181]              havoc SaleCap_s892;
[L2182]              havoc SaleCount_s892;
[L2183]              havoc ChunkSize_s892;
[L2184]              havoc SalePrice_s892;
[L2185]              havoc _aSBlock_s926;
[L2186]              havoc _aEBlock_s926;
[L2187]              havoc _aAmt_s926;
[L2188]              havoc _aCap_s926;
[L2189]              havoc _sSBlock_s966;
[L2190]              havoc _sEBlock_s966;
[L2191]              havoc _sChunk_s966;
[L2192]              havoc _sPrice_s966;
[L2193]              havoc _sCap_s966;
[L2194]              havoc tmpNow;
[L2195]              havoc gas;
[L2196]              assume gas > 4000000 && gas <= 8000000;
[L2197]              tmpNow := now;
[L2198]              havoc now;
[L2199]              assume now > tmpNow;
[L2200]              assume msgsender_MSG != null;
[L2201]  COND FALSE  !(choice == 6)
[L2207]  COND FALSE  !(choice == 5)
[L2213]  COND FALSE  !(choice == 4)
[L2219]  COND TRUE   choice == 3
[L2220]              gas := gas - 21000;
[L2221]  COND TRUE   gas >= 0
[L2222]              assume tokens_s381 >= 0 && tokens_s381 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2223]              assume msgvalue_MSG == 0;
[L2224]  CALL        call success_s381 := transfer~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, to_s381, tokens_s381);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == to_s381 && tokens_s381 <= balances_TokenERC20[this][msgsender_MSG]) && tokens_s381 >= 0) && tokens_s381 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_TokenERC20[this][to_s381] >= 0) && balances_TokenERC20[this][to_s381] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_TokenERC20[this][msgsender_MSG] >= 0) && balances_TokenERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_TokenERC200 := true;
[L2]                 call_transfer_TokenERC200 := false;
[L2]                 revert := revert_hold;
[L243]               havoc __exception;
[L244]               revert := false;
[L245]   COND TRUE   __exception
[L246]               __tmp__Balance := Balance;
[L247]               __tmp__DType := DType;
[L248]               __tmp__Alloc := Alloc;
[L249]               __tmp__balance_ADDR := balance_ADDR;
[L250]               __tmp__M_Ref_int := M_Ref_int;
[L251]               __tmp__sum_balances0 := sum_balances0;
[L252]               __tmp__alloc_allowed_TokenERC20_lvl0 := alloc_allowed_TokenERC20_lvl0;
[L253]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L254]               __tmp__sum_allowed1 := sum_allowed1;
[L255]               __tmp__Length := Length;
[L256]               __tmp__now := now;
[L257]               __tmp__owner_Owned := owner_Owned;
[L258]               __tmp__newOwner_Owned := newOwner_Owned;
[L259]               __tmp__symbol_TokenERC20 := symbol_TokenERC20;
[L260]               __tmp__name_TokenERC20 := name_TokenERC20;
[L261]               __tmp__decimals_TokenERC20 := decimals_TokenERC20;
[L262]               __tmp___totalSupply_TokenERC20 := _totalSupply_TokenERC20;
[L263]               __tmp__balances_TokenERC20 := balances_TokenERC20;
[L264]               __tmp__allowed_TokenERC20 := allowed_TokenERC20;
[L265]               __tmp__aSBlock_RICH := aSBlock_RICH;
[L266]               __tmp__aEBlock_RICH := aEBlock_RICH;
[L267]               __tmp__aCap_RICH := aCap_RICH;
[L268]               __tmp__aTot_RICH := aTot_RICH;
[L269]               __tmp__aAmt_RICH := aAmt_RICH;
[L270]               __tmp__sSBlock_RICH := sSBlock_RICH;
[L271]               __tmp__sEBlock_RICH := sEBlock_RICH;
[L272]               __tmp__sCap_RICH := sCap_RICH;
[L273]               __tmp__sTot_RICH := sTot_RICH;
[L274]               __tmp__sChunk_RICH := sChunk_RICH;
[L275]               __tmp__sPrice_RICH := sPrice_RICH;
[L276]   CALL        call success_s381 := transfer~address~uint256_TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, to_s381, tokens_s381);
[L980]   CALL        call __var_3 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __tmp__balances_TokenERC20[this][msgsender_MSG], tokens_s381);
[L922]   COND TRUE   !(b_s45 <= a_s45)
[L923]               revert := true;
[L980]   RET         call __var_3 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __tmp__balances_TokenERC20[this][msgsender_MSG], tokens_s381);
[L981]   COND TRUE   revert
[L276]   RET         call success_s381 := transfer~address~uint256_TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, to_s381, tokens_s381);
[L277]               assume revert || gas < 0;
[L2224]  RET         call success_s381 := transfer~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, to_s381, tokens_s381);
[L2253]  RET         call CorralChoice_RICH(this);

Loop:
[L2253]        assume true;

[2020-11-24 16:07:53,752 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 16:07:53,752 INFO  L82        PathProgramCache]: Analyzing trace with hash 1868210621, now seen corresponding path program 1 times
[2020-11-24 16:07:53,753 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 16:07:53,762 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 16:07:53,816 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 16:07:53,816 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 16:07:53,816 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [7] imperfect sequences [] total 7
[2020-11-24 16:07:53,817 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 16:07:53,817 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 7 interpolants.
[2020-11-24 16:07:53,817 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=11, Invalid=31, Unknown=0, NotChecked=0, Total=42
[2020-11-24 16:07:53,817 INFO  L87              Difference]: Start difference. First operand 184 states and 188 transitions. cyclomatic complexity: 5 Second operand 7 states.
[2020-11-24 16:07:53,855 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 16:07:53,855 INFO  L93              Difference]: Finished difference Result 192 states and 195 transitions.
[2020-11-24 16:07:53,855 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 8 states. 
[2020-11-24 16:07:53,855 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 192 states and 195 transitions.
[2020-11-24 16:07:53,856 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 16:07:53,857 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 192 states to 185 states and 188 transitions.
[2020-11-24 16:07:53,857 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 185
[2020-11-24 16:07:53,858 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 185
[2020-11-24 16:07:53,858 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 185 states and 188 transitions.
[2020-11-24 16:07:53,858 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 16:07:53,858 INFO  L728         BuchiCegarLoop]: Abstraction has 185 states and 188 transitions.
[2020-11-24 16:07:53,858 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 185 states and 188 transitions.
[2020-11-24 16:07:53,860 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 185 to 179.
[2020-11-24 16:07:53,860 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 179 states.
[2020-11-24 16:07:53,860 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 179 states to 179 states and 182 transitions.
[2020-11-24 16:07:53,861 INFO  L751         BuchiCegarLoop]: Abstraction has 179 states and 182 transitions.
[2020-11-24 16:07:53,861 INFO  L631         BuchiCegarLoop]: Abstraction has 179 states and 182 transitions.
[2020-11-24 16:07:53,861 INFO  L445         BuchiCegarLoop]: ======== Iteration 5============
[2020-11-24 16:07:53,861 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 179 states and 182 transitions.
[2020-11-24 16:07:53,861 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 16:07:53,861 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 16:07:53,861 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 16:07:53,862 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 16:07:53,862 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L2]                 success_transfer_TokenERC200 := false;
[L2]                 call_transfer_TokenERC200 := false;
[L2]     CALL        call main();
[L2248]              assume null == 0;
[L2249]  CALL        call this := FreshRefGenerator__success();
[L896]               havoc newRef;
[L897]               assume Alloc[newRef] == false;
[L898]               Alloc[newRef] := true;
[L899]               assume newRef != null;
[L2249]  RET         call this := FreshRefGenerator__success();
[L2250]              assume now >= 0;
[L2251]              assume DType[this] == RICH;
[L2252]              assume !revert && gas >= 0;
[L2253]  CALL        call CorralChoice_RICH(this);
[L2130]              havoc msgsender_MSG;
[L2131]              havoc msgvalue_MSG;
[L2132]              havoc choice;
[L2133]              havoc __ret_0_totalSupply;
[L2134]              havoc tokenOwner_s338;
[L2135]              havoc balance_s338;
[L2136]              havoc tokenOwner_s484;
[L2137]              havoc spender_s484;
[L2138]              havoc remaining_s484;
[L2139]              havoc to_s381;
[L2140]              havoc tokens_s381;
[L2141]              havoc success_s381;
[L2142]              havoc spender_s409;
[L2143]              havoc tokens_s409;
[L2144]              havoc success_s409;
[L2145]              havoc from_s468;
[L2146]              havoc to_s468;
[L2147]              havoc tokens_s468;
[L2148]              havoc success_s468;
[L2149]              havoc __ret_0_owner;
[L2150]              havoc __ret_0_newOwner;
[L2151]              havoc _newOwner_s217;
[L2152]              havoc __ret_0_symbol;
[L2153]              havoc __ret_0_name;
[L2154]              havoc __ret_0_decimals;
[L2155]              havoc spender_s527;
[L2156]              havoc tokens_s527;
[L2157]              havoc data_s527;
[L2158]              havoc success_s527;
[L2159]              havoc __ret_0_aSBlock;
[L2160]              havoc __ret_0_aEBlock;
[L2161]              havoc __ret_0_aCap;
[L2162]              havoc __ret_0_aTot;
[L2163]              havoc __ret_0_aAmt;
[L2164]              havoc __ret_0_sSBlock;
[L2165]              havoc __ret_0_sEBlock;
[L2166]              havoc __ret_0_sCap;
[L2167]              havoc __ret_0_sTot;
[L2168]              havoc __ret_0_sChunk;
[L2169]              havoc __ret_0_sPrice;
[L2170]              havoc _refer_s687;
[L2171]              havoc success_s687;
[L2172]              havoc _refer_s847;
[L2173]              havoc success_s847;
[L2174]              havoc StartBlock_s868;
[L2175]              havoc EndBlock_s868;
[L2176]              havoc DropCap_s868;
[L2177]              havoc DropCount_s868;
[L2178]              havoc DropAmount_s868;
[L2179]              havoc StartBlock_s892;
[L2180]              havoc EndBlock_s892;
[L2181]              havoc SaleCap_s892;
[L2182]              havoc SaleCount_s892;
[L2183]              havoc ChunkSize_s892;
[L2184]              havoc SalePrice_s892;
[L2185]              havoc _aSBlock_s926;
[L2186]              havoc _aEBlock_s926;
[L2187]              havoc _aAmt_s926;
[L2188]              havoc _aCap_s926;
[L2189]              havoc _sSBlock_s966;
[L2190]              havoc _sEBlock_s966;
[L2191]              havoc _sChunk_s966;
[L2192]              havoc _sPrice_s966;
[L2193]              havoc _sCap_s966;
[L2194]              havoc tmpNow;
[L2195]              havoc gas;
[L2196]              assume gas > 4000000 && gas <= 8000000;
[L2197]              tmpNow := now;
[L2198]              havoc now;
[L2199]              assume now > tmpNow;
[L2200]              assume msgsender_MSG != null;
[L2201]  COND FALSE  !(choice == 6)
[L2207]  COND FALSE  !(choice == 5)
[L2213]  COND FALSE  !(choice == 4)
[L2219]  COND TRUE   choice == 3
[L2220]              gas := gas - 21000;
[L2221]  COND TRUE   gas >= 0
[L2222]              assume tokens_s381 >= 0 && tokens_s381 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2223]              assume msgvalue_MSG == 0;
[L2224]  CALL        call success_s381 := transfer~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, to_s381, tokens_s381);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == to_s381 && tokens_s381 <= balances_TokenERC20[this][msgsender_MSG]) && tokens_s381 >= 0) && tokens_s381 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_TokenERC20[this][to_s381] >= 0) && balances_TokenERC20[this][to_s381] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_TokenERC20[this][msgsender_MSG] >= 0) && balances_TokenERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_TokenERC200 := true;
[L2]                 call_transfer_TokenERC200 := false;
[L2]                 revert := revert_hold;
[L243]               havoc __exception;
[L244]               revert := false;
[L245]   COND TRUE   __exception
[L246]               __tmp__Balance := Balance;
[L247]               __tmp__DType := DType;
[L248]               __tmp__Alloc := Alloc;
[L249]               __tmp__balance_ADDR := balance_ADDR;
[L250]               __tmp__M_Ref_int := M_Ref_int;
[L251]               __tmp__sum_balances0 := sum_balances0;
[L252]               __tmp__alloc_allowed_TokenERC20_lvl0 := alloc_allowed_TokenERC20_lvl0;
[L253]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L254]               __tmp__sum_allowed1 := sum_allowed1;
[L255]               __tmp__Length := Length;
[L256]               __tmp__now := now;
[L257]               __tmp__owner_Owned := owner_Owned;
[L258]               __tmp__newOwner_Owned := newOwner_Owned;
[L259]               __tmp__symbol_TokenERC20 := symbol_TokenERC20;
[L260]               __tmp__name_TokenERC20 := name_TokenERC20;
[L261]               __tmp__decimals_TokenERC20 := decimals_TokenERC20;
[L262]               __tmp___totalSupply_TokenERC20 := _totalSupply_TokenERC20;
[L263]               __tmp__balances_TokenERC20 := balances_TokenERC20;
[L264]               __tmp__allowed_TokenERC20 := allowed_TokenERC20;
[L265]               __tmp__aSBlock_RICH := aSBlock_RICH;
[L266]               __tmp__aEBlock_RICH := aEBlock_RICH;
[L267]               __tmp__aCap_RICH := aCap_RICH;
[L268]               __tmp__aTot_RICH := aTot_RICH;
[L269]               __tmp__aAmt_RICH := aAmt_RICH;
[L270]               __tmp__sSBlock_RICH := sSBlock_RICH;
[L271]               __tmp__sEBlock_RICH := sEBlock_RICH;
[L272]               __tmp__sCap_RICH := sCap_RICH;
[L273]               __tmp__sTot_RICH := sTot_RICH;
[L274]               __tmp__sChunk_RICH := sChunk_RICH;
[L275]               __tmp__sPrice_RICH := sPrice_RICH;
[L276]   CALL        call success_s381 := transfer~address~uint256_TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, to_s381, tokens_s381);
[L980]   CALL        call __var_3 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __tmp__balances_TokenERC20[this][msgsender_MSG], tokens_s381);
[L922]   COND FALSE  !(!(b_s45 <= a_s45))
[L926]               c_s45 := (a_s45 - b_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L980]   RET         call __var_3 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __tmp__balances_TokenERC20[this][msgsender_MSG], tokens_s381);
[L981]   COND TRUE   revert
[L276]   RET         call success_s381 := transfer~address~uint256_TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, to_s381, tokens_s381);
[L277]               assume revert || gas < 0;
[L2224]  RET         call success_s381 := transfer~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, to_s381, tokens_s381);
[L2253]  RET         call CorralChoice_RICH(this);

Loop:
[L2253]        assume true;

[2020-11-24 16:07:53,864 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 16:07:53,864 INFO  L82        PathProgramCache]: Analyzing trace with hash -964425001, now seen corresponding path program 1 times
[2020-11-24 16:07:53,865 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 16:07:53,872 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 16:07:53,898 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 16:07:53,899 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 16:07:53,899 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [5] imperfect sequences [] total 5
[2020-11-24 16:07:53,899 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 16:07:53,899 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 5 interpolants.
[2020-11-24 16:07:53,899 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=9, Invalid=11, Unknown=0, NotChecked=0, Total=20
[2020-11-24 16:07:53,899 INFO  L87              Difference]: Start difference. First operand 179 states and 182 transitions. cyclomatic complexity: 4 Second operand 5 states.
[2020-11-24 16:07:53,913 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 16:07:53,914 INFO  L93              Difference]: Finished difference Result 190 states and 191 transitions.
[2020-11-24 16:07:53,914 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-24 16:07:53,914 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 190 states and 191 transitions.
[2020-11-24 16:07:53,917 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 2
[2020-11-24 16:07:53,920 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 190 states to 190 states and 191 transitions.
[2020-11-24 16:07:53,920 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 190
[2020-11-24 16:07:53,920 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 190
[2020-11-24 16:07:53,920 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 190 states and 191 transitions.
[2020-11-24 16:07:53,920 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 16:07:53,921 INFO  L728         BuchiCegarLoop]: Abstraction has 190 states and 191 transitions.
[2020-11-24 16:07:53,921 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 190 states and 191 transitions.
[2020-11-24 16:07:53,923 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 190 to 179.
[2020-11-24 16:07:53,923 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 179 states.
[2020-11-24 16:07:53,923 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 179 states to 179 states and 180 transitions.
[2020-11-24 16:07:53,924 INFO  L751         BuchiCegarLoop]: Abstraction has 179 states and 180 transitions.
[2020-11-24 16:07:53,924 INFO  L631         BuchiCegarLoop]: Abstraction has 179 states and 180 transitions.
[2020-11-24 16:07:53,924 INFO  L445         BuchiCegarLoop]: ======== Iteration 6============
[2020-11-24 16:07:53,924 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 179 states and 180 transitions.
[2020-11-24 16:07:53,925 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 16:07:53,925 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 16:07:53,925 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 16:07:53,926 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 16:07:53,926 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L2]                 success_transfer_TokenERC200 := false;
[L2]                 call_transfer_TokenERC200 := false;
[L2]     CALL        call main();
[L2248]              assume null == 0;
[L2249]  CALL        call this := FreshRefGenerator__success();
[L896]               havoc newRef;
[L897]               assume Alloc[newRef] == false;
[L898]               Alloc[newRef] := true;
[L899]               assume newRef != null;
[L2249]  RET         call this := FreshRefGenerator__success();
[L2250]              assume now >= 0;
[L2251]              assume DType[this] == RICH;
[L2252]              assume !revert && gas >= 0;
[L2253]  CALL        call CorralChoice_RICH(this);
[L2130]              havoc msgsender_MSG;
[L2131]              havoc msgvalue_MSG;
[L2132]              havoc choice;
[L2133]              havoc __ret_0_totalSupply;
[L2134]              havoc tokenOwner_s338;
[L2135]              havoc balance_s338;
[L2136]              havoc tokenOwner_s484;
[L2137]              havoc spender_s484;
[L2138]              havoc remaining_s484;
[L2139]              havoc to_s381;
[L2140]              havoc tokens_s381;
[L2141]              havoc success_s381;
[L2142]              havoc spender_s409;
[L2143]              havoc tokens_s409;
[L2144]              havoc success_s409;
[L2145]              havoc from_s468;
[L2146]              havoc to_s468;
[L2147]              havoc tokens_s468;
[L2148]              havoc success_s468;
[L2149]              havoc __ret_0_owner;
[L2150]              havoc __ret_0_newOwner;
[L2151]              havoc _newOwner_s217;
[L2152]              havoc __ret_0_symbol;
[L2153]              havoc __ret_0_name;
[L2154]              havoc __ret_0_decimals;
[L2155]              havoc spender_s527;
[L2156]              havoc tokens_s527;
[L2157]              havoc data_s527;
[L2158]              havoc success_s527;
[L2159]              havoc __ret_0_aSBlock;
[L2160]              havoc __ret_0_aEBlock;
[L2161]              havoc __ret_0_aCap;
[L2162]              havoc __ret_0_aTot;
[L2163]              havoc __ret_0_aAmt;
[L2164]              havoc __ret_0_sSBlock;
[L2165]              havoc __ret_0_sEBlock;
[L2166]              havoc __ret_0_sCap;
[L2167]              havoc __ret_0_sTot;
[L2168]              havoc __ret_0_sChunk;
[L2169]              havoc __ret_0_sPrice;
[L2170]              havoc _refer_s687;
[L2171]              havoc success_s687;
[L2172]              havoc _refer_s847;
[L2173]              havoc success_s847;
[L2174]              havoc StartBlock_s868;
[L2175]              havoc EndBlock_s868;
[L2176]              havoc DropCap_s868;
[L2177]              havoc DropCount_s868;
[L2178]              havoc DropAmount_s868;
[L2179]              havoc StartBlock_s892;
[L2180]              havoc EndBlock_s892;
[L2181]              havoc SaleCap_s892;
[L2182]              havoc SaleCount_s892;
[L2183]              havoc ChunkSize_s892;
[L2184]              havoc SalePrice_s892;
[L2185]              havoc _aSBlock_s926;
[L2186]              havoc _aEBlock_s926;
[L2187]              havoc _aAmt_s926;
[L2188]              havoc _aCap_s926;
[L2189]              havoc _sSBlock_s966;
[L2190]              havoc _sEBlock_s966;
[L2191]              havoc _sChunk_s966;
[L2192]              havoc _sPrice_s966;
[L2193]              havoc _sCap_s966;
[L2194]              havoc tmpNow;
[L2195]              havoc gas;
[L2196]              assume gas > 4000000 && gas <= 8000000;
[L2197]              tmpNow := now;
[L2198]              havoc now;
[L2199]              assume now > tmpNow;
[L2200]              assume msgsender_MSG != null;
[L2201]  COND FALSE  !(choice == 6)
[L2207]  COND FALSE  !(choice == 5)
[L2213]  COND FALSE  !(choice == 4)
[L2219]  COND TRUE   choice == 3
[L2220]              gas := gas - 21000;
[L2221]  COND TRUE   gas >= 0
[L2222]              assume tokens_s381 >= 0 && tokens_s381 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2223]              assume msgvalue_MSG == 0;
[L2224]  CALL        call success_s381 := transfer~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, to_s381, tokens_s381);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == to_s381 && tokens_s381 <= balances_TokenERC20[this][msgsender_MSG]) && tokens_s381 >= 0) && tokens_s381 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_TokenERC20[this][to_s381] >= 0) && balances_TokenERC20[this][to_s381] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_TokenERC20[this][msgsender_MSG] >= 0) && balances_TokenERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_TokenERC200 := true;
[L2]                 call_transfer_TokenERC200 := false;
[L2]                 revert := revert_hold;
[L243]               havoc __exception;
[L244]               revert := false;
[L245]   COND TRUE   __exception
[L246]               __tmp__Balance := Balance;
[L247]               __tmp__DType := DType;
[L248]               __tmp__Alloc := Alloc;
[L249]               __tmp__balance_ADDR := balance_ADDR;
[L250]               __tmp__M_Ref_int := M_Ref_int;
[L251]               __tmp__sum_balances0 := sum_balances0;
[L252]               __tmp__alloc_allowed_TokenERC20_lvl0 := alloc_allowed_TokenERC20_lvl0;
[L253]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L254]               __tmp__sum_allowed1 := sum_allowed1;
[L255]               __tmp__Length := Length;
[L256]               __tmp__now := now;
[L257]               __tmp__owner_Owned := owner_Owned;
[L258]               __tmp__newOwner_Owned := newOwner_Owned;
[L259]               __tmp__symbol_TokenERC20 := symbol_TokenERC20;
[L260]               __tmp__name_TokenERC20 := name_TokenERC20;
[L261]               __tmp__decimals_TokenERC20 := decimals_TokenERC20;
[L262]               __tmp___totalSupply_TokenERC20 := _totalSupply_TokenERC20;
[L263]               __tmp__balances_TokenERC20 := balances_TokenERC20;
[L264]               __tmp__allowed_TokenERC20 := allowed_TokenERC20;
[L265]               __tmp__aSBlock_RICH := aSBlock_RICH;
[L266]               __tmp__aEBlock_RICH := aEBlock_RICH;
[L267]               __tmp__aCap_RICH := aCap_RICH;
[L268]               __tmp__aTot_RICH := aTot_RICH;
[L269]               __tmp__aAmt_RICH := aAmt_RICH;
[L270]               __tmp__sSBlock_RICH := sSBlock_RICH;
[L271]               __tmp__sEBlock_RICH := sEBlock_RICH;
[L272]               __tmp__sCap_RICH := sCap_RICH;
[L273]               __tmp__sTot_RICH := sTot_RICH;
[L274]               __tmp__sChunk_RICH := sChunk_RICH;
[L275]               __tmp__sPrice_RICH := sPrice_RICH;
[L276]   CALL        call success_s381 := transfer~address~uint256_TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, to_s381, tokens_s381);
[L980]   CALL        call __var_3 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __tmp__balances_TokenERC20[this][msgsender_MSG], tokens_s381);
[L922]   COND FALSE  !(!(b_s45 <= a_s45))
[L926]               c_s45 := (a_s45 - b_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L980]   RET         call __var_3 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __tmp__balances_TokenERC20[this][msgsender_MSG], tokens_s381);
[L981]   COND FALSE  !(revert)
[L984]               __tmp__sum_balances0[this] := __tmp__sum_balances0[this] - __tmp__balances_TokenERC20[this][msgsender_MSG];
[L985]               __tmp__balances_TokenERC20[this][msgsender_MSG] := __var_3;
[L986]               __tmp__sum_balances0[this] := __tmp__sum_balances0[this] + __tmp__balances_TokenERC20[this][msgsender_MSG];
[L987]   CALL        call __var_4 := add~uint256~uint256_SafeMath__fail(this, this, 0, __tmp__balances_TokenERC20[this][to_s381], tokens_s381);
[L904]               c_s23 := (a_s23 + b_s23) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L905]   COND TRUE   !(c_s23 >= a_s23)
[L906]               revert := true;
[L987]   RET         call __var_4 := add~uint256~uint256_SafeMath__fail(this, this, 0, __tmp__balances_TokenERC20[this][to_s381], tokens_s381);
[L988]   COND TRUE   revert
[L276]   RET         call success_s381 := transfer~address~uint256_TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, to_s381, tokens_s381);
[L277]               assume revert || gas < 0;
[L2224]  RET         call success_s381 := transfer~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, to_s381, tokens_s381);
[L2253]  RET         call CorralChoice_RICH(this);

Loop:
[L2253]        assume true;

[2020-11-24 16:07:53,929 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 16:07:53,929 INFO  L82        PathProgramCache]: Analyzing trace with hash -164964173, now seen corresponding path program 1 times
[2020-11-24 16:07:53,930 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 16:07:53,944 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 16:07:54,062 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 16:07:54,063 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 16:07:54,063 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [12] imperfect sequences [] total 12
[2020-11-24 16:07:54,063 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 16:07:54,063 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 12 interpolants.
[2020-11-24 16:07:54,064 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=23, Invalid=109, Unknown=0, NotChecked=0, Total=132
[2020-11-24 16:07:54,064 INFO  L87              Difference]: Start difference. First operand 179 states and 180 transitions. cyclomatic complexity: 2 Second operand 12 states.
[2020-11-24 16:07:54,162 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 16:07:54,163 INFO  L93              Difference]: Finished difference Result 181 states and 181 transitions.
[2020-11-24 16:07:54,163 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 13 states. 
[2020-11-24 16:07:54,163 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 181 states and 181 transitions.
[2020-11-24 16:07:54,164 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 16:07:54,165 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 181 states to 174 states and 174 transitions.
[2020-11-24 16:07:54,165 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 174
[2020-11-24 16:07:54,165 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 174
[2020-11-24 16:07:54,165 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 174 states and 174 transitions.
[2020-11-24 16:07:54,165 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 16:07:54,165 INFO  L728         BuchiCegarLoop]: Abstraction has 174 states and 174 transitions.
[2020-11-24 16:07:54,166 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 174 states and 174 transitions.
[2020-11-24 16:07:54,167 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 174 to 174.
[2020-11-24 16:07:54,167 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 174 states.
[2020-11-24 16:07:54,168 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 174 states to 174 states and 174 transitions.
[2020-11-24 16:07:54,168 INFO  L751         BuchiCegarLoop]: Abstraction has 174 states and 174 transitions.
[2020-11-24 16:07:54,168 INFO  L631         BuchiCegarLoop]: Abstraction has 174 states and 174 transitions.
[2020-11-24 16:07:54,168 INFO  L445         BuchiCegarLoop]: ======== Iteration 7============
[2020-11-24 16:07:54,168 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 174 states and 174 transitions.
[2020-11-24 16:07:54,169 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 16:07:54,169 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 16:07:54,169 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 16:07:54,170 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 16:07:54,170 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L2]                 success_transfer_TokenERC200 := false;
[L2]                 call_transfer_TokenERC200 := false;
[L2]     CALL        call main();
[L2248]              assume null == 0;
[L2249]  CALL        call this := FreshRefGenerator__success();
[L896]               havoc newRef;
[L897]               assume Alloc[newRef] == false;
[L898]               Alloc[newRef] := true;
[L899]               assume newRef != null;
[L2249]  RET         call this := FreshRefGenerator__success();
[L2250]              assume now >= 0;
[L2251]              assume DType[this] == RICH;
[L2252]              assume !revert && gas >= 0;
[L2253]  CALL        call CorralChoice_RICH(this);
[L2130]              havoc msgsender_MSG;
[L2131]              havoc msgvalue_MSG;
[L2132]              havoc choice;
[L2133]              havoc __ret_0_totalSupply;
[L2134]              havoc tokenOwner_s338;
[L2135]              havoc balance_s338;
[L2136]              havoc tokenOwner_s484;
[L2137]              havoc spender_s484;
[L2138]              havoc remaining_s484;
[L2139]              havoc to_s381;
[L2140]              havoc tokens_s381;
[L2141]              havoc success_s381;
[L2142]              havoc spender_s409;
[L2143]              havoc tokens_s409;
[L2144]              havoc success_s409;
[L2145]              havoc from_s468;
[L2146]              havoc to_s468;
[L2147]              havoc tokens_s468;
[L2148]              havoc success_s468;
[L2149]              havoc __ret_0_owner;
[L2150]              havoc __ret_0_newOwner;
[L2151]              havoc _newOwner_s217;
[L2152]              havoc __ret_0_symbol;
[L2153]              havoc __ret_0_name;
[L2154]              havoc __ret_0_decimals;
[L2155]              havoc spender_s527;
[L2156]              havoc tokens_s527;
[L2157]              havoc data_s527;
[L2158]              havoc success_s527;
[L2159]              havoc __ret_0_aSBlock;
[L2160]              havoc __ret_0_aEBlock;
[L2161]              havoc __ret_0_aCap;
[L2162]              havoc __ret_0_aTot;
[L2163]              havoc __ret_0_aAmt;
[L2164]              havoc __ret_0_sSBlock;
[L2165]              havoc __ret_0_sEBlock;
[L2166]              havoc __ret_0_sCap;
[L2167]              havoc __ret_0_sTot;
[L2168]              havoc __ret_0_sChunk;
[L2169]              havoc __ret_0_sPrice;
[L2170]              havoc _refer_s687;
[L2171]              havoc success_s687;
[L2172]              havoc _refer_s847;
[L2173]              havoc success_s847;
[L2174]              havoc StartBlock_s868;
[L2175]              havoc EndBlock_s868;
[L2176]              havoc DropCap_s868;
[L2177]              havoc DropCount_s868;
[L2178]              havoc DropAmount_s868;
[L2179]              havoc StartBlock_s892;
[L2180]              havoc EndBlock_s892;
[L2181]              havoc SaleCap_s892;
[L2182]              havoc SaleCount_s892;
[L2183]              havoc ChunkSize_s892;
[L2184]              havoc SalePrice_s892;
[L2185]              havoc _aSBlock_s926;
[L2186]              havoc _aEBlock_s926;
[L2187]              havoc _aAmt_s926;
[L2188]              havoc _aCap_s926;
[L2189]              havoc _sSBlock_s966;
[L2190]              havoc _sEBlock_s966;
[L2191]              havoc _sChunk_s966;
[L2192]              havoc _sPrice_s966;
[L2193]              havoc _sCap_s966;
[L2194]              havoc tmpNow;
[L2195]              havoc gas;
[L2196]              assume gas > 4000000 && gas <= 8000000;
[L2197]              tmpNow := now;
[L2198]              havoc now;
[L2199]              assume now > tmpNow;
[L2200]              assume msgsender_MSG != null;
[L2201]  COND FALSE  !(choice == 6)
[L2207]  COND FALSE  !(choice == 5)
[L2213]  COND FALSE  !(choice == 4)
[L2219]  COND TRUE   choice == 3
[L2220]              gas := gas - 21000;
[L2221]  COND TRUE   gas >= 0
[L2222]              assume tokens_s381 >= 0 && tokens_s381 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2223]              assume msgvalue_MSG == 0;
[L2224]  CALL        call success_s381 := transfer~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, to_s381, tokens_s381);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == to_s381 && tokens_s381 <= balances_TokenERC20[this][msgsender_MSG]) && tokens_s381 >= 0) && tokens_s381 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_TokenERC20[this][to_s381] >= 0) && balances_TokenERC20[this][to_s381] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_TokenERC20[this][msgsender_MSG] >= 0) && balances_TokenERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_TokenERC200 := true;
[L2]                 call_transfer_TokenERC200 := false;
[L2]                 revert := revert_hold;
[L243]               havoc __exception;
[L244]               revert := false;
[L245]   COND TRUE   __exception
[L246]               __tmp__Balance := Balance;
[L247]               __tmp__DType := DType;
[L248]               __tmp__Alloc := Alloc;
[L249]               __tmp__balance_ADDR := balance_ADDR;
[L250]               __tmp__M_Ref_int := M_Ref_int;
[L251]               __tmp__sum_balances0 := sum_balances0;
[L252]               __tmp__alloc_allowed_TokenERC20_lvl0 := alloc_allowed_TokenERC20_lvl0;
[L253]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L254]               __tmp__sum_allowed1 := sum_allowed1;
[L255]               __tmp__Length := Length;
[L256]               __tmp__now := now;
[L257]               __tmp__owner_Owned := owner_Owned;
[L258]               __tmp__newOwner_Owned := newOwner_Owned;
[L259]               __tmp__symbol_TokenERC20 := symbol_TokenERC20;
[L260]               __tmp__name_TokenERC20 := name_TokenERC20;
[L261]               __tmp__decimals_TokenERC20 := decimals_TokenERC20;
[L262]               __tmp___totalSupply_TokenERC20 := _totalSupply_TokenERC20;
[L263]               __tmp__balances_TokenERC20 := balances_TokenERC20;
[L264]               __tmp__allowed_TokenERC20 := allowed_TokenERC20;
[L265]               __tmp__aSBlock_RICH := aSBlock_RICH;
[L266]               __tmp__aEBlock_RICH := aEBlock_RICH;
[L267]               __tmp__aCap_RICH := aCap_RICH;
[L268]               __tmp__aTot_RICH := aTot_RICH;
[L269]               __tmp__aAmt_RICH := aAmt_RICH;
[L270]               __tmp__sSBlock_RICH := sSBlock_RICH;
[L271]               __tmp__sEBlock_RICH := sEBlock_RICH;
[L272]               __tmp__sCap_RICH := sCap_RICH;
[L273]               __tmp__sTot_RICH := sTot_RICH;
[L274]               __tmp__sChunk_RICH := sChunk_RICH;
[L275]               __tmp__sPrice_RICH := sPrice_RICH;
[L276]   CALL        call success_s381 := transfer~address~uint256_TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, to_s381, tokens_s381);
[L980]   CALL        call __var_3 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __tmp__balances_TokenERC20[this][msgsender_MSG], tokens_s381);
[L922]   COND FALSE  !(!(b_s45 <= a_s45))
[L926]               c_s45 := (a_s45 - b_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L980]   RET         call __var_3 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __tmp__balances_TokenERC20[this][msgsender_MSG], tokens_s381);
[L981]   COND FALSE  !(revert)
[L984]               __tmp__sum_balances0[this] := __tmp__sum_balances0[this] - __tmp__balances_TokenERC20[this][msgsender_MSG];
[L985]               __tmp__balances_TokenERC20[this][msgsender_MSG] := __var_3;
[L986]               __tmp__sum_balances0[this] := __tmp__sum_balances0[this] + __tmp__balances_TokenERC20[this][msgsender_MSG];
[L987]   CALL        call __var_4 := add~uint256~uint256_SafeMath__fail(this, this, 0, __tmp__balances_TokenERC20[this][to_s381], tokens_s381);
[L904]               c_s23 := (a_s23 + b_s23) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L905]   COND FALSE  !(!(c_s23 >= a_s23))
[L987]   RET         call __var_4 := add~uint256~uint256_SafeMath__fail(this, this, 0, __tmp__balances_TokenERC20[this][to_s381], tokens_s381);
[L988]   COND FALSE  !(revert)
[L991]               __tmp__sum_balances0[this] := __tmp__sum_balances0[this] - __tmp__balances_TokenERC20[this][to_s381];
[L992]               __tmp__balances_TokenERC20[this][to_s381] := __var_4;
[L993]               __tmp__sum_balances0[this] := __tmp__sum_balances0[this] + __tmp__balances_TokenERC20[this][to_s381];
[L994]               success_s381 := true;
[L276]   RET         call success_s381 := transfer~address~uint256_TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, to_s381, tokens_s381);
[L277]               assume revert || gas < 0;
[L2224]  RET         call success_s381 := transfer~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, to_s381, tokens_s381);
[L2253]  RET         call CorralChoice_RICH(this);

Loop:
[L2253]        assume true;

[2020-11-24 16:07:54,172 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 16:07:54,173 INFO  L82        PathProgramCache]: Analyzing trace with hash -361567935, now seen corresponding path program 1 times
[2020-11-24 16:07:54,173 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 16:07:54,182 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 16:07:54,204 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 16:07:54,205 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 16:07:54,205 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [5] imperfect sequences [] total 5
[2020-11-24 16:07:54,205 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 16:07:54,205 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 5 interpolants.
[2020-11-24 16:07:54,205 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=7, Invalid=13, Unknown=0, NotChecked=0, Total=20
[2020-11-24 16:07:54,206 INFO  L87              Difference]: Start difference. First operand 174 states and 174 transitions. cyclomatic complexity: 1 Second operand 5 states.
[2020-11-24 16:07:54,215 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 16:07:54,215 INFO  L93              Difference]: Finished difference Result 167 states and 166 transitions.
[2020-11-24 16:07:54,215 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 5 states. 
[2020-11-24 16:07:54,215 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 167 states and 166 transitions.
[2020-11-24 16:07:54,216 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-24 16:07:54,216 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 167 states to 0 states and 0 transitions.
[2020-11-24 16:07:54,216 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 0
[2020-11-24 16:07:54,217 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 0
[2020-11-24 16:07:54,217 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 0 states and 0 transitions.
[2020-11-24 16:07:54,217 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 16:07:54,217 INFO  L728         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-24 16:07:54,217 INFO  L751         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-24 16:07:54,217 INFO  L631         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-24 16:07:54,217 INFO  L445         BuchiCegarLoop]: ======== Iteration 8============
[2020-11-24 16:07:54,217 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 0 states and 0 transitions.
[2020-11-24 16:07:54,217 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-24 16:07:54,217 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is true
[2020-11-24 16:07:54,221 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 24.11 04:07:54 BasicIcfg
[2020-11-24 16:07:54,221 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-24 16:07:54,222 INFO  L168              Benchmark]: Toolchain (without parser) took 3391.66 ms. Allocated memory was 1.0 GB in the beginning and 1.3 GB in the end (delta: 318.8 MB). Free memory was 940.6 MB in the beginning and 1.2 GB in the end (delta: -240.0 MB). Peak memory consumption was 78.8 MB. Max. memory is 15.3 GB.
[2020-11-24 16:07:54,223 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.15 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-24 16:07:54,223 INFO  L168              Benchmark]: Boogie Preprocessor took 77.88 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 935.2 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-24 16:07:54,224 INFO  L168              Benchmark]: UtopiaSpecLang took 51.88 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 929.8 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-24 16:07:54,224 INFO  L168              Benchmark]: Boogie Printer took 10.01 ms. Allocated memory is still 1.0 GB. Free memory is still 929.8 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-24 16:07:54,224 INFO  L168              Benchmark]: RCFGBuilder took 595.52 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 860.0 MB in the end (delta: 69.8 MB). Peak memory consumption was 69.8 MB. Max. memory is 15.3 GB.
[2020-11-24 16:07:54,225 INFO  L168              Benchmark]: UtopiaLTL2Aut took 39.55 ms. Allocated memory is still 1.0 GB. Free memory was 860.0 MB in the beginning and 856.5 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
[2020-11-24 16:07:54,225 INFO  L168              Benchmark]: BÃ¼chi Program Product took 942.35 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 46.1 MB). Free memory was 856.5 MB in the beginning and 890.5 MB in the end (delta: -34.0 MB). Peak memory consumption was 139.7 MB. Max. memory is 15.3 GB.
[2020-11-24 16:07:54,225 INFO  L168              Benchmark]: BlockEncodingV2 took 76.90 ms. Allocated memory is still 1.1 GB. Free memory was 890.5 MB in the beginning and 857.1 MB in the end (delta: 33.4 MB). Peak memory consumption was 33.4 MB. Max. memory is 15.3 GB.
[2020-11-24 16:07:54,226 INFO  L168              Benchmark]: BuchiAutomizer took 1594.73 ms. Allocated memory was 1.1 GB in the beginning and 1.3 GB in the end (delta: 272.6 MB). Free memory was 857.1 MB in the beginning and 1.2 GB in the end (delta: -323.4 MB). There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-24 16:07:54,229 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    1738 locations, 2945 edges
  - StatisticsResult: Encoded RCFG
    1704 locations, 2866 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.15 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 77.88 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 935.2 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 51.88 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 929.8 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 10.01 ms. Allocated memory is still 1.0 GB. Free memory is still 929.8 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * RCFGBuilder took 595.52 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 860.0 MB in the end (delta: 69.8 MB). Peak memory consumption was 69.8 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 39.55 ms. Allocated memory is still 1.0 GB. Free memory was 860.0 MB in the beginning and 856.5 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 942.35 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 46.1 MB). Free memory was 856.5 MB in the beginning and 890.5 MB in the end (delta: -34.0 MB). Peak memory consumption was 139.7 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 76.90 ms. Allocated memory is still 1.1 GB. Free memory was 890.5 MB in the beginning and 857.1 MB in the end (delta: 33.4 MB). Peak memory consumption was 33.4 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 1594.73 ms. Allocated memory was 1.1 GB in the beginning and 1.3 GB in the end (delta: 272.6 MB). Free memory was 857.1 MB in the beginning and 1.2 GB in the end (delta: -323.4 MB). There was no memory consumed. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    751 locations, 912 edges
  - StatisticsResult: BuchiProgram size
    1738 locations, 2945 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 7 terminating modules (7 trivial, 0 deterministic, 0 nondeterministic). 7 modules have a trivial ranking function, the largest among these consists of 14 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 1.5s and 8 iterations.  TraceHistogramMax:1. Analysis of lassos took 0.6s. Construction of modules took 0.3s. BÃ¼chi inclusion checks took 0.4s. Highest rank in rank-based complementation 0. Minimization of det autom 7. Minimization of nondet autom 0. Automata minimization 0.0s AutomataMinimizationTime, 6 MinimizatonAttempts, 28 StatesRemovedByMinimization, 3 NontrivialMinimizations. Non-live state removal took 0.0s Buchi closure took 0.0s. Biggest automaton had 218 states and ocurred in iteration 2.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 1825 SDtfs, 1704 SDslu, 3949 SDs, 0 SdLazy, 1566 SolverSat, 575 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 0.3s Time	LassoAnalysisResults: nont0 unkn0 SFLI0 SFLT0 conc0 concLT0 SILN0 SILU7 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - AllSpecificationsHoldResult: All specifications hold
    Buchi Automizer proved that the LTL property ! ( ( []( (call_transfer_TokenERC200) ==> ( <>(success_transfer_TokenERC200) ) ) )) holds
RESULT: Ultimate proved your program to be correct!
Received shutdown request...
