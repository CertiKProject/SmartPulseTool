This is Ultimate 0.1.24-f1553f5-m
[2020-11-24 18:19:37,829 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-24 18:19:37,830 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-24 18:19:37,840 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-24 18:19:37,841 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-24 18:19:37,841 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-24 18:19:37,842 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-24 18:19:37,844 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-24 18:19:37,845 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-24 18:19:37,846 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-24 18:19:37,847 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-24 18:19:37,847 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-24 18:19:37,848 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-24 18:19:37,848 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-24 18:19:37,849 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-24 18:19:37,850 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-24 18:19:37,850 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-24 18:19:37,852 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-24 18:19:37,853 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-24 18:19:37,854 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-24 18:19:37,855 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-24 18:19:37,856 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-24 18:19:37,857 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-24 18:19:37,858 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-24 18:19:37,858 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-24 18:19:37,859 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-24 18:19:37,859 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-24 18:19:37,859 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-24 18:19:37,860 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-24 18:19:37,860 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-24 18:19:37,860 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-24 18:19:37,861 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-24 18:19:37,861 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-24 18:19:37,862 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-24 18:19:37,863 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-24 18:19:37,863 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-24 18:19:37,863 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-24 18:19:37,864 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-24 18:19:37,864 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-24 18:19:37,864 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-24 18:19:37,865 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-24 18:19:37,865 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-24 18:19:37,872 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-24 18:19:37,872 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-24 18:19:37,873 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-24 18:19:37,873 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-24 18:19:37,873 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-24 18:19:37,873 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-24 18:19:37,874 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-24 18:19:37,874 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-24 18:19:37,874 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-24 18:19:37,874 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-24 18:19:37,874 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-24 18:19:37,874 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-24 18:19:37,874 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-24 18:19:37,874 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-24 18:19:37,874 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-24 18:19:37,875 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-24 18:19:37,875 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-24 18:19:37,875 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-24 18:19:37,875 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-24 18:19:37,875 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-24 18:19:37,875 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-24 18:19:37,875 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-24 18:19:37,875 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-24 18:19:37,875 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-24 18:19:37,875 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-24 18:19:37,876 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-24 18:19:37,895 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-24 18:19:37,905 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-24 18:19:37,907 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-24 18:19:37,908 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-24 18:19:37,909 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-24 18:19:37,909 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/COM_0x1b4052d98fb1888c2bf3b8d3b930e0aff8a910df_transfer-self.bpl
[2020-11-24 18:19:37,909 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/COM_0x1b4052d98fb1888c2bf3b8d3b930e0aff8a910df_transfer-self.bpl'
[2020-11-24 18:19:37,978 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-24 18:19:37,979 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-24 18:19:37,979 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-24 18:19:37,979 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-24 18:19:37,979 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-24 18:19:37,995 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "COM_0x1b4052d98fb1888c2bf3b8d3b930e0aff8a910df_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 06:19:37" (1/1) ...
[2020-11-24 18:19:37,996 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "COM_0x1b4052d98fb1888c2bf3b8d3b930e0aff8a910df_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 06:19:37" (1/1) ...
[2020-11-24 18:19:38,019 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "COM_0x1b4052d98fb1888c2bf3b8d3b930e0aff8a910df_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 06:19:37" (1/1) ...
[2020-11-24 18:19:38,020 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "COM_0x1b4052d98fb1888c2bf3b8d3b930e0aff8a910df_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 06:19:37" (1/1) ...
[2020-11-24 18:19:38,034 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "COM_0x1b4052d98fb1888c2bf3b8d3b930e0aff8a910df_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 06:19:37" (1/1) ...
[2020-11-24 18:19:38,041 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "COM_0x1b4052d98fb1888c2bf3b8d3b930e0aff8a910df_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 06:19:37" (1/1) ...
[2020-11-24 18:19:38,045 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "COM_0x1b4052d98fb1888c2bf3b8d3b930e0aff8a910df_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 06:19:37" (1/1) ...
[2020-11-24 18:19:38,051 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-24 18:19:38,051 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-24 18:19:38,052 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-24 18:19:38,053 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-24 18:19:38,057 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "COM_0x1b4052d98fb1888c2bf3b8d3b930e0aff8a910df_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 06:19:37" (1/1) ...
[2020-11-24 18:19:38,072 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(COM.transfer(to, value), msg.sender == to && value <= _balances_COM[this][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_COM[this][to] >= 0 && _balances_COM[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_COM[this][msg.sender] >= 0 &&  _balances_COM[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(COM.transfer(to, value), return == true && _totalSupply_COM[this] == old(_totalSupply_COM[this]) && _balances_COM[this] == old(_balances_COM[this]) && _allowed_COM[this] == old(_allowed_COM[this]) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this]) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this]) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]))))
[2020-11-24 18:19:38,077 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(COM.transfer(to, value), msg.sender == to && value <= _balances_COM[this][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_COM[this][to] >= 0 && _balances_COM[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_COM[this][msg.sender] >= 0 &&  _balances_COM[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(COM.transfer(to, value), return == true && _totalSupply_COM[this] == old(_totalSupply_COM[this]) && _balances_COM[this] == old(_balances_COM[this]) && _allowed_COM[this] == old(_allowed_COM[this]) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this]) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this]) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]))))
[2020-11-24 18:19:38,084 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(COM.transfer(to, value), msg.sender == to && value <= _balances_COM[this][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_COM[this][to] >= 0 && _balances_COM[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_COM[this][msg.sender] >= 0 &&  _balances_COM[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(COM.transfer(to, value), return == true && _totalSupply_COM[this] == old(_totalSupply_COM[this]) && _balances_COM[this] == old(_balances_COM[this]) && _allowed_COM[this] == old(_allowed_COM[this]) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this]) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this]) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]))))
[2020-11-24 18:19:38,089 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( msg.sender==to_s454 && value_s454<=_balances_COM[this][msg.sender] ) && value_s454>=0 ) && value_s454<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && _balances_COM[this][to_s454]>=0 ) && _balances_COM[this][to_s454]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && _balances_COM[this][msg.sender]>=0 ) && _balances_COM[this][msg.sender]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_COM>],IdentifierExpression[to_s454,<IMPLEMENTATION_INPARAM,transfer~address~uint256_COM>]],BinaryExpression[COMPLEQ,IdentifierExpression[value_s454,<IMPLEMENTATION_INPARAM,transfer~address~uint256_COM>],ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_COM,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_COM>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_COM>]]]]],BinaryExpression[COMPGEQ,IdentifierExpression[value_s454,<IMPLEMENTATION_INPARAM,transfer~address~uint256_COM>],IntegerLiteral[0]]],BinaryExpression[COMPLT,IdentifierExpression[value_s454,<IMPLEMENTATION_INPARAM,transfer~address~uint256_COM>],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_COM,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_COM>]]],[IdentifierExpression[to_s454,<IMPLEMENTATION_INPARAM,transfer~address~uint256_COM>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_COM,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_COM>]]],[IdentifierExpression[to_s454,<IMPLEMENTATION_INPARAM,transfer~address~uint256_COM>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_COM,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_COM>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_COM>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_COM,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_COM>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_COM>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]]
[2020-11-24 18:19:38,092 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( __ret_0_==true && _totalSupply_COM[this]==( old(_totalSupply_COM[this]) ) ) && _balances_COM[this]==( old(_balances_COM[this]) ) ) && _allowed_COM[this]==( old(_allowed_COM[this]) ) ) && _name_ERC20Detailed[this]==( old(_name_ERC20Detailed[this]) ) ) && _symbol_ERC20Detailed[this]==( old(_symbol_ERC20Detailed[this]) ) ) && _decimals_ERC20Detailed[this]==( old(_decimals_ERC20Detailed[this]) ) ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[__ret_0_,<IMPLEMENTATION_OUTPARAM,transfer~address~uint256_COM>],BooleanLiteral[true]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_totalSupply_COM,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_COM>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_totalSupply_COM,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_COM>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_balances_COM,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_COM>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_balances_COM,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_COM>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_allowed_COM,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_COM>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_allowed_COM,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_COM>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_name_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_COM>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_name_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_COM>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_symbol_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_COM>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_symbol_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_COM>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_decimals_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_COM>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_decimals_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_COM>]]]]]]
[2020-11-24 18:19:38,095 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(COM.transfer(to, value), msg.sender == to && value <= _balances_COM[this][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_COM[this][to] >= 0 && _balances_COM[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_COM[this][msg.sender] >= 0 &&  _balances_COM[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(COM.transfer(to, value), return == true && _totalSupply_COM[this] == old(_totalSupply_COM[this]) && _balances_COM[this] == old(_balances_COM[this]) && _allowed_COM[this] == old(_allowed_COM[this]) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this]) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this]) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]))))
[2020-11-24 18:19:38,095 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_transfer_COM0) ==> ( <>AP(success_transfer_COM0) ) ) )
Executed UtopiaSpecLang
[2020-11-24 18:19:38,100 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 06:19:38 PropertyContainer
[2020-11-24 18:19:38,100 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-24 18:19:38,100 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-24 18:19:38,100 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-24 18:19:38,100 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-24 18:19:38,101 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "COM_0x1b4052d98fb1888c2bf3b8d3b930e0aff8a910df_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 06:19:37" (1/2) ...
[2020-11-24 18:19:38,102 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-24 18:19:38,102 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-24 18:19:38,110 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 06:19:38" (2/2) ...
[2020-11-24 18:19:38,111 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-24 18:19:38,111 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-24 18:19:38,111 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-24 18:19:38,111 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-24 18:19:38,112 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "COM_0x1b4052d98fb1888c2bf3b8d3b930e0aff8a910df_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 06:19:37" (1/2) ...
[2020-11-24 18:19:38,163 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-24 18:19:38,163 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256_SafeMath__success
[2020-11-24 18:19:38,163 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__success
[2020-11-24 18:19:38,163 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__success
[2020-11-24 18:19:38,163 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_COM
[2020-11-24 18:19:38,163 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_COM
[2020-11-24 18:19:38,164 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_COM
[2020-11-24 18:19:38,164 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_COM
[2020-11-24 18:19:38,164 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_COM
[2020-11-24 18:19:38,164 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_COM
[2020-11-24 18:19:38,164 INFO  L130     BoogieDeclarations]: Found specification of procedure findPercent~uint256_COM
[2020-11-24 18:19:38,164 INFO  L138     BoogieDeclarations]: Found implementation of procedure findPercent~uint256_COM
[2020-11-24 18:19:38,164 INFO  L130     BoogieDeclarations]: Found specification of procedure returnRate_COM
[2020-11-24 18:19:38,164 INFO  L138     BoogieDeclarations]: Found implementation of procedure returnRate_COM
[2020-11-24 18:19:38,164 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_COM
[2020-11-24 18:19:38,164 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_COM
[2020-11-24 18:19:38,164 INFO  L130     BoogieDeclarations]: Found specification of procedure _transferBurnYes~address~uint256_COM__success
[2020-11-24 18:19:38,165 INFO  L130     BoogieDeclarations]: Found specification of procedure _transferBurnNo~address~uint256_COM__success
[2020-11-24 18:19:38,165 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_COM
[2020-11-24 18:19:38,165 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_COM
[2020-11-24 18:19:38,165 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_COM
[2020-11-24 18:19:38,165 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_COM
[2020-11-24 18:19:38,165 INFO  L130     BoogieDeclarations]: Found specification of procedure _transferFromBurnYes~address~address~uint256_COM__success
[2020-11-24 18:19:38,165 INFO  L130     BoogieDeclarations]: Found specification of procedure _transferFromBurnNo~address~address~uint256_COM__success
[2020-11-24 18:19:38,165 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-24 18:19:38,165 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-24 18:19:38,165 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-24 18:19:38,166 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_IERC20
[2020-11-24 18:19:38,166 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_IERC20
[2020-11-24 18:19:38,166 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_SafeMath
[2020-11-24 18:19:38,166 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_SafeMath
[2020-11-24 18:19:38,166 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20Detailed
[2020-11-24 18:19:38,166 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20Detailed
[2020-11-24 18:19:38,166 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_COM
[2020-11-24 18:19:38,166 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-24 18:19:38,166 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-24 18:19:38,166 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256_SafeMath__fail
[2020-11-24 18:19:38,166 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-24 18:19:38,166 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__fail
[2020-11-24 18:19:38,166 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_COM__success
[2020-11-24 18:19:38,167 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_COM__fail
[2020-11-24 18:19:38,167 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_COM__success
[2020-11-24 18:19:38,167 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_COM__fail
[2020-11-24 18:19:38,167 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_COM__success
[2020-11-24 18:19:38,167 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_COM__fail
[2020-11-24 18:19:38,167 INFO  L130     BoogieDeclarations]: Found specification of procedure findPercent~uint256_COM__success
[2020-11-24 18:19:38,167 INFO  L130     BoogieDeclarations]: Found specification of procedure findPercent~uint256_COM__fail
[2020-11-24 18:19:38,167 INFO  L130     BoogieDeclarations]: Found specification of procedure returnRate_COM__success
[2020-11-24 18:19:38,167 INFO  L130     BoogieDeclarations]: Found specification of procedure returnRate_COM__fail
[2020-11-24 18:19:38,167 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_COM__success
[2020-11-24 18:19:38,167 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_COM__fail
[2020-11-24 18:19:38,167 INFO  L130     BoogieDeclarations]: Found specification of procedure _transferBurnYes~address~uint256_COM__fail
[2020-11-24 18:19:38,168 INFO  L130     BoogieDeclarations]: Found specification of procedure _transferBurnNo~address~uint256_COM__fail
[2020-11-24 18:19:38,168 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_COM__success
[2020-11-24 18:19:38,168 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_COM__fail
[2020-11-24 18:19:38,168 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_COM__success
[2020-11-24 18:19:38,168 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_COM__fail
[2020-11-24 18:19:38,168 INFO  L130     BoogieDeclarations]: Found specification of procedure _transferFromBurnYes~address~address~uint256_COM__fail
[2020-11-24 18:19:38,168 INFO  L130     BoogieDeclarations]: Found specification of procedure _transferFromBurnNo~address~address~uint256_COM__fail
[2020-11-24 18:19:38,168 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-24 18:19:38,168 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-24 18:19:38,168 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-24 18:19:38,168 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-24 18:19:38,168 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-24 18:19:38,168 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256_SafeMath__fail
[2020-11-24 18:19:38,169 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256_SafeMath__success
[2020-11-24 18:19:38,169 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-24 18:19:38,169 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__success
[2020-11-24 18:19:38,169 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__fail
[2020-11-24 18:19:38,169 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__success
[2020-11-24 18:19:38,169 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_COM__fail
[2020-11-24 18:19:38,169 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_COM__success
[2020-11-24 18:19:38,169 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_COM__fail
[2020-11-24 18:19:38,169 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_COM__success
[2020-11-24 18:19:38,169 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_COM__fail
[2020-11-24 18:19:38,169 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_COM__success
[2020-11-24 18:19:38,169 INFO  L138     BoogieDeclarations]: Found implementation of procedure findPercent~uint256_COM__fail
[2020-11-24 18:19:38,169 INFO  L138     BoogieDeclarations]: Found implementation of procedure findPercent~uint256_COM__success
[2020-11-24 18:19:38,170 INFO  L138     BoogieDeclarations]: Found implementation of procedure returnRate_COM__fail
[2020-11-24 18:19:38,170 INFO  L138     BoogieDeclarations]: Found implementation of procedure returnRate_COM__success
[2020-11-24 18:19:38,170 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_COM__fail
[2020-11-24 18:19:38,170 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_COM__success
[2020-11-24 18:19:38,170 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transferBurnYes~address~uint256_COM__fail
[2020-11-24 18:19:38,170 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transferBurnYes~address~uint256_COM__success
[2020-11-24 18:19:38,170 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transferBurnNo~address~uint256_COM__fail
[2020-11-24 18:19:38,170 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transferBurnNo~address~uint256_COM__success
[2020-11-24 18:19:38,170 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_COM__fail
[2020-11-24 18:19:38,170 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_COM__success
[2020-11-24 18:19:38,170 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_COM__fail
[2020-11-24 18:19:38,170 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_COM__success
[2020-11-24 18:19:38,171 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transferFromBurnYes~address~address~uint256_COM__fail
[2020-11-24 18:19:38,171 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transferFromBurnYes~address~address~uint256_COM__success
[2020-11-24 18:19:38,171 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transferFromBurnNo~address~address~uint256_COM__fail
[2020-11-24 18:19:38,171 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transferFromBurnNo~address~address~uint256_COM__success
[2020-11-24 18:19:38,171 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-24 18:19:38,171 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-24 18:19:38,171 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-24 18:19:38,171 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-24 18:19:38,171 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-24 18:19:38,171 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-24 18:19:38,171 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_IERC20
[2020-11-24 18:19:38,171 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_IERC20
[2020-11-24 18:19:38,172 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_SafeMath
[2020-11-24 18:19:38,172 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_SafeMath
[2020-11-24 18:19:38,172 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20Detailed
[2020-11-24 18:19:38,172 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20Detailed
[2020-11-24 18:19:38,172 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_COM
[2020-11-24 18:19:38,172 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-24 18:19:38,172 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-24 18:19:38,172 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-24 18:19:38,528 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 18:19:38,529 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 18:19:38,529 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 18:19:38,622 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-24 18:19:38,623 INFO  L286             CfgBuilder]: Removed 4 assue(true) statements.
[2020-11-24 18:19:38,624 INFO  L202        PluginConnector]: Adding new model COM_0x1b4052d98fb1888c2bf3b8d3b930e0aff8a910df_transfer-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 06:19:38 BoogieIcfgContainer
[2020-11-24 18:19:38,624 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 06:19:38" (2/2) ...
[2020-11-24 18:19:38,624 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-24 18:19:38,625 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@4019c42f and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 06:19:38, skipping insertion in model container
[2020-11-24 18:19:38,625 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-24 18:19:38,625 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-24 18:19:38,625 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-24 18:19:38,626 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-24 18:19:38,627 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "COM_0x1b4052d98fb1888c2bf3b8d3b930e0aff8a910df_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 06:19:37" (1/3) ...
[2020-11-24 18:19:38,627 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@340f26f3 and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 06:19:38, skipping insertion in model container
[2020-11-24 18:19:38,627 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 06:19:38" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-24 18:19:38,662 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 06:19:38 NWAContainer
[2020-11-24 18:19:38,662 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-24 18:19:38,662 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-24 18:19:38,662 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-24 18:19:38,663 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-24 18:19:38,664 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "COM_0x1b4052d98fb1888c2bf3b8d3b930e0aff8a910df_transfer-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 06:19:38" (3/4) ...
[2020-11-24 18:19:38,665 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@f45b572 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 06:19:38, skipping insertion in model container
[2020-11-24 18:19:38,665 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 06:19:38" (4/4) ...
[2020-11-24 18:19:38,670 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-24 18:19:38,672 INFO  L110   BuchiProductObserver]: Initial RCFG 915 locations, 1178 edges
[2020-11-24 18:19:38,673 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-24 18:19:38,684 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-24 18:19:39,591 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-24 18:19:39,595 INFO  L110   BuchiProductObserver]: BuchiProgram size 2166 locations, 3785 edges
[2020-11-24 18:19:39,596 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 06:19:39 BoogieIcfgContainer
[2020-11-24 18:19:39,596 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-24 18:19:39,596 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-24 18:19:39,596 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-24 18:19:39,598 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-24 18:19:39,599 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 06:19:39" (1/1) ...
[2020-11-24 18:19:39,656 INFO  L313           BlockEncoder]: Initial Icfg 2166 locations, 3785 edges
[2020-11-24 18:19:39,656 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-24 18:19:39,657 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-24 18:19:39,657 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-24 18:19:39,658 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-24 18:19:39,667 INFO  L70    emoveInfeasibleEdges]: Removed 51 edges and 11 locations because of local infeasibility
[2020-11-24 18:19:39,672 INFO  L70        RemoveSinkStates]: Removed 2 edges and 1 locations by removing sink states
[2020-11-24 18:19:39,678 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-24 18:19:39,680 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-24 18:19:39,682 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-24 18:19:39,682 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-24 18:19:39,684 INFO  L313           BlockEncoder]: Encoded RCFG 2132 locations, 3700 edges
[2020-11-24 18:19:39,685 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 24.11 06:19:39 BasicIcfg
[2020-11-24 18:19:39,685 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-24 18:19:39,685 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-24 18:19:39,685 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-24 18:19:39,687 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-24 18:19:39,687 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 18:19:39,687 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "COM_0x1b4052d98fb1888c2bf3b8d3b930e0aff8a910df_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 06:19:37" (1/6) ...
[2020-11-24 18:19:39,689 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@35984aea and model type COM_0x1b4052d98fb1888c2bf3b8d3b930e0aff8a910df_transfer-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 24.11 06:19:39, skipping insertion in model container
[2020-11-24 18:19:39,689 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 18:19:39,689 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 06:19:38" (2/6) ...
[2020-11-24 18:19:39,689 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@35984aea and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 24.11 06:19:39, skipping insertion in model container
[2020-11-24 18:19:39,689 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 18:19:39,689 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "COM_0x1b4052d98fb1888c2bf3b8d3b930e0aff8a910df_transfer-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 06:19:38" (3/6) ...
[2020-11-24 18:19:39,689 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@35984aea and model type COM_0x1b4052d98fb1888c2bf3b8d3b930e0aff8a910df_transfer-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 24.11 06:19:39, skipping insertion in model container
[2020-11-24 18:19:39,689 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 18:19:39,689 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 06:19:38" (4/6) ...
[2020-11-24 18:19:39,690 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@35984aea and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 24.11 06:19:39, skipping insertion in model container
[2020-11-24 18:19:39,690 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 18:19:39,690 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 06:19:39" (5/6) ...
[2020-11-24 18:19:39,690 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@35984aea and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 24.11 06:19:39, skipping insertion in model container
[2020-11-24 18:19:39,690 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 18:19:39,690 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 24.11 06:19:39" (6/6) ...
[2020-11-24 18:19:39,691 INFO  L404   chiAutomizerObserver]: Analyzing ICFG COM_0x1b4052d98fb1888c2bf3b8d3b930e0aff8a910df_transfer-self.bpl_BEv2
[2020-11-24 18:19:39,722 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-24 18:19:39,723 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-24 18:19:39,723 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-24 18:19:39,723 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-24 18:19:39,723 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-24 18:19:39,723 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-24 18:19:39,723 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-24 18:19:39,723 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-24 18:19:39,723 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-24 18:19:39,743 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2132 states.
[2020-11-24 18:19:39,789 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 18:19:39,789 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 18:19:39,789 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 18:19:39,798 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 18:19:39,798 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
[2020-11-24 18:19:39,798 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-24 18:19:39,798 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2132 states.
[2020-11-24 18:19:39,814 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 18:19:39,814 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 18:19:39,814 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 18:19:39,816 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 18:19:39,816 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L2]                 success_transfer_COM0 := false;
[L2]                 call_transfer_COM0 := false;
[L2]     CALL        call main();
[L2347]              assume null == 0;
[L2348]  CALL        call this := FreshRefGenerator__success();
[L887]               havoc newRef;
[L888]               assume Alloc[newRef] == false;
[L889]               Alloc[newRef] := true;
[L890]               assume newRef != null;
[L2348]  RET         call this := FreshRefGenerator__success();
[L2349]              assume now >= 0;
[L2350]              assume DType[this] == COM;
[L2351]              assume !revert && gas >= 0;
[L2352]  CALL        call CorralChoice_COM(this);
[L2243]              havoc msgsender_MSG;
[L2244]              havoc msgvalue_MSG;
[L2245]              havoc choice;
[L2246]              havoc __ret_0_totalSupply;
[L2247]              havoc owner_s327;
[L2248]              havoc __ret_0_balanceOf;
[L2249]              havoc owner_s343;
[L2250]              havoc spender_s343;
[L2251]              havoc __ret_0_allowance;
[L2252]              havoc to_s454;
[L2253]              havoc value_s454;
[L2254]              havoc __ret_0_transfer;
[L2255]              havoc spender_s643;
[L2256]              havoc value_s643;
[L2257]              havoc __ret_0_approve;
[L2258]              havoc from_s702;
[L2259]              havoc to_s702;
[L2260]              havoc value_s702;
[L2261]              havoc __ret_0_transferFrom;
[L2262]              havoc name_s228;
[L2263]              havoc symbol_s228;
[L2264]              havoc decimals_s228;
[L2265]              havoc __ret_0_name;
[L2266]              havoc __ret_0_symbol;
[L2267]              havoc __ret_0_decimals;
[L2268]              havoc value_s365;
[L2269]              havoc __ret_0_findPercent;
[L2270]              havoc __ret_0_returnRate;
[L2271]              havoc spender_s956;
[L2272]              havoc addedValue_s956;
[L2273]              havoc __ret_0_increaseAllowance;
[L2274]              havoc spender_s1006;
[L2275]              havoc subtractedValue_s1006;
[L2276]              havoc __ret_0_decreaseAllowance;
[L2277]              havoc amount_s1051;
[L2278]              havoc account_s1140;
[L2279]              havoc amount_s1140;
[L2280]              havoc tmpNow;
[L2281]              havoc gas;
[L2282]              assume gas > 4000000 && gas <= 8000000;
[L2283]              tmpNow := now;
[L2284]              havoc now;
[L2285]              assume now > tmpNow;
[L2286]              assume msgsender_MSG != null;
[L2287]  COND TRUE   choice == 8
[L2288]              gas := gas - 21000;
[L2289]  COND FALSE  !(gas >= 0)
[L2352]  RET         call CorralChoice_COM(this);

Loop:
[L2352]        assume true;

[2020-11-24 18:19:39,833 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 18:19:39,833 INFO  L82        PathProgramCache]: Analyzing trace with hash 1959441033, now seen corresponding path program 1 times
[2020-11-24 18:19:39,838 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 18:19:39,859 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 18:19:39,914 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 18:19:39,916 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 18:19:39,916 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-24 18:19:39,921 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 18:19:40,027 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-24 18:19:40,028 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-24 18:19:40,030 INFO  L87              Difference]: Start difference. First operand 2132 states. Second operand 4 states.
[2020-11-24 18:19:40,282 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 18:19:40,282 INFO  L93              Difference]: Finished difference Result 1180 states and 1394 transitions.
[2020-11-24 18:19:40,282 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-24 18:19:40,284 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 1180 states and 1394 transitions.
[2020-11-24 18:19:40,292 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 18:19:40,299 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 1180 states to 353 states and 410 transitions.
[2020-11-24 18:19:40,300 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 4
[2020-11-24 18:19:40,301 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 150
[2020-11-24 18:19:40,302 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 353 states and 410 transitions.
[2020-11-24 18:19:40,305 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 18:19:40,305 INFO  L728         BuchiCegarLoop]: Abstraction has 353 states and 410 transitions.
[2020-11-24 18:19:40,320 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 353 states and 410 transitions.
[2020-11-24 18:19:40,339 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 353 to 353.
[2020-11-24 18:19:40,340 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 353 states.
[2020-11-24 18:19:40,341 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 353 states to 353 states and 410 transitions.
[2020-11-24 18:19:40,342 INFO  L751         BuchiCegarLoop]: Abstraction has 353 states and 410 transitions.
[2020-11-24 18:19:40,342 INFO  L631         BuchiCegarLoop]: Abstraction has 353 states and 410 transitions.
[2020-11-24 18:19:40,342 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-24 18:19:40,342 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 353 states and 410 transitions.
[2020-11-24 18:19:40,343 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 18:19:40,344 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 18:19:40,344 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 18:19:40,345 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 18:19:40,345 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L2]                 success_transfer_COM0 := false;
[L2]                 call_transfer_COM0 := false;
[L2]     CALL        call main();
[L2347]              assume null == 0;
[L2348]  CALL        call this := FreshRefGenerator__success();
[L887]               havoc newRef;
[L888]               assume Alloc[newRef] == false;
[L889]               Alloc[newRef] := true;
[L890]               assume newRef != null;
[L2348]  RET         call this := FreshRefGenerator__success();
[L2349]              assume now >= 0;
[L2350]              assume DType[this] == COM;
[L2351]              assume !revert && gas >= 0;
[L2352]  CALL        call CorralChoice_COM(this);
[L2243]              havoc msgsender_MSG;
[L2244]              havoc msgvalue_MSG;
[L2245]              havoc choice;
[L2246]              havoc __ret_0_totalSupply;
[L2247]              havoc owner_s327;
[L2248]              havoc __ret_0_balanceOf;
[L2249]              havoc owner_s343;
[L2250]              havoc spender_s343;
[L2251]              havoc __ret_0_allowance;
[L2252]              havoc to_s454;
[L2253]              havoc value_s454;
[L2254]              havoc __ret_0_transfer;
[L2255]              havoc spender_s643;
[L2256]              havoc value_s643;
[L2257]              havoc __ret_0_approve;
[L2258]              havoc from_s702;
[L2259]              havoc to_s702;
[L2260]              havoc value_s702;
[L2261]              havoc __ret_0_transferFrom;
[L2262]              havoc name_s228;
[L2263]              havoc symbol_s228;
[L2264]              havoc decimals_s228;
[L2265]              havoc __ret_0_name;
[L2266]              havoc __ret_0_symbol;
[L2267]              havoc __ret_0_decimals;
[L2268]              havoc value_s365;
[L2269]              havoc __ret_0_findPercent;
[L2270]              havoc __ret_0_returnRate;
[L2271]              havoc spender_s956;
[L2272]              havoc addedValue_s956;
[L2273]              havoc __ret_0_increaseAllowance;
[L2274]              havoc spender_s1006;
[L2275]              havoc subtractedValue_s1006;
[L2276]              havoc __ret_0_decreaseAllowance;
[L2277]              havoc amount_s1051;
[L2278]              havoc account_s1140;
[L2279]              havoc amount_s1140;
[L2280]              havoc tmpNow;
[L2281]              havoc gas;
[L2282]              assume gas > 4000000 && gas <= 8000000;
[L2283]              tmpNow := now;
[L2284]              havoc now;
[L2285]              assume now > tmpNow;
[L2286]              assume msgsender_MSG != null;
[L2287]  COND FALSE  !(choice == 8)
[L2293]  COND FALSE  !(choice == 7)
[L2299]  COND FALSE  !(choice == 6)
[L2305]  COND TRUE   choice == 5
[L2306]              gas := gas - 21000;
[L2307]  COND TRUE   gas >= 0
[L2308]              assume value_s454 >= 0 && value_s454 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2309]              assume msgvalue_MSG == 0;
[L2310]  CALL        call __ret_0_transfer := transfer~address~uint256_COM(this, msgsender_MSG, msgvalue_MSG, to_s454, value_s454);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == to_s454 && value_s454 <= _balances_COM[this][msgsender_MSG]) && value_s454 >= 0) && value_s454 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_COM[this][to_s454] >= 0) && _balances_COM[this][to_s454] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_COM[this][msgsender_MSG] >= 0) && _balances_COM[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_COM0 := true;
[L2]                 call_transfer_COM0 := false;
[L2]                 revert := revert_hold;
[L408]               havoc __exception;
[L409]               revert := false;
[L410]   COND FALSE  !(__exception)
[L438]   CALL        call __ret_0_ := transfer~address~uint256_COM__success(this, msgsender_MSG, msgvalue_MSG, to_s454, value_s454);
[L1081]  COND TRUE   !(value_s454 <= _balances_COM[this][msgsender_MSG])
[L1082]              revert := true;
[L438]   RET         call __ret_0_ := transfer~address~uint256_COM__success(this, msgsender_MSG, msgvalue_MSG, to_s454, value_s454);
[L439]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !((((((__ret_0_ == true && _totalSupply_COM[this] == old(_totalSupply_COM[this])) && _balances_COM[this] == old(_balances_COM[this])) && _allowed_COM[this] == old(_allowed_COM[this])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]));
[L2]                 revert := revert_hold;
[L2310]  RET         call __ret_0_transfer := transfer~address~uint256_COM(this, msgsender_MSG, msgvalue_MSG, to_s454, value_s454);
[L2352]  RET         call CorralChoice_COM(this);

Loop:
[L2352]        assume true;

[2020-11-24 18:19:40,347 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 18:19:40,347 INFO  L82        PathProgramCache]: Analyzing trace with hash -1320398724, now seen corresponding path program 1 times
[2020-11-24 18:19:40,349 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 18:19:40,359 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 18:19:40,376 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 18:19:40,376 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 18:19:40,376 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-24 18:19:40,377 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 18:19:40,378 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-24 18:19:40,378 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-24 18:19:40,378 INFO  L87              Difference]: Start difference. First operand 353 states and 410 transitions. cyclomatic complexity: 58 Second operand 3 states.
[2020-11-24 18:19:40,391 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 18:19:40,391 INFO  L93              Difference]: Finished difference Result 392 states and 448 transitions.
[2020-11-24 18:19:40,391 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-24 18:19:40,391 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 392 states and 448 transitions.
[2020-11-24 18:19:40,394 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 2
[2020-11-24 18:19:40,396 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 392 states to 368 states and 406 transitions.
[2020-11-24 18:19:40,396 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 161
[2020-11-24 18:19:40,396 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 165
[2020-11-24 18:19:40,396 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 368 states and 406 transitions.
[2020-11-24 18:19:40,398 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 18:19:40,398 INFO  L728         BuchiCegarLoop]: Abstraction has 368 states and 406 transitions.
[2020-11-24 18:19:40,398 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 368 states and 406 transitions.
[2020-11-24 18:19:40,404 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 368 to 357.
[2020-11-24 18:19:40,404 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 357 states.
[2020-11-24 18:19:40,405 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 357 states to 357 states and 395 transitions.
[2020-11-24 18:19:40,405 INFO  L751         BuchiCegarLoop]: Abstraction has 357 states and 395 transitions.
[2020-11-24 18:19:40,405 INFO  L631         BuchiCegarLoop]: Abstraction has 357 states and 395 transitions.
[2020-11-24 18:19:40,405 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-24 18:19:40,406 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 357 states and 395 transitions.
[2020-11-24 18:19:40,407 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 18:19:40,407 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 18:19:40,407 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 18:19:40,408 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 18:19:40,408 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L2]                 success_transfer_COM0 := false;
[L2]                 call_transfer_COM0 := false;
[L2]     CALL        call main();
[L2347]              assume null == 0;
[L2348]  CALL        call this := FreshRefGenerator__success();
[L887]               havoc newRef;
[L888]               assume Alloc[newRef] == false;
[L889]               Alloc[newRef] := true;
[L890]               assume newRef != null;
[L2348]  RET         call this := FreshRefGenerator__success();
[L2349]              assume now >= 0;
[L2350]              assume DType[this] == COM;
[L2351]              assume !revert && gas >= 0;
[L2352]  CALL        call CorralChoice_COM(this);
[L2243]              havoc msgsender_MSG;
[L2244]              havoc msgvalue_MSG;
[L2245]              havoc choice;
[L2246]              havoc __ret_0_totalSupply;
[L2247]              havoc owner_s327;
[L2248]              havoc __ret_0_balanceOf;
[L2249]              havoc owner_s343;
[L2250]              havoc spender_s343;
[L2251]              havoc __ret_0_allowance;
[L2252]              havoc to_s454;
[L2253]              havoc value_s454;
[L2254]              havoc __ret_0_transfer;
[L2255]              havoc spender_s643;
[L2256]              havoc value_s643;
[L2257]              havoc __ret_0_approve;
[L2258]              havoc from_s702;
[L2259]              havoc to_s702;
[L2260]              havoc value_s702;
[L2261]              havoc __ret_0_transferFrom;
[L2262]              havoc name_s228;
[L2263]              havoc symbol_s228;
[L2264]              havoc decimals_s228;
[L2265]              havoc __ret_0_name;
[L2266]              havoc __ret_0_symbol;
[L2267]              havoc __ret_0_decimals;
[L2268]              havoc value_s365;
[L2269]              havoc __ret_0_findPercent;
[L2270]              havoc __ret_0_returnRate;
[L2271]              havoc spender_s956;
[L2272]              havoc addedValue_s956;
[L2273]              havoc __ret_0_increaseAllowance;
[L2274]              havoc spender_s1006;
[L2275]              havoc subtractedValue_s1006;
[L2276]              havoc __ret_0_decreaseAllowance;
[L2277]              havoc amount_s1051;
[L2278]              havoc account_s1140;
[L2279]              havoc amount_s1140;
[L2280]              havoc tmpNow;
[L2281]              havoc gas;
[L2282]              assume gas > 4000000 && gas <= 8000000;
[L2283]              tmpNow := now;
[L2284]              havoc now;
[L2285]              assume now > tmpNow;
[L2286]              assume msgsender_MSG != null;
[L2287]  COND FALSE  !(choice == 8)
[L2293]  COND FALSE  !(choice == 7)
[L2299]  COND FALSE  !(choice == 6)
[L2305]  COND TRUE   choice == 5
[L2306]              gas := gas - 21000;
[L2307]  COND TRUE   gas >= 0
[L2308]              assume value_s454 >= 0 && value_s454 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2309]              assume msgvalue_MSG == 0;
[L2310]  CALL        call __ret_0_transfer := transfer~address~uint256_COM(this, msgsender_MSG, msgvalue_MSG, to_s454, value_s454);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == to_s454 && value_s454 <= _balances_COM[this][msgsender_MSG]) && value_s454 >= 0) && value_s454 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_COM[this][to_s454] >= 0) && _balances_COM[this][to_s454] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_COM[this][msgsender_MSG] >= 0) && _balances_COM[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_COM0 := true;
[L2]                 call_transfer_COM0 := false;
[L2]                 revert := revert_hold;
[L408]               havoc __exception;
[L409]               revert := false;
[L410]   COND TRUE   __exception
[L411]               __tmp__Balance := Balance;
[L412]               __tmp__DType := DType;
[L413]               __tmp__Alloc := Alloc;
[L414]               __tmp__balance_ADDR := balance_ADDR;
[L415]               __tmp__M_Ref_int := M_Ref_int;
[L416]               __tmp__sum__balances0 := sum__balances0;
[L417]               __tmp__alloc__allowed_COM_lvl0 := alloc__allowed_COM_lvl0;
[L418]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L419]               __tmp__sum__allowed1 := sum__allowed1;
[L420]               __tmp__Length := Length;
[L421]               __tmp__now := now;
[L422]               __tmp___name_ERC20Detailed := _name_ERC20Detailed;
[L423]               __tmp___symbol_ERC20Detailed := _symbol_ERC20Detailed;
[L424]               __tmp___decimals_ERC20Detailed := _decimals_ERC20Detailed;
[L425]               __tmp___balances_COM := _balances_COM;
[L426]               __tmp___allowed_COM := _allowed_COM;
[L427]               __tmp__tokenName_COM := tokenName_COM;
[L428]               __tmp__tokenSymbol_COM := tokenSymbol_COM;
[L429]               __tmp__tokenDecimals_COM := tokenDecimals_COM;
[L430]               __tmp___totalSupply_COM := _totalSupply_COM;
[L431]               __tmp__noFee_COM := noFee_COM;
[L432]               __tmp__heightEnd20Percent_COM := heightEnd20Percent_COM;
[L433]               __tmp__heightEnd10Percent_COM := heightEnd10Percent_COM;
[L434]               __tmp__heightEnd05Percent_COM := heightEnd05Percent_COM;
[L435]   CALL        call __ret_0_ := transfer~address~uint256_COM__fail(this, msgsender_MSG, msgvalue_MSG, to_s454, value_s454);
[L1054]  COND TRUE   !(value_s454 <= __tmp___balances_COM[this][msgsender_MSG])
[L1055]              revert := true;
[L435]   RET         call __ret_0_ := transfer~address~uint256_COM__fail(this, msgsender_MSG, msgvalue_MSG, to_s454, value_s454);
[L436]               assume revert || gas < 0;
[L2310]  RET         call __ret_0_transfer := transfer~address~uint256_COM(this, msgsender_MSG, msgvalue_MSG, to_s454, value_s454);
[L2352]  RET         call CorralChoice_COM(this);

Loop:
[L2352]        assume true;

[2020-11-24 18:19:40,410 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 18:19:40,411 INFO  L82        PathProgramCache]: Analyzing trace with hash -1464140286, now seen corresponding path program 1 times
[2020-11-24 18:19:40,411 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 18:19:40,422 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 18:19:40,485 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 18:19:40,485 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 18:19:40,486 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [6] imperfect sequences [] total 6
[2020-11-24 18:19:40,486 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 18:19:40,486 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 6 interpolants.
[2020-11-24 18:19:40,486 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=9, Invalid=21, Unknown=0, NotChecked=0, Total=30
[2020-11-24 18:19:40,486 INFO  L87              Difference]: Start difference. First operand 357 states and 395 transitions. cyclomatic complexity: 39 Second operand 6 states.
[2020-11-24 18:19:40,655 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 18:19:40,655 INFO  L93              Difference]: Finished difference Result 380 states and 417 transitions.
[2020-11-24 18:19:40,656 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 7 states. 
[2020-11-24 18:19:40,656 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 380 states and 417 transitions.
[2020-11-24 18:19:40,658 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 2
[2020-11-24 18:19:40,661 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 380 states to 377 states and 414 transitions.
[2020-11-24 18:19:40,661 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 174
[2020-11-24 18:19:40,661 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 174
[2020-11-24 18:19:40,661 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 377 states and 414 transitions.
[2020-11-24 18:19:40,662 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 18:19:40,662 INFO  L728         BuchiCegarLoop]: Abstraction has 377 states and 414 transitions.
[2020-11-24 18:19:40,663 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 377 states and 414 transitions.
[2020-11-24 18:19:40,667 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 377 to 356.
[2020-11-24 18:19:40,667 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 356 states.
[2020-11-24 18:19:40,669 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 356 states to 356 states and 393 transitions.
[2020-11-24 18:19:40,669 INFO  L751         BuchiCegarLoop]: Abstraction has 356 states and 393 transitions.
[2020-11-24 18:19:40,669 INFO  L631         BuchiCegarLoop]: Abstraction has 356 states and 393 transitions.
[2020-11-24 18:19:40,669 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-24 18:19:40,669 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 356 states and 393 transitions.
[2020-11-24 18:19:40,670 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 18:19:40,670 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 18:19:40,670 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 18:19:40,671 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 18:19:40,672 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L2]                 success_transfer_COM0 := false;
[L2]                 call_transfer_COM0 := false;
[L2]     CALL        call main();
[L2347]              assume null == 0;
[L2348]  CALL        call this := FreshRefGenerator__success();
[L887]               havoc newRef;
[L888]               assume Alloc[newRef] == false;
[L889]               Alloc[newRef] := true;
[L890]               assume newRef != null;
[L2348]  RET         call this := FreshRefGenerator__success();
[L2349]              assume now >= 0;
[L2350]              assume DType[this] == COM;
[L2351]              assume !revert && gas >= 0;
[L2352]  CALL        call CorralChoice_COM(this);
[L2243]              havoc msgsender_MSG;
[L2244]              havoc msgvalue_MSG;
[L2245]              havoc choice;
[L2246]              havoc __ret_0_totalSupply;
[L2247]              havoc owner_s327;
[L2248]              havoc __ret_0_balanceOf;
[L2249]              havoc owner_s343;
[L2250]              havoc spender_s343;
[L2251]              havoc __ret_0_allowance;
[L2252]              havoc to_s454;
[L2253]              havoc value_s454;
[L2254]              havoc __ret_0_transfer;
[L2255]              havoc spender_s643;
[L2256]              havoc value_s643;
[L2257]              havoc __ret_0_approve;
[L2258]              havoc from_s702;
[L2259]              havoc to_s702;
[L2260]              havoc value_s702;
[L2261]              havoc __ret_0_transferFrom;
[L2262]              havoc name_s228;
[L2263]              havoc symbol_s228;
[L2264]              havoc decimals_s228;
[L2265]              havoc __ret_0_name;
[L2266]              havoc __ret_0_symbol;
[L2267]              havoc __ret_0_decimals;
[L2268]              havoc value_s365;
[L2269]              havoc __ret_0_findPercent;
[L2270]              havoc __ret_0_returnRate;
[L2271]              havoc spender_s956;
[L2272]              havoc addedValue_s956;
[L2273]              havoc __ret_0_increaseAllowance;
[L2274]              havoc spender_s1006;
[L2275]              havoc subtractedValue_s1006;
[L2276]              havoc __ret_0_decreaseAllowance;
[L2277]              havoc amount_s1051;
[L2278]              havoc account_s1140;
[L2279]              havoc amount_s1140;
[L2280]              havoc tmpNow;
[L2281]              havoc gas;
[L2282]              assume gas > 4000000 && gas <= 8000000;
[L2283]              tmpNow := now;
[L2284]              havoc now;
[L2285]              assume now > tmpNow;
[L2286]              assume msgsender_MSG != null;
[L2287]  COND FALSE  !(choice == 8)
[L2293]  COND FALSE  !(choice == 7)
[L2299]  COND FALSE  !(choice == 6)
[L2305]  COND TRUE   choice == 5
[L2306]              gas := gas - 21000;
[L2307]  COND TRUE   gas >= 0
[L2308]              assume value_s454 >= 0 && value_s454 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2309]              assume msgvalue_MSG == 0;
[L2310]  CALL        call __ret_0_transfer := transfer~address~uint256_COM(this, msgsender_MSG, msgvalue_MSG, to_s454, value_s454);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == to_s454 && value_s454 <= _balances_COM[this][msgsender_MSG]) && value_s454 >= 0) && value_s454 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_COM[this][to_s454] >= 0) && _balances_COM[this][to_s454] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_COM[this][msgsender_MSG] >= 0) && _balances_COM[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_COM0 := true;
[L2]                 call_transfer_COM0 := false;
[L2]                 revert := revert_hold;
[L408]               havoc __exception;
[L409]               revert := false;
[L410]   COND TRUE   __exception
[L411]               __tmp__Balance := Balance;
[L412]               __tmp__DType := DType;
[L413]               __tmp__Alloc := Alloc;
[L414]               __tmp__balance_ADDR := balance_ADDR;
[L415]               __tmp__M_Ref_int := M_Ref_int;
[L416]               __tmp__sum__balances0 := sum__balances0;
[L417]               __tmp__alloc__allowed_COM_lvl0 := alloc__allowed_COM_lvl0;
[L418]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L419]               __tmp__sum__allowed1 := sum__allowed1;
[L420]               __tmp__Length := Length;
[L421]               __tmp__now := now;
[L422]               __tmp___name_ERC20Detailed := _name_ERC20Detailed;
[L423]               __tmp___symbol_ERC20Detailed := _symbol_ERC20Detailed;
[L424]               __tmp___decimals_ERC20Detailed := _decimals_ERC20Detailed;
[L425]               __tmp___balances_COM := _balances_COM;
[L426]               __tmp___allowed_COM := _allowed_COM;
[L427]               __tmp__tokenName_COM := tokenName_COM;
[L428]               __tmp__tokenSymbol_COM := tokenSymbol_COM;
[L429]               __tmp__tokenDecimals_COM := tokenDecimals_COM;
[L430]               __tmp___totalSupply_COM := _totalSupply_COM;
[L431]               __tmp__noFee_COM := noFee_COM;
[L432]               __tmp__heightEnd20Percent_COM := heightEnd20Percent_COM;
[L433]               __tmp__heightEnd10Percent_COM := heightEnd10Percent_COM;
[L434]               __tmp__heightEnd05Percent_COM := heightEnd05Percent_COM;
[L435]   CALL        call __ret_0_ := transfer~address~uint256_COM__fail(this, msgsender_MSG, msgvalue_MSG, to_s454, value_s454);
[L1054]  COND FALSE  !(!(value_s454 <= __tmp___balances_COM[this][msgsender_MSG]))
[L1058]              __var_1 := null;
[L1059]  COND TRUE   !(to_s454 != null)
[L1060]              revert := true;
[L435]   RET         call __ret_0_ := transfer~address~uint256_COM__fail(this, msgsender_MSG, msgvalue_MSG, to_s454, value_s454);
[L436]               assume revert || gas < 0;
[L2310]  RET         call __ret_0_transfer := transfer~address~uint256_COM(this, msgsender_MSG, msgvalue_MSG, to_s454, value_s454);
[L2352]  RET         call CorralChoice_COM(this);

Loop:
[L2352]        assume true;

[2020-11-24 18:19:40,674 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 18:19:40,674 INFO  L82        PathProgramCache]: Analyzing trace with hash 1055081063, now seen corresponding path program 1 times
[2020-11-24 18:19:40,675 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 18:19:40,681 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 18:19:40,702 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 18:19:40,702 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 18:19:40,702 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [6] imperfect sequences [] total 6
[2020-11-24 18:19:40,703 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 18:19:40,703 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 6 interpolants.
[2020-11-24 18:19:40,703 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=9, Invalid=21, Unknown=0, NotChecked=0, Total=30
[2020-11-24 18:19:40,703 INFO  L87              Difference]: Start difference. First operand 356 states and 393 transitions. cyclomatic complexity: 38 Second operand 6 states.
[2020-11-24 18:19:40,717 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 18:19:40,717 INFO  L93              Difference]: Finished difference Result 362 states and 398 transitions.
[2020-11-24 18:19:40,718 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 6 states. 
[2020-11-24 18:19:40,718 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 362 states and 398 transitions.
[2020-11-24 18:19:40,720 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 18:19:40,721 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 362 states to 355 states and 391 transitions.
[2020-11-24 18:19:40,722 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 152
[2020-11-24 18:19:40,722 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 152
[2020-11-24 18:19:40,722 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 355 states and 391 transitions.
[2020-11-24 18:19:40,722 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 18:19:40,723 INFO  L728         BuchiCegarLoop]: Abstraction has 355 states and 391 transitions.
[2020-11-24 18:19:40,723 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 355 states and 391 transitions.
[2020-11-24 18:19:40,726 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 355 to 355.
[2020-11-24 18:19:40,727 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 355 states.
[2020-11-24 18:19:40,728 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 355 states to 355 states and 391 transitions.
[2020-11-24 18:19:40,728 INFO  L751         BuchiCegarLoop]: Abstraction has 355 states and 391 transitions.
[2020-11-24 18:19:40,728 INFO  L631         BuchiCegarLoop]: Abstraction has 355 states and 391 transitions.
[2020-11-24 18:19:40,728 INFO  L445         BuchiCegarLoop]: ======== Iteration 5============
[2020-11-24 18:19:40,728 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 355 states and 391 transitions.
[2020-11-24 18:19:40,729 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 18:19:40,729 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 18:19:40,729 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 18:19:40,730 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 18:19:40,730 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L2]                 success_transfer_COM0 := false;
[L2]                 call_transfer_COM0 := false;
[L2]     CALL        call main();
[L2347]              assume null == 0;
[L2348]  CALL        call this := FreshRefGenerator__success();
[L887]               havoc newRef;
[L888]               assume Alloc[newRef] == false;
[L889]               Alloc[newRef] := true;
[L890]               assume newRef != null;
[L2348]  RET         call this := FreshRefGenerator__success();
[L2349]              assume now >= 0;
[L2350]              assume DType[this] == COM;
[L2351]              assume !revert && gas >= 0;
[L2352]  CALL        call CorralChoice_COM(this);
[L2243]              havoc msgsender_MSG;
[L2244]              havoc msgvalue_MSG;
[L2245]              havoc choice;
[L2246]              havoc __ret_0_totalSupply;
[L2247]              havoc owner_s327;
[L2248]              havoc __ret_0_balanceOf;
[L2249]              havoc owner_s343;
[L2250]              havoc spender_s343;
[L2251]              havoc __ret_0_allowance;
[L2252]              havoc to_s454;
[L2253]              havoc value_s454;
[L2254]              havoc __ret_0_transfer;
[L2255]              havoc spender_s643;
[L2256]              havoc value_s643;
[L2257]              havoc __ret_0_approve;
[L2258]              havoc from_s702;
[L2259]              havoc to_s702;
[L2260]              havoc value_s702;
[L2261]              havoc __ret_0_transferFrom;
[L2262]              havoc name_s228;
[L2263]              havoc symbol_s228;
[L2264]              havoc decimals_s228;
[L2265]              havoc __ret_0_name;
[L2266]              havoc __ret_0_symbol;
[L2267]              havoc __ret_0_decimals;
[L2268]              havoc value_s365;
[L2269]              havoc __ret_0_findPercent;
[L2270]              havoc __ret_0_returnRate;
[L2271]              havoc spender_s956;
[L2272]              havoc addedValue_s956;
[L2273]              havoc __ret_0_increaseAllowance;
[L2274]              havoc spender_s1006;
[L2275]              havoc subtractedValue_s1006;
[L2276]              havoc __ret_0_decreaseAllowance;
[L2277]              havoc amount_s1051;
[L2278]              havoc account_s1140;
[L2279]              havoc amount_s1140;
[L2280]              havoc tmpNow;
[L2281]              havoc gas;
[L2282]              assume gas > 4000000 && gas <= 8000000;
[L2283]              tmpNow := now;
[L2284]              havoc now;
[L2285]              assume now > tmpNow;
[L2286]              assume msgsender_MSG != null;
[L2287]  COND FALSE  !(choice == 8)
[L2293]  COND FALSE  !(choice == 7)
[L2299]  COND FALSE  !(choice == 6)
[L2305]  COND TRUE   choice == 5
[L2306]              gas := gas - 21000;
[L2307]  COND TRUE   gas >= 0
[L2308]              assume value_s454 >= 0 && value_s454 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2309]              assume msgvalue_MSG == 0;
[L2310]  CALL        call __ret_0_transfer := transfer~address~uint256_COM(this, msgsender_MSG, msgvalue_MSG, to_s454, value_s454);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == to_s454 && value_s454 <= _balances_COM[this][msgsender_MSG]) && value_s454 >= 0) && value_s454 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_COM[this][to_s454] >= 0) && _balances_COM[this][to_s454] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_COM[this][msgsender_MSG] >= 0) && _balances_COM[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_COM0 := true;
[L2]                 call_transfer_COM0 := false;
[L2]                 revert := revert_hold;
[L408]               havoc __exception;
[L409]               revert := false;
[L410]   COND TRUE   __exception
[L411]               __tmp__Balance := Balance;
[L412]               __tmp__DType := DType;
[L413]               __tmp__Alloc := Alloc;
[L414]               __tmp__balance_ADDR := balance_ADDR;
[L415]               __tmp__M_Ref_int := M_Ref_int;
[L416]               __tmp__sum__balances0 := sum__balances0;
[L417]               __tmp__alloc__allowed_COM_lvl0 := alloc__allowed_COM_lvl0;
[L418]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L419]               __tmp__sum__allowed1 := sum__allowed1;
[L420]               __tmp__Length := Length;
[L421]               __tmp__now := now;
[L422]               __tmp___name_ERC20Detailed := _name_ERC20Detailed;
[L423]               __tmp___symbol_ERC20Detailed := _symbol_ERC20Detailed;
[L424]               __tmp___decimals_ERC20Detailed := _decimals_ERC20Detailed;
[L425]               __tmp___balances_COM := _balances_COM;
[L426]               __tmp___allowed_COM := _allowed_COM;
[L427]               __tmp__tokenName_COM := tokenName_COM;
[L428]               __tmp__tokenSymbol_COM := tokenSymbol_COM;
[L429]               __tmp__tokenDecimals_COM := tokenDecimals_COM;
[L430]               __tmp___totalSupply_COM := _totalSupply_COM;
[L431]               __tmp__noFee_COM := noFee_COM;
[L432]               __tmp__heightEnd20Percent_COM := heightEnd20Percent_COM;
[L433]               __tmp__heightEnd10Percent_COM := heightEnd10Percent_COM;
[L434]               __tmp__heightEnd05Percent_COM := heightEnd05Percent_COM;
[L435]   CALL        call __ret_0_ := transfer~address~uint256_COM__fail(this, msgsender_MSG, msgvalue_MSG, to_s454, value_s454);
[L1054]  COND FALSE  !(!(value_s454 <= __tmp___balances_COM[this][msgsender_MSG]))
[L1058]              __var_1 := null;
[L1059]  COND FALSE  !(!(to_s454 != null))
[L1063]  COND TRUE   value_s454 < __tmp__noFee_COM[this]
[L1064]  CALL        call _transferBurnNo~address~uint256_COM__fail(this, msgsender_MSG, msgvalue_MSG, to_s454, value_s454);
[L1216]  COND TRUE   !(value_s607 <= __tmp___balances_COM[this][msgsender_MSG])
[L1217]              revert := true;
[L1064]  RET         call _transferBurnNo~address~uint256_COM__fail(this, msgsender_MSG, msgvalue_MSG, to_s454, value_s454);
[L1065]  COND TRUE   revert
[L435]   RET         call __ret_0_ := transfer~address~uint256_COM__fail(this, msgsender_MSG, msgvalue_MSG, to_s454, value_s454);
[L436]               assume revert || gas < 0;
[L2310]  RET         call __ret_0_transfer := transfer~address~uint256_COM(this, msgsender_MSG, msgvalue_MSG, to_s454, value_s454);
[L2352]  RET         call CorralChoice_COM(this);

Loop:
[L2352]        assume true;

[2020-11-24 18:19:40,732 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 18:19:40,732 INFO  L82        PathProgramCache]: Analyzing trace with hash 53239666, now seen corresponding path program 1 times
[2020-11-24 18:19:40,733 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 18:19:40,741 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 18:19:40,774 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 18:19:40,774 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 18:19:40,774 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [6] imperfect sequences [] total 6
[2020-11-24 18:19:40,775 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 18:19:40,775 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 6 interpolants.
[2020-11-24 18:19:40,775 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=10, Invalid=20, Unknown=0, NotChecked=0, Total=30
[2020-11-24 18:19:40,775 INFO  L87              Difference]: Start difference. First operand 355 states and 391 transitions. cyclomatic complexity: 37 Second operand 6 states.
[2020-11-24 18:19:40,880 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 18:19:40,880 INFO  L93              Difference]: Finished difference Result 374 states and 409 transitions.
[2020-11-24 18:19:40,880 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 7 states. 
[2020-11-24 18:19:40,880 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 374 states and 409 transitions.
[2020-11-24 18:19:40,882 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 2
[2020-11-24 18:19:40,884 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 374 states to 371 states and 406 transitions.
[2020-11-24 18:19:40,884 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 168
[2020-11-24 18:19:40,884 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 168
[2020-11-24 18:19:40,884 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 371 states and 406 transitions.
[2020-11-24 18:19:40,885 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 18:19:40,885 INFO  L728         BuchiCegarLoop]: Abstraction has 371 states and 406 transitions.
[2020-11-24 18:19:40,885 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 371 states and 406 transitions.
[2020-11-24 18:19:40,889 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 371 to 354.
[2020-11-24 18:19:40,889 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 354 states.
[2020-11-24 18:19:40,890 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 354 states to 354 states and 389 transitions.
[2020-11-24 18:19:40,890 INFO  L751         BuchiCegarLoop]: Abstraction has 354 states and 389 transitions.
[2020-11-24 18:19:40,890 INFO  L631         BuchiCegarLoop]: Abstraction has 354 states and 389 transitions.
[2020-11-24 18:19:40,890 INFO  L445         BuchiCegarLoop]: ======== Iteration 6============
[2020-11-24 18:19:40,890 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 354 states and 389 transitions.
[2020-11-24 18:19:40,891 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 18:19:40,891 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 18:19:40,891 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 18:19:40,892 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 18:19:40,892 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L2]                 success_transfer_COM0 := false;
[L2]                 call_transfer_COM0 := false;
[L2]     CALL        call main();
[L2347]              assume null == 0;
[L2348]  CALL        call this := FreshRefGenerator__success();
[L887]               havoc newRef;
[L888]               assume Alloc[newRef] == false;
[L889]               Alloc[newRef] := true;
[L890]               assume newRef != null;
[L2348]  RET         call this := FreshRefGenerator__success();
[L2349]              assume now >= 0;
[L2350]              assume DType[this] == COM;
[L2351]              assume !revert && gas >= 0;
[L2352]  CALL        call CorralChoice_COM(this);
[L2243]              havoc msgsender_MSG;
[L2244]              havoc msgvalue_MSG;
[L2245]              havoc choice;
[L2246]              havoc __ret_0_totalSupply;
[L2247]              havoc owner_s327;
[L2248]              havoc __ret_0_balanceOf;
[L2249]              havoc owner_s343;
[L2250]              havoc spender_s343;
[L2251]              havoc __ret_0_allowance;
[L2252]              havoc to_s454;
[L2253]              havoc value_s454;
[L2254]              havoc __ret_0_transfer;
[L2255]              havoc spender_s643;
[L2256]              havoc value_s643;
[L2257]              havoc __ret_0_approve;
[L2258]              havoc from_s702;
[L2259]              havoc to_s702;
[L2260]              havoc value_s702;
[L2261]              havoc __ret_0_transferFrom;
[L2262]              havoc name_s228;
[L2263]              havoc symbol_s228;
[L2264]              havoc decimals_s228;
[L2265]              havoc __ret_0_name;
[L2266]              havoc __ret_0_symbol;
[L2267]              havoc __ret_0_decimals;
[L2268]              havoc value_s365;
[L2269]              havoc __ret_0_findPercent;
[L2270]              havoc __ret_0_returnRate;
[L2271]              havoc spender_s956;
[L2272]              havoc addedValue_s956;
[L2273]              havoc __ret_0_increaseAllowance;
[L2274]              havoc spender_s1006;
[L2275]              havoc subtractedValue_s1006;
[L2276]              havoc __ret_0_decreaseAllowance;
[L2277]              havoc amount_s1051;
[L2278]              havoc account_s1140;
[L2279]              havoc amount_s1140;
[L2280]              havoc tmpNow;
[L2281]              havoc gas;
[L2282]              assume gas > 4000000 && gas <= 8000000;
[L2283]              tmpNow := now;
[L2284]              havoc now;
[L2285]              assume now > tmpNow;
[L2286]              assume msgsender_MSG != null;
[L2287]  COND FALSE  !(choice == 8)
[L2293]  COND FALSE  !(choice == 7)
[L2299]  COND FALSE  !(choice == 6)
[L2305]  COND TRUE   choice == 5
[L2306]              gas := gas - 21000;
[L2307]  COND TRUE   gas >= 0
[L2308]              assume value_s454 >= 0 && value_s454 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2309]              assume msgvalue_MSG == 0;
[L2310]  CALL        call __ret_0_transfer := transfer~address~uint256_COM(this, msgsender_MSG, msgvalue_MSG, to_s454, value_s454);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == to_s454 && value_s454 <= _balances_COM[this][msgsender_MSG]) && value_s454 >= 0) && value_s454 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_COM[this][to_s454] >= 0) && _balances_COM[this][to_s454] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_COM[this][msgsender_MSG] >= 0) && _balances_COM[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_COM0 := true;
[L2]                 call_transfer_COM0 := false;
[L2]                 revert := revert_hold;
[L408]               havoc __exception;
[L409]               revert := false;
[L410]   COND TRUE   __exception
[L411]               __tmp__Balance := Balance;
[L412]               __tmp__DType := DType;
[L413]               __tmp__Alloc := Alloc;
[L414]               __tmp__balance_ADDR := balance_ADDR;
[L415]               __tmp__M_Ref_int := M_Ref_int;
[L416]               __tmp__sum__balances0 := sum__balances0;
[L417]               __tmp__alloc__allowed_COM_lvl0 := alloc__allowed_COM_lvl0;
[L418]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L419]               __tmp__sum__allowed1 := sum__allowed1;
[L420]               __tmp__Length := Length;
[L421]               __tmp__now := now;
[L422]               __tmp___name_ERC20Detailed := _name_ERC20Detailed;
[L423]               __tmp___symbol_ERC20Detailed := _symbol_ERC20Detailed;
[L424]               __tmp___decimals_ERC20Detailed := _decimals_ERC20Detailed;
[L425]               __tmp___balances_COM := _balances_COM;
[L426]               __tmp___allowed_COM := _allowed_COM;
[L427]               __tmp__tokenName_COM := tokenName_COM;
[L428]               __tmp__tokenSymbol_COM := tokenSymbol_COM;
[L429]               __tmp__tokenDecimals_COM := tokenDecimals_COM;
[L430]               __tmp___totalSupply_COM := _totalSupply_COM;
[L431]               __tmp__noFee_COM := noFee_COM;
[L432]               __tmp__heightEnd20Percent_COM := heightEnd20Percent_COM;
[L433]               __tmp__heightEnd10Percent_COM := heightEnd10Percent_COM;
[L434]               __tmp__heightEnd05Percent_COM := heightEnd05Percent_COM;
[L435]   CALL        call __ret_0_ := transfer~address~uint256_COM__fail(this, msgsender_MSG, msgvalue_MSG, to_s454, value_s454);
[L1054]  COND FALSE  !(!(value_s454 <= __tmp___balances_COM[this][msgsender_MSG]))
[L1058]              __var_1 := null;
[L1059]  COND FALSE  !(!(to_s454 != null))
[L1063]  COND FALSE  !(value_s454 < __tmp__noFee_COM[this])
[L1069]  CALL        call _transferBurnYes~address~uint256_COM__fail(this, msgsender_MSG, msgvalue_MSG, to_s454, value_s454);
[L1113]  COND TRUE   !(value_s545 <= __tmp___balances_COM[this][msgsender_MSG])
[L1114]              revert := true;
[L1069]  RET         call _transferBurnYes~address~uint256_COM__fail(this, msgsender_MSG, msgvalue_MSG, to_s454, value_s454);
[L1070]  COND TRUE   revert
[L435]   RET         call __ret_0_ := transfer~address~uint256_COM__fail(this, msgsender_MSG, msgvalue_MSG, to_s454, value_s454);
[L436]               assume revert || gas < 0;
[L2310]  RET         call __ret_0_transfer := transfer~address~uint256_COM(this, msgsender_MSG, msgvalue_MSG, to_s454, value_s454);
[L2352]  RET         call CorralChoice_COM(this);

Loop:
[L2352]        assume true;

[2020-11-24 18:19:40,893 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 18:19:40,893 INFO  L82        PathProgramCache]: Analyzing trace with hash 918474897, now seen corresponding path program 1 times
[2020-11-24 18:19:40,894 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 18:19:40,900 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 18:19:40,942 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 18:19:40,943 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 18:19:40,944 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [6] imperfect sequences [] total 6
[2020-11-24 18:19:40,945 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 18:19:40,945 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 6 interpolants.
[2020-11-24 18:19:40,945 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=10, Invalid=20, Unknown=0, NotChecked=0, Total=30
[2020-11-24 18:19:40,946 INFO  L87              Difference]: Start difference. First operand 354 states and 389 transitions. cyclomatic complexity: 36 Second operand 6 states.
[2020-11-24 18:19:41,091 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 18:19:41,092 INFO  L93              Difference]: Finished difference Result 373 states and 407 transitions.
[2020-11-24 18:19:41,092 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 7 states. 
[2020-11-24 18:19:41,092 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 373 states and 407 transitions.
[2020-11-24 18:19:41,094 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 2
[2020-11-24 18:19:41,096 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 373 states to 370 states and 404 transitions.
[2020-11-24 18:19:41,096 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 167
[2020-11-24 18:19:41,097 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 167
[2020-11-24 18:19:41,097 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 370 states and 404 transitions.
[2020-11-24 18:19:41,098 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 18:19:41,098 INFO  L728         BuchiCegarLoop]: Abstraction has 370 states and 404 transitions.
[2020-11-24 18:19:41,098 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 370 states and 404 transitions.
[2020-11-24 18:19:41,102 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 370 to 353.
[2020-11-24 18:19:41,102 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 353 states.
[2020-11-24 18:19:41,103 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 353 states to 353 states and 387 transitions.
[2020-11-24 18:19:41,103 INFO  L751         BuchiCegarLoop]: Abstraction has 353 states and 387 transitions.
[2020-11-24 18:19:41,104 INFO  L631         BuchiCegarLoop]: Abstraction has 353 states and 387 transitions.
[2020-11-24 18:19:41,104 INFO  L445         BuchiCegarLoop]: ======== Iteration 7============
[2020-11-24 18:19:41,104 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 353 states and 387 transitions.
[2020-11-24 18:19:41,105 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 18:19:41,105 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 18:19:41,106 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 18:19:41,107 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 18:19:41,107 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L2]                 success_transfer_COM0 := false;
[L2]                 call_transfer_COM0 := false;
[L2]     CALL        call main();
[L2347]              assume null == 0;
[L2348]  CALL        call this := FreshRefGenerator__success();
[L887]               havoc newRef;
[L888]               assume Alloc[newRef] == false;
[L889]               Alloc[newRef] := true;
[L890]               assume newRef != null;
[L2348]  RET         call this := FreshRefGenerator__success();
[L2349]              assume now >= 0;
[L2350]              assume DType[this] == COM;
[L2351]              assume !revert && gas >= 0;
[L2352]  CALL        call CorralChoice_COM(this);
[L2243]              havoc msgsender_MSG;
[L2244]              havoc msgvalue_MSG;
[L2245]              havoc choice;
[L2246]              havoc __ret_0_totalSupply;
[L2247]              havoc owner_s327;
[L2248]              havoc __ret_0_balanceOf;
[L2249]              havoc owner_s343;
[L2250]              havoc spender_s343;
[L2251]              havoc __ret_0_allowance;
[L2252]              havoc to_s454;
[L2253]              havoc value_s454;
[L2254]              havoc __ret_0_transfer;
[L2255]              havoc spender_s643;
[L2256]              havoc value_s643;
[L2257]              havoc __ret_0_approve;
[L2258]              havoc from_s702;
[L2259]              havoc to_s702;
[L2260]              havoc value_s702;
[L2261]              havoc __ret_0_transferFrom;
[L2262]              havoc name_s228;
[L2263]              havoc symbol_s228;
[L2264]              havoc decimals_s228;
[L2265]              havoc __ret_0_name;
[L2266]              havoc __ret_0_symbol;
[L2267]              havoc __ret_0_decimals;
[L2268]              havoc value_s365;
[L2269]              havoc __ret_0_findPercent;
[L2270]              havoc __ret_0_returnRate;
[L2271]              havoc spender_s956;
[L2272]              havoc addedValue_s956;
[L2273]              havoc __ret_0_increaseAllowance;
[L2274]              havoc spender_s1006;
[L2275]              havoc subtractedValue_s1006;
[L2276]              havoc __ret_0_decreaseAllowance;
[L2277]              havoc amount_s1051;
[L2278]              havoc account_s1140;
[L2279]              havoc amount_s1140;
[L2280]              havoc tmpNow;
[L2281]              havoc gas;
[L2282]              assume gas > 4000000 && gas <= 8000000;
[L2283]              tmpNow := now;
[L2284]              havoc now;
[L2285]              assume now > tmpNow;
[L2286]              assume msgsender_MSG != null;
[L2287]  COND FALSE  !(choice == 8)
[L2293]  COND FALSE  !(choice == 7)
[L2299]  COND FALSE  !(choice == 6)
[L2305]  COND TRUE   choice == 5
[L2306]              gas := gas - 21000;
[L2307]  COND TRUE   gas >= 0
[L2308]              assume value_s454 >= 0 && value_s454 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2309]              assume msgvalue_MSG == 0;
[L2310]  CALL        call __ret_0_transfer := transfer~address~uint256_COM(this, msgsender_MSG, msgvalue_MSG, to_s454, value_s454);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == to_s454 && value_s454 <= _balances_COM[this][msgsender_MSG]) && value_s454 >= 0) && value_s454 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_COM[this][to_s454] >= 0) && _balances_COM[this][to_s454] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_COM[this][msgsender_MSG] >= 0) && _balances_COM[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_COM0 := true;
[L2]                 call_transfer_COM0 := false;
[L2]                 revert := revert_hold;
[L408]               havoc __exception;
[L409]               revert := false;
[L410]   COND TRUE   __exception
[L411]               __tmp__Balance := Balance;
[L412]               __tmp__DType := DType;
[L413]               __tmp__Alloc := Alloc;
[L414]               __tmp__balance_ADDR := balance_ADDR;
[L415]               __tmp__M_Ref_int := M_Ref_int;
[L416]               __tmp__sum__balances0 := sum__balances0;
[L417]               __tmp__alloc__allowed_COM_lvl0 := alloc__allowed_COM_lvl0;
[L418]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L419]               __tmp__sum__allowed1 := sum__allowed1;
[L420]               __tmp__Length := Length;
[L421]               __tmp__now := now;
[L422]               __tmp___name_ERC20Detailed := _name_ERC20Detailed;
[L423]               __tmp___symbol_ERC20Detailed := _symbol_ERC20Detailed;
[L424]               __tmp___decimals_ERC20Detailed := _decimals_ERC20Detailed;
[L425]               __tmp___balances_COM := _balances_COM;
[L426]               __tmp___allowed_COM := _allowed_COM;
[L427]               __tmp__tokenName_COM := tokenName_COM;
[L428]               __tmp__tokenSymbol_COM := tokenSymbol_COM;
[L429]               __tmp__tokenDecimals_COM := tokenDecimals_COM;
[L430]               __tmp___totalSupply_COM := _totalSupply_COM;
[L431]               __tmp__noFee_COM := noFee_COM;
[L432]               __tmp__heightEnd20Percent_COM := heightEnd20Percent_COM;
[L433]               __tmp__heightEnd10Percent_COM := heightEnd10Percent_COM;
[L434]               __tmp__heightEnd05Percent_COM := heightEnd05Percent_COM;
[L435]   CALL        call __ret_0_ := transfer~address~uint256_COM__fail(this, msgsender_MSG, msgvalue_MSG, to_s454, value_s454);
[L1054]  COND FALSE  !(!(value_s454 <= __tmp___balances_COM[this][msgsender_MSG]))
[L1058]              __var_1 := null;
[L1059]  COND FALSE  !(!(to_s454 != null))
[L1063]  COND TRUE   value_s454 < __tmp__noFee_COM[this]
[L1064]  CALL        call _transferBurnNo~address~uint256_COM__fail(this, msgsender_MSG, msgvalue_MSG, to_s454, value_s454);
[L1216]  COND FALSE  !(!(value_s607 <= __tmp___balances_COM[this][msgsender_MSG]))
[L1220]              __var_6 := null;
[L1221]  COND TRUE   !(to_s607 != null)
[L1222]              revert := true;
[L1064]  RET         call _transferBurnNo~address~uint256_COM__fail(this, msgsender_MSG, msgvalue_MSG, to_s454, value_s454);
[L1065]  COND TRUE   revert
[L435]   RET         call __ret_0_ := transfer~address~uint256_COM__fail(this, msgsender_MSG, msgvalue_MSG, to_s454, value_s454);
[L436]               assume revert || gas < 0;
[L2310]  RET         call __ret_0_transfer := transfer~address~uint256_COM(this, msgsender_MSG, msgvalue_MSG, to_s454, value_s454);
[L2352]  RET         call CorralChoice_COM(this);

Loop:
[L2352]        assume true;

[2020-11-24 18:19:41,109 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 18:19:41,109 INFO  L82        PathProgramCache]: Analyzing trace with hash -1950509739, now seen corresponding path program 1 times
[2020-11-24 18:19:41,110 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 18:19:41,118 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 18:19:41,150 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 18:19:41,150 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 18:19:41,150 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [7] imperfect sequences [] total 7
[2020-11-24 18:19:41,150 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 18:19:41,151 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 7 interpolants.
[2020-11-24 18:19:41,151 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=11, Invalid=31, Unknown=0, NotChecked=0, Total=42
[2020-11-24 18:19:41,151 INFO  L87              Difference]: Start difference. First operand 353 states and 387 transitions. cyclomatic complexity: 35 Second operand 7 states.
[2020-11-24 18:19:41,169 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 18:19:41,169 INFO  L93              Difference]: Finished difference Result 363 states and 396 transitions.
[2020-11-24 18:19:41,170 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 7 states. 
[2020-11-24 18:19:41,170 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 363 states and 396 transitions.
[2020-11-24 18:19:41,172 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 18:19:41,174 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 363 states to 352 states and 385 transitions.
[2020-11-24 18:19:41,174 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 149
[2020-11-24 18:19:41,174 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 149
[2020-11-24 18:19:41,174 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 352 states and 385 transitions.
[2020-11-24 18:19:41,175 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 18:19:41,175 INFO  L728         BuchiCegarLoop]: Abstraction has 352 states and 385 transitions.
[2020-11-24 18:19:41,175 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 352 states and 385 transitions.
[2020-11-24 18:19:41,179 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 352 to 352.
[2020-11-24 18:19:41,179 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 352 states.
[2020-11-24 18:19:41,180 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 352 states to 352 states and 385 transitions.
[2020-11-24 18:19:41,180 INFO  L751         BuchiCegarLoop]: Abstraction has 352 states and 385 transitions.
[2020-11-24 18:19:41,180 INFO  L631         BuchiCegarLoop]: Abstraction has 352 states and 385 transitions.
[2020-11-24 18:19:41,180 INFO  L445         BuchiCegarLoop]: ======== Iteration 8============
[2020-11-24 18:19:41,181 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 352 states and 385 transitions.
[2020-11-24 18:19:41,182 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 18:19:41,182 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 18:19:41,182 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 18:19:41,183 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 18:19:41,183 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L2]                 success_transfer_COM0 := false;
[L2]                 call_transfer_COM0 := false;
[L2]     CALL        call main();
[L2347]              assume null == 0;
[L2348]  CALL        call this := FreshRefGenerator__success();
[L887]               havoc newRef;
[L888]               assume Alloc[newRef] == false;
[L889]               Alloc[newRef] := true;
[L890]               assume newRef != null;
[L2348]  RET         call this := FreshRefGenerator__success();
[L2349]              assume now >= 0;
[L2350]              assume DType[this] == COM;
[L2351]              assume !revert && gas >= 0;
[L2352]  CALL        call CorralChoice_COM(this);
[L2243]              havoc msgsender_MSG;
[L2244]              havoc msgvalue_MSG;
[L2245]              havoc choice;
[L2246]              havoc __ret_0_totalSupply;
[L2247]              havoc owner_s327;
[L2248]              havoc __ret_0_balanceOf;
[L2249]              havoc owner_s343;
[L2250]              havoc spender_s343;
[L2251]              havoc __ret_0_allowance;
[L2252]              havoc to_s454;
[L2253]              havoc value_s454;
[L2254]              havoc __ret_0_transfer;
[L2255]              havoc spender_s643;
[L2256]              havoc value_s643;
[L2257]              havoc __ret_0_approve;
[L2258]              havoc from_s702;
[L2259]              havoc to_s702;
[L2260]              havoc value_s702;
[L2261]              havoc __ret_0_transferFrom;
[L2262]              havoc name_s228;
[L2263]              havoc symbol_s228;
[L2264]              havoc decimals_s228;
[L2265]              havoc __ret_0_name;
[L2266]              havoc __ret_0_symbol;
[L2267]              havoc __ret_0_decimals;
[L2268]              havoc value_s365;
[L2269]              havoc __ret_0_findPercent;
[L2270]              havoc __ret_0_returnRate;
[L2271]              havoc spender_s956;
[L2272]              havoc addedValue_s956;
[L2273]              havoc __ret_0_increaseAllowance;
[L2274]              havoc spender_s1006;
[L2275]              havoc subtractedValue_s1006;
[L2276]              havoc __ret_0_decreaseAllowance;
[L2277]              havoc amount_s1051;
[L2278]              havoc account_s1140;
[L2279]              havoc amount_s1140;
[L2280]              havoc tmpNow;
[L2281]              havoc gas;
[L2282]              assume gas > 4000000 && gas <= 8000000;
[L2283]              tmpNow := now;
[L2284]              havoc now;
[L2285]              assume now > tmpNow;
[L2286]              assume msgsender_MSG != null;
[L2287]  COND FALSE  !(choice == 8)
[L2293]  COND FALSE  !(choice == 7)
[L2299]  COND FALSE  !(choice == 6)
[L2305]  COND TRUE   choice == 5
[L2306]              gas := gas - 21000;
[L2307]  COND TRUE   gas >= 0
[L2308]              assume value_s454 >= 0 && value_s454 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2309]              assume msgvalue_MSG == 0;
[L2310]  CALL        call __ret_0_transfer := transfer~address~uint256_COM(this, msgsender_MSG, msgvalue_MSG, to_s454, value_s454);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == to_s454 && value_s454 <= _balances_COM[this][msgsender_MSG]) && value_s454 >= 0) && value_s454 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_COM[this][to_s454] >= 0) && _balances_COM[this][to_s454] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_COM[this][msgsender_MSG] >= 0) && _balances_COM[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_COM0 := true;
[L2]                 call_transfer_COM0 := false;
[L2]                 revert := revert_hold;
[L408]               havoc __exception;
[L409]               revert := false;
[L410]   COND TRUE   __exception
[L411]               __tmp__Balance := Balance;
[L412]               __tmp__DType := DType;
[L413]               __tmp__Alloc := Alloc;
[L414]               __tmp__balance_ADDR := balance_ADDR;
[L415]               __tmp__M_Ref_int := M_Ref_int;
[L416]               __tmp__sum__balances0 := sum__balances0;
[L417]               __tmp__alloc__allowed_COM_lvl0 := alloc__allowed_COM_lvl0;
[L418]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L419]               __tmp__sum__allowed1 := sum__allowed1;
[L420]               __tmp__Length := Length;
[L421]               __tmp__now := now;
[L422]               __tmp___name_ERC20Detailed := _name_ERC20Detailed;
[L423]               __tmp___symbol_ERC20Detailed := _symbol_ERC20Detailed;
[L424]               __tmp___decimals_ERC20Detailed := _decimals_ERC20Detailed;
[L425]               __tmp___balances_COM := _balances_COM;
[L426]               __tmp___allowed_COM := _allowed_COM;
[L427]               __tmp__tokenName_COM := tokenName_COM;
[L428]               __tmp__tokenSymbol_COM := tokenSymbol_COM;
[L429]               __tmp__tokenDecimals_COM := tokenDecimals_COM;
[L430]               __tmp___totalSupply_COM := _totalSupply_COM;
[L431]               __tmp__noFee_COM := noFee_COM;
[L432]               __tmp__heightEnd20Percent_COM := heightEnd20Percent_COM;
[L433]               __tmp__heightEnd10Percent_COM := heightEnd10Percent_COM;
[L434]               __tmp__heightEnd05Percent_COM := heightEnd05Percent_COM;
[L435]   CALL        call __ret_0_ := transfer~address~uint256_COM__fail(this, msgsender_MSG, msgvalue_MSG, to_s454, value_s454);
[L1054]  COND FALSE  !(!(value_s454 <= __tmp___balances_COM[this][msgsender_MSG]))
[L1058]              __var_1 := null;
[L1059]  COND FALSE  !(!(to_s454 != null))
[L1063]  COND FALSE  !(value_s454 < __tmp__noFee_COM[this])
[L1069]  CALL        call _transferBurnYes~address~uint256_COM__fail(this, msgsender_MSG, msgvalue_MSG, to_s454, value_s454);
[L1113]  COND FALSE  !(!(value_s545 <= __tmp___balances_COM[this][msgsender_MSG]))
[L1117]              __var_2 := null;
[L1118]  COND TRUE   !(to_s545 != null)
[L1119]              revert := true;
[L1069]  RET         call _transferBurnYes~address~uint256_COM__fail(this, msgsender_MSG, msgvalue_MSG, to_s454, value_s454);
[L1070]  COND TRUE   revert
[L435]   RET         call __ret_0_ := transfer~address~uint256_COM__fail(this, msgsender_MSG, msgvalue_MSG, to_s454, value_s454);
[L436]               assume revert || gas < 0;
[L2310]  RET         call __ret_0_transfer := transfer~address~uint256_COM(this, msgsender_MSG, msgvalue_MSG, to_s454, value_s454);
[L2352]  RET         call CorralChoice_COM(this);

Loop:
[L2352]        assume true;

[2020-11-24 18:19:41,185 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 18:19:41,185 INFO  L82        PathProgramCache]: Analyzing trace with hash 725267652, now seen corresponding path program 1 times
[2020-11-24 18:19:41,186 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 18:19:41,194 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 18:19:41,231 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 18:19:41,231 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 18:19:41,231 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [7] imperfect sequences [] total 7
[2020-11-24 18:19:41,231 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 18:19:41,232 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 7 interpolants.
[2020-11-24 18:19:41,232 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=11, Invalid=31, Unknown=0, NotChecked=0, Total=42
[2020-11-24 18:19:41,232 INFO  L87              Difference]: Start difference. First operand 352 states and 385 transitions. cyclomatic complexity: 34 Second operand 7 states.
[2020-11-24 18:19:41,257 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 18:19:41,257 INFO  L93              Difference]: Finished difference Result 362 states and 394 transitions.
[2020-11-24 18:19:41,257 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 7 states. 
[2020-11-24 18:19:41,257 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 362 states and 394 transitions.
[2020-11-24 18:19:41,259 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 18:19:41,261 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 362 states to 351 states and 383 transitions.
[2020-11-24 18:19:41,261 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 148
[2020-11-24 18:19:41,262 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 148
[2020-11-24 18:19:41,262 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 351 states and 383 transitions.
[2020-11-24 18:19:41,262 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 18:19:41,262 INFO  L728         BuchiCegarLoop]: Abstraction has 351 states and 383 transitions.
[2020-11-24 18:19:41,263 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 351 states and 383 transitions.
[2020-11-24 18:19:41,267 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 351 to 351.
[2020-11-24 18:19:41,267 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 351 states.
[2020-11-24 18:19:41,268 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 351 states to 351 states and 383 transitions.
[2020-11-24 18:19:41,268 INFO  L751         BuchiCegarLoop]: Abstraction has 351 states and 383 transitions.
[2020-11-24 18:19:41,268 INFO  L631         BuchiCegarLoop]: Abstraction has 351 states and 383 transitions.
[2020-11-24 18:19:41,268 INFO  L445         BuchiCegarLoop]: ======== Iteration 9============
[2020-11-24 18:19:41,268 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 351 states and 383 transitions.
[2020-11-24 18:19:41,283 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 18:19:41,283 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 18:19:41,283 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 18:19:41,284 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 18:19:41,284 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L2]                 success_transfer_COM0 := false;
[L2]                 call_transfer_COM0 := false;
[L2]     CALL        call main();
[L2347]              assume null == 0;
[L2348]  CALL        call this := FreshRefGenerator__success();
[L887]               havoc newRef;
[L888]               assume Alloc[newRef] == false;
[L889]               Alloc[newRef] := true;
[L890]               assume newRef != null;
[L2348]  RET         call this := FreshRefGenerator__success();
[L2349]              assume now >= 0;
[L2350]              assume DType[this] == COM;
[L2351]              assume !revert && gas >= 0;
[L2352]  CALL        call CorralChoice_COM(this);
[L2243]              havoc msgsender_MSG;
[L2244]              havoc msgvalue_MSG;
[L2245]              havoc choice;
[L2246]              havoc __ret_0_totalSupply;
[L2247]              havoc owner_s327;
[L2248]              havoc __ret_0_balanceOf;
[L2249]              havoc owner_s343;
[L2250]              havoc spender_s343;
[L2251]              havoc __ret_0_allowance;
[L2252]              havoc to_s454;
[L2253]              havoc value_s454;
[L2254]              havoc __ret_0_transfer;
[L2255]              havoc spender_s643;
[L2256]              havoc value_s643;
[L2257]              havoc __ret_0_approve;
[L2258]              havoc from_s702;
[L2259]              havoc to_s702;
[L2260]              havoc value_s702;
[L2261]              havoc __ret_0_transferFrom;
[L2262]              havoc name_s228;
[L2263]              havoc symbol_s228;
[L2264]              havoc decimals_s228;
[L2265]              havoc __ret_0_name;
[L2266]              havoc __ret_0_symbol;
[L2267]              havoc __ret_0_decimals;
[L2268]              havoc value_s365;
[L2269]              havoc __ret_0_findPercent;
[L2270]              havoc __ret_0_returnRate;
[L2271]              havoc spender_s956;
[L2272]              havoc addedValue_s956;
[L2273]              havoc __ret_0_increaseAllowance;
[L2274]              havoc spender_s1006;
[L2275]              havoc subtractedValue_s1006;
[L2276]              havoc __ret_0_decreaseAllowance;
[L2277]              havoc amount_s1051;
[L2278]              havoc account_s1140;
[L2279]              havoc amount_s1140;
[L2280]              havoc tmpNow;
[L2281]              havoc gas;
[L2282]              assume gas > 4000000 && gas <= 8000000;
[L2283]              tmpNow := now;
[L2284]              havoc now;
[L2285]              assume now > tmpNow;
[L2286]              assume msgsender_MSG != null;
[L2287]  COND FALSE  !(choice == 8)
[L2293]  COND FALSE  !(choice == 7)
[L2299]  COND FALSE  !(choice == 6)
[L2305]  COND TRUE   choice == 5
[L2306]              gas := gas - 21000;
[L2307]  COND TRUE   gas >= 0
[L2308]              assume value_s454 >= 0 && value_s454 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2309]              assume msgvalue_MSG == 0;
[L2310]  CALL        call __ret_0_transfer := transfer~address~uint256_COM(this, msgsender_MSG, msgvalue_MSG, to_s454, value_s454);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == to_s454 && value_s454 <= _balances_COM[this][msgsender_MSG]) && value_s454 >= 0) && value_s454 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_COM[this][to_s454] >= 0) && _balances_COM[this][to_s454] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_COM[this][msgsender_MSG] >= 0) && _balances_COM[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_COM0 := true;
[L2]                 call_transfer_COM0 := false;
[L2]                 revert := revert_hold;
[L408]               havoc __exception;
[L409]               revert := false;
[L410]   COND TRUE   __exception
[L411]               __tmp__Balance := Balance;
[L412]               __tmp__DType := DType;
[L413]               __tmp__Alloc := Alloc;
[L414]               __tmp__balance_ADDR := balance_ADDR;
[L415]               __tmp__M_Ref_int := M_Ref_int;
[L416]               __tmp__sum__balances0 := sum__balances0;
[L417]               __tmp__alloc__allowed_COM_lvl0 := alloc__allowed_COM_lvl0;
[L418]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L419]               __tmp__sum__allowed1 := sum__allowed1;
[L420]               __tmp__Length := Length;
[L421]               __tmp__now := now;
[L422]               __tmp___name_ERC20Detailed := _name_ERC20Detailed;
[L423]               __tmp___symbol_ERC20Detailed := _symbol_ERC20Detailed;
[L424]               __tmp___decimals_ERC20Detailed := _decimals_ERC20Detailed;
[L425]               __tmp___balances_COM := _balances_COM;
[L426]               __tmp___allowed_COM := _allowed_COM;
[L427]               __tmp__tokenName_COM := tokenName_COM;
[L428]               __tmp__tokenSymbol_COM := tokenSymbol_COM;
[L429]               __tmp__tokenDecimals_COM := tokenDecimals_COM;
[L430]               __tmp___totalSupply_COM := _totalSupply_COM;
[L431]               __tmp__noFee_COM := noFee_COM;
[L432]               __tmp__heightEnd20Percent_COM := heightEnd20Percent_COM;
[L433]               __tmp__heightEnd10Percent_COM := heightEnd10Percent_COM;
[L434]               __tmp__heightEnd05Percent_COM := heightEnd05Percent_COM;
[L435]   CALL        call __ret_0_ := transfer~address~uint256_COM__fail(this, msgsender_MSG, msgvalue_MSG, to_s454, value_s454);
[L1054]  COND FALSE  !(!(value_s454 <= __tmp___balances_COM[this][msgsender_MSG]))
[L1058]              __var_1 := null;
[L1059]  COND FALSE  !(!(to_s454 != null))
[L1063]  COND TRUE   value_s454 < __tmp__noFee_COM[this]
[L1064]  CALL        call _transferBurnNo~address~uint256_COM__fail(this, msgsender_MSG, msgvalue_MSG, to_s454, value_s454);
[L1216]  COND FALSE  !(!(value_s607 <= __tmp___balances_COM[this][msgsender_MSG]))
[L1220]              __var_6 := null;
[L1221]  COND FALSE  !(!(to_s607 != null))
[L1225]  COND TRUE   !(value_s607 < __tmp__noFee_COM[this])
[L1226]              revert := true;
[L1064]  RET         call _transferBurnNo~address~uint256_COM__fail(this, msgsender_MSG, msgvalue_MSG, to_s454, value_s454);
[L1065]  COND TRUE   revert
[L435]   RET         call __ret_0_ := transfer~address~uint256_COM__fail(this, msgsender_MSG, msgvalue_MSG, to_s454, value_s454);
[L436]               assume revert || gas < 0;
[L2310]  RET         call __ret_0_transfer := transfer~address~uint256_COM(this, msgsender_MSG, msgvalue_MSG, to_s454, value_s454);
[L2352]  RET         call CorralChoice_COM(this);

Loop:
[L2352]        assume true;

[2020-11-24 18:19:41,289 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 18:19:41,289 INFO  L82        PathProgramCache]: Analyzing trace with hash 1369407311, now seen corresponding path program 1 times
[2020-11-24 18:19:41,290 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 18:19:41,298 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 18:19:41,315 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 18:19:41,316 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 18:19:41,316 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-24 18:19:41,316 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 18:19:41,316 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-24 18:19:41,316 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-24 18:19:41,317 INFO  L87              Difference]: Start difference. First operand 351 states and 383 transitions. cyclomatic complexity: 33 Second operand 4 states.
[2020-11-24 18:19:41,326 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 18:19:41,326 INFO  L93              Difference]: Finished difference Result 356 states and 387 transitions.
[2020-11-24 18:19:41,326 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-24 18:19:41,326 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 356 states and 387 transitions.
[2020-11-24 18:19:41,328 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 18:19:41,329 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 356 states to 353 states and 384 transitions.
[2020-11-24 18:19:41,329 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 150
[2020-11-24 18:19:41,329 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 150
[2020-11-24 18:19:41,330 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 353 states and 384 transitions.
[2020-11-24 18:19:41,330 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 18:19:41,330 INFO  L728         BuchiCegarLoop]: Abstraction has 353 states and 384 transitions.
[2020-11-24 18:19:41,331 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 353 states and 384 transitions.
[2020-11-24 18:19:41,334 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 353 to 350.
[2020-11-24 18:19:41,334 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 350 states.
[2020-11-24 18:19:41,335 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 350 states to 350 states and 381 transitions.
[2020-11-24 18:19:41,335 INFO  L751         BuchiCegarLoop]: Abstraction has 350 states and 381 transitions.
[2020-11-24 18:19:41,335 INFO  L631         BuchiCegarLoop]: Abstraction has 350 states and 381 transitions.
[2020-11-24 18:19:41,335 INFO  L445         BuchiCegarLoop]: ======== Iteration 10============
[2020-11-24 18:19:41,335 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 350 states and 381 transitions.
[2020-11-24 18:19:41,336 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 18:19:41,336 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 18:19:41,336 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 18:19:41,337 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 18:19:41,337 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L2]                 success_transfer_COM0 := false;
[L2]                 call_transfer_COM0 := false;
[L2]     CALL        call main();
[L2347]              assume null == 0;
[L2348]  CALL        call this := FreshRefGenerator__success();
[L887]               havoc newRef;
[L888]               assume Alloc[newRef] == false;
[L889]               Alloc[newRef] := true;
[L890]               assume newRef != null;
[L2348]  RET         call this := FreshRefGenerator__success();
[L2349]              assume now >= 0;
[L2350]              assume DType[this] == COM;
[L2351]              assume !revert && gas >= 0;
[L2352]  CALL        call CorralChoice_COM(this);
[L2243]              havoc msgsender_MSG;
[L2244]              havoc msgvalue_MSG;
[L2245]              havoc choice;
[L2246]              havoc __ret_0_totalSupply;
[L2247]              havoc owner_s327;
[L2248]              havoc __ret_0_balanceOf;
[L2249]              havoc owner_s343;
[L2250]              havoc spender_s343;
[L2251]              havoc __ret_0_allowance;
[L2252]              havoc to_s454;
[L2253]              havoc value_s454;
[L2254]              havoc __ret_0_transfer;
[L2255]              havoc spender_s643;
[L2256]              havoc value_s643;
[L2257]              havoc __ret_0_approve;
[L2258]              havoc from_s702;
[L2259]              havoc to_s702;
[L2260]              havoc value_s702;
[L2261]              havoc __ret_0_transferFrom;
[L2262]              havoc name_s228;
[L2263]              havoc symbol_s228;
[L2264]              havoc decimals_s228;
[L2265]              havoc __ret_0_name;
[L2266]              havoc __ret_0_symbol;
[L2267]              havoc __ret_0_decimals;
[L2268]              havoc value_s365;
[L2269]              havoc __ret_0_findPercent;
[L2270]              havoc __ret_0_returnRate;
[L2271]              havoc spender_s956;
[L2272]              havoc addedValue_s956;
[L2273]              havoc __ret_0_increaseAllowance;
[L2274]              havoc spender_s1006;
[L2275]              havoc subtractedValue_s1006;
[L2276]              havoc __ret_0_decreaseAllowance;
[L2277]              havoc amount_s1051;
[L2278]              havoc account_s1140;
[L2279]              havoc amount_s1140;
[L2280]              havoc tmpNow;
[L2281]              havoc gas;
[L2282]              assume gas > 4000000 && gas <= 8000000;
[L2283]              tmpNow := now;
[L2284]              havoc now;
[L2285]              assume now > tmpNow;
[L2286]              assume msgsender_MSG != null;
[L2287]  COND FALSE  !(choice == 8)
[L2293]  COND FALSE  !(choice == 7)
[L2299]  COND FALSE  !(choice == 6)
[L2305]  COND TRUE   choice == 5
[L2306]              gas := gas - 21000;
[L2307]  COND TRUE   gas >= 0
[L2308]              assume value_s454 >= 0 && value_s454 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2309]              assume msgvalue_MSG == 0;
[L2310]  CALL        call __ret_0_transfer := transfer~address~uint256_COM(this, msgsender_MSG, msgvalue_MSG, to_s454, value_s454);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == to_s454 && value_s454 <= _balances_COM[this][msgsender_MSG]) && value_s454 >= 0) && value_s454 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_COM[this][to_s454] >= 0) && _balances_COM[this][to_s454] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_COM[this][msgsender_MSG] >= 0) && _balances_COM[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_COM0 := true;
[L2]                 call_transfer_COM0 := false;
[L2]                 revert := revert_hold;
[L408]               havoc __exception;
[L409]               revert := false;
[L410]   COND TRUE   __exception
[L411]               __tmp__Balance := Balance;
[L412]               __tmp__DType := DType;
[L413]               __tmp__Alloc := Alloc;
[L414]               __tmp__balance_ADDR := balance_ADDR;
[L415]               __tmp__M_Ref_int := M_Ref_int;
[L416]               __tmp__sum__balances0 := sum__balances0;
[L417]               __tmp__alloc__allowed_COM_lvl0 := alloc__allowed_COM_lvl0;
[L418]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L419]               __tmp__sum__allowed1 := sum__allowed1;
[L420]               __tmp__Length := Length;
[L421]               __tmp__now := now;
[L422]               __tmp___name_ERC20Detailed := _name_ERC20Detailed;
[L423]               __tmp___symbol_ERC20Detailed := _symbol_ERC20Detailed;
[L424]               __tmp___decimals_ERC20Detailed := _decimals_ERC20Detailed;
[L425]               __tmp___balances_COM := _balances_COM;
[L426]               __tmp___allowed_COM := _allowed_COM;
[L427]               __tmp__tokenName_COM := tokenName_COM;
[L428]               __tmp__tokenSymbol_COM := tokenSymbol_COM;
[L429]               __tmp__tokenDecimals_COM := tokenDecimals_COM;
[L430]               __tmp___totalSupply_COM := _totalSupply_COM;
[L431]               __tmp__noFee_COM := noFee_COM;
[L432]               __tmp__heightEnd20Percent_COM := heightEnd20Percent_COM;
[L433]               __tmp__heightEnd10Percent_COM := heightEnd10Percent_COM;
[L434]               __tmp__heightEnd05Percent_COM := heightEnd05Percent_COM;
[L435]   CALL        call __ret_0_ := transfer~address~uint256_COM__fail(this, msgsender_MSG, msgvalue_MSG, to_s454, value_s454);
[L1054]  COND FALSE  !(!(value_s454 <= __tmp___balances_COM[this][msgsender_MSG]))
[L1058]              __var_1 := null;
[L1059]  COND FALSE  !(!(to_s454 != null))
[L1063]  COND FALSE  !(value_s454 < __tmp__noFee_COM[this])
[L1069]  CALL        call _transferBurnYes~address~uint256_COM__fail(this, msgsender_MSG, msgvalue_MSG, to_s454, value_s454);
[L1113]  COND FALSE  !(!(value_s545 <= __tmp___balances_COM[this][msgsender_MSG]))
[L1117]              __var_2 := null;
[L1118]  COND FALSE  !(!(to_s545 != null))
[L1122]  COND TRUE   !(value_s545 >= __tmp__noFee_COM[this])
[L1123]              revert := true;
[L1069]  RET         call _transferBurnYes~address~uint256_COM__fail(this, msgsender_MSG, msgvalue_MSG, to_s454, value_s454);
[L1070]  COND TRUE   revert
[L435]   RET         call __ret_0_ := transfer~address~uint256_COM__fail(this, msgsender_MSG, msgvalue_MSG, to_s454, value_s454);
[L436]               assume revert || gas < 0;
[L2310]  RET         call __ret_0_transfer := transfer~address~uint256_COM(this, msgsender_MSG, msgvalue_MSG, to_s454, value_s454);
[L2352]  RET         call CorralChoice_COM(this);

Loop:
[L2352]        assume true;

[2020-11-24 18:19:41,339 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 18:19:41,339 INFO  L82        PathProgramCache]: Analyzing trace with hash -33924891, now seen corresponding path program 1 times
[2020-11-24 18:19:41,339 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 18:19:41,346 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 18:19:41,362 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 18:19:41,362 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 18:19:41,363 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-24 18:19:41,363 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 18:19:41,363 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-24 18:19:41,363 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-24 18:19:41,363 INFO  L87              Difference]: Start difference. First operand 350 states and 381 transitions. cyclomatic complexity: 32 Second operand 4 states.
[2020-11-24 18:19:41,372 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 18:19:41,372 INFO  L93              Difference]: Finished difference Result 355 states and 385 transitions.
[2020-11-24 18:19:41,372 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-24 18:19:41,372 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 355 states and 385 transitions.
[2020-11-24 18:19:41,374 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 18:19:41,375 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 355 states to 352 states and 382 transitions.
[2020-11-24 18:19:41,375 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 149
[2020-11-24 18:19:41,375 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 149
[2020-11-24 18:19:41,376 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 352 states and 382 transitions.
[2020-11-24 18:19:41,376 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 18:19:41,376 INFO  L728         BuchiCegarLoop]: Abstraction has 352 states and 382 transitions.
[2020-11-24 18:19:41,377 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 352 states and 382 transitions.
[2020-11-24 18:19:41,380 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 352 to 349.
[2020-11-24 18:19:41,380 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 349 states.
[2020-11-24 18:19:41,381 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 349 states to 349 states and 379 transitions.
[2020-11-24 18:19:41,381 INFO  L751         BuchiCegarLoop]: Abstraction has 349 states and 379 transitions.
[2020-11-24 18:19:41,381 INFO  L631         BuchiCegarLoop]: Abstraction has 349 states and 379 transitions.
[2020-11-24 18:19:41,381 INFO  L445         BuchiCegarLoop]: ======== Iteration 11============
[2020-11-24 18:19:41,381 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 349 states and 379 transitions.
[2020-11-24 18:19:41,382 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 18:19:41,382 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 18:19:41,382 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 18:19:41,383 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 18:19:41,383 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L2]                 success_transfer_COM0 := false;
[L2]                 call_transfer_COM0 := false;
[L2]     CALL        call main();
[L2347]              assume null == 0;
[L2348]  CALL        call this := FreshRefGenerator__success();
[L887]               havoc newRef;
[L888]               assume Alloc[newRef] == false;
[L889]               Alloc[newRef] := true;
[L890]               assume newRef != null;
[L2348]  RET         call this := FreshRefGenerator__success();
[L2349]              assume now >= 0;
[L2350]              assume DType[this] == COM;
[L2351]              assume !revert && gas >= 0;
[L2352]  CALL        call CorralChoice_COM(this);
[L2243]              havoc msgsender_MSG;
[L2244]              havoc msgvalue_MSG;
[L2245]              havoc choice;
[L2246]              havoc __ret_0_totalSupply;
[L2247]              havoc owner_s327;
[L2248]              havoc __ret_0_balanceOf;
[L2249]              havoc owner_s343;
[L2250]              havoc spender_s343;
[L2251]              havoc __ret_0_allowance;
[L2252]              havoc to_s454;
[L2253]              havoc value_s454;
[L2254]              havoc __ret_0_transfer;
[L2255]              havoc spender_s643;
[L2256]              havoc value_s643;
[L2257]              havoc __ret_0_approve;
[L2258]              havoc from_s702;
[L2259]              havoc to_s702;
[L2260]              havoc value_s702;
[L2261]              havoc __ret_0_transferFrom;
[L2262]              havoc name_s228;
[L2263]              havoc symbol_s228;
[L2264]              havoc decimals_s228;
[L2265]              havoc __ret_0_name;
[L2266]              havoc __ret_0_symbol;
[L2267]              havoc __ret_0_decimals;
[L2268]              havoc value_s365;
[L2269]              havoc __ret_0_findPercent;
[L2270]              havoc __ret_0_returnRate;
[L2271]              havoc spender_s956;
[L2272]              havoc addedValue_s956;
[L2273]              havoc __ret_0_increaseAllowance;
[L2274]              havoc spender_s1006;
[L2275]              havoc subtractedValue_s1006;
[L2276]              havoc __ret_0_decreaseAllowance;
[L2277]              havoc amount_s1051;
[L2278]              havoc account_s1140;
[L2279]              havoc amount_s1140;
[L2280]              havoc tmpNow;
[L2281]              havoc gas;
[L2282]              assume gas > 4000000 && gas <= 8000000;
[L2283]              tmpNow := now;
[L2284]              havoc now;
[L2285]              assume now > tmpNow;
[L2286]              assume msgsender_MSG != null;
[L2287]  COND FALSE  !(choice == 8)
[L2293]  COND FALSE  !(choice == 7)
[L2299]  COND FALSE  !(choice == 6)
[L2305]  COND TRUE   choice == 5
[L2306]              gas := gas - 21000;
[L2307]  COND TRUE   gas >= 0
[L2308]              assume value_s454 >= 0 && value_s454 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2309]              assume msgvalue_MSG == 0;
[L2310]  CALL        call __ret_0_transfer := transfer~address~uint256_COM(this, msgsender_MSG, msgvalue_MSG, to_s454, value_s454);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == to_s454 && value_s454 <= _balances_COM[this][msgsender_MSG]) && value_s454 >= 0) && value_s454 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_COM[this][to_s454] >= 0) && _balances_COM[this][to_s454] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_COM[this][msgsender_MSG] >= 0) && _balances_COM[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_COM0 := true;
[L2]                 call_transfer_COM0 := false;
[L2]                 revert := revert_hold;
[L408]               havoc __exception;
[L409]               revert := false;
[L410]   COND FALSE  !(__exception)
[L438]   CALL        call __ret_0_ := transfer~address~uint256_COM__success(this, msgsender_MSG, msgvalue_MSG, to_s454, value_s454);
[L1081]  COND FALSE  !(!(value_s454 <= _balances_COM[this][msgsender_MSG]))
[L1085]              __var_1 := null;
[L1086]  COND FALSE  !(!(to_s454 != null))
[L1090]  COND TRUE   value_s454 < noFee_COM[this]
[L1091]  CALL        call _transferBurnNo~address~uint256_COM__success(this, msgsender_MSG, msgvalue_MSG, to_s454, value_s454);
[L1250]  COND FALSE  !(!(value_s607 <= _balances_COM[this][msgsender_MSG]))
[L1254]              __var_6 := null;
[L1255]  COND FALSE  !(!(to_s607 != null))
[L1259]  COND FALSE  !(!(value_s607 < noFee_COM[this]))
[L1263]  CALL        call __var_7 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_COM[this][msgsender_MSG], value_s607);
[L917]               assert b_s139 <= a_s139;
[L918]               __ret_0_ := (a_s139 - b_s139) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1263]  RET         call __var_7 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_COM[this][msgsender_MSG], value_s607);
[L1264]  COND FALSE  !(revert)
[L1267]              sum__balances0[this] := sum__balances0[this] - _balances_COM[this][msgsender_MSG];
[L1268]              _balances_COM[this][msgsender_MSG] := __var_7;
[L1269]              sum__balances0[this] := sum__balances0[this] + _balances_COM[this][msgsender_MSG];
[L1270]  CALL        call __var_8 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_COM[this][to_s607], value_s607);
[L933]               c_s163 := (a_s163 + b_s163) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L934]               assert c_s163 >= a_s163;
[L935]               __ret_0_ := c_s163;
[L1270]  RET         call __var_8 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_COM[this][to_s607], value_s607);
[L1271]  COND FALSE  !(revert)
[L1274]              sum__balances0[this] := sum__balances0[this] - _balances_COM[this][to_s607];
[L1275]              _balances_COM[this][to_s607] := __var_8;
[L1276]              sum__balances0[this] := sum__balances0[this] + _balances_COM[this][to_s607];
[L1277]              assert { :EventEmitted "Transfer_COM" } true;
[L1091]  RET         call _transferBurnNo~address~uint256_COM__success(this, msgsender_MSG, msgvalue_MSG, to_s454, value_s454);
[L1092]  COND FALSE  !(revert)
[L1101]              __ret_0_ := true;
[L438]   RET         call __ret_0_ := transfer~address~uint256_COM__success(this, msgsender_MSG, msgvalue_MSG, to_s454, value_s454);
[L439]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !((((((__ret_0_ == true && _totalSupply_COM[this] == old(_totalSupply_COM[this])) && _balances_COM[this] == old(_balances_COM[this])) && _allowed_COM[this] == old(_allowed_COM[this])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]));
[L2]                 revert := revert_hold;
[L2310]  RET         call __ret_0_transfer := transfer~address~uint256_COM(this, msgsender_MSG, msgvalue_MSG, to_s454, value_s454);
[L2352]  RET         call CorralChoice_COM(this);

Loop:
[L2352]        assume true;

[2020-11-24 18:19:41,385 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 18:19:41,385 INFO  L82        PathProgramCache]: Analyzing trace with hash 467573830, now seen corresponding path program 1 times
[2020-11-24 18:19:41,386 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 18:19:41,428 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 18:19:41,691 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 18:19:41,691 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 18:19:41,691 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [17] imperfect sequences [] total 17
[2020-11-24 18:19:41,691 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 18:19:41,692 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 17 interpolants.
[2020-11-24 18:19:41,692 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=39, Invalid=233, Unknown=0, NotChecked=0, Total=272
[2020-11-24 18:19:41,692 INFO  L87              Difference]: Start difference. First operand 349 states and 379 transitions. cyclomatic complexity: 31 Second operand 17 states.
[2020-11-24 18:19:42,223 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 18:19:42,223 INFO  L93              Difference]: Finished difference Result 370 states and 399 transitions.
[2020-11-24 18:19:42,223 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 17 states. 
[2020-11-24 18:19:42,223 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 370 states and 399 transitions.
[2020-11-24 18:19:42,224 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 2
[2020-11-24 18:19:42,225 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 370 states to 331 states and 358 transitions.
[2020-11-24 18:19:42,225 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 143
[2020-11-24 18:19:42,226 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 143
[2020-11-24 18:19:42,226 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 331 states and 358 transitions.
[2020-11-24 18:19:42,226 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 18:19:42,226 INFO  L728         BuchiCegarLoop]: Abstraction has 331 states and 358 transitions.
[2020-11-24 18:19:42,226 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 331 states and 358 transitions.
[2020-11-24 18:19:42,228 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 331 to 324.
[2020-11-24 18:19:42,228 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 324 states.
[2020-11-24 18:19:42,229 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 324 states to 324 states and 351 transitions.
[2020-11-24 18:19:42,229 INFO  L751         BuchiCegarLoop]: Abstraction has 324 states and 351 transitions.
[2020-11-24 18:19:42,229 INFO  L631         BuchiCegarLoop]: Abstraction has 324 states and 351 transitions.
[2020-11-24 18:19:42,229 INFO  L445         BuchiCegarLoop]: ======== Iteration 12============
[2020-11-24 18:19:42,229 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 324 states and 351 transitions.
[2020-11-24 18:19:42,230 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 18:19:42,230 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 18:19:42,230 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 18:19:42,230 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 18:19:42,230 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L2]                 success_transfer_COM0 := false;
[L2]                 call_transfer_COM0 := false;
[L2]     CALL        call main();
[L2347]              assume null == 0;
[L2348]  CALL        call this := FreshRefGenerator__success();
[L887]               havoc newRef;
[L888]               assume Alloc[newRef] == false;
[L889]               Alloc[newRef] := true;
[L890]               assume newRef != null;
[L2348]  RET         call this := FreshRefGenerator__success();
[L2349]              assume now >= 0;
[L2350]              assume DType[this] == COM;
[L2351]              assume !revert && gas >= 0;
[L2352]  CALL        call CorralChoice_COM(this);
[L2243]              havoc msgsender_MSG;
[L2244]              havoc msgvalue_MSG;
[L2245]              havoc choice;
[L2246]              havoc __ret_0_totalSupply;
[L2247]              havoc owner_s327;
[L2248]              havoc __ret_0_balanceOf;
[L2249]              havoc owner_s343;
[L2250]              havoc spender_s343;
[L2251]              havoc __ret_0_allowance;
[L2252]              havoc to_s454;
[L2253]              havoc value_s454;
[L2254]              havoc __ret_0_transfer;
[L2255]              havoc spender_s643;
[L2256]              havoc value_s643;
[L2257]              havoc __ret_0_approve;
[L2258]              havoc from_s702;
[L2259]              havoc to_s702;
[L2260]              havoc value_s702;
[L2261]              havoc __ret_0_transferFrom;
[L2262]              havoc name_s228;
[L2263]              havoc symbol_s228;
[L2264]              havoc decimals_s228;
[L2265]              havoc __ret_0_name;
[L2266]              havoc __ret_0_symbol;
[L2267]              havoc __ret_0_decimals;
[L2268]              havoc value_s365;
[L2269]              havoc __ret_0_findPercent;
[L2270]              havoc __ret_0_returnRate;
[L2271]              havoc spender_s956;
[L2272]              havoc addedValue_s956;
[L2273]              havoc __ret_0_increaseAllowance;
[L2274]              havoc spender_s1006;
[L2275]              havoc subtractedValue_s1006;
[L2276]              havoc __ret_0_decreaseAllowance;
[L2277]              havoc amount_s1051;
[L2278]              havoc account_s1140;
[L2279]              havoc amount_s1140;
[L2280]              havoc tmpNow;
[L2281]              havoc gas;
[L2282]              assume gas > 4000000 && gas <= 8000000;
[L2283]              tmpNow := now;
[L2284]              havoc now;
[L2285]              assume now > tmpNow;
[L2286]              assume msgsender_MSG != null;
[L2287]  COND FALSE  !(choice == 8)
[L2293]  COND FALSE  !(choice == 7)
[L2299]  COND FALSE  !(choice == 6)
[L2305]  COND TRUE   choice == 5
[L2306]              gas := gas - 21000;
[L2307]  COND TRUE   gas >= 0
[L2308]              assume value_s454 >= 0 && value_s454 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2309]              assume msgvalue_MSG == 0;
[L2310]  CALL        call __ret_0_transfer := transfer~address~uint256_COM(this, msgsender_MSG, msgvalue_MSG, to_s454, value_s454);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == to_s454 && value_s454 <= _balances_COM[this][msgsender_MSG]) && value_s454 >= 0) && value_s454 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_COM[this][to_s454] >= 0) && _balances_COM[this][to_s454] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_COM[this][msgsender_MSG] >= 0) && _balances_COM[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_COM0 := true;
[L2]                 call_transfer_COM0 := false;
[L2]                 revert := revert_hold;
[L408]               havoc __exception;
[L409]               revert := false;
[L410]   COND TRUE   __exception
[L411]               __tmp__Balance := Balance;
[L412]               __tmp__DType := DType;
[L413]               __tmp__Alloc := Alloc;
[L414]               __tmp__balance_ADDR := balance_ADDR;
[L415]               __tmp__M_Ref_int := M_Ref_int;
[L416]               __tmp__sum__balances0 := sum__balances0;
[L417]               __tmp__alloc__allowed_COM_lvl0 := alloc__allowed_COM_lvl0;
[L418]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L419]               __tmp__sum__allowed1 := sum__allowed1;
[L420]               __tmp__Length := Length;
[L421]               __tmp__now := now;
[L422]               __tmp___name_ERC20Detailed := _name_ERC20Detailed;
[L423]               __tmp___symbol_ERC20Detailed := _symbol_ERC20Detailed;
[L424]               __tmp___decimals_ERC20Detailed := _decimals_ERC20Detailed;
[L425]               __tmp___balances_COM := _balances_COM;
[L426]               __tmp___allowed_COM := _allowed_COM;
[L427]               __tmp__tokenName_COM := tokenName_COM;
[L428]               __tmp__tokenSymbol_COM := tokenSymbol_COM;
[L429]               __tmp__tokenDecimals_COM := tokenDecimals_COM;
[L430]               __tmp___totalSupply_COM := _totalSupply_COM;
[L431]               __tmp__noFee_COM := noFee_COM;
[L432]               __tmp__heightEnd20Percent_COM := heightEnd20Percent_COM;
[L433]               __tmp__heightEnd10Percent_COM := heightEnd10Percent_COM;
[L434]               __tmp__heightEnd05Percent_COM := heightEnd05Percent_COM;
[L435]   CALL        call __ret_0_ := transfer~address~uint256_COM__fail(this, msgsender_MSG, msgvalue_MSG, to_s454, value_s454);
[L1054]  COND FALSE  !(!(value_s454 <= __tmp___balances_COM[this][msgsender_MSG]))
[L1058]              __var_1 := null;
[L1059]  COND FALSE  !(!(to_s454 != null))
[L1063]  COND TRUE   value_s454 < __tmp__noFee_COM[this]
[L1064]  CALL        call _transferBurnNo~address~uint256_COM__fail(this, msgsender_MSG, msgvalue_MSG, to_s454, value_s454);
[L1216]  COND FALSE  !(!(value_s607 <= __tmp___balances_COM[this][msgsender_MSG]))
[L1220]              __var_6 := null;
[L1221]  COND FALSE  !(!(to_s607 != null))
[L1225]  COND FALSE  !(!(value_s607 < __tmp__noFee_COM[this]))
[L1229]  CALL        call __var_7 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __tmp___balances_COM[this][msgsender_MSG], value_s607);
[L911]               __ret_0_ := (a_s139 - b_s139) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1229]  RET         call __var_7 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __tmp___balances_COM[this][msgsender_MSG], value_s607);
[L1230]  COND TRUE   revert
[L1064]  RET         call _transferBurnNo~address~uint256_COM__fail(this, msgsender_MSG, msgvalue_MSG, to_s454, value_s454);
[L1065]  COND TRUE   revert
[L435]   RET         call __ret_0_ := transfer~address~uint256_COM__fail(this, msgsender_MSG, msgvalue_MSG, to_s454, value_s454);
[L436]               assume revert || gas < 0;
[L2310]  RET         call __ret_0_transfer := transfer~address~uint256_COM(this, msgsender_MSG, msgvalue_MSG, to_s454, value_s454);
[L2352]  RET         call CorralChoice_COM(this);

Loop:
[L2352]        assume true;

[2020-11-24 18:19:42,232 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 18:19:42,232 INFO  L82        PathProgramCache]: Analyzing trace with hash -1852348713, now seen corresponding path program 1 times
[2020-11-24 18:19:42,232 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 18:19:42,237 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 18:19:42,250 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 18:19:42,250 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 18:19:42,250 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [5] imperfect sequences [] total 5
[2020-11-24 18:19:42,250 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 18:19:42,250 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 5 interpolants.
[2020-11-24 18:19:42,250 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=9, Invalid=11, Unknown=0, NotChecked=0, Total=20
[2020-11-24 18:19:42,251 INFO  L87              Difference]: Start difference. First operand 324 states and 351 transitions. cyclomatic complexity: 28 Second operand 5 states.
[2020-11-24 18:19:42,273 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 18:19:42,273 INFO  L93              Difference]: Finished difference Result 319 states and 335 transitions.
[2020-11-24 18:19:42,273 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-24 18:19:42,273 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 319 states and 335 transitions.
[2020-11-24 18:19:42,274 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 2
[2020-11-24 18:19:42,275 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 319 states to 319 states and 335 transitions.
[2020-11-24 18:19:42,275 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 131
[2020-11-24 18:19:42,275 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 131
[2020-11-24 18:19:42,275 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 319 states and 335 transitions.
[2020-11-24 18:19:42,276 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 18:19:42,276 INFO  L728         BuchiCegarLoop]: Abstraction has 319 states and 335 transitions.
[2020-11-24 18:19:42,276 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 319 states and 335 transitions.
[2020-11-24 18:19:42,278 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 319 to 312.
[2020-11-24 18:19:42,278 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 312 states.
[2020-11-24 18:19:42,278 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 312 states to 312 states and 328 transitions.
[2020-11-24 18:19:42,279 INFO  L751         BuchiCegarLoop]: Abstraction has 312 states and 328 transitions.
[2020-11-24 18:19:42,279 INFO  L631         BuchiCegarLoop]: Abstraction has 312 states and 328 transitions.
[2020-11-24 18:19:42,279 INFO  L445         BuchiCegarLoop]: ======== Iteration 13============
[2020-11-24 18:19:42,279 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 312 states and 328 transitions.
[2020-11-24 18:19:42,279 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 18:19:42,279 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 18:19:42,280 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 18:19:42,280 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 18:19:42,280 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L2]                 success_transfer_COM0 := false;
[L2]                 call_transfer_COM0 := false;
[L2]     CALL        call main();
[L2347]              assume null == 0;
[L2348]  CALL        call this := FreshRefGenerator__success();
[L887]               havoc newRef;
[L888]               assume Alloc[newRef] == false;
[L889]               Alloc[newRef] := true;
[L890]               assume newRef != null;
[L2348]  RET         call this := FreshRefGenerator__success();
[L2349]              assume now >= 0;
[L2350]              assume DType[this] == COM;
[L2351]              assume !revert && gas >= 0;
[L2352]  CALL        call CorralChoice_COM(this);
[L2243]              havoc msgsender_MSG;
[L2244]              havoc msgvalue_MSG;
[L2245]              havoc choice;
[L2246]              havoc __ret_0_totalSupply;
[L2247]              havoc owner_s327;
[L2248]              havoc __ret_0_balanceOf;
[L2249]              havoc owner_s343;
[L2250]              havoc spender_s343;
[L2251]              havoc __ret_0_allowance;
[L2252]              havoc to_s454;
[L2253]              havoc value_s454;
[L2254]              havoc __ret_0_transfer;
[L2255]              havoc spender_s643;
[L2256]              havoc value_s643;
[L2257]              havoc __ret_0_approve;
[L2258]              havoc from_s702;
[L2259]              havoc to_s702;
[L2260]              havoc value_s702;
[L2261]              havoc __ret_0_transferFrom;
[L2262]              havoc name_s228;
[L2263]              havoc symbol_s228;
[L2264]              havoc decimals_s228;
[L2265]              havoc __ret_0_name;
[L2266]              havoc __ret_0_symbol;
[L2267]              havoc __ret_0_decimals;
[L2268]              havoc value_s365;
[L2269]              havoc __ret_0_findPercent;
[L2270]              havoc __ret_0_returnRate;
[L2271]              havoc spender_s956;
[L2272]              havoc addedValue_s956;
[L2273]              havoc __ret_0_increaseAllowance;
[L2274]              havoc spender_s1006;
[L2275]              havoc subtractedValue_s1006;
[L2276]              havoc __ret_0_decreaseAllowance;
[L2277]              havoc amount_s1051;
[L2278]              havoc account_s1140;
[L2279]              havoc amount_s1140;
[L2280]              havoc tmpNow;
[L2281]              havoc gas;
[L2282]              assume gas > 4000000 && gas <= 8000000;
[L2283]              tmpNow := now;
[L2284]              havoc now;
[L2285]              assume now > tmpNow;
[L2286]              assume msgsender_MSG != null;
[L2287]  COND FALSE  !(choice == 8)
[L2293]  COND FALSE  !(choice == 7)
[L2299]  COND FALSE  !(choice == 6)
[L2305]  COND TRUE   choice == 5
[L2306]              gas := gas - 21000;
[L2307]  COND TRUE   gas >= 0
[L2308]              assume value_s454 >= 0 && value_s454 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2309]              assume msgvalue_MSG == 0;
[L2310]  CALL        call __ret_0_transfer := transfer~address~uint256_COM(this, msgsender_MSG, msgvalue_MSG, to_s454, value_s454);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == to_s454 && value_s454 <= _balances_COM[this][msgsender_MSG]) && value_s454 >= 0) && value_s454 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_COM[this][to_s454] >= 0) && _balances_COM[this][to_s454] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_COM[this][msgsender_MSG] >= 0) && _balances_COM[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_COM0 := true;
[L2]                 call_transfer_COM0 := false;
[L2]                 revert := revert_hold;
[L408]               havoc __exception;
[L409]               revert := false;
[L410]   COND TRUE   __exception
[L411]               __tmp__Balance := Balance;
[L412]               __tmp__DType := DType;
[L413]               __tmp__Alloc := Alloc;
[L414]               __tmp__balance_ADDR := balance_ADDR;
[L415]               __tmp__M_Ref_int := M_Ref_int;
[L416]               __tmp__sum__balances0 := sum__balances0;
[L417]               __tmp__alloc__allowed_COM_lvl0 := alloc__allowed_COM_lvl0;
[L418]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L419]               __tmp__sum__allowed1 := sum__allowed1;
[L420]               __tmp__Length := Length;
[L421]               __tmp__now := now;
[L422]               __tmp___name_ERC20Detailed := _name_ERC20Detailed;
[L423]               __tmp___symbol_ERC20Detailed := _symbol_ERC20Detailed;
[L424]               __tmp___decimals_ERC20Detailed := _decimals_ERC20Detailed;
[L425]               __tmp___balances_COM := _balances_COM;
[L426]               __tmp___allowed_COM := _allowed_COM;
[L427]               __tmp__tokenName_COM := tokenName_COM;
[L428]               __tmp__tokenSymbol_COM := tokenSymbol_COM;
[L429]               __tmp__tokenDecimals_COM := tokenDecimals_COM;
[L430]               __tmp___totalSupply_COM := _totalSupply_COM;
[L431]               __tmp__noFee_COM := noFee_COM;
[L432]               __tmp__heightEnd20Percent_COM := heightEnd20Percent_COM;
[L433]               __tmp__heightEnd10Percent_COM := heightEnd10Percent_COM;
[L434]               __tmp__heightEnd05Percent_COM := heightEnd05Percent_COM;
[L435]   CALL        call __ret_0_ := transfer~address~uint256_COM__fail(this, msgsender_MSG, msgvalue_MSG, to_s454, value_s454);
[L1054]  COND FALSE  !(!(value_s454 <= __tmp___balances_COM[this][msgsender_MSG]))
[L1058]              __var_1 := null;
[L1059]  COND FALSE  !(!(to_s454 != null))
[L1063]  COND TRUE   value_s454 < __tmp__noFee_COM[this]
[L1064]  CALL        call _transferBurnNo~address~uint256_COM__fail(this, msgsender_MSG, msgvalue_MSG, to_s454, value_s454);
[L1216]  COND FALSE  !(!(value_s607 <= __tmp___balances_COM[this][msgsender_MSG]))
[L1220]              __var_6 := null;
[L1221]  COND FALSE  !(!(to_s607 != null))
[L1225]  COND FALSE  !(!(value_s607 < __tmp__noFee_COM[this]))
[L1229]  CALL        call __var_7 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __tmp___balances_COM[this][msgsender_MSG], value_s607);
[L911]               __ret_0_ := (a_s139 - b_s139) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1229]  RET         call __var_7 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __tmp___balances_COM[this][msgsender_MSG], value_s607);
[L1230]  COND FALSE  !(revert)
[L1233]              __tmp__sum__balances0[this] := __tmp__sum__balances0[this] - __tmp___balances_COM[this][msgsender_MSG];
[L1234]              __tmp___balances_COM[this][msgsender_MSG] := __var_7;
[L1235]              __tmp__sum__balances0[this] := __tmp__sum__balances0[this] + __tmp___balances_COM[this][msgsender_MSG];
[L1236]  CALL        call __var_8 := add~uint256~uint256_SafeMath__fail(this, this, 0, __tmp___balances_COM[this][to_s607], value_s607);
[L925]               c_s163 := (a_s163 + b_s163) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L926]               __ret_0_ := c_s163;
[L1236]  RET         call __var_8 := add~uint256~uint256_SafeMath__fail(this, this, 0, __tmp___balances_COM[this][to_s607], value_s607);
[L1237]  COND FALSE  !(revert)
[L1240]              __tmp__sum__balances0[this] := __tmp__sum__balances0[this] - __tmp___balances_COM[this][to_s607];
[L1241]              __tmp___balances_COM[this][to_s607] := __var_8;
[L1242]              __tmp__sum__balances0[this] := __tmp__sum__balances0[this] + __tmp___balances_COM[this][to_s607];
[L1064]  RET         call _transferBurnNo~address~uint256_COM__fail(this, msgsender_MSG, msgvalue_MSG, to_s454, value_s454);
[L1065]  COND FALSE  !(revert)
[L1074]              __ret_0_ := true;
[L435]   RET         call __ret_0_ := transfer~address~uint256_COM__fail(this, msgsender_MSG, msgvalue_MSG, to_s454, value_s454);
[L436]               assume revert || gas < 0;
[L2310]  RET         call __ret_0_transfer := transfer~address~uint256_COM(this, msgsender_MSG, msgvalue_MSG, to_s454, value_s454);
[L2352]  RET         call CorralChoice_COM(this);

Loop:
[L2352]        assume true;

[2020-11-24 18:19:42,282 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 18:19:42,282 INFO  L82        PathProgramCache]: Analyzing trace with hash -1995922248, now seen corresponding path program 1 times
[2020-11-24 18:19:42,283 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 18:19:42,289 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 18:19:42,313 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 18:19:42,313 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 18:19:42,313 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [6] imperfect sequences [] total 6
[2020-11-24 18:19:42,313 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 18:19:42,314 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 6 interpolants.
[2020-11-24 18:19:42,314 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=10, Invalid=20, Unknown=0, NotChecked=0, Total=30
[2020-11-24 18:19:42,314 INFO  L87              Difference]: Start difference. First operand 312 states and 328 transitions. cyclomatic complexity: 17 Second operand 6 states.
[2020-11-24 18:19:42,341 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 18:19:42,341 INFO  L93              Difference]: Finished difference Result 312 states and 327 transitions.
[2020-11-24 18:19:42,341 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 6 states. 
[2020-11-24 18:19:42,341 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 312 states and 327 transitions.
[2020-11-24 18:19:42,343 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 18:19:42,343 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 312 states to 180 states and 186 transitions.
[2020-11-24 18:19:42,343 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 103
[2020-11-24 18:19:42,343 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 103
[2020-11-24 18:19:42,343 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 180 states and 186 transitions.
[2020-11-24 18:19:42,344 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 18:19:42,344 INFO  L728         BuchiCegarLoop]: Abstraction has 180 states and 186 transitions.
[2020-11-24 18:19:42,344 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 180 states and 186 transitions.
[2020-11-24 18:19:42,345 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 180 to 180.
[2020-11-24 18:19:42,345 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 180 states.
[2020-11-24 18:19:42,345 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 180 states to 180 states and 186 transitions.
[2020-11-24 18:19:42,345 INFO  L751         BuchiCegarLoop]: Abstraction has 180 states and 186 transitions.
[2020-11-24 18:19:42,346 INFO  L631         BuchiCegarLoop]: Abstraction has 180 states and 186 transitions.
[2020-11-24 18:19:42,346 INFO  L445         BuchiCegarLoop]: ======== Iteration 14============
[2020-11-24 18:19:42,346 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 180 states and 186 transitions.
[2020-11-24 18:19:42,346 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 18:19:42,346 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 18:19:42,346 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 18:19:42,347 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 18:19:42,347 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L2]                 success_transfer_COM0 := false;
[L2]                 call_transfer_COM0 := false;
[L2]     CALL        call main();
[L2347]              assume null == 0;
[L2348]  CALL        call this := FreshRefGenerator__success();
[L887]               havoc newRef;
[L888]               assume Alloc[newRef] == false;
[L889]               Alloc[newRef] := true;
[L890]               assume newRef != null;
[L2348]  RET         call this := FreshRefGenerator__success();
[L2349]              assume now >= 0;
[L2350]              assume DType[this] == COM;
[L2351]              assume !revert && gas >= 0;
[L2352]  CALL        call CorralChoice_COM(this);
[L2243]              havoc msgsender_MSG;
[L2244]              havoc msgvalue_MSG;
[L2245]              havoc choice;
[L2246]              havoc __ret_0_totalSupply;
[L2247]              havoc owner_s327;
[L2248]              havoc __ret_0_balanceOf;
[L2249]              havoc owner_s343;
[L2250]              havoc spender_s343;
[L2251]              havoc __ret_0_allowance;
[L2252]              havoc to_s454;
[L2253]              havoc value_s454;
[L2254]              havoc __ret_0_transfer;
[L2255]              havoc spender_s643;
[L2256]              havoc value_s643;
[L2257]              havoc __ret_0_approve;
[L2258]              havoc from_s702;
[L2259]              havoc to_s702;
[L2260]              havoc value_s702;
[L2261]              havoc __ret_0_transferFrom;
[L2262]              havoc name_s228;
[L2263]              havoc symbol_s228;
[L2264]              havoc decimals_s228;
[L2265]              havoc __ret_0_name;
[L2266]              havoc __ret_0_symbol;
[L2267]              havoc __ret_0_decimals;
[L2268]              havoc value_s365;
[L2269]              havoc __ret_0_findPercent;
[L2270]              havoc __ret_0_returnRate;
[L2271]              havoc spender_s956;
[L2272]              havoc addedValue_s956;
[L2273]              havoc __ret_0_increaseAllowance;
[L2274]              havoc spender_s1006;
[L2275]              havoc subtractedValue_s1006;
[L2276]              havoc __ret_0_decreaseAllowance;
[L2277]              havoc amount_s1051;
[L2278]              havoc account_s1140;
[L2279]              havoc amount_s1140;
[L2280]              havoc tmpNow;
[L2281]              havoc gas;
[L2282]              assume gas > 4000000 && gas <= 8000000;
[L2283]              tmpNow := now;
[L2284]              havoc now;
[L2285]              assume now > tmpNow;
[L2286]              assume msgsender_MSG != null;
[L2287]  COND FALSE  !(choice == 8)
[L2293]  COND FALSE  !(choice == 7)
[L2299]  COND FALSE  !(choice == 6)
[L2305]  COND TRUE   choice == 5
[L2306]              gas := gas - 21000;
[L2307]  COND TRUE   gas >= 0
[L2308]              assume value_s454 >= 0 && value_s454 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2309]              assume msgvalue_MSG == 0;
[L2310]  CALL        call __ret_0_transfer := transfer~address~uint256_COM(this, msgsender_MSG, msgvalue_MSG, to_s454, value_s454);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == to_s454 && value_s454 <= _balances_COM[this][msgsender_MSG]) && value_s454 >= 0) && value_s454 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_COM[this][to_s454] >= 0) && _balances_COM[this][to_s454] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_COM[this][msgsender_MSG] >= 0) && _balances_COM[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_COM0 := true;
[L2]                 call_transfer_COM0 := false;
[L2]                 revert := revert_hold;
[L408]               havoc __exception;
[L409]               revert := false;
[L410]   COND FALSE  !(__exception)
[L438]   CALL        call __ret_0_ := transfer~address~uint256_COM__success(this, msgsender_MSG, msgvalue_MSG, to_s454, value_s454);
[L1081]  COND FALSE  !(!(value_s454 <= _balances_COM[this][msgsender_MSG]))
[L1085]              __var_1 := null;
[L1086]  COND FALSE  !(!(to_s454 != null))
[L1090]  COND FALSE  !(value_s454 < noFee_COM[this])
[L1096]  CALL        call _transferBurnYes~address~uint256_COM__success(this, msgsender_MSG, msgvalue_MSG, to_s454, value_s454);
[L1165]  COND FALSE  !(!(value_s545 <= _balances_COM[this][msgsender_MSG]))
[L1169]              __var_2 := null;
[L1170]  COND FALSE  !(!(to_s545 != null))
[L1174]  COND FALSE  !(!(value_s545 >= noFee_COM[this]))
[L1178]  CALL        call tokensToBurn_s545 := findPercent~uint256_COM__success(this, msgsender_MSG, msgvalue_MSG, value_s545);
[L997]   CALL        call currentRate_s365 := returnRate_COM__success(this, msgsender_MSG, msgvalue_MSG);
[L1033]  COND TRUE   now < heightEnd20Percent_COM[this]
[L1034]              __ret_0_ := 50;
[L997]   RET         call currentRate_s365 := returnRate_COM__success(this, msgsender_MSG, msgvalue_MSG);
[L998]   COND FALSE  !(revert)
[L1001]              currentRate_s365 := currentRate_s365;
[L1002]  CALL        call onePercent_s365 := div~uint256~uint256_SafeMath__success(this, this, 0, value_s365, currentRate_s365);
[L904]               c_s119 := nonlinearDiv(a_s119, b_s119) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L905]               __ret_0_ := c_s119;
[L1002]  RET         call onePercent_s365 := div~uint256~uint256_SafeMath__success(this, this, 0, value_s365, currentRate_s365);
[L1003]  COND FALSE  !(revert)
[L1006]              onePercent_s365 := onePercent_s365;
[L1007]              __ret_0_ := onePercent_s365;
[L1178]  RET         call tokensToBurn_s545 := findPercent~uint256_COM__success(this, msgsender_MSG, msgvalue_MSG, value_s545);
[L1179]  COND FALSE  !(revert)
[L1182]              tokensToBurn_s545 := tokensToBurn_s545;
[L1183]  CALL        call tokensToTransfer_s545 := sub~uint256~uint256_SafeMath__success(this, this, 0, value_s545, tokensToBurn_s545);
[L917]               assert b_s139 <= a_s139;
[L918]               __ret_0_ := (a_s139 - b_s139) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1183]  RET         call tokensToTransfer_s545 := sub~uint256~uint256_SafeMath__success(this, this, 0, value_s545, tokensToBurn_s545);
[L1184]  COND FALSE  !(revert)
[L1187]              tokensToTransfer_s545 := tokensToTransfer_s545;
[L1188]  CALL        call __var_3 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_COM[this][msgsender_MSG], value_s545);
[L917]               assert b_s139 <= a_s139;
[L918]               __ret_0_ := (a_s139 - b_s139) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1188]  RET         call __var_3 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_COM[this][msgsender_MSG], value_s545);
[L1189]  COND FALSE  !(revert)
[L1192]              sum__balances0[this] := sum__balances0[this] - _balances_COM[this][msgsender_MSG];
[L1193]              _balances_COM[this][msgsender_MSG] := __var_3;
[L1194]              sum__balances0[this] := sum__balances0[this] + _balances_COM[this][msgsender_MSG];
[L1195]  CALL        call __var_4 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_COM[this][to_s545], tokensToTransfer_s545);
[L933]               c_s163 := (a_s163 + b_s163) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L934]               assert c_s163 >= a_s163;
[L935]               __ret_0_ := c_s163;
[L1195]  RET         call __var_4 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_COM[this][to_s545], tokensToTransfer_s545);
[L1196]  COND FALSE  !(revert)
[L1199]              sum__balances0[this] := sum__balances0[this] - _balances_COM[this][to_s545];
[L1200]              _balances_COM[this][to_s545] := __var_4;
[L1201]              sum__balances0[this] := sum__balances0[this] + _balances_COM[this][to_s545];
[L1202]  CALL        call __var_5 := sub~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_COM[this], tokensToBurn_s545);
[L917]               assert b_s139 <= a_s139;
[L918]               __ret_0_ := (a_s139 - b_s139) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1202]  RET         call __var_5 := sub~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_COM[this], tokensToBurn_s545);
[L1203]  COND FALSE  !(revert)
[L1206]              _totalSupply_COM[this] := __var_5;
[L1207]              assert { :EventEmitted "Transfer_COM" } true;
[L1208]              assert { :EventEmitted "Transfer_COM" } true;
[L1096]  RET         call _transferBurnYes~address~uint256_COM__success(this, msgsender_MSG, msgvalue_MSG, to_s454, value_s454);
[L1097]  COND FALSE  !(revert)
[L1101]              __ret_0_ := true;
[L438]   RET         call __ret_0_ := transfer~address~uint256_COM__success(this, msgsender_MSG, msgvalue_MSG, to_s454, value_s454);
[L439]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !((((((__ret_0_ == true && _totalSupply_COM[this] == old(_totalSupply_COM[this])) && _balances_COM[this] == old(_balances_COM[this])) && _allowed_COM[this] == old(_allowed_COM[this])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]));
[L2]                 revert := revert_hold;
[L2310]  RET         call __ret_0_transfer := transfer~address~uint256_COM(this, msgsender_MSG, msgvalue_MSG, to_s454, value_s454);
[L2352]  RET         call CorralChoice_COM(this);

Loop:
[L2352]        assume true;

[2020-11-24 18:19:42,349 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 18:19:42,349 INFO  L82        PathProgramCache]: Analyzing trace with hash 1169187771, now seen corresponding path program 1 times
[2020-11-24 18:19:42,350 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 18:19:42,388 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 18:19:42,408 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 18:19:42,451 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 18:19:42,451 INFO  L82        PathProgramCache]: Analyzing trace with hash 8273, now seen corresponding path program 1 times
[2020-11-24 18:19:42,452 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 18:19:42,453 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 18:19:42,453 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 18:19:42,454 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 18:19:42,454 INFO  L82        PathProgramCache]: Analyzing trace with hash 1885090775, now seen corresponding path program 1 times
[2020-11-24 18:19:42,454 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 18:19:42,469 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 18:19:42,485 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
[2020-11-24 18:19:42,888 WARN  L188               SmtUtils]: Spent 306.00 ms on a formula simplification. DAG size of input: 167 DAG size of output: 166
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
[2020-11-24 18:19:43,157 WARN  L188               SmtUtils]: Spent 113.00 ms on a formula simplification. DAG size of input: 107 DAG size of output: 100
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 277 to 547
[2020-11-24 18:19:43,299 WARN  L188               SmtUtils]: Spent 107.00 ms on a formula simplification. DAG size of input: 102 DAG size of output: 97
Garbage collection #1: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #2: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #3: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #4: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #5: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
[2020-11-24 18:19:43,548 WARN  L188               SmtUtils]: Spent 203.00 ms on a formula simplification. DAG size of input: 147 DAG size of output: 131
Garbage collection #1: 41 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 41 to 79
Garbage collection #2: 79 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 79 to 157
Garbage collection #3: 157 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 157 to 313
Garbage collection #4: 313 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 313 to 619
Garbage collection #5: 619 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 619 to 1237
Garbage collection #1: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #2: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #3: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #4: 223 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 223 to 443
Garbage collection #5: 443 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 443 to 883
Garbage collection #6: 883 nodes / 0 free / 0.0s / 0.002s total
Resizing node table from 883 to 1759
[2020-11-24 18:19:43,720 WARN  L188               SmtUtils]: Spent 145.00 ms on a formula simplification. DAG size of input: 89 DAG size of output: 85
[2020-11-24 18:19:44,472 WARN  L188               SmtUtils]: Spent 750.00 ms on a formula simplification. DAG size of input: 252 DAG size of output: 242
Garbage collection #1: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #2: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #3: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #4: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #5: 1327 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 1327 to 2647
Garbage collection #6: 2647 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 2647 to 5281
[2020-11-24 18:19:44,641 WARN  L188               SmtUtils]: Spent 163.00 ms on a formula simplification that was a NOOP. DAG size: 228
[2020-11-24 18:19:45,087 WARN  L188               SmtUtils]: Spent 442.00 ms on a formula simplification. DAG size of input: 257 DAG size of output: 243
Garbage collection #1: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #2: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #3: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #4: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #5: 1327 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1327 to 2647
Garbage collection #6: 2647 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 2647 to 5281
Garbage collection #1: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #2: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #3: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #4: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #5: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
[2020-11-24 18:19:45,482 WARN  L188               SmtUtils]: Spent 287.00 ms on a formula simplification that was a NOOP. DAG size: 306
Garbage collection #1: 127 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 127 to 251
Garbage collection #2: 251 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 251 to 499
Garbage collection #3: 499 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 499 to 997
Garbage collection #4: 997 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 997 to 1993
Garbage collection #5: 1993 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1993 to 3967
Garbage collection #6: 3967 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 3967 to 7933
[2020-11-24 18:19:45,670 WARN  L188               SmtUtils]: Spent 181.00 ms on a formula simplification that was a NOOP. DAG size: 240
[2020-11-24 18:19:45,875 WARN  L188               SmtUtils]: Spent 202.00 ms on a formula simplification that was a NOOP. DAG size: 261
Garbage collection #1: 101 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 101 to 199
Garbage collection #2: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #3: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #4: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #5: 1571 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1571 to 3137
Garbage collection #6: 3137 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3137 to 6271
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 883 to 1759
[2020-11-24 18:19:46,163 WARN  L188               SmtUtils]: Spent 170.00 ms on a formula simplification that was a NOOP. DAG size: 247
Garbage collection #1: 97 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3019 to 6037
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
[2020-11-24 18:19:46,327 WARN  L188               SmtUtils]: Spent 160.00 ms on a formula simplification that was a NOOP. DAG size: 173
[2020-11-24 18:19:46,731 WARN  L188               SmtUtils]: Spent 402.00 ms on a formula simplification. DAG size of input: 249 DAG size of output: 248
Garbage collection #1: 97 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3019 to 6037
Garbage collection #1: 97 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3019 to 6037
[2020-11-24 18:19:46,929 WARN  L188               SmtUtils]: Spent 195.00 ms on a formula simplification that was a NOOP. DAG size: 244
[2020-11-24 18:19:46,945 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 18:19:46,952 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 24.11 06:19:46 BasicIcfg
[2020-11-24 18:19:46,952 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-24 18:19:46,952 INFO  L168              Benchmark]: Toolchain (without parser) took 8974.28 ms. Allocated memory was 1.0 GB in the beginning and 1.7 GB in the end (delta: 712.5 MB). Free memory was 940.6 MB in the beginning and 1.0 GB in the end (delta: -77.3 MB). Peak memory consumption was 774.1 MB. Max. memory is 15.3 GB.
[2020-11-24 18:19:46,953 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.15 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-24 18:19:46,953 INFO  L168              Benchmark]: Boogie Preprocessor took 72.23 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 935.2 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-24 18:19:46,954 INFO  L168              Benchmark]: UtopiaSpecLang took 48.46 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 929.7 MB in the end (delta: 5.5 MB). Peak memory consumption was 5.5 MB. Max. memory is 15.3 GB.
[2020-11-24 18:19:46,954 INFO  L168              Benchmark]: Boogie Printer took 10.58 ms. Allocated memory is still 1.0 GB. Free memory is still 929.7 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-24 18:19:46,954 INFO  L168              Benchmark]: RCFGBuilder took 513.90 ms. Allocated memory is still 1.0 GB. Free memory was 929.7 MB in the beginning and 865.3 MB in the end (delta: 64.4 MB). Peak memory consumption was 64.4 MB. Max. memory is 15.3 GB.
[2020-11-24 18:19:46,955 INFO  L168              Benchmark]: UtopiaLTL2Aut took 37.13 ms. Allocated memory is still 1.0 GB. Free memory was 865.3 MB in the beginning and 861.7 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
[2020-11-24 18:19:46,955 INFO  L168              Benchmark]: BÃ¼chi Program Product took 933.64 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 56.1 MB). Free memory was 861.7 MB in the beginning and 868.7 MB in the end (delta: -7.0 MB). Peak memory consumption was 146.9 MB. Max. memory is 15.3 GB.
[2020-11-24 18:19:46,956 INFO  L168              Benchmark]: BlockEncodingV2 took 88.71 ms. Allocated memory is still 1.1 GB. Free memory was 865.3 MB in the beginning and 830.9 MB in the end (delta: 34.4 MB). Peak memory consumption was 34.4 MB. Max. memory is 15.3 GB.
[2020-11-24 18:19:46,956 INFO  L168              Benchmark]: BuchiAutomizer took 7266.92 ms. Allocated memory was 1.1 GB in the beginning and 1.7 GB in the end (delta: 656.4 MB). Free memory was 830.9 MB in the beginning and 1.0 GB in the end (delta: -187.0 MB). Peak memory consumption was 608.3 MB. Max. memory is 15.3 GB.
[2020-11-24 18:19:46,959 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    2166 locations, 3785 edges
  - StatisticsResult: Encoded RCFG
    2132 locations, 3700 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.15 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 72.23 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 935.2 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 48.46 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 929.7 MB in the end (delta: 5.5 MB). Peak memory consumption was 5.5 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 10.58 ms. Allocated memory is still 1.0 GB. Free memory is still 929.7 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * RCFGBuilder took 513.90 ms. Allocated memory is still 1.0 GB. Free memory was 929.7 MB in the beginning and 865.3 MB in the end (delta: 64.4 MB). Peak memory consumption was 64.4 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 37.13 ms. Allocated memory is still 1.0 GB. Free memory was 865.3 MB in the beginning and 861.7 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 933.64 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 56.1 MB). Free memory was 861.7 MB in the beginning and 868.7 MB in the end (delta: -7.0 MB). Peak memory consumption was 146.9 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 88.71 ms. Allocated memory is still 1.1 GB. Free memory was 865.3 MB in the beginning and 830.9 MB in the end (delta: 34.4 MB). Peak memory consumption was 34.4 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 7266.92 ms. Allocated memory was 1.1 GB in the beginning and 1.7 GB in the end (delta: 656.4 MB). Free memory was 830.9 MB in the beginning and 1.0 GB in the end (delta: -187.0 MB). Peak memory consumption was 608.3 MB. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    915 locations, 1178 edges
  - StatisticsResult: BuchiProgram size
    2166 locations, 3785 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 13 terminating modules (13 trivial, 0 deterministic, 0 nondeterministic) and one nonterminating remainder module.13 modules have a trivial ranking function, the largest among these consists of 17 locations. The remainder module has 180 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 7.2s and 14 iterations.  TraceHistogramMax:3. Analysis of lassos took 5.4s. Construction of modules took 0.8s. BÃ¼chi inclusion checks took 0.5s. Highest rank in rank-based complementation 0. Minimization of det autom 13. Minimization of nondet autom 0. Automata minimization 0.0s AutomataMinimizationTime, 13 MinimizatonAttempts, 86 StatesRemovedByMinimization, 8 NontrivialMinimizations. Non-live state removal took 0.0s Buchi closure took 0.0s. Biggest automaton had 357 states and ocurred in iteration 2.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 5645 SDtfs, 3564 SDslu, 11569 SDs, 0 SdLazy, 4858 SolverSat, 1143 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 0.8s Time	LassoAnalysisResults: nont1 unkn0 SFLI0 SFLT0 conc0 concLT0 SILN0 SILU13 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - TransactionCounterexample: Violation of LTL property LTL
    Found an infinite, lasso-shaped execution that violates the LTL property LTL.
Stem:
COM(231584178474632390847141970017375815706539969331281128078915168015826259279872).transfer~address~uint256.gas(3979001)({from : 231584178474632390847141970017375815706539969331281128078915168015826259279873, to : 231584178474632390847141970017375815706539969331281128078915168015826259279873, value : 115792089237316195423570985008687907853269984665640564039457584007913129639935});
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == to_s454 && value_s454 <= _balances_COM[this][msgsender_MSG]) && value_s454 >= 0) && value_s454 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_COM[this][to_s454] >= 0) && _balances_COM[this][to_s454] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_COM[this][msgsender_MSG] >= 0) && _balances_COM[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_COM0 := true;
[L2]                 call_transfer_COM0 := false;
[L2]                 revert := revert_hold;
[L408]               havoc __exception;
[L409]               revert := false;
[L410]   COND FALSE  !(__exception)
[L438]   CALL        call __ret_0_ := transfer~address~uint256_COM__success(this, msgsender_MSG, msgvalue_MSG, to_s454, value_s454);
[L1081]  COND FALSE  !(!(value_s454 <= _balances_COM[this][msgsender_MSG]))
[L1085]              __var_1 := null;
[L1086]  COND FALSE  !(!(to_s454 != null))
[L1090]  COND FALSE  !(value_s454 < noFee_COM[this])
[L1096]  CALL        call _transferBurnYes~address~uint256_COM__success(this, msgsender_MSG, msgvalue_MSG, to_s454, value_s454);
[L1165]  COND FALSE  !(!(value_s545 <= _balances_COM[this][msgsender_MSG]))
[L1169]              __var_2 := null;
[L1170]  COND FALSE  !(!(to_s545 != null))
[L1174]  COND FALSE  !(!(value_s545 >= noFee_COM[this]))
[L1178]  CALL        call tokensToBurn_s545 := findPercent~uint256_COM__success(this, msgsender_MSG, msgvalue_MSG, value_s545);
[L997]   CALL        call currentRate_s365 := returnRate_COM__success(this, msgsender_MSG, msgvalue_MSG);
[L1033]  COND TRUE   now < heightEnd20Percent_COM[this]
[L1034]              __ret_0_ := 50;
[L997]   RET         call currentRate_s365 := returnRate_COM__success(this, msgsender_MSG, msgvalue_MSG);
[L998]   COND FALSE  !(revert)
[L1001]              currentRate_s365 := currentRate_s365;
[L1002]  CALL        call onePercent_s365 := div~uint256~uint256_SafeMath__success(this, this, 0, value_s365, currentRate_s365);
[L904]               c_s119 := nonlinearDiv(a_s119, b_s119) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L905]               __ret_0_ := c_s119;
[L1002]  RET         call onePercent_s365 := div~uint256~uint256_SafeMath__success(this, this, 0, value_s365, currentRate_s365);
[L1003]  COND FALSE  !(revert)
[L1006]              onePercent_s365 := onePercent_s365;
[L1007]              __ret_0_ := onePercent_s365;
[L1178]  RET         call tokensToBurn_s545 := findPercent~uint256_COM__success(this, msgsender_MSG, msgvalue_MSG, value_s545);
[L1179]  COND FALSE  !(revert)
[L1182]              tokensToBurn_s545 := tokensToBurn_s545;
[L1183]  CALL        call tokensToTransfer_s545 := sub~uint256~uint256_SafeMath__success(this, this, 0, value_s545, tokensToBurn_s545);
[L917]               assert b_s139 <= a_s139;
[L918]               __ret_0_ := (a_s139 - b_s139) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1183]  RET         call tokensToTransfer_s545 := sub~uint256~uint256_SafeMath__success(this, this, 0, value_s545, tokensToBurn_s545);
[L1184]  COND FALSE  !(revert)
[L1187]              tokensToTransfer_s545 := tokensToTransfer_s545;
[L1188]  CALL        call __var_3 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_COM[this][msgsender_MSG], value_s545);
[L917]               assert b_s139 <= a_s139;
[L918]               __ret_0_ := (a_s139 - b_s139) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1188]  RET         call __var_3 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_COM[this][msgsender_MSG], value_s545);
[L1189]  COND FALSE  !(revert)
[L1192]              sum__balances0[this] := sum__balances0[this] - _balances_COM[this][msgsender_MSG];
[L1193]              _balances_COM[this][msgsender_MSG] := __var_3;
[L1194]              sum__balances0[this] := sum__balances0[this] + _balances_COM[this][msgsender_MSG];
[L1195]  CALL        call __var_4 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_COM[this][to_s545], tokensToTransfer_s545);
[L933]               c_s163 := (a_s163 + b_s163) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L934]               assert c_s163 >= a_s163;
[L935]               __ret_0_ := c_s163;
[L1195]  RET         call __var_4 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_COM[this][to_s545], tokensToTransfer_s545);
[L1196]  COND FALSE  !(revert)
[L1199]              sum__balances0[this] := sum__balances0[this] - _balances_COM[this][to_s545];
[L1200]              _balances_COM[this][to_s545] := __var_4;
[L1201]              sum__balances0[this] := sum__balances0[this] + _balances_COM[this][to_s545];
[L1202]  CALL        call __var_5 := sub~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_COM[this], tokensToBurn_s545);
[L917]               assert b_s139 <= a_s139;
[L918]               __ret_0_ := (a_s139 - b_s139) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1202]  RET         call __var_5 := sub~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_COM[this], tokensToBurn_s545);
[L1203]  COND FALSE  !(revert)
[L1206]              _totalSupply_COM[this] := __var_5;
[L1207]              assert { :EventEmitted "Transfer_COM" } true;
[L1208]              assert { :EventEmitted "Transfer_COM" } true;
[L1096]  RET         call _transferBurnYes~address~uint256_COM__success(this, msgsender_MSG, msgvalue_MSG, to_s454, value_s454);
[L1097]  COND FALSE  !(revert)
[L1101]              __ret_0_ := true;
[L438]   RET         call __ret_0_ := transfer~address~uint256_COM__success(this, msgsender_MSG, msgvalue_MSG, to_s454, value_s454);
[L439]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !((((((__ret_0_ == true && _totalSupply_COM[this] == old(_totalSupply_COM[this])) && _balances_COM[this] == old(_balances_COM[this])) && _allowed_COM[this] == old(_allowed_COM[this])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]));
[L2]                 revert := revert_hold;
[L2310]  RET         call __ret_0_transfer := transfer~address~uint256_COM(this, msgsender_MSG, msgvalue_MSG, to_s454, value_s454);

Loop:

End of lasso representation.
RESULT: Ultimate could not prove your program: Toolchain returned no result.
Received shutdown request...
