This is Ultimate 0.1.24-f1553f5-m
[2020-11-24 15:04:35,418 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-24 15:04:35,419 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-24 15:04:35,429 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-24 15:04:35,429 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-24 15:04:35,430 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-24 15:04:35,431 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-24 15:04:35,432 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-24 15:04:35,434 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-24 15:04:35,434 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-24 15:04:35,435 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-24 15:04:35,435 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-24 15:04:35,436 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-24 15:04:35,437 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-24 15:04:35,437 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-24 15:04:35,438 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-24 15:04:35,438 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-24 15:04:35,439 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-24 15:04:35,441 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-24 15:04:35,442 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-24 15:04:35,443 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-24 15:04:35,444 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-24 15:04:35,445 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-24 15:04:35,445 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-24 15:04:35,445 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-24 15:04:35,446 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-24 15:04:35,446 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-24 15:04:35,447 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-24 15:04:35,447 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-24 15:04:35,447 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-24 15:04:35,448 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-24 15:04:35,448 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-24 15:04:35,449 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-24 15:04:35,449 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-24 15:04:35,450 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-24 15:04:35,450 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-24 15:04:35,450 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-24 15:04:35,450 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-24 15:04:35,451 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-24 15:04:35,451 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-24 15:04:35,452 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-24 15:04:35,452 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-24 15:04:35,460 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-24 15:04:35,460 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-24 15:04:35,461 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-24 15:04:35,461 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-24 15:04:35,461 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-24 15:04:35,461 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-24 15:04:35,461 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-24 15:04:35,461 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-24 15:04:35,461 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-24 15:04:35,461 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-24 15:04:35,461 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-24 15:04:35,462 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-24 15:04:35,462 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-24 15:04:35,462 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-24 15:04:35,462 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-24 15:04:35,462 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-24 15:04:35,462 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-24 15:04:35,462 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-24 15:04:35,462 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-24 15:04:35,462 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-24 15:04:35,462 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-24 15:04:35,463 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-24 15:04:35,463 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-24 15:04:35,463 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-24 15:04:35,463 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-24 15:04:35,463 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-24 15:04:35,483 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-24 15:04:35,494 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-24 15:04:35,497 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-24 15:04:35,498 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-24 15:04:35,498 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-24 15:04:35,499 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/Litecoin_SV_0xee059f0ca1507e4e20c689b20cff71b5e924f7bd_transferfrom-self.bpl
[2020-11-24 15:04:35,499 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/Litecoin_SV_0xee059f0ca1507e4e20c689b20cff71b5e924f7bd_transferfrom-self.bpl'
[2020-11-24 15:04:35,558 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-24 15:04:35,559 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-24 15:04:35,560 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-24 15:04:35,560 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-24 15:04:35,560 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-24 15:04:35,576 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "Litecoin_SV_0xee059f0ca1507e4e20c689b20cff71b5e924f7bd_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 03:04:35" (1/1) ...
[2020-11-24 15:04:35,577 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "Litecoin_SV_0xee059f0ca1507e4e20c689b20cff71b5e924f7bd_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 03:04:35" (1/1) ...
[2020-11-24 15:04:35,599 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "Litecoin_SV_0xee059f0ca1507e4e20c689b20cff71b5e924f7bd_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 03:04:35" (1/1) ...
[2020-11-24 15:04:35,599 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "Litecoin_SV_0xee059f0ca1507e4e20c689b20cff71b5e924f7bd_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 03:04:35" (1/1) ...
[2020-11-24 15:04:35,615 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "Litecoin_SV_0xee059f0ca1507e4e20c689b20cff71b5e924f7bd_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 03:04:35" (1/1) ...
[2020-11-24 15:04:35,625 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "Litecoin_SV_0xee059f0ca1507e4e20c689b20cff71b5e924f7bd_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 03:04:35" (1/1) ...
[2020-11-24 15:04:35,630 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "Litecoin_SV_0xee059f0ca1507e4e20c689b20cff71b5e924f7bd_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 03:04:35" (1/1) ...
[2020-11-24 15:04:35,636 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-24 15:04:35,637 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-24 15:04:35,637 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-24 15:04:35,639 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-24 15:04:35,643 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "Litecoin_SV_0xee059f0ca1507e4e20c689b20cff71b5e924f7bd_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 03:04:35" (1/1) ...
[2020-11-24 15:04:35,657 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(Litecoin_SV.transferFrom(from, to, value), (p1 != from || p2 != msg.sender) && from == to && value <= balances_Litecoin_SV[this][from] && value <= allowed_Litecoin_SV[this][from][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_Litecoin_SV[this][to] >= 0 && balances_Litecoin_SV[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_Litecoin_SV[this][from] >= 0 &&  balances_Litecoin_SV[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && allowed_Litecoin_SV[this][from][msg.sender] >= 0 && allowed_Litecoin_SV[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(Litecoin_SV.transferFrom(from, to, value), return == true && allowed_Litecoin_SV[this][from][msg.sender] == old(allowed_Litecoin_SV[this][from][msg.sender]) - value && _totalSupply_Litecoin_SV[this] == old(_totalSupply_Litecoin_SV[this]) && balances_Litecoin_SV[this] == old(balances_Litecoin_SV[this]) && allowed_Litecoin_SV[this][p1][p2] == old(allowed_Litecoin_SV[this][p1][p2]) && businessName_Litecoin_SV[this] == old(businessName_Litecoin_SV[this]) && businessCountry_Litecoin_SV[this] == old(businessCountry_Litecoin_SV[this]) && symbol_Litecoin_SV[this] == old(symbol_Litecoin_SV[this]) && name_Litecoin_SV[this] == old(name_Litecoin_SV[this]) && decimals_Litecoin_SV[this] == old(decimals_Litecoin_SV[this]) && owner_Owned[this] == old(owner_Owned[this]) && newOwner_Owned[this] == old(newOwner_Owned[this]))))
[2020-11-24 15:04:35,662 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(Litecoin_SV.transferFrom(from, to, value), (p1 != from || p2 != msg.sender) && from == to && value <= balances_Litecoin_SV[this][from] && value <= allowed_Litecoin_SV[this][from][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_Litecoin_SV[this][to] >= 0 && balances_Litecoin_SV[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_Litecoin_SV[this][from] >= 0 &&  balances_Litecoin_SV[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && allowed_Litecoin_SV[this][from][msg.sender] >= 0 && allowed_Litecoin_SV[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(Litecoin_SV.transferFrom(from, to, value), return == true && allowed_Litecoin_SV[this][from][msg.sender] == old(allowed_Litecoin_SV[this][from][msg.sender]) - value && _totalSupply_Litecoin_SV[this] == old(_totalSupply_Litecoin_SV[this]) && balances_Litecoin_SV[this] == old(balances_Litecoin_SV[this]) && allowed_Litecoin_SV[this][p1][p2] == old(allowed_Litecoin_SV[this][p1][p2]) && businessName_Litecoin_SV[this] == old(businessName_Litecoin_SV[this]) && businessCountry_Litecoin_SV[this] == old(businessCountry_Litecoin_SV[this]) && symbol_Litecoin_SV[this] == old(symbol_Litecoin_SV[this]) && name_Litecoin_SV[this] == old(name_Litecoin_SV[this]) && decimals_Litecoin_SV[this] == old(decimals_Litecoin_SV[this]) && owner_Owned[this] == old(owner_Owned[this]) && newOwner_Owned[this] == old(newOwner_Owned[this]))))
[2020-11-24 15:04:35,670 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(Litecoin_SV.transferFrom(from, to, value), (p1 != from || p2 != msg.sender) && from == to && value <= balances_Litecoin_SV[this][from] && value <= allowed_Litecoin_SV[this][from][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_Litecoin_SV[this][to] >= 0 && balances_Litecoin_SV[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_Litecoin_SV[this][from] >= 0 &&  balances_Litecoin_SV[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && allowed_Litecoin_SV[this][from][msg.sender] >= 0 && allowed_Litecoin_SV[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(Litecoin_SV.transferFrom(from, to, value), return == true && allowed_Litecoin_SV[this][from][msg.sender] == old(allowed_Litecoin_SV[this][from][msg.sender]) - value && _totalSupply_Litecoin_SV[this] == old(_totalSupply_Litecoin_SV[this]) && balances_Litecoin_SV[this] == old(balances_Litecoin_SV[this]) && allowed_Litecoin_SV[this][p1][p2] == old(allowed_Litecoin_SV[this][p1][p2]) && businessName_Litecoin_SV[this] == old(businessName_Litecoin_SV[this]) && businessCountry_Litecoin_SV[this] == old(businessCountry_Litecoin_SV[this]) && symbol_Litecoin_SV[this] == old(symbol_Litecoin_SV[this]) && name_Litecoin_SV[this] == old(name_Litecoin_SV[this]) && decimals_Litecoin_SV[this] == old(decimals_Litecoin_SV[this]) && owner_Owned[this] == old(owner_Owned[this]) && newOwner_Owned[this] == old(newOwner_Owned[this]))))
[2020-11-24 15:04:35,676 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( ( ( ( ( p1!=from_s470 || p2!=msg.sender ) && from_s470==to_s470 ) && tokens_s470<=balances_Litecoin_SV[this][from_s470] ) && tokens_s470<=allowed_Litecoin_SV[this][from_s470][msg.sender] ) && tokens_s470>=0 ) && tokens_s470<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && balances_Litecoin_SV[this][to_s470]>=0 ) && balances_Litecoin_SV[this][to_s470]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && balances_Litecoin_SV[this][from_s470]>=0 ) && balances_Litecoin_SV[this][from_s470]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && allowed_Litecoin_SV[this][from_s470][msg.sender]>=0 ) && allowed_Litecoin_SV[this][from_s470][msg.sender]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICOR,BinaryExpression[COMPNEQ,IdentifierExpression[p1,GLOBAL],IdentifierExpression[from_s470,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Litecoin_SV>]],BinaryExpression[COMPNEQ,IdentifierExpression[p2,GLOBAL],IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Litecoin_SV>]]],BinaryExpression[COMPEQ,IdentifierExpression[from_s470,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Litecoin_SV>],IdentifierExpression[to_s470,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Litecoin_SV>]]],BinaryExpression[COMPLEQ,IdentifierExpression[tokens_s470,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Litecoin_SV>],ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_Litecoin_SV,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Litecoin_SV>]]],[IdentifierExpression[from_s470,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Litecoin_SV>]]]]],BinaryExpression[COMPLEQ,IdentifierExpression[tokens_s470,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Litecoin_SV>],ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowed_Litecoin_SV,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Litecoin_SV>]]],[IdentifierExpression[from_s470,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Litecoin_SV>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Litecoin_SV>]]]]],BinaryExpression[COMPGEQ,IdentifierExpression[tokens_s470,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Litecoin_SV>],IntegerLiteral[0]]],BinaryExpression[COMPLT,IdentifierExpression[tokens_s470,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Litecoin_SV>],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_Litecoin_SV,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Litecoin_SV>]]],[IdentifierExpression[to_s470,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Litecoin_SV>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_Litecoin_SV,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Litecoin_SV>]]],[IdentifierExpression[to_s470,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Litecoin_SV>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_Litecoin_SV,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Litecoin_SV>]]],[IdentifierExpression[from_s470,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Litecoin_SV>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_Litecoin_SV,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Litecoin_SV>]]],[IdentifierExpression[from_s470,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Litecoin_SV>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowed_Litecoin_SV,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Litecoin_SV>]]],[IdentifierExpression[from_s470,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Litecoin_SV>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Litecoin_SV>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowed_Litecoin_SV,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Litecoin_SV>]]],[IdentifierExpression[from_s470,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Litecoin_SV>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Litecoin_SV>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]]
[2020-11-24 15:04:35,680 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( ( ( ( success_s470==true && allowed_Litecoin_SV[this][from_s470][msg.sender]==( ( old(allowed_Litecoin_SV[this][from_s470][msg.sender]) ) - tokens_s470 ) ) && _totalSupply_Litecoin_SV[this]==( old(_totalSupply_Litecoin_SV[this]) ) ) && balances_Litecoin_SV[this]==( old(balances_Litecoin_SV[this]) ) ) && allowed_Litecoin_SV[this][p1][p2]==( old(allowed_Litecoin_SV[this][p1][p2]) ) ) && businessName_Litecoin_SV[this]==( old(businessName_Litecoin_SV[this]) ) ) && businessCountry_Litecoin_SV[this]==( old(businessCountry_Litecoin_SV[this]) ) ) && symbol_Litecoin_SV[this]==( old(symbol_Litecoin_SV[this]) ) ) && name_Litecoin_SV[this]==( old(name_Litecoin_SV[this]) ) ) && decimals_Litecoin_SV[this]==( old(decimals_Litecoin_SV[this]) ) ) && owner_Owned[this]==( old(owner_Owned[this]) ) ) && newOwner_Owned[this]==( old(newOwner_Owned[this]) ) ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[success_s470,<IMPLEMENTATION_OUTPARAM,transferFrom~address~address~uint256_Litecoin_SV>],BooleanLiteral[true]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowed_Litecoin_SV,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Litecoin_SV>]]],[IdentifierExpression[from_s470,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Litecoin_SV>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Litecoin_SV>]]],BinaryExpression[ARITHMINUS,UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowed_Litecoin_SV,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Litecoin_SV>]]],[IdentifierExpression[from_s470,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Litecoin_SV>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Litecoin_SV>]]]],IdentifierExpression[tokens_s470,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Litecoin_SV>]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_totalSupply_Litecoin_SV,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Litecoin_SV>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_totalSupply_Litecoin_SV,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Litecoin_SV>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[balances_Litecoin_SV,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Litecoin_SV>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[balances_Litecoin_SV,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Litecoin_SV>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowed_Litecoin_SV,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Litecoin_SV>]]],[IdentifierExpression[p1,GLOBAL]]],[IdentifierExpression[p2,GLOBAL]]],UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowed_Litecoin_SV,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Litecoin_SV>]]],[IdentifierExpression[p1,GLOBAL]]],[IdentifierExpression[p2,GLOBAL]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[businessName_Litecoin_SV,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Litecoin_SV>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[businessName_Litecoin_SV,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Litecoin_SV>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[businessCountry_Litecoin_SV,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Litecoin_SV>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[businessCountry_Litecoin_SV,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Litecoin_SV>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[symbol_Litecoin_SV,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Litecoin_SV>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[symbol_Litecoin_SV,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Litecoin_SV>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[name_Litecoin_SV,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Litecoin_SV>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[name_Litecoin_SV,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Litecoin_SV>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[decimals_Litecoin_SV,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Litecoin_SV>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[decimals_Litecoin_SV,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Litecoin_SV>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[owner_Owned,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Litecoin_SV>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[owner_Owned,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Litecoin_SV>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[newOwner_Owned,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Litecoin_SV>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[newOwner_Owned,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Litecoin_SV>]]]]]]
[2020-11-24 15:04:35,683 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(Litecoin_SV.transferFrom(from, to, value), (p1 != from || p2 != msg.sender) && from == to && value <= balances_Litecoin_SV[this][from] && value <= allowed_Litecoin_SV[this][from][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_Litecoin_SV[this][to] >= 0 && balances_Litecoin_SV[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_Litecoin_SV[this][from] >= 0 &&  balances_Litecoin_SV[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && allowed_Litecoin_SV[this][from][msg.sender] >= 0 && allowed_Litecoin_SV[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(Litecoin_SV.transferFrom(from, to, value), return == true && allowed_Litecoin_SV[this][from][msg.sender] == old(allowed_Litecoin_SV[this][from][msg.sender]) - value && _totalSupply_Litecoin_SV[this] == old(_totalSupply_Litecoin_SV[this]) && balances_Litecoin_SV[this] == old(balances_Litecoin_SV[this]) && allowed_Litecoin_SV[this][p1][p2] == old(allowed_Litecoin_SV[this][p1][p2]) && businessName_Litecoin_SV[this] == old(businessName_Litecoin_SV[this]) && businessCountry_Litecoin_SV[this] == old(businessCountry_Litecoin_SV[this]) && symbol_Litecoin_SV[this] == old(symbol_Litecoin_SV[this]) && name_Litecoin_SV[this] == old(name_Litecoin_SV[this]) && decimals_Litecoin_SV[this] == old(decimals_Litecoin_SV[this]) && owner_Owned[this] == old(owner_Owned[this]) && newOwner_Owned[this] == old(newOwner_Owned[this]))))
[2020-11-24 15:04:35,683 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_transferFrom_Litecoin_SV0) ==> ( <>AP(success_transferFrom_Litecoin_SV0) ) ) )
Executed UtopiaSpecLang
[2020-11-24 15:04:35,690 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 03:04:35 PropertyContainer
[2020-11-24 15:04:35,690 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-24 15:04:35,691 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-24 15:04:35,691 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-24 15:04:35,691 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-24 15:04:35,691 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Litecoin_SV_0xee059f0ca1507e4e20c689b20cff71b5e924f7bd_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 03:04:35" (1/2) ...
[2020-11-24 15:04:35,692 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-24 15:04:35,692 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-24 15:04:35,701 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 03:04:35" (2/2) ...
[2020-11-24 15:04:35,701 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-24 15:04:35,701 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-24 15:04:35,701 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-24 15:04:35,701 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-24 15:04:35,702 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Litecoin_SV_0xee059f0ca1507e4e20c689b20cff71b5e924f7bd_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 03:04:35" (1/2) ...
[2020-11-24 15:04:35,760 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-24 15:04:35,760 INFO  L130     BoogieDeclarations]: Found specification of procedure safeAdd~uint256~uint256_SafeMath
[2020-11-24 15:04:35,760 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeAdd~uint256~uint256_SafeMath
[2020-11-24 15:04:35,760 INFO  L130     BoogieDeclarations]: Found specification of procedure safeSub~uint256~uint256_SafeMath
[2020-11-24 15:04:35,760 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeSub~uint256~uint256_SafeMath
[2020-11-24 15:04:35,760 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_Litecoin_SV
[2020-11-24 15:04:35,760 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_Litecoin_SV
[2020-11-24 15:04:35,760 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_Litecoin_SV
[2020-11-24 15:04:35,760 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_Litecoin_SV
[2020-11-24 15:04:35,761 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_Litecoin_SV
[2020-11-24 15:04:35,761 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_Litecoin_SV
[2020-11-24 15:04:35,761 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_Litecoin_SV
[2020-11-24 15:04:35,761 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_Litecoin_SV
[2020-11-24 15:04:35,761 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_Litecoin_SV
[2020-11-24 15:04:35,761 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_Litecoin_SV
[2020-11-24 15:04:35,761 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_Litecoin_SV
[2020-11-24 15:04:35,761 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_Litecoin_SV
[2020-11-24 15:04:35,761 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-24 15:04:35,761 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-24 15:04:35,762 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-24 15:04:35,762 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__success
[2020-11-24 15:04:35,762 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_SafeMath
[2020-11-24 15:04:35,762 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_SafeMath
[2020-11-24 15:04:35,762 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20Interface
[2020-11-24 15:04:35,762 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20Interface
[2020-11-24 15:04:35,762 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ApproveAndCallFallBack
[2020-11-24 15:04:35,762 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ApproveAndCallFallBack
[2020-11-24 15:04:35,762 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_Owned
[2020-11-24 15:04:35,763 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_Owned
[2020-11-24 15:04:35,763 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_Litecoin_SV
[2020-11-24 15:04:35,763 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-24 15:04:35,763 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-24 15:04:35,763 INFO  L130     BoogieDeclarations]: Found specification of procedure safeAdd~uint256~uint256_SafeMath__success
[2020-11-24 15:04:35,763 INFO  L130     BoogieDeclarations]: Found specification of procedure safeAdd~uint256~uint256_SafeMath__fail
[2020-11-24 15:04:35,763 INFO  L130     BoogieDeclarations]: Found specification of procedure safeSub~uint256~uint256_SafeMath__success
[2020-11-24 15:04:35,763 INFO  L130     BoogieDeclarations]: Found specification of procedure safeSub~uint256~uint256_SafeMath__fail
[2020-11-24 15:04:35,763 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_Litecoin_SV__success
[2020-11-24 15:04:35,763 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_Litecoin_SV__fail
[2020-11-24 15:04:35,763 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_Litecoin_SV__success
[2020-11-24 15:04:35,764 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_Litecoin_SV__fail
[2020-11-24 15:04:35,764 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_Litecoin_SV__success
[2020-11-24 15:04:35,764 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_Litecoin_SV__fail
[2020-11-24 15:04:35,764 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_Litecoin_SV__success
[2020-11-24 15:04:35,764 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_Litecoin_SV__fail
[2020-11-24 15:04:35,764 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_Litecoin_SV__success
[2020-11-24 15:04:35,764 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_Litecoin_SV__fail
[2020-11-24 15:04:35,764 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_Litecoin_SV__success
[2020-11-24 15:04:35,764 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_Litecoin_SV__fail
[2020-11-24 15:04:35,764 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-24 15:04:35,764 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-24 15:04:35,764 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-24 15:04:35,765 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__fail
[2020-11-24 15:04:35,765 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-24 15:04:35,765 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-24 15:04:35,765 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeAdd~uint256~uint256_SafeMath__fail
[2020-11-24 15:04:35,765 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeAdd~uint256~uint256_SafeMath__success
[2020-11-24 15:04:35,765 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeSub~uint256~uint256_SafeMath__fail
[2020-11-24 15:04:35,765 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeSub~uint256~uint256_SafeMath__success
[2020-11-24 15:04:35,765 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_Litecoin_SV__fail
[2020-11-24 15:04:35,765 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_Litecoin_SV__success
[2020-11-24 15:04:35,765 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_Litecoin_SV__fail
[2020-11-24 15:04:35,765 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_Litecoin_SV__success
[2020-11-24 15:04:35,765 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_Litecoin_SV__fail
[2020-11-24 15:04:35,766 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_Litecoin_SV__success
[2020-11-24 15:04:35,766 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_Litecoin_SV__fail
[2020-11-24 15:04:35,766 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_Litecoin_SV__success
[2020-11-24 15:04:35,766 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_Litecoin_SV__fail
[2020-11-24 15:04:35,766 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_Litecoin_SV__success
[2020-11-24 15:04:35,766 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_Litecoin_SV__fail
[2020-11-24 15:04:35,766 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_Litecoin_SV__success
[2020-11-24 15:04:35,766 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-24 15:04:35,766 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-24 15:04:35,766 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-24 15:04:35,766 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-24 15:04:35,767 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-24 15:04:35,767 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-24 15:04:35,767 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__fail
[2020-11-24 15:04:35,767 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__success
[2020-11-24 15:04:35,767 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_SafeMath
[2020-11-24 15:04:35,767 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_SafeMath
[2020-11-24 15:04:35,767 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20Interface
[2020-11-24 15:04:35,767 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20Interface
[2020-11-24 15:04:35,767 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ApproveAndCallFallBack
[2020-11-24 15:04:35,767 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ApproveAndCallFallBack
[2020-11-24 15:04:35,767 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_Owned
[2020-11-24 15:04:35,768 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_Owned
[2020-11-24 15:04:35,768 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_Litecoin_SV
[2020-11-24 15:04:35,768 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-24 15:04:35,768 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-24 15:04:35,768 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-24 15:04:35,980 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 15:04:36,070 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 15:04:36,070 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 15:04:36,071 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 15:04:36,246 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-24 15:04:36,247 INFO  L286             CfgBuilder]: Removed 5 assue(true) statements.
[2020-11-24 15:04:36,248 INFO  L202        PluginConnector]: Adding new model Litecoin_SV_0xee059f0ca1507e4e20c689b20cff71b5e924f7bd_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 03:04:36 BoogieIcfgContainer
[2020-11-24 15:04:36,248 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 03:04:35" (2/2) ...
[2020-11-24 15:04:36,248 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-24 15:04:36,249 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@1a66a8fd and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 03:04:36, skipping insertion in model container
[2020-11-24 15:04:36,249 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-24 15:04:36,249 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-24 15:04:36,249 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-24 15:04:36,251 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-24 15:04:36,251 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Litecoin_SV_0xee059f0ca1507e4e20c689b20cff71b5e924f7bd_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 03:04:35" (1/3) ...
[2020-11-24 15:04:36,252 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@22b5b0cd and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 03:04:36, skipping insertion in model container
[2020-11-24 15:04:36,252 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 03:04:35" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-24 15:04:36,289 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 03:04:36 NWAContainer
[2020-11-24 15:04:36,289 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-24 15:04:36,289 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-24 15:04:36,289 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-24 15:04:36,290 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-24 15:04:36,291 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Litecoin_SV_0xee059f0ca1507e4e20c689b20cff71b5e924f7bd_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 03:04:36" (3/4) ...
[2020-11-24 15:04:36,292 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@278cc161 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 03:04:36, skipping insertion in model container
[2020-11-24 15:04:36,292 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 03:04:36" (4/4) ...
[2020-11-24 15:04:36,295 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-24 15:04:36,297 INFO  L110   BuchiProductObserver]: Initial RCFG 707 locations, 862 edges
[2020-11-24 15:04:36,298 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-24 15:04:36,308 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-24 15:04:37,234 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-24 15:04:37,236 INFO  L110   BuchiProductObserver]: BuchiProgram size 1636 locations, 2775 edges
[2020-11-24 15:04:37,237 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 03:04:37 BoogieIcfgContainer
[2020-11-24 15:04:37,237 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-24 15:04:37,237 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-24 15:04:37,237 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-24 15:04:37,239 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-24 15:04:37,239 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 03:04:37" (1/1) ...
[2020-11-24 15:04:37,282 INFO  L313           BlockEncoder]: Initial Icfg 1636 locations, 2775 edges
[2020-11-24 15:04:37,282 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-24 15:04:37,282 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-24 15:04:37,282 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-24 15:04:37,283 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-24 15:04:37,289 INFO  L70    emoveInfeasibleEdges]: Removed 75 edges and 13 locations because of local infeasibility
[2020-11-24 15:04:37,293 INFO  L70        RemoveSinkStates]: Removed 32 edges and 21 locations by removing sink states
[2020-11-24 15:04:37,298 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-24 15:04:37,299 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-24 15:04:37,300 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-24 15:04:37,301 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-24 15:04:37,303 INFO  L313           BlockEncoder]: Encoded RCFG 1586 locations, 2645 edges
[2020-11-24 15:04:37,303 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 24.11 03:04:37 BasicIcfg
[2020-11-24 15:04:37,303 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-24 15:04:37,303 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-24 15:04:37,304 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-24 15:04:37,306 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-24 15:04:37,306 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 15:04:37,306 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Litecoin_SV_0xee059f0ca1507e4e20c689b20cff71b5e924f7bd_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 03:04:35" (1/6) ...
[2020-11-24 15:04:37,308 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@25cc9778 and model type Litecoin_SV_0xee059f0ca1507e4e20c689b20cff71b5e924f7bd_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 24.11 03:04:37, skipping insertion in model container
[2020-11-24 15:04:37,308 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 15:04:37,308 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 03:04:35" (2/6) ...
[2020-11-24 15:04:37,308 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@25cc9778 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 24.11 03:04:37, skipping insertion in model container
[2020-11-24 15:04:37,308 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 15:04:37,308 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Litecoin_SV_0xee059f0ca1507e4e20c689b20cff71b5e924f7bd_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 03:04:36" (3/6) ...
[2020-11-24 15:04:37,308 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@25cc9778 and model type Litecoin_SV_0xee059f0ca1507e4e20c689b20cff71b5e924f7bd_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 24.11 03:04:37, skipping insertion in model container
[2020-11-24 15:04:37,308 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 15:04:37,309 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 03:04:36" (4/6) ...
[2020-11-24 15:04:37,309 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@25cc9778 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 24.11 03:04:37, skipping insertion in model container
[2020-11-24 15:04:37,309 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 15:04:37,309 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 03:04:37" (5/6) ...
[2020-11-24 15:04:37,309 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@25cc9778 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 24.11 03:04:37, skipping insertion in model container
[2020-11-24 15:04:37,309 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 15:04:37,309 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 24.11 03:04:37" (6/6) ...
[2020-11-24 15:04:37,310 INFO  L404   chiAutomizerObserver]: Analyzing ICFG Litecoin_SV_0xee059f0ca1507e4e20c689b20cff71b5e924f7bd_transferfrom-self.bpl_BEv2
[2020-11-24 15:04:37,345 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-24 15:04:37,346 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-24 15:04:37,346 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-24 15:04:37,346 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-24 15:04:37,346 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-24 15:04:37,346 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-24 15:04:37,346 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-24 15:04:37,346 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-24 15:04:37,346 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-24 15:04:37,362 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1586 states.
[2020-11-24 15:04:37,394 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 15:04:37,394 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 15:04:37,394 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 15:04:37,402 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 15:04:37,402 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
[2020-11-24 15:04:37,402 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-24 15:04:37,402 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1586 states.
[2020-11-24 15:04:37,413 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 15:04:37,413 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 15:04:37,413 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 15:04:37,415 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 15:04:37,416 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L3]                 success_transferFrom_Litecoin_SV0 := false;
[L3]                 call_transferFrom_Litecoin_SV0 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L2002]              assume null == 0;
[L2003]  CALL        call this := FreshRefGenerator__success();
[L815]               havoc newRef;
[L816]               assume Alloc[newRef] == false;
[L817]               Alloc[newRef] := true;
[L818]               assume newRef != null;
[L2003]  RET         call this := FreshRefGenerator__success();
[L2004]              assume now >= 0;
[L2005]              assume DType[this] == Litecoin_SV;
[L2006]              assume !revert && gas >= 0;
[L2007]  CALL        call CorralChoice_Litecoin_SV(this);
[L1885]              havoc msgsender_MSG;
[L1886]              havoc msgvalue_MSG;
[L1887]              havoc choice;
[L1888]              havoc a_s23;
[L1889]              havoc b_s23;
[L1890]              havoc c_s23;
[L1891]              havoc a_s45;
[L1892]              havoc b_s45;
[L1893]              havoc c_s45;
[L1894]              havoc a_s73;
[L1895]              havoc b_s73;
[L1896]              havoc c_s73;
[L1897]              havoc a_s95;
[L1898]              havoc b_s95;
[L1899]              havoc c_s95;
[L1900]              havoc __ret_0_totalSupply;
[L1901]              havoc tokenOwner_s340;
[L1902]              havoc balance_s340;
[L1903]              havoc tokenOwner_s486;
[L1904]              havoc spender_s486;
[L1905]              havoc remaining_s486;
[L1906]              havoc to_s383;
[L1907]              havoc tokens_s383;
[L1908]              havoc success_s383;
[L1909]              havoc spender_s411;
[L1910]              havoc tokens_s411;
[L1911]              havoc success_s411;
[L1912]              havoc from_s470;
[L1913]              havoc to_s470;
[L1914]              havoc tokens_s470;
[L1915]              havoc success_s470;
[L1916]              havoc __ret_0_owner;
[L1917]              havoc __ret_0_newOwner;
[L1918]              havoc _newOwner_s217;
[L1919]              havoc __ret_0_businessName;
[L1920]              havoc __ret_0_businessCountry;
[L1921]              havoc __ret_0_symbol;
[L1922]              havoc __ret_0_name;
[L1923]              havoc __ret_0_decimals;
[L1924]              havoc __ret_0__totalSupply;
[L1925]              havoc spender_s529;
[L1926]              havoc tokens_s529;
[L1927]              havoc data_s529;
[L1928]              havoc success_s529;
[L1929]              havoc tokenAddress_s556;
[L1930]              havoc tokens_s556;
[L1931]              havoc success_s556;
[L1932]              havoc tmpNow;
[L1933]              havoc gas;
[L1934]              assume gas > 4000000 && gas <= 8000000;
[L1935]              tmpNow := now;
[L1936]              havoc now;
[L1937]              assume now > tmpNow;
[L1938]              assume msgsender_MSG != null;
[L1939]  COND TRUE   choice == 8
[L1940]              gas := gas - 21000;
[L1941]  COND FALSE  !(gas >= 0)
[L2007]  RET         call CorralChoice_Litecoin_SV(this);

Loop:
[L2007]        assume true;

[2020-11-24 15:04:37,430 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 15:04:37,430 INFO  L82        PathProgramCache]: Analyzing trace with hash -2112305800, now seen corresponding path program 1 times
[2020-11-24 15:04:37,434 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 15:04:37,451 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 15:04:37,507 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 15:04:37,509 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 15:04:37,509 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [5] imperfect sequences [] total 5
[2020-11-24 15:04:37,513 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 15:04:37,608 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 5 interpolants.
[2020-11-24 15:04:37,609 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=9, Invalid=11, Unknown=0, NotChecked=0, Total=20
[2020-11-24 15:04:37,610 INFO  L87              Difference]: Start difference. First operand 1586 states. Second operand 5 states.
[2020-11-24 15:04:37,750 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 15:04:37,750 INFO  L93              Difference]: Finished difference Result 692 states and 756 transitions.
[2020-11-24 15:04:37,750 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-24 15:04:37,752 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 692 states and 756 transitions.
[2020-11-24 15:04:37,757 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 15:04:37,761 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 692 states to 212 states and 225 transitions.
[2020-11-24 15:04:37,762 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 4
[2020-11-24 15:04:37,762 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 152
[2020-11-24 15:04:37,762 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 212 states and 225 transitions.
[2020-11-24 15:04:37,764 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 15:04:37,764 INFO  L728         BuchiCegarLoop]: Abstraction has 212 states and 225 transitions.
[2020-11-24 15:04:37,775 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 212 states and 225 transitions.
[2020-11-24 15:04:37,788 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 212 to 212.
[2020-11-24 15:04:37,789 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 212 states.
[2020-11-24 15:04:37,789 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 212 states to 212 states and 225 transitions.
[2020-11-24 15:04:37,790 INFO  L751         BuchiCegarLoop]: Abstraction has 212 states and 225 transitions.
[2020-11-24 15:04:37,790 INFO  L631         BuchiCegarLoop]: Abstraction has 212 states and 225 transitions.
[2020-11-24 15:04:37,790 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-24 15:04:37,791 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 212 states and 225 transitions.
[2020-11-24 15:04:37,792 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 15:04:37,792 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 15:04:37,792 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 15:04:37,793 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 15:04:37,793 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L3]                 success_transferFrom_Litecoin_SV0 := false;
[L3]                 call_transferFrom_Litecoin_SV0 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L2002]              assume null == 0;
[L2003]  CALL        call this := FreshRefGenerator__success();
[L815]               havoc newRef;
[L816]               assume Alloc[newRef] == false;
[L817]               Alloc[newRef] := true;
[L818]               assume newRef != null;
[L2003]  RET         call this := FreshRefGenerator__success();
[L2004]              assume now >= 0;
[L2005]              assume DType[this] == Litecoin_SV;
[L2006]              assume !revert && gas >= 0;
[L2007]  CALL        call CorralChoice_Litecoin_SV(this);
[L1885]              havoc msgsender_MSG;
[L1886]              havoc msgvalue_MSG;
[L1887]              havoc choice;
[L1888]              havoc a_s23;
[L1889]              havoc b_s23;
[L1890]              havoc c_s23;
[L1891]              havoc a_s45;
[L1892]              havoc b_s45;
[L1893]              havoc c_s45;
[L1894]              havoc a_s73;
[L1895]              havoc b_s73;
[L1896]              havoc c_s73;
[L1897]              havoc a_s95;
[L1898]              havoc b_s95;
[L1899]              havoc c_s95;
[L1900]              havoc __ret_0_totalSupply;
[L1901]              havoc tokenOwner_s340;
[L1902]              havoc balance_s340;
[L1903]              havoc tokenOwner_s486;
[L1904]              havoc spender_s486;
[L1905]              havoc remaining_s486;
[L1906]              havoc to_s383;
[L1907]              havoc tokens_s383;
[L1908]              havoc success_s383;
[L1909]              havoc spender_s411;
[L1910]              havoc tokens_s411;
[L1911]              havoc success_s411;
[L1912]              havoc from_s470;
[L1913]              havoc to_s470;
[L1914]              havoc tokens_s470;
[L1915]              havoc success_s470;
[L1916]              havoc __ret_0_owner;
[L1917]              havoc __ret_0_newOwner;
[L1918]              havoc _newOwner_s217;
[L1919]              havoc __ret_0_businessName;
[L1920]              havoc __ret_0_businessCountry;
[L1921]              havoc __ret_0_symbol;
[L1922]              havoc __ret_0_name;
[L1923]              havoc __ret_0_decimals;
[L1924]              havoc __ret_0__totalSupply;
[L1925]              havoc spender_s529;
[L1926]              havoc tokens_s529;
[L1927]              havoc data_s529;
[L1928]              havoc success_s529;
[L1929]              havoc tokenAddress_s556;
[L1930]              havoc tokens_s556;
[L1931]              havoc success_s556;
[L1932]              havoc tmpNow;
[L1933]              havoc gas;
[L1934]              assume gas > 4000000 && gas <= 8000000;
[L1935]              tmpNow := now;
[L1936]              havoc now;
[L1937]              assume now > tmpNow;
[L1938]              assume msgsender_MSG != null;
[L1939]  COND FALSE  !(choice == 8)
[L1947]  COND FALSE  !(choice == 7)
[L1955]  COND FALSE  !(choice == 6)
[L1961]  COND FALSE  !(choice == 5)
[L1967]  COND FALSE  !(choice == 4)
[L1973]  COND FALSE  !(choice == 3)
[L1980]  COND FALSE  !(choice == 2)
[L1987]  COND TRUE   choice == 1
[L1988]              gas := gas - 21000;
[L1989]  COND TRUE   gas >= 0
[L1990]              assume tokens_s470 >= 0 && tokens_s470 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1991]              assume msgvalue_MSG == 0;
[L1992]  CALL        call success_s470 := transferFrom~address~address~uint256_Litecoin_SV(this, msgsender_MSG, msgvalue_MSG, from_s470, to_s470, tokens_s470);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != from_s470 || p2 != msgsender_MSG) && from_s470 == to_s470) && tokens_s470 <= balances_Litecoin_SV[this][from_s470]) && tokens_s470 <= allowed_Litecoin_SV[this][from_s470][msgsender_MSG]) && tokens_s470 >= 0) && tokens_s470 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_Litecoin_SV[this][to_s470] >= 0) && balances_Litecoin_SV[this][to_s470] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_Litecoin_SV[this][from_s470] >= 0) && balances_Litecoin_SV[this][from_s470] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_Litecoin_SV[this][from_s470][msgsender_MSG] >= 0) && allowed_Litecoin_SV[this][from_s470][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_Litecoin_SV0 := true;
[L3]                 call_transferFrom_Litecoin_SV0 := false;
[L3]                 revert := revert_hold;
[L434]               havoc __exception;
[L435]               revert := false;
[L436]   COND FALSE  !(__exception)
[L461]   CALL        call success_s470 := transferFrom~address~address~uint256_Litecoin_SV__success(this, msgsender_MSG, msgvalue_MSG, from_s470, to_s470, tokens_s470);
[L1012]  COND TRUE   DType[this] == Litecoin_SV
[L1013]  CALL        call __var_4 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_Litecoin_SV[this][from_s470], tokens_s470);
[L850]   COND TRUE   !(b_s45 <= a_s45)
[L851]               revert := true;
[L1013]  RET         call __var_4 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_Litecoin_SV[this][from_s470], tokens_s470);
[L1014]  COND TRUE   revert
[L461]   RET         call success_s470 := transferFrom~address~address~uint256_Litecoin_SV__success(this, msgsender_MSG, msgvalue_MSG, from_s470, to_s470, tokens_s470);
[L462]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((((((success_s470 == true && allowed_Litecoin_SV[this][from_s470][msgsender_MSG] == old(allowed_Litecoin_SV[this][from_s470][msgsender_MSG]) - tokens_s470) && _totalSupply_Litecoin_SV[this] == old(_totalSupply_Litecoin_SV[this])) && balances_Litecoin_SV[this] == old(balances_Litecoin_SV[this])) && allowed_Litecoin_SV[this][p1][p2] == old(allowed_Litecoin_SV[this][p1][p2])) && businessName_Litecoin_SV[this] == old(businessName_Litecoin_SV[this])) && businessCountry_Litecoin_SV[this] == old(businessCountry_Litecoin_SV[this])) && symbol_Litecoin_SV[this] == old(symbol_Litecoin_SV[this])) && name_Litecoin_SV[this] == old(name_Litecoin_SV[this])) && decimals_Litecoin_SV[this] == old(decimals_Litecoin_SV[this])) && owner_Owned[this] == old(owner_Owned[this])) && newOwner_Owned[this] == old(newOwner_Owned[this]));
[L3]                 revert := revert_hold;
[L1992]  RET         call success_s470 := transferFrom~address~address~uint256_Litecoin_SV(this, msgsender_MSG, msgvalue_MSG, from_s470, to_s470, tokens_s470);
[L2007]  RET         call CorralChoice_Litecoin_SV(this);

Loop:
[L2007]        assume true;

[2020-11-24 15:04:37,795 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 15:04:37,795 INFO  L82        PathProgramCache]: Analyzing trace with hash 2001280914, now seen corresponding path program 1 times
[2020-11-24 15:04:37,796 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 15:04:37,805 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 15:04:37,818 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 15:04:37,818 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 15:04:37,818 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-24 15:04:37,819 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 15:04:37,819 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-24 15:04:37,819 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-24 15:04:37,820 INFO  L87              Difference]: Start difference. First operand 212 states and 225 transitions. cyclomatic complexity: 14 Second operand 3 states.
[2020-11-24 15:04:37,825 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 15:04:37,825 INFO  L93              Difference]: Finished difference Result 247 states and 261 transitions.
[2020-11-24 15:04:37,825 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-24 15:04:37,826 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 247 states and 261 transitions.
[2020-11-24 15:04:37,827 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 2
[2020-11-24 15:04:37,828 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 247 states to 231 states and 240 transitions.
[2020-11-24 15:04:37,829 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 168
[2020-11-24 15:04:37,829 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 173
[2020-11-24 15:04:37,829 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 231 states and 240 transitions.
[2020-11-24 15:04:37,829 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 15:04:37,830 INFO  L728         BuchiCegarLoop]: Abstraction has 231 states and 240 transitions.
[2020-11-24 15:04:37,830 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 231 states and 240 transitions.
[2020-11-24 15:04:37,834 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 231 to 220.
[2020-11-24 15:04:37,834 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 220 states.
[2020-11-24 15:04:37,834 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 220 states to 220 states and 229 transitions.
[2020-11-24 15:04:37,834 INFO  L751         BuchiCegarLoop]: Abstraction has 220 states and 229 transitions.
[2020-11-24 15:04:37,835 INFO  L631         BuchiCegarLoop]: Abstraction has 220 states and 229 transitions.
[2020-11-24 15:04:37,835 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-24 15:04:37,835 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 220 states and 229 transitions.
[2020-11-24 15:04:37,835 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 15:04:37,836 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 15:04:37,836 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 15:04:37,836 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 15:04:37,837 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L3]                 success_transferFrom_Litecoin_SV0 := false;
[L3]                 call_transferFrom_Litecoin_SV0 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L2002]              assume null == 0;
[L2003]  CALL        call this := FreshRefGenerator__success();
[L815]               havoc newRef;
[L816]               assume Alloc[newRef] == false;
[L817]               Alloc[newRef] := true;
[L818]               assume newRef != null;
[L2003]  RET         call this := FreshRefGenerator__success();
[L2004]              assume now >= 0;
[L2005]              assume DType[this] == Litecoin_SV;
[L2006]              assume !revert && gas >= 0;
[L2007]  CALL        call CorralChoice_Litecoin_SV(this);
[L1885]              havoc msgsender_MSG;
[L1886]              havoc msgvalue_MSG;
[L1887]              havoc choice;
[L1888]              havoc a_s23;
[L1889]              havoc b_s23;
[L1890]              havoc c_s23;
[L1891]              havoc a_s45;
[L1892]              havoc b_s45;
[L1893]              havoc c_s45;
[L1894]              havoc a_s73;
[L1895]              havoc b_s73;
[L1896]              havoc c_s73;
[L1897]              havoc a_s95;
[L1898]              havoc b_s95;
[L1899]              havoc c_s95;
[L1900]              havoc __ret_0_totalSupply;
[L1901]              havoc tokenOwner_s340;
[L1902]              havoc balance_s340;
[L1903]              havoc tokenOwner_s486;
[L1904]              havoc spender_s486;
[L1905]              havoc remaining_s486;
[L1906]              havoc to_s383;
[L1907]              havoc tokens_s383;
[L1908]              havoc success_s383;
[L1909]              havoc spender_s411;
[L1910]              havoc tokens_s411;
[L1911]              havoc success_s411;
[L1912]              havoc from_s470;
[L1913]              havoc to_s470;
[L1914]              havoc tokens_s470;
[L1915]              havoc success_s470;
[L1916]              havoc __ret_0_owner;
[L1917]              havoc __ret_0_newOwner;
[L1918]              havoc _newOwner_s217;
[L1919]              havoc __ret_0_businessName;
[L1920]              havoc __ret_0_businessCountry;
[L1921]              havoc __ret_0_symbol;
[L1922]              havoc __ret_0_name;
[L1923]              havoc __ret_0_decimals;
[L1924]              havoc __ret_0__totalSupply;
[L1925]              havoc spender_s529;
[L1926]              havoc tokens_s529;
[L1927]              havoc data_s529;
[L1928]              havoc success_s529;
[L1929]              havoc tokenAddress_s556;
[L1930]              havoc tokens_s556;
[L1931]              havoc success_s556;
[L1932]              havoc tmpNow;
[L1933]              havoc gas;
[L1934]              assume gas > 4000000 && gas <= 8000000;
[L1935]              tmpNow := now;
[L1936]              havoc now;
[L1937]              assume now > tmpNow;
[L1938]              assume msgsender_MSG != null;
[L1939]  COND FALSE  !(choice == 8)
[L1947]  COND FALSE  !(choice == 7)
[L1955]  COND FALSE  !(choice == 6)
[L1961]  COND FALSE  !(choice == 5)
[L1967]  COND FALSE  !(choice == 4)
[L1973]  COND FALSE  !(choice == 3)
[L1980]  COND FALSE  !(choice == 2)
[L1987]  COND TRUE   choice == 1
[L1988]              gas := gas - 21000;
[L1989]  COND TRUE   gas >= 0
[L1990]              assume tokens_s470 >= 0 && tokens_s470 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1991]              assume msgvalue_MSG == 0;
[L1992]  CALL        call success_s470 := transferFrom~address~address~uint256_Litecoin_SV(this, msgsender_MSG, msgvalue_MSG, from_s470, to_s470, tokens_s470);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != from_s470 || p2 != msgsender_MSG) && from_s470 == to_s470) && tokens_s470 <= balances_Litecoin_SV[this][from_s470]) && tokens_s470 <= allowed_Litecoin_SV[this][from_s470][msgsender_MSG]) && tokens_s470 >= 0) && tokens_s470 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_Litecoin_SV[this][to_s470] >= 0) && balances_Litecoin_SV[this][to_s470] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_Litecoin_SV[this][from_s470] >= 0) && balances_Litecoin_SV[this][from_s470] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_Litecoin_SV[this][from_s470][msgsender_MSG] >= 0) && allowed_Litecoin_SV[this][from_s470][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_Litecoin_SV0 := true;
[L3]                 call_transferFrom_Litecoin_SV0 := false;
[L3]                 revert := revert_hold;
[L434]               havoc __exception;
[L435]               revert := false;
[L436]   COND TRUE   __exception
[L437]               __tmp__Balance := Balance;
[L438]               __tmp__DType := DType;
[L439]               __tmp__Alloc := Alloc;
[L440]               __tmp__balance_ADDR := balance_ADDR;
[L441]               __tmp__M_Ref_int := M_Ref_int;
[L442]               __tmp__sum_balances0 := sum_balances0;
[L443]               __tmp__alloc_allowed_Litecoin_SV_lvl0 := alloc_allowed_Litecoin_SV_lvl0;
[L444]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L445]               __tmp__sum_allowed1 := sum_allowed1;
[L446]               __tmp__Length := Length;
[L447]               __tmp__now := now;
[L448]               __tmp__owner_Owned := owner_Owned;
[L449]               __tmp__newOwner_Owned := newOwner_Owned;
[L450]               __tmp__businessName_Litecoin_SV := businessName_Litecoin_SV;
[L451]               __tmp__businessCountry_Litecoin_SV := businessCountry_Litecoin_SV;
[L452]               __tmp__symbol_Litecoin_SV := symbol_Litecoin_SV;
[L453]               __tmp__name_Litecoin_SV := name_Litecoin_SV;
[L454]               __tmp__decimals_Litecoin_SV := decimals_Litecoin_SV;
[L455]               __tmp___totalSupply_Litecoin_SV := _totalSupply_Litecoin_SV;
[L456]               __tmp__balances_Litecoin_SV := balances_Litecoin_SV;
[L457]               __tmp__allowed_Litecoin_SV := allowed_Litecoin_SV;
[L458]   CALL        call success_s470 := transferFrom~address~address~uint256_Litecoin_SV__fail(this, msgsender_MSG, msgvalue_MSG, from_s470, to_s470, tokens_s470);
[L970]   COND TRUE   __tmp__DType[this] == Litecoin_SV
[L971]   CALL        call __var_4 := safeSub~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balances_Litecoin_SV[this][from_s470], tokens_s470);
[L841]   COND TRUE   !(b_s45 <= a_s45)
[L842]               revert := true;
[L971]   RET         call __var_4 := safeSub~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balances_Litecoin_SV[this][from_s470], tokens_s470);
[L972]   COND TRUE   revert
[L458]   RET         call success_s470 := transferFrom~address~address~uint256_Litecoin_SV__fail(this, msgsender_MSG, msgvalue_MSG, from_s470, to_s470, tokens_s470);
[L459]               assume revert || gas < 0;
[L1992]  RET         call success_s470 := transferFrom~address~address~uint256_Litecoin_SV(this, msgsender_MSG, msgvalue_MSG, from_s470, to_s470, tokens_s470);
[L2007]  RET         call CorralChoice_Litecoin_SV(this);

Loop:
[L2007]        assume true;

[2020-11-24 15:04:37,839 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 15:04:37,839 INFO  L82        PathProgramCache]: Analyzing trace with hash -1541351935, now seen corresponding path program 1 times
[2020-11-24 15:04:37,840 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 15:04:37,852 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 15:04:37,908 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 15:04:37,908 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 15:04:37,908 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [7] imperfect sequences [] total 7
[2020-11-24 15:04:37,909 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 15:04:37,909 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 7 interpolants.
[2020-11-24 15:04:37,909 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=11, Invalid=31, Unknown=0, NotChecked=0, Total=42
[2020-11-24 15:04:37,909 INFO  L87              Difference]: Start difference. First operand 220 states and 229 transitions. cyclomatic complexity: 10 Second operand 7 states.
[2020-11-24 15:04:37,984 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 15:04:37,985 INFO  L93              Difference]: Finished difference Result 235 states and 243 transitions.
[2020-11-24 15:04:37,985 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 8 states. 
[2020-11-24 15:04:37,985 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 235 states and 243 transitions.
[2020-11-24 15:04:37,987 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 2
[2020-11-24 15:04:37,989 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 235 states to 231 states and 239 transitions.
[2020-11-24 15:04:37,989 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 173
[2020-11-24 15:04:37,990 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 173
[2020-11-24 15:04:37,990 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 231 states and 239 transitions.
[2020-11-24 15:04:37,991 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 15:04:37,991 INFO  L728         BuchiCegarLoop]: Abstraction has 231 states and 239 transitions.
[2020-11-24 15:04:37,992 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 231 states and 239 transitions.
[2020-11-24 15:04:37,997 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 231 to 218.
[2020-11-24 15:04:37,997 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 218 states.
[2020-11-24 15:04:37,998 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 218 states to 218 states and 226 transitions.
[2020-11-24 15:04:37,998 INFO  L751         BuchiCegarLoop]: Abstraction has 218 states and 226 transitions.
[2020-11-24 15:04:37,998 INFO  L631         BuchiCegarLoop]: Abstraction has 218 states and 226 transitions.
[2020-11-24 15:04:37,998 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-24 15:04:37,998 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 218 states and 226 transitions.
[2020-11-24 15:04:37,999 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 15:04:37,999 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 15:04:38,000 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 15:04:38,001 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 15:04:38,001 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L3]                 success_transferFrom_Litecoin_SV0 := false;
[L3]                 call_transferFrom_Litecoin_SV0 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L2002]              assume null == 0;
[L2003]  CALL        call this := FreshRefGenerator__success();
[L815]               havoc newRef;
[L816]               assume Alloc[newRef] == false;
[L817]               Alloc[newRef] := true;
[L818]               assume newRef != null;
[L2003]  RET         call this := FreshRefGenerator__success();
[L2004]              assume now >= 0;
[L2005]              assume DType[this] == Litecoin_SV;
[L2006]              assume !revert && gas >= 0;
[L2007]  CALL        call CorralChoice_Litecoin_SV(this);
[L1885]              havoc msgsender_MSG;
[L1886]              havoc msgvalue_MSG;
[L1887]              havoc choice;
[L1888]              havoc a_s23;
[L1889]              havoc b_s23;
[L1890]              havoc c_s23;
[L1891]              havoc a_s45;
[L1892]              havoc b_s45;
[L1893]              havoc c_s45;
[L1894]              havoc a_s73;
[L1895]              havoc b_s73;
[L1896]              havoc c_s73;
[L1897]              havoc a_s95;
[L1898]              havoc b_s95;
[L1899]              havoc c_s95;
[L1900]              havoc __ret_0_totalSupply;
[L1901]              havoc tokenOwner_s340;
[L1902]              havoc balance_s340;
[L1903]              havoc tokenOwner_s486;
[L1904]              havoc spender_s486;
[L1905]              havoc remaining_s486;
[L1906]              havoc to_s383;
[L1907]              havoc tokens_s383;
[L1908]              havoc success_s383;
[L1909]              havoc spender_s411;
[L1910]              havoc tokens_s411;
[L1911]              havoc success_s411;
[L1912]              havoc from_s470;
[L1913]              havoc to_s470;
[L1914]              havoc tokens_s470;
[L1915]              havoc success_s470;
[L1916]              havoc __ret_0_owner;
[L1917]              havoc __ret_0_newOwner;
[L1918]              havoc _newOwner_s217;
[L1919]              havoc __ret_0_businessName;
[L1920]              havoc __ret_0_businessCountry;
[L1921]              havoc __ret_0_symbol;
[L1922]              havoc __ret_0_name;
[L1923]              havoc __ret_0_decimals;
[L1924]              havoc __ret_0__totalSupply;
[L1925]              havoc spender_s529;
[L1926]              havoc tokens_s529;
[L1927]              havoc data_s529;
[L1928]              havoc success_s529;
[L1929]              havoc tokenAddress_s556;
[L1930]              havoc tokens_s556;
[L1931]              havoc success_s556;
[L1932]              havoc tmpNow;
[L1933]              havoc gas;
[L1934]              assume gas > 4000000 && gas <= 8000000;
[L1935]              tmpNow := now;
[L1936]              havoc now;
[L1937]              assume now > tmpNow;
[L1938]              assume msgsender_MSG != null;
[L1939]  COND FALSE  !(choice == 8)
[L1947]  COND FALSE  !(choice == 7)
[L1955]  COND FALSE  !(choice == 6)
[L1961]  COND FALSE  !(choice == 5)
[L1967]  COND FALSE  !(choice == 4)
[L1973]  COND FALSE  !(choice == 3)
[L1980]  COND FALSE  !(choice == 2)
[L1987]  COND TRUE   choice == 1
[L1988]              gas := gas - 21000;
[L1989]  COND TRUE   gas >= 0
[L1990]              assume tokens_s470 >= 0 && tokens_s470 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1991]              assume msgvalue_MSG == 0;
[L1992]  CALL        call success_s470 := transferFrom~address~address~uint256_Litecoin_SV(this, msgsender_MSG, msgvalue_MSG, from_s470, to_s470, tokens_s470);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != from_s470 || p2 != msgsender_MSG) && from_s470 == to_s470) && tokens_s470 <= balances_Litecoin_SV[this][from_s470]) && tokens_s470 <= allowed_Litecoin_SV[this][from_s470][msgsender_MSG]) && tokens_s470 >= 0) && tokens_s470 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_Litecoin_SV[this][to_s470] >= 0) && balances_Litecoin_SV[this][to_s470] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_Litecoin_SV[this][from_s470] >= 0) && balances_Litecoin_SV[this][from_s470] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_Litecoin_SV[this][from_s470][msgsender_MSG] >= 0) && allowed_Litecoin_SV[this][from_s470][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_Litecoin_SV0 := true;
[L3]                 call_transferFrom_Litecoin_SV0 := false;
[L3]                 revert := revert_hold;
[L434]               havoc __exception;
[L435]               revert := false;
[L436]   COND TRUE   __exception
[L437]               __tmp__Balance := Balance;
[L438]               __tmp__DType := DType;
[L439]               __tmp__Alloc := Alloc;
[L440]               __tmp__balance_ADDR := balance_ADDR;
[L441]               __tmp__M_Ref_int := M_Ref_int;
[L442]               __tmp__sum_balances0 := sum_balances0;
[L443]               __tmp__alloc_allowed_Litecoin_SV_lvl0 := alloc_allowed_Litecoin_SV_lvl0;
[L444]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L445]               __tmp__sum_allowed1 := sum_allowed1;
[L446]               __tmp__Length := Length;
[L447]               __tmp__now := now;
[L448]               __tmp__owner_Owned := owner_Owned;
[L449]               __tmp__newOwner_Owned := newOwner_Owned;
[L450]               __tmp__businessName_Litecoin_SV := businessName_Litecoin_SV;
[L451]               __tmp__businessCountry_Litecoin_SV := businessCountry_Litecoin_SV;
[L452]               __tmp__symbol_Litecoin_SV := symbol_Litecoin_SV;
[L453]               __tmp__name_Litecoin_SV := name_Litecoin_SV;
[L454]               __tmp__decimals_Litecoin_SV := decimals_Litecoin_SV;
[L455]               __tmp___totalSupply_Litecoin_SV := _totalSupply_Litecoin_SV;
[L456]               __tmp__balances_Litecoin_SV := balances_Litecoin_SV;
[L457]               __tmp__allowed_Litecoin_SV := allowed_Litecoin_SV;
[L458]   CALL        call success_s470 := transferFrom~address~address~uint256_Litecoin_SV__fail(this, msgsender_MSG, msgvalue_MSG, from_s470, to_s470, tokens_s470);
[L970]   COND TRUE   __tmp__DType[this] == Litecoin_SV
[L971]   CALL        call __var_4 := safeSub~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balances_Litecoin_SV[this][from_s470], tokens_s470);
[L841]   COND FALSE  !(!(b_s45 <= a_s45))
[L845]               c_s45 := (a_s45 - b_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L971]   RET         call __var_4 := safeSub~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balances_Litecoin_SV[this][from_s470], tokens_s470);
[L972]   COND TRUE   revert
[L458]   RET         call success_s470 := transferFrom~address~address~uint256_Litecoin_SV__fail(this, msgsender_MSG, msgvalue_MSG, from_s470, to_s470, tokens_s470);
[L459]               assume revert || gas < 0;
[L1992]  RET         call success_s470 := transferFrom~address~address~uint256_Litecoin_SV(this, msgsender_MSG, msgvalue_MSG, from_s470, to_s470, tokens_s470);
[L2007]  RET         call CorralChoice_Litecoin_SV(this);

Loop:
[L2007]        assume true;

[2020-11-24 15:04:38,003 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 15:04:38,003 INFO  L82        PathProgramCache]: Analyzing trace with hash 483790522, now seen corresponding path program 1 times
[2020-11-24 15:04:38,004 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 15:04:38,013 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 15:04:38,032 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 15:04:38,032 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 15:04:38,032 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [5] imperfect sequences [] total 5
[2020-11-24 15:04:38,032 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 15:04:38,032 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 5 interpolants.
[2020-11-24 15:04:38,032 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=9, Invalid=11, Unknown=0, NotChecked=0, Total=20
[2020-11-24 15:04:38,032 INFO  L87              Difference]: Start difference. First operand 218 states and 226 transitions. cyclomatic complexity: 9 Second operand 5 states.
[2020-11-24 15:04:38,041 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 15:04:38,041 INFO  L93              Difference]: Finished difference Result 229 states and 234 transitions.
[2020-11-24 15:04:38,041 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-24 15:04:38,042 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 229 states and 234 transitions.
[2020-11-24 15:04:38,043 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 2
[2020-11-24 15:04:38,044 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 229 states to 229 states and 234 transitions.
[2020-11-24 15:04:38,044 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 171
[2020-11-24 15:04:38,044 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 171
[2020-11-24 15:04:38,044 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 229 states and 234 transitions.
[2020-11-24 15:04:38,044 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 15:04:38,044 INFO  L728         BuchiCegarLoop]: Abstraction has 229 states and 234 transitions.
[2020-11-24 15:04:38,044 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 229 states and 234 transitions.
[2020-11-24 15:04:38,046 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 229 to 218.
[2020-11-24 15:04:38,046 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 218 states.
[2020-11-24 15:04:38,047 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 218 states to 218 states and 223 transitions.
[2020-11-24 15:04:38,047 INFO  L751         BuchiCegarLoop]: Abstraction has 218 states and 223 transitions.
[2020-11-24 15:04:38,047 INFO  L631         BuchiCegarLoop]: Abstraction has 218 states and 223 transitions.
[2020-11-24 15:04:38,047 INFO  L445         BuchiCegarLoop]: ======== Iteration 5============
[2020-11-24 15:04:38,047 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 218 states and 223 transitions.
[2020-11-24 15:04:38,048 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 15:04:38,048 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 15:04:38,048 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 15:04:38,048 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 15:04:38,048 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L3]                 success_transferFrom_Litecoin_SV0 := false;
[L3]                 call_transferFrom_Litecoin_SV0 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L2002]              assume null == 0;
[L2003]  CALL        call this := FreshRefGenerator__success();
[L815]               havoc newRef;
[L816]               assume Alloc[newRef] == false;
[L817]               Alloc[newRef] := true;
[L818]               assume newRef != null;
[L2003]  RET         call this := FreshRefGenerator__success();
[L2004]              assume now >= 0;
[L2005]              assume DType[this] == Litecoin_SV;
[L2006]              assume !revert && gas >= 0;
[L2007]  CALL        call CorralChoice_Litecoin_SV(this);
[L1885]              havoc msgsender_MSG;
[L1886]              havoc msgvalue_MSG;
[L1887]              havoc choice;
[L1888]              havoc a_s23;
[L1889]              havoc b_s23;
[L1890]              havoc c_s23;
[L1891]              havoc a_s45;
[L1892]              havoc b_s45;
[L1893]              havoc c_s45;
[L1894]              havoc a_s73;
[L1895]              havoc b_s73;
[L1896]              havoc c_s73;
[L1897]              havoc a_s95;
[L1898]              havoc b_s95;
[L1899]              havoc c_s95;
[L1900]              havoc __ret_0_totalSupply;
[L1901]              havoc tokenOwner_s340;
[L1902]              havoc balance_s340;
[L1903]              havoc tokenOwner_s486;
[L1904]              havoc spender_s486;
[L1905]              havoc remaining_s486;
[L1906]              havoc to_s383;
[L1907]              havoc tokens_s383;
[L1908]              havoc success_s383;
[L1909]              havoc spender_s411;
[L1910]              havoc tokens_s411;
[L1911]              havoc success_s411;
[L1912]              havoc from_s470;
[L1913]              havoc to_s470;
[L1914]              havoc tokens_s470;
[L1915]              havoc success_s470;
[L1916]              havoc __ret_0_owner;
[L1917]              havoc __ret_0_newOwner;
[L1918]              havoc _newOwner_s217;
[L1919]              havoc __ret_0_businessName;
[L1920]              havoc __ret_0_businessCountry;
[L1921]              havoc __ret_0_symbol;
[L1922]              havoc __ret_0_name;
[L1923]              havoc __ret_0_decimals;
[L1924]              havoc __ret_0__totalSupply;
[L1925]              havoc spender_s529;
[L1926]              havoc tokens_s529;
[L1927]              havoc data_s529;
[L1928]              havoc success_s529;
[L1929]              havoc tokenAddress_s556;
[L1930]              havoc tokens_s556;
[L1931]              havoc success_s556;
[L1932]              havoc tmpNow;
[L1933]              havoc gas;
[L1934]              assume gas > 4000000 && gas <= 8000000;
[L1935]              tmpNow := now;
[L1936]              havoc now;
[L1937]              assume now > tmpNow;
[L1938]              assume msgsender_MSG != null;
[L1939]  COND FALSE  !(choice == 8)
[L1947]  COND FALSE  !(choice == 7)
[L1955]  COND FALSE  !(choice == 6)
[L1961]  COND FALSE  !(choice == 5)
[L1967]  COND FALSE  !(choice == 4)
[L1973]  COND FALSE  !(choice == 3)
[L1980]  COND FALSE  !(choice == 2)
[L1987]  COND TRUE   choice == 1
[L1988]              gas := gas - 21000;
[L1989]  COND TRUE   gas >= 0
[L1990]              assume tokens_s470 >= 0 && tokens_s470 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1991]              assume msgvalue_MSG == 0;
[L1992]  CALL        call success_s470 := transferFrom~address~address~uint256_Litecoin_SV(this, msgsender_MSG, msgvalue_MSG, from_s470, to_s470, tokens_s470);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != from_s470 || p2 != msgsender_MSG) && from_s470 == to_s470) && tokens_s470 <= balances_Litecoin_SV[this][from_s470]) && tokens_s470 <= allowed_Litecoin_SV[this][from_s470][msgsender_MSG]) && tokens_s470 >= 0) && tokens_s470 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_Litecoin_SV[this][to_s470] >= 0) && balances_Litecoin_SV[this][to_s470] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_Litecoin_SV[this][from_s470] >= 0) && balances_Litecoin_SV[this][from_s470] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_Litecoin_SV[this][from_s470][msgsender_MSG] >= 0) && allowed_Litecoin_SV[this][from_s470][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_Litecoin_SV0 := true;
[L3]                 call_transferFrom_Litecoin_SV0 := false;
[L3]                 revert := revert_hold;
[L434]               havoc __exception;
[L435]               revert := false;
[L436]   COND FALSE  !(__exception)
[L461]   CALL        call success_s470 := transferFrom~address~address~uint256_Litecoin_SV__success(this, msgsender_MSG, msgvalue_MSG, from_s470, to_s470, tokens_s470);
[L1012]  COND TRUE   DType[this] == Litecoin_SV
[L1013]  CALL        call __var_4 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_Litecoin_SV[this][from_s470], tokens_s470);
[L850]   COND FALSE  !(!(b_s45 <= a_s45))
[L854]               c_s45 := (a_s45 - b_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1013]  RET         call __var_4 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_Litecoin_SV[this][from_s470], tokens_s470);
[L1014]  COND FALSE  !(revert)
[L1020]              sum_balances0[this] := sum_balances0[this] - balances_Litecoin_SV[this][from_s470];
[L1021]              balances_Litecoin_SV[this][from_s470] := __var_4;
[L1022]              sum_balances0[this] := sum_balances0[this] + balances_Litecoin_SV[this][from_s470];
[L1023]  COND TRUE   DType[this] == Litecoin_SV
[L1024]  CALL        call __var_5 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, allowed_Litecoin_SV[this][from_s470][msgsender_MSG], tokens_s470);
[L850]   COND FALSE  !(!(b_s45 <= a_s45))
[L854]               c_s45 := (a_s45 - b_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1024]  RET         call __var_5 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, allowed_Litecoin_SV[this][from_s470][msgsender_MSG], tokens_s470);
[L1025]  COND FALSE  !(revert)
[L1031]              sum_allowed1[from_s470] := sum_allowed1[from_s470] - allowed_Litecoin_SV[this][from_s470][msgsender_MSG];
[L1032]              allowed_Litecoin_SV[this][from_s470][msgsender_MSG] := __var_5;
[L1033]              sum_allowed1[from_s470] := sum_allowed1[from_s470] + allowed_Litecoin_SV[this][from_s470][msgsender_MSG];
[L1034]  COND TRUE   DType[this] == Litecoin_SV
[L1035]  CALL        call __var_6 := safeAdd~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_Litecoin_SV[this][to_s470], tokens_s470);
[L832]               c_s23 := (a_s23 + b_s23) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L833]   COND FALSE  !(!(c_s23 >= a_s23))
[L1035]  RET         call __var_6 := safeAdd~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_Litecoin_SV[this][to_s470], tokens_s470);
[L1036]  COND FALSE  !(revert)
[L1042]              sum_balances0[this] := sum_balances0[this] - balances_Litecoin_SV[this][to_s470];
[L1043]              balances_Litecoin_SV[this][to_s470] := __var_6;
[L1044]              sum_balances0[this] := sum_balances0[this] + balances_Litecoin_SV[this][to_s470];
[L1045]              assert { :EventEmitted "Transfer_Litecoin_SV" } true;
[L1046]              success_s470 := true;
[L461]   RET         call success_s470 := transferFrom~address~address~uint256_Litecoin_SV__success(this, msgsender_MSG, msgvalue_MSG, from_s470, to_s470, tokens_s470);
[L462]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((((((success_s470 == true && allowed_Litecoin_SV[this][from_s470][msgsender_MSG] == old(allowed_Litecoin_SV[this][from_s470][msgsender_MSG]) - tokens_s470) && _totalSupply_Litecoin_SV[this] == old(_totalSupply_Litecoin_SV[this])) && balances_Litecoin_SV[this] == old(balances_Litecoin_SV[this])) && allowed_Litecoin_SV[this][p1][p2] == old(allowed_Litecoin_SV[this][p1][p2])) && businessName_Litecoin_SV[this] == old(businessName_Litecoin_SV[this])) && businessCountry_Litecoin_SV[this] == old(businessCountry_Litecoin_SV[this])) && symbol_Litecoin_SV[this] == old(symbol_Litecoin_SV[this])) && name_Litecoin_SV[this] == old(name_Litecoin_SV[this])) && decimals_Litecoin_SV[this] == old(decimals_Litecoin_SV[this])) && owner_Owned[this] == old(owner_Owned[this])) && newOwner_Owned[this] == old(newOwner_Owned[this]));
[L3]                 revert := revert_hold;
[L1992]  RET         call success_s470 := transferFrom~address~address~uint256_Litecoin_SV(this, msgsender_MSG, msgvalue_MSG, from_s470, to_s470, tokens_s470);
[L2007]  RET         call CorralChoice_Litecoin_SV(this);

Loop:
[L2007]        assume true;

[2020-11-24 15:04:38,050 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 15:04:38,050 INFO  L82        PathProgramCache]: Analyzing trace with hash -194327091, now seen corresponding path program 1 times
[2020-11-24 15:04:38,051 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 15:04:38,104 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 15:04:38,460 INFO  L134       CoverageAnalysis]: Checked inductivity of 4 backedges. 0 proven. 2 refuted. 0 times theorem prover too weak. 2 trivial. 0 not checked.
[2020-11-24 15:04:38,460 INFO  L312   seRefinementStrategy]: Constructing automaton from 0 perfect and 1 imperfect interpolant sequences.
[2020-11-24 15:04:38,460 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [] imperfect sequences [17] total 17
[2020-11-24 15:04:38,461 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 15:04:38,461 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 17 interpolants.
[2020-11-24 15:04:38,461 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=35, Invalid=237, Unknown=0, NotChecked=0, Total=272
[2020-11-24 15:04:38,461 INFO  L87              Difference]: Start difference. First operand 218 states and 223 transitions. cyclomatic complexity: 6 Second operand 17 states.
[2020-11-24 15:04:38,968 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 15:04:38,968 INFO  L93              Difference]: Finished difference Result 217 states and 221 transitions.
[2020-11-24 15:04:38,969 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 15 states. 
[2020-11-24 15:04:38,969 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 217 states and 221 transitions.
[2020-11-24 15:04:38,970 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 15:04:38,971 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 217 states to 174 states and 177 transitions.
[2020-11-24 15:04:38,972 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 133
[2020-11-24 15:04:38,972 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 133
[2020-11-24 15:04:38,972 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 174 states and 177 transitions.
[2020-11-24 15:04:38,972 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 15:04:38,972 INFO  L728         BuchiCegarLoop]: Abstraction has 174 states and 177 transitions.
[2020-11-24 15:04:38,972 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 174 states and 177 transitions.
[2020-11-24 15:04:38,974 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 174 to 174.
[2020-11-24 15:04:38,974 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 174 states.
[2020-11-24 15:04:38,974 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 174 states to 174 states and 177 transitions.
[2020-11-24 15:04:38,975 INFO  L751         BuchiCegarLoop]: Abstraction has 174 states and 177 transitions.
[2020-11-24 15:04:38,975 INFO  L631         BuchiCegarLoop]: Abstraction has 174 states and 177 transitions.
[2020-11-24 15:04:38,975 INFO  L445         BuchiCegarLoop]: ======== Iteration 6============
[2020-11-24 15:04:38,975 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 174 states and 177 transitions.
[2020-11-24 15:04:38,975 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 15:04:38,975 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 15:04:38,975 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 15:04:38,976 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 15:04:38,976 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L3]                 success_transferFrom_Litecoin_SV0 := false;
[L3]                 call_transferFrom_Litecoin_SV0 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L2002]              assume null == 0;
[L2003]  CALL        call this := FreshRefGenerator__success();
[L815]               havoc newRef;
[L816]               assume Alloc[newRef] == false;
[L817]               Alloc[newRef] := true;
[L818]               assume newRef != null;
[L2003]  RET         call this := FreshRefGenerator__success();
[L2004]              assume now >= 0;
[L2005]              assume DType[this] == Litecoin_SV;
[L2006]              assume !revert && gas >= 0;
[L2007]  CALL        call CorralChoice_Litecoin_SV(this);
[L1885]              havoc msgsender_MSG;
[L1886]              havoc msgvalue_MSG;
[L1887]              havoc choice;
[L1888]              havoc a_s23;
[L1889]              havoc b_s23;
[L1890]              havoc c_s23;
[L1891]              havoc a_s45;
[L1892]              havoc b_s45;
[L1893]              havoc c_s45;
[L1894]              havoc a_s73;
[L1895]              havoc b_s73;
[L1896]              havoc c_s73;
[L1897]              havoc a_s95;
[L1898]              havoc b_s95;
[L1899]              havoc c_s95;
[L1900]              havoc __ret_0_totalSupply;
[L1901]              havoc tokenOwner_s340;
[L1902]              havoc balance_s340;
[L1903]              havoc tokenOwner_s486;
[L1904]              havoc spender_s486;
[L1905]              havoc remaining_s486;
[L1906]              havoc to_s383;
[L1907]              havoc tokens_s383;
[L1908]              havoc success_s383;
[L1909]              havoc spender_s411;
[L1910]              havoc tokens_s411;
[L1911]              havoc success_s411;
[L1912]              havoc from_s470;
[L1913]              havoc to_s470;
[L1914]              havoc tokens_s470;
[L1915]              havoc success_s470;
[L1916]              havoc __ret_0_owner;
[L1917]              havoc __ret_0_newOwner;
[L1918]              havoc _newOwner_s217;
[L1919]              havoc __ret_0_businessName;
[L1920]              havoc __ret_0_businessCountry;
[L1921]              havoc __ret_0_symbol;
[L1922]              havoc __ret_0_name;
[L1923]              havoc __ret_0_decimals;
[L1924]              havoc __ret_0__totalSupply;
[L1925]              havoc spender_s529;
[L1926]              havoc tokens_s529;
[L1927]              havoc data_s529;
[L1928]              havoc success_s529;
[L1929]              havoc tokenAddress_s556;
[L1930]              havoc tokens_s556;
[L1931]              havoc success_s556;
[L1932]              havoc tmpNow;
[L1933]              havoc gas;
[L1934]              assume gas > 4000000 && gas <= 8000000;
[L1935]              tmpNow := now;
[L1936]              havoc now;
[L1937]              assume now > tmpNow;
[L1938]              assume msgsender_MSG != null;
[L1939]  COND FALSE  !(choice == 8)
[L1947]  COND FALSE  !(choice == 7)
[L1955]  COND FALSE  !(choice == 6)
[L1961]  COND FALSE  !(choice == 5)
[L1967]  COND FALSE  !(choice == 4)
[L1973]  COND FALSE  !(choice == 3)
[L1980]  COND FALSE  !(choice == 2)
[L1987]  COND TRUE   choice == 1
[L1988]              gas := gas - 21000;
[L1989]  COND TRUE   gas >= 0
[L1990]              assume tokens_s470 >= 0 && tokens_s470 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1991]              assume msgvalue_MSG == 0;
[L1992]  CALL        call success_s470 := transferFrom~address~address~uint256_Litecoin_SV(this, msgsender_MSG, msgvalue_MSG, from_s470, to_s470, tokens_s470);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != from_s470 || p2 != msgsender_MSG) && from_s470 == to_s470) && tokens_s470 <= balances_Litecoin_SV[this][from_s470]) && tokens_s470 <= allowed_Litecoin_SV[this][from_s470][msgsender_MSG]) && tokens_s470 >= 0) && tokens_s470 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_Litecoin_SV[this][to_s470] >= 0) && balances_Litecoin_SV[this][to_s470] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_Litecoin_SV[this][from_s470] >= 0) && balances_Litecoin_SV[this][from_s470] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_Litecoin_SV[this][from_s470][msgsender_MSG] >= 0) && allowed_Litecoin_SV[this][from_s470][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_Litecoin_SV0 := true;
[L3]                 call_transferFrom_Litecoin_SV0 := false;
[L3]                 revert := revert_hold;
[L434]               havoc __exception;
[L435]               revert := false;
[L436]   COND TRUE   __exception
[L437]               __tmp__Balance := Balance;
[L438]               __tmp__DType := DType;
[L439]               __tmp__Alloc := Alloc;
[L440]               __tmp__balance_ADDR := balance_ADDR;
[L441]               __tmp__M_Ref_int := M_Ref_int;
[L442]               __tmp__sum_balances0 := sum_balances0;
[L443]               __tmp__alloc_allowed_Litecoin_SV_lvl0 := alloc_allowed_Litecoin_SV_lvl0;
[L444]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L445]               __tmp__sum_allowed1 := sum_allowed1;
[L446]               __tmp__Length := Length;
[L447]               __tmp__now := now;
[L448]               __tmp__owner_Owned := owner_Owned;
[L449]               __tmp__newOwner_Owned := newOwner_Owned;
[L450]               __tmp__businessName_Litecoin_SV := businessName_Litecoin_SV;
[L451]               __tmp__businessCountry_Litecoin_SV := businessCountry_Litecoin_SV;
[L452]               __tmp__symbol_Litecoin_SV := symbol_Litecoin_SV;
[L453]               __tmp__name_Litecoin_SV := name_Litecoin_SV;
[L454]               __tmp__decimals_Litecoin_SV := decimals_Litecoin_SV;
[L455]               __tmp___totalSupply_Litecoin_SV := _totalSupply_Litecoin_SV;
[L456]               __tmp__balances_Litecoin_SV := balances_Litecoin_SV;
[L457]               __tmp__allowed_Litecoin_SV := allowed_Litecoin_SV;
[L458]   CALL        call success_s470 := transferFrom~address~address~uint256_Litecoin_SV__fail(this, msgsender_MSG, msgvalue_MSG, from_s470, to_s470, tokens_s470);
[L970]   COND TRUE   __tmp__DType[this] == Litecoin_SV
[L971]   CALL        call __var_4 := safeSub~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balances_Litecoin_SV[this][from_s470], tokens_s470);
[L841]   COND FALSE  !(!(b_s45 <= a_s45))
[L845]               c_s45 := (a_s45 - b_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L971]   RET         call __var_4 := safeSub~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balances_Litecoin_SV[this][from_s470], tokens_s470);
[L972]   COND FALSE  !(revert)
[L978]               __tmp__sum_balances0[this] := __tmp__sum_balances0[this] - __tmp__balances_Litecoin_SV[this][from_s470];
[L979]               __tmp__balances_Litecoin_SV[this][from_s470] := __var_4;
[L980]               __tmp__sum_balances0[this] := __tmp__sum_balances0[this] + __tmp__balances_Litecoin_SV[this][from_s470];
[L981]   COND TRUE   __tmp__DType[this] == Litecoin_SV
[L982]   CALL        call __var_5 := safeSub~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__allowed_Litecoin_SV[this][from_s470][msgsender_MSG], tokens_s470);
[L841]   COND TRUE   !(b_s45 <= a_s45)
[L842]               revert := true;
[L982]   RET         call __var_5 := safeSub~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__allowed_Litecoin_SV[this][from_s470][msgsender_MSG], tokens_s470);
[L983]   COND TRUE   revert
[L458]   RET         call success_s470 := transferFrom~address~address~uint256_Litecoin_SV__fail(this, msgsender_MSG, msgvalue_MSG, from_s470, to_s470, tokens_s470);
[L459]               assume revert || gas < 0;
[L1992]  RET         call success_s470 := transferFrom~address~address~uint256_Litecoin_SV(this, msgsender_MSG, msgvalue_MSG, from_s470, to_s470, tokens_s470);
[L2007]  RET         call CorralChoice_Litecoin_SV(this);

Loop:
[L2007]        assume true;

[2020-11-24 15:04:38,978 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 15:04:38,978 INFO  L82        PathProgramCache]: Analyzing trace with hash -121024508, now seen corresponding path program 1 times
[2020-11-24 15:04:38,979 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 15:04:38,985 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 15:04:39,009 INFO  L134       CoverageAnalysis]: Checked inductivity of 3 backedges. 2 proven. 0 refuted. 0 times theorem prover too weak. 1 trivial. 0 not checked.
[2020-11-24 15:04:39,009 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 15:04:39,009 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [7] imperfect sequences [] total 7
[2020-11-24 15:04:39,010 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 15:04:39,010 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 7 interpolants.
[2020-11-24 15:04:39,010 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=11, Invalid=31, Unknown=0, NotChecked=0, Total=42
[2020-11-24 15:04:39,010 INFO  L87              Difference]: Start difference. First operand 174 states and 177 transitions. cyclomatic complexity: 4 Second operand 7 states.
[2020-11-24 15:04:39,036 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 15:04:39,036 INFO  L93              Difference]: Finished difference Result 176 states and 178 transitions.
[2020-11-24 15:04:39,036 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 8 states. 
[2020-11-24 15:04:39,037 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 176 states and 178 transitions.
[2020-11-24 15:04:39,037 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 15:04:39,038 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 176 states to 169 states and 171 transitions.
[2020-11-24 15:04:39,038 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 128
[2020-11-24 15:04:39,038 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 128
[2020-11-24 15:04:39,038 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 169 states and 171 transitions.
[2020-11-24 15:04:39,038 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 15:04:39,039 INFO  L728         BuchiCegarLoop]: Abstraction has 169 states and 171 transitions.
[2020-11-24 15:04:39,039 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 169 states and 171 transitions.
[2020-11-24 15:04:39,040 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 169 to 169.
[2020-11-24 15:04:39,040 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 169 states.
[2020-11-24 15:04:39,040 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 169 states to 169 states and 171 transitions.
[2020-11-24 15:04:39,040 INFO  L751         BuchiCegarLoop]: Abstraction has 169 states and 171 transitions.
[2020-11-24 15:04:39,040 INFO  L631         BuchiCegarLoop]: Abstraction has 169 states and 171 transitions.
[2020-11-24 15:04:39,040 INFO  L445         BuchiCegarLoop]: ======== Iteration 7============
[2020-11-24 15:04:39,040 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 169 states and 171 transitions.
[2020-11-24 15:04:39,041 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 15:04:39,041 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 15:04:39,041 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 15:04:39,042 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 15:04:39,042 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L3]                 success_transferFrom_Litecoin_SV0 := false;
[L3]                 call_transferFrom_Litecoin_SV0 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L2002]              assume null == 0;
[L2003]  CALL        call this := FreshRefGenerator__success();
[L815]               havoc newRef;
[L816]               assume Alloc[newRef] == false;
[L817]               Alloc[newRef] := true;
[L818]               assume newRef != null;
[L2003]  RET         call this := FreshRefGenerator__success();
[L2004]              assume now >= 0;
[L2005]              assume DType[this] == Litecoin_SV;
[L2006]              assume !revert && gas >= 0;
[L2007]  CALL        call CorralChoice_Litecoin_SV(this);
[L1885]              havoc msgsender_MSG;
[L1886]              havoc msgvalue_MSG;
[L1887]              havoc choice;
[L1888]              havoc a_s23;
[L1889]              havoc b_s23;
[L1890]              havoc c_s23;
[L1891]              havoc a_s45;
[L1892]              havoc b_s45;
[L1893]              havoc c_s45;
[L1894]              havoc a_s73;
[L1895]              havoc b_s73;
[L1896]              havoc c_s73;
[L1897]              havoc a_s95;
[L1898]              havoc b_s95;
[L1899]              havoc c_s95;
[L1900]              havoc __ret_0_totalSupply;
[L1901]              havoc tokenOwner_s340;
[L1902]              havoc balance_s340;
[L1903]              havoc tokenOwner_s486;
[L1904]              havoc spender_s486;
[L1905]              havoc remaining_s486;
[L1906]              havoc to_s383;
[L1907]              havoc tokens_s383;
[L1908]              havoc success_s383;
[L1909]              havoc spender_s411;
[L1910]              havoc tokens_s411;
[L1911]              havoc success_s411;
[L1912]              havoc from_s470;
[L1913]              havoc to_s470;
[L1914]              havoc tokens_s470;
[L1915]              havoc success_s470;
[L1916]              havoc __ret_0_owner;
[L1917]              havoc __ret_0_newOwner;
[L1918]              havoc _newOwner_s217;
[L1919]              havoc __ret_0_businessName;
[L1920]              havoc __ret_0_businessCountry;
[L1921]              havoc __ret_0_symbol;
[L1922]              havoc __ret_0_name;
[L1923]              havoc __ret_0_decimals;
[L1924]              havoc __ret_0__totalSupply;
[L1925]              havoc spender_s529;
[L1926]              havoc tokens_s529;
[L1927]              havoc data_s529;
[L1928]              havoc success_s529;
[L1929]              havoc tokenAddress_s556;
[L1930]              havoc tokens_s556;
[L1931]              havoc success_s556;
[L1932]              havoc tmpNow;
[L1933]              havoc gas;
[L1934]              assume gas > 4000000 && gas <= 8000000;
[L1935]              tmpNow := now;
[L1936]              havoc now;
[L1937]              assume now > tmpNow;
[L1938]              assume msgsender_MSG != null;
[L1939]  COND FALSE  !(choice == 8)
[L1947]  COND FALSE  !(choice == 7)
[L1955]  COND FALSE  !(choice == 6)
[L1961]  COND FALSE  !(choice == 5)
[L1967]  COND FALSE  !(choice == 4)
[L1973]  COND FALSE  !(choice == 3)
[L1980]  COND FALSE  !(choice == 2)
[L1987]  COND TRUE   choice == 1
[L1988]              gas := gas - 21000;
[L1989]  COND TRUE   gas >= 0
[L1990]              assume tokens_s470 >= 0 && tokens_s470 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1991]              assume msgvalue_MSG == 0;
[L1992]  CALL        call success_s470 := transferFrom~address~address~uint256_Litecoin_SV(this, msgsender_MSG, msgvalue_MSG, from_s470, to_s470, tokens_s470);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != from_s470 || p2 != msgsender_MSG) && from_s470 == to_s470) && tokens_s470 <= balances_Litecoin_SV[this][from_s470]) && tokens_s470 <= allowed_Litecoin_SV[this][from_s470][msgsender_MSG]) && tokens_s470 >= 0) && tokens_s470 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_Litecoin_SV[this][to_s470] >= 0) && balances_Litecoin_SV[this][to_s470] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_Litecoin_SV[this][from_s470] >= 0) && balances_Litecoin_SV[this][from_s470] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_Litecoin_SV[this][from_s470][msgsender_MSG] >= 0) && allowed_Litecoin_SV[this][from_s470][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_Litecoin_SV0 := true;
[L3]                 call_transferFrom_Litecoin_SV0 := false;
[L3]                 revert := revert_hold;
[L434]               havoc __exception;
[L435]               revert := false;
[L436]   COND TRUE   __exception
[L437]               __tmp__Balance := Balance;
[L438]               __tmp__DType := DType;
[L439]               __tmp__Alloc := Alloc;
[L440]               __tmp__balance_ADDR := balance_ADDR;
[L441]               __tmp__M_Ref_int := M_Ref_int;
[L442]               __tmp__sum_balances0 := sum_balances0;
[L443]               __tmp__alloc_allowed_Litecoin_SV_lvl0 := alloc_allowed_Litecoin_SV_lvl0;
[L444]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L445]               __tmp__sum_allowed1 := sum_allowed1;
[L446]               __tmp__Length := Length;
[L447]               __tmp__now := now;
[L448]               __tmp__owner_Owned := owner_Owned;
[L449]               __tmp__newOwner_Owned := newOwner_Owned;
[L450]               __tmp__businessName_Litecoin_SV := businessName_Litecoin_SV;
[L451]               __tmp__businessCountry_Litecoin_SV := businessCountry_Litecoin_SV;
[L452]               __tmp__symbol_Litecoin_SV := symbol_Litecoin_SV;
[L453]               __tmp__name_Litecoin_SV := name_Litecoin_SV;
[L454]               __tmp__decimals_Litecoin_SV := decimals_Litecoin_SV;
[L455]               __tmp___totalSupply_Litecoin_SV := _totalSupply_Litecoin_SV;
[L456]               __tmp__balances_Litecoin_SV := balances_Litecoin_SV;
[L457]               __tmp__allowed_Litecoin_SV := allowed_Litecoin_SV;
[L458]   CALL        call success_s470 := transferFrom~address~address~uint256_Litecoin_SV__fail(this, msgsender_MSG, msgvalue_MSG, from_s470, to_s470, tokens_s470);
[L970]   COND TRUE   __tmp__DType[this] == Litecoin_SV
[L971]   CALL        call __var_4 := safeSub~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balances_Litecoin_SV[this][from_s470], tokens_s470);
[L841]   COND FALSE  !(!(b_s45 <= a_s45))
[L845]               c_s45 := (a_s45 - b_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L971]   RET         call __var_4 := safeSub~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balances_Litecoin_SV[this][from_s470], tokens_s470);
[L972]   COND FALSE  !(revert)
[L978]               __tmp__sum_balances0[this] := __tmp__sum_balances0[this] - __tmp__balances_Litecoin_SV[this][from_s470];
[L979]               __tmp__balances_Litecoin_SV[this][from_s470] := __var_4;
[L980]               __tmp__sum_balances0[this] := __tmp__sum_balances0[this] + __tmp__balances_Litecoin_SV[this][from_s470];
[L981]   COND TRUE   __tmp__DType[this] == Litecoin_SV
[L982]   CALL        call __var_5 := safeSub~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__allowed_Litecoin_SV[this][from_s470][msgsender_MSG], tokens_s470);
[L841]   COND FALSE  !(!(b_s45 <= a_s45))
[L845]               c_s45 := (a_s45 - b_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L982]   RET         call __var_5 := safeSub~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__allowed_Litecoin_SV[this][from_s470][msgsender_MSG], tokens_s470);
[L983]   COND FALSE  !(revert)
[L989]               __tmp__sum_allowed1[from_s470] := __tmp__sum_allowed1[from_s470] - __tmp__allowed_Litecoin_SV[this][from_s470][msgsender_MSG];
[L990]               __tmp__allowed_Litecoin_SV[this][from_s470][msgsender_MSG] := __var_5;
[L991]               __tmp__sum_allowed1[from_s470] := __tmp__sum_allowed1[from_s470] + __tmp__allowed_Litecoin_SV[this][from_s470][msgsender_MSG];
[L992]   COND TRUE   __tmp__DType[this] == Litecoin_SV
[L993]   CALL        call __var_6 := safeAdd~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balances_Litecoin_SV[this][to_s470], tokens_s470);
[L823]               c_s23 := (a_s23 + b_s23) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L824]   COND TRUE   !(c_s23 >= a_s23)
[L825]               revert := true;
[L993]   RET         call __var_6 := safeAdd~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balances_Litecoin_SV[this][to_s470], tokens_s470);
[L994]   COND TRUE   revert
[L458]   RET         call success_s470 := transferFrom~address~address~uint256_Litecoin_SV__fail(this, msgsender_MSG, msgvalue_MSG, from_s470, to_s470, tokens_s470);
[L459]               assume revert || gas < 0;
[L1992]  RET         call success_s470 := transferFrom~address~address~uint256_Litecoin_SV(this, msgsender_MSG, msgvalue_MSG, from_s470, to_s470, tokens_s470);
[L2007]  RET         call CorralChoice_Litecoin_SV(this);

Loop:
[L2007]        assume true;

[2020-11-24 15:04:39,043 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 15:04:39,044 INFO  L82        PathProgramCache]: Analyzing trace with hash -728233842, now seen corresponding path program 1 times
[2020-11-24 15:04:39,044 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 15:04:39,052 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 15:04:39,107 INFO  L134       CoverageAnalysis]: Checked inductivity of 4 backedges. 0 proven. 3 refuted. 0 times theorem prover too weak. 1 trivial. 0 not checked.
[2020-11-24 15:04:39,107 INFO  L312   seRefinementStrategy]: Constructing automaton from 0 perfect and 1 imperfect interpolant sequences.
[2020-11-24 15:04:39,107 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [] imperfect sequences [12] total 12
[2020-11-24 15:04:39,107 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 15:04:39,107 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 12 interpolants.
[2020-11-24 15:04:39,107 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=23, Invalid=109, Unknown=0, NotChecked=0, Total=132
[2020-11-24 15:04:39,108 INFO  L87              Difference]: Start difference. First operand 169 states and 171 transitions. cyclomatic complexity: 3 Second operand 12 states.
[2020-11-24 15:04:39,184 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 15:04:39,184 INFO  L93              Difference]: Finished difference Result 171 states and 172 transitions.
[2020-11-24 15:04:39,184 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 13 states. 
[2020-11-24 15:04:39,184 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 171 states and 172 transitions.
[2020-11-24 15:04:39,185 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 15:04:39,185 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 171 states to 164 states and 165 transitions.
[2020-11-24 15:04:39,185 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 123
[2020-11-24 15:04:39,186 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 123
[2020-11-24 15:04:39,186 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 164 states and 165 transitions.
[2020-11-24 15:04:39,186 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 15:04:39,186 INFO  L728         BuchiCegarLoop]: Abstraction has 164 states and 165 transitions.
[2020-11-24 15:04:39,186 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 164 states and 165 transitions.
[2020-11-24 15:04:39,187 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 164 to 164.
[2020-11-24 15:04:39,187 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 164 states.
[2020-11-24 15:04:39,188 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 164 states to 164 states and 165 transitions.
[2020-11-24 15:04:39,188 INFO  L751         BuchiCegarLoop]: Abstraction has 164 states and 165 transitions.
[2020-11-24 15:04:39,188 INFO  L631         BuchiCegarLoop]: Abstraction has 164 states and 165 transitions.
[2020-11-24 15:04:39,188 INFO  L445         BuchiCegarLoop]: ======== Iteration 8============
[2020-11-24 15:04:39,188 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 164 states and 165 transitions.
[2020-11-24 15:04:39,188 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 15:04:39,188 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 15:04:39,189 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 15:04:39,189 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 15:04:39,189 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L3]                 success_transferFrom_Litecoin_SV0 := false;
[L3]                 call_transferFrom_Litecoin_SV0 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L2002]              assume null == 0;
[L2003]  CALL        call this := FreshRefGenerator__success();
[L815]               havoc newRef;
[L816]               assume Alloc[newRef] == false;
[L817]               Alloc[newRef] := true;
[L818]               assume newRef != null;
[L2003]  RET         call this := FreshRefGenerator__success();
[L2004]              assume now >= 0;
[L2005]              assume DType[this] == Litecoin_SV;
[L2006]              assume !revert && gas >= 0;
[L2007]  CALL        call CorralChoice_Litecoin_SV(this);
[L1885]              havoc msgsender_MSG;
[L1886]              havoc msgvalue_MSG;
[L1887]              havoc choice;
[L1888]              havoc a_s23;
[L1889]              havoc b_s23;
[L1890]              havoc c_s23;
[L1891]              havoc a_s45;
[L1892]              havoc b_s45;
[L1893]              havoc c_s45;
[L1894]              havoc a_s73;
[L1895]              havoc b_s73;
[L1896]              havoc c_s73;
[L1897]              havoc a_s95;
[L1898]              havoc b_s95;
[L1899]              havoc c_s95;
[L1900]              havoc __ret_0_totalSupply;
[L1901]              havoc tokenOwner_s340;
[L1902]              havoc balance_s340;
[L1903]              havoc tokenOwner_s486;
[L1904]              havoc spender_s486;
[L1905]              havoc remaining_s486;
[L1906]              havoc to_s383;
[L1907]              havoc tokens_s383;
[L1908]              havoc success_s383;
[L1909]              havoc spender_s411;
[L1910]              havoc tokens_s411;
[L1911]              havoc success_s411;
[L1912]              havoc from_s470;
[L1913]              havoc to_s470;
[L1914]              havoc tokens_s470;
[L1915]              havoc success_s470;
[L1916]              havoc __ret_0_owner;
[L1917]              havoc __ret_0_newOwner;
[L1918]              havoc _newOwner_s217;
[L1919]              havoc __ret_0_businessName;
[L1920]              havoc __ret_0_businessCountry;
[L1921]              havoc __ret_0_symbol;
[L1922]              havoc __ret_0_name;
[L1923]              havoc __ret_0_decimals;
[L1924]              havoc __ret_0__totalSupply;
[L1925]              havoc spender_s529;
[L1926]              havoc tokens_s529;
[L1927]              havoc data_s529;
[L1928]              havoc success_s529;
[L1929]              havoc tokenAddress_s556;
[L1930]              havoc tokens_s556;
[L1931]              havoc success_s556;
[L1932]              havoc tmpNow;
[L1933]              havoc gas;
[L1934]              assume gas > 4000000 && gas <= 8000000;
[L1935]              tmpNow := now;
[L1936]              havoc now;
[L1937]              assume now > tmpNow;
[L1938]              assume msgsender_MSG != null;
[L1939]  COND FALSE  !(choice == 8)
[L1947]  COND FALSE  !(choice == 7)
[L1955]  COND FALSE  !(choice == 6)
[L1961]  COND FALSE  !(choice == 5)
[L1967]  COND FALSE  !(choice == 4)
[L1973]  COND FALSE  !(choice == 3)
[L1980]  COND FALSE  !(choice == 2)
[L1987]  COND TRUE   choice == 1
[L1988]              gas := gas - 21000;
[L1989]  COND TRUE   gas >= 0
[L1990]              assume tokens_s470 >= 0 && tokens_s470 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1991]              assume msgvalue_MSG == 0;
[L1992]  CALL        call success_s470 := transferFrom~address~address~uint256_Litecoin_SV(this, msgsender_MSG, msgvalue_MSG, from_s470, to_s470, tokens_s470);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != from_s470 || p2 != msgsender_MSG) && from_s470 == to_s470) && tokens_s470 <= balances_Litecoin_SV[this][from_s470]) && tokens_s470 <= allowed_Litecoin_SV[this][from_s470][msgsender_MSG]) && tokens_s470 >= 0) && tokens_s470 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_Litecoin_SV[this][to_s470] >= 0) && balances_Litecoin_SV[this][to_s470] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_Litecoin_SV[this][from_s470] >= 0) && balances_Litecoin_SV[this][from_s470] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_Litecoin_SV[this][from_s470][msgsender_MSG] >= 0) && allowed_Litecoin_SV[this][from_s470][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_Litecoin_SV0 := true;
[L3]                 call_transferFrom_Litecoin_SV0 := false;
[L3]                 revert := revert_hold;
[L434]               havoc __exception;
[L435]               revert := false;
[L436]   COND TRUE   __exception
[L437]               __tmp__Balance := Balance;
[L438]               __tmp__DType := DType;
[L439]               __tmp__Alloc := Alloc;
[L440]               __tmp__balance_ADDR := balance_ADDR;
[L441]               __tmp__M_Ref_int := M_Ref_int;
[L442]               __tmp__sum_balances0 := sum_balances0;
[L443]               __tmp__alloc_allowed_Litecoin_SV_lvl0 := alloc_allowed_Litecoin_SV_lvl0;
[L444]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L445]               __tmp__sum_allowed1 := sum_allowed1;
[L446]               __tmp__Length := Length;
[L447]               __tmp__now := now;
[L448]               __tmp__owner_Owned := owner_Owned;
[L449]               __tmp__newOwner_Owned := newOwner_Owned;
[L450]               __tmp__businessName_Litecoin_SV := businessName_Litecoin_SV;
[L451]               __tmp__businessCountry_Litecoin_SV := businessCountry_Litecoin_SV;
[L452]               __tmp__symbol_Litecoin_SV := symbol_Litecoin_SV;
[L453]               __tmp__name_Litecoin_SV := name_Litecoin_SV;
[L454]               __tmp__decimals_Litecoin_SV := decimals_Litecoin_SV;
[L455]               __tmp___totalSupply_Litecoin_SV := _totalSupply_Litecoin_SV;
[L456]               __tmp__balances_Litecoin_SV := balances_Litecoin_SV;
[L457]               __tmp__allowed_Litecoin_SV := allowed_Litecoin_SV;
[L458]   CALL        call success_s470 := transferFrom~address~address~uint256_Litecoin_SV__fail(this, msgsender_MSG, msgvalue_MSG, from_s470, to_s470, tokens_s470);
[L970]   COND TRUE   __tmp__DType[this] == Litecoin_SV
[L971]   CALL        call __var_4 := safeSub~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balances_Litecoin_SV[this][from_s470], tokens_s470);
[L841]   COND FALSE  !(!(b_s45 <= a_s45))
[L845]               c_s45 := (a_s45 - b_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L971]   RET         call __var_4 := safeSub~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balances_Litecoin_SV[this][from_s470], tokens_s470);
[L972]   COND FALSE  !(revert)
[L978]               __tmp__sum_balances0[this] := __tmp__sum_balances0[this] - __tmp__balances_Litecoin_SV[this][from_s470];
[L979]               __tmp__balances_Litecoin_SV[this][from_s470] := __var_4;
[L980]               __tmp__sum_balances0[this] := __tmp__sum_balances0[this] + __tmp__balances_Litecoin_SV[this][from_s470];
[L981]   COND TRUE   __tmp__DType[this] == Litecoin_SV
[L982]   CALL        call __var_5 := safeSub~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__allowed_Litecoin_SV[this][from_s470][msgsender_MSG], tokens_s470);
[L841]   COND FALSE  !(!(b_s45 <= a_s45))
[L845]               c_s45 := (a_s45 - b_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L982]   RET         call __var_5 := safeSub~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__allowed_Litecoin_SV[this][from_s470][msgsender_MSG], tokens_s470);
[L983]   COND FALSE  !(revert)
[L989]               __tmp__sum_allowed1[from_s470] := __tmp__sum_allowed1[from_s470] - __tmp__allowed_Litecoin_SV[this][from_s470][msgsender_MSG];
[L990]               __tmp__allowed_Litecoin_SV[this][from_s470][msgsender_MSG] := __var_5;
[L991]               __tmp__sum_allowed1[from_s470] := __tmp__sum_allowed1[from_s470] + __tmp__allowed_Litecoin_SV[this][from_s470][msgsender_MSG];
[L992]   COND TRUE   __tmp__DType[this] == Litecoin_SV
[L993]   CALL        call __var_6 := safeAdd~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balances_Litecoin_SV[this][to_s470], tokens_s470);
[L823]               c_s23 := (a_s23 + b_s23) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L824]   COND FALSE  !(!(c_s23 >= a_s23))
[L993]   RET         call __var_6 := safeAdd~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balances_Litecoin_SV[this][to_s470], tokens_s470);
[L994]   COND FALSE  !(revert)
[L1000]              __tmp__sum_balances0[this] := __tmp__sum_balances0[this] - __tmp__balances_Litecoin_SV[this][to_s470];
[L1001]              __tmp__balances_Litecoin_SV[this][to_s470] := __var_6;
[L1002]              __tmp__sum_balances0[this] := __tmp__sum_balances0[this] + __tmp__balances_Litecoin_SV[this][to_s470];
[L1003]              success_s470 := true;
[L458]   RET         call success_s470 := transferFrom~address~address~uint256_Litecoin_SV__fail(this, msgsender_MSG, msgvalue_MSG, from_s470, to_s470, tokens_s470);
[L459]               assume revert || gas < 0;
[L1992]  RET         call success_s470 := transferFrom~address~address~uint256_Litecoin_SV(this, msgsender_MSG, msgvalue_MSG, from_s470, to_s470, tokens_s470);
[L2007]  RET         call CorralChoice_Litecoin_SV(this);

Loop:
[L2007]        assume true;

[2020-11-24 15:04:39,191 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 15:04:39,191 INFO  L82        PathProgramCache]: Analyzing trace with hash -1679041777, now seen corresponding path program 1 times
[2020-11-24 15:04:39,192 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 15:04:39,197 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 15:04:39,213 INFO  L134       CoverageAnalysis]: Checked inductivity of 4 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 4 trivial. 0 not checked.
[2020-11-24 15:04:39,214 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 15:04:39,214 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [5] imperfect sequences [] total 5
[2020-11-24 15:04:39,214 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 15:04:39,214 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 5 interpolants.
[2020-11-24 15:04:39,214 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=7, Invalid=13, Unknown=0, NotChecked=0, Total=20
[2020-11-24 15:04:39,214 INFO  L87              Difference]: Start difference. First operand 164 states and 165 transitions. cyclomatic complexity: 2 Second operand 5 states.
[2020-11-24 15:04:39,222 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 15:04:39,223 INFO  L93              Difference]: Finished difference Result 157 states and 157 transitions.
[2020-11-24 15:04:39,223 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 5 states. 
[2020-11-24 15:04:39,223 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 157 states and 157 transitions.
[2020-11-24 15:04:39,223 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-24 15:04:39,224 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 157 states to 0 states and 0 transitions.
[2020-11-24 15:04:39,224 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 0
[2020-11-24 15:04:39,224 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 0
[2020-11-24 15:04:39,224 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 0 states and 0 transitions.
[2020-11-24 15:04:39,224 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 15:04:39,224 INFO  L728         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-24 15:04:39,224 INFO  L751         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-24 15:04:39,224 INFO  L631         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-24 15:04:39,224 INFO  L445         BuchiCegarLoop]: ======== Iteration 9============
[2020-11-24 15:04:39,224 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 0 states and 0 transitions.
[2020-11-24 15:04:39,224 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-24 15:04:39,224 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is true
[2020-11-24 15:04:39,227 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 24.11 03:04:39 BasicIcfg
[2020-11-24 15:04:39,227 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-24 15:04:39,227 INFO  L168              Benchmark]: Toolchain (without parser) took 3669.07 ms. Allocated memory was 1.0 GB in the beginning and 1.3 GB in the end (delta: 276.8 MB). Free memory was 940.6 MB in the beginning and 891.4 MB in the end (delta: 49.2 MB). Peak memory consumption was 326.0 MB. Max. memory is 15.3 GB.
[2020-11-24 15:04:39,228 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.16 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-24 15:04:39,229 INFO  L168              Benchmark]: Boogie Preprocessor took 77.17 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 935.2 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-24 15:04:39,229 INFO  L168              Benchmark]: UtopiaSpecLang took 53.38 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 929.8 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-24 15:04:39,229 INFO  L168              Benchmark]: Boogie Printer took 10.26 ms. Allocated memory is still 1.0 GB. Free memory is still 929.8 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-24 15:04:39,229 INFO  L168              Benchmark]: RCFGBuilder took 547.99 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 876.1 MB in the end (delta: 53.7 MB). Peak memory consumption was 53.7 MB. Max. memory is 15.3 GB.
[2020-11-24 15:04:39,229 INFO  L168              Benchmark]: UtopiaLTL2Aut took 39.80 ms. Allocated memory is still 1.0 GB. Free memory was 876.1 MB in the beginning and 872.6 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
[2020-11-24 15:04:39,230 INFO  L168              Benchmark]: BÃ¼chi Program Product took 947.50 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 60.3 MB). Free memory was 872.6 MB in the beginning and 931.0 MB in the end (delta: -58.4 MB). Peak memory consumption was 156.3 MB. Max. memory is 15.3 GB.
[2020-11-24 15:04:39,230 INFO  L168              Benchmark]: BlockEncodingV2 took 66.29 ms. Allocated memory is still 1.1 GB. Free memory was 931.0 MB in the beginning and 895.2 MB in the end (delta: 35.8 MB). Peak memory consumption was 35.8 MB. Max. memory is 15.3 GB.
[2020-11-24 15:04:39,230 INFO  L168              Benchmark]: BuchiAutomizer took 1923.69 ms. Allocated memory was 1.1 GB in the beginning and 1.3 GB in the end (delta: 216.5 MB). Free memory was 895.2 MB in the beginning and 891.4 MB in the end (delta: 3.8 MB). Peak memory consumption was 220.4 MB. Max. memory is 15.3 GB.
[2020-11-24 15:04:39,233 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    1636 locations, 2775 edges
  - StatisticsResult: Encoded RCFG
    1586 locations, 2645 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.16 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 77.17 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 935.2 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 53.38 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 929.8 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 10.26 ms. Allocated memory is still 1.0 GB. Free memory is still 929.8 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * RCFGBuilder took 547.99 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 876.1 MB in the end (delta: 53.7 MB). Peak memory consumption was 53.7 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 39.80 ms. Allocated memory is still 1.0 GB. Free memory was 876.1 MB in the beginning and 872.6 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 947.50 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 60.3 MB). Free memory was 872.6 MB in the beginning and 931.0 MB in the end (delta: -58.4 MB). Peak memory consumption was 156.3 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 66.29 ms. Allocated memory is still 1.1 GB. Free memory was 931.0 MB in the beginning and 895.2 MB in the end (delta: 35.8 MB). Peak memory consumption was 35.8 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 1923.69 ms. Allocated memory was 1.1 GB in the beginning and 1.3 GB in the end (delta: 216.5 MB). Free memory was 895.2 MB in the beginning and 891.4 MB in the end (delta: 3.8 MB). Peak memory consumption was 220.4 MB. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    707 locations, 862 edges
  - StatisticsResult: BuchiProgram size
    1636 locations, 2775 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 8 terminating modules (8 trivial, 0 deterministic, 0 nondeterministic). 8 modules have a trivial ranking function, the largest among these consists of 17 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 1.8s and 9 iterations.  TraceHistogramMax:2. Analysis of lassos took 0.7s. Construction of modules took 0.4s. BÃ¼chi inclusion checks took 0.4s. Highest rank in rank-based complementation 0. Minimization of det autom 8. Minimization of nondet autom 0. Automata minimization 0.0s AutomataMinimizationTime, 7 MinimizatonAttempts, 35 StatesRemovedByMinimization, 3 NontrivialMinimizations. Non-live state removal took 0.0s Buchi closure took 0.0s. Biggest automaton had 220 states and ocurred in iteration 2.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 2068 SDtfs, 1875 SDslu, 4494 SDs, 0 SdLazy, 2410 SolverSat, 614 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 0.4s Time	LassoAnalysisResults: nont0 unkn0 SFLI0 SFLT0 conc0 concLT0 SILN0 SILU8 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - AllSpecificationsHoldResult: All specifications hold
    Buchi Automizer proved that the LTL property ! ( ( []( (call_transferFrom_Litecoin_SV0) ==> ( <>(success_transferFrom_Litecoin_SV0) ) ) )) holds
RESULT: Ultimate proved your program to be correct!
Received shutdown request...
