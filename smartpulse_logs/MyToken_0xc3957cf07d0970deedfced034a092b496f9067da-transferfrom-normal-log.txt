This is Ultimate 0.1.24-f1553f5-m
[2020-11-24 15:49:41,017 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-24 15:49:41,018 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-24 15:49:41,031 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-24 15:49:41,032 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-24 15:49:41,032 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-24 15:49:41,033 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-24 15:49:41,035 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-24 15:49:41,037 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-24 15:49:41,037 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-24 15:49:41,038 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-24 15:49:41,038 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-24 15:49:41,039 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-24 15:49:41,040 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-24 15:49:41,041 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-24 15:49:41,041 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-24 15:49:41,042 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-24 15:49:41,043 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-24 15:49:41,045 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-24 15:49:41,046 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-24 15:49:41,047 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-24 15:49:41,047 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-24 15:49:41,049 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-24 15:49:41,049 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-24 15:49:41,049 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-24 15:49:41,050 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-24 15:49:41,050 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-24 15:49:41,051 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-24 15:49:41,051 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-24 15:49:41,051 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-24 15:49:41,052 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-24 15:49:41,052 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-24 15:49:41,053 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-24 15:49:41,053 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-24 15:49:41,054 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-24 15:49:41,054 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-24 15:49:41,055 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-24 15:49:41,055 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-24 15:49:41,055 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-24 15:49:41,056 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-24 15:49:41,056 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-24 15:49:41,056 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-24 15:49:41,064 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-24 15:49:41,064 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-24 15:49:41,065 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-24 15:49:41,065 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-24 15:49:41,065 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-24 15:49:41,066 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-24 15:49:41,066 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-24 15:49:41,066 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-24 15:49:41,066 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-24 15:49:41,066 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-24 15:49:41,066 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-24 15:49:41,066 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-24 15:49:41,066 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-24 15:49:41,066 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-24 15:49:41,066 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-24 15:49:41,067 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-24 15:49:41,067 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-24 15:49:41,067 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-24 15:49:41,067 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-24 15:49:41,067 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-24 15:49:41,067 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-24 15:49:41,067 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-24 15:49:41,067 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-24 15:49:41,067 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-24 15:49:41,068 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-24 15:49:41,068 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-24 15:49:41,089 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-24 15:49:41,099 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-24 15:49:41,102 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-24 15:49:41,104 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-24 15:49:41,104 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-24 15:49:41,105 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/MyToken_0xc3957cf07d0970deedfced034a092b496f9067da_transferfrom-normal.bpl
[2020-11-24 15:49:41,105 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/MyToken_0xc3957cf07d0970deedfced034a092b496f9067da_transferfrom-normal.bpl'
[2020-11-24 15:49:41,167 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-24 15:49:41,168 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-24 15:49:41,169 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-24 15:49:41,169 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-24 15:49:41,169 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-24 15:49:41,185 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "MyToken_0xc3957cf07d0970deedfced034a092b496f9067da_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 03:49:41" (1/1) ...
[2020-11-24 15:49:41,186 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "MyToken_0xc3957cf07d0970deedfced034a092b496f9067da_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 03:49:41" (1/1) ...
[2020-11-24 15:49:41,209 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "MyToken_0xc3957cf07d0970deedfced034a092b496f9067da_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 03:49:41" (1/1) ...
[2020-11-24 15:49:41,210 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "MyToken_0xc3957cf07d0970deedfced034a092b496f9067da_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 03:49:41" (1/1) ...
[2020-11-24 15:49:41,227 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "MyToken_0xc3957cf07d0970deedfced034a092b496f9067da_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 03:49:41" (1/1) ...
[2020-11-24 15:49:41,235 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "MyToken_0xc3957cf07d0970deedfced034a092b496f9067da_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 03:49:41" (1/1) ...
[2020-11-24 15:49:41,239 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "MyToken_0xc3957cf07d0970deedfced034a092b496f9067da_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 03:49:41" (1/1) ...
[2020-11-24 15:49:41,246 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-24 15:49:41,247 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-24 15:49:41,247 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-24 15:49:41,249 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-24 15:49:41,252 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "MyToken_0xc3957cf07d0970deedfced034a092b496f9067da_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 03:49:41" (1/1) ...
[2020-11-24 15:49:41,266 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(MyToken.transferFrom(from, to, value), p1 != from && p1 != to && (p2 != from || p3 != msg.sender) && from != to && value <= balances_MyToken[this][from] && value <= allowed_MyToken[this][from][msg.sender] && balances_MyToken[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_MyToken[this][to] >= 0 && balances_MyToken[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_MyToken[this][from] >= 0 &&  balances_MyToken[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && allowed_MyToken[this][from][msg.sender] >= 0 && allowed_MyToken[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(MyToken.transferFrom(from, to, value), return == true && balances_MyToken[this][from] == old(balances_MyToken[this][from]) - value && balances_MyToken[this][to] == old(balances_MyToken[this][to]) + value && allowed_MyToken[this][from][msg.sender] == old(allowed_MyToken[this][from][msg.sender]) - value && _totalSupply_MyToken[this] == old(_totalSupply_MyToken[this]) && balances_MyToken[this][p1] == old(balances_MyToken[this][p1]) && allowed_MyToken[this][p2][p3] == old(allowed_MyToken[this][p2][p3]) && symbol_MyToken[this] == old(symbol_MyToken[this]) && name_MyToken[this] == old(name_MyToken[this]) && decimals_MyToken[this] == old(decimals_MyToken[this]) && owner_Owned[this] == old(owner_Owned[this]) && newOwner_Owned[this] == old(newOwner_Owned[this]))))
[2020-11-24 15:49:41,272 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(MyToken.transferFrom(from, to, value), p1 != from && p1 != to && (p2 != from || p3 != msg.sender) && from != to && value <= balances_MyToken[this][from] && value <= allowed_MyToken[this][from][msg.sender] && balances_MyToken[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_MyToken[this][to] >= 0 && balances_MyToken[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_MyToken[this][from] >= 0 &&  balances_MyToken[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && allowed_MyToken[this][from][msg.sender] >= 0 && allowed_MyToken[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(MyToken.transferFrom(from, to, value), return == true && balances_MyToken[this][from] == old(balances_MyToken[this][from]) - value && balances_MyToken[this][to] == old(balances_MyToken[this][to]) + value && allowed_MyToken[this][from][msg.sender] == old(allowed_MyToken[this][from][msg.sender]) - value && _totalSupply_MyToken[this] == old(_totalSupply_MyToken[this]) && balances_MyToken[this][p1] == old(balances_MyToken[this][p1]) && allowed_MyToken[this][p2][p3] == old(allowed_MyToken[this][p2][p3]) && symbol_MyToken[this] == old(symbol_MyToken[this]) && name_MyToken[this] == old(name_MyToken[this]) && decimals_MyToken[this] == old(decimals_MyToken[this]) && owner_Owned[this] == old(owner_Owned[this]) && newOwner_Owned[this] == old(newOwner_Owned[this]))))
[2020-11-24 15:49:41,280 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(MyToken.transferFrom(from, to, value), p1 != from && p1 != to && (p2 != from || p3 != msg.sender) && from != to && value <= balances_MyToken[this][from] && value <= allowed_MyToken[this][from][msg.sender] && balances_MyToken[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_MyToken[this][to] >= 0 && balances_MyToken[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_MyToken[this][from] >= 0 &&  balances_MyToken[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && allowed_MyToken[this][from][msg.sender] >= 0 && allowed_MyToken[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(MyToken.transferFrom(from, to, value), return == true && balances_MyToken[this][from] == old(balances_MyToken[this][from]) - value && balances_MyToken[this][to] == old(balances_MyToken[this][to]) + value && allowed_MyToken[this][from][msg.sender] == old(allowed_MyToken[this][from][msg.sender]) - value && _totalSupply_MyToken[this] == old(_totalSupply_MyToken[this]) && balances_MyToken[this][p1] == old(balances_MyToken[this][p1]) && allowed_MyToken[this][p2][p3] == old(allowed_MyToken[this][p2][p3]) && symbol_MyToken[this] == old(symbol_MyToken[this]) && name_MyToken[this] == old(name_MyToken[this]) && decimals_MyToken[this] == old(decimals_MyToken[this]) && owner_Owned[this] == old(owner_Owned[this]) && newOwner_Owned[this] == old(newOwner_Owned[this]))))
[2020-11-24 15:49:41,289 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( ( ( ( ( ( ( p1!=from_s474 && p1!=to_s474 ) && ( p2!=from_s474 || p3!=msg.sender ) ) && from_s474!=to_s474 ) && tokens_s474<=balances_MyToken[this][from_s474] ) && tokens_s474<=allowed_MyToken[this][from_s474][msg.sender] ) && ( balances_MyToken[this][to_s474] + tokens_s474 )<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && tokens_s474>=0 ) && tokens_s474<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && balances_MyToken[this][to_s474]>=0 ) && balances_MyToken[this][to_s474]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && balances_MyToken[this][from_s474]>=0 ) && balances_MyToken[this][from_s474]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && allowed_MyToken[this][from_s474][msg.sender]>=0 ) && allowed_MyToken[this][from_s474][msg.sender]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPNEQ,IdentifierExpression[p1,GLOBAL],IdentifierExpression[from_s474,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_MyToken>]],BinaryExpression[COMPNEQ,IdentifierExpression[p1,GLOBAL],IdentifierExpression[to_s474,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_MyToken>]]],BinaryExpression[LOGICOR,BinaryExpression[COMPNEQ,IdentifierExpression[p2,GLOBAL],IdentifierExpression[from_s474,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_MyToken>]],BinaryExpression[COMPNEQ,IdentifierExpression[p3,GLOBAL],IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_MyToken>]]]],BinaryExpression[COMPNEQ,IdentifierExpression[from_s474,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_MyToken>],IdentifierExpression[to_s474,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_MyToken>]]],BinaryExpression[COMPLEQ,IdentifierExpression[tokens_s474,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_MyToken>],ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_MyToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_MyToken>]]],[IdentifierExpression[from_s474,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_MyToken>]]]]],BinaryExpression[COMPLEQ,IdentifierExpression[tokens_s474,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_MyToken>],ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowed_MyToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_MyToken>]]],[IdentifierExpression[from_s474,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_MyToken>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_MyToken>]]]]],BinaryExpression[COMPLT,BinaryExpression[ARITHPLUS,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_MyToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_MyToken>]]],[IdentifierExpression[to_s474,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_MyToken>]]],IdentifierExpression[tokens_s474,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_MyToken>]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,IdentifierExpression[tokens_s474,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_MyToken>],IntegerLiteral[0]]],BinaryExpression[COMPLT,IdentifierExpression[tokens_s474,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_MyToken>],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_MyToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_MyToken>]]],[IdentifierExpression[to_s474,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_MyToken>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_MyToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_MyToken>]]],[IdentifierExpression[to_s474,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_MyToken>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_MyToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_MyToken>]]],[IdentifierExpression[from_s474,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_MyToken>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_MyToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_MyToken>]]],[IdentifierExpression[from_s474,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_MyToken>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowed_MyToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_MyToken>]]],[IdentifierExpression[from_s474,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_MyToken>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_MyToken>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowed_MyToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_MyToken>]]],[IdentifierExpression[from_s474,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_MyToken>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_MyToken>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]]
[2020-11-24 15:49:41,292 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( ( ( ( success_s474==true && balances_MyToken[this][from_s474]==( ( old(balances_MyToken[this][from_s474]) ) - tokens_s474 ) ) && balances_MyToken[this][to_s474]==( ( old(balances_MyToken[this][to_s474]) ) + tokens_s474 ) ) && allowed_MyToken[this][from_s474][msg.sender]==( ( old(allowed_MyToken[this][from_s474][msg.sender]) ) - tokens_s474 ) ) && _totalSupply_MyToken[this]==( old(_totalSupply_MyToken[this]) ) ) && balances_MyToken[this][p1]==( old(balances_MyToken[this][p1]) ) ) && allowed_MyToken[this][p2][p3]==( old(allowed_MyToken[this][p2][p3]) ) ) && symbol_MyToken[this]==( old(symbol_MyToken[this]) ) ) && name_MyToken[this]==( old(name_MyToken[this]) ) ) && decimals_MyToken[this]==( old(decimals_MyToken[this]) ) ) && owner_Owned[this]==( old(owner_Owned[this]) ) ) && newOwner_Owned[this]==( old(newOwner_Owned[this]) ) ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[success_s474,<IMPLEMENTATION_OUTPARAM,transferFrom~address~address~uint256_MyToken>],BooleanLiteral[true]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_MyToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_MyToken>]]],[IdentifierExpression[from_s474,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_MyToken>]]],BinaryExpression[ARITHMINUS,UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_MyToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_MyToken>]]],[IdentifierExpression[from_s474,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_MyToken>]]]],IdentifierExpression[tokens_s474,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_MyToken>]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_MyToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_MyToken>]]],[IdentifierExpression[to_s474,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_MyToken>]]],BinaryExpression[ARITHPLUS,UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_MyToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_MyToken>]]],[IdentifierExpression[to_s474,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_MyToken>]]]],IdentifierExpression[tokens_s474,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_MyToken>]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowed_MyToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_MyToken>]]],[IdentifierExpression[from_s474,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_MyToken>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_MyToken>]]],BinaryExpression[ARITHMINUS,UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowed_MyToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_MyToken>]]],[IdentifierExpression[from_s474,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_MyToken>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_MyToken>]]]],IdentifierExpression[tokens_s474,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_MyToken>]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_totalSupply_MyToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_MyToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_totalSupply_MyToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_MyToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_MyToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_MyToken>]]],[IdentifierExpression[p1,GLOBAL]]],UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_MyToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_MyToken>]]],[IdentifierExpression[p1,GLOBAL]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowed_MyToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_MyToken>]]],[IdentifierExpression[p2,GLOBAL]]],[IdentifierExpression[p3,GLOBAL]]],UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowed_MyToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_MyToken>]]],[IdentifierExpression[p2,GLOBAL]]],[IdentifierExpression[p3,GLOBAL]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[symbol_MyToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_MyToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[symbol_MyToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_MyToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[name_MyToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_MyToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[name_MyToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_MyToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[decimals_MyToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_MyToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[decimals_MyToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_MyToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[owner_Owned,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_MyToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[owner_Owned,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_MyToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[newOwner_Owned,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_MyToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[newOwner_Owned,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_MyToken>]]]]]]
[2020-11-24 15:49:41,296 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(MyToken.transferFrom(from, to, value), p1 != from && p1 != to && (p2 != from || p3 != msg.sender) && from != to && value <= balances_MyToken[this][from] && value <= allowed_MyToken[this][from][msg.sender] && balances_MyToken[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_MyToken[this][to] >= 0 && balances_MyToken[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_MyToken[this][from] >= 0 &&  balances_MyToken[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && allowed_MyToken[this][from][msg.sender] >= 0 && allowed_MyToken[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(MyToken.transferFrom(from, to, value), return == true && balances_MyToken[this][from] == old(balances_MyToken[this][from]) - value && balances_MyToken[this][to] == old(balances_MyToken[this][to]) + value && allowed_MyToken[this][from][msg.sender] == old(allowed_MyToken[this][from][msg.sender]) - value && _totalSupply_MyToken[this] == old(_totalSupply_MyToken[this]) && balances_MyToken[this][p1] == old(balances_MyToken[this][p1]) && allowed_MyToken[this][p2][p3] == old(allowed_MyToken[this][p2][p3]) && symbol_MyToken[this] == old(symbol_MyToken[this]) && name_MyToken[this] == old(name_MyToken[this]) && decimals_MyToken[this] == old(decimals_MyToken[this]) && owner_Owned[this] == old(owner_Owned[this]) && newOwner_Owned[this] == old(newOwner_Owned[this]))))
[2020-11-24 15:49:41,296 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_transferFrom_MyToken0) ==> ( <>AP(success_transferFrom_MyToken0) ) ) )
Executed UtopiaSpecLang
[2020-11-24 15:49:41,301 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 03:49:41 PropertyContainer
[2020-11-24 15:49:41,302 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-24 15:49:41,302 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-24 15:49:41,302 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-24 15:49:41,302 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-24 15:49:41,303 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "MyToken_0xc3957cf07d0970deedfced034a092b496f9067da_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 03:49:41" (1/2) ...
[2020-11-24 15:49:41,303 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-24 15:49:41,303 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-24 15:49:41,312 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 03:49:41" (2/2) ...
[2020-11-24 15:49:41,313 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-24 15:49:41,313 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-24 15:49:41,313 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-24 15:49:41,313 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-24 15:49:41,314 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "MyToken_0xc3957cf07d0970deedfced034a092b496f9067da_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 03:49:41" (1/2) ...
[2020-11-24 15:49:41,369 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-24 15:49:41,369 INFO  L130     BoogieDeclarations]: Found specification of procedure safeAdd~uint256~uint256_SafeMath
[2020-11-24 15:49:41,369 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeAdd~uint256~uint256_SafeMath
[2020-11-24 15:49:41,369 INFO  L130     BoogieDeclarations]: Found specification of procedure safeSub~uint256~uint256_SafeMath
[2020-11-24 15:49:41,369 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeSub~uint256~uint256_SafeMath
[2020-11-24 15:49:41,369 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_MyToken
[2020-11-24 15:49:41,369 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_MyToken
[2020-11-24 15:49:41,369 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_MyToken
[2020-11-24 15:49:41,369 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_MyToken
[2020-11-24 15:49:41,370 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_MyToken
[2020-11-24 15:49:41,370 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_MyToken
[2020-11-24 15:49:41,370 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_MyToken
[2020-11-24 15:49:41,370 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_MyToken
[2020-11-24 15:49:41,372 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_MyToken
[2020-11-24 15:49:41,372 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_MyToken
[2020-11-24 15:49:41,372 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_MyToken
[2020-11-24 15:49:41,373 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_MyToken
[2020-11-24 15:49:41,374 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-24 15:49:41,374 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-24 15:49:41,374 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-24 15:49:41,374 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__success
[2020-11-24 15:49:41,374 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_SafeMath
[2020-11-24 15:49:41,374 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_SafeMath
[2020-11-24 15:49:41,374 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20Interface
[2020-11-24 15:49:41,374 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20Interface
[2020-11-24 15:49:41,374 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ApproveAndCallFallBack
[2020-11-24 15:49:41,374 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ApproveAndCallFallBack
[2020-11-24 15:49:41,375 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_Owned
[2020-11-24 15:49:41,375 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_Owned
[2020-11-24 15:49:41,375 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_MyToken
[2020-11-24 15:49:41,375 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-24 15:49:41,375 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-24 15:49:41,375 INFO  L130     BoogieDeclarations]: Found specification of procedure safeAdd~uint256~uint256_SafeMath__success
[2020-11-24 15:49:41,375 INFO  L130     BoogieDeclarations]: Found specification of procedure safeAdd~uint256~uint256_SafeMath__fail
[2020-11-24 15:49:41,375 INFO  L130     BoogieDeclarations]: Found specification of procedure safeSub~uint256~uint256_SafeMath__success
[2020-11-24 15:49:41,375 INFO  L130     BoogieDeclarations]: Found specification of procedure safeSub~uint256~uint256_SafeMath__fail
[2020-11-24 15:49:41,375 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_MyToken__success
[2020-11-24 15:49:41,375 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_MyToken__fail
[2020-11-24 15:49:41,375 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_MyToken__success
[2020-11-24 15:49:41,375 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_MyToken__fail
[2020-11-24 15:49:41,376 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_MyToken__success
[2020-11-24 15:49:41,376 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_MyToken__fail
[2020-11-24 15:49:41,376 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_MyToken__success
[2020-11-24 15:49:41,376 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_MyToken__fail
[2020-11-24 15:49:41,376 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_MyToken__success
[2020-11-24 15:49:41,376 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_MyToken__fail
[2020-11-24 15:49:41,376 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_MyToken__success
[2020-11-24 15:49:41,376 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_MyToken__fail
[2020-11-24 15:49:41,376 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-24 15:49:41,376 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-24 15:49:41,376 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-24 15:49:41,376 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__fail
[2020-11-24 15:49:41,376 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-24 15:49:41,376 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-24 15:49:41,377 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeAdd~uint256~uint256_SafeMath__fail
[2020-11-24 15:49:41,377 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeAdd~uint256~uint256_SafeMath__success
[2020-11-24 15:49:41,377 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeSub~uint256~uint256_SafeMath__fail
[2020-11-24 15:49:41,377 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeSub~uint256~uint256_SafeMath__success
[2020-11-24 15:49:41,377 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_MyToken__fail
[2020-11-24 15:49:41,377 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_MyToken__success
[2020-11-24 15:49:41,377 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_MyToken__fail
[2020-11-24 15:49:41,377 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_MyToken__success
[2020-11-24 15:49:41,377 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_MyToken__fail
[2020-11-24 15:49:41,377 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_MyToken__success
[2020-11-24 15:49:41,377 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_MyToken__fail
[2020-11-24 15:49:41,377 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_MyToken__success
[2020-11-24 15:49:41,377 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_MyToken__fail
[2020-11-24 15:49:41,378 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_MyToken__success
[2020-11-24 15:49:41,378 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_MyToken__fail
[2020-11-24 15:49:41,378 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_MyToken__success
[2020-11-24 15:49:41,378 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-24 15:49:41,378 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-24 15:49:41,378 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-24 15:49:41,378 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-24 15:49:41,378 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-24 15:49:41,378 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-24 15:49:41,378 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__fail
[2020-11-24 15:49:41,378 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__success
[2020-11-24 15:49:41,378 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_SafeMath
[2020-11-24 15:49:41,378 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_SafeMath
[2020-11-24 15:49:41,379 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20Interface
[2020-11-24 15:49:41,379 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20Interface
[2020-11-24 15:49:41,379 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ApproveAndCallFallBack
[2020-11-24 15:49:41,379 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ApproveAndCallFallBack
[2020-11-24 15:49:41,379 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_Owned
[2020-11-24 15:49:41,379 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_Owned
[2020-11-24 15:49:41,379 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_MyToken
[2020-11-24 15:49:41,379 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-24 15:49:41,379 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-24 15:49:41,379 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-24 15:49:41,590 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 15:49:41,743 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 15:49:41,743 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 15:49:41,743 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 15:49:41,889 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-24 15:49:41,889 INFO  L286             CfgBuilder]: Removed 5 assue(true) statements.
[2020-11-24 15:49:41,891 INFO  L202        PluginConnector]: Adding new model MyToken_0xc3957cf07d0970deedfced034a092b496f9067da_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 03:49:41 BoogieIcfgContainer
[2020-11-24 15:49:41,892 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 03:49:41" (2/2) ...
[2020-11-24 15:49:41,892 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-24 15:49:41,892 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@1c8d4163 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 03:49:41, skipping insertion in model container
[2020-11-24 15:49:41,892 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-24 15:49:41,893 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-24 15:49:41,893 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-24 15:49:41,894 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-24 15:49:41,894 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "MyToken_0xc3957cf07d0970deedfced034a092b496f9067da_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 03:49:41" (1/3) ...
[2020-11-24 15:49:41,895 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@27c58bc4 and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 03:49:41, skipping insertion in model container
[2020-11-24 15:49:41,895 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 03:49:41" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-24 15:49:41,941 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 03:49:41 NWAContainer
[2020-11-24 15:49:41,941 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-24 15:49:41,941 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-24 15:49:41,942 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-24 15:49:41,942 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-24 15:49:41,943 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "MyToken_0xc3957cf07d0970deedfced034a092b496f9067da_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 03:49:41" (3/4) ...
[2020-11-24 15:49:41,944 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@5f575aac and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 03:49:41, skipping insertion in model container
[2020-11-24 15:49:41,944 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 03:49:41" (4/4) ...
[2020-11-24 15:49:41,948 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-24 15:49:41,951 INFO  L110   BuchiProductObserver]: Initial RCFG 689 locations, 844 edges
[2020-11-24 15:49:41,951 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-24 15:49:41,961 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-24 15:49:42,904 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-24 15:49:42,907 INFO  L110   BuchiProductObserver]: BuchiProgram size 1600 locations, 2721 edges
[2020-11-24 15:49:42,907 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 03:49:42 BoogieIcfgContainer
[2020-11-24 15:49:42,907 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-24 15:49:42,908 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-24 15:49:42,908 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-24 15:49:42,909 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-24 15:49:42,911 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 03:49:42" (1/1) ...
[2020-11-24 15:49:42,968 INFO  L313           BlockEncoder]: Initial Icfg 1600 locations, 2721 edges
[2020-11-24 15:49:42,968 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-24 15:49:42,969 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-24 15:49:42,969 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-24 15:49:42,970 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-24 15:49:42,978 INFO  L70    emoveInfeasibleEdges]: Removed 75 edges and 13 locations because of local infeasibility
[2020-11-24 15:49:42,983 INFO  L70        RemoveSinkStates]: Removed 32 edges and 21 locations by removing sink states
[2020-11-24 15:49:42,989 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-24 15:49:42,991 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-24 15:49:42,993 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-24 15:49:42,993 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-24 15:49:42,996 INFO  L313           BlockEncoder]: Encoded RCFG 1550 locations, 2591 edges
[2020-11-24 15:49:42,997 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 24.11 03:49:42 BasicIcfg
[2020-11-24 15:49:42,997 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-24 15:49:42,997 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-24 15:49:42,997 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-24 15:49:43,000 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-24 15:49:43,001 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 15:49:43,001 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "MyToken_0xc3957cf07d0970deedfced034a092b496f9067da_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 03:49:41" (1/6) ...
[2020-11-24 15:49:43,003 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@b59fb9b and model type MyToken_0xc3957cf07d0970deedfced034a092b496f9067da_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 24.11 03:49:43, skipping insertion in model container
[2020-11-24 15:49:43,003 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 15:49:43,003 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 03:49:41" (2/6) ...
[2020-11-24 15:49:43,003 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@b59fb9b and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 24.11 03:49:43, skipping insertion in model container
[2020-11-24 15:49:43,003 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 15:49:43,003 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "MyToken_0xc3957cf07d0970deedfced034a092b496f9067da_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 03:49:41" (3/6) ...
[2020-11-24 15:49:43,004 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@b59fb9b and model type MyToken_0xc3957cf07d0970deedfced034a092b496f9067da_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 24.11 03:49:43, skipping insertion in model container
[2020-11-24 15:49:43,004 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 15:49:43,004 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 03:49:41" (4/6) ...
[2020-11-24 15:49:43,004 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@b59fb9b and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 24.11 03:49:43, skipping insertion in model container
[2020-11-24 15:49:43,004 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 15:49:43,004 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 03:49:42" (5/6) ...
[2020-11-24 15:49:43,005 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@b59fb9b and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 24.11 03:49:43, skipping insertion in model container
[2020-11-24 15:49:43,005 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 15:49:43,005 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 24.11 03:49:42" (6/6) ...
[2020-11-24 15:49:43,006 INFO  L404   chiAutomizerObserver]: Analyzing ICFG MyToken_0xc3957cf07d0970deedfced034a092b496f9067da_transferfrom-normal.bpl_BEv2
[2020-11-24 15:49:43,053 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-24 15:49:43,054 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-24 15:49:43,054 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-24 15:49:43,054 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-24 15:49:43,054 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-24 15:49:43,054 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-24 15:49:43,054 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-24 15:49:43,054 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-24 15:49:43,054 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-24 15:49:43,075 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1550 states.
[2020-11-24 15:49:43,114 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 15:49:43,114 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 15:49:43,114 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 15:49:43,124 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 15:49:43,124 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
[2020-11-24 15:49:43,124 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-24 15:49:43,124 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1550 states.
[2020-11-24 15:49:43,134 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 15:49:43,135 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 15:49:43,135 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 15:49:43,136 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 15:49:43,137 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L3]                 success_transferFrom_MyToken0 := false;
[L3]                 call_transferFrom_MyToken0 := false;
[L3]     CALL        call main();
[L3]                 havoc p3;
[L3]                 havoc p2;
[L3]                 havoc p1;
[L1946]              assume null == 0;
[L1947]  CALL        call this := FreshRefGenerator__success();
[L767]               havoc newRef;
[L768]               assume Alloc[newRef] == false;
[L769]               Alloc[newRef] := true;
[L770]               assume newRef != null;
[L1947]  RET         call this := FreshRefGenerator__success();
[L1948]              assume now >= 0;
[L1949]              assume DType[this] == MyToken;
[L1950]              assume !revert && gas >= 0;
[L1951]  CALL        call CorralChoice_MyToken(this);
[L1826]              havoc msgsender_MSG;
[L1827]              havoc msgvalue_MSG;
[L1828]              havoc choice;
[L1829]              havoc a_s23;
[L1830]              havoc b_s23;
[L1831]              havoc c_s23;
[L1832]              havoc a_s45;
[L1833]              havoc b_s45;
[L1834]              havoc c_s45;
[L1835]              havoc a_s73;
[L1836]              havoc b_s73;
[L1837]              havoc c_s73;
[L1838]              havoc a_s95;
[L1839]              havoc b_s95;
[L1840]              havoc c_s95;
[L1841]              havoc __ret_0_totalSupply;
[L1842]              havoc tokenOwner_s344;
[L1843]              havoc balance_s344;
[L1844]              havoc tokenOwner_s490;
[L1845]              havoc spender_s490;
[L1846]              havoc remaining_s490;
[L1847]              havoc to_s387;
[L1848]              havoc tokens_s387;
[L1849]              havoc success_s387;
[L1850]              havoc spender_s415;
[L1851]              havoc tokens_s415;
[L1852]              havoc success_s415;
[L1853]              havoc from_s474;
[L1854]              havoc to_s474;
[L1855]              havoc tokens_s474;
[L1856]              havoc success_s474;
[L1857]              havoc __ret_0_owner;
[L1858]              havoc __ret_0_newOwner;
[L1859]              havoc _newOwner_s217;
[L1860]              havoc __ret_0_symbol;
[L1861]              havoc __ret_0_name;
[L1862]              havoc __ret_0_decimals;
[L1863]              havoc __ret_0__totalSupply;
[L1864]              havoc tokenName_s318;
[L1865]              havoc tokenSymbol_s318;
[L1866]              havoc tokenDecimals_s318;
[L1867]              havoc initialSupply_s318;
[L1868]              havoc spender_s533;
[L1869]              havoc tokens_s533;
[L1870]              havoc data_s533;
[L1871]              havoc success_s533;
[L1872]              havoc tmpNow;
[L1873]              havoc gas;
[L1874]              assume gas > 4000000 && gas <= 8000000;
[L1875]              tmpNow := now;
[L1876]              havoc now;
[L1877]              assume now > tmpNow;
[L1878]              assume msgsender_MSG != null;
[L1879]  COND TRUE   choice == 8
[L1880]              gas := gas - 21000;
[L1881]  COND FALSE  !(gas >= 0)
[L1951]  RET         call CorralChoice_MyToken(this);

Loop:
[L1951]        assume true;

[2020-11-24 15:49:43,161 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 15:49:43,161 INFO  L82        PathProgramCache]: Analyzing trace with hash -1341360575, now seen corresponding path program 1 times
[2020-11-24 15:49:43,166 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 15:49:43,188 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 15:49:43,248 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 15:49:43,250 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 15:49:43,251 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [5] imperfect sequences [] total 5
[2020-11-24 15:49:43,254 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 15:49:43,352 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 5 interpolants.
[2020-11-24 15:49:43,353 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=9, Invalid=11, Unknown=0, NotChecked=0, Total=20
[2020-11-24 15:49:43,355 INFO  L87              Difference]: Start difference. First operand 1550 states. Second operand 5 states.
[2020-11-24 15:49:43,535 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 15:49:43,536 INFO  L93              Difference]: Finished difference Result 674 states and 738 transitions.
[2020-11-24 15:49:43,536 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-24 15:49:43,537 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 674 states and 738 transitions.
[2020-11-24 15:49:43,543 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 15:49:43,548 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 674 states to 210 states and 223 transitions.
[2020-11-24 15:49:43,549 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 4
[2020-11-24 15:49:43,550 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 152
[2020-11-24 15:49:43,550 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 210 states and 223 transitions.
[2020-11-24 15:49:43,552 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 15:49:43,552 INFO  L728         BuchiCegarLoop]: Abstraction has 210 states and 223 transitions.
[2020-11-24 15:49:43,567 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 210 states and 223 transitions.
[2020-11-24 15:49:43,581 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 210 to 210.
[2020-11-24 15:49:43,582 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 210 states.
[2020-11-24 15:49:43,583 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 210 states to 210 states and 223 transitions.
[2020-11-24 15:49:43,584 INFO  L751         BuchiCegarLoop]: Abstraction has 210 states and 223 transitions.
[2020-11-24 15:49:43,584 INFO  L631         BuchiCegarLoop]: Abstraction has 210 states and 223 transitions.
[2020-11-24 15:49:43,584 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-24 15:49:43,584 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 210 states and 223 transitions.
[2020-11-24 15:49:43,586 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 15:49:43,586 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 15:49:43,586 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 15:49:43,587 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 15:49:43,587 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L3]                 success_transferFrom_MyToken0 := false;
[L3]                 call_transferFrom_MyToken0 := false;
[L3]     CALL        call main();
[L3]                 havoc p3;
[L3]                 havoc p2;
[L3]                 havoc p1;
[L1946]              assume null == 0;
[L1947]  CALL        call this := FreshRefGenerator__success();
[L767]               havoc newRef;
[L768]               assume Alloc[newRef] == false;
[L769]               Alloc[newRef] := true;
[L770]               assume newRef != null;
[L1947]  RET         call this := FreshRefGenerator__success();
[L1948]              assume now >= 0;
[L1949]              assume DType[this] == MyToken;
[L1950]              assume !revert && gas >= 0;
[L1951]  CALL        call CorralChoice_MyToken(this);
[L1826]              havoc msgsender_MSG;
[L1827]              havoc msgvalue_MSG;
[L1828]              havoc choice;
[L1829]              havoc a_s23;
[L1830]              havoc b_s23;
[L1831]              havoc c_s23;
[L1832]              havoc a_s45;
[L1833]              havoc b_s45;
[L1834]              havoc c_s45;
[L1835]              havoc a_s73;
[L1836]              havoc b_s73;
[L1837]              havoc c_s73;
[L1838]              havoc a_s95;
[L1839]              havoc b_s95;
[L1840]              havoc c_s95;
[L1841]              havoc __ret_0_totalSupply;
[L1842]              havoc tokenOwner_s344;
[L1843]              havoc balance_s344;
[L1844]              havoc tokenOwner_s490;
[L1845]              havoc spender_s490;
[L1846]              havoc remaining_s490;
[L1847]              havoc to_s387;
[L1848]              havoc tokens_s387;
[L1849]              havoc success_s387;
[L1850]              havoc spender_s415;
[L1851]              havoc tokens_s415;
[L1852]              havoc success_s415;
[L1853]              havoc from_s474;
[L1854]              havoc to_s474;
[L1855]              havoc tokens_s474;
[L1856]              havoc success_s474;
[L1857]              havoc __ret_0_owner;
[L1858]              havoc __ret_0_newOwner;
[L1859]              havoc _newOwner_s217;
[L1860]              havoc __ret_0_symbol;
[L1861]              havoc __ret_0_name;
[L1862]              havoc __ret_0_decimals;
[L1863]              havoc __ret_0__totalSupply;
[L1864]              havoc tokenName_s318;
[L1865]              havoc tokenSymbol_s318;
[L1866]              havoc tokenDecimals_s318;
[L1867]              havoc initialSupply_s318;
[L1868]              havoc spender_s533;
[L1869]              havoc tokens_s533;
[L1870]              havoc data_s533;
[L1871]              havoc success_s533;
[L1872]              havoc tmpNow;
[L1873]              havoc gas;
[L1874]              assume gas > 4000000 && gas <= 8000000;
[L1875]              tmpNow := now;
[L1876]              havoc now;
[L1877]              assume now > tmpNow;
[L1878]              assume msgsender_MSG != null;
[L1879]  COND FALSE  !(choice == 8)
[L1887]  COND FALSE  !(choice == 7)
[L1895]  COND FALSE  !(choice == 6)
[L1901]  COND FALSE  !(choice == 5)
[L1907]  COND FALSE  !(choice == 4)
[L1913]  COND FALSE  !(choice == 3)
[L1920]  COND FALSE  !(choice == 2)
[L1927]  COND TRUE   choice == 1
[L1928]              gas := gas - 21000;
[L1929]  COND TRUE   gas >= 0
[L1930]              assume tokens_s474 >= 0 && tokens_s474 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1931]              assume msgvalue_MSG == 0;
[L1932]  CALL        call success_s474 := transferFrom~address~address~uint256_MyToken(this, msgsender_MSG, msgvalue_MSG, from_s474, to_s474, tokens_s474);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != from_s474 && p1 != to_s474) && (p2 != from_s474 || p3 != msgsender_MSG)) && from_s474 != to_s474) && tokens_s474 <= balances_MyToken[this][from_s474]) && tokens_s474 <= allowed_MyToken[this][from_s474][msgsender_MSG]) && balances_MyToken[this][to_s474] + tokens_s474 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && tokens_s474 >= 0) && tokens_s474 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_MyToken[this][to_s474] >= 0) && balances_MyToken[this][to_s474] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_MyToken[this][from_s474] >= 0) && balances_MyToken[this][from_s474] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_MyToken[this][from_s474][msgsender_MSG] >= 0) && allowed_MyToken[this][from_s474][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_MyToken0 := true;
[L3]                 call_transferFrom_MyToken0 := false;
[L3]                 revert := revert_hold;
[L406]               havoc __exception;
[L407]               revert := false;
[L408]   COND FALSE  !(__exception)
[L431]   CALL        call success_s474 := transferFrom~address~address~uint256_MyToken__success(this, msgsender_MSG, msgvalue_MSG, from_s474, to_s474, tokens_s474);
[L964]   COND TRUE   DType[this] == MyToken
[L965]   CALL        call __var_4 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_MyToken[this][from_s474], tokens_s474);
[L802]   COND TRUE   !(b_s45 <= a_s45)
[L803]               revert := true;
[L965]   RET         call __var_4 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_MyToken[this][from_s474], tokens_s474);
[L966]   COND TRUE   revert
[L431]   RET         call success_s474 := transferFrom~address~address~uint256_MyToken__success(this, msgsender_MSG, msgvalue_MSG, from_s474, to_s474, tokens_s474);
[L432]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((((((success_s474 == true && balances_MyToken[this][from_s474] == old(balances_MyToken[this][from_s474]) - tokens_s474) && balances_MyToken[this][to_s474] == old(balances_MyToken[this][to_s474]) + tokens_s474) && allowed_MyToken[this][from_s474][msgsender_MSG] == old(allowed_MyToken[this][from_s474][msgsender_MSG]) - tokens_s474) && _totalSupply_MyToken[this] == old(_totalSupply_MyToken[this])) && balances_MyToken[this][p1] == old(balances_MyToken[this][p1])) && allowed_MyToken[this][p2][p3] == old(allowed_MyToken[this][p2][p3])) && symbol_MyToken[this] == old(symbol_MyToken[this])) && name_MyToken[this] == old(name_MyToken[this])) && decimals_MyToken[this] == old(decimals_MyToken[this])) && owner_Owned[this] == old(owner_Owned[this])) && newOwner_Owned[this] == old(newOwner_Owned[this]));
[L3]                 revert := revert_hold;
[L1932]  RET         call success_s474 := transferFrom~address~address~uint256_MyToken(this, msgsender_MSG, msgvalue_MSG, from_s474, to_s474, tokens_s474);
[L1951]  RET         call CorralChoice_MyToken(this);

Loop:
[L1951]        assume true;

[2020-11-24 15:49:43,591 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 15:49:43,591 INFO  L82        PathProgramCache]: Analyzing trace with hash 306634794, now seen corresponding path program 1 times
[2020-11-24 15:49:43,592 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 15:49:43,603 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 15:49:43,623 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 15:49:43,624 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 15:49:43,624 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-24 15:49:43,625 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 15:49:43,625 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-24 15:49:43,625 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-24 15:49:43,626 INFO  L87              Difference]: Start difference. First operand 210 states and 223 transitions. cyclomatic complexity: 14 Second operand 3 states.
[2020-11-24 15:49:43,634 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 15:49:43,634 INFO  L93              Difference]: Finished difference Result 245 states and 259 transitions.
[2020-11-24 15:49:43,634 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-24 15:49:43,634 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 245 states and 259 transitions.
[2020-11-24 15:49:43,636 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 2
[2020-11-24 15:49:43,638 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 245 states to 229 states and 238 transitions.
[2020-11-24 15:49:43,638 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 168
[2020-11-24 15:49:43,639 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 173
[2020-11-24 15:49:43,639 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 229 states and 238 transitions.
[2020-11-24 15:49:43,640 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 15:49:43,640 INFO  L728         BuchiCegarLoop]: Abstraction has 229 states and 238 transitions.
[2020-11-24 15:49:43,640 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 229 states and 238 transitions.
[2020-11-24 15:49:43,646 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 229 to 218.
[2020-11-24 15:49:43,646 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 218 states.
[2020-11-24 15:49:43,646 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 218 states to 218 states and 227 transitions.
[2020-11-24 15:49:43,646 INFO  L751         BuchiCegarLoop]: Abstraction has 218 states and 227 transitions.
[2020-11-24 15:49:43,647 INFO  L631         BuchiCegarLoop]: Abstraction has 218 states and 227 transitions.
[2020-11-24 15:49:43,647 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-24 15:49:43,647 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 218 states and 227 transitions.
[2020-11-24 15:49:43,648 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 15:49:43,648 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 15:49:43,648 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 15:49:43,649 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 15:49:43,649 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L3]                 success_transferFrom_MyToken0 := false;
[L3]                 call_transferFrom_MyToken0 := false;
[L3]     CALL        call main();
[L3]                 havoc p3;
[L3]                 havoc p2;
[L3]                 havoc p1;
[L1946]              assume null == 0;
[L1947]  CALL        call this := FreshRefGenerator__success();
[L767]               havoc newRef;
[L768]               assume Alloc[newRef] == false;
[L769]               Alloc[newRef] := true;
[L770]               assume newRef != null;
[L1947]  RET         call this := FreshRefGenerator__success();
[L1948]              assume now >= 0;
[L1949]              assume DType[this] == MyToken;
[L1950]              assume !revert && gas >= 0;
[L1951]  CALL        call CorralChoice_MyToken(this);
[L1826]              havoc msgsender_MSG;
[L1827]              havoc msgvalue_MSG;
[L1828]              havoc choice;
[L1829]              havoc a_s23;
[L1830]              havoc b_s23;
[L1831]              havoc c_s23;
[L1832]              havoc a_s45;
[L1833]              havoc b_s45;
[L1834]              havoc c_s45;
[L1835]              havoc a_s73;
[L1836]              havoc b_s73;
[L1837]              havoc c_s73;
[L1838]              havoc a_s95;
[L1839]              havoc b_s95;
[L1840]              havoc c_s95;
[L1841]              havoc __ret_0_totalSupply;
[L1842]              havoc tokenOwner_s344;
[L1843]              havoc balance_s344;
[L1844]              havoc tokenOwner_s490;
[L1845]              havoc spender_s490;
[L1846]              havoc remaining_s490;
[L1847]              havoc to_s387;
[L1848]              havoc tokens_s387;
[L1849]              havoc success_s387;
[L1850]              havoc spender_s415;
[L1851]              havoc tokens_s415;
[L1852]              havoc success_s415;
[L1853]              havoc from_s474;
[L1854]              havoc to_s474;
[L1855]              havoc tokens_s474;
[L1856]              havoc success_s474;
[L1857]              havoc __ret_0_owner;
[L1858]              havoc __ret_0_newOwner;
[L1859]              havoc _newOwner_s217;
[L1860]              havoc __ret_0_symbol;
[L1861]              havoc __ret_0_name;
[L1862]              havoc __ret_0_decimals;
[L1863]              havoc __ret_0__totalSupply;
[L1864]              havoc tokenName_s318;
[L1865]              havoc tokenSymbol_s318;
[L1866]              havoc tokenDecimals_s318;
[L1867]              havoc initialSupply_s318;
[L1868]              havoc spender_s533;
[L1869]              havoc tokens_s533;
[L1870]              havoc data_s533;
[L1871]              havoc success_s533;
[L1872]              havoc tmpNow;
[L1873]              havoc gas;
[L1874]              assume gas > 4000000 && gas <= 8000000;
[L1875]              tmpNow := now;
[L1876]              havoc now;
[L1877]              assume now > tmpNow;
[L1878]              assume msgsender_MSG != null;
[L1879]  COND FALSE  !(choice == 8)
[L1887]  COND FALSE  !(choice == 7)
[L1895]  COND FALSE  !(choice == 6)
[L1901]  COND FALSE  !(choice == 5)
[L1907]  COND FALSE  !(choice == 4)
[L1913]  COND FALSE  !(choice == 3)
[L1920]  COND FALSE  !(choice == 2)
[L1927]  COND TRUE   choice == 1
[L1928]              gas := gas - 21000;
[L1929]  COND TRUE   gas >= 0
[L1930]              assume tokens_s474 >= 0 && tokens_s474 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1931]              assume msgvalue_MSG == 0;
[L1932]  CALL        call success_s474 := transferFrom~address~address~uint256_MyToken(this, msgsender_MSG, msgvalue_MSG, from_s474, to_s474, tokens_s474);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != from_s474 && p1 != to_s474) && (p2 != from_s474 || p3 != msgsender_MSG)) && from_s474 != to_s474) && tokens_s474 <= balances_MyToken[this][from_s474]) && tokens_s474 <= allowed_MyToken[this][from_s474][msgsender_MSG]) && balances_MyToken[this][to_s474] + tokens_s474 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && tokens_s474 >= 0) && tokens_s474 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_MyToken[this][to_s474] >= 0) && balances_MyToken[this][to_s474] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_MyToken[this][from_s474] >= 0) && balances_MyToken[this][from_s474] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_MyToken[this][from_s474][msgsender_MSG] >= 0) && allowed_MyToken[this][from_s474][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_MyToken0 := true;
[L3]                 call_transferFrom_MyToken0 := false;
[L3]                 revert := revert_hold;
[L406]               havoc __exception;
[L407]               revert := false;
[L408]   COND TRUE   __exception
[L409]               __tmp__Balance := Balance;
[L410]               __tmp__DType := DType;
[L411]               __tmp__Alloc := Alloc;
[L412]               __tmp__balance_ADDR := balance_ADDR;
[L413]               __tmp__M_Ref_int := M_Ref_int;
[L414]               __tmp__sum_balances0 := sum_balances0;
[L415]               __tmp__alloc_allowed_MyToken_lvl0 := alloc_allowed_MyToken_lvl0;
[L416]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L417]               __tmp__sum_allowed1 := sum_allowed1;
[L418]               __tmp__Length := Length;
[L419]               __tmp__now := now;
[L420]               __tmp__owner_Owned := owner_Owned;
[L421]               __tmp__newOwner_Owned := newOwner_Owned;
[L422]               __tmp__symbol_MyToken := symbol_MyToken;
[L423]               __tmp__name_MyToken := name_MyToken;
[L424]               __tmp__decimals_MyToken := decimals_MyToken;
[L425]               __tmp___totalSupply_MyToken := _totalSupply_MyToken;
[L426]               __tmp__balances_MyToken := balances_MyToken;
[L427]               __tmp__allowed_MyToken := allowed_MyToken;
[L428]   CALL        call success_s474 := transferFrom~address~address~uint256_MyToken__fail(this, msgsender_MSG, msgvalue_MSG, from_s474, to_s474, tokens_s474);
[L922]   COND TRUE   __tmp__DType[this] == MyToken
[L923]   CALL        call __var_4 := safeSub~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balances_MyToken[this][from_s474], tokens_s474);
[L793]   COND TRUE   !(b_s45 <= a_s45)
[L794]               revert := true;
[L923]   RET         call __var_4 := safeSub~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balances_MyToken[this][from_s474], tokens_s474);
[L924]   COND TRUE   revert
[L428]   RET         call success_s474 := transferFrom~address~address~uint256_MyToken__fail(this, msgsender_MSG, msgvalue_MSG, from_s474, to_s474, tokens_s474);
[L429]               assume revert || gas < 0;
[L1932]  RET         call success_s474 := transferFrom~address~address~uint256_MyToken(this, msgsender_MSG, msgvalue_MSG, from_s474, to_s474, tokens_s474);
[L1951]  RET         call CorralChoice_MyToken(this);

Loop:
[L1951]        assume true;

[2020-11-24 15:49:43,652 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 15:49:43,652 INFO  L82        PathProgramCache]: Analyzing trace with hash 1601554301, now seen corresponding path program 1 times
[2020-11-24 15:49:43,653 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 15:49:43,663 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 15:49:43,711 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 15:49:43,711 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 15:49:43,712 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [7] imperfect sequences [] total 7
[2020-11-24 15:49:43,712 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 15:49:43,712 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 7 interpolants.
[2020-11-24 15:49:43,712 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=11, Invalid=31, Unknown=0, NotChecked=0, Total=42
[2020-11-24 15:49:43,712 INFO  L87              Difference]: Start difference. First operand 218 states and 227 transitions. cyclomatic complexity: 10 Second operand 7 states.
[2020-11-24 15:49:43,801 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 15:49:43,802 INFO  L93              Difference]: Finished difference Result 233 states and 241 transitions.
[2020-11-24 15:49:43,802 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 8 states. 
[2020-11-24 15:49:43,802 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 233 states and 241 transitions.
[2020-11-24 15:49:43,804 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 2
[2020-11-24 15:49:43,805 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 233 states to 229 states and 237 transitions.
[2020-11-24 15:49:43,805 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 173
[2020-11-24 15:49:43,806 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 173
[2020-11-24 15:49:43,806 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 229 states and 237 transitions.
[2020-11-24 15:49:43,807 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 15:49:43,807 INFO  L728         BuchiCegarLoop]: Abstraction has 229 states and 237 transitions.
[2020-11-24 15:49:43,807 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 229 states and 237 transitions.
[2020-11-24 15:49:43,811 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 229 to 216.
[2020-11-24 15:49:43,811 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 216 states.
[2020-11-24 15:49:43,812 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 216 states to 216 states and 224 transitions.
[2020-11-24 15:49:43,812 INFO  L751         BuchiCegarLoop]: Abstraction has 216 states and 224 transitions.
[2020-11-24 15:49:43,812 INFO  L631         BuchiCegarLoop]: Abstraction has 216 states and 224 transitions.
[2020-11-24 15:49:43,812 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-24 15:49:43,812 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 216 states and 224 transitions.
[2020-11-24 15:49:43,813 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 15:49:43,813 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 15:49:43,813 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 15:49:43,814 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 15:49:43,815 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L3]                 success_transferFrom_MyToken0 := false;
[L3]                 call_transferFrom_MyToken0 := false;
[L3]     CALL        call main();
[L3]                 havoc p3;
[L3]                 havoc p2;
[L3]                 havoc p1;
[L1946]              assume null == 0;
[L1947]  CALL        call this := FreshRefGenerator__success();
[L767]               havoc newRef;
[L768]               assume Alloc[newRef] == false;
[L769]               Alloc[newRef] := true;
[L770]               assume newRef != null;
[L1947]  RET         call this := FreshRefGenerator__success();
[L1948]              assume now >= 0;
[L1949]              assume DType[this] == MyToken;
[L1950]              assume !revert && gas >= 0;
[L1951]  CALL        call CorralChoice_MyToken(this);
[L1826]              havoc msgsender_MSG;
[L1827]              havoc msgvalue_MSG;
[L1828]              havoc choice;
[L1829]              havoc a_s23;
[L1830]              havoc b_s23;
[L1831]              havoc c_s23;
[L1832]              havoc a_s45;
[L1833]              havoc b_s45;
[L1834]              havoc c_s45;
[L1835]              havoc a_s73;
[L1836]              havoc b_s73;
[L1837]              havoc c_s73;
[L1838]              havoc a_s95;
[L1839]              havoc b_s95;
[L1840]              havoc c_s95;
[L1841]              havoc __ret_0_totalSupply;
[L1842]              havoc tokenOwner_s344;
[L1843]              havoc balance_s344;
[L1844]              havoc tokenOwner_s490;
[L1845]              havoc spender_s490;
[L1846]              havoc remaining_s490;
[L1847]              havoc to_s387;
[L1848]              havoc tokens_s387;
[L1849]              havoc success_s387;
[L1850]              havoc spender_s415;
[L1851]              havoc tokens_s415;
[L1852]              havoc success_s415;
[L1853]              havoc from_s474;
[L1854]              havoc to_s474;
[L1855]              havoc tokens_s474;
[L1856]              havoc success_s474;
[L1857]              havoc __ret_0_owner;
[L1858]              havoc __ret_0_newOwner;
[L1859]              havoc _newOwner_s217;
[L1860]              havoc __ret_0_symbol;
[L1861]              havoc __ret_0_name;
[L1862]              havoc __ret_0_decimals;
[L1863]              havoc __ret_0__totalSupply;
[L1864]              havoc tokenName_s318;
[L1865]              havoc tokenSymbol_s318;
[L1866]              havoc tokenDecimals_s318;
[L1867]              havoc initialSupply_s318;
[L1868]              havoc spender_s533;
[L1869]              havoc tokens_s533;
[L1870]              havoc data_s533;
[L1871]              havoc success_s533;
[L1872]              havoc tmpNow;
[L1873]              havoc gas;
[L1874]              assume gas > 4000000 && gas <= 8000000;
[L1875]              tmpNow := now;
[L1876]              havoc now;
[L1877]              assume now > tmpNow;
[L1878]              assume msgsender_MSG != null;
[L1879]  COND FALSE  !(choice == 8)
[L1887]  COND FALSE  !(choice == 7)
[L1895]  COND FALSE  !(choice == 6)
[L1901]  COND FALSE  !(choice == 5)
[L1907]  COND FALSE  !(choice == 4)
[L1913]  COND FALSE  !(choice == 3)
[L1920]  COND FALSE  !(choice == 2)
[L1927]  COND TRUE   choice == 1
[L1928]              gas := gas - 21000;
[L1929]  COND TRUE   gas >= 0
[L1930]              assume tokens_s474 >= 0 && tokens_s474 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1931]              assume msgvalue_MSG == 0;
[L1932]  CALL        call success_s474 := transferFrom~address~address~uint256_MyToken(this, msgsender_MSG, msgvalue_MSG, from_s474, to_s474, tokens_s474);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != from_s474 && p1 != to_s474) && (p2 != from_s474 || p3 != msgsender_MSG)) && from_s474 != to_s474) && tokens_s474 <= balances_MyToken[this][from_s474]) && tokens_s474 <= allowed_MyToken[this][from_s474][msgsender_MSG]) && balances_MyToken[this][to_s474] + tokens_s474 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && tokens_s474 >= 0) && tokens_s474 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_MyToken[this][to_s474] >= 0) && balances_MyToken[this][to_s474] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_MyToken[this][from_s474] >= 0) && balances_MyToken[this][from_s474] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_MyToken[this][from_s474][msgsender_MSG] >= 0) && allowed_MyToken[this][from_s474][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_MyToken0 := true;
[L3]                 call_transferFrom_MyToken0 := false;
[L3]                 revert := revert_hold;
[L406]               havoc __exception;
[L407]               revert := false;
[L408]   COND TRUE   __exception
[L409]               __tmp__Balance := Balance;
[L410]               __tmp__DType := DType;
[L411]               __tmp__Alloc := Alloc;
[L412]               __tmp__balance_ADDR := balance_ADDR;
[L413]               __tmp__M_Ref_int := M_Ref_int;
[L414]               __tmp__sum_balances0 := sum_balances0;
[L415]               __tmp__alloc_allowed_MyToken_lvl0 := alloc_allowed_MyToken_lvl0;
[L416]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L417]               __tmp__sum_allowed1 := sum_allowed1;
[L418]               __tmp__Length := Length;
[L419]               __tmp__now := now;
[L420]               __tmp__owner_Owned := owner_Owned;
[L421]               __tmp__newOwner_Owned := newOwner_Owned;
[L422]               __tmp__symbol_MyToken := symbol_MyToken;
[L423]               __tmp__name_MyToken := name_MyToken;
[L424]               __tmp__decimals_MyToken := decimals_MyToken;
[L425]               __tmp___totalSupply_MyToken := _totalSupply_MyToken;
[L426]               __tmp__balances_MyToken := balances_MyToken;
[L427]               __tmp__allowed_MyToken := allowed_MyToken;
[L428]   CALL        call success_s474 := transferFrom~address~address~uint256_MyToken__fail(this, msgsender_MSG, msgvalue_MSG, from_s474, to_s474, tokens_s474);
[L922]   COND TRUE   __tmp__DType[this] == MyToken
[L923]   CALL        call __var_4 := safeSub~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balances_MyToken[this][from_s474], tokens_s474);
[L793]   COND FALSE  !(!(b_s45 <= a_s45))
[L797]               c_s45 := (a_s45 - b_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L923]   RET         call __var_4 := safeSub~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balances_MyToken[this][from_s474], tokens_s474);
[L924]   COND TRUE   revert
[L428]   RET         call success_s474 := transferFrom~address~address~uint256_MyToken__fail(this, msgsender_MSG, msgvalue_MSG, from_s474, to_s474, tokens_s474);
[L429]               assume revert || gas < 0;
[L1932]  RET         call success_s474 := transferFrom~address~address~uint256_MyToken(this, msgsender_MSG, msgvalue_MSG, from_s474, to_s474, tokens_s474);
[L1951]  RET         call CorralChoice_MyToken(this);

Loop:
[L1951]        assume true;

[2020-11-24 15:49:43,817 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 15:49:43,817 INFO  L82        PathProgramCache]: Analyzing trace with hash 13500002, now seen corresponding path program 1 times
[2020-11-24 15:49:43,818 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 15:49:43,825 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 15:49:43,847 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 15:49:43,847 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 15:49:43,847 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [5] imperfect sequences [] total 5
[2020-11-24 15:49:43,848 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 15:49:43,848 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 5 interpolants.
[2020-11-24 15:49:43,848 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=9, Invalid=11, Unknown=0, NotChecked=0, Total=20
[2020-11-24 15:49:43,848 INFO  L87              Difference]: Start difference. First operand 216 states and 224 transitions. cyclomatic complexity: 9 Second operand 5 states.
[2020-11-24 15:49:43,859 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 15:49:43,859 INFO  L93              Difference]: Finished difference Result 227 states and 232 transitions.
[2020-11-24 15:49:43,859 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-24 15:49:43,860 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 227 states and 232 transitions.
[2020-11-24 15:49:43,861 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 2
[2020-11-24 15:49:43,862 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 227 states to 227 states and 232 transitions.
[2020-11-24 15:49:43,862 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 171
[2020-11-24 15:49:43,863 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 171
[2020-11-24 15:49:43,863 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 227 states and 232 transitions.
[2020-11-24 15:49:43,863 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 15:49:43,863 INFO  L728         BuchiCegarLoop]: Abstraction has 227 states and 232 transitions.
[2020-11-24 15:49:43,863 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 227 states and 232 transitions.
[2020-11-24 15:49:43,866 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 227 to 216.
[2020-11-24 15:49:43,867 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 216 states.
[2020-11-24 15:49:43,867 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 216 states to 216 states and 221 transitions.
[2020-11-24 15:49:43,867 INFO  L751         BuchiCegarLoop]: Abstraction has 216 states and 221 transitions.
[2020-11-24 15:49:43,867 INFO  L631         BuchiCegarLoop]: Abstraction has 216 states and 221 transitions.
[2020-11-24 15:49:43,868 INFO  L445         BuchiCegarLoop]: ======== Iteration 5============
[2020-11-24 15:49:43,868 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 216 states and 221 transitions.
[2020-11-24 15:49:43,869 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 15:49:43,869 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 15:49:43,869 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 15:49:43,870 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 15:49:43,870 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L3]                 success_transferFrom_MyToken0 := false;
[L3]                 call_transferFrom_MyToken0 := false;
[L3]     CALL        call main();
[L3]                 havoc p3;
[L3]                 havoc p2;
[L3]                 havoc p1;
[L1946]              assume null == 0;
[L1947]  CALL        call this := FreshRefGenerator__success();
[L767]               havoc newRef;
[L768]               assume Alloc[newRef] == false;
[L769]               Alloc[newRef] := true;
[L770]               assume newRef != null;
[L1947]  RET         call this := FreshRefGenerator__success();
[L1948]              assume now >= 0;
[L1949]              assume DType[this] == MyToken;
[L1950]              assume !revert && gas >= 0;
[L1951]  CALL        call CorralChoice_MyToken(this);
[L1826]              havoc msgsender_MSG;
[L1827]              havoc msgvalue_MSG;
[L1828]              havoc choice;
[L1829]              havoc a_s23;
[L1830]              havoc b_s23;
[L1831]              havoc c_s23;
[L1832]              havoc a_s45;
[L1833]              havoc b_s45;
[L1834]              havoc c_s45;
[L1835]              havoc a_s73;
[L1836]              havoc b_s73;
[L1837]              havoc c_s73;
[L1838]              havoc a_s95;
[L1839]              havoc b_s95;
[L1840]              havoc c_s95;
[L1841]              havoc __ret_0_totalSupply;
[L1842]              havoc tokenOwner_s344;
[L1843]              havoc balance_s344;
[L1844]              havoc tokenOwner_s490;
[L1845]              havoc spender_s490;
[L1846]              havoc remaining_s490;
[L1847]              havoc to_s387;
[L1848]              havoc tokens_s387;
[L1849]              havoc success_s387;
[L1850]              havoc spender_s415;
[L1851]              havoc tokens_s415;
[L1852]              havoc success_s415;
[L1853]              havoc from_s474;
[L1854]              havoc to_s474;
[L1855]              havoc tokens_s474;
[L1856]              havoc success_s474;
[L1857]              havoc __ret_0_owner;
[L1858]              havoc __ret_0_newOwner;
[L1859]              havoc _newOwner_s217;
[L1860]              havoc __ret_0_symbol;
[L1861]              havoc __ret_0_name;
[L1862]              havoc __ret_0_decimals;
[L1863]              havoc __ret_0__totalSupply;
[L1864]              havoc tokenName_s318;
[L1865]              havoc tokenSymbol_s318;
[L1866]              havoc tokenDecimals_s318;
[L1867]              havoc initialSupply_s318;
[L1868]              havoc spender_s533;
[L1869]              havoc tokens_s533;
[L1870]              havoc data_s533;
[L1871]              havoc success_s533;
[L1872]              havoc tmpNow;
[L1873]              havoc gas;
[L1874]              assume gas > 4000000 && gas <= 8000000;
[L1875]              tmpNow := now;
[L1876]              havoc now;
[L1877]              assume now > tmpNow;
[L1878]              assume msgsender_MSG != null;
[L1879]  COND FALSE  !(choice == 8)
[L1887]  COND FALSE  !(choice == 7)
[L1895]  COND FALSE  !(choice == 6)
[L1901]  COND FALSE  !(choice == 5)
[L1907]  COND FALSE  !(choice == 4)
[L1913]  COND FALSE  !(choice == 3)
[L1920]  COND FALSE  !(choice == 2)
[L1927]  COND TRUE   choice == 1
[L1928]              gas := gas - 21000;
[L1929]  COND TRUE   gas >= 0
[L1930]              assume tokens_s474 >= 0 && tokens_s474 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1931]              assume msgvalue_MSG == 0;
[L1932]  CALL        call success_s474 := transferFrom~address~address~uint256_MyToken(this, msgsender_MSG, msgvalue_MSG, from_s474, to_s474, tokens_s474);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != from_s474 && p1 != to_s474) && (p2 != from_s474 || p3 != msgsender_MSG)) && from_s474 != to_s474) && tokens_s474 <= balances_MyToken[this][from_s474]) && tokens_s474 <= allowed_MyToken[this][from_s474][msgsender_MSG]) && balances_MyToken[this][to_s474] + tokens_s474 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && tokens_s474 >= 0) && tokens_s474 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_MyToken[this][to_s474] >= 0) && balances_MyToken[this][to_s474] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_MyToken[this][from_s474] >= 0) && balances_MyToken[this][from_s474] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_MyToken[this][from_s474][msgsender_MSG] >= 0) && allowed_MyToken[this][from_s474][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_MyToken0 := true;
[L3]                 call_transferFrom_MyToken0 := false;
[L3]                 revert := revert_hold;
[L406]               havoc __exception;
[L407]               revert := false;
[L408]   COND FALSE  !(__exception)
[L431]   CALL        call success_s474 := transferFrom~address~address~uint256_MyToken__success(this, msgsender_MSG, msgvalue_MSG, from_s474, to_s474, tokens_s474);
[L964]   COND TRUE   DType[this] == MyToken
[L965]   CALL        call __var_4 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_MyToken[this][from_s474], tokens_s474);
[L802]   COND FALSE  !(!(b_s45 <= a_s45))
[L806]               c_s45 := (a_s45 - b_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L965]   RET         call __var_4 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_MyToken[this][from_s474], tokens_s474);
[L966]   COND FALSE  !(revert)
[L972]               sum_balances0[this] := sum_balances0[this] - balances_MyToken[this][from_s474];
[L973]               balances_MyToken[this][from_s474] := __var_4;
[L974]               sum_balances0[this] := sum_balances0[this] + balances_MyToken[this][from_s474];
[L975]   COND TRUE   DType[this] == MyToken
[L976]   CALL        call __var_5 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, allowed_MyToken[this][from_s474][msgsender_MSG], tokens_s474);
[L802]   COND FALSE  !(!(b_s45 <= a_s45))
[L806]               c_s45 := (a_s45 - b_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L976]   RET         call __var_5 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, allowed_MyToken[this][from_s474][msgsender_MSG], tokens_s474);
[L977]   COND FALSE  !(revert)
[L983]               sum_allowed1[from_s474] := sum_allowed1[from_s474] - allowed_MyToken[this][from_s474][msgsender_MSG];
[L984]               allowed_MyToken[this][from_s474][msgsender_MSG] := __var_5;
[L985]               sum_allowed1[from_s474] := sum_allowed1[from_s474] + allowed_MyToken[this][from_s474][msgsender_MSG];
[L986]   COND TRUE   DType[this] == MyToken
[L987]   CALL        call __var_6 := safeAdd~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_MyToken[this][to_s474], tokens_s474);
[L784]               c_s23 := (a_s23 + b_s23) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L785]   COND FALSE  !(!(c_s23 >= a_s23))
[L987]   RET         call __var_6 := safeAdd~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_MyToken[this][to_s474], tokens_s474);
[L988]   COND FALSE  !(revert)
[L994]               sum_balances0[this] := sum_balances0[this] - balances_MyToken[this][to_s474];
[L995]               balances_MyToken[this][to_s474] := __var_6;
[L996]               sum_balances0[this] := sum_balances0[this] + balances_MyToken[this][to_s474];
[L997]               assert { :EventEmitted "Transfer_MyToken" } true;
[L998]               success_s474 := true;
[L431]   RET         call success_s474 := transferFrom~address~address~uint256_MyToken__success(this, msgsender_MSG, msgvalue_MSG, from_s474, to_s474, tokens_s474);
[L432]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((((((success_s474 == true && balances_MyToken[this][from_s474] == old(balances_MyToken[this][from_s474]) - tokens_s474) && balances_MyToken[this][to_s474] == old(balances_MyToken[this][to_s474]) + tokens_s474) && allowed_MyToken[this][from_s474][msgsender_MSG] == old(allowed_MyToken[this][from_s474][msgsender_MSG]) - tokens_s474) && _totalSupply_MyToken[this] == old(_totalSupply_MyToken[this])) && balances_MyToken[this][p1] == old(balances_MyToken[this][p1])) && allowed_MyToken[this][p2][p3] == old(allowed_MyToken[this][p2][p3])) && symbol_MyToken[this] == old(symbol_MyToken[this])) && name_MyToken[this] == old(name_MyToken[this])) && decimals_MyToken[this] == old(decimals_MyToken[this])) && owner_Owned[this] == old(owner_Owned[this])) && newOwner_Owned[this] == old(newOwner_Owned[this]));
[L3]                 revert := revert_hold;
[L1932]  RET         call success_s474 := transferFrom~address~address~uint256_MyToken(this, msgsender_MSG, msgvalue_MSG, from_s474, to_s474, tokens_s474);
[L1951]  RET         call CorralChoice_MyToken(this);

Loop:
[L1951]        assume true;

[2020-11-24 15:49:43,872 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 15:49:43,872 INFO  L82        PathProgramCache]: Analyzing trace with hash 1030212447, now seen corresponding path program 1 times
[2020-11-24 15:49:43,873 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 15:49:43,975 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 15:49:44,694 INFO  L134       CoverageAnalysis]: Checked inductivity of 4 backedges. 2 proven. 0 refuted. 0 times theorem prover too weak. 2 trivial. 0 not checked.
[2020-11-24 15:49:44,694 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 15:49:44,694 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [18] imperfect sequences [] total 18
[2020-11-24 15:49:44,695 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 15:49:44,695 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 18 interpolants.
[2020-11-24 15:49:44,695 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=39, Invalid=267, Unknown=0, NotChecked=0, Total=306
[2020-11-24 15:49:44,695 INFO  L87              Difference]: Start difference. First operand 216 states and 221 transitions. cyclomatic complexity: 6 Second operand 18 states.
[2020-11-24 15:49:45,226 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 15:49:45,226 INFO  L93              Difference]: Finished difference Result 215 states and 219 transitions.
[2020-11-24 15:49:45,226 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 16 states. 
[2020-11-24 15:49:45,226 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 215 states and 219 transitions.
[2020-11-24 15:49:45,227 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 15:49:45,228 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 215 states to 172 states and 175 transitions.
[2020-11-24 15:49:45,228 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 133
[2020-11-24 15:49:45,228 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 133
[2020-11-24 15:49:45,228 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 172 states and 175 transitions.
[2020-11-24 15:49:45,229 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 15:49:45,229 INFO  L728         BuchiCegarLoop]: Abstraction has 172 states and 175 transitions.
[2020-11-24 15:49:45,229 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 172 states and 175 transitions.
[2020-11-24 15:49:45,230 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 172 to 172.
[2020-11-24 15:49:45,230 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 172 states.
[2020-11-24 15:49:45,231 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 172 states to 172 states and 175 transitions.
[2020-11-24 15:49:45,231 INFO  L751         BuchiCegarLoop]: Abstraction has 172 states and 175 transitions.
[2020-11-24 15:49:45,231 INFO  L631         BuchiCegarLoop]: Abstraction has 172 states and 175 transitions.
[2020-11-24 15:49:45,231 INFO  L445         BuchiCegarLoop]: ======== Iteration 6============
[2020-11-24 15:49:45,231 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 172 states and 175 transitions.
[2020-11-24 15:49:45,231 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 15:49:45,231 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 15:49:45,231 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 15:49:45,232 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 15:49:45,232 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L3]                 success_transferFrom_MyToken0 := false;
[L3]                 call_transferFrom_MyToken0 := false;
[L3]     CALL        call main();
[L3]                 havoc p3;
[L3]                 havoc p2;
[L3]                 havoc p1;
[L1946]              assume null == 0;
[L1947]  CALL        call this := FreshRefGenerator__success();
[L767]               havoc newRef;
[L768]               assume Alloc[newRef] == false;
[L769]               Alloc[newRef] := true;
[L770]               assume newRef != null;
[L1947]  RET         call this := FreshRefGenerator__success();
[L1948]              assume now >= 0;
[L1949]              assume DType[this] == MyToken;
[L1950]              assume !revert && gas >= 0;
[L1951]  CALL        call CorralChoice_MyToken(this);
[L1826]              havoc msgsender_MSG;
[L1827]              havoc msgvalue_MSG;
[L1828]              havoc choice;
[L1829]              havoc a_s23;
[L1830]              havoc b_s23;
[L1831]              havoc c_s23;
[L1832]              havoc a_s45;
[L1833]              havoc b_s45;
[L1834]              havoc c_s45;
[L1835]              havoc a_s73;
[L1836]              havoc b_s73;
[L1837]              havoc c_s73;
[L1838]              havoc a_s95;
[L1839]              havoc b_s95;
[L1840]              havoc c_s95;
[L1841]              havoc __ret_0_totalSupply;
[L1842]              havoc tokenOwner_s344;
[L1843]              havoc balance_s344;
[L1844]              havoc tokenOwner_s490;
[L1845]              havoc spender_s490;
[L1846]              havoc remaining_s490;
[L1847]              havoc to_s387;
[L1848]              havoc tokens_s387;
[L1849]              havoc success_s387;
[L1850]              havoc spender_s415;
[L1851]              havoc tokens_s415;
[L1852]              havoc success_s415;
[L1853]              havoc from_s474;
[L1854]              havoc to_s474;
[L1855]              havoc tokens_s474;
[L1856]              havoc success_s474;
[L1857]              havoc __ret_0_owner;
[L1858]              havoc __ret_0_newOwner;
[L1859]              havoc _newOwner_s217;
[L1860]              havoc __ret_0_symbol;
[L1861]              havoc __ret_0_name;
[L1862]              havoc __ret_0_decimals;
[L1863]              havoc __ret_0__totalSupply;
[L1864]              havoc tokenName_s318;
[L1865]              havoc tokenSymbol_s318;
[L1866]              havoc tokenDecimals_s318;
[L1867]              havoc initialSupply_s318;
[L1868]              havoc spender_s533;
[L1869]              havoc tokens_s533;
[L1870]              havoc data_s533;
[L1871]              havoc success_s533;
[L1872]              havoc tmpNow;
[L1873]              havoc gas;
[L1874]              assume gas > 4000000 && gas <= 8000000;
[L1875]              tmpNow := now;
[L1876]              havoc now;
[L1877]              assume now > tmpNow;
[L1878]              assume msgsender_MSG != null;
[L1879]  COND FALSE  !(choice == 8)
[L1887]  COND FALSE  !(choice == 7)
[L1895]  COND FALSE  !(choice == 6)
[L1901]  COND FALSE  !(choice == 5)
[L1907]  COND FALSE  !(choice == 4)
[L1913]  COND FALSE  !(choice == 3)
[L1920]  COND FALSE  !(choice == 2)
[L1927]  COND TRUE   choice == 1
[L1928]              gas := gas - 21000;
[L1929]  COND TRUE   gas >= 0
[L1930]              assume tokens_s474 >= 0 && tokens_s474 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1931]              assume msgvalue_MSG == 0;
[L1932]  CALL        call success_s474 := transferFrom~address~address~uint256_MyToken(this, msgsender_MSG, msgvalue_MSG, from_s474, to_s474, tokens_s474);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != from_s474 && p1 != to_s474) && (p2 != from_s474 || p3 != msgsender_MSG)) && from_s474 != to_s474) && tokens_s474 <= balances_MyToken[this][from_s474]) && tokens_s474 <= allowed_MyToken[this][from_s474][msgsender_MSG]) && balances_MyToken[this][to_s474] + tokens_s474 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && tokens_s474 >= 0) && tokens_s474 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_MyToken[this][to_s474] >= 0) && balances_MyToken[this][to_s474] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_MyToken[this][from_s474] >= 0) && balances_MyToken[this][from_s474] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_MyToken[this][from_s474][msgsender_MSG] >= 0) && allowed_MyToken[this][from_s474][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_MyToken0 := true;
[L3]                 call_transferFrom_MyToken0 := false;
[L3]                 revert := revert_hold;
[L406]               havoc __exception;
[L407]               revert := false;
[L408]   COND TRUE   __exception
[L409]               __tmp__Balance := Balance;
[L410]               __tmp__DType := DType;
[L411]               __tmp__Alloc := Alloc;
[L412]               __tmp__balance_ADDR := balance_ADDR;
[L413]               __tmp__M_Ref_int := M_Ref_int;
[L414]               __tmp__sum_balances0 := sum_balances0;
[L415]               __tmp__alloc_allowed_MyToken_lvl0 := alloc_allowed_MyToken_lvl0;
[L416]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L417]               __tmp__sum_allowed1 := sum_allowed1;
[L418]               __tmp__Length := Length;
[L419]               __tmp__now := now;
[L420]               __tmp__owner_Owned := owner_Owned;
[L421]               __tmp__newOwner_Owned := newOwner_Owned;
[L422]               __tmp__symbol_MyToken := symbol_MyToken;
[L423]               __tmp__name_MyToken := name_MyToken;
[L424]               __tmp__decimals_MyToken := decimals_MyToken;
[L425]               __tmp___totalSupply_MyToken := _totalSupply_MyToken;
[L426]               __tmp__balances_MyToken := balances_MyToken;
[L427]               __tmp__allowed_MyToken := allowed_MyToken;
[L428]   CALL        call success_s474 := transferFrom~address~address~uint256_MyToken__fail(this, msgsender_MSG, msgvalue_MSG, from_s474, to_s474, tokens_s474);
[L922]   COND TRUE   __tmp__DType[this] == MyToken
[L923]   CALL        call __var_4 := safeSub~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balances_MyToken[this][from_s474], tokens_s474);
[L793]   COND FALSE  !(!(b_s45 <= a_s45))
[L797]               c_s45 := (a_s45 - b_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L923]   RET         call __var_4 := safeSub~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balances_MyToken[this][from_s474], tokens_s474);
[L924]   COND FALSE  !(revert)
[L930]               __tmp__sum_balances0[this] := __tmp__sum_balances0[this] - __tmp__balances_MyToken[this][from_s474];
[L931]               __tmp__balances_MyToken[this][from_s474] := __var_4;
[L932]               __tmp__sum_balances0[this] := __tmp__sum_balances0[this] + __tmp__balances_MyToken[this][from_s474];
[L933]   COND TRUE   __tmp__DType[this] == MyToken
[L934]   CALL        call __var_5 := safeSub~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__allowed_MyToken[this][from_s474][msgsender_MSG], tokens_s474);
[L793]   COND TRUE   !(b_s45 <= a_s45)
[L794]               revert := true;
[L934]   RET         call __var_5 := safeSub~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__allowed_MyToken[this][from_s474][msgsender_MSG], tokens_s474);
[L935]   COND TRUE   revert
[L428]   RET         call success_s474 := transferFrom~address~address~uint256_MyToken__fail(this, msgsender_MSG, msgvalue_MSG, from_s474, to_s474, tokens_s474);
[L429]               assume revert || gas < 0;
[L1932]  RET         call success_s474 := transferFrom~address~address~uint256_MyToken(this, msgsender_MSG, msgvalue_MSG, from_s474, to_s474, tokens_s474);
[L1951]  RET         call CorralChoice_MyToken(this);

Loop:
[L1951]        assume true;

[2020-11-24 15:49:45,234 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 15:49:45,234 INFO  L82        PathProgramCache]: Analyzing trace with hash 946685138, now seen corresponding path program 1 times
[2020-11-24 15:49:45,234 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 15:49:45,239 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 15:49:45,259 INFO  L134       CoverageAnalysis]: Checked inductivity of 3 backedges. 2 proven. 0 refuted. 0 times theorem prover too weak. 1 trivial. 0 not checked.
[2020-11-24 15:49:45,259 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 15:49:45,259 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [7] imperfect sequences [] total 7
[2020-11-24 15:49:45,260 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 15:49:45,260 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 7 interpolants.
[2020-11-24 15:49:45,260 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=11, Invalid=31, Unknown=0, NotChecked=0, Total=42
[2020-11-24 15:49:45,260 INFO  L87              Difference]: Start difference. First operand 172 states and 175 transitions. cyclomatic complexity: 4 Second operand 7 states.
[2020-11-24 15:49:45,282 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 15:49:45,282 INFO  L93              Difference]: Finished difference Result 174 states and 176 transitions.
[2020-11-24 15:49:45,283 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 8 states. 
[2020-11-24 15:49:45,283 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 174 states and 176 transitions.
[2020-11-24 15:49:45,284 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 15:49:45,285 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 174 states to 167 states and 169 transitions.
[2020-11-24 15:49:45,285 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 128
[2020-11-24 15:49:45,285 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 128
[2020-11-24 15:49:45,285 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 167 states and 169 transitions.
[2020-11-24 15:49:45,286 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 15:49:45,286 INFO  L728         BuchiCegarLoop]: Abstraction has 167 states and 169 transitions.
[2020-11-24 15:49:45,286 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 167 states and 169 transitions.
[2020-11-24 15:49:45,288 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 167 to 167.
[2020-11-24 15:49:45,288 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 167 states.
[2020-11-24 15:49:45,288 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 167 states to 167 states and 169 transitions.
[2020-11-24 15:49:45,289 INFO  L751         BuchiCegarLoop]: Abstraction has 167 states and 169 transitions.
[2020-11-24 15:49:45,289 INFO  L631         BuchiCegarLoop]: Abstraction has 167 states and 169 transitions.
[2020-11-24 15:49:45,289 INFO  L445         BuchiCegarLoop]: ======== Iteration 7============
[2020-11-24 15:49:45,289 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 167 states and 169 transitions.
[2020-11-24 15:49:45,289 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 15:49:45,289 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 15:49:45,290 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 15:49:45,291 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 15:49:45,291 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L3]                 success_transferFrom_MyToken0 := false;
[L3]                 call_transferFrom_MyToken0 := false;
[L3]     CALL        call main();
[L3]                 havoc p3;
[L3]                 havoc p2;
[L3]                 havoc p1;
[L1946]              assume null == 0;
[L1947]  CALL        call this := FreshRefGenerator__success();
[L767]               havoc newRef;
[L768]               assume Alloc[newRef] == false;
[L769]               Alloc[newRef] := true;
[L770]               assume newRef != null;
[L1947]  RET         call this := FreshRefGenerator__success();
[L1948]              assume now >= 0;
[L1949]              assume DType[this] == MyToken;
[L1950]              assume !revert && gas >= 0;
[L1951]  CALL        call CorralChoice_MyToken(this);
[L1826]              havoc msgsender_MSG;
[L1827]              havoc msgvalue_MSG;
[L1828]              havoc choice;
[L1829]              havoc a_s23;
[L1830]              havoc b_s23;
[L1831]              havoc c_s23;
[L1832]              havoc a_s45;
[L1833]              havoc b_s45;
[L1834]              havoc c_s45;
[L1835]              havoc a_s73;
[L1836]              havoc b_s73;
[L1837]              havoc c_s73;
[L1838]              havoc a_s95;
[L1839]              havoc b_s95;
[L1840]              havoc c_s95;
[L1841]              havoc __ret_0_totalSupply;
[L1842]              havoc tokenOwner_s344;
[L1843]              havoc balance_s344;
[L1844]              havoc tokenOwner_s490;
[L1845]              havoc spender_s490;
[L1846]              havoc remaining_s490;
[L1847]              havoc to_s387;
[L1848]              havoc tokens_s387;
[L1849]              havoc success_s387;
[L1850]              havoc spender_s415;
[L1851]              havoc tokens_s415;
[L1852]              havoc success_s415;
[L1853]              havoc from_s474;
[L1854]              havoc to_s474;
[L1855]              havoc tokens_s474;
[L1856]              havoc success_s474;
[L1857]              havoc __ret_0_owner;
[L1858]              havoc __ret_0_newOwner;
[L1859]              havoc _newOwner_s217;
[L1860]              havoc __ret_0_symbol;
[L1861]              havoc __ret_0_name;
[L1862]              havoc __ret_0_decimals;
[L1863]              havoc __ret_0__totalSupply;
[L1864]              havoc tokenName_s318;
[L1865]              havoc tokenSymbol_s318;
[L1866]              havoc tokenDecimals_s318;
[L1867]              havoc initialSupply_s318;
[L1868]              havoc spender_s533;
[L1869]              havoc tokens_s533;
[L1870]              havoc data_s533;
[L1871]              havoc success_s533;
[L1872]              havoc tmpNow;
[L1873]              havoc gas;
[L1874]              assume gas > 4000000 && gas <= 8000000;
[L1875]              tmpNow := now;
[L1876]              havoc now;
[L1877]              assume now > tmpNow;
[L1878]              assume msgsender_MSG != null;
[L1879]  COND FALSE  !(choice == 8)
[L1887]  COND FALSE  !(choice == 7)
[L1895]  COND FALSE  !(choice == 6)
[L1901]  COND FALSE  !(choice == 5)
[L1907]  COND FALSE  !(choice == 4)
[L1913]  COND FALSE  !(choice == 3)
[L1920]  COND FALSE  !(choice == 2)
[L1927]  COND TRUE   choice == 1
[L1928]              gas := gas - 21000;
[L1929]  COND TRUE   gas >= 0
[L1930]              assume tokens_s474 >= 0 && tokens_s474 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1931]              assume msgvalue_MSG == 0;
[L1932]  CALL        call success_s474 := transferFrom~address~address~uint256_MyToken(this, msgsender_MSG, msgvalue_MSG, from_s474, to_s474, tokens_s474);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != from_s474 && p1 != to_s474) && (p2 != from_s474 || p3 != msgsender_MSG)) && from_s474 != to_s474) && tokens_s474 <= balances_MyToken[this][from_s474]) && tokens_s474 <= allowed_MyToken[this][from_s474][msgsender_MSG]) && balances_MyToken[this][to_s474] + tokens_s474 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && tokens_s474 >= 0) && tokens_s474 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_MyToken[this][to_s474] >= 0) && balances_MyToken[this][to_s474] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_MyToken[this][from_s474] >= 0) && balances_MyToken[this][from_s474] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_MyToken[this][from_s474][msgsender_MSG] >= 0) && allowed_MyToken[this][from_s474][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_MyToken0 := true;
[L3]                 call_transferFrom_MyToken0 := false;
[L3]                 revert := revert_hold;
[L406]               havoc __exception;
[L407]               revert := false;
[L408]   COND TRUE   __exception
[L409]               __tmp__Balance := Balance;
[L410]               __tmp__DType := DType;
[L411]               __tmp__Alloc := Alloc;
[L412]               __tmp__balance_ADDR := balance_ADDR;
[L413]               __tmp__M_Ref_int := M_Ref_int;
[L414]               __tmp__sum_balances0 := sum_balances0;
[L415]               __tmp__alloc_allowed_MyToken_lvl0 := alloc_allowed_MyToken_lvl0;
[L416]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L417]               __tmp__sum_allowed1 := sum_allowed1;
[L418]               __tmp__Length := Length;
[L419]               __tmp__now := now;
[L420]               __tmp__owner_Owned := owner_Owned;
[L421]               __tmp__newOwner_Owned := newOwner_Owned;
[L422]               __tmp__symbol_MyToken := symbol_MyToken;
[L423]               __tmp__name_MyToken := name_MyToken;
[L424]               __tmp__decimals_MyToken := decimals_MyToken;
[L425]               __tmp___totalSupply_MyToken := _totalSupply_MyToken;
[L426]               __tmp__balances_MyToken := balances_MyToken;
[L427]               __tmp__allowed_MyToken := allowed_MyToken;
[L428]   CALL        call success_s474 := transferFrom~address~address~uint256_MyToken__fail(this, msgsender_MSG, msgvalue_MSG, from_s474, to_s474, tokens_s474);
[L922]   COND TRUE   __tmp__DType[this] == MyToken
[L923]   CALL        call __var_4 := safeSub~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balances_MyToken[this][from_s474], tokens_s474);
[L793]   COND FALSE  !(!(b_s45 <= a_s45))
[L797]               c_s45 := (a_s45 - b_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L923]   RET         call __var_4 := safeSub~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balances_MyToken[this][from_s474], tokens_s474);
[L924]   COND FALSE  !(revert)
[L930]               __tmp__sum_balances0[this] := __tmp__sum_balances0[this] - __tmp__balances_MyToken[this][from_s474];
[L931]               __tmp__balances_MyToken[this][from_s474] := __var_4;
[L932]               __tmp__sum_balances0[this] := __tmp__sum_balances0[this] + __tmp__balances_MyToken[this][from_s474];
[L933]   COND TRUE   __tmp__DType[this] == MyToken
[L934]   CALL        call __var_5 := safeSub~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__allowed_MyToken[this][from_s474][msgsender_MSG], tokens_s474);
[L793]   COND FALSE  !(!(b_s45 <= a_s45))
[L797]               c_s45 := (a_s45 - b_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L934]   RET         call __var_5 := safeSub~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__allowed_MyToken[this][from_s474][msgsender_MSG], tokens_s474);
[L935]   COND FALSE  !(revert)
[L941]               __tmp__sum_allowed1[from_s474] := __tmp__sum_allowed1[from_s474] - __tmp__allowed_MyToken[this][from_s474][msgsender_MSG];
[L942]               __tmp__allowed_MyToken[this][from_s474][msgsender_MSG] := __var_5;
[L943]               __tmp__sum_allowed1[from_s474] := __tmp__sum_allowed1[from_s474] + __tmp__allowed_MyToken[this][from_s474][msgsender_MSG];
[L944]   COND TRUE   __tmp__DType[this] == MyToken
[L945]   CALL        call __var_6 := safeAdd~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balances_MyToken[this][to_s474], tokens_s474);
[L775]               c_s23 := (a_s23 + b_s23) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L776]   COND TRUE   !(c_s23 >= a_s23)
[L777]               revert := true;
[L945]   RET         call __var_6 := safeAdd~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balances_MyToken[this][to_s474], tokens_s474);
[L946]   COND TRUE   revert
[L428]   RET         call success_s474 := transferFrom~address~address~uint256_MyToken__fail(this, msgsender_MSG, msgvalue_MSG, from_s474, to_s474, tokens_s474);
[L429]               assume revert || gas < 0;
[L1932]  RET         call success_s474 := transferFrom~address~address~uint256_MyToken(this, msgsender_MSG, msgvalue_MSG, from_s474, to_s474, tokens_s474);
[L1951]  RET         call CorralChoice_MyToken(this);

Loop:
[L1951]        assume true;

[2020-11-24 15:49:45,292 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 15:49:45,292 INFO  L82        PathProgramCache]: Analyzing trace with hash -1258306547, now seen corresponding path program 1 times
[2020-11-24 15:49:45,293 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 15:49:45,298 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 15:49:45,334 INFO  L134       CoverageAnalysis]: Checked inductivity of 4 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 4 trivial. 0 not checked.
[2020-11-24 15:49:45,334 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 15:49:45,334 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [9] imperfect sequences [] total 9
[2020-11-24 15:49:45,335 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 15:49:45,335 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 9 interpolants.
[2020-11-24 15:49:45,335 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=16, Invalid=56, Unknown=0, NotChecked=0, Total=72
[2020-11-24 15:49:45,335 INFO  L87              Difference]: Start difference. First operand 167 states and 169 transitions. cyclomatic complexity: 3 Second operand 9 states.
[2020-11-24 15:49:45,377 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 15:49:45,377 INFO  L93              Difference]: Finished difference Result 169 states and 170 transitions.
[2020-11-24 15:49:45,377 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 10 states. 
[2020-11-24 15:49:45,377 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 169 states and 170 transitions.
[2020-11-24 15:49:45,378 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 15:49:45,378 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 169 states to 162 states and 163 transitions.
[2020-11-24 15:49:45,378 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 123
[2020-11-24 15:49:45,379 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 123
[2020-11-24 15:49:45,379 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 162 states and 163 transitions.
[2020-11-24 15:49:45,379 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 15:49:45,379 INFO  L728         BuchiCegarLoop]: Abstraction has 162 states and 163 transitions.
[2020-11-24 15:49:45,379 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 162 states and 163 transitions.
[2020-11-24 15:49:45,380 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 162 to 162.
[2020-11-24 15:49:45,380 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 162 states.
[2020-11-24 15:49:45,381 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 162 states to 162 states and 163 transitions.
[2020-11-24 15:49:45,381 INFO  L751         BuchiCegarLoop]: Abstraction has 162 states and 163 transitions.
[2020-11-24 15:49:45,381 INFO  L631         BuchiCegarLoop]: Abstraction has 162 states and 163 transitions.
[2020-11-24 15:49:45,381 INFO  L445         BuchiCegarLoop]: ======== Iteration 8============
[2020-11-24 15:49:45,381 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 162 states and 163 transitions.
[2020-11-24 15:49:45,381 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 15:49:45,381 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 15:49:45,381 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 15:49:45,382 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 15:49:45,382 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L3]                 success_transferFrom_MyToken0 := false;
[L3]                 call_transferFrom_MyToken0 := false;
[L3]     CALL        call main();
[L3]                 havoc p3;
[L3]                 havoc p2;
[L3]                 havoc p1;
[L1946]              assume null == 0;
[L1947]  CALL        call this := FreshRefGenerator__success();
[L767]               havoc newRef;
[L768]               assume Alloc[newRef] == false;
[L769]               Alloc[newRef] := true;
[L770]               assume newRef != null;
[L1947]  RET         call this := FreshRefGenerator__success();
[L1948]              assume now >= 0;
[L1949]              assume DType[this] == MyToken;
[L1950]              assume !revert && gas >= 0;
[L1951]  CALL        call CorralChoice_MyToken(this);
[L1826]              havoc msgsender_MSG;
[L1827]              havoc msgvalue_MSG;
[L1828]              havoc choice;
[L1829]              havoc a_s23;
[L1830]              havoc b_s23;
[L1831]              havoc c_s23;
[L1832]              havoc a_s45;
[L1833]              havoc b_s45;
[L1834]              havoc c_s45;
[L1835]              havoc a_s73;
[L1836]              havoc b_s73;
[L1837]              havoc c_s73;
[L1838]              havoc a_s95;
[L1839]              havoc b_s95;
[L1840]              havoc c_s95;
[L1841]              havoc __ret_0_totalSupply;
[L1842]              havoc tokenOwner_s344;
[L1843]              havoc balance_s344;
[L1844]              havoc tokenOwner_s490;
[L1845]              havoc spender_s490;
[L1846]              havoc remaining_s490;
[L1847]              havoc to_s387;
[L1848]              havoc tokens_s387;
[L1849]              havoc success_s387;
[L1850]              havoc spender_s415;
[L1851]              havoc tokens_s415;
[L1852]              havoc success_s415;
[L1853]              havoc from_s474;
[L1854]              havoc to_s474;
[L1855]              havoc tokens_s474;
[L1856]              havoc success_s474;
[L1857]              havoc __ret_0_owner;
[L1858]              havoc __ret_0_newOwner;
[L1859]              havoc _newOwner_s217;
[L1860]              havoc __ret_0_symbol;
[L1861]              havoc __ret_0_name;
[L1862]              havoc __ret_0_decimals;
[L1863]              havoc __ret_0__totalSupply;
[L1864]              havoc tokenName_s318;
[L1865]              havoc tokenSymbol_s318;
[L1866]              havoc tokenDecimals_s318;
[L1867]              havoc initialSupply_s318;
[L1868]              havoc spender_s533;
[L1869]              havoc tokens_s533;
[L1870]              havoc data_s533;
[L1871]              havoc success_s533;
[L1872]              havoc tmpNow;
[L1873]              havoc gas;
[L1874]              assume gas > 4000000 && gas <= 8000000;
[L1875]              tmpNow := now;
[L1876]              havoc now;
[L1877]              assume now > tmpNow;
[L1878]              assume msgsender_MSG != null;
[L1879]  COND FALSE  !(choice == 8)
[L1887]  COND FALSE  !(choice == 7)
[L1895]  COND FALSE  !(choice == 6)
[L1901]  COND FALSE  !(choice == 5)
[L1907]  COND FALSE  !(choice == 4)
[L1913]  COND FALSE  !(choice == 3)
[L1920]  COND FALSE  !(choice == 2)
[L1927]  COND TRUE   choice == 1
[L1928]              gas := gas - 21000;
[L1929]  COND TRUE   gas >= 0
[L1930]              assume tokens_s474 >= 0 && tokens_s474 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1931]              assume msgvalue_MSG == 0;
[L1932]  CALL        call success_s474 := transferFrom~address~address~uint256_MyToken(this, msgsender_MSG, msgvalue_MSG, from_s474, to_s474, tokens_s474);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != from_s474 && p1 != to_s474) && (p2 != from_s474 || p3 != msgsender_MSG)) && from_s474 != to_s474) && tokens_s474 <= balances_MyToken[this][from_s474]) && tokens_s474 <= allowed_MyToken[this][from_s474][msgsender_MSG]) && balances_MyToken[this][to_s474] + tokens_s474 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && tokens_s474 >= 0) && tokens_s474 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_MyToken[this][to_s474] >= 0) && balances_MyToken[this][to_s474] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_MyToken[this][from_s474] >= 0) && balances_MyToken[this][from_s474] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_MyToken[this][from_s474][msgsender_MSG] >= 0) && allowed_MyToken[this][from_s474][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_MyToken0 := true;
[L3]                 call_transferFrom_MyToken0 := false;
[L3]                 revert := revert_hold;
[L406]               havoc __exception;
[L407]               revert := false;
[L408]   COND TRUE   __exception
[L409]               __tmp__Balance := Balance;
[L410]               __tmp__DType := DType;
[L411]               __tmp__Alloc := Alloc;
[L412]               __tmp__balance_ADDR := balance_ADDR;
[L413]               __tmp__M_Ref_int := M_Ref_int;
[L414]               __tmp__sum_balances0 := sum_balances0;
[L415]               __tmp__alloc_allowed_MyToken_lvl0 := alloc_allowed_MyToken_lvl0;
[L416]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L417]               __tmp__sum_allowed1 := sum_allowed1;
[L418]               __tmp__Length := Length;
[L419]               __tmp__now := now;
[L420]               __tmp__owner_Owned := owner_Owned;
[L421]               __tmp__newOwner_Owned := newOwner_Owned;
[L422]               __tmp__symbol_MyToken := symbol_MyToken;
[L423]               __tmp__name_MyToken := name_MyToken;
[L424]               __tmp__decimals_MyToken := decimals_MyToken;
[L425]               __tmp___totalSupply_MyToken := _totalSupply_MyToken;
[L426]               __tmp__balances_MyToken := balances_MyToken;
[L427]               __tmp__allowed_MyToken := allowed_MyToken;
[L428]   CALL        call success_s474 := transferFrom~address~address~uint256_MyToken__fail(this, msgsender_MSG, msgvalue_MSG, from_s474, to_s474, tokens_s474);
[L922]   COND TRUE   __tmp__DType[this] == MyToken
[L923]   CALL        call __var_4 := safeSub~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balances_MyToken[this][from_s474], tokens_s474);
[L793]   COND FALSE  !(!(b_s45 <= a_s45))
[L797]               c_s45 := (a_s45 - b_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L923]   RET         call __var_4 := safeSub~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balances_MyToken[this][from_s474], tokens_s474);
[L924]   COND FALSE  !(revert)
[L930]               __tmp__sum_balances0[this] := __tmp__sum_balances0[this] - __tmp__balances_MyToken[this][from_s474];
[L931]               __tmp__balances_MyToken[this][from_s474] := __var_4;
[L932]               __tmp__sum_balances0[this] := __tmp__sum_balances0[this] + __tmp__balances_MyToken[this][from_s474];
[L933]   COND TRUE   __tmp__DType[this] == MyToken
[L934]   CALL        call __var_5 := safeSub~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__allowed_MyToken[this][from_s474][msgsender_MSG], tokens_s474);
[L793]   COND FALSE  !(!(b_s45 <= a_s45))
[L797]               c_s45 := (a_s45 - b_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L934]   RET         call __var_5 := safeSub~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__allowed_MyToken[this][from_s474][msgsender_MSG], tokens_s474);
[L935]   COND FALSE  !(revert)
[L941]               __tmp__sum_allowed1[from_s474] := __tmp__sum_allowed1[from_s474] - __tmp__allowed_MyToken[this][from_s474][msgsender_MSG];
[L942]               __tmp__allowed_MyToken[this][from_s474][msgsender_MSG] := __var_5;
[L943]               __tmp__sum_allowed1[from_s474] := __tmp__sum_allowed1[from_s474] + __tmp__allowed_MyToken[this][from_s474][msgsender_MSG];
[L944]   COND TRUE   __tmp__DType[this] == MyToken
[L945]   CALL        call __var_6 := safeAdd~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balances_MyToken[this][to_s474], tokens_s474);
[L775]               c_s23 := (a_s23 + b_s23) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L776]   COND FALSE  !(!(c_s23 >= a_s23))
[L945]   RET         call __var_6 := safeAdd~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balances_MyToken[this][to_s474], tokens_s474);
[L946]   COND FALSE  !(revert)
[L952]               __tmp__sum_balances0[this] := __tmp__sum_balances0[this] - __tmp__balances_MyToken[this][to_s474];
[L953]               __tmp__balances_MyToken[this][to_s474] := __var_6;
[L954]               __tmp__sum_balances0[this] := __tmp__sum_balances0[this] + __tmp__balances_MyToken[this][to_s474];
[L955]               success_s474 := true;
[L428]   RET         call success_s474 := transferFrom~address~address~uint256_MyToken__fail(this, msgsender_MSG, msgvalue_MSG, from_s474, to_s474, tokens_s474);
[L429]               assume revert || gas < 0;
[L1932]  RET         call success_s474 := transferFrom~address~address~uint256_MyToken(this, msgsender_MSG, msgvalue_MSG, from_s474, to_s474, tokens_s474);
[L1951]  RET         call CorralChoice_MyToken(this);

Loop:
[L1951]        assume true;

[2020-11-24 15:49:45,384 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 15:49:45,384 INFO  L82        PathProgramCache]: Analyzing trace with hash -1538853898, now seen corresponding path program 1 times
[2020-11-24 15:49:45,384 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 15:49:45,389 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 15:49:45,402 INFO  L134       CoverageAnalysis]: Checked inductivity of 4 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 4 trivial. 0 not checked.
[2020-11-24 15:49:45,402 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 15:49:45,402 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [5] imperfect sequences [] total 5
[2020-11-24 15:49:45,402 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 15:49:45,403 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 5 interpolants.
[2020-11-24 15:49:45,403 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=7, Invalid=13, Unknown=0, NotChecked=0, Total=20
[2020-11-24 15:49:45,403 INFO  L87              Difference]: Start difference. First operand 162 states and 163 transitions. cyclomatic complexity: 2 Second operand 5 states.
[2020-11-24 15:49:45,410 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 15:49:45,410 INFO  L93              Difference]: Finished difference Result 155 states and 155 transitions.
[2020-11-24 15:49:45,410 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 5 states. 
[2020-11-24 15:49:45,410 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 155 states and 155 transitions.
[2020-11-24 15:49:45,411 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-24 15:49:45,411 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 155 states to 0 states and 0 transitions.
[2020-11-24 15:49:45,411 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 0
[2020-11-24 15:49:45,411 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 0
[2020-11-24 15:49:45,411 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 0 states and 0 transitions.
[2020-11-24 15:49:45,411 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 15:49:45,411 INFO  L728         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-24 15:49:45,411 INFO  L751         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-24 15:49:45,411 INFO  L631         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-24 15:49:45,411 INFO  L445         BuchiCegarLoop]: ======== Iteration 9============
[2020-11-24 15:49:45,411 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 0 states and 0 transitions.
[2020-11-24 15:49:45,411 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-24 15:49:45,411 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is true
[2020-11-24 15:49:45,414 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 24.11 03:49:45 BasicIcfg
[2020-11-24 15:49:45,415 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-24 15:49:45,415 INFO  L168              Benchmark]: Toolchain (without parser) took 4247.22 ms. Allocated memory was 1.0 GB in the beginning and 1.3 GB in the end (delta: 286.3 MB). Free memory was 940.6 MB in the beginning and 820.6 MB in the end (delta: 120.0 MB). Peak memory consumption was 406.2 MB. Max. memory is 15.3 GB.
[2020-11-24 15:49:45,416 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.19 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-24 15:49:45,416 INFO  L168              Benchmark]: Boogie Preprocessor took 77.71 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 935.2 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-24 15:49:45,416 INFO  L168              Benchmark]: UtopiaSpecLang took 54.99 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 929.8 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-24 15:49:45,416 INFO  L168              Benchmark]: Boogie Printer took 10.86 ms. Allocated memory is still 1.0 GB. Free memory is still 929.8 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-24 15:49:45,417 INFO  L168              Benchmark]: RCFGBuilder took 579.30 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 870.8 MB in the end (delta: 59.1 MB). Peak memory consumption was 59.1 MB. Max. memory is 15.3 GB.
[2020-11-24 15:49:45,417 INFO  L168              Benchmark]: UtopiaLTL2Aut took 48.81 ms. Allocated memory is still 1.0 GB. Free memory was 870.8 MB in the beginning and 867.2 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
[2020-11-24 15:49:45,417 INFO  L168              Benchmark]: BÃ¼chi Program Product took 965.97 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 55.6 MB). Free memory was 867.2 MB in the beginning and 920.0 MB in the end (delta: -52.8 MB). Peak memory consumption was 150.5 MB. Max. memory is 15.3 GB.
[2020-11-24 15:49:45,418 INFO  L168              Benchmark]: BlockEncodingV2 took 89.05 ms. Allocated memory is still 1.1 GB. Free memory was 920.0 MB in the beginning and 885.8 MB in the end (delta: 34.2 MB). Peak memory consumption was 34.2 MB. Max. memory is 15.3 GB.
[2020-11-24 15:49:45,418 INFO  L168              Benchmark]: BuchiAutomizer took 2417.47 ms. Allocated memory was 1.1 GB in the beginning and 1.3 GB in the end (delta: 230.7 MB). Free memory was 885.8 MB in the beginning and 820.6 MB in the end (delta: 65.2 MB). Peak memory consumption was 295.9 MB. Max. memory is 15.3 GB.
[2020-11-24 15:49:45,421 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    1600 locations, 2721 edges
  - StatisticsResult: Encoded RCFG
    1550 locations, 2591 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.19 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 77.71 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 935.2 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 54.99 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 929.8 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 10.86 ms. Allocated memory is still 1.0 GB. Free memory is still 929.8 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * RCFGBuilder took 579.30 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 870.8 MB in the end (delta: 59.1 MB). Peak memory consumption was 59.1 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 48.81 ms. Allocated memory is still 1.0 GB. Free memory was 870.8 MB in the beginning and 867.2 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 965.97 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 55.6 MB). Free memory was 867.2 MB in the beginning and 920.0 MB in the end (delta: -52.8 MB). Peak memory consumption was 150.5 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 89.05 ms. Allocated memory is still 1.1 GB. Free memory was 920.0 MB in the beginning and 885.8 MB in the end (delta: 34.2 MB). Peak memory consumption was 34.2 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 2417.47 ms. Allocated memory was 1.1 GB in the beginning and 1.3 GB in the end (delta: 230.7 MB). Free memory was 885.8 MB in the beginning and 820.6 MB in the end (delta: 65.2 MB). Peak memory consumption was 295.9 MB. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    689 locations, 844 edges
  - StatisticsResult: BuchiProgram size
    1600 locations, 2721 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 8 terminating modules (8 trivial, 0 deterministic, 0 nondeterministic). 8 modules have a trivial ranking function, the largest among these consists of 18 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 2.3s and 9 iterations.  TraceHistogramMax:2. Analysis of lassos took 1.1s. Construction of modules took 0.5s. BÃ¼chi inclusion checks took 0.4s. Highest rank in rank-based complementation 0. Minimization of det autom 8. Minimization of nondet autom 0. Automata minimization 0.0s AutomataMinimizationTime, 7 MinimizatonAttempts, 35 StatesRemovedByMinimization, 3 NontrivialMinimizations. Non-live state removal took 0.0s Buchi closure took 0.0s. Biggest automaton had 218 states and ocurred in iteration 2.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 2037 SDtfs, 1837 SDslu, 4075 SDs, 0 SdLazy, 2305 SolverSat, 599 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 0.5s Time	LassoAnalysisResults: nont0 unkn0 SFLI0 SFLT0 conc0 concLT0 SILN0 SILU8 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - AllSpecificationsHoldResult: All specifications hold
    Buchi Automizer proved that the LTL property ! ( ( []( (call_transferFrom_MyToken0) ==> ( <>(success_transferFrom_MyToken0) ) ) )) holds
RESULT: Ultimate proved your program to be correct!
Received shutdown request...
