This is Ultimate 0.1.24-f1553f5-m
[2020-11-24 17:57:09,999 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-24 17:57:10,000 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-24 17:57:10,010 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-24 17:57:10,010 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-24 17:57:10,011 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-24 17:57:10,012 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-24 17:57:10,013 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-24 17:57:10,015 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-24 17:57:10,015 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-24 17:57:10,016 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-24 17:57:10,016 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-24 17:57:10,017 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-24 17:57:10,017 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-24 17:57:10,018 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-24 17:57:10,019 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-24 17:57:10,019 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-24 17:57:10,020 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-24 17:57:10,022 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-24 17:57:10,023 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-24 17:57:10,023 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-24 17:57:10,024 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-24 17:57:10,025 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-24 17:57:10,026 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-24 17:57:10,026 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-24 17:57:10,026 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-24 17:57:10,027 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-24 17:57:10,027 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-24 17:57:10,027 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-24 17:57:10,028 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-24 17:57:10,028 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-24 17:57:10,028 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-24 17:57:10,029 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-24 17:57:10,029 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-24 17:57:10,030 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-24 17:57:10,030 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-24 17:57:10,031 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-24 17:57:10,031 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-24 17:57:10,031 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-24 17:57:10,032 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-24 17:57:10,032 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-24 17:57:10,032 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-24 17:57:10,040 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-24 17:57:10,040 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-24 17:57:10,041 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-24 17:57:10,041 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-24 17:57:10,041 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-24 17:57:10,041 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-24 17:57:10,041 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-24 17:57:10,041 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-24 17:57:10,041 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-24 17:57:10,041 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-24 17:57:10,041 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-24 17:57:10,042 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-24 17:57:10,042 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-24 17:57:10,042 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-24 17:57:10,042 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-24 17:57:10,042 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-24 17:57:10,042 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-24 17:57:10,042 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-24 17:57:10,042 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-24 17:57:10,042 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-24 17:57:10,042 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-24 17:57:10,043 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-24 17:57:10,043 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-24 17:57:10,043 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-24 17:57:10,043 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-24 17:57:10,043 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-24 17:57:10,068 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-24 17:57:10,080 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-24 17:57:10,082 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-24 17:57:10,083 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-24 17:57:10,084 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-24 17:57:10,084 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/WXB_0x549ed593defa6ce92fb8e8ce08bec1a804ca1fbe_transfer-normal.bpl
[2020-11-24 17:57:10,084 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/WXB_0x549ed593defa6ce92fb8e8ce08bec1a804ca1fbe_transfer-normal.bpl'
[2020-11-24 17:57:10,136 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-24 17:57:10,137 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-24 17:57:10,138 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-24 17:57:10,138 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-24 17:57:10,138 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-24 17:57:10,154 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "WXB_0x549ed593defa6ce92fb8e8ce08bec1a804ca1fbe_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 05:57:10" (1/1) ...
[2020-11-24 17:57:10,155 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "WXB_0x549ed593defa6ce92fb8e8ce08bec1a804ca1fbe_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 05:57:10" (1/1) ...
[2020-11-24 17:57:10,176 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "WXB_0x549ed593defa6ce92fb8e8ce08bec1a804ca1fbe_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 05:57:10" (1/1) ...
[2020-11-24 17:57:10,177 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "WXB_0x549ed593defa6ce92fb8e8ce08bec1a804ca1fbe_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 05:57:10" (1/1) ...
[2020-11-24 17:57:10,190 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "WXB_0x549ed593defa6ce92fb8e8ce08bec1a804ca1fbe_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 05:57:10" (1/1) ...
[2020-11-24 17:57:10,196 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "WXB_0x549ed593defa6ce92fb8e8ce08bec1a804ca1fbe_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 05:57:10" (1/1) ...
[2020-11-24 17:57:10,199 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "WXB_0x549ed593defa6ce92fb8e8ce08bec1a804ca1fbe_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 05:57:10" (1/1) ...
[2020-11-24 17:57:10,204 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-24 17:57:10,205 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-24 17:57:10,205 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-24 17:57:10,208 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-24 17:57:10,211 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "WXB_0x549ed593defa6ce92fb8e8ce08bec1a804ca1fbe_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 05:57:10" (1/1) ...
[2020-11-24 17:57:10,223 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(WXB.transfer(to, value), p1 != msg.sender && p1 != to && msg.sender != to && value <= holders_WXB[this][msg.sender] && holders_WXB[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && holders_WXB[this][to] >= 0 && holders_WXB[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && holders_WXB[this][msg.sender] >= 0 &&  holders_WXB[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(WXB.transfer(to, value), return == true && holders_WXB[this][msg.sender] == old(holders_WXB[this][msg.sender]) - value && holders_WXB[this][to] == old(holders_WXB[this][to]) + value && totalSupply_WXB[this] == old(totalSupply_WXB[this]) && approach_WXB[this] == old(approach_WXB[this]) && holders_WXB[this][p1] == old(holders_WXB[this][p1]) && decimals_WXB[this] == old(decimals_WXB[this]) && symbol_WXB[this] == old(symbol_WXB[this]) && name_WXB[this] == old(name_WXB[this]))))
[2020-11-24 17:57:10,229 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(WXB.transfer(to, value), p1 != msg.sender && p1 != to && msg.sender != to && value <= holders_WXB[this][msg.sender] && holders_WXB[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && holders_WXB[this][to] >= 0 && holders_WXB[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && holders_WXB[this][msg.sender] >= 0 &&  holders_WXB[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(WXB.transfer(to, value), return == true && holders_WXB[this][msg.sender] == old(holders_WXB[this][msg.sender]) - value && holders_WXB[this][to] == old(holders_WXB[this][to]) + value && totalSupply_WXB[this] == old(totalSupply_WXB[this]) && approach_WXB[this] == old(approach_WXB[this]) && holders_WXB[this][p1] == old(holders_WXB[this][p1]) && decimals_WXB[this] == old(decimals_WXB[this]) && symbol_WXB[this] == old(symbol_WXB[this]) && name_WXB[this] == old(name_WXB[this]))))
[2020-11-24 17:57:10,236 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(WXB.transfer(to, value), p1 != msg.sender && p1 != to && msg.sender != to && value <= holders_WXB[this][msg.sender] && holders_WXB[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && holders_WXB[this][to] >= 0 && holders_WXB[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && holders_WXB[this][msg.sender] >= 0 &&  holders_WXB[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(WXB.transfer(to, value), return == true && holders_WXB[this][msg.sender] == old(holders_WXB[this][msg.sender]) - value && holders_WXB[this][to] == old(holders_WXB[this][to]) + value && totalSupply_WXB[this] == old(totalSupply_WXB[this]) && approach_WXB[this] == old(approach_WXB[this]) && holders_WXB[this][p1] == old(holders_WXB[this][p1]) && decimals_WXB[this] == old(decimals_WXB[this]) && symbol_WXB[this] == old(symbol_WXB[this]) && name_WXB[this] == old(name_WXB[this]))))
[2020-11-24 17:57:10,242 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( ( ( p1!=msg.sender && p1!=_to_s213 ) && msg.sender!=_to_s213 ) && _val_s213<=holders_WXB[this][msg.sender] ) && ( holders_WXB[this][_to_s213] + _val_s213 )<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && _val_s213>=0 ) && _val_s213<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && holders_WXB[this][_to_s213]>=0 ) && holders_WXB[this][_to_s213]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && holders_WXB[this][msg.sender]>=0 ) && holders_WXB[this][msg.sender]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPNEQ,IdentifierExpression[p1,GLOBAL],IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_WXB>]],BinaryExpression[COMPNEQ,IdentifierExpression[p1,GLOBAL],IdentifierExpression[_to_s213,<IMPLEMENTATION_INPARAM,transfer~address~uint256_WXB>]]],BinaryExpression[COMPNEQ,IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_WXB>],IdentifierExpression[_to_s213,<IMPLEMENTATION_INPARAM,transfer~address~uint256_WXB>]]],BinaryExpression[COMPLEQ,IdentifierExpression[_val_s213,<IMPLEMENTATION_INPARAM,transfer~address~uint256_WXB>],ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[holders_WXB,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_WXB>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_WXB>]]]]],BinaryExpression[COMPLT,BinaryExpression[ARITHPLUS,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[holders_WXB,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_WXB>]]],[IdentifierExpression[_to_s213,<IMPLEMENTATION_INPARAM,transfer~address~uint256_WXB>]]],IdentifierExpression[_val_s213,<IMPLEMENTATION_INPARAM,transfer~address~uint256_WXB>]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,IdentifierExpression[_val_s213,<IMPLEMENTATION_INPARAM,transfer~address~uint256_WXB>],IntegerLiteral[0]]],BinaryExpression[COMPLT,IdentifierExpression[_val_s213,<IMPLEMENTATION_INPARAM,transfer~address~uint256_WXB>],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[holders_WXB,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_WXB>]]],[IdentifierExpression[_to_s213,<IMPLEMENTATION_INPARAM,transfer~address~uint256_WXB>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[holders_WXB,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_WXB>]]],[IdentifierExpression[_to_s213,<IMPLEMENTATION_INPARAM,transfer~address~uint256_WXB>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[holders_WXB,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_WXB>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_WXB>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[holders_WXB,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_WXB>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_WXB>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]]
[2020-11-24 17:57:10,245 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( __ret_0_==true && holders_WXB[this][msg.sender]==( ( old(holders_WXB[this][msg.sender]) ) - _val_s213 ) ) && holders_WXB[this][_to_s213]==( ( old(holders_WXB[this][_to_s213]) ) + _val_s213 ) ) && totalSupply_WXB[this]==( old(totalSupply_WXB[this]) ) ) && approach_WXB[this]==( old(approach_WXB[this]) ) ) && holders_WXB[this][p1]==( old(holders_WXB[this][p1]) ) ) && decimals_WXB[this]==( old(decimals_WXB[this]) ) ) && symbol_WXB[this]==( old(symbol_WXB[this]) ) ) && name_WXB[this]==( old(name_WXB[this]) ) ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[__ret_0_,<IMPLEMENTATION_OUTPARAM,transfer~address~uint256_WXB>],BooleanLiteral[true]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[holders_WXB,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_WXB>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_WXB>]]],BinaryExpression[ARITHMINUS,UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[holders_WXB,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_WXB>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_WXB>]]]],IdentifierExpression[_val_s213,<IMPLEMENTATION_INPARAM,transfer~address~uint256_WXB>]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[holders_WXB,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_WXB>]]],[IdentifierExpression[_to_s213,<IMPLEMENTATION_INPARAM,transfer~address~uint256_WXB>]]],BinaryExpression[ARITHPLUS,UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[holders_WXB,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_WXB>]]],[IdentifierExpression[_to_s213,<IMPLEMENTATION_INPARAM,transfer~address~uint256_WXB>]]]],IdentifierExpression[_val_s213,<IMPLEMENTATION_INPARAM,transfer~address~uint256_WXB>]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[totalSupply_WXB,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_WXB>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[totalSupply_WXB,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_WXB>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[approach_WXB,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_WXB>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[approach_WXB,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_WXB>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[holders_WXB,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_WXB>]]],[IdentifierExpression[p1,GLOBAL]]],UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[holders_WXB,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_WXB>]]],[IdentifierExpression[p1,GLOBAL]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[decimals_WXB,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_WXB>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[decimals_WXB,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_WXB>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[symbol_WXB,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_WXB>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[symbol_WXB,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_WXB>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[name_WXB,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_WXB>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[name_WXB,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_WXB>]]]]]]
[2020-11-24 17:57:10,248 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(WXB.transfer(to, value), p1 != msg.sender && p1 != to && msg.sender != to && value <= holders_WXB[this][msg.sender] && holders_WXB[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && holders_WXB[this][to] >= 0 && holders_WXB[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && holders_WXB[this][msg.sender] >= 0 &&  holders_WXB[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(WXB.transfer(to, value), return == true && holders_WXB[this][msg.sender] == old(holders_WXB[this][msg.sender]) - value && holders_WXB[this][to] == old(holders_WXB[this][to]) + value && totalSupply_WXB[this] == old(totalSupply_WXB[this]) && approach_WXB[this] == old(approach_WXB[this]) && holders_WXB[this][p1] == old(holders_WXB[this][p1]) && decimals_WXB[this] == old(decimals_WXB[this]) && symbol_WXB[this] == old(symbol_WXB[this]) && name_WXB[this] == old(name_WXB[this]))))
[2020-11-24 17:57:10,248 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_transfer_WXB0) ==> ( <>AP(success_transfer_WXB0) ) ) )
Executed UtopiaSpecLang
[2020-11-24 17:57:10,252 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 05:57:10 PropertyContainer
[2020-11-24 17:57:10,252 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-24 17:57:10,252 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-24 17:57:10,253 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-24 17:57:10,253 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-24 17:57:10,253 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "WXB_0x549ed593defa6ce92fb8e8ce08bec1a804ca1fbe_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 05:57:10" (1/2) ...
[2020-11-24 17:57:10,254 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-24 17:57:10,254 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-24 17:57:10,260 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 05:57:10" (2/2) ...
[2020-11-24 17:57:10,260 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-24 17:57:10,261 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-24 17:57:10,261 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-24 17:57:10,261 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-24 17:57:10,262 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "WXB_0x549ed593defa6ce92fb8e8ce08bec1a804ca1fbe_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 05:57:10" (1/2) ...
[2020-11-24 17:57:10,315 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-24 17:57:10,315 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_WXB
[2020-11-24 17:57:10,315 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_WXB
[2020-11-24 17:57:10,315 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_WXB
[2020-11-24 17:57:10,315 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_WXB
[2020-11-24 17:57:10,315 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_WXB
[2020-11-24 17:57:10,316 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_WXB
[2020-11-24 17:57:10,316 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_WXB
[2020-11-24 17:57:10,316 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_WXB
[2020-11-24 17:57:10,316 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_WXB
[2020-11-24 17:57:10,316 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_WXB
[2020-11-24 17:57:10,316 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_WXB
[2020-11-24 17:57:10,316 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_WXB
[2020-11-24 17:57:10,316 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-24 17:57:10,316 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-24 17:57:10,316 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-24 17:57:10,316 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20
[2020-11-24 17:57:10,317 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20
[2020-11-24 17:57:10,317 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_WXB
[2020-11-24 17:57:10,317 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-24 17:57:10,317 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-24 17:57:10,317 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_WXB__success
[2020-11-24 17:57:10,317 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_WXB__fail
[2020-11-24 17:57:10,317 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_WXB__success
[2020-11-24 17:57:10,317 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_WXB__fail
[2020-11-24 17:57:10,317 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_WXB__success
[2020-11-24 17:57:10,317 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_WXB__fail
[2020-11-24 17:57:10,317 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_WXB__success
[2020-11-24 17:57:10,317 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_WXB__fail
[2020-11-24 17:57:10,318 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_WXB__success
[2020-11-24 17:57:10,318 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_WXB__fail
[2020-11-24 17:57:10,318 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_WXB__success
[2020-11-24 17:57:10,318 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_WXB__fail
[2020-11-24 17:57:10,318 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-24 17:57:10,318 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-24 17:57:10,318 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-24 17:57:10,318 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-24 17:57:10,318 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-24 17:57:10,318 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_WXB__fail
[2020-11-24 17:57:10,318 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_WXB__success
[2020-11-24 17:57:10,319 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_WXB__fail
[2020-11-24 17:57:10,319 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_WXB__success
[2020-11-24 17:57:10,319 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_WXB__fail
[2020-11-24 17:57:10,319 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_WXB__success
[2020-11-24 17:57:10,319 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_WXB__fail
[2020-11-24 17:57:10,319 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_WXB__success
[2020-11-24 17:57:10,319 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_WXB__fail
[2020-11-24 17:57:10,319 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_WXB__success
[2020-11-24 17:57:10,319 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_WXB__fail
[2020-11-24 17:57:10,319 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_WXB__success
[2020-11-24 17:57:10,319 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-24 17:57:10,319 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-24 17:57:10,319 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-24 17:57:10,320 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-24 17:57:10,320 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-24 17:57:10,320 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-24 17:57:10,320 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20
[2020-11-24 17:57:10,320 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20
[2020-11-24 17:57:10,320 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_WXB
[2020-11-24 17:57:10,320 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-24 17:57:10,320 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-24 17:57:10,320 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-24 17:57:10,510 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 17:57:10,687 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 17:57:10,687 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 17:57:10,688 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 17:57:10,719 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-24 17:57:10,719 INFO  L286             CfgBuilder]: Removed 2 assue(true) statements.
[2020-11-24 17:57:10,721 INFO  L202        PluginConnector]: Adding new model WXB_0x549ed593defa6ce92fb8e8ce08bec1a804ca1fbe_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 05:57:10 BoogieIcfgContainer
[2020-11-24 17:57:10,721 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 05:57:10" (2/2) ...
[2020-11-24 17:57:10,721 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-24 17:57:10,721 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@723a299d and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 05:57:10, skipping insertion in model container
[2020-11-24 17:57:10,721 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-24 17:57:10,722 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-24 17:57:10,722 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-24 17:57:10,723 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-24 17:57:10,723 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "WXB_0x549ed593defa6ce92fb8e8ce08bec1a804ca1fbe_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 05:57:10" (1/3) ...
[2020-11-24 17:57:10,724 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@226d27a4 and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 05:57:10, skipping insertion in model container
[2020-11-24 17:57:10,724 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 05:57:10" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-24 17:57:10,760 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 05:57:10 NWAContainer
[2020-11-24 17:57:10,760 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-24 17:57:10,761 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-24 17:57:10,761 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-24 17:57:10,762 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-24 17:57:10,762 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "WXB_0x549ed593defa6ce92fb8e8ce08bec1a804ca1fbe_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 05:57:10" (3/4) ...
[2020-11-24 17:57:10,763 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@3b8d52a0 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 05:57:10, skipping insertion in model container
[2020-11-24 17:57:10,763 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 05:57:10" (4/4) ...
[2020-11-24 17:57:10,766 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-24 17:57:10,769 INFO  L110   BuchiProductObserver]: Initial RCFG 433 locations, 512 edges
[2020-11-24 17:57:10,769 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-24 17:57:10,778 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-24 17:57:11,564 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-24 17:57:11,566 INFO  L110   BuchiProductObserver]: BuchiProgram size 982 locations, 1656 edges
[2020-11-24 17:57:11,567 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 05:57:11 BoogieIcfgContainer
[2020-11-24 17:57:11,567 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-24 17:57:11,567 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-24 17:57:11,567 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-24 17:57:11,569 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-24 17:57:11,570 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 05:57:11" (1/1) ...
[2020-11-24 17:57:11,607 INFO  L313           BlockEncoder]: Initial Icfg 982 locations, 1656 edges
[2020-11-24 17:57:11,607 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-24 17:57:11,608 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-24 17:57:11,608 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-24 17:57:11,609 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-24 17:57:11,615 INFO  L70    emoveInfeasibleEdges]: Removed 27 edges and 7 locations because of local infeasibility
[2020-11-24 17:57:11,619 INFO  L70        RemoveSinkStates]: Removed 2 edges and 1 locations by removing sink states
[2020-11-24 17:57:11,624 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-24 17:57:11,626 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-24 17:57:11,627 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-24 17:57:11,628 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-24 17:57:11,630 INFO  L313           BlockEncoder]: Encoded RCFG 964 locations, 1613 edges
[2020-11-24 17:57:11,630 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 24.11 05:57:11 BasicIcfg
[2020-11-24 17:57:11,630 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-24 17:57:11,631 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-24 17:57:11,631 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-24 17:57:11,634 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-24 17:57:11,634 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 17:57:11,634 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "WXB_0x549ed593defa6ce92fb8e8ce08bec1a804ca1fbe_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 05:57:10" (1/6) ...
[2020-11-24 17:57:11,635 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@745750a7 and model type WXB_0x549ed593defa6ce92fb8e8ce08bec1a804ca1fbe_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 24.11 05:57:11, skipping insertion in model container
[2020-11-24 17:57:11,635 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 17:57:11,635 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 05:57:10" (2/6) ...
[2020-11-24 17:57:11,636 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@745750a7 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 24.11 05:57:11, skipping insertion in model container
[2020-11-24 17:57:11,636 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 17:57:11,636 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "WXB_0x549ed593defa6ce92fb8e8ce08bec1a804ca1fbe_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 05:57:10" (3/6) ...
[2020-11-24 17:57:11,636 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@745750a7 and model type WXB_0x549ed593defa6ce92fb8e8ce08bec1a804ca1fbe_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 24.11 05:57:11, skipping insertion in model container
[2020-11-24 17:57:11,636 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 17:57:11,636 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 05:57:10" (4/6) ...
[2020-11-24 17:57:11,636 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@745750a7 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 24.11 05:57:11, skipping insertion in model container
[2020-11-24 17:57:11,637 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 17:57:11,637 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 05:57:11" (5/6) ...
[2020-11-24 17:57:11,637 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@745750a7 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 24.11 05:57:11, skipping insertion in model container
[2020-11-24 17:57:11,637 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 17:57:11,637 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 24.11 05:57:11" (6/6) ...
[2020-11-24 17:57:11,638 INFO  L404   chiAutomizerObserver]: Analyzing ICFG WXB_0x549ed593defa6ce92fb8e8ce08bec1a804ca1fbe_transfer-normal.bpl_BEv2
[2020-11-24 17:57:11,676 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-24 17:57:11,677 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-24 17:57:11,677 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-24 17:57:11,677 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-24 17:57:11,677 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-24 17:57:11,677 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-24 17:57:11,677 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-24 17:57:11,677 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-24 17:57:11,677 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-24 17:57:11,692 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 964 states.
[2020-11-24 17:57:11,728 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 17:57:11,729 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 17:57:11,729 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 17:57:11,736 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 17:57:11,737 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
[2020-11-24 17:57:11,737 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-24 17:57:11,737 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 964 states.
[2020-11-24 17:57:11,744 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 17:57:11,744 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 17:57:11,744 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 17:57:11,745 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 17:57:11,746 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L3]                 success_transfer_WXB0 := false;
[L3]                 call_transfer_WXB0 := false;
[L3]     CALL        call main();
[L3]                 havoc p1;
[L1182]              assume null == 0;
[L1183]  CALL        call this := FreshRefGenerator__success();
[L551]               havoc newRef;
[L552]               assume Alloc[newRef] == false;
[L553]               Alloc[newRef] := true;
[L554]               assume newRef != null;
[L1183]  RET         call this := FreshRefGenerator__success();
[L1184]              assume now >= 0;
[L1185]              assume DType[this] == WXB;
[L1186]              assume !revert && gas >= 0;
[L1187]  CALL        call CorralChoice_WXB(this);
[L1106]              havoc msgsender_MSG;
[L1107]              havoc msgvalue_MSG;
[L1108]              havoc choice;
[L1109]              havoc _from_s315;
[L1110]              havoc _to_s315;
[L1111]              havoc _val_s315;
[L1112]              havoc __ret_0_transferFrom;
[L1113]              havoc _to_s213;
[L1114]              havoc _val_s213;
[L1115]              havoc __ret_0_transfer;
[L1116]              havoc _own_s139;
[L1117]              havoc __ret_0_balanceOf;
[L1118]              havoc _owner_s368;
[L1119]              havoc _spender_s368;
[L1120]              havoc __ret_0_allowance;
[L1121]              havoc _spender_s352;
[L1122]              havoc _val_s352;
[L1123]              havoc __ret_0_approve;
[L1124]              havoc __ret_0_totalSupply;
[L1125]              havoc __ret_0_decimals;
[L1126]              havoc __ret_0_symbol;
[L1127]              havoc __ret_0_name;
[L1128]              havoc tmpNow;
[L1129]              havoc gas;
[L1130]              assume gas > 4000000 && gas <= 8000000;
[L1131]              tmpNow := now;
[L1132]              havoc now;
[L1133]              assume now > tmpNow;
[L1134]              assume msgsender_MSG != null;
[L1135]  COND TRUE   choice == 6
[L1136]              gas := gas - 21000;
[L1137]  COND FALSE  !(gas >= 0)
[L1187]  RET         call CorralChoice_WXB(this);

Loop:
[L1187]        assume true;

[2020-11-24 17:57:11,761 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 17:57:11,761 INFO  L82        PathProgramCache]: Analyzing trace with hash 684935598, now seen corresponding path program 1 times
[2020-11-24 17:57:11,766 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 17:57:11,786 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 17:57:11,840 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 17:57:11,842 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 17:57:11,842 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [5] imperfect sequences [] total 5
[2020-11-24 17:57:11,846 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 17:57:11,859 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 5 interpolants.
[2020-11-24 17:57:11,860 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=9, Invalid=11, Unknown=0, NotChecked=0, Total=20
[2020-11-24 17:57:11,863 INFO  L87              Difference]: Start difference. First operand 964 states. Second operand 5 states.
[2020-11-24 17:57:12,090 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 17:57:12,091 INFO  L93              Difference]: Finished difference Result 466 states and 509 transitions.
[2020-11-24 17:57:12,091 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-24 17:57:12,092 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 466 states and 509 transitions.
[2020-11-24 17:57:12,096 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 17:57:12,101 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 466 states to 130 states and 135 transitions.
[2020-11-24 17:57:12,102 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 4
[2020-11-24 17:57:12,102 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 130
[2020-11-24 17:57:12,103 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 130 states and 135 transitions.
[2020-11-24 17:57:12,104 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 17:57:12,104 INFO  L728         BuchiCegarLoop]: Abstraction has 130 states and 135 transitions.
[2020-11-24 17:57:12,118 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 130 states and 135 transitions.
[2020-11-24 17:57:12,129 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 130 to 130.
[2020-11-24 17:57:12,129 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 130 states.
[2020-11-24 17:57:12,130 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 130 states to 130 states and 135 transitions.
[2020-11-24 17:57:12,131 INFO  L751         BuchiCegarLoop]: Abstraction has 130 states and 135 transitions.
[2020-11-24 17:57:12,131 INFO  L631         BuchiCegarLoop]: Abstraction has 130 states and 135 transitions.
[2020-11-24 17:57:12,131 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-24 17:57:12,131 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 130 states and 135 transitions.
[2020-11-24 17:57:12,132 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 17:57:12,132 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 17:57:12,132 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 17:57:12,133 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 17:57:12,133 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L3]                 success_transfer_WXB0 := false;
[L3]                 call_transfer_WXB0 := false;
[L3]     CALL        call main();
[L3]                 havoc p1;
[L1182]              assume null == 0;
[L1183]  CALL        call this := FreshRefGenerator__success();
[L551]               havoc newRef;
[L552]               assume Alloc[newRef] == false;
[L553]               Alloc[newRef] := true;
[L554]               assume newRef != null;
[L1183]  RET         call this := FreshRefGenerator__success();
[L1184]              assume now >= 0;
[L1185]              assume DType[this] == WXB;
[L1186]              assume !revert && gas >= 0;
[L1187]  CALL        call CorralChoice_WXB(this);
[L1106]              havoc msgsender_MSG;
[L1107]              havoc msgvalue_MSG;
[L1108]              havoc choice;
[L1109]              havoc _from_s315;
[L1110]              havoc _to_s315;
[L1111]              havoc _val_s315;
[L1112]              havoc __ret_0_transferFrom;
[L1113]              havoc _to_s213;
[L1114]              havoc _val_s213;
[L1115]              havoc __ret_0_transfer;
[L1116]              havoc _own_s139;
[L1117]              havoc __ret_0_balanceOf;
[L1118]              havoc _owner_s368;
[L1119]              havoc _spender_s368;
[L1120]              havoc __ret_0_allowance;
[L1121]              havoc _spender_s352;
[L1122]              havoc _val_s352;
[L1123]              havoc __ret_0_approve;
[L1124]              havoc __ret_0_totalSupply;
[L1125]              havoc __ret_0_decimals;
[L1126]              havoc __ret_0_symbol;
[L1127]              havoc __ret_0_name;
[L1128]              havoc tmpNow;
[L1129]              havoc gas;
[L1130]              assume gas > 4000000 && gas <= 8000000;
[L1131]              tmpNow := now;
[L1132]              havoc now;
[L1133]              assume now > tmpNow;
[L1134]              assume msgsender_MSG != null;
[L1135]  COND FALSE  !(choice == 6)
[L1142]  COND TRUE   choice == 5
[L1143]              gas := gas - 21000;
[L1144]  COND TRUE   gas >= 0
[L1145]              assume _val_s213 >= 0 && _val_s213 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1146]              assume msgvalue_MSG == 0;
[L1147]  CALL        call __ret_0_transfer := transfer~address~uint256_WXB(this, msgsender_MSG, msgvalue_MSG, _to_s213, _val_s213);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != _to_s213) && msgsender_MSG != _to_s213) && _val_s213 <= holders_WXB[this][msgsender_MSG]) && holders_WXB[this][_to_s213] + _val_s213 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _val_s213 >= 0) && _val_s213 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && holders_WXB[this][_to_s213] >= 0) && holders_WXB[this][_to_s213] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && holders_WXB[this][msgsender_MSG] >= 0) && holders_WXB[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_WXB0 := true;
[L3]                 call_transfer_WXB0 := false;
[L3]                 revert := revert_hold;
[L119]               havoc __exception;
[L120]               revert := false;
[L121]   COND FALSE  !(__exception)
[L142]   CALL        call __ret_0_ := transfer~address~uint256_WXB__success(this, msgsender_MSG, msgvalue_MSG, _to_s213, _val_s213);
[L591]   COND TRUE   !(holders_WXB[this][msgsender_MSG] >= _val_s213)
[L592]               revert := true;
[L142]   RET         call __ret_0_ := transfer~address~uint256_WXB__success(this, msgsender_MSG, msgvalue_MSG, _to_s213, _val_s213);
[L143]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !((((((((__ret_0_ == true && holders_WXB[this][msgsender_MSG] == old(holders_WXB[this][msgsender_MSG]) - _val_s213) && holders_WXB[this][_to_s213] == old(holders_WXB[this][_to_s213]) + _val_s213) && totalSupply_WXB[this] == old(totalSupply_WXB[this])) && approach_WXB[this] == old(approach_WXB[this])) && holders_WXB[this][p1] == old(holders_WXB[this][p1])) && decimals_WXB[this] == old(decimals_WXB[this])) && symbol_WXB[this] == old(symbol_WXB[this])) && name_WXB[this] == old(name_WXB[this]));
[L3]                 revert := revert_hold;
[L1147]  RET         call __ret_0_transfer := transfer~address~uint256_WXB(this, msgsender_MSG, msgvalue_MSG, _to_s213, _val_s213);
[L1187]  RET         call CorralChoice_WXB(this);

Loop:
[L1187]        assume true;

[2020-11-24 17:57:12,136 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 17:57:12,136 INFO  L82        PathProgramCache]: Analyzing trace with hash -1873634310, now seen corresponding path program 1 times
[2020-11-24 17:57:12,137 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 17:57:12,147 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 17:57:12,160 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 17:57:12,160 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 17:57:12,160 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-24 17:57:12,162 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 17:57:12,162 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-24 17:57:12,162 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-24 17:57:12,162 INFO  L87              Difference]: Start difference. First operand 130 states and 135 transitions. cyclomatic complexity: 6 Second operand 3 states.
[2020-11-24 17:57:12,166 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 17:57:12,166 INFO  L93              Difference]: Finished difference Result 145 states and 149 transitions.
[2020-11-24 17:57:12,166 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-24 17:57:12,167 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 145 states and 149 transitions.
[2020-11-24 17:57:12,168 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 2
[2020-11-24 17:57:12,169 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 145 states to 139 states and 142 transitions.
[2020-11-24 17:57:12,169 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 139
[2020-11-24 17:57:12,169 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 139
[2020-11-24 17:57:12,169 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 139 states and 142 transitions.
[2020-11-24 17:57:12,170 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 17:57:12,170 INFO  L728         BuchiCegarLoop]: Abstraction has 139 states and 142 transitions.
[2020-11-24 17:57:12,170 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 139 states and 142 transitions.
[2020-11-24 17:57:12,173 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 139 to 128.
[2020-11-24 17:57:12,174 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 128 states.
[2020-11-24 17:57:12,174 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 128 states to 128 states and 131 transitions.
[2020-11-24 17:57:12,174 INFO  L751         BuchiCegarLoop]: Abstraction has 128 states and 131 transitions.
[2020-11-24 17:57:12,174 INFO  L631         BuchiCegarLoop]: Abstraction has 128 states and 131 transitions.
[2020-11-24 17:57:12,174 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-24 17:57:12,174 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 128 states and 131 transitions.
[2020-11-24 17:57:12,175 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 17:57:12,175 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 17:57:12,175 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 17:57:12,176 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 17:57:12,176 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L3]                 success_transfer_WXB0 := false;
[L3]                 call_transfer_WXB0 := false;
[L3]     CALL        call main();
[L3]                 havoc p1;
[L1182]              assume null == 0;
[L1183]  CALL        call this := FreshRefGenerator__success();
[L551]               havoc newRef;
[L552]               assume Alloc[newRef] == false;
[L553]               Alloc[newRef] := true;
[L554]               assume newRef != null;
[L1183]  RET         call this := FreshRefGenerator__success();
[L1184]              assume now >= 0;
[L1185]              assume DType[this] == WXB;
[L1186]              assume !revert && gas >= 0;
[L1187]  CALL        call CorralChoice_WXB(this);
[L1106]              havoc msgsender_MSG;
[L1107]              havoc msgvalue_MSG;
[L1108]              havoc choice;
[L1109]              havoc _from_s315;
[L1110]              havoc _to_s315;
[L1111]              havoc _val_s315;
[L1112]              havoc __ret_0_transferFrom;
[L1113]              havoc _to_s213;
[L1114]              havoc _val_s213;
[L1115]              havoc __ret_0_transfer;
[L1116]              havoc _own_s139;
[L1117]              havoc __ret_0_balanceOf;
[L1118]              havoc _owner_s368;
[L1119]              havoc _spender_s368;
[L1120]              havoc __ret_0_allowance;
[L1121]              havoc _spender_s352;
[L1122]              havoc _val_s352;
[L1123]              havoc __ret_0_approve;
[L1124]              havoc __ret_0_totalSupply;
[L1125]              havoc __ret_0_decimals;
[L1126]              havoc __ret_0_symbol;
[L1127]              havoc __ret_0_name;
[L1128]              havoc tmpNow;
[L1129]              havoc gas;
[L1130]              assume gas > 4000000 && gas <= 8000000;
[L1131]              tmpNow := now;
[L1132]              havoc now;
[L1133]              assume now > tmpNow;
[L1134]              assume msgsender_MSG != null;
[L1135]  COND FALSE  !(choice == 6)
[L1142]  COND TRUE   choice == 5
[L1143]              gas := gas - 21000;
[L1144]  COND TRUE   gas >= 0
[L1145]              assume _val_s213 >= 0 && _val_s213 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1146]              assume msgvalue_MSG == 0;
[L1147]  CALL        call __ret_0_transfer := transfer~address~uint256_WXB(this, msgsender_MSG, msgvalue_MSG, _to_s213, _val_s213);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != _to_s213) && msgsender_MSG != _to_s213) && _val_s213 <= holders_WXB[this][msgsender_MSG]) && holders_WXB[this][_to_s213] + _val_s213 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _val_s213 >= 0) && _val_s213 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && holders_WXB[this][_to_s213] >= 0) && holders_WXB[this][_to_s213] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && holders_WXB[this][msgsender_MSG] >= 0) && holders_WXB[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_WXB0 := true;
[L3]                 call_transfer_WXB0 := false;
[L3]                 revert := revert_hold;
[L119]               havoc __exception;
[L120]               revert := false;
[L121]   COND FALSE  !(__exception)
[L142]   CALL        call __ret_0_ := transfer~address~uint256_WXB__success(this, msgsender_MSG, msgvalue_MSG, _to_s213, _val_s213);
[L591]   COND FALSE  !(!(holders_WXB[this][msgsender_MSG] >= _val_s213))
[L595]   COND FALSE  !(!(msgsender_MSG != _to_s213))
[L599]               assert _val_s213 <= holders_WXB[this][msgsender_MSG];
[L600]               sum_holders1[this] := sum_holders1[this] - holders_WXB[this][msgsender_MSG];
[L601]               holders_WXB[this][msgsender_MSG] := (holders_WXB[this][msgsender_MSG] - _val_s213) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L602]               sum_holders1[this] := sum_holders1[this] + holders_WXB[this][msgsender_MSG];
[L603]               sum_holders1[this] := sum_holders1[this] - holders_WXB[this][_to_s213];
[L604]               holders_WXB[this][_to_s213] := (holders_WXB[this][_to_s213] + _val_s213) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L605]               sum_holders1[this] := sum_holders1[this] + holders_WXB[this][_to_s213];
[L606]               assert holders_WXB[this][_to_s213] >= _val_s213;
[L607]               assert { :EventEmitted "Transfer_WXB" } true;
[L608]               __ret_0_ := true;
[L142]   RET         call __ret_0_ := transfer~address~uint256_WXB__success(this, msgsender_MSG, msgvalue_MSG, _to_s213, _val_s213);
[L143]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !((((((((__ret_0_ == true && holders_WXB[this][msgsender_MSG] == old(holders_WXB[this][msgsender_MSG]) - _val_s213) && holders_WXB[this][_to_s213] == old(holders_WXB[this][_to_s213]) + _val_s213) && totalSupply_WXB[this] == old(totalSupply_WXB[this])) && approach_WXB[this] == old(approach_WXB[this])) && holders_WXB[this][p1] == old(holders_WXB[this][p1])) && decimals_WXB[this] == old(decimals_WXB[this])) && symbol_WXB[this] == old(symbol_WXB[this])) && name_WXB[this] == old(name_WXB[this]));
[L3]                 revert := revert_hold;
[L1147]  RET         call __ret_0_transfer := transfer~address~uint256_WXB(this, msgsender_MSG, msgvalue_MSG, _to_s213, _val_s213);
[L1187]  RET         call CorralChoice_WXB(this);

Loop:
[L1187]        assume true;

[2020-11-24 17:57:12,178 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 17:57:12,178 INFO  L82        PathProgramCache]: Analyzing trace with hash 2131257653, now seen corresponding path program 1 times
[2020-11-24 17:57:12,179 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 17:57:12,223 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 17:57:12,478 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 17:57:12,478 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 17:57:12,478 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [9] imperfect sequences [] total 9
[2020-11-24 17:57:12,479 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 17:57:12,479 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 9 interpolants.
[2020-11-24 17:57:12,479 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=17, Invalid=55, Unknown=0, NotChecked=0, Total=72
[2020-11-24 17:57:12,479 INFO  L87              Difference]: Start difference. First operand 128 states and 131 transitions. cyclomatic complexity: 4 Second operand 9 states.
[2020-11-24 17:57:12,711 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 17:57:12,712 INFO  L93              Difference]: Finished difference Result 127 states and 129 transitions.
[2020-11-24 17:57:12,712 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 9 states. 
[2020-11-24 17:57:12,712 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 127 states and 129 transitions.
[2020-11-24 17:57:12,713 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 17:57:12,714 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 127 states to 106 states and 108 transitions.
[2020-11-24 17:57:12,714 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 106
[2020-11-24 17:57:12,714 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 106
[2020-11-24 17:57:12,714 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 106 states and 108 transitions.
[2020-11-24 17:57:12,715 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 17:57:12,715 INFO  L728         BuchiCegarLoop]: Abstraction has 106 states and 108 transitions.
[2020-11-24 17:57:12,715 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 106 states and 108 transitions.
[2020-11-24 17:57:12,717 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 106 to 106.
[2020-11-24 17:57:12,717 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 106 states.
[2020-11-24 17:57:12,717 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 106 states to 106 states and 108 transitions.
[2020-11-24 17:57:12,718 INFO  L751         BuchiCegarLoop]: Abstraction has 106 states and 108 transitions.
[2020-11-24 17:57:12,718 INFO  L631         BuchiCegarLoop]: Abstraction has 106 states and 108 transitions.
[2020-11-24 17:57:12,718 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-24 17:57:12,718 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 106 states and 108 transitions.
[2020-11-24 17:57:12,718 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 17:57:12,718 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 17:57:12,718 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 17:57:12,719 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 17:57:12,719 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L3]                 success_transfer_WXB0 := false;
[L3]                 call_transfer_WXB0 := false;
[L3]     CALL        call main();
[L3]                 havoc p1;
[L1182]              assume null == 0;
[L1183]  CALL        call this := FreshRefGenerator__success();
[L551]               havoc newRef;
[L552]               assume Alloc[newRef] == false;
[L553]               Alloc[newRef] := true;
[L554]               assume newRef != null;
[L1183]  RET         call this := FreshRefGenerator__success();
[L1184]              assume now >= 0;
[L1185]              assume DType[this] == WXB;
[L1186]              assume !revert && gas >= 0;
[L1187]  CALL        call CorralChoice_WXB(this);
[L1106]              havoc msgsender_MSG;
[L1107]              havoc msgvalue_MSG;
[L1108]              havoc choice;
[L1109]              havoc _from_s315;
[L1110]              havoc _to_s315;
[L1111]              havoc _val_s315;
[L1112]              havoc __ret_0_transferFrom;
[L1113]              havoc _to_s213;
[L1114]              havoc _val_s213;
[L1115]              havoc __ret_0_transfer;
[L1116]              havoc _own_s139;
[L1117]              havoc __ret_0_balanceOf;
[L1118]              havoc _owner_s368;
[L1119]              havoc _spender_s368;
[L1120]              havoc __ret_0_allowance;
[L1121]              havoc _spender_s352;
[L1122]              havoc _val_s352;
[L1123]              havoc __ret_0_approve;
[L1124]              havoc __ret_0_totalSupply;
[L1125]              havoc __ret_0_decimals;
[L1126]              havoc __ret_0_symbol;
[L1127]              havoc __ret_0_name;
[L1128]              havoc tmpNow;
[L1129]              havoc gas;
[L1130]              assume gas > 4000000 && gas <= 8000000;
[L1131]              tmpNow := now;
[L1132]              havoc now;
[L1133]              assume now > tmpNow;
[L1134]              assume msgsender_MSG != null;
[L1135]  COND FALSE  !(choice == 6)
[L1142]  COND TRUE   choice == 5
[L1143]              gas := gas - 21000;
[L1144]  COND TRUE   gas >= 0
[L1145]              assume _val_s213 >= 0 && _val_s213 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1146]              assume msgvalue_MSG == 0;
[L1147]  CALL        call __ret_0_transfer := transfer~address~uint256_WXB(this, msgsender_MSG, msgvalue_MSG, _to_s213, _val_s213);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != _to_s213) && msgsender_MSG != _to_s213) && _val_s213 <= holders_WXB[this][msgsender_MSG]) && holders_WXB[this][_to_s213] + _val_s213 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _val_s213 >= 0) && _val_s213 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && holders_WXB[this][_to_s213] >= 0) && holders_WXB[this][_to_s213] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && holders_WXB[this][msgsender_MSG] >= 0) && holders_WXB[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_WXB0 := true;
[L3]                 call_transfer_WXB0 := false;
[L3]                 revert := revert_hold;
[L119]               havoc __exception;
[L120]               revert := false;
[L121]   COND TRUE   __exception
[L122]               __tmp__Balance := Balance;
[L123]               __tmp__DType := DType;
[L124]               __tmp__Alloc := Alloc;
[L125]               __tmp__balance_ADDR := balance_ADDR;
[L126]               __tmp__M_Ref_int := M_Ref_int;
[L127]               __tmp__alloc_approach_WXB_lvl0 := alloc_approach_WXB_lvl0;
[L128]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L129]               __tmp__sum_approach0 := sum_approach0;
[L130]               __tmp__sum_holders1 := sum_holders1;
[L131]               __tmp__Length := Length;
[L132]               __tmp__now := now;
[L133]               __tmp__totalSupply_WXB := totalSupply_WXB;
[L134]               __tmp__decimals_WXB := decimals_WXB;
[L135]               __tmp__symbol_WXB := symbol_WXB;
[L136]               __tmp__name_WXB := name_WXB;
[L137]               __tmp__approach_WXB := approach_WXB;
[L138]               __tmp__holders_WXB := holders_WXB;
[L139]   CALL        call __ret_0_ := transfer~address~uint256_WXB__fail(this, msgsender_MSG, msgvalue_MSG, _to_s213, _val_s213);
[L571]   COND TRUE   !(__tmp__holders_WXB[this][msgsender_MSG] >= _val_s213)
[L572]               revert := true;
[L139]   RET         call __ret_0_ := transfer~address~uint256_WXB__fail(this, msgsender_MSG, msgvalue_MSG, _to_s213, _val_s213);
[L140]               assume revert || gas < 0;
[L1147]  RET         call __ret_0_transfer := transfer~address~uint256_WXB(this, msgsender_MSG, msgvalue_MSG, _to_s213, _val_s213);
[L1187]  RET         call CorralChoice_WXB(this);

Loop:
[L1187]        assume true;

[2020-11-24 17:57:12,721 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 17:57:12,721 INFO  L82        PathProgramCache]: Analyzing trace with hash -2107399651, now seen corresponding path program 1 times
[2020-11-24 17:57:12,722 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 17:57:12,729 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 17:57:12,752 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 17:57:12,752 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 17:57:12,752 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [6] imperfect sequences [] total 6
[2020-11-24 17:57:12,752 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 17:57:12,753 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 6 interpolants.
[2020-11-24 17:57:12,753 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=9, Invalid=21, Unknown=0, NotChecked=0, Total=30
[2020-11-24 17:57:12,753 INFO  L87              Difference]: Start difference. First operand 106 states and 108 transitions. cyclomatic complexity: 3 Second operand 6 states.
[2020-11-24 17:57:12,780 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 17:57:12,781 INFO  L93              Difference]: Finished difference Result 114 states and 115 transitions.
[2020-11-24 17:57:12,781 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 7 states. 
[2020-11-24 17:57:12,781 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 114 states and 115 transitions.
[2020-11-24 17:57:12,782 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 17:57:12,783 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 114 states to 111 states and 112 transitions.
[2020-11-24 17:57:12,783 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 111
[2020-11-24 17:57:12,783 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 111
[2020-11-24 17:57:12,783 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 111 states and 112 transitions.
[2020-11-24 17:57:12,783 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 17:57:12,783 INFO  L728         BuchiCegarLoop]: Abstraction has 111 states and 112 transitions.
[2020-11-24 17:57:12,784 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 111 states and 112 transitions.
[2020-11-24 17:57:12,786 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 111 to 105.
[2020-11-24 17:57:12,786 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 105 states.
[2020-11-24 17:57:12,786 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 105 states to 105 states and 106 transitions.
[2020-11-24 17:57:12,787 INFO  L751         BuchiCegarLoop]: Abstraction has 105 states and 106 transitions.
[2020-11-24 17:57:12,787 INFO  L631         BuchiCegarLoop]: Abstraction has 105 states and 106 transitions.
[2020-11-24 17:57:12,787 INFO  L445         BuchiCegarLoop]: ======== Iteration 5============
[2020-11-24 17:57:12,787 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 105 states and 106 transitions.
[2020-11-24 17:57:12,787 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 17:57:12,787 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 17:57:12,787 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 17:57:12,788 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 17:57:12,788 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L3]                 success_transfer_WXB0 := false;
[L3]                 call_transfer_WXB0 := false;
[L3]     CALL        call main();
[L3]                 havoc p1;
[L1182]              assume null == 0;
[L1183]  CALL        call this := FreshRefGenerator__success();
[L551]               havoc newRef;
[L552]               assume Alloc[newRef] == false;
[L553]               Alloc[newRef] := true;
[L554]               assume newRef != null;
[L1183]  RET         call this := FreshRefGenerator__success();
[L1184]              assume now >= 0;
[L1185]              assume DType[this] == WXB;
[L1186]              assume !revert && gas >= 0;
[L1187]  CALL        call CorralChoice_WXB(this);
[L1106]              havoc msgsender_MSG;
[L1107]              havoc msgvalue_MSG;
[L1108]              havoc choice;
[L1109]              havoc _from_s315;
[L1110]              havoc _to_s315;
[L1111]              havoc _val_s315;
[L1112]              havoc __ret_0_transferFrom;
[L1113]              havoc _to_s213;
[L1114]              havoc _val_s213;
[L1115]              havoc __ret_0_transfer;
[L1116]              havoc _own_s139;
[L1117]              havoc __ret_0_balanceOf;
[L1118]              havoc _owner_s368;
[L1119]              havoc _spender_s368;
[L1120]              havoc __ret_0_allowance;
[L1121]              havoc _spender_s352;
[L1122]              havoc _val_s352;
[L1123]              havoc __ret_0_approve;
[L1124]              havoc __ret_0_totalSupply;
[L1125]              havoc __ret_0_decimals;
[L1126]              havoc __ret_0_symbol;
[L1127]              havoc __ret_0_name;
[L1128]              havoc tmpNow;
[L1129]              havoc gas;
[L1130]              assume gas > 4000000 && gas <= 8000000;
[L1131]              tmpNow := now;
[L1132]              havoc now;
[L1133]              assume now > tmpNow;
[L1134]              assume msgsender_MSG != null;
[L1135]  COND FALSE  !(choice == 6)
[L1142]  COND TRUE   choice == 5
[L1143]              gas := gas - 21000;
[L1144]  COND TRUE   gas >= 0
[L1145]              assume _val_s213 >= 0 && _val_s213 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1146]              assume msgvalue_MSG == 0;
[L1147]  CALL        call __ret_0_transfer := transfer~address~uint256_WXB(this, msgsender_MSG, msgvalue_MSG, _to_s213, _val_s213);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != _to_s213) && msgsender_MSG != _to_s213) && _val_s213 <= holders_WXB[this][msgsender_MSG]) && holders_WXB[this][_to_s213] + _val_s213 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _val_s213 >= 0) && _val_s213 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && holders_WXB[this][_to_s213] >= 0) && holders_WXB[this][_to_s213] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && holders_WXB[this][msgsender_MSG] >= 0) && holders_WXB[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_WXB0 := true;
[L3]                 call_transfer_WXB0 := false;
[L3]                 revert := revert_hold;
[L119]               havoc __exception;
[L120]               revert := false;
[L121]   COND TRUE   __exception
[L122]               __tmp__Balance := Balance;
[L123]               __tmp__DType := DType;
[L124]               __tmp__Alloc := Alloc;
[L125]               __tmp__balance_ADDR := balance_ADDR;
[L126]               __tmp__M_Ref_int := M_Ref_int;
[L127]               __tmp__alloc_approach_WXB_lvl0 := alloc_approach_WXB_lvl0;
[L128]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L129]               __tmp__sum_approach0 := sum_approach0;
[L130]               __tmp__sum_holders1 := sum_holders1;
[L131]               __tmp__Length := Length;
[L132]               __tmp__now := now;
[L133]               __tmp__totalSupply_WXB := totalSupply_WXB;
[L134]               __tmp__decimals_WXB := decimals_WXB;
[L135]               __tmp__symbol_WXB := symbol_WXB;
[L136]               __tmp__name_WXB := name_WXB;
[L137]               __tmp__approach_WXB := approach_WXB;
[L138]               __tmp__holders_WXB := holders_WXB;
[L139]   CALL        call __ret_0_ := transfer~address~uint256_WXB__fail(this, msgsender_MSG, msgvalue_MSG, _to_s213, _val_s213);
[L571]   COND FALSE  !(!(__tmp__holders_WXB[this][msgsender_MSG] >= _val_s213))
[L575]   COND TRUE   !(msgsender_MSG != _to_s213)
[L576]               revert := true;
[L139]   RET         call __ret_0_ := transfer~address~uint256_WXB__fail(this, msgsender_MSG, msgvalue_MSG, _to_s213, _val_s213);
[L140]               assume revert || gas < 0;
[L1147]  RET         call __ret_0_transfer := transfer~address~uint256_WXB(this, msgsender_MSG, msgvalue_MSG, _to_s213, _val_s213);
[L1187]  RET         call CorralChoice_WXB(this);

Loop:
[L1187]        assume true;

[2020-11-24 17:57:12,790 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 17:57:12,790 INFO  L82        PathProgramCache]: Analyzing trace with hash -1901592466, now seen corresponding path program 1 times
[2020-11-24 17:57:12,791 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 17:57:12,797 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 17:57:12,812 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 17:57:12,812 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 17:57:12,812 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-24 17:57:12,813 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 17:57:12,813 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-24 17:57:12,813 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-24 17:57:12,813 INFO  L87              Difference]: Start difference. First operand 105 states and 106 transitions. cyclomatic complexity: 2 Second operand 4 states.
[2020-11-24 17:57:12,819 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 17:57:12,819 INFO  L93              Difference]: Finished difference Result 107 states and 107 transitions.
[2020-11-24 17:57:12,819 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-24 17:57:12,819 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 107 states and 107 transitions.
[2020-11-24 17:57:12,820 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 17:57:12,821 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 107 states to 104 states and 104 transitions.
[2020-11-24 17:57:12,821 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 104
[2020-11-24 17:57:12,821 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 104
[2020-11-24 17:57:12,821 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 104 states and 104 transitions.
[2020-11-24 17:57:12,821 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 17:57:12,821 INFO  L728         BuchiCegarLoop]: Abstraction has 104 states and 104 transitions.
[2020-11-24 17:57:12,822 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 104 states and 104 transitions.
[2020-11-24 17:57:12,824 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 104 to 104.
[2020-11-24 17:57:12,824 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 104 states.
[2020-11-24 17:57:12,824 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 104 states to 104 states and 104 transitions.
[2020-11-24 17:57:12,824 INFO  L751         BuchiCegarLoop]: Abstraction has 104 states and 104 transitions.
[2020-11-24 17:57:12,824 INFO  L631         BuchiCegarLoop]: Abstraction has 104 states and 104 transitions.
[2020-11-24 17:57:12,824 INFO  L445         BuchiCegarLoop]: ======== Iteration 6============
[2020-11-24 17:57:12,825 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 104 states and 104 transitions.
[2020-11-24 17:57:12,825 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 17:57:12,825 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 17:57:12,825 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 17:57:12,826 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 17:57:12,826 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L3]                 success_transfer_WXB0 := false;
[L3]                 call_transfer_WXB0 := false;
[L3]     CALL        call main();
[L3]                 havoc p1;
[L1182]              assume null == 0;
[L1183]  CALL        call this := FreshRefGenerator__success();
[L551]               havoc newRef;
[L552]               assume Alloc[newRef] == false;
[L553]               Alloc[newRef] := true;
[L554]               assume newRef != null;
[L1183]  RET         call this := FreshRefGenerator__success();
[L1184]              assume now >= 0;
[L1185]              assume DType[this] == WXB;
[L1186]              assume !revert && gas >= 0;
[L1187]  CALL        call CorralChoice_WXB(this);
[L1106]              havoc msgsender_MSG;
[L1107]              havoc msgvalue_MSG;
[L1108]              havoc choice;
[L1109]              havoc _from_s315;
[L1110]              havoc _to_s315;
[L1111]              havoc _val_s315;
[L1112]              havoc __ret_0_transferFrom;
[L1113]              havoc _to_s213;
[L1114]              havoc _val_s213;
[L1115]              havoc __ret_0_transfer;
[L1116]              havoc _own_s139;
[L1117]              havoc __ret_0_balanceOf;
[L1118]              havoc _owner_s368;
[L1119]              havoc _spender_s368;
[L1120]              havoc __ret_0_allowance;
[L1121]              havoc _spender_s352;
[L1122]              havoc _val_s352;
[L1123]              havoc __ret_0_approve;
[L1124]              havoc __ret_0_totalSupply;
[L1125]              havoc __ret_0_decimals;
[L1126]              havoc __ret_0_symbol;
[L1127]              havoc __ret_0_name;
[L1128]              havoc tmpNow;
[L1129]              havoc gas;
[L1130]              assume gas > 4000000 && gas <= 8000000;
[L1131]              tmpNow := now;
[L1132]              havoc now;
[L1133]              assume now > tmpNow;
[L1134]              assume msgsender_MSG != null;
[L1135]  COND FALSE  !(choice == 6)
[L1142]  COND TRUE   choice == 5
[L1143]              gas := gas - 21000;
[L1144]  COND TRUE   gas >= 0
[L1145]              assume _val_s213 >= 0 && _val_s213 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1146]              assume msgvalue_MSG == 0;
[L1147]  CALL        call __ret_0_transfer := transfer~address~uint256_WXB(this, msgsender_MSG, msgvalue_MSG, _to_s213, _val_s213);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != _to_s213) && msgsender_MSG != _to_s213) && _val_s213 <= holders_WXB[this][msgsender_MSG]) && holders_WXB[this][_to_s213] + _val_s213 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _val_s213 >= 0) && _val_s213 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && holders_WXB[this][_to_s213] >= 0) && holders_WXB[this][_to_s213] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && holders_WXB[this][msgsender_MSG] >= 0) && holders_WXB[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_WXB0 := true;
[L3]                 call_transfer_WXB0 := false;
[L3]                 revert := revert_hold;
[L119]               havoc __exception;
[L120]               revert := false;
[L121]   COND TRUE   __exception
[L122]               __tmp__Balance := Balance;
[L123]               __tmp__DType := DType;
[L124]               __tmp__Alloc := Alloc;
[L125]               __tmp__balance_ADDR := balance_ADDR;
[L126]               __tmp__M_Ref_int := M_Ref_int;
[L127]               __tmp__alloc_approach_WXB_lvl0 := alloc_approach_WXB_lvl0;
[L128]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L129]               __tmp__sum_approach0 := sum_approach0;
[L130]               __tmp__sum_holders1 := sum_holders1;
[L131]               __tmp__Length := Length;
[L132]               __tmp__now := now;
[L133]               __tmp__totalSupply_WXB := totalSupply_WXB;
[L134]               __tmp__decimals_WXB := decimals_WXB;
[L135]               __tmp__symbol_WXB := symbol_WXB;
[L136]               __tmp__name_WXB := name_WXB;
[L137]               __tmp__approach_WXB := approach_WXB;
[L138]               __tmp__holders_WXB := holders_WXB;
[L139]   CALL        call __ret_0_ := transfer~address~uint256_WXB__fail(this, msgsender_MSG, msgvalue_MSG, _to_s213, _val_s213);
[L571]   COND FALSE  !(!(__tmp__holders_WXB[this][msgsender_MSG] >= _val_s213))
[L575]   COND FALSE  !(!(msgsender_MSG != _to_s213))
[L579]               __tmp__sum_holders1[this] := __tmp__sum_holders1[this] - __tmp__holders_WXB[this][msgsender_MSG];
[L580]               __tmp__holders_WXB[this][msgsender_MSG] := (__tmp__holders_WXB[this][msgsender_MSG] - _val_s213) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L581]               __tmp__sum_holders1[this] := __tmp__sum_holders1[this] + __tmp__holders_WXB[this][msgsender_MSG];
[L582]               __tmp__sum_holders1[this] := __tmp__sum_holders1[this] - __tmp__holders_WXB[this][_to_s213];
[L583]               __tmp__holders_WXB[this][_to_s213] := (__tmp__holders_WXB[this][_to_s213] + _val_s213) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L584]               __tmp__sum_holders1[this] := __tmp__sum_holders1[this] + __tmp__holders_WXB[this][_to_s213];
[L585]               __ret_0_ := true;
[L139]   RET         call __ret_0_ := transfer~address~uint256_WXB__fail(this, msgsender_MSG, msgvalue_MSG, _to_s213, _val_s213);
[L140]               assume revert || gas < 0;
[L1147]  RET         call __ret_0_transfer := transfer~address~uint256_WXB(this, msgsender_MSG, msgvalue_MSG, _to_s213, _val_s213);
[L1187]  RET         call CorralChoice_WXB(this);

Loop:
[L1187]        assume true;

[2020-11-24 17:57:12,828 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 17:57:12,828 INFO  L82        PathProgramCache]: Analyzing trace with hash -2095300145, now seen corresponding path program 1 times
[2020-11-24 17:57:12,829 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 17:57:12,837 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 17:57:12,861 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 17:57:12,862 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 17:57:12,862 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [6] imperfect sequences [] total 6
[2020-11-24 17:57:12,862 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 17:57:12,862 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 6 interpolants.
[2020-11-24 17:57:12,863 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=10, Invalid=20, Unknown=0, NotChecked=0, Total=30
[2020-11-24 17:57:12,863 INFO  L87              Difference]: Start difference. First operand 104 states and 104 transitions. cyclomatic complexity: 1 Second operand 6 states.
[2020-11-24 17:57:12,874 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 17:57:12,874 INFO  L93              Difference]: Finished difference Result 97 states and 96 transitions.
[2020-11-24 17:57:12,874 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 6 states. 
[2020-11-24 17:57:12,874 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 97 states and 96 transitions.
[2020-11-24 17:57:12,875 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-24 17:57:12,875 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 97 states to 0 states and 0 transitions.
[2020-11-24 17:57:12,875 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 0
[2020-11-24 17:57:12,875 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 0
[2020-11-24 17:57:12,876 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 0 states and 0 transitions.
[2020-11-24 17:57:12,876 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 17:57:12,876 INFO  L728         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-24 17:57:12,876 INFO  L751         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-24 17:57:12,876 INFO  L631         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-24 17:57:12,876 INFO  L445         BuchiCegarLoop]: ======== Iteration 7============
[2020-11-24 17:57:12,876 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 0 states and 0 transitions.
[2020-11-24 17:57:12,876 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-24 17:57:12,876 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is true
[2020-11-24 17:57:12,880 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 24.11 05:57:12 BasicIcfg
[2020-11-24 17:57:12,880 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-24 17:57:12,881 INFO  L168              Benchmark]: Toolchain (without parser) took 2744.01 ms. Allocated memory was 1.0 GB in the beginning and 1.2 GB in the end (delta: 217.1 MB). Free memory was 945.9 MB in the beginning and 893.7 MB in the end (delta: 52.3 MB). Peak memory consumption was 269.3 MB. Max. memory is 15.3 GB.
[2020-11-24 17:57:12,882 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.24 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-24 17:57:12,882 INFO  L168              Benchmark]: Boogie Preprocessor took 66.87 ms. Allocated memory is still 1.0 GB. Free memory was 945.9 MB in the beginning and 940.6 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-24 17:57:12,882 INFO  L168              Benchmark]: UtopiaSpecLang took 47.34 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 935.2 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-24 17:57:12,883 INFO  L168              Benchmark]: Boogie Printer took 8.11 ms. Allocated memory is still 1.0 GB. Free memory is still 935.2 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-24 17:57:12,883 INFO  L168              Benchmark]: RCFGBuilder took 460.61 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 897.6 MB in the end (delta: 37.6 MB). Peak memory consumption was 37.6 MB. Max. memory is 15.3 GB.
[2020-11-24 17:57:12,883 INFO  L168              Benchmark]: UtopiaLTL2Aut took 38.98 ms. Allocated memory is still 1.0 GB. Free memory was 897.6 MB in the beginning and 894.0 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
[2020-11-24 17:57:12,883 INFO  L168              Benchmark]: BÃ¼chi Program Product took 806.09 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 58.7 MB). Free memory was 894.0 MB in the beginning and 1.0 GB in the end (delta: -143.0 MB). Peak memory consumption was 174.5 MB. Max. memory is 15.3 GB.
[2020-11-24 17:57:12,884 INFO  L168              Benchmark]: BlockEncodingV2 took 63.45 ms. Allocated memory is still 1.1 GB. Free memory was 1.0 GB in the beginning and 1.0 GB in the end (delta: 26.4 MB). Peak memory consumption was 26.4 MB. Max. memory is 15.3 GB.
[2020-11-24 17:57:12,884 INFO  L168              Benchmark]: BuchiAutomizer took 1249.64 ms. Allocated memory was 1.1 GB in the beginning and 1.2 GB in the end (delta: 158.3 MB). Free memory was 1.0 GB in the beginning and 893.7 MB in the end (delta: 116.9 MB). Peak memory consumption was 275.2 MB. Max. memory is 15.3 GB.
[2020-11-24 17:57:12,886 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    982 locations, 1656 edges
  - StatisticsResult: Encoded RCFG
    964 locations, 1613 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.24 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 66.87 ms. Allocated memory is still 1.0 GB. Free memory was 945.9 MB in the beginning and 940.6 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 47.34 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 935.2 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 8.11 ms. Allocated memory is still 1.0 GB. Free memory is still 935.2 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * RCFGBuilder took 460.61 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 897.6 MB in the end (delta: 37.6 MB). Peak memory consumption was 37.6 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 38.98 ms. Allocated memory is still 1.0 GB. Free memory was 897.6 MB in the beginning and 894.0 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 806.09 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 58.7 MB). Free memory was 894.0 MB in the beginning and 1.0 GB in the end (delta: -143.0 MB). Peak memory consumption was 174.5 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 63.45 ms. Allocated memory is still 1.1 GB. Free memory was 1.0 GB in the beginning and 1.0 GB in the end (delta: 26.4 MB). Peak memory consumption was 26.4 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 1249.64 ms. Allocated memory was 1.1 GB in the beginning and 1.2 GB in the end (delta: 158.3 MB). Free memory was 1.0 GB in the beginning and 893.7 MB in the end (delta: 116.9 MB). Peak memory consumption was 275.2 MB. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    433 locations, 512 edges
  - StatisticsResult: BuchiProgram size
    982 locations, 1656 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 6 terminating modules (6 trivial, 0 deterministic, 0 nondeterministic). 6 modules have a trivial ranking function, the largest among these consists of 9 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 1.2s and 7 iterations.  TraceHistogramMax:1. Analysis of lassos took 0.5s. Construction of modules took 0.2s. BÃ¼chi inclusion checks took 0.2s. Highest rank in rank-based complementation 0. Minimization of det autom 6. Minimization of nondet autom 0. Automata minimization 0.0s AutomataMinimizationTime, 5 MinimizatonAttempts, 17 StatesRemovedByMinimization, 2 NontrivialMinimizations. Non-live state removal took 0.0s Buchi closure took 0.0s. Biggest automaton had 130 states and ocurred in iteration 1.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 1060 SDtfs, 879 SDslu, 1211 SDs, 0 SdLazy, 693 SolverSat, 402 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 0.2s Time	LassoAnalysisResults: nont0 unkn0 SFLI0 SFLT0 conc0 concLT0 SILN0 SILU6 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - AllSpecificationsHoldResult: All specifications hold
    Buchi Automizer proved that the LTL property ! ( ( []( (call_transfer_WX(success_transfer_WXB0)0) ==> ( <>(success_transfer_WXB0) ) ) )) holds
RESULT: Ultimate proved your program to be correct!
Received shutdown request...
