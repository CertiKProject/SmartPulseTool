This is Ultimate 0.1.24-f1553f5-m
[2020-11-24 19:36:17,567 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-24 19:36:17,568 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-24 19:36:17,582 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-24 19:36:17,582 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-24 19:36:17,583 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-24 19:36:17,584 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-24 19:36:17,586 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-24 19:36:17,587 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-24 19:36:17,589 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-24 19:36:17,590 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-24 19:36:17,590 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-24 19:36:17,591 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-24 19:36:17,592 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-24 19:36:17,593 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-24 19:36:17,594 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-24 19:36:17,594 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-24 19:36:17,596 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-24 19:36:17,597 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-24 19:36:17,599 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-24 19:36:17,600 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-24 19:36:17,600 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-24 19:36:17,602 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-24 19:36:17,603 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-24 19:36:17,603 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-24 19:36:17,603 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-24 19:36:17,604 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-24 19:36:17,604 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-24 19:36:17,605 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-24 19:36:17,605 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-24 19:36:17,605 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-24 19:36:17,606 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-24 19:36:17,607 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-24 19:36:17,607 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-24 19:36:17,608 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-24 19:36:17,608 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-24 19:36:17,609 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-24 19:36:17,609 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-24 19:36:17,609 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-24 19:36:17,610 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-24 19:36:17,610 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-24 19:36:17,610 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-24 19:36:17,618 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-24 19:36:17,618 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-24 19:36:17,619 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-24 19:36:17,620 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-24 19:36:17,620 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-24 19:36:17,620 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-24 19:36:17,620 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-24 19:36:17,620 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-24 19:36:17,620 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-24 19:36:17,620 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-24 19:36:17,620 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-24 19:36:17,621 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-24 19:36:17,621 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-24 19:36:17,621 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-24 19:36:17,621 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-24 19:36:17,621 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-24 19:36:17,621 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-24 19:36:17,621 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-24 19:36:17,621 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-24 19:36:17,621 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-24 19:36:17,621 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-24 19:36:17,621 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-24 19:36:17,622 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-24 19:36:17,622 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-24 19:36:17,622 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-24 19:36:17,622 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-24 19:36:17,645 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-24 19:36:17,658 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-24 19:36:17,661 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-24 19:36:17,662 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-24 19:36:17,662 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-24 19:36:17,663 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/HumanStandardToken_0x39112688107de317958d9ecc14730d75642ce782_transferfrom-self.bpl
[2020-11-24 19:36:17,663 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/HumanStandardToken_0x39112688107de317958d9ecc14730d75642ce782_transferfrom-self.bpl'
[2020-11-24 19:36:17,722 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-24 19:36:17,723 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-24 19:36:17,723 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-24 19:36:17,723 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-24 19:36:17,723 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-24 19:36:17,740 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "HumanStandardToken_0x39112688107de317958d9ecc14730d75642ce782_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 07:36:17" (1/1) ...
[2020-11-24 19:36:17,741 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "HumanStandardToken_0x39112688107de317958d9ecc14730d75642ce782_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 07:36:17" (1/1) ...
[2020-11-24 19:36:17,762 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "HumanStandardToken_0x39112688107de317958d9ecc14730d75642ce782_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 07:36:17" (1/1) ...
[2020-11-24 19:36:17,763 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "HumanStandardToken_0x39112688107de317958d9ecc14730d75642ce782_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 07:36:17" (1/1) ...
[2020-11-24 19:36:17,777 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "HumanStandardToken_0x39112688107de317958d9ecc14730d75642ce782_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 07:36:17" (1/1) ...
[2020-11-24 19:36:17,786 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "HumanStandardToken_0x39112688107de317958d9ecc14730d75642ce782_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 07:36:17" (1/1) ...
[2020-11-24 19:36:17,790 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "HumanStandardToken_0x39112688107de317958d9ecc14730d75642ce782_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 07:36:17" (1/1) ...
[2020-11-24 19:36:17,796 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-24 19:36:17,796 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-24 19:36:17,797 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-24 19:36:17,799 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-24 19:36:17,803 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "HumanStandardToken_0x39112688107de317958d9ecc14730d75642ce782_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 07:36:17" (1/1) ...
[2020-11-24 19:36:17,817 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(StandardToken.transferFrom(from, to, value), (p1 != from || p2 != msg.sender) && from == to && value <= balances_StandardToken[this][from] && value <= allowed_StandardToken[this][from][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_StandardToken[this][to] >= 0 && balances_StandardToken[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_StandardToken[this][from] >= 0 &&  balances_StandardToken[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && allowed_StandardToken[this][from][msg.sender] >= 0 && allowed_StandardToken[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(StandardToken.transferFrom(from, to, value), return == true && allowed_StandardToken[this][from][msg.sender] == old(allowed_StandardToken[this][from][msg.sender]) - value && totalSupply_Token[this] == old(totalSupply_Token[this]) && balances_StandardToken[this] == old(balances_StandardToken[this]) && allowed_StandardToken[this][p1][p2] == old(allowed_StandardToken[this][p1][p2]) && name_HumanStandardToken[this] == old(name_HumanStandardToken[this]) && decimals_HumanStandardToken[this] == old(decimals_HumanStandardToken[this]) && symbol_HumanStandardToken[this] == old(symbol_HumanStandardToken[this]) && version_HumanStandardToken[this] == old(version_HumanStandardToken[this]))))
[2020-11-24 19:36:17,823 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(StandardToken.transferFrom(from, to, value), (p1 != from || p2 != msg.sender) && from == to && value <= balances_StandardToken[this][from] && value <= allowed_StandardToken[this][from][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_StandardToken[this][to] >= 0 && balances_StandardToken[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_StandardToken[this][from] >= 0 &&  balances_StandardToken[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && allowed_StandardToken[this][from][msg.sender] >= 0 && allowed_StandardToken[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(StandardToken.transferFrom(from, to, value), return == true && allowed_StandardToken[this][from][msg.sender] == old(allowed_StandardToken[this][from][msg.sender]) - value && totalSupply_Token[this] == old(totalSupply_Token[this]) && balances_StandardToken[this] == old(balances_StandardToken[this]) && allowed_StandardToken[this][p1][p2] == old(allowed_StandardToken[this][p1][p2]) && name_HumanStandardToken[this] == old(name_HumanStandardToken[this]) && decimals_HumanStandardToken[this] == old(decimals_HumanStandardToken[this]) && symbol_HumanStandardToken[this] == old(symbol_HumanStandardToken[this]) && version_HumanStandardToken[this] == old(version_HumanStandardToken[this]))))
[2020-11-24 19:36:17,830 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(StandardToken.transferFrom(from, to, value), (p1 != from || p2 != msg.sender) && from == to && value <= balances_StandardToken[this][from] && value <= allowed_StandardToken[this][from][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_StandardToken[this][to] >= 0 && balances_StandardToken[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_StandardToken[this][from] >= 0 &&  balances_StandardToken[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && allowed_StandardToken[this][from][msg.sender] >= 0 && allowed_StandardToken[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(StandardToken.transferFrom(from, to, value), return == true && allowed_StandardToken[this][from][msg.sender] == old(allowed_StandardToken[this][from][msg.sender]) - value && totalSupply_Token[this] == old(totalSupply_Token[this]) && balances_StandardToken[this] == old(balances_StandardToken[this]) && allowed_StandardToken[this][p1][p2] == old(allowed_StandardToken[this][p1][p2]) && name_HumanStandardToken[this] == old(name_HumanStandardToken[this]) && decimals_HumanStandardToken[this] == old(decimals_HumanStandardToken[this]) && symbol_HumanStandardToken[this] == old(symbol_HumanStandardToken[this]) && version_HumanStandardToken[this] == old(version_HumanStandardToken[this]))))
[2020-11-24 19:36:17,836 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( ( ( ( ( p1!=_from_s166 || p2!=msg.sender ) && _from_s166==_to_s166 ) && _value_s166<=balances_StandardToken[this][_from_s166] ) && _value_s166<=allowed_StandardToken[this][_from_s166][msg.sender] ) && _value_s166>=0 ) && _value_s166<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && balances_StandardToken[this][_to_s166]>=0 ) && balances_StandardToken[this][_to_s166]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && balances_StandardToken[this][_from_s166]>=0 ) && balances_StandardToken[this][_from_s166]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && allowed_StandardToken[this][_from_s166][msg.sender]>=0 ) && allowed_StandardToken[this][_from_s166][msg.sender]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICOR,BinaryExpression[COMPNEQ,IdentifierExpression[p1,GLOBAL],IdentifierExpression[_from_s166,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]],BinaryExpression[COMPNEQ,IdentifierExpression[p2,GLOBAL],IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]],BinaryExpression[COMPEQ,IdentifierExpression[_from_s166,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>],IdentifierExpression[_to_s166,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]],BinaryExpression[COMPLEQ,IdentifierExpression[_value_s166,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>],ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_StandardToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]],[IdentifierExpression[_from_s166,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]]]],BinaryExpression[COMPLEQ,IdentifierExpression[_value_s166,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>],ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowed_StandardToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]],[IdentifierExpression[_from_s166,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]]]],BinaryExpression[COMPGEQ,IdentifierExpression[_value_s166,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>],IntegerLiteral[0]]],BinaryExpression[COMPLT,IdentifierExpression[_value_s166,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_StandardToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]],[IdentifierExpression[_to_s166,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_StandardToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]],[IdentifierExpression[_to_s166,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_StandardToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]],[IdentifierExpression[_from_s166,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_StandardToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]],[IdentifierExpression[_from_s166,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowed_StandardToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]],[IdentifierExpression[_from_s166,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowed_StandardToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]],[IdentifierExpression[_from_s166,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]]
[2020-11-24 19:36:17,840 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( success_s166==true && allowed_StandardToken[this][_from_s166][msg.sender]==( ( old(allowed_StandardToken[this][_from_s166][msg.sender]) ) - _value_s166 ) ) && totalSupply_Token[this]==( old(totalSupply_Token[this]) ) ) && balances_StandardToken[this]==( old(balances_StandardToken[this]) ) ) && allowed_StandardToken[this][p1][p2]==( old(allowed_StandardToken[this][p1][p2]) ) ) && name_HumanStandardToken[this]==( old(name_HumanStandardToken[this]) ) ) && decimals_HumanStandardToken[this]==( old(decimals_HumanStandardToken[this]) ) ) && symbol_HumanStandardToken[this]==( old(symbol_HumanStandardToken[this]) ) ) && version_HumanStandardToken[this]==( old(version_HumanStandardToken[this]) ) ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[success_s166,<IMPLEMENTATION_OUTPARAM,transferFrom~address~address~uint256_StandardToken>],BooleanLiteral[true]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowed_StandardToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]],[IdentifierExpression[_from_s166,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]],BinaryExpression[ARITHMINUS,UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowed_StandardToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]],[IdentifierExpression[_from_s166,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]]],IdentifierExpression[_value_s166,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[totalSupply_Token,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[totalSupply_Token,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[balances_StandardToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[balances_StandardToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowed_StandardToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]],[IdentifierExpression[p1,GLOBAL]]],[IdentifierExpression[p2,GLOBAL]]],UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowed_StandardToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]],[IdentifierExpression[p1,GLOBAL]]],[IdentifierExpression[p2,GLOBAL]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[name_HumanStandardToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[name_HumanStandardToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[decimals_HumanStandardToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[decimals_HumanStandardToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[symbol_HumanStandardToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[symbol_HumanStandardToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[version_HumanStandardToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[version_HumanStandardToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]]]]]
[2020-11-24 19:36:17,843 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(StandardToken.transferFrom(from, to, value), (p1 != from || p2 != msg.sender) && from == to && value <= balances_StandardToken[this][from] && value <= allowed_StandardToken[this][from][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_StandardToken[this][to] >= 0 && balances_StandardToken[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_StandardToken[this][from] >= 0 &&  balances_StandardToken[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && allowed_StandardToken[this][from][msg.sender] >= 0 && allowed_StandardToken[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(StandardToken.transferFrom(from, to, value), return == true && allowed_StandardToken[this][from][msg.sender] == old(allowed_StandardToken[this][from][msg.sender]) - value && totalSupply_Token[this] == old(totalSupply_Token[this]) && balances_StandardToken[this] == old(balances_StandardToken[this]) && allowed_StandardToken[this][p1][p2] == old(allowed_StandardToken[this][p1][p2]) && name_HumanStandardToken[this] == old(name_HumanStandardToken[this]) && decimals_HumanStandardToken[this] == old(decimals_HumanStandardToken[this]) && symbol_HumanStandardToken[this] == old(symbol_HumanStandardToken[this]) && version_HumanStandardToken[this] == old(version_HumanStandardToken[this]))))
[2020-11-24 19:36:17,843 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_transferFrom_StandardToken0) ==> ( <>AP(success_transferFrom_StandardToken0) ) ) )
Executed UtopiaSpecLang
[2020-11-24 19:36:17,849 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 07:36:17 PropertyContainer
[2020-11-24 19:36:17,850 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-24 19:36:17,850 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-24 19:36:17,850 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-24 19:36:17,850 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-24 19:36:17,852 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "HumanStandardToken_0x39112688107de317958d9ecc14730d75642ce782_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 07:36:17" (1/2) ...
[2020-11-24 19:36:17,852 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-24 19:36:17,853 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-24 19:36:17,864 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 07:36:17" (2/2) ...
[2020-11-24 19:36:17,865 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-24 19:36:17,865 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-24 19:36:17,865 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-24 19:36:17,865 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-24 19:36:17,866 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "HumanStandardToken_0x39112688107de317958d9ecc14730d75642ce782_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 07:36:17" (1/2) ...
[2020-11-24 19:36:17,919 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-24 19:36:17,919 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_Token
[2020-11-24 19:36:17,919 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_Token
[2020-11-24 19:36:17,919 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_StandardToken
[2020-11-24 19:36:17,919 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_StandardToken
[2020-11-24 19:36:17,919 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_StandardToken
[2020-11-24 19:36:17,919 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_StandardToken
[2020-11-24 19:36:17,920 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_StandardToken
[2020-11-24 19:36:17,920 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_StandardToken
[2020-11-24 19:36:17,920 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_StandardToken
[2020-11-24 19:36:17,920 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_StandardToken
[2020-11-24 19:36:17,920 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_StandardToken
[2020-11-24 19:36:17,920 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_StandardToken
[2020-11-24 19:36:17,920 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-24 19:36:17,920 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-24 19:36:17,921 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-24 19:36:17,921 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_Token
[2020-11-24 19:36:17,921 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_Token
[2020-11-24 19:36:17,921 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_StandardToken
[2020-11-24 19:36:17,921 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_StandardToken
[2020-11-24 19:36:17,921 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_HumanStandardToken
[2020-11-24 19:36:17,921 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-24 19:36:17,921 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-24 19:36:17,922 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_Token__success
[2020-11-24 19:36:17,922 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_Token__fail
[2020-11-24 19:36:17,922 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_StandardToken__success
[2020-11-24 19:36:17,922 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_StandardToken__fail
[2020-11-24 19:36:17,922 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_StandardToken__success
[2020-11-24 19:36:17,922 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_StandardToken__fail
[2020-11-24 19:36:17,922 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_StandardToken__success
[2020-11-24 19:36:17,922 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_StandardToken__fail
[2020-11-24 19:36:17,922 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_StandardToken__success
[2020-11-24 19:36:17,922 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_StandardToken__fail
[2020-11-24 19:36:17,922 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_StandardToken__success
[2020-11-24 19:36:17,922 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_StandardToken__fail
[2020-11-24 19:36:17,923 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-24 19:36:17,923 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-24 19:36:17,923 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-24 19:36:17,923 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-24 19:36:17,923 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-24 19:36:17,923 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_Token__fail
[2020-11-24 19:36:17,923 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_Token__success
[2020-11-24 19:36:17,923 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_StandardToken__fail
[2020-11-24 19:36:17,923 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_StandardToken__success
[2020-11-24 19:36:17,923 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_StandardToken__fail
[2020-11-24 19:36:17,923 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_StandardToken__success
[2020-11-24 19:36:17,923 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_StandardToken__fail
[2020-11-24 19:36:17,923 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_StandardToken__success
[2020-11-24 19:36:17,924 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_StandardToken__fail
[2020-11-24 19:36:17,924 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_StandardToken__success
[2020-11-24 19:36:17,924 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_StandardToken__fail
[2020-11-24 19:36:17,924 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_StandardToken__success
[2020-11-24 19:36:17,924 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-24 19:36:17,924 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-24 19:36:17,924 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-24 19:36:17,924 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-24 19:36:17,924 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-24 19:36:17,924 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-24 19:36:17,924 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_Token
[2020-11-24 19:36:17,924 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_Token
[2020-11-24 19:36:17,924 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_StandardToken
[2020-11-24 19:36:17,924 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_StandardToken
[2020-11-24 19:36:17,925 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_HumanStandardToken
[2020-11-24 19:36:17,925 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-24 19:36:17,925 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-24 19:36:17,925 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-24 19:36:18,174 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 19:36:18,275 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 19:36:18,275 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 19:36:18,276 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 19:36:18,392 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-24 19:36:18,392 INFO  L286             CfgBuilder]: Removed 3 assue(true) statements.
[2020-11-24 19:36:18,393 INFO  L202        PluginConnector]: Adding new model HumanStandardToken_0x39112688107de317958d9ecc14730d75642ce782_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 07:36:18 BoogieIcfgContainer
[2020-11-24 19:36:18,393 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 07:36:17" (2/2) ...
[2020-11-24 19:36:18,394 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-24 19:36:18,394 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@6b45ae30 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 07:36:18, skipping insertion in model container
[2020-11-24 19:36:18,394 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-24 19:36:18,394 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-24 19:36:18,394 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-24 19:36:18,396 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-24 19:36:18,396 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "HumanStandardToken_0x39112688107de317958d9ecc14730d75642ce782_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 07:36:17" (1/3) ...
[2020-11-24 19:36:18,397 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@572d2ba4 and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 07:36:18, skipping insertion in model container
[2020-11-24 19:36:18,397 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 07:36:17" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-24 19:36:18,434 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 07:36:18 NWAContainer
[2020-11-24 19:36:18,434 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-24 19:36:18,434 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-24 19:36:18,434 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-24 19:36:18,435 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-24 19:36:18,436 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "HumanStandardToken_0x39112688107de317958d9ecc14730d75642ce782_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 07:36:18" (3/4) ...
[2020-11-24 19:36:18,436 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@a65c3d and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 07:36:18, skipping insertion in model container
[2020-11-24 19:36:18,437 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 07:36:18" (4/4) ...
[2020-11-24 19:36:18,440 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-24 19:36:18,443 INFO  L110   BuchiProductObserver]: Initial RCFG 531 locations, 662 edges
[2020-11-24 19:36:18,443 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-24 19:36:18,456 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-24 19:36:19,321 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-24 19:36:19,323 INFO  L110   BuchiProductObserver]: BuchiProgram size 1240 locations, 2155 edges
[2020-11-24 19:36:19,324 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 07:36:19 BoogieIcfgContainer
[2020-11-24 19:36:19,324 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-24 19:36:19,324 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-24 19:36:19,324 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-24 19:36:19,326 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-24 19:36:19,326 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 07:36:19" (1/1) ...
[2020-11-24 19:36:19,362 INFO  L313           BlockEncoder]: Initial Icfg 1240 locations, 2155 edges
[2020-11-24 19:36:19,362 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-24 19:36:19,362 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-24 19:36:19,363 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-24 19:36:19,363 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-24 19:36:19,370 INFO  L70    emoveInfeasibleEdges]: Removed 33 edges and 9 locations because of local infeasibility
[2020-11-24 19:36:19,373 INFO  L70        RemoveSinkStates]: Removed 2 edges and 1 locations by removing sink states
[2020-11-24 19:36:19,378 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-24 19:36:19,380 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-24 19:36:19,382 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-24 19:36:19,382 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-24 19:36:19,385 INFO  L313           BlockEncoder]: Encoded RCFG 1218 locations, 2103 edges
[2020-11-24 19:36:19,385 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 24.11 07:36:19 BasicIcfg
[2020-11-24 19:36:19,385 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-24 19:36:19,385 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-24 19:36:19,385 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-24 19:36:19,388 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-24 19:36:19,388 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 19:36:19,388 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "HumanStandardToken_0x39112688107de317958d9ecc14730d75642ce782_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 07:36:17" (1/6) ...
[2020-11-24 19:36:19,389 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@1a9318c1 and model type HumanStandardToken_0x39112688107de317958d9ecc14730d75642ce782_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 24.11 07:36:19, skipping insertion in model container
[2020-11-24 19:36:19,389 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 19:36:19,389 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 07:36:17" (2/6) ...
[2020-11-24 19:36:19,389 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@1a9318c1 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 24.11 07:36:19, skipping insertion in model container
[2020-11-24 19:36:19,389 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 19:36:19,389 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "HumanStandardToken_0x39112688107de317958d9ecc14730d75642ce782_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 07:36:18" (3/6) ...
[2020-11-24 19:36:19,390 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@1a9318c1 and model type HumanStandardToken_0x39112688107de317958d9ecc14730d75642ce782_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 24.11 07:36:19, skipping insertion in model container
[2020-11-24 19:36:19,390 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 19:36:19,390 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 07:36:18" (4/6) ...
[2020-11-24 19:36:19,390 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@1a9318c1 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 24.11 07:36:19, skipping insertion in model container
[2020-11-24 19:36:19,390 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 19:36:19,390 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 07:36:19" (5/6) ...
[2020-11-24 19:36:19,390 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@1a9318c1 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 24.11 07:36:19, skipping insertion in model container
[2020-11-24 19:36:19,390 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 19:36:19,390 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 24.11 07:36:19" (6/6) ...
[2020-11-24 19:36:19,391 INFO  L404   chiAutomizerObserver]: Analyzing ICFG HumanStandardToken_0x39112688107de317958d9ecc14730d75642ce782_transferfrom-self.bpl_BEv2
[2020-11-24 19:36:19,422 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-24 19:36:19,423 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-24 19:36:19,423 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-24 19:36:19,423 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-24 19:36:19,423 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-24 19:36:19,423 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-24 19:36:19,423 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-24 19:36:19,423 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-24 19:36:19,423 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-24 19:36:19,439 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1218 states.
[2020-11-24 19:36:19,471 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 19:36:19,471 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 19:36:19,471 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 19:36:19,478 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 19:36:19,478 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
[2020-11-24 19:36:19,478 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-24 19:36:19,478 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1218 states.
[2020-11-24 19:36:19,483 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 19:36:19,483 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 19:36:19,484 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 19:36:19,485 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 19:36:19,485 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L3]                 success_transferFrom_StandardToken0 := false;
[L3]                 call_transferFrom_StandardToken0 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L1628]              assume null == 0;
[L1629]  CALL        call this := FreshRefGenerator__success();
[L659]               havoc newRef;
[L660]               assume Alloc[newRef] == false;
[L661]               Alloc[newRef] := true;
[L662]               assume newRef != null;
[L1629]  RET         call this := FreshRefGenerator__success();
[L1630]              assume now >= 0;
[L1631]              assume DType[this] == HumanStandardToken;
[L1632]              assume !revert && gas >= 0;
[L1633]  CALL        call CorralChoice_HumanStandardToken(this);
[L1539]              havoc msgsender_MSG;
[L1540]              havoc msgvalue_MSG;
[L1541]              havoc choice;
[L1542]              havoc __ret_0_totalSupply;
[L1543]              havoc _owner_s178;
[L1544]              havoc balance_s178;
[L1545]              havoc _to_s108;
[L1546]              havoc _value_s108;
[L1547]              havoc success_s108;
[L1548]              havoc _from_s166;
[L1549]              havoc _to_s166;
[L1550]              havoc _value_s166;
[L1551]              havoc success_s166;
[L1552]              havoc _spender_s206;
[L1553]              havoc _value_s206;
[L1554]              havoc success_s206;
[L1555]              havoc _owner_s222;
[L1556]              havoc _spender_s222;
[L1557]              havoc remaining_s222;
[L1558]              havoc __ret_0_name;
[L1559]              havoc __ret_0_decimals;
[L1560]              havoc __ret_0_symbol;
[L1561]              havoc __ret_0_version;
[L1562]              havoc _initialAmount_s279;
[L1563]              havoc _tokenName_s279;
[L1564]              havoc _decimalUnits_s279;
[L1565]              havoc _tokenSymbol_s279;
[L1566]              havoc _spender_s327;
[L1567]              havoc _value_s327;
[L1568]              havoc _extraData_s327;
[L1569]              havoc success_s327;
[L1570]              havoc tmpNow;
[L1571]              havoc gas;
[L1572]              assume gas > 4000000 && gas <= 8000000;
[L1573]              tmpNow := now;
[L1574]              havoc now;
[L1575]              assume now > tmpNow;
[L1576]              assume msgsender_MSG != null;
[L1577]  COND TRUE   choice == 6
[L1578]              gas := gas - 21000;
[L1579]  COND FALSE  !(gas >= 0)
[L1633]  RET         call CorralChoice_HumanStandardToken(this);

Loop:
[L1633]        assume true;

[2020-11-24 19:36:19,497 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 19:36:19,497 INFO  L82        PathProgramCache]: Analyzing trace with hash -322094786, now seen corresponding path program 1 times
[2020-11-24 19:36:19,501 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 19:36:19,515 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 19:36:19,560 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 19:36:19,562 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 19:36:19,562 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-24 19:36:19,566 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 19:36:19,578 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-24 19:36:19,578 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-24 19:36:19,579 INFO  L87              Difference]: Start difference. First operand 1218 states. Second operand 4 states.
[2020-11-24 19:36:19,771 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 19:36:19,771 INFO  L93              Difference]: Finished difference Result 459 states and 487 transitions.
[2020-11-24 19:36:19,771 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-24 19:36:19,772 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 459 states and 487 transitions.
[2020-11-24 19:36:19,775 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 19:36:19,779 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 459 states to 143 states and 146 transitions.
[2020-11-24 19:36:19,780 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 4
[2020-11-24 19:36:19,780 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 143
[2020-11-24 19:36:19,780 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 143 states and 146 transitions.
[2020-11-24 19:36:19,781 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 19:36:19,781 INFO  L728         BuchiCegarLoop]: Abstraction has 143 states and 146 transitions.
[2020-11-24 19:36:19,792 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 143 states and 146 transitions.
[2020-11-24 19:36:19,800 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 143 to 143.
[2020-11-24 19:36:19,801 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 143 states.
[2020-11-24 19:36:19,801 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 143 states to 143 states and 146 transitions.
[2020-11-24 19:36:19,802 INFO  L751         BuchiCegarLoop]: Abstraction has 143 states and 146 transitions.
[2020-11-24 19:36:19,802 INFO  L631         BuchiCegarLoop]: Abstraction has 143 states and 146 transitions.
[2020-11-24 19:36:19,802 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-24 19:36:19,802 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 143 states and 146 transitions.
[2020-11-24 19:36:19,803 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 19:36:19,803 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 19:36:19,803 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 19:36:19,804 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 19:36:19,804 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L3]                 success_transferFrom_StandardToken0 := false;
[L3]                 call_transferFrom_StandardToken0 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L1628]              assume null == 0;
[L1629]  CALL        call this := FreshRefGenerator__success();
[L659]               havoc newRef;
[L660]               assume Alloc[newRef] == false;
[L661]               Alloc[newRef] := true;
[L662]               assume newRef != null;
[L1629]  RET         call this := FreshRefGenerator__success();
[L1630]              assume now >= 0;
[L1631]              assume DType[this] == HumanStandardToken;
[L1632]              assume !revert && gas >= 0;
[L1633]  CALL        call CorralChoice_HumanStandardToken(this);
[L1539]              havoc msgsender_MSG;
[L1540]              havoc msgvalue_MSG;
[L1541]              havoc choice;
[L1542]              havoc __ret_0_totalSupply;
[L1543]              havoc _owner_s178;
[L1544]              havoc balance_s178;
[L1545]              havoc _to_s108;
[L1546]              havoc _value_s108;
[L1547]              havoc success_s108;
[L1548]              havoc _from_s166;
[L1549]              havoc _to_s166;
[L1550]              havoc _value_s166;
[L1551]              havoc success_s166;
[L1552]              havoc _spender_s206;
[L1553]              havoc _value_s206;
[L1554]              havoc success_s206;
[L1555]              havoc _owner_s222;
[L1556]              havoc _spender_s222;
[L1557]              havoc remaining_s222;
[L1558]              havoc __ret_0_name;
[L1559]              havoc __ret_0_decimals;
[L1560]              havoc __ret_0_symbol;
[L1561]              havoc __ret_0_version;
[L1562]              havoc _initialAmount_s279;
[L1563]              havoc _tokenName_s279;
[L1564]              havoc _decimalUnits_s279;
[L1565]              havoc _tokenSymbol_s279;
[L1566]              havoc _spender_s327;
[L1567]              havoc _value_s327;
[L1568]              havoc _extraData_s327;
[L1569]              havoc success_s327;
[L1570]              havoc tmpNow;
[L1571]              havoc gas;
[L1572]              assume gas > 4000000 && gas <= 8000000;
[L1573]              tmpNow := now;
[L1574]              havoc now;
[L1575]              assume now > tmpNow;
[L1576]              assume msgsender_MSG != null;
[L1577]  COND FALSE  !(choice == 6)
[L1583]  COND FALSE  !(choice == 5)
[L1589]  COND FALSE  !(choice == 4)
[L1596]  COND TRUE   choice == 3
[L1597]              gas := gas - 21000;
[L1598]  COND TRUE   gas >= 0
[L1599]              assume _value_s166 >= 0 && _value_s166 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1600]              assume msgvalue_MSG == 0;
[L1601]  CALL        call success_s166 := transferFrom~address~address~uint256_StandardToken(this, msgsender_MSG, msgvalue_MSG, _from_s166, _to_s166, _value_s166);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != _from_s166 || p2 != msgsender_MSG) && _from_s166 == _to_s166) && _value_s166 <= balances_StandardToken[this][_from_s166]) && _value_s166 <= allowed_StandardToken[this][_from_s166][msgsender_MSG]) && _value_s166 >= 0) && _value_s166 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_StandardToken[this][_to_s166] >= 0) && balances_StandardToken[this][_to_s166] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_StandardToken[this][_from_s166] >= 0) && balances_StandardToken[this][_from_s166] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_StandardToken[this][_from_s166][msgsender_MSG] >= 0) && allowed_StandardToken[this][_from_s166][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_StandardToken0 := true;
[L3]                 call_transferFrom_StandardToken0 := false;
[L3]                 revert := revert_hold;
[L174]               havoc __exception;
[L175]               revert := false;
[L176]   COND FALSE  !(__exception)
[L198]   CALL        call success_s166 := transferFrom~address~address~uint256_StandardToken__success(this, msgsender_MSG, msgvalue_MSG, _from_s166, _to_s166, _value_s166);
[L731]   COND TRUE   !(balances_StandardToken[this][_from_s166] >= _value_s166 && allowed_StandardToken[this][_from_s166][msgsender_MSG] >= _value_s166)
[L732]               revert := true;
[L198]   RET         call success_s166 := transferFrom~address~address~uint256_StandardToken__success(this, msgsender_MSG, msgvalue_MSG, _from_s166, _to_s166, _value_s166);
[L199]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !((((((((success_s166 == true && allowed_StandardToken[this][_from_s166][msgsender_MSG] == old(allowed_StandardToken[this][_from_s166][msgsender_MSG]) - _value_s166) && totalSupply_Token[this] == old(totalSupply_Token[this])) && balances_StandardToken[this] == old(balances_StandardToken[this])) && allowed_StandardToken[this][p1][p2] == old(allowed_StandardToken[this][p1][p2])) && name_HumanStandardToken[this] == old(name_HumanStandardToken[this])) && decimals_HumanStandardToken[this] == old(decimals_HumanStandardToken[this])) && symbol_HumanStandardToken[this] == old(symbol_HumanStandardToken[this])) && version_HumanStandardToken[this] == old(version_HumanStandardToken[this]));
[L3]                 revert := revert_hold;
[L1601]  RET         call success_s166 := transferFrom~address~address~uint256_StandardToken(this, msgsender_MSG, msgvalue_MSG, _from_s166, _to_s166, _value_s166);
[L1633]  RET         call CorralChoice_HumanStandardToken(this);

Loop:
[L1633]        assume true;

[2020-11-24 19:36:19,807 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 19:36:19,807 INFO  L82        PathProgramCache]: Analyzing trace with hash 2038490196, now seen corresponding path program 1 times
[2020-11-24 19:36:19,808 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 19:36:19,820 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 19:36:19,835 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 19:36:19,835 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 19:36:19,835 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-24 19:36:19,836 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 19:36:19,836 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-24 19:36:19,836 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-24 19:36:19,836 INFO  L87              Difference]: Start difference. First operand 143 states and 146 transitions. cyclomatic complexity: 4 Second operand 3 states.
[2020-11-24 19:36:19,839 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 19:36:19,839 INFO  L93              Difference]: Finished difference Result 158 states and 160 transitions.
[2020-11-24 19:36:19,839 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-24 19:36:19,840 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 158 states and 160 transitions.
[2020-11-24 19:36:19,841 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 2
[2020-11-24 19:36:19,842 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 158 states to 153 states and 155 transitions.
[2020-11-24 19:36:19,842 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 153
[2020-11-24 19:36:19,842 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 153
[2020-11-24 19:36:19,842 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 153 states and 155 transitions.
[2020-11-24 19:36:19,842 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 19:36:19,843 INFO  L728         BuchiCegarLoop]: Abstraction has 153 states and 155 transitions.
[2020-11-24 19:36:19,843 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 153 states and 155 transitions.
[2020-11-24 19:36:19,845 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 153 to 142.
[2020-11-24 19:36:19,845 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 142 states.
[2020-11-24 19:36:19,846 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 142 states to 142 states and 144 transitions.
[2020-11-24 19:36:19,846 INFO  L751         BuchiCegarLoop]: Abstraction has 142 states and 144 transitions.
[2020-11-24 19:36:19,846 INFO  L631         BuchiCegarLoop]: Abstraction has 142 states and 144 transitions.
[2020-11-24 19:36:19,846 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-24 19:36:19,846 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 142 states and 144 transitions.
[2020-11-24 19:36:19,847 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 19:36:19,847 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 19:36:19,847 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 19:36:19,847 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 19:36:19,847 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L3]                 success_transferFrom_StandardToken0 := false;
[L3]                 call_transferFrom_StandardToken0 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L1628]              assume null == 0;
[L1629]  CALL        call this := FreshRefGenerator__success();
[L659]               havoc newRef;
[L660]               assume Alloc[newRef] == false;
[L661]               Alloc[newRef] := true;
[L662]               assume newRef != null;
[L1629]  RET         call this := FreshRefGenerator__success();
[L1630]              assume now >= 0;
[L1631]              assume DType[this] == HumanStandardToken;
[L1632]              assume !revert && gas >= 0;
[L1633]  CALL        call CorralChoice_HumanStandardToken(this);
[L1539]              havoc msgsender_MSG;
[L1540]              havoc msgvalue_MSG;
[L1541]              havoc choice;
[L1542]              havoc __ret_0_totalSupply;
[L1543]              havoc _owner_s178;
[L1544]              havoc balance_s178;
[L1545]              havoc _to_s108;
[L1546]              havoc _value_s108;
[L1547]              havoc success_s108;
[L1548]              havoc _from_s166;
[L1549]              havoc _to_s166;
[L1550]              havoc _value_s166;
[L1551]              havoc success_s166;
[L1552]              havoc _spender_s206;
[L1553]              havoc _value_s206;
[L1554]              havoc success_s206;
[L1555]              havoc _owner_s222;
[L1556]              havoc _spender_s222;
[L1557]              havoc remaining_s222;
[L1558]              havoc __ret_0_name;
[L1559]              havoc __ret_0_decimals;
[L1560]              havoc __ret_0_symbol;
[L1561]              havoc __ret_0_version;
[L1562]              havoc _initialAmount_s279;
[L1563]              havoc _tokenName_s279;
[L1564]              havoc _decimalUnits_s279;
[L1565]              havoc _tokenSymbol_s279;
[L1566]              havoc _spender_s327;
[L1567]              havoc _value_s327;
[L1568]              havoc _extraData_s327;
[L1569]              havoc success_s327;
[L1570]              havoc tmpNow;
[L1571]              havoc gas;
[L1572]              assume gas > 4000000 && gas <= 8000000;
[L1573]              tmpNow := now;
[L1574]              havoc now;
[L1575]              assume now > tmpNow;
[L1576]              assume msgsender_MSG != null;
[L1577]  COND FALSE  !(choice == 6)
[L1583]  COND FALSE  !(choice == 5)
[L1589]  COND FALSE  !(choice == 4)
[L1596]  COND TRUE   choice == 3
[L1597]              gas := gas - 21000;
[L1598]  COND TRUE   gas >= 0
[L1599]              assume _value_s166 >= 0 && _value_s166 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1600]              assume msgvalue_MSG == 0;
[L1601]  CALL        call success_s166 := transferFrom~address~address~uint256_StandardToken(this, msgsender_MSG, msgvalue_MSG, _from_s166, _to_s166, _value_s166);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != _from_s166 || p2 != msgsender_MSG) && _from_s166 == _to_s166) && _value_s166 <= balances_StandardToken[this][_from_s166]) && _value_s166 <= allowed_StandardToken[this][_from_s166][msgsender_MSG]) && _value_s166 >= 0) && _value_s166 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_StandardToken[this][_to_s166] >= 0) && balances_StandardToken[this][_to_s166] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_StandardToken[this][_from_s166] >= 0) && balances_StandardToken[this][_from_s166] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_StandardToken[this][_from_s166][msgsender_MSG] >= 0) && allowed_StandardToken[this][_from_s166][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_StandardToken0 := true;
[L3]                 call_transferFrom_StandardToken0 := false;
[L3]                 revert := revert_hold;
[L174]               havoc __exception;
[L175]               revert := false;
[L176]   COND FALSE  !(__exception)
[L198]   CALL        call success_s166 := transferFrom~address~address~uint256_StandardToken__success(this, msgsender_MSG, msgvalue_MSG, _from_s166, _to_s166, _value_s166);
[L731]   COND FALSE  !(!(balances_StandardToken[this][_from_s166] >= _value_s166 && allowed_StandardToken[this][_from_s166][msgsender_MSG] >= _value_s166))
[L735]               sum_balances0[this] := sum_balances0[this] - balances_StandardToken[this][_to_s166];
[L736]               balances_StandardToken[this][_to_s166] := (balances_StandardToken[this][_to_s166] + _value_s166) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L737]               sum_balances0[this] := sum_balances0[this] + balances_StandardToken[this][_to_s166];
[L738]               sum_balances0[this] := sum_balances0[this] - balances_StandardToken[this][_from_s166];
[L739]               balances_StandardToken[this][_from_s166] := (balances_StandardToken[this][_from_s166] - _value_s166) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L740]               sum_balances0[this] := sum_balances0[this] + balances_StandardToken[this][_from_s166];
[L741]               sum_allowed1[_from_s166] := sum_allowed1[_from_s166] - allowed_StandardToken[this][_from_s166][msgsender_MSG];
[L742]               allowed_StandardToken[this][_from_s166][msgsender_MSG] := (allowed_StandardToken[this][_from_s166][msgsender_MSG] - _value_s166) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L743]               sum_allowed1[_from_s166] := sum_allowed1[_from_s166] + allowed_StandardToken[this][_from_s166][msgsender_MSG];
[L744]               assert { :EventEmitted "Transfer_StandardToken" } true;
[L745]               success_s166 := true;
[L198]   RET         call success_s166 := transferFrom~address~address~uint256_StandardToken__success(this, msgsender_MSG, msgvalue_MSG, _from_s166, _to_s166, _value_s166);
[L199]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !((((((((success_s166 == true && allowed_StandardToken[this][_from_s166][msgsender_MSG] == old(allowed_StandardToken[this][_from_s166][msgsender_MSG]) - _value_s166) && totalSupply_Token[this] == old(totalSupply_Token[this])) && balances_StandardToken[this] == old(balances_StandardToken[this])) && allowed_StandardToken[this][p1][p2] == old(allowed_StandardToken[this][p1][p2])) && name_HumanStandardToken[this] == old(name_HumanStandardToken[this])) && decimals_HumanStandardToken[this] == old(decimals_HumanStandardToken[this])) && symbol_HumanStandardToken[this] == old(symbol_HumanStandardToken[this])) && version_HumanStandardToken[this] == old(version_HumanStandardToken[this]));
[L3]                 revert := revert_hold;
[L1601]  RET         call success_s166 := transferFrom~address~address~uint256_StandardToken(this, msgsender_MSG, msgvalue_MSG, _from_s166, _to_s166, _value_s166);
[L1633]  RET         call CorralChoice_HumanStandardToken(this);

Loop:
[L1633]        assume true;

[2020-11-24 19:36:19,849 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 19:36:19,849 INFO  L82        PathProgramCache]: Analyzing trace with hash -1776741309, now seen corresponding path program 1 times
[2020-11-24 19:36:19,850 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 19:36:19,899 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 19:36:20,216 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 19:36:20,216 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 19:36:20,216 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [12] imperfect sequences [] total 12
[2020-11-24 19:36:20,217 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 19:36:20,217 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 12 interpolants.
[2020-11-24 19:36:20,217 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=25, Invalid=107, Unknown=0, NotChecked=0, Total=132
[2020-11-24 19:36:20,217 INFO  L87              Difference]: Start difference. First operand 142 states and 144 transitions. cyclomatic complexity: 3 Second operand 12 states.
[2020-11-24 19:36:20,415 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 19:36:20,415 INFO  L93              Difference]: Finished difference Result 141 states and 142 transitions.
[2020-11-24 19:36:20,415 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 10 states. 
[2020-11-24 19:36:20,415 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 141 states and 142 transitions.
[2020-11-24 19:36:20,416 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 19:36:20,417 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 141 states to 120 states and 121 transitions.
[2020-11-24 19:36:20,417 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 120
[2020-11-24 19:36:20,418 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 120
[2020-11-24 19:36:20,418 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 120 states and 121 transitions.
[2020-11-24 19:36:20,418 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 19:36:20,418 INFO  L728         BuchiCegarLoop]: Abstraction has 120 states and 121 transitions.
[2020-11-24 19:36:20,419 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 120 states and 121 transitions.
[2020-11-24 19:36:20,422 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 120 to 120.
[2020-11-24 19:36:20,422 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 120 states.
[2020-11-24 19:36:20,422 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 120 states to 120 states and 121 transitions.
[2020-11-24 19:36:20,422 INFO  L751         BuchiCegarLoop]: Abstraction has 120 states and 121 transitions.
[2020-11-24 19:36:20,422 INFO  L631         BuchiCegarLoop]: Abstraction has 120 states and 121 transitions.
[2020-11-24 19:36:20,422 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-24 19:36:20,422 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 120 states and 121 transitions.
[2020-11-24 19:36:20,423 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 19:36:20,423 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 19:36:20,423 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 19:36:20,424 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 19:36:20,424 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L3]                 success_transferFrom_StandardToken0 := false;
[L3]                 call_transferFrom_StandardToken0 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L1628]              assume null == 0;
[L1629]  CALL        call this := FreshRefGenerator__success();
[L659]               havoc newRef;
[L660]               assume Alloc[newRef] == false;
[L661]               Alloc[newRef] := true;
[L662]               assume newRef != null;
[L1629]  RET         call this := FreshRefGenerator__success();
[L1630]              assume now >= 0;
[L1631]              assume DType[this] == HumanStandardToken;
[L1632]              assume !revert && gas >= 0;
[L1633]  CALL        call CorralChoice_HumanStandardToken(this);
[L1539]              havoc msgsender_MSG;
[L1540]              havoc msgvalue_MSG;
[L1541]              havoc choice;
[L1542]              havoc __ret_0_totalSupply;
[L1543]              havoc _owner_s178;
[L1544]              havoc balance_s178;
[L1545]              havoc _to_s108;
[L1546]              havoc _value_s108;
[L1547]              havoc success_s108;
[L1548]              havoc _from_s166;
[L1549]              havoc _to_s166;
[L1550]              havoc _value_s166;
[L1551]              havoc success_s166;
[L1552]              havoc _spender_s206;
[L1553]              havoc _value_s206;
[L1554]              havoc success_s206;
[L1555]              havoc _owner_s222;
[L1556]              havoc _spender_s222;
[L1557]              havoc remaining_s222;
[L1558]              havoc __ret_0_name;
[L1559]              havoc __ret_0_decimals;
[L1560]              havoc __ret_0_symbol;
[L1561]              havoc __ret_0_version;
[L1562]              havoc _initialAmount_s279;
[L1563]              havoc _tokenName_s279;
[L1564]              havoc _decimalUnits_s279;
[L1565]              havoc _tokenSymbol_s279;
[L1566]              havoc _spender_s327;
[L1567]              havoc _value_s327;
[L1568]              havoc _extraData_s327;
[L1569]              havoc success_s327;
[L1570]              havoc tmpNow;
[L1571]              havoc gas;
[L1572]              assume gas > 4000000 && gas <= 8000000;
[L1573]              tmpNow := now;
[L1574]              havoc now;
[L1575]              assume now > tmpNow;
[L1576]              assume msgsender_MSG != null;
[L1577]  COND FALSE  !(choice == 6)
[L1583]  COND FALSE  !(choice == 5)
[L1589]  COND FALSE  !(choice == 4)
[L1596]  COND TRUE   choice == 3
[L1597]              gas := gas - 21000;
[L1598]  COND TRUE   gas >= 0
[L1599]              assume _value_s166 >= 0 && _value_s166 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1600]              assume msgvalue_MSG == 0;
[L1601]  CALL        call success_s166 := transferFrom~address~address~uint256_StandardToken(this, msgsender_MSG, msgvalue_MSG, _from_s166, _to_s166, _value_s166);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != _from_s166 || p2 != msgsender_MSG) && _from_s166 == _to_s166) && _value_s166 <= balances_StandardToken[this][_from_s166]) && _value_s166 <= allowed_StandardToken[this][_from_s166][msgsender_MSG]) && _value_s166 >= 0) && _value_s166 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_StandardToken[this][_to_s166] >= 0) && balances_StandardToken[this][_to_s166] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_StandardToken[this][_from_s166] >= 0) && balances_StandardToken[this][_from_s166] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_StandardToken[this][_from_s166][msgsender_MSG] >= 0) && allowed_StandardToken[this][_from_s166][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_StandardToken0 := true;
[L3]                 call_transferFrom_StandardToken0 := false;
[L3]                 revert := revert_hold;
[L174]               havoc __exception;
[L175]               revert := false;
[L176]   COND TRUE   __exception
[L177]               __tmp__Balance := Balance;
[L178]               __tmp__DType := DType;
[L179]               __tmp__Alloc := Alloc;
[L180]               __tmp__balance_ADDR := balance_ADDR;
[L181]               __tmp__M_Ref_int := M_Ref_int;
[L182]               __tmp__sum_balances0 := sum_balances0;
[L183]               __tmp__alloc_allowed_StandardToken_lvl0 := alloc_allowed_StandardToken_lvl0;
[L184]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L185]               __tmp__sum_allowed1 := sum_allowed1;
[L186]               __tmp__Length := Length;
[L187]               __tmp__now := now;
[L188]               __tmp__totalSupply_Token := totalSupply_Token;
[L189]               __tmp__balances_StandardToken := balances_StandardToken;
[L190]               __tmp__allowed_StandardToken := allowed_StandardToken;
[L191]               __tmp__name_HumanStandardToken := name_HumanStandardToken;
[L192]               __tmp__decimals_HumanStandardToken := decimals_HumanStandardToken;
[L193]               __tmp__symbol_HumanStandardToken := symbol_HumanStandardToken;
[L194]               __tmp__version_HumanStandardToken := version_HumanStandardToken;
[L195]   CALL        call success_s166 := transferFrom~address~address~uint256_StandardToken__fail(this, msgsender_MSG, msgvalue_MSG, _from_s166, _to_s166, _value_s166);
[L712]   COND TRUE   !(__tmp__balances_StandardToken[this][_from_s166] >= _value_s166 && __tmp__allowed_StandardToken[this][_from_s166][msgsender_MSG] >= _value_s166)
[L713]               revert := true;
[L195]   RET         call success_s166 := transferFrom~address~address~uint256_StandardToken__fail(this, msgsender_MSG, msgvalue_MSG, _from_s166, _to_s166, _value_s166);
[L196]               assume revert || gas < 0;
[L1601]  RET         call success_s166 := transferFrom~address~address~uint256_StandardToken(this, msgsender_MSG, msgvalue_MSG, _from_s166, _to_s166, _value_s166);
[L1633]  RET         call CorralChoice_HumanStandardToken(this);

Loop:
[L1633]        assume true;

[2020-11-24 19:36:20,427 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 19:36:20,427 INFO  L82        PathProgramCache]: Analyzing trace with hash -963759375, now seen corresponding path program 1 times
[2020-11-24 19:36:20,428 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 19:36:20,436 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 19:36:20,499 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 19:36:20,499 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 19:36:20,499 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [7] imperfect sequences [] total 7
[2020-11-24 19:36:20,500 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 19:36:20,500 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 7 interpolants.
[2020-11-24 19:36:20,500 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=11, Invalid=31, Unknown=0, NotChecked=0, Total=42
[2020-11-24 19:36:20,501 INFO  L87              Difference]: Start difference. First operand 120 states and 121 transitions. cyclomatic complexity: 2 Second operand 7 states.
[2020-11-24 19:36:20,567 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 19:36:20,567 INFO  L93              Difference]: Finished difference Result 122 states and 122 transitions.
[2020-11-24 19:36:20,568 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 8 states. 
[2020-11-24 19:36:20,568 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 122 states and 122 transitions.
[2020-11-24 19:36:20,569 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 19:36:20,570 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 122 states to 119 states and 119 transitions.
[2020-11-24 19:36:20,570 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 119
[2020-11-24 19:36:20,570 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 119
[2020-11-24 19:36:20,570 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 119 states and 119 transitions.
[2020-11-24 19:36:20,571 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 19:36:20,571 INFO  L728         BuchiCegarLoop]: Abstraction has 119 states and 119 transitions.
[2020-11-24 19:36:20,571 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 119 states and 119 transitions.
[2020-11-24 19:36:20,573 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 119 to 119.
[2020-11-24 19:36:20,574 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 119 states.
[2020-11-24 19:36:20,574 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 119 states to 119 states and 119 transitions.
[2020-11-24 19:36:20,575 INFO  L751         BuchiCegarLoop]: Abstraction has 119 states and 119 transitions.
[2020-11-24 19:36:20,575 INFO  L631         BuchiCegarLoop]: Abstraction has 119 states and 119 transitions.
[2020-11-24 19:36:20,575 INFO  L445         BuchiCegarLoop]: ======== Iteration 5============
[2020-11-24 19:36:20,575 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 119 states and 119 transitions.
[2020-11-24 19:36:20,576 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 19:36:20,576 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 19:36:20,576 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 19:36:20,577 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 19:36:20,577 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L3]                 success_transferFrom_StandardToken0 := false;
[L3]                 call_transferFrom_StandardToken0 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L1628]              assume null == 0;
[L1629]  CALL        call this := FreshRefGenerator__success();
[L659]               havoc newRef;
[L660]               assume Alloc[newRef] == false;
[L661]               Alloc[newRef] := true;
[L662]               assume newRef != null;
[L1629]  RET         call this := FreshRefGenerator__success();
[L1630]              assume now >= 0;
[L1631]              assume DType[this] == HumanStandardToken;
[L1632]              assume !revert && gas >= 0;
[L1633]  CALL        call CorralChoice_HumanStandardToken(this);
[L1539]              havoc msgsender_MSG;
[L1540]              havoc msgvalue_MSG;
[L1541]              havoc choice;
[L1542]              havoc __ret_0_totalSupply;
[L1543]              havoc _owner_s178;
[L1544]              havoc balance_s178;
[L1545]              havoc _to_s108;
[L1546]              havoc _value_s108;
[L1547]              havoc success_s108;
[L1548]              havoc _from_s166;
[L1549]              havoc _to_s166;
[L1550]              havoc _value_s166;
[L1551]              havoc success_s166;
[L1552]              havoc _spender_s206;
[L1553]              havoc _value_s206;
[L1554]              havoc success_s206;
[L1555]              havoc _owner_s222;
[L1556]              havoc _spender_s222;
[L1557]              havoc remaining_s222;
[L1558]              havoc __ret_0_name;
[L1559]              havoc __ret_0_decimals;
[L1560]              havoc __ret_0_symbol;
[L1561]              havoc __ret_0_version;
[L1562]              havoc _initialAmount_s279;
[L1563]              havoc _tokenName_s279;
[L1564]              havoc _decimalUnits_s279;
[L1565]              havoc _tokenSymbol_s279;
[L1566]              havoc _spender_s327;
[L1567]              havoc _value_s327;
[L1568]              havoc _extraData_s327;
[L1569]              havoc success_s327;
[L1570]              havoc tmpNow;
[L1571]              havoc gas;
[L1572]              assume gas > 4000000 && gas <= 8000000;
[L1573]              tmpNow := now;
[L1574]              havoc now;
[L1575]              assume now > tmpNow;
[L1576]              assume msgsender_MSG != null;
[L1577]  COND FALSE  !(choice == 6)
[L1583]  COND FALSE  !(choice == 5)
[L1589]  COND FALSE  !(choice == 4)
[L1596]  COND TRUE   choice == 3
[L1597]              gas := gas - 21000;
[L1598]  COND TRUE   gas >= 0
[L1599]              assume _value_s166 >= 0 && _value_s166 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1600]              assume msgvalue_MSG == 0;
[L1601]  CALL        call success_s166 := transferFrom~address~address~uint256_StandardToken(this, msgsender_MSG, msgvalue_MSG, _from_s166, _to_s166, _value_s166);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != _from_s166 || p2 != msgsender_MSG) && _from_s166 == _to_s166) && _value_s166 <= balances_StandardToken[this][_from_s166]) && _value_s166 <= allowed_StandardToken[this][_from_s166][msgsender_MSG]) && _value_s166 >= 0) && _value_s166 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_StandardToken[this][_to_s166] >= 0) && balances_StandardToken[this][_to_s166] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_StandardToken[this][_from_s166] >= 0) && balances_StandardToken[this][_from_s166] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_StandardToken[this][_from_s166][msgsender_MSG] >= 0) && allowed_StandardToken[this][_from_s166][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_StandardToken0 := true;
[L3]                 call_transferFrom_StandardToken0 := false;
[L3]                 revert := revert_hold;
[L174]               havoc __exception;
[L175]               revert := false;
[L176]   COND TRUE   __exception
[L177]               __tmp__Balance := Balance;
[L178]               __tmp__DType := DType;
[L179]               __tmp__Alloc := Alloc;
[L180]               __tmp__balance_ADDR := balance_ADDR;
[L181]               __tmp__M_Ref_int := M_Ref_int;
[L182]               __tmp__sum_balances0 := sum_balances0;
[L183]               __tmp__alloc_allowed_StandardToken_lvl0 := alloc_allowed_StandardToken_lvl0;
[L184]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L185]               __tmp__sum_allowed1 := sum_allowed1;
[L186]               __tmp__Length := Length;
[L187]               __tmp__now := now;
[L188]               __tmp__totalSupply_Token := totalSupply_Token;
[L189]               __tmp__balances_StandardToken := balances_StandardToken;
[L190]               __tmp__allowed_StandardToken := allowed_StandardToken;
[L191]               __tmp__name_HumanStandardToken := name_HumanStandardToken;
[L192]               __tmp__decimals_HumanStandardToken := decimals_HumanStandardToken;
[L193]               __tmp__symbol_HumanStandardToken := symbol_HumanStandardToken;
[L194]               __tmp__version_HumanStandardToken := version_HumanStandardToken;
[L195]   CALL        call success_s166 := transferFrom~address~address~uint256_StandardToken__fail(this, msgsender_MSG, msgvalue_MSG, _from_s166, _to_s166, _value_s166);
[L712]   COND FALSE  !(!(__tmp__balances_StandardToken[this][_from_s166] >= _value_s166 && __tmp__allowed_StandardToken[this][_from_s166][msgsender_MSG] >= _value_s166))
[L716]               __tmp__sum_balances0[this] := __tmp__sum_balances0[this] - __tmp__balances_StandardToken[this][_to_s166];
[L717]               __tmp__balances_StandardToken[this][_to_s166] := (__tmp__balances_StandardToken[this][_to_s166] + _value_s166) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L718]               __tmp__sum_balances0[this] := __tmp__sum_balances0[this] + __tmp__balances_StandardToken[this][_to_s166];
[L719]               __tmp__sum_balances0[this] := __tmp__sum_balances0[this] - __tmp__balances_StandardToken[this][_from_s166];
[L720]               __tmp__balances_StandardToken[this][_from_s166] := (__tmp__balances_StandardToken[this][_from_s166] - _value_s166) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L721]               __tmp__sum_balances0[this] := __tmp__sum_balances0[this] + __tmp__balances_StandardToken[this][_from_s166];
[L722]               __tmp__sum_allowed1[_from_s166] := __tmp__sum_allowed1[_from_s166] - __tmp__allowed_StandardToken[this][_from_s166][msgsender_MSG];
[L723]               __tmp__allowed_StandardToken[this][_from_s166][msgsender_MSG] := (__tmp__allowed_StandardToken[this][_from_s166][msgsender_MSG] - _value_s166) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L724]               __tmp__sum_allowed1[_from_s166] := __tmp__sum_allowed1[_from_s166] + __tmp__allowed_StandardToken[this][_from_s166][msgsender_MSG];
[L725]               success_s166 := true;
[L195]   RET         call success_s166 := transferFrom~address~address~uint256_StandardToken__fail(this, msgsender_MSG, msgvalue_MSG, _from_s166, _to_s166, _value_s166);
[L196]               assume revert || gas < 0;
[L1601]  RET         call success_s166 := transferFrom~address~address~uint256_StandardToken(this, msgsender_MSG, msgvalue_MSG, _from_s166, _to_s166, _value_s166);
[L1633]  RET         call CorralChoice_HumanStandardToken(this);

Loop:
[L1633]        assume true;

[2020-11-24 19:36:20,579 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 19:36:20,580 INFO  L82        PathProgramCache]: Analyzing trace with hash 368784325, now seen corresponding path program 1 times
[2020-11-24 19:36:20,580 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 19:36:20,591 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 19:36:20,621 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 19:36:20,621 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 19:36:20,621 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [6] imperfect sequences [] total 6
[2020-11-24 19:36:20,621 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 19:36:20,622 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 6 interpolants.
[2020-11-24 19:36:20,622 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=10, Invalid=20, Unknown=0, NotChecked=0, Total=30
[2020-11-24 19:36:20,622 INFO  L87              Difference]: Start difference. First operand 119 states and 119 transitions. cyclomatic complexity: 1 Second operand 6 states.
[2020-11-24 19:36:20,635 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 19:36:20,635 INFO  L93              Difference]: Finished difference Result 112 states and 111 transitions.
[2020-11-24 19:36:20,635 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 6 states. 
[2020-11-24 19:36:20,636 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 112 states and 111 transitions.
[2020-11-24 19:36:20,637 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-24 19:36:20,637 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 112 states to 0 states and 0 transitions.
[2020-11-24 19:36:20,637 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 0
[2020-11-24 19:36:20,637 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 0
[2020-11-24 19:36:20,637 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 0 states and 0 transitions.
[2020-11-24 19:36:20,637 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 19:36:20,637 INFO  L728         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-24 19:36:20,637 INFO  L751         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-24 19:36:20,637 INFO  L631         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-24 19:36:20,637 INFO  L445         BuchiCegarLoop]: ======== Iteration 6============
[2020-11-24 19:36:20,637 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 0 states and 0 transitions.
[2020-11-24 19:36:20,638 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-24 19:36:20,638 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is true
[2020-11-24 19:36:20,642 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 24.11 07:36:20 BasicIcfg
[2020-11-24 19:36:20,642 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-24 19:36:20,642 INFO  L168              Benchmark]: Toolchain (without parser) took 2920.49 ms. Allocated memory was 1.0 GB in the beginning and 1.3 GB in the end (delta: 234.9 MB). Free memory was 940.6 MB in the beginning and 863.2 MB in the end (delta: 77.3 MB). Peak memory consumption was 312.2 MB. Max. memory is 15.3 GB.
[2020-11-24 19:36:20,644 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.20 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-24 19:36:20,644 INFO  L168              Benchmark]: Boogie Preprocessor took 73.26 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 935.2 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-24 19:36:20,645 INFO  L168              Benchmark]: UtopiaSpecLang took 53.30 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 929.8 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-24 19:36:20,645 INFO  L168              Benchmark]: Boogie Printer took 14.61 ms. Allocated memory is still 1.0 GB. Free memory is still 929.8 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-24 19:36:20,645 INFO  L168              Benchmark]: RCFGBuilder took 529.20 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 886.9 MB in the end (delta: 43.0 MB). Peak memory consumption was 43.0 MB. Max. memory is 15.3 GB.
[2020-11-24 19:36:20,646 INFO  L168              Benchmark]: UtopiaLTL2Aut took 39.54 ms. Allocated memory is still 1.0 GB. Free memory was 886.9 MB in the beginning and 877.9 MB in the end (delta: 8.9 MB). Peak memory consumption was 8.9 MB. Max. memory is 15.3 GB.
[2020-11-24 19:36:20,646 INFO  L168              Benchmark]: BÃ¼chi Program Product took 889.87 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 62.4 MB). Free memory was 877.9 MB in the beginning and 976.6 MB in the end (delta: -98.7 MB). Peak memory consumption was 160.5 MB. Max. memory is 15.3 GB.
[2020-11-24 19:36:20,647 INFO  L168              Benchmark]: BlockEncodingV2 took 60.94 ms. Allocated memory is still 1.1 GB. Free memory was 976.6 MB in the beginning and 944.0 MB in the end (delta: 32.6 MB). Peak memory consumption was 32.6 MB. Max. memory is 15.3 GB.
[2020-11-24 19:36:20,647 INFO  L168              Benchmark]: BuchiAutomizer took 1256.70 ms. Allocated memory was 1.1 GB in the beginning and 1.3 GB in the end (delta: 172.5 MB). Free memory was 944.0 MB in the beginning and 863.2 MB in the end (delta: 80.8 MB). Peak memory consumption was 253.3 MB. Max. memory is 15.3 GB.
[2020-11-24 19:36:20,650 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    1240 locations, 2155 edges
  - StatisticsResult: Encoded RCFG
    1218 locations, 2103 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.20 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 73.26 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 935.2 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 53.30 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 929.8 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 14.61 ms. Allocated memory is still 1.0 GB. Free memory is still 929.8 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * RCFGBuilder took 529.20 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 886.9 MB in the end (delta: 43.0 MB). Peak memory consumption was 43.0 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 39.54 ms. Allocated memory is still 1.0 GB. Free memory was 886.9 MB in the beginning and 877.9 MB in the end (delta: 8.9 MB). Peak memory consumption was 8.9 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 889.87 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 62.4 MB). Free memory was 877.9 MB in the beginning and 976.6 MB in the end (delta: -98.7 MB). Peak memory consumption was 160.5 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 60.94 ms. Allocated memory is still 1.1 GB. Free memory was 976.6 MB in the beginning and 944.0 MB in the end (delta: 32.6 MB). Peak memory consumption was 32.6 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 1256.70 ms. Allocated memory was 1.1 GB in the beginning and 1.3 GB in the end (delta: 172.5 MB). Free memory was 944.0 MB in the beginning and 863.2 MB in the end (delta: 80.8 MB). Peak memory consumption was 253.3 MB. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    531 locations, 662 edges
  - StatisticsResult: BuchiProgram size
    1240 locations, 2155 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 5 terminating modules (5 trivial, 0 deterministic, 0 nondeterministic). 5 modules have a trivial ranking function, the largest among these consists of 12 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 1.2s and 6 iterations.  TraceHistogramMax:1. Analysis of lassos took 0.6s. Construction of modules took 0.2s. BÃ¼chi inclusion checks took 0.2s. Highest rank in rank-based complementation 0. Minimization of det autom 5. Minimization of nondet autom 0. Automata minimization 0.0s AutomataMinimizationTime, 4 MinimizatonAttempts, 11 StatesRemovedByMinimization, 1 NontrivialMinimizations. Non-live state removal took 0.0s Buchi closure took 0.0s. Biggest automaton had 143 states and ocurred in iteration 1.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 983 SDtfs, 959 SDslu, 1632 SDs, 0 SdLazy, 504 SolverSat, 389 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 0.2s Time	LassoAnalysisResults: nont0 unkn0 SFLI0 SFLT0 conc0 concLT0 SILN0 SILU5 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - AllSpecificationsHoldResult: All specifications hold
    Buchi Automizer proved that the LTL property ! ( ( []( (call_transferFrom_StandardToken0) ==> ( <>(success_transferFrom_StandardToken0) ) ) )) holds
RESULT: Ultimate proved your program to be correct!
Received shutdown request...
