This is Ultimate 0.1.24-f1553f5-m
[2020-11-24 17:54:24,781 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-24 17:54:24,782 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-24 17:54:24,795 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-24 17:54:24,795 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-24 17:54:24,796 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-24 17:54:24,797 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-24 17:54:24,799 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-24 17:54:24,801 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-24 17:54:24,801 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-24 17:54:24,802 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-24 17:54:24,803 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-24 17:54:24,803 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-24 17:54:24,804 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-24 17:54:24,805 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-24 17:54:24,806 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-24 17:54:24,807 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-24 17:54:24,808 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-24 17:54:24,810 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-24 17:54:24,811 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-24 17:54:24,812 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-24 17:54:24,813 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-24 17:54:24,815 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-24 17:54:24,816 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-24 17:54:24,816 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-24 17:54:24,816 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-24 17:54:24,817 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-24 17:54:24,817 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-24 17:54:24,818 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-24 17:54:24,818 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-24 17:54:24,818 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-24 17:54:24,819 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-24 17:54:24,820 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-24 17:54:24,820 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-24 17:54:24,821 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-24 17:54:24,821 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-24 17:54:24,822 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-24 17:54:24,822 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-24 17:54:24,822 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-24 17:54:24,823 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-24 17:54:24,823 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-24 17:54:24,824 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-24 17:54:24,832 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-24 17:54:24,832 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-24 17:54:24,833 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-24 17:54:24,833 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-24 17:54:24,833 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-24 17:54:24,833 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-24 17:54:24,834 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-24 17:54:24,834 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-24 17:54:24,834 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-24 17:54:24,834 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-24 17:54:24,834 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-24 17:54:24,834 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-24 17:54:24,834 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-24 17:54:24,834 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-24 17:54:24,835 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-24 17:54:24,835 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-24 17:54:24,835 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-24 17:54:24,835 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-24 17:54:24,835 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-24 17:54:24,835 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-24 17:54:24,835 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-24 17:54:24,835 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-24 17:54:24,836 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-24 17:54:24,836 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-24 17:54:24,836 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-24 17:54:24,836 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-24 17:54:24,858 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-24 17:54:24,870 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-24 17:54:24,872 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-24 17:54:24,873 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-24 17:54:24,874 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-24 17:54:24,874 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/VIToken_0xd321ca7cd7a233483b8cd5a11a89e9337e70df84_transfer-self.bpl
[2020-11-24 17:54:24,874 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/VIToken_0xd321ca7cd7a233483b8cd5a11a89e9337e70df84_transfer-self.bpl'
[2020-11-24 17:54:24,946 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-24 17:54:24,947 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-24 17:54:24,948 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-24 17:54:24,948 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-24 17:54:24,948 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-24 17:54:24,964 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "VIToken_0xd321ca7cd7a233483b8cd5a11a89e9337e70df84_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 05:54:24" (1/1) ...
[2020-11-24 17:54:24,966 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "VIToken_0xd321ca7cd7a233483b8cd5a11a89e9337e70df84_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 05:54:24" (1/1) ...
[2020-11-24 17:54:24,986 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "VIToken_0xd321ca7cd7a233483b8cd5a11a89e9337e70df84_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 05:54:24" (1/1) ...
[2020-11-24 17:54:24,987 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "VIToken_0xd321ca7cd7a233483b8cd5a11a89e9337e70df84_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 05:54:24" (1/1) ...
[2020-11-24 17:54:25,004 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "VIToken_0xd321ca7cd7a233483b8cd5a11a89e9337e70df84_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 05:54:24" (1/1) ...
[2020-11-24 17:54:25,012 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "VIToken_0xd321ca7cd7a233483b8cd5a11a89e9337e70df84_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 05:54:24" (1/1) ...
[2020-11-24 17:54:25,016 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "VIToken_0xd321ca7cd7a233483b8cd5a11a89e9337e70df84_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 05:54:24" (1/1) ...
[2020-11-24 17:54:25,023 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-24 17:54:25,023 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-24 17:54:25,023 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-24 17:54:25,025 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-24 17:54:25,029 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "VIToken_0xd321ca7cd7a233483b8cd5a11a89e9337e70df84_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 05:54:24" (1/1) ...
[2020-11-24 17:54:25,045 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(ERC20.transfer(to, value), msg.sender == to && value <= _balances_ERC20[this][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][to] >= 0 && _balances_ERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][msg.sender] >= 0 &&  _balances_ERC20[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(ERC20.transfer(to, value), return == true && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this]) && _balances_ERC20[this] == old(_balances_ERC20[this]) && _allowances_ERC20[this] == old(_allowances_ERC20[this]) && _cap_ERC20Capped[this] == old(_cap_ERC20Capped[this]) && _minters_MinterRole[this] == old(_minters_MinterRole[this]) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this]) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this]) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]))))
[2020-11-24 17:54:25,049 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(ERC20.transfer(to, value), msg.sender == to && value <= _balances_ERC20[this][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][to] >= 0 && _balances_ERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][msg.sender] >= 0 &&  _balances_ERC20[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(ERC20.transfer(to, value), return == true && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this]) && _balances_ERC20[this] == old(_balances_ERC20[this]) && _allowances_ERC20[this] == old(_allowances_ERC20[this]) && _cap_ERC20Capped[this] == old(_cap_ERC20Capped[this]) && _minters_MinterRole[this] == old(_minters_MinterRole[this]) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this]) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this]) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]))))
[2020-11-24 17:54:25,054 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(ERC20.transfer(to, value), msg.sender == to && value <= _balances_ERC20[this][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][to] >= 0 && _balances_ERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][msg.sender] >= 0 &&  _balances_ERC20[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(ERC20.transfer(to, value), return == true && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this]) && _balances_ERC20[this] == old(_balances_ERC20[this]) && _allowances_ERC20[this] == old(_allowances_ERC20[this]) && _cap_ERC20Capped[this] == old(_cap_ERC20Capped[this]) && _minters_MinterRole[this] == old(_minters_MinterRole[this]) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this]) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this]) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]))))
[2020-11-24 17:54:25,058 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( msg.sender==recipient_s336 && amount_s336<=_balances_ERC20[this][msg.sender] ) && amount_s336>=0 ) && amount_s336<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && _balances_ERC20[this][recipient_s336]>=0 ) && _balances_ERC20[this][recipient_s336]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && _balances_ERC20[this][msg.sender]>=0 ) && _balances_ERC20[this][msg.sender]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>],IdentifierExpression[recipient_s336,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]],BinaryExpression[COMPLEQ,IdentifierExpression[amount_s336,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>],ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]]]],BinaryExpression[COMPGEQ,IdentifierExpression[amount_s336,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>],IntegerLiteral[0]]],BinaryExpression[COMPLT,IdentifierExpression[amount_s336,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],[IdentifierExpression[recipient_s336,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],[IdentifierExpression[recipient_s336,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]]
[2020-11-24 17:54:25,061 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( __ret_0_==true && _totalSupply_ERC20[this]==( old(_totalSupply_ERC20[this]) ) ) && _balances_ERC20[this]==( old(_balances_ERC20[this]) ) ) && _allowances_ERC20[this]==( old(_allowances_ERC20[this]) ) ) && _cap_ERC20Capped[this]==( old(_cap_ERC20Capped[this]) ) ) && _minters_MinterRole[this]==( old(_minters_MinterRole[this]) ) ) && _name_ERC20Detailed[this]==( old(_name_ERC20Detailed[this]) ) ) && _symbol_ERC20Detailed[this]==( old(_symbol_ERC20Detailed[this]) ) ) && _decimals_ERC20Detailed[this]==( old(_decimals_ERC20Detailed[this]) ) ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[__ret_0_,<IMPLEMENTATION_OUTPARAM,transfer~address~uint256_ERC20>],BooleanLiteral[true]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_totalSupply_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_totalSupply_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_allowances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_allowances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_cap_ERC20Capped,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_cap_ERC20Capped,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_minters_MinterRole,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_minters_MinterRole,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_name_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_name_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_symbol_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_symbol_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_decimals_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_decimals_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]]]]]
[2020-11-24 17:54:25,065 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(ERC20.transfer(to, value), msg.sender == to && value <= _balances_ERC20[this][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][to] >= 0 && _balances_ERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][msg.sender] >= 0 &&  _balances_ERC20[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(ERC20.transfer(to, value), return == true && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this]) && _balances_ERC20[this] == old(_balances_ERC20[this]) && _allowances_ERC20[this] == old(_allowances_ERC20[this]) && _cap_ERC20Capped[this] == old(_cap_ERC20Capped[this]) && _minters_MinterRole[this] == old(_minters_MinterRole[this]) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this]) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this]) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]))))
[2020-11-24 17:54:25,065 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_transfer_ERC200) ==> ( <>AP(success_transfer_ERC200) ) ) )
Executed UtopiaSpecLang
[2020-11-24 17:54:25,071 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 05:54:25 PropertyContainer
[2020-11-24 17:54:25,072 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-24 17:54:25,072 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-24 17:54:25,072 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-24 17:54:25,072 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-24 17:54:25,073 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "VIToken_0xd321ca7cd7a233483b8cd5a11a89e9337e70df84_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 05:54:24" (1/2) ...
[2020-11-24 17:54:25,073 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-24 17:54:25,073 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-24 17:54:25,085 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 05:54:25" (2/2) ...
[2020-11-24 17:54:25,085 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-24 17:54:25,086 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-24 17:54:25,086 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-24 17:54:25,086 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-24 17:54:25,086 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "VIToken_0xd321ca7cd7a233483b8cd5a11a89e9337e70df84_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 05:54:24" (1/2) ...
[2020-11-24 17:54:25,137 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-24 17:54:25,137 INFO  L130     BoogieDeclarations]: Found specification of procedure Roles.Role_ctor__success
[2020-11-24 17:54:25,137 INFO  L130     BoogieDeclarations]: Found specification of procedure _msgSender_Context__success
[2020-11-24 17:54:25,137 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__success
[2020-11-24 17:54:25,137 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256~string_SafeMath__success
[2020-11-24 17:54:25,137 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20
[2020-11-24 17:54:25,138 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ERC20
[2020-11-24 17:54:25,138 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20
[2020-11-24 17:54:25,138 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ERC20
[2020-11-24 17:54:25,138 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20
[2020-11-24 17:54:25,138 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20
[2020-11-24 17:54:25,138 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20
[2020-11-24 17:54:25,138 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ERC20
[2020-11-24 17:54:25,138 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20
[2020-11-24 17:54:25,138 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ERC20
[2020-11-24 17:54:25,138 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20
[2020-11-24 17:54:25,139 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20
[2020-11-24 17:54:25,139 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_ERC20__success
[2020-11-24 17:54:25,139 INFO  L130     BoogieDeclarations]: Found specification of procedure _approve~address~address~uint256_ERC20__success
[2020-11-24 17:54:25,139 INFO  L130     BoogieDeclarations]: Found specification of procedure add~Role~address_Roles__success
[2020-11-24 17:54:25,139 INFO  L130     BoogieDeclarations]: Found specification of procedure has~Role~address_Roles__success
[2020-11-24 17:54:25,139 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-24 17:54:25,139 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-24 17:54:25,139 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-24 17:54:25,139 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyMinter_pre__success
[2020-11-24 17:54:25,140 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_IERC20
[2020-11-24 17:54:25,140 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_IERC20
[2020-11-24 17:54:25,140 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20Detailed
[2020-11-24 17:54:25,140 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20Detailed
[2020-11-24 17:54:25,140 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_Context
[2020-11-24 17:54:25,140 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_Context
[2020-11-24 17:54:25,140 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_SafeMath
[2020-11-24 17:54:25,140 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_SafeMath
[2020-11-24 17:54:25,140 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20
[2020-11-24 17:54:25,140 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20
[2020-11-24 17:54:25,140 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_Roles
[2020-11-24 17:54:25,140 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_Roles
[2020-11-24 17:54:25,140 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_MinterRole
[2020-11-24 17:54:25,140 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_MinterRole
[2020-11-24 17:54:25,141 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20Mintable
[2020-11-24 17:54:25,141 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20Mintable
[2020-11-24 17:54:25,141 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20Capped
[2020-11-24 17:54:25,141 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20Capped
[2020-11-24 17:54:25,141 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_VIToken
[2020-11-24 17:54:25,141 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-24 17:54:25,141 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-24 17:54:25,141 INFO  L130     BoogieDeclarations]: Found specification of procedure Roles.Role_ctor__fail
[2020-11-24 17:54:25,141 INFO  L130     BoogieDeclarations]: Found specification of procedure _msgSender_Context__fail
[2020-11-24 17:54:25,141 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__fail
[2020-11-24 17:54:25,141 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256~string_SafeMath__fail
[2020-11-24 17:54:25,141 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20__success
[2020-11-24 17:54:25,141 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20__fail
[2020-11-24 17:54:25,141 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20__success
[2020-11-24 17:54:25,142 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20__fail
[2020-11-24 17:54:25,142 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20__success
[2020-11-24 17:54:25,142 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20__fail
[2020-11-24 17:54:25,142 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20__success
[2020-11-24 17:54:25,142 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20__fail
[2020-11-24 17:54:25,142 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20__success
[2020-11-24 17:54:25,142 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20__fail
[2020-11-24 17:54:25,142 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20__success
[2020-11-24 17:54:25,142 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20__fail
[2020-11-24 17:54:25,142 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_ERC20__fail
[2020-11-24 17:54:25,142 INFO  L130     BoogieDeclarations]: Found specification of procedure _approve~address~address~uint256_ERC20__fail
[2020-11-24 17:54:25,142 INFO  L130     BoogieDeclarations]: Found specification of procedure add~Role~address_Roles__fail
[2020-11-24 17:54:25,143 INFO  L130     BoogieDeclarations]: Found specification of procedure has~Role~address_Roles__fail
[2020-11-24 17:54:25,143 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-24 17:54:25,143 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-24 17:54:25,143 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-24 17:54:25,143 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyMinter_pre__fail
[2020-11-24 17:54:25,143 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-24 17:54:25,143 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-24 17:54:25,143 INFO  L138     BoogieDeclarations]: Found implementation of procedure Roles.Role_ctor__fail
[2020-11-24 17:54:25,143 INFO  L138     BoogieDeclarations]: Found implementation of procedure Roles.Role_ctor__success
[2020-11-24 17:54:25,143 INFO  L138     BoogieDeclarations]: Found implementation of procedure _msgSender_Context__fail
[2020-11-24 17:54:25,143 INFO  L138     BoogieDeclarations]: Found implementation of procedure _msgSender_Context__success
[2020-11-24 17:54:25,143 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__fail
[2020-11-24 17:54:25,143 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__success
[2020-11-24 17:54:25,144 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256~string_SafeMath__fail
[2020-11-24 17:54:25,144 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256~string_SafeMath__success
[2020-11-24 17:54:25,144 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ERC20__fail
[2020-11-24 17:54:25,144 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ERC20__success
[2020-11-24 17:54:25,144 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ERC20__fail
[2020-11-24 17:54:25,144 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ERC20__success
[2020-11-24 17:54:25,144 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20__fail
[2020-11-24 17:54:25,144 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20__success
[2020-11-24 17:54:25,144 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ERC20__fail
[2020-11-24 17:54:25,144 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ERC20__success
[2020-11-24 17:54:25,144 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ERC20__fail
[2020-11-24 17:54:25,144 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ERC20__success
[2020-11-24 17:54:25,145 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20__fail
[2020-11-24 17:54:25,145 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20__success
[2020-11-24 17:54:25,145 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_ERC20__fail
[2020-11-24 17:54:25,145 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_ERC20__success
[2020-11-24 17:54:25,145 INFO  L138     BoogieDeclarations]: Found implementation of procedure _approve~address~address~uint256_ERC20__fail
[2020-11-24 17:54:25,145 INFO  L138     BoogieDeclarations]: Found implementation of procedure _approve~address~address~uint256_ERC20__success
[2020-11-24 17:54:25,145 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~Role~address_Roles__fail
[2020-11-24 17:54:25,145 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~Role~address_Roles__success
[2020-11-24 17:54:25,145 INFO  L138     BoogieDeclarations]: Found implementation of procedure has~Role~address_Roles__fail
[2020-11-24 17:54:25,145 INFO  L138     BoogieDeclarations]: Found implementation of procedure has~Role~address_Roles__success
[2020-11-24 17:54:25,145 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-24 17:54:25,145 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-24 17:54:25,145 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-24 17:54:25,146 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-24 17:54:25,146 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-24 17:54:25,146 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-24 17:54:25,146 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyMinter_pre__fail
[2020-11-24 17:54:25,146 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyMinter_pre__success
[2020-11-24 17:54:25,146 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_IERC20
[2020-11-24 17:54:25,146 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_IERC20
[2020-11-24 17:54:25,146 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20Detailed
[2020-11-24 17:54:25,146 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20Detailed
[2020-11-24 17:54:25,146 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_Context
[2020-11-24 17:54:25,146 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_Context
[2020-11-24 17:54:25,146 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_SafeMath
[2020-11-24 17:54:25,146 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_SafeMath
[2020-11-24 17:54:25,147 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20
[2020-11-24 17:54:25,147 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20
[2020-11-24 17:54:25,147 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_Roles
[2020-11-24 17:54:25,147 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_Roles
[2020-11-24 17:54:25,147 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_MinterRole
[2020-11-24 17:54:25,147 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_MinterRole
[2020-11-24 17:54:25,147 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20Mintable
[2020-11-24 17:54:25,147 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20Mintable
[2020-11-24 17:54:25,147 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20Capped
[2020-11-24 17:54:25,147 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20Capped
[2020-11-24 17:54:25,147 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_VIToken
[2020-11-24 17:54:25,147 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-24 17:54:25,148 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-24 17:54:25,148 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-24 17:54:25,441 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 17:54:25,441 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 17:54:25,442 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 17:54:25,863 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-24 17:54:25,863 INFO  L286             CfgBuilder]: Removed 10 assue(true) statements.
[2020-11-24 17:54:25,866 INFO  L202        PluginConnector]: Adding new model VIToken_0xd321ca7cd7a233483b8cd5a11a89e9337e70df84_transfer-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 05:54:25 BoogieIcfgContainer
[2020-11-24 17:54:25,866 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 05:54:25" (2/2) ...
[2020-11-24 17:54:25,866 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-24 17:54:25,866 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@7b7c8be7 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 05:54:25, skipping insertion in model container
[2020-11-24 17:54:25,867 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-24 17:54:25,867 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-24 17:54:25,867 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-24 17:54:25,868 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-24 17:54:25,869 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "VIToken_0xd321ca7cd7a233483b8cd5a11a89e9337e70df84_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 05:54:24" (1/3) ...
[2020-11-24 17:54:25,869 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@4fa8330c and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 05:54:25, skipping insertion in model container
[2020-11-24 17:54:25,869 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 05:54:25" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-24 17:54:25,908 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 05:54:25 NWAContainer
[2020-11-24 17:54:25,908 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-24 17:54:25,908 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-24 17:54:25,908 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-24 17:54:25,909 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-24 17:54:25,910 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "VIToken_0xd321ca7cd7a233483b8cd5a11a89e9337e70df84_transfer-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 05:54:25" (3/4) ...
[2020-11-24 17:54:25,911 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@d3fb0f0 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 05:54:25, skipping insertion in model container
[2020-11-24 17:54:25,911 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 05:54:25" (4/4) ...
[2020-11-24 17:54:25,914 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-24 17:54:25,918 INFO  L110   BuchiProductObserver]: Initial RCFG 1124 locations, 1629 edges
[2020-11-24 17:54:25,918 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-24 17:54:25,930 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-24 17:54:27,317 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-24 17:54:27,323 INFO  L110   BuchiProductObserver]: BuchiProgram size 2836 locations, 5337 edges
[2020-11-24 17:54:27,323 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 05:54:27 BoogieIcfgContainer
[2020-11-24 17:54:27,323 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-24 17:54:27,323 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-24 17:54:27,323 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-24 17:54:27,325 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-24 17:54:27,325 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 05:54:27" (1/1) ...
[2020-11-24 17:54:27,376 WARN  L196         IcfgDuplicator]: Creating raw copy for unreachable call because return is reachable in graph view: call __var_12 := has~Role~address_Roles__success(this, msgsender_MSG, msgvalue_MSG, role_s710, account_s710);
[2020-11-24 17:54:27,378 WARN  L196         IcfgDuplicator]: Creating raw copy for unreachable call because return is reachable in graph view: call __var_12 := has~Role~address_Roles__fail(this, msgsender_MSG, msgvalue_MSG, role_s710, account_s710);
[2020-11-24 17:54:27,383 INFO  L313           BlockEncoder]: Initial Icfg 2836 locations, 5337 edges
[2020-11-24 17:54:27,384 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-24 17:54:27,384 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-24 17:54:27,384 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-24 17:54:27,384 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-24 17:54:27,393 INFO  L70    emoveInfeasibleEdges]: Removed 120 edges and 23 locations because of local infeasibility
[2020-11-24 17:54:27,399 INFO  L70        RemoveSinkStates]: Removed 50 edges and 33 locations by removing sink states
[2020-11-24 17:54:27,408 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-24 17:54:27,413 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-24 17:54:27,420 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-24 17:54:27,421 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-24 17:54:27,427 INFO  L313           BlockEncoder]: Encoded RCFG 2756 locations, 5132 edges
[2020-11-24 17:54:27,428 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 24.11 05:54:27 BasicIcfg
[2020-11-24 17:54:27,428 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-24 17:54:27,428 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-24 17:54:27,428 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-24 17:54:27,431 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-24 17:54:27,431 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 17:54:27,431 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "VIToken_0xd321ca7cd7a233483b8cd5a11a89e9337e70df84_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 05:54:24" (1/6) ...
[2020-11-24 17:54:27,433 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@3bf002d3 and model type VIToken_0xd321ca7cd7a233483b8cd5a11a89e9337e70df84_transfer-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 24.11 05:54:27, skipping insertion in model container
[2020-11-24 17:54:27,433 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 17:54:27,433 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 05:54:25" (2/6) ...
[2020-11-24 17:54:27,433 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@3bf002d3 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 24.11 05:54:27, skipping insertion in model container
[2020-11-24 17:54:27,433 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 17:54:27,433 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "VIToken_0xd321ca7cd7a233483b8cd5a11a89e9337e70df84_transfer-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 05:54:25" (3/6) ...
[2020-11-24 17:54:27,433 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@3bf002d3 and model type VIToken_0xd321ca7cd7a233483b8cd5a11a89e9337e70df84_transfer-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 24.11 05:54:27, skipping insertion in model container
[2020-11-24 17:54:27,434 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 17:54:27,434 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 05:54:25" (4/6) ...
[2020-11-24 17:54:27,434 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@3bf002d3 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 24.11 05:54:27, skipping insertion in model container
[2020-11-24 17:54:27,434 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 17:54:27,434 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 05:54:27" (5/6) ...
[2020-11-24 17:54:27,434 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@3bf002d3 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 24.11 05:54:27, skipping insertion in model container
[2020-11-24 17:54:27,434 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 17:54:27,434 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 24.11 05:54:27" (6/6) ...
[2020-11-24 17:54:27,435 INFO  L404   chiAutomizerObserver]: Analyzing ICFG VIToken_0xd321ca7cd7a233483b8cd5a11a89e9337e70df84_transfer-self.bpl_BEv2
[2020-11-24 17:54:27,472 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-24 17:54:27,473 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-24 17:54:27,473 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-24 17:54:27,473 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-24 17:54:27,473 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-24 17:54:27,473 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-24 17:54:27,473 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-24 17:54:27,473 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-24 17:54:27,473 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-24 17:54:27,506 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2756 states.
[2020-11-24 17:54:27,551 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 17:54:27,551 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 17:54:27,551 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 17:54:27,560 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 17:54:27,560 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
[2020-11-24 17:54:27,560 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-24 17:54:27,560 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2756 states.
[2020-11-24 17:54:27,575 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 17:54:27,575 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 17:54:27,575 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 17:54:27,578 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 17:54:27,578 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L2]                 success_transfer_ERC200 := false;
[L2]                 call_transfer_ERC200 := false;
[L2]     CALL        call main();
[L3237]              assume null == 0;
[L3238]  CALL        call this := FreshRefGenerator__success();
[L958]               havoc newRef;
[L959]               assume Alloc[newRef] == false;
[L960]               Alloc[newRef] := true;
[L961]               assume newRef != null;
[L3238]  RET         call this := FreshRefGenerator__success();
[L3239]              assume now >= 0;
[L3240]              assume DType[this] == VIToken;
[L3241]              assume !revert && gas >= 0;
[L3242]  CALL        call CorralChoice_VIToken(this);
[L3142]              havoc msgsender_MSG;
[L3143]              havoc msgvalue_MSG;
[L3144]              havoc choice;
[L3145]              havoc __ret_0_totalSupply;
[L3146]              havoc account_s317;
[L3147]              havoc __ret_0_balanceOf;
[L3148]              havoc recipient_s336;
[L3149]              havoc amount_s336;
[L3150]              havoc __ret_0_transfer;
[L3151]              havoc owner_s352;
[L3152]              havoc spender_s352;
[L3153]              havoc __ret_0_allowance;
[L3154]              havoc spender_s371;
[L3155]              havoc amount_s371;
[L3156]              havoc __ret_0_approve;
[L3157]              havoc sender_s407;
[L3158]              havoc recipient_s407;
[L3159]              havoc amount_s407;
[L3160]              havoc __ret_0_transferFrom;
[L3161]              havoc name_s99;
[L3162]              havoc symbol_s99;
[L3163]              havoc decimals_s99;
[L3164]              havoc __ret_0_name;
[L3165]              havoc __ret_0_symbol;
[L3166]              havoc __ret_0_decimals;
[L3167]              havoc spender_s434;
[L3168]              havoc addedValue_s434;
[L3169]              havoc __ret_0_increaseAllowance;
[L3170]              havoc spender_s462;
[L3171]              havoc subtractedValue_s462;
[L3172]              havoc __ret_0_decreaseAllowance;
[L3173]              havoc account_s809;
[L3174]              havoc __ret_0_isMinter;
[L3175]              havoc account_s821;
[L3176]              havoc account_s887;
[L3177]              havoc amount_s887;
[L3178]              havoc __ret_0_mint;
[L3179]              havoc cap_s910;
[L3180]              havoc __ret_0_cap;
[L3181]              havoc __ret_0_DECIMALS;
[L3182]              havoc __ret_0_INITIAL_SUPPLY;
[L3183]              havoc tmpNow;
[L3184]              havoc gas;
[L3185]              assume gas > 4000000 && gas <= 8000000;
[L3186]              tmpNow := now;
[L3187]              havoc now;
[L3188]              assume now > tmpNow;
[L3189]              assume msgsender_MSG != null;
[L3190]  COND TRUE   choice == 6
[L3191]              gas := gas - 21000;
[L3192]  COND FALSE  !(gas >= 0)
[L3242]  RET         call CorralChoice_VIToken(this);

Loop:
[L3242]        assume true;

[2020-11-24 17:54:27,595 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 17:54:27,595 INFO  L82        PathProgramCache]: Analyzing trace with hash -1269628073, now seen corresponding path program 1 times
[2020-11-24 17:54:27,599 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 17:54:27,615 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 17:54:27,664 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 17:54:27,666 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 17:54:27,666 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-24 17:54:27,669 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 17:54:27,677 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-24 17:54:27,678 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-24 17:54:27,802 INFO  L87              Difference]: Start difference. First operand 2756 states. Second operand 4 states.
[2020-11-24 17:54:28,057 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 17:54:28,057 INFO  L93              Difference]: Finished difference Result 1020 states and 1284 transitions.
[2020-11-24 17:54:28,057 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-24 17:54:28,058 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 1020 states and 1284 transitions.
[2020-11-24 17:54:28,064 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 17:54:28,070 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 1020 states to 288 states and 341 transitions.
[2020-11-24 17:54:28,071 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 4
[2020-11-24 17:54:28,072 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 288
[2020-11-24 17:54:28,072 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 288 states and 341 transitions.
[2020-11-24 17:54:28,074 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 17:54:28,075 INFO  L728         BuchiCegarLoop]: Abstraction has 288 states and 341 transitions.
[2020-11-24 17:54:28,089 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 288 states and 341 transitions.
[2020-11-24 17:54:28,103 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 288 to 288.
[2020-11-24 17:54:28,103 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 288 states.
[2020-11-24 17:54:28,104 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 288 states to 288 states and 341 transitions.
[2020-11-24 17:54:28,105 INFO  L751         BuchiCegarLoop]: Abstraction has 288 states and 341 transitions.
[2020-11-24 17:54:28,106 INFO  L631         BuchiCegarLoop]: Abstraction has 288 states and 341 transitions.
[2020-11-24 17:54:28,106 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-24 17:54:28,106 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 288 states and 341 transitions.
[2020-11-24 17:54:28,108 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 17:54:28,108 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 17:54:28,108 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 17:54:28,109 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 17:54:28,109 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L2]                 success_transfer_ERC200 := false;
[L2]                 call_transfer_ERC200 := false;
[L2]     CALL        call main();
[L3237]              assume null == 0;
[L3238]  CALL        call this := FreshRefGenerator__success();
[L958]               havoc newRef;
[L959]               assume Alloc[newRef] == false;
[L960]               Alloc[newRef] := true;
[L961]               assume newRef != null;
[L3238]  RET         call this := FreshRefGenerator__success();
[L3239]              assume now >= 0;
[L3240]              assume DType[this] == VIToken;
[L3241]              assume !revert && gas >= 0;
[L3242]  CALL        call CorralChoice_VIToken(this);
[L3142]              havoc msgsender_MSG;
[L3143]              havoc msgvalue_MSG;
[L3144]              havoc choice;
[L3145]              havoc __ret_0_totalSupply;
[L3146]              havoc account_s317;
[L3147]              havoc __ret_0_balanceOf;
[L3148]              havoc recipient_s336;
[L3149]              havoc amount_s336;
[L3150]              havoc __ret_0_transfer;
[L3151]              havoc owner_s352;
[L3152]              havoc spender_s352;
[L3153]              havoc __ret_0_allowance;
[L3154]              havoc spender_s371;
[L3155]              havoc amount_s371;
[L3156]              havoc __ret_0_approve;
[L3157]              havoc sender_s407;
[L3158]              havoc recipient_s407;
[L3159]              havoc amount_s407;
[L3160]              havoc __ret_0_transferFrom;
[L3161]              havoc name_s99;
[L3162]              havoc symbol_s99;
[L3163]              havoc decimals_s99;
[L3164]              havoc __ret_0_name;
[L3165]              havoc __ret_0_symbol;
[L3166]              havoc __ret_0_decimals;
[L3167]              havoc spender_s434;
[L3168]              havoc addedValue_s434;
[L3169]              havoc __ret_0_increaseAllowance;
[L3170]              havoc spender_s462;
[L3171]              havoc subtractedValue_s462;
[L3172]              havoc __ret_0_decreaseAllowance;
[L3173]              havoc account_s809;
[L3174]              havoc __ret_0_isMinter;
[L3175]              havoc account_s821;
[L3176]              havoc account_s887;
[L3177]              havoc amount_s887;
[L3178]              havoc __ret_0_mint;
[L3179]              havoc cap_s910;
[L3180]              havoc __ret_0_cap;
[L3181]              havoc __ret_0_DECIMALS;
[L3182]              havoc __ret_0_INITIAL_SUPPLY;
[L3183]              havoc tmpNow;
[L3184]              havoc gas;
[L3185]              assume gas > 4000000 && gas <= 8000000;
[L3186]              tmpNow := now;
[L3187]              havoc now;
[L3188]              assume now > tmpNow;
[L3189]              assume msgsender_MSG != null;
[L3190]  COND FALSE  !(choice == 6)
[L3196]  COND FALSE  !(choice == 5)
[L3202]  COND TRUE   choice == 4
[L3203]              gas := gas - 21000;
[L3204]  COND TRUE   gas >= 0
[L3205]              assume amount_s336 >= 0 && amount_s336 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3206]              assume msgvalue_MSG == 0;
[L3207]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s336, amount_s336);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == recipient_s336 && amount_s336 <= _balances_ERC20[this][msgsender_MSG]) && amount_s336 >= 0) && amount_s336 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s336] >= 0) && _balances_ERC20[this][recipient_s336] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_ERC200 := true;
[L2]                 call_transfer_ERC200 := false;
[L2]                 revert := revert_hold;
[L222]               havoc __exception;
[L223]               revert := false;
[L224]   COND FALSE  !(__exception)
[L252]   CALL        call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, recipient_s336, amount_s336);
[L1114]  COND TRUE   DType[this] == VIToken
[L1115]  CALL        call __var_1 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L982]               __ret_0_ := msgsender_MSG;
[L1115]  RET         call __var_1 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L1116]  COND TRUE   revert
[L252]   RET         call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, recipient_s336, amount_s336);
[L253]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !((((((((__ret_0_ == true && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _balances_ERC20[this] == old(_balances_ERC20[this])) && _allowances_ERC20[this] == old(_allowances_ERC20[this])) && _cap_ERC20Capped[this] == old(_cap_ERC20Capped[this])) && _minters_MinterRole[this] == old(_minters_MinterRole[this])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]));
[L2]                 revert := revert_hold;
[L3207]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s336, amount_s336);
[L3242]  RET         call CorralChoice_VIToken(this);

Loop:
[L3242]        assume true;

[2020-11-24 17:54:28,112 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 17:54:28,113 INFO  L82        PathProgramCache]: Analyzing trace with hash -1571266973, now seen corresponding path program 1 times
[2020-11-24 17:54:28,114 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 17:54:28,123 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 17:54:28,138 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 17:54:28,138 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 17:54:28,138 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-24 17:54:28,139 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 17:54:28,140 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-24 17:54:28,140 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-24 17:54:28,140 INFO  L87              Difference]: Start difference. First operand 288 states and 341 transitions. cyclomatic complexity: 54 Second operand 3 states.
[2020-11-24 17:54:28,152 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 17:54:28,152 INFO  L93              Difference]: Finished difference Result 339 states and 397 transitions.
[2020-11-24 17:54:28,152 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-24 17:54:28,153 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 339 states and 397 transitions.
[2020-11-24 17:54:28,155 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 2
[2020-11-24 17:54:28,156 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 339 states to 313 states and 355 transitions.
[2020-11-24 17:54:28,157 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 313
[2020-11-24 17:54:28,157 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 313
[2020-11-24 17:54:28,157 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 313 states and 355 transitions.
[2020-11-24 17:54:28,158 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 17:54:28,158 INFO  L728         BuchiCegarLoop]: Abstraction has 313 states and 355 transitions.
[2020-11-24 17:54:28,158 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 313 states and 355 transitions.
[2020-11-24 17:54:28,163 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 313 to 302.
[2020-11-24 17:54:28,163 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 302 states.
[2020-11-24 17:54:28,164 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 302 states to 302 states and 344 transitions.
[2020-11-24 17:54:28,164 INFO  L751         BuchiCegarLoop]: Abstraction has 302 states and 344 transitions.
[2020-11-24 17:54:28,164 INFO  L631         BuchiCegarLoop]: Abstraction has 302 states and 344 transitions.
[2020-11-24 17:54:28,164 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-24 17:54:28,164 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 302 states and 344 transitions.
[2020-11-24 17:54:28,165 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 17:54:28,165 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 17:54:28,165 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 17:54:28,166 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 17:54:28,166 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L2]                 success_transfer_ERC200 := false;
[L2]                 call_transfer_ERC200 := false;
[L2]     CALL        call main();
[L3237]              assume null == 0;
[L3238]  CALL        call this := FreshRefGenerator__success();
[L958]               havoc newRef;
[L959]               assume Alloc[newRef] == false;
[L960]               Alloc[newRef] := true;
[L961]               assume newRef != null;
[L3238]  RET         call this := FreshRefGenerator__success();
[L3239]              assume now >= 0;
[L3240]              assume DType[this] == VIToken;
[L3241]              assume !revert && gas >= 0;
[L3242]  CALL        call CorralChoice_VIToken(this);
[L3142]              havoc msgsender_MSG;
[L3143]              havoc msgvalue_MSG;
[L3144]              havoc choice;
[L3145]              havoc __ret_0_totalSupply;
[L3146]              havoc account_s317;
[L3147]              havoc __ret_0_balanceOf;
[L3148]              havoc recipient_s336;
[L3149]              havoc amount_s336;
[L3150]              havoc __ret_0_transfer;
[L3151]              havoc owner_s352;
[L3152]              havoc spender_s352;
[L3153]              havoc __ret_0_allowance;
[L3154]              havoc spender_s371;
[L3155]              havoc amount_s371;
[L3156]              havoc __ret_0_approve;
[L3157]              havoc sender_s407;
[L3158]              havoc recipient_s407;
[L3159]              havoc amount_s407;
[L3160]              havoc __ret_0_transferFrom;
[L3161]              havoc name_s99;
[L3162]              havoc symbol_s99;
[L3163]              havoc decimals_s99;
[L3164]              havoc __ret_0_name;
[L3165]              havoc __ret_0_symbol;
[L3166]              havoc __ret_0_decimals;
[L3167]              havoc spender_s434;
[L3168]              havoc addedValue_s434;
[L3169]              havoc __ret_0_increaseAllowance;
[L3170]              havoc spender_s462;
[L3171]              havoc subtractedValue_s462;
[L3172]              havoc __ret_0_decreaseAllowance;
[L3173]              havoc account_s809;
[L3174]              havoc __ret_0_isMinter;
[L3175]              havoc account_s821;
[L3176]              havoc account_s887;
[L3177]              havoc amount_s887;
[L3178]              havoc __ret_0_mint;
[L3179]              havoc cap_s910;
[L3180]              havoc __ret_0_cap;
[L3181]              havoc __ret_0_DECIMALS;
[L3182]              havoc __ret_0_INITIAL_SUPPLY;
[L3183]              havoc tmpNow;
[L3184]              havoc gas;
[L3185]              assume gas > 4000000 && gas <= 8000000;
[L3186]              tmpNow := now;
[L3187]              havoc now;
[L3188]              assume now > tmpNow;
[L3189]              assume msgsender_MSG != null;
[L3190]  COND FALSE  !(choice == 6)
[L3196]  COND FALSE  !(choice == 5)
[L3202]  COND TRUE   choice == 4
[L3203]              gas := gas - 21000;
[L3204]  COND TRUE   gas >= 0
[L3205]              assume amount_s336 >= 0 && amount_s336 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3206]              assume msgvalue_MSG == 0;
[L3207]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s336, amount_s336);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == recipient_s336 && amount_s336 <= _balances_ERC20[this][msgsender_MSG]) && amount_s336 >= 0) && amount_s336 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s336] >= 0) && _balances_ERC20[this][recipient_s336] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_ERC200 := true;
[L2]                 call_transfer_ERC200 := false;
[L2]                 revert := revert_hold;
[L222]               havoc __exception;
[L223]               revert := false;
[L224]   COND TRUE   __exception
[L225]               __tmp__Balance := Balance;
[L226]               __tmp__DType := DType;
[L227]               __tmp__Alloc := Alloc;
[L228]               __tmp__balance_ADDR := balance_ADDR;
[L229]               __tmp__M_Ref_int := M_Ref_int;
[L230]               __tmp__sum__balances0 := sum__balances0;
[L231]               __tmp__alloc__allowances_ERC20_lvl0 := alloc__allowances_ERC20_lvl0;
[L232]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L233]               __tmp__sum__allowances1 := sum__allowances1;
[L234]               __tmp__M_Ref_bool := M_Ref_bool;
[L235]               __tmp__sum := sum;
[L236]               __tmp__Length := Length;
[L237]               __tmp__now := now;
[L238]               __tmp___name_ERC20Detailed := _name_ERC20Detailed;
[L239]               __tmp___symbol_ERC20Detailed := _symbol_ERC20Detailed;
[L240]               __tmp___decimals_ERC20Detailed := _decimals_ERC20Detailed;
[L241]               __tmp___balances_ERC20 := _balances_ERC20;
[L242]               __tmp___allowances_ERC20 := _allowances_ERC20;
[L243]               __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L244]               __tmp__bearer_Roles.Role := bearer_Roles.Role;
[L245]               __tmp___minters_MinterRole := _minters_MinterRole;
[L246]               __tmp___cap_ERC20Capped := _cap_ERC20Capped;
[L247]               __tmp__DECIMALS_VIToken := DECIMALS_VIToken;
[L248]               __tmp__INITIAL_SUPPLY_VIToken := INITIAL_SUPPLY_VIToken;
[L249]   CALL        call __ret_0_ := transfer~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, recipient_s336, amount_s336);
[L1061]  COND TRUE   __tmp__DType[this] == VIToken
[L1062]  CALL        call __var_1 := _msgSender_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L976]               __ret_0_ := msgsender_MSG;
[L1062]  RET         call __var_1 := _msgSender_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L1063]  COND TRUE   revert
[L249]   RET         call __ret_0_ := transfer~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, recipient_s336, amount_s336);
[L250]               assume revert || gas < 0;
[L3207]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s336, amount_s336);
[L3242]  RET         call CorralChoice_VIToken(this);

Loop:
[L3242]        assume true;

[2020-11-24 17:54:28,168 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 17:54:28,169 INFO  L82        PathProgramCache]: Analyzing trace with hash -1299637762, now seen corresponding path program 1 times
[2020-11-24 17:54:28,170 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 17:54:28,179 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 17:54:28,198 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 17:54:28,198 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 17:54:28,198 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [5] imperfect sequences [] total 5
[2020-11-24 17:54:28,198 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 17:54:28,199 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 5 interpolants.
[2020-11-24 17:54:28,199 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=9, Invalid=11, Unknown=0, NotChecked=0, Total=20
[2020-11-24 17:54:28,199 INFO  L87              Difference]: Start difference. First operand 302 states and 344 transitions. cyclomatic complexity: 43 Second operand 5 states.
[2020-11-24 17:54:28,236 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 17:54:28,236 INFO  L93              Difference]: Finished difference Result 313 states and 345 transitions.
[2020-11-24 17:54:28,236 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-24 17:54:28,236 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 313 states and 345 transitions.
[2020-11-24 17:54:28,238 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 2
[2020-11-24 17:54:28,240 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 313 states to 313 states and 345 transitions.
[2020-11-24 17:54:28,240 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 313
[2020-11-24 17:54:28,240 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 313
[2020-11-24 17:54:28,240 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 313 states and 345 transitions.
[2020-11-24 17:54:28,240 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 17:54:28,240 INFO  L728         BuchiCegarLoop]: Abstraction has 313 states and 345 transitions.
[2020-11-24 17:54:28,241 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 313 states and 345 transitions.
[2020-11-24 17:54:28,244 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 313 to 302.
[2020-11-24 17:54:28,244 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 302 states.
[2020-11-24 17:54:28,245 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 302 states to 302 states and 334 transitions.
[2020-11-24 17:54:28,245 INFO  L751         BuchiCegarLoop]: Abstraction has 302 states and 334 transitions.
[2020-11-24 17:54:28,245 INFO  L631         BuchiCegarLoop]: Abstraction has 302 states and 334 transitions.
[2020-11-24 17:54:28,245 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-24 17:54:28,245 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 302 states and 334 transitions.
[2020-11-24 17:54:28,246 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 17:54:28,246 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 17:54:28,246 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 17:54:28,247 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 17:54:28,247 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L2]                 success_transfer_ERC200 := false;
[L2]                 call_transfer_ERC200 := false;
[L2]     CALL        call main();
[L3237]              assume null == 0;
[L3238]  CALL        call this := FreshRefGenerator__success();
[L958]               havoc newRef;
[L959]               assume Alloc[newRef] == false;
[L960]               Alloc[newRef] := true;
[L961]               assume newRef != null;
[L3238]  RET         call this := FreshRefGenerator__success();
[L3239]              assume now >= 0;
[L3240]              assume DType[this] == VIToken;
[L3241]              assume !revert && gas >= 0;
[L3242]  CALL        call CorralChoice_VIToken(this);
[L3142]              havoc msgsender_MSG;
[L3143]              havoc msgvalue_MSG;
[L3144]              havoc choice;
[L3145]              havoc __ret_0_totalSupply;
[L3146]              havoc account_s317;
[L3147]              havoc __ret_0_balanceOf;
[L3148]              havoc recipient_s336;
[L3149]              havoc amount_s336;
[L3150]              havoc __ret_0_transfer;
[L3151]              havoc owner_s352;
[L3152]              havoc spender_s352;
[L3153]              havoc __ret_0_allowance;
[L3154]              havoc spender_s371;
[L3155]              havoc amount_s371;
[L3156]              havoc __ret_0_approve;
[L3157]              havoc sender_s407;
[L3158]              havoc recipient_s407;
[L3159]              havoc amount_s407;
[L3160]              havoc __ret_0_transferFrom;
[L3161]              havoc name_s99;
[L3162]              havoc symbol_s99;
[L3163]              havoc decimals_s99;
[L3164]              havoc __ret_0_name;
[L3165]              havoc __ret_0_symbol;
[L3166]              havoc __ret_0_decimals;
[L3167]              havoc spender_s434;
[L3168]              havoc addedValue_s434;
[L3169]              havoc __ret_0_increaseAllowance;
[L3170]              havoc spender_s462;
[L3171]              havoc subtractedValue_s462;
[L3172]              havoc __ret_0_decreaseAllowance;
[L3173]              havoc account_s809;
[L3174]              havoc __ret_0_isMinter;
[L3175]              havoc account_s821;
[L3176]              havoc account_s887;
[L3177]              havoc amount_s887;
[L3178]              havoc __ret_0_mint;
[L3179]              havoc cap_s910;
[L3180]              havoc __ret_0_cap;
[L3181]              havoc __ret_0_DECIMALS;
[L3182]              havoc __ret_0_INITIAL_SUPPLY;
[L3183]              havoc tmpNow;
[L3184]              havoc gas;
[L3185]              assume gas > 4000000 && gas <= 8000000;
[L3186]              tmpNow := now;
[L3187]              havoc now;
[L3188]              assume now > tmpNow;
[L3189]              assume msgsender_MSG != null;
[L3190]  COND FALSE  !(choice == 6)
[L3196]  COND FALSE  !(choice == 5)
[L3202]  COND TRUE   choice == 4
[L3203]              gas := gas - 21000;
[L3204]  COND TRUE   gas >= 0
[L3205]              assume amount_s336 >= 0 && amount_s336 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3206]              assume msgvalue_MSG == 0;
[L3207]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s336, amount_s336);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == recipient_s336 && amount_s336 <= _balances_ERC20[this][msgsender_MSG]) && amount_s336 >= 0) && amount_s336 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s336] >= 0) && _balances_ERC20[this][recipient_s336] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_ERC200 := true;
[L2]                 call_transfer_ERC200 := false;
[L2]                 revert := revert_hold;
[L222]               havoc __exception;
[L223]               revert := false;
[L224]   COND TRUE   __exception
[L225]               __tmp__Balance := Balance;
[L226]               __tmp__DType := DType;
[L227]               __tmp__Alloc := Alloc;
[L228]               __tmp__balance_ADDR := balance_ADDR;
[L229]               __tmp__M_Ref_int := M_Ref_int;
[L230]               __tmp__sum__balances0 := sum__balances0;
[L231]               __tmp__alloc__allowances_ERC20_lvl0 := alloc__allowances_ERC20_lvl0;
[L232]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L233]               __tmp__sum__allowances1 := sum__allowances1;
[L234]               __tmp__M_Ref_bool := M_Ref_bool;
[L235]               __tmp__sum := sum;
[L236]               __tmp__Length := Length;
[L237]               __tmp__now := now;
[L238]               __tmp___name_ERC20Detailed := _name_ERC20Detailed;
[L239]               __tmp___symbol_ERC20Detailed := _symbol_ERC20Detailed;
[L240]               __tmp___decimals_ERC20Detailed := _decimals_ERC20Detailed;
[L241]               __tmp___balances_ERC20 := _balances_ERC20;
[L242]               __tmp___allowances_ERC20 := _allowances_ERC20;
[L243]               __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L244]               __tmp__bearer_Roles.Role := bearer_Roles.Role;
[L245]               __tmp___minters_MinterRole := _minters_MinterRole;
[L246]               __tmp___cap_ERC20Capped := _cap_ERC20Capped;
[L247]               __tmp__DECIMALS_VIToken := DECIMALS_VIToken;
[L248]               __tmp__INITIAL_SUPPLY_VIToken := INITIAL_SUPPLY_VIToken;
[L249]   CALL        call __ret_0_ := transfer~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, recipient_s336, amount_s336);
[L1061]  COND TRUE   __tmp__DType[this] == VIToken
[L1062]  CALL        call __var_1 := _msgSender_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L976]               __ret_0_ := msgsender_MSG;
[L1062]  RET         call __var_1 := _msgSender_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L1063]  COND FALSE  !(revert)
[L1084]  COND TRUE   __tmp__DType[this] == VIToken
[L1085]  CALL        call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, __var_1, recipient_s336, amount_s336);
[L1498]              __var_6 := null;
[L1499]  COND TRUE   !(sender_s519 != null)
[L1500]              revert := true;
[L1085]  RET         call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, __var_1, recipient_s336, amount_s336);
[L1086]  COND TRUE   revert
[L249]   RET         call __ret_0_ := transfer~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, recipient_s336, amount_s336);
[L250]               assume revert || gas < 0;
[L3207]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s336, amount_s336);
[L3242]  RET         call CorralChoice_VIToken(this);

Loop:
[L3242]        assume true;

[2020-11-24 17:54:28,249 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 17:54:28,249 INFO  L82        PathProgramCache]: Analyzing trace with hash -1419873478, now seen corresponding path program 1 times
[2020-11-24 17:54:28,250 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 17:54:28,258 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 17:54:28,283 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 17:54:28,283 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 17:54:28,283 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [8] imperfect sequences [] total 8
[2020-11-24 17:54:28,283 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 17:54:28,284 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 8 interpolants.
[2020-11-24 17:54:28,284 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=13, Invalid=43, Unknown=0, NotChecked=0, Total=56
[2020-11-24 17:54:28,284 INFO  L87              Difference]: Start difference. First operand 302 states and 334 transitions. cyclomatic complexity: 33 Second operand 8 states.
[2020-11-24 17:54:28,307 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 17:54:28,307 INFO  L93              Difference]: Finished difference Result 318 states and 352 transitions.
[2020-11-24 17:54:28,307 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 8 states. 
[2020-11-24 17:54:28,307 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 318 states and 352 transitions.
[2020-11-24 17:54:28,309 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 17:54:28,310 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 318 states to 301 states and 332 transitions.
[2020-11-24 17:54:28,310 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 301
[2020-11-24 17:54:28,311 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 301
[2020-11-24 17:54:28,311 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 301 states and 332 transitions.
[2020-11-24 17:54:28,311 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 17:54:28,311 INFO  L728         BuchiCegarLoop]: Abstraction has 301 states and 332 transitions.
[2020-11-24 17:54:28,312 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 301 states and 332 transitions.
[2020-11-24 17:54:28,314 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 301 to 301.
[2020-11-24 17:54:28,314 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 301 states.
[2020-11-24 17:54:28,315 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 301 states to 301 states and 332 transitions.
[2020-11-24 17:54:28,315 INFO  L751         BuchiCegarLoop]: Abstraction has 301 states and 332 transitions.
[2020-11-24 17:54:28,315 INFO  L631         BuchiCegarLoop]: Abstraction has 301 states and 332 transitions.
[2020-11-24 17:54:28,315 INFO  L445         BuchiCegarLoop]: ======== Iteration 5============
[2020-11-24 17:54:28,315 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 301 states and 332 transitions.
[2020-11-24 17:54:28,316 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 17:54:28,316 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 17:54:28,316 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 17:54:28,316 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 17:54:28,317 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L2]                 success_transfer_ERC200 := false;
[L2]                 call_transfer_ERC200 := false;
[L2]     CALL        call main();
[L3237]              assume null == 0;
[L3238]  CALL        call this := FreshRefGenerator__success();
[L958]               havoc newRef;
[L959]               assume Alloc[newRef] == false;
[L960]               Alloc[newRef] := true;
[L961]               assume newRef != null;
[L3238]  RET         call this := FreshRefGenerator__success();
[L3239]              assume now >= 0;
[L3240]              assume DType[this] == VIToken;
[L3241]              assume !revert && gas >= 0;
[L3242]  CALL        call CorralChoice_VIToken(this);
[L3142]              havoc msgsender_MSG;
[L3143]              havoc msgvalue_MSG;
[L3144]              havoc choice;
[L3145]              havoc __ret_0_totalSupply;
[L3146]              havoc account_s317;
[L3147]              havoc __ret_0_balanceOf;
[L3148]              havoc recipient_s336;
[L3149]              havoc amount_s336;
[L3150]              havoc __ret_0_transfer;
[L3151]              havoc owner_s352;
[L3152]              havoc spender_s352;
[L3153]              havoc __ret_0_allowance;
[L3154]              havoc spender_s371;
[L3155]              havoc amount_s371;
[L3156]              havoc __ret_0_approve;
[L3157]              havoc sender_s407;
[L3158]              havoc recipient_s407;
[L3159]              havoc amount_s407;
[L3160]              havoc __ret_0_transferFrom;
[L3161]              havoc name_s99;
[L3162]              havoc symbol_s99;
[L3163]              havoc decimals_s99;
[L3164]              havoc __ret_0_name;
[L3165]              havoc __ret_0_symbol;
[L3166]              havoc __ret_0_decimals;
[L3167]              havoc spender_s434;
[L3168]              havoc addedValue_s434;
[L3169]              havoc __ret_0_increaseAllowance;
[L3170]              havoc spender_s462;
[L3171]              havoc subtractedValue_s462;
[L3172]              havoc __ret_0_decreaseAllowance;
[L3173]              havoc account_s809;
[L3174]              havoc __ret_0_isMinter;
[L3175]              havoc account_s821;
[L3176]              havoc account_s887;
[L3177]              havoc amount_s887;
[L3178]              havoc __ret_0_mint;
[L3179]              havoc cap_s910;
[L3180]              havoc __ret_0_cap;
[L3181]              havoc __ret_0_DECIMALS;
[L3182]              havoc __ret_0_INITIAL_SUPPLY;
[L3183]              havoc tmpNow;
[L3184]              havoc gas;
[L3185]              assume gas > 4000000 && gas <= 8000000;
[L3186]              tmpNow := now;
[L3187]              havoc now;
[L3188]              assume now > tmpNow;
[L3189]              assume msgsender_MSG != null;
[L3190]  COND FALSE  !(choice == 6)
[L3196]  COND FALSE  !(choice == 5)
[L3202]  COND TRUE   choice == 4
[L3203]              gas := gas - 21000;
[L3204]  COND TRUE   gas >= 0
[L3205]              assume amount_s336 >= 0 && amount_s336 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3206]              assume msgvalue_MSG == 0;
[L3207]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s336, amount_s336);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == recipient_s336 && amount_s336 <= _balances_ERC20[this][msgsender_MSG]) && amount_s336 >= 0) && amount_s336 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s336] >= 0) && _balances_ERC20[this][recipient_s336] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_ERC200 := true;
[L2]                 call_transfer_ERC200 := false;
[L2]                 revert := revert_hold;
[L222]               havoc __exception;
[L223]               revert := false;
[L224]   COND TRUE   __exception
[L225]               __tmp__Balance := Balance;
[L226]               __tmp__DType := DType;
[L227]               __tmp__Alloc := Alloc;
[L228]               __tmp__balance_ADDR := balance_ADDR;
[L229]               __tmp__M_Ref_int := M_Ref_int;
[L230]               __tmp__sum__balances0 := sum__balances0;
[L231]               __tmp__alloc__allowances_ERC20_lvl0 := alloc__allowances_ERC20_lvl0;
[L232]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L233]               __tmp__sum__allowances1 := sum__allowances1;
[L234]               __tmp__M_Ref_bool := M_Ref_bool;
[L235]               __tmp__sum := sum;
[L236]               __tmp__Length := Length;
[L237]               __tmp__now := now;
[L238]               __tmp___name_ERC20Detailed := _name_ERC20Detailed;
[L239]               __tmp___symbol_ERC20Detailed := _symbol_ERC20Detailed;
[L240]               __tmp___decimals_ERC20Detailed := _decimals_ERC20Detailed;
[L241]               __tmp___balances_ERC20 := _balances_ERC20;
[L242]               __tmp___allowances_ERC20 := _allowances_ERC20;
[L243]               __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L244]               __tmp__bearer_Roles.Role := bearer_Roles.Role;
[L245]               __tmp___minters_MinterRole := _minters_MinterRole;
[L246]               __tmp___cap_ERC20Capped := _cap_ERC20Capped;
[L247]               __tmp__DECIMALS_VIToken := DECIMALS_VIToken;
[L248]               __tmp__INITIAL_SUPPLY_VIToken := INITIAL_SUPPLY_VIToken;
[L249]   CALL        call __ret_0_ := transfer~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, recipient_s336, amount_s336);
[L1061]  COND TRUE   __tmp__DType[this] == VIToken
[L1062]  CALL        call __var_1 := _msgSender_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L976]               __ret_0_ := msgsender_MSG;
[L1062]  RET         call __var_1 := _msgSender_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L1063]  COND FALSE  !(revert)
[L1084]  COND TRUE   __tmp__DType[this] == VIToken
[L1085]  CALL        call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, __var_1, recipient_s336, amount_s336);
[L1498]              __var_6 := null;
[L1499]  COND FALSE  !(!(sender_s519 != null))
[L1503]              __var_7 := null;
[L1504]  COND TRUE   !(recipient_s519 != null)
[L1505]              revert := true;
[L1085]  RET         call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, __var_1, recipient_s336, amount_s336);
[L1086]  COND TRUE   revert
[L249]   RET         call __ret_0_ := transfer~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, recipient_s336, amount_s336);
[L250]               assume revert || gas < 0;
[L3207]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s336, amount_s336);
[L3242]  RET         call CorralChoice_VIToken(this);

Loop:
[L3242]        assume true;

[2020-11-24 17:54:28,318 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 17:54:28,318 INFO  L82        PathProgramCache]: Analyzing trace with hash -118296642, now seen corresponding path program 1 times
[2020-11-24 17:54:28,319 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 17:54:28,324 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 17:54:28,342 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 17:54:28,343 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 17:54:28,343 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [7] imperfect sequences [] total 7
[2020-11-24 17:54:28,343 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 17:54:28,343 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 7 interpolants.
[2020-11-24 17:54:28,343 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=11, Invalid=31, Unknown=0, NotChecked=0, Total=42
[2020-11-24 17:54:28,343 INFO  L87              Difference]: Start difference. First operand 301 states and 332 transitions. cyclomatic complexity: 32 Second operand 7 states.
[2020-11-24 17:54:28,358 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 17:54:28,358 INFO  L93              Difference]: Finished difference Result 317 states and 350 transitions.
[2020-11-24 17:54:28,359 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 7 states. 
[2020-11-24 17:54:28,359 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 317 states and 350 transitions.
[2020-11-24 17:54:28,360 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 17:54:28,361 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 317 states to 300 states and 330 transitions.
[2020-11-24 17:54:28,362 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 300
[2020-11-24 17:54:28,362 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 300
[2020-11-24 17:54:28,362 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 300 states and 330 transitions.
[2020-11-24 17:54:28,362 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 17:54:28,362 INFO  L728         BuchiCegarLoop]: Abstraction has 300 states and 330 transitions.
[2020-11-24 17:54:28,362 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 300 states and 330 transitions.
[2020-11-24 17:54:28,365 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 300 to 300.
[2020-11-24 17:54:28,365 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 300 states.
[2020-11-24 17:54:28,365 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 300 states to 300 states and 330 transitions.
[2020-11-24 17:54:28,365 INFO  L751         BuchiCegarLoop]: Abstraction has 300 states and 330 transitions.
[2020-11-24 17:54:28,365 INFO  L631         BuchiCegarLoop]: Abstraction has 300 states and 330 transitions.
[2020-11-24 17:54:28,366 INFO  L445         BuchiCegarLoop]: ======== Iteration 6============
[2020-11-24 17:54:28,366 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 300 states and 330 transitions.
[2020-11-24 17:54:28,366 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 17:54:28,367 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 17:54:28,367 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 17:54:28,367 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 17:54:28,367 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L2]                 success_transfer_ERC200 := false;
[L2]                 call_transfer_ERC200 := false;
[L2]     CALL        call main();
[L3237]              assume null == 0;
[L3238]  CALL        call this := FreshRefGenerator__success();
[L958]               havoc newRef;
[L959]               assume Alloc[newRef] == false;
[L960]               Alloc[newRef] := true;
[L961]               assume newRef != null;
[L3238]  RET         call this := FreshRefGenerator__success();
[L3239]              assume now >= 0;
[L3240]              assume DType[this] == VIToken;
[L3241]              assume !revert && gas >= 0;
[L3242]  CALL        call CorralChoice_VIToken(this);
[L3142]              havoc msgsender_MSG;
[L3143]              havoc msgvalue_MSG;
[L3144]              havoc choice;
[L3145]              havoc __ret_0_totalSupply;
[L3146]              havoc account_s317;
[L3147]              havoc __ret_0_balanceOf;
[L3148]              havoc recipient_s336;
[L3149]              havoc amount_s336;
[L3150]              havoc __ret_0_transfer;
[L3151]              havoc owner_s352;
[L3152]              havoc spender_s352;
[L3153]              havoc __ret_0_allowance;
[L3154]              havoc spender_s371;
[L3155]              havoc amount_s371;
[L3156]              havoc __ret_0_approve;
[L3157]              havoc sender_s407;
[L3158]              havoc recipient_s407;
[L3159]              havoc amount_s407;
[L3160]              havoc __ret_0_transferFrom;
[L3161]              havoc name_s99;
[L3162]              havoc symbol_s99;
[L3163]              havoc decimals_s99;
[L3164]              havoc __ret_0_name;
[L3165]              havoc __ret_0_symbol;
[L3166]              havoc __ret_0_decimals;
[L3167]              havoc spender_s434;
[L3168]              havoc addedValue_s434;
[L3169]              havoc __ret_0_increaseAllowance;
[L3170]              havoc spender_s462;
[L3171]              havoc subtractedValue_s462;
[L3172]              havoc __ret_0_decreaseAllowance;
[L3173]              havoc account_s809;
[L3174]              havoc __ret_0_isMinter;
[L3175]              havoc account_s821;
[L3176]              havoc account_s887;
[L3177]              havoc amount_s887;
[L3178]              havoc __ret_0_mint;
[L3179]              havoc cap_s910;
[L3180]              havoc __ret_0_cap;
[L3181]              havoc __ret_0_DECIMALS;
[L3182]              havoc __ret_0_INITIAL_SUPPLY;
[L3183]              havoc tmpNow;
[L3184]              havoc gas;
[L3185]              assume gas > 4000000 && gas <= 8000000;
[L3186]              tmpNow := now;
[L3187]              havoc now;
[L3188]              assume now > tmpNow;
[L3189]              assume msgsender_MSG != null;
[L3190]  COND FALSE  !(choice == 6)
[L3196]  COND FALSE  !(choice == 5)
[L3202]  COND TRUE   choice == 4
[L3203]              gas := gas - 21000;
[L3204]  COND TRUE   gas >= 0
[L3205]              assume amount_s336 >= 0 && amount_s336 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3206]              assume msgvalue_MSG == 0;
[L3207]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s336, amount_s336);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == recipient_s336 && amount_s336 <= _balances_ERC20[this][msgsender_MSG]) && amount_s336 >= 0) && amount_s336 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s336] >= 0) && _balances_ERC20[this][recipient_s336] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_ERC200 := true;
[L2]                 call_transfer_ERC200 := false;
[L2]                 revert := revert_hold;
[L222]               havoc __exception;
[L223]               revert := false;
[L224]   COND FALSE  !(__exception)
[L252]   CALL        call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, recipient_s336, amount_s336);
[L1114]  COND TRUE   DType[this] == VIToken
[L1115]  CALL        call __var_1 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L982]               __ret_0_ := msgsender_MSG;
[L1115]  RET         call __var_1 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L1116]  COND FALSE  !(revert)
[L1137]  COND TRUE   DType[this] == VIToken
[L1138]  CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, __var_1, recipient_s336, amount_s336);
[L1530]              __var_6 := null;
[L1531]  COND FALSE  !(!(sender_s519 != null))
[L1535]              __var_7 := null;
[L1536]  COND FALSE  !(!(recipient_s519 != null))
[L1540]  CALL        call __var_8 := sub~uint256~uint256~string_SafeMath__success(this, this, 0, _balances_ERC20[this][sender_s519], amount_s519, -710627154);
[L1025]  COND FALSE  !(!(b_s192 <= a_s192))
[L1029]              c_s192 := (a_s192 - b_s192) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1030]              __ret_0_ := c_s192;
[L1540]  RET         call __var_8 := sub~uint256~uint256~string_SafeMath__success(this, this, 0, _balances_ERC20[this][sender_s519], amount_s519, -710627154);
[L1541]  COND FALSE  !(revert)
[L1544]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][sender_s519];
[L1545]              _balances_ERC20[this][sender_s519] := __var_8;
[L1546]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][sender_s519];
[L1547]  CALL        call __var_9 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][recipient_s519], amount_s519);
[L1001]              c_s165 := (a_s165 + b_s165) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1002]  COND FALSE  !(!(c_s165 >= a_s165))
[L1006]              __ret_0_ := c_s165;
[L1547]  RET         call __var_9 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][recipient_s519], amount_s519);
[L1548]  COND FALSE  !(revert)
[L1551]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][recipient_s519];
[L1552]              _balances_ERC20[this][recipient_s519] := __var_9;
[L1553]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][recipient_s519];
[L1554]              assert { :EventEmitted "Transfer_ERC20" } true;
[L1138]  RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, __var_1, recipient_s336, amount_s336);
[L1139]  COND FALSE  !(revert)
[L1160]              __ret_0_ := true;
[L252]   RET         call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, recipient_s336, amount_s336);
[L253]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !((((((((__ret_0_ == true && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _balances_ERC20[this] == old(_balances_ERC20[this])) && _allowances_ERC20[this] == old(_allowances_ERC20[this])) && _cap_ERC20Capped[this] == old(_cap_ERC20Capped[this])) && _minters_MinterRole[this] == old(_minters_MinterRole[this])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]));
[L2]                 revert := revert_hold;
[L3207]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s336, amount_s336);
[L3242]  RET         call CorralChoice_VIToken(this);

Loop:
[L3242]        assume true;

[2020-11-24 17:54:28,369 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 17:54:28,369 INFO  L82        PathProgramCache]: Analyzing trace with hash 1247957903, now seen corresponding path program 1 times
[2020-11-24 17:54:28,370 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 17:54:28,404 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 17:54:28,717 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 17:54:28,717 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 17:54:28,717 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [19] imperfect sequences [] total 19
[2020-11-24 17:54:28,717 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 17:54:28,718 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 19 interpolants.
[2020-11-24 17:54:28,718 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=45, Invalid=297, Unknown=0, NotChecked=0, Total=342
[2020-11-24 17:54:28,718 INFO  L87              Difference]: Start difference. First operand 300 states and 330 transitions. cyclomatic complexity: 31 Second operand 19 states.
[2020-11-24 17:54:29,385 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 17:54:29,385 INFO  L93              Difference]: Finished difference Result 305 states and 334 transitions.
[2020-11-24 17:54:29,386 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 20 states. 
[2020-11-24 17:54:29,386 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 305 states and 334 transitions.
[2020-11-24 17:54:29,388 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 17:54:29,390 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 305 states to 215 states and 232 transitions.
[2020-11-24 17:54:29,390 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 215
[2020-11-24 17:54:29,390 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 215
[2020-11-24 17:54:29,390 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 215 states and 232 transitions.
[2020-11-24 17:54:29,391 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 17:54:29,391 INFO  L728         BuchiCegarLoop]: Abstraction has 215 states and 232 transitions.
[2020-11-24 17:54:29,391 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 215 states and 232 transitions.
[2020-11-24 17:54:29,393 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 215 to 215.
[2020-11-24 17:54:29,394 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 215 states.
[2020-11-24 17:54:29,394 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 215 states to 215 states and 232 transitions.
[2020-11-24 17:54:29,394 INFO  L751         BuchiCegarLoop]: Abstraction has 215 states and 232 transitions.
[2020-11-24 17:54:29,394 INFO  L631         BuchiCegarLoop]: Abstraction has 215 states and 232 transitions.
[2020-11-24 17:54:29,394 INFO  L445         BuchiCegarLoop]: ======== Iteration 7============
[2020-11-24 17:54:29,394 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 215 states and 232 transitions.
[2020-11-24 17:54:29,395 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 17:54:29,395 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 17:54:29,395 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 17:54:29,396 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 17:54:29,396 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L2]                 success_transfer_ERC200 := false;
[L2]                 call_transfer_ERC200 := false;
[L2]     CALL        call main();
[L3237]              assume null == 0;
[L3238]  CALL        call this := FreshRefGenerator__success();
[L958]               havoc newRef;
[L959]               assume Alloc[newRef] == false;
[L960]               Alloc[newRef] := true;
[L961]               assume newRef != null;
[L3238]  RET         call this := FreshRefGenerator__success();
[L3239]              assume now >= 0;
[L3240]              assume DType[this] == VIToken;
[L3241]              assume !revert && gas >= 0;
[L3242]  CALL        call CorralChoice_VIToken(this);
[L3142]              havoc msgsender_MSG;
[L3143]              havoc msgvalue_MSG;
[L3144]              havoc choice;
[L3145]              havoc __ret_0_totalSupply;
[L3146]              havoc account_s317;
[L3147]              havoc __ret_0_balanceOf;
[L3148]              havoc recipient_s336;
[L3149]              havoc amount_s336;
[L3150]              havoc __ret_0_transfer;
[L3151]              havoc owner_s352;
[L3152]              havoc spender_s352;
[L3153]              havoc __ret_0_allowance;
[L3154]              havoc spender_s371;
[L3155]              havoc amount_s371;
[L3156]              havoc __ret_0_approve;
[L3157]              havoc sender_s407;
[L3158]              havoc recipient_s407;
[L3159]              havoc amount_s407;
[L3160]              havoc __ret_0_transferFrom;
[L3161]              havoc name_s99;
[L3162]              havoc symbol_s99;
[L3163]              havoc decimals_s99;
[L3164]              havoc __ret_0_name;
[L3165]              havoc __ret_0_symbol;
[L3166]              havoc __ret_0_decimals;
[L3167]              havoc spender_s434;
[L3168]              havoc addedValue_s434;
[L3169]              havoc __ret_0_increaseAllowance;
[L3170]              havoc spender_s462;
[L3171]              havoc subtractedValue_s462;
[L3172]              havoc __ret_0_decreaseAllowance;
[L3173]              havoc account_s809;
[L3174]              havoc __ret_0_isMinter;
[L3175]              havoc account_s821;
[L3176]              havoc account_s887;
[L3177]              havoc amount_s887;
[L3178]              havoc __ret_0_mint;
[L3179]              havoc cap_s910;
[L3180]              havoc __ret_0_cap;
[L3181]              havoc __ret_0_DECIMALS;
[L3182]              havoc __ret_0_INITIAL_SUPPLY;
[L3183]              havoc tmpNow;
[L3184]              havoc gas;
[L3185]              assume gas > 4000000 && gas <= 8000000;
[L3186]              tmpNow := now;
[L3187]              havoc now;
[L3188]              assume now > tmpNow;
[L3189]              assume msgsender_MSG != null;
[L3190]  COND FALSE  !(choice == 6)
[L3196]  COND FALSE  !(choice == 5)
[L3202]  COND TRUE   choice == 4
[L3203]              gas := gas - 21000;
[L3204]  COND TRUE   gas >= 0
[L3205]              assume amount_s336 >= 0 && amount_s336 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3206]              assume msgvalue_MSG == 0;
[L3207]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s336, amount_s336);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == recipient_s336 && amount_s336 <= _balances_ERC20[this][msgsender_MSG]) && amount_s336 >= 0) && amount_s336 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s336] >= 0) && _balances_ERC20[this][recipient_s336] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_ERC200 := true;
[L2]                 call_transfer_ERC200 := false;
[L2]                 revert := revert_hold;
[L222]               havoc __exception;
[L223]               revert := false;
[L224]   COND TRUE   __exception
[L225]               __tmp__Balance := Balance;
[L226]               __tmp__DType := DType;
[L227]               __tmp__Alloc := Alloc;
[L228]               __tmp__balance_ADDR := balance_ADDR;
[L229]               __tmp__M_Ref_int := M_Ref_int;
[L230]               __tmp__sum__balances0 := sum__balances0;
[L231]               __tmp__alloc__allowances_ERC20_lvl0 := alloc__allowances_ERC20_lvl0;
[L232]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L233]               __tmp__sum__allowances1 := sum__allowances1;
[L234]               __tmp__M_Ref_bool := M_Ref_bool;
[L235]               __tmp__sum := sum;
[L236]               __tmp__Length := Length;
[L237]               __tmp__now := now;
[L238]               __tmp___name_ERC20Detailed := _name_ERC20Detailed;
[L239]               __tmp___symbol_ERC20Detailed := _symbol_ERC20Detailed;
[L240]               __tmp___decimals_ERC20Detailed := _decimals_ERC20Detailed;
[L241]               __tmp___balances_ERC20 := _balances_ERC20;
[L242]               __tmp___allowances_ERC20 := _allowances_ERC20;
[L243]               __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L244]               __tmp__bearer_Roles.Role := bearer_Roles.Role;
[L245]               __tmp___minters_MinterRole := _minters_MinterRole;
[L246]               __tmp___cap_ERC20Capped := _cap_ERC20Capped;
[L247]               __tmp__DECIMALS_VIToken := DECIMALS_VIToken;
[L248]               __tmp__INITIAL_SUPPLY_VIToken := INITIAL_SUPPLY_VIToken;
[L249]   CALL        call __ret_0_ := transfer~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, recipient_s336, amount_s336);
[L1061]  COND TRUE   __tmp__DType[this] == VIToken
[L1062]  CALL        call __var_1 := _msgSender_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L976]               __ret_0_ := msgsender_MSG;
[L1062]  RET         call __var_1 := _msgSender_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L1063]  COND FALSE  !(revert)
[L1084]  COND TRUE   __tmp__DType[this] == VIToken
[L1085]  CALL        call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, __var_1, recipient_s336, amount_s336);
[L1498]              __var_6 := null;
[L1499]  COND FALSE  !(!(sender_s519 != null))
[L1503]              __var_7 := null;
[L1504]  COND FALSE  !(!(recipient_s519 != null))
[L1508]  CALL        call __var_8 := sub~uint256~uint256~string_SafeMath__fail(this, this, 0, __tmp___balances_ERC20[this][sender_s519], amount_s519, -710627154);
[L1013]  COND TRUE   !(b_s192 <= a_s192)
[L1014]              revert := true;
[L1508]  RET         call __var_8 := sub~uint256~uint256~string_SafeMath__fail(this, this, 0, __tmp___balances_ERC20[this][sender_s519], amount_s519, -710627154);
[L1509]  COND TRUE   revert
[L1085]  RET         call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, __var_1, recipient_s336, amount_s336);
[L1086]  COND TRUE   revert
[L249]   RET         call __ret_0_ := transfer~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, recipient_s336, amount_s336);
[L250]               assume revert || gas < 0;
[L3207]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s336, amount_s336);
[L3242]  RET         call CorralChoice_VIToken(this);

Loop:
[L3242]        assume true;

[2020-11-24 17:54:29,398 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 17:54:29,399 INFO  L82        PathProgramCache]: Analyzing trace with hash 1088514857, now seen corresponding path program 1 times
[2020-11-24 17:54:29,400 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 17:54:29,408 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 17:54:29,453 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 17:54:29,454 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 17:54:29,454 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [10] imperfect sequences [] total 10
[2020-11-24 17:54:29,454 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 17:54:29,454 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 10 interpolants.
[2020-11-24 17:54:29,454 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=18, Invalid=72, Unknown=0, NotChecked=0, Total=90
[2020-11-24 17:54:29,455 INFO  L87              Difference]: Start difference. First operand 215 states and 232 transitions. cyclomatic complexity: 18 Second operand 10 states.
[2020-11-24 17:54:29,539 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 17:54:29,540 INFO  L93              Difference]: Finished difference Result 227 states and 246 transitions.
[2020-11-24 17:54:29,540 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 11 states. 
[2020-11-24 17:54:29,540 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 227 states and 246 transitions.
[2020-11-24 17:54:29,541 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 17:54:29,542 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 227 states to 210 states and 226 transitions.
[2020-11-24 17:54:29,542 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 210
[2020-11-24 17:54:29,542 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 210
[2020-11-24 17:54:29,543 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 210 states and 226 transitions.
[2020-11-24 17:54:29,543 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 17:54:29,543 INFO  L728         BuchiCegarLoop]: Abstraction has 210 states and 226 transitions.
[2020-11-24 17:54:29,543 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 210 states and 226 transitions.
[2020-11-24 17:54:29,545 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 210 to 210.
[2020-11-24 17:54:29,545 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 210 states.
[2020-11-24 17:54:29,546 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 210 states to 210 states and 226 transitions.
[2020-11-24 17:54:29,546 INFO  L751         BuchiCegarLoop]: Abstraction has 210 states and 226 transitions.
[2020-11-24 17:54:29,546 INFO  L631         BuchiCegarLoop]: Abstraction has 210 states and 226 transitions.
[2020-11-24 17:54:29,546 INFO  L445         BuchiCegarLoop]: ======== Iteration 8============
[2020-11-24 17:54:29,546 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 210 states and 226 transitions.
[2020-11-24 17:54:29,547 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 17:54:29,547 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 17:54:29,547 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 17:54:29,548 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 17:54:29,548 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L2]                 success_transfer_ERC200 := false;
[L2]                 call_transfer_ERC200 := false;
[L2]     CALL        call main();
[L3237]              assume null == 0;
[L3238]  CALL        call this := FreshRefGenerator__success();
[L958]               havoc newRef;
[L959]               assume Alloc[newRef] == false;
[L960]               Alloc[newRef] := true;
[L961]               assume newRef != null;
[L3238]  RET         call this := FreshRefGenerator__success();
[L3239]              assume now >= 0;
[L3240]              assume DType[this] == VIToken;
[L3241]              assume !revert && gas >= 0;
[L3242]  CALL        call CorralChoice_VIToken(this);
[L3142]              havoc msgsender_MSG;
[L3143]              havoc msgvalue_MSG;
[L3144]              havoc choice;
[L3145]              havoc __ret_0_totalSupply;
[L3146]              havoc account_s317;
[L3147]              havoc __ret_0_balanceOf;
[L3148]              havoc recipient_s336;
[L3149]              havoc amount_s336;
[L3150]              havoc __ret_0_transfer;
[L3151]              havoc owner_s352;
[L3152]              havoc spender_s352;
[L3153]              havoc __ret_0_allowance;
[L3154]              havoc spender_s371;
[L3155]              havoc amount_s371;
[L3156]              havoc __ret_0_approve;
[L3157]              havoc sender_s407;
[L3158]              havoc recipient_s407;
[L3159]              havoc amount_s407;
[L3160]              havoc __ret_0_transferFrom;
[L3161]              havoc name_s99;
[L3162]              havoc symbol_s99;
[L3163]              havoc decimals_s99;
[L3164]              havoc __ret_0_name;
[L3165]              havoc __ret_0_symbol;
[L3166]              havoc __ret_0_decimals;
[L3167]              havoc spender_s434;
[L3168]              havoc addedValue_s434;
[L3169]              havoc __ret_0_increaseAllowance;
[L3170]              havoc spender_s462;
[L3171]              havoc subtractedValue_s462;
[L3172]              havoc __ret_0_decreaseAllowance;
[L3173]              havoc account_s809;
[L3174]              havoc __ret_0_isMinter;
[L3175]              havoc account_s821;
[L3176]              havoc account_s887;
[L3177]              havoc amount_s887;
[L3178]              havoc __ret_0_mint;
[L3179]              havoc cap_s910;
[L3180]              havoc __ret_0_cap;
[L3181]              havoc __ret_0_DECIMALS;
[L3182]              havoc __ret_0_INITIAL_SUPPLY;
[L3183]              havoc tmpNow;
[L3184]              havoc gas;
[L3185]              assume gas > 4000000 && gas <= 8000000;
[L3186]              tmpNow := now;
[L3187]              havoc now;
[L3188]              assume now > tmpNow;
[L3189]              assume msgsender_MSG != null;
[L3190]  COND FALSE  !(choice == 6)
[L3196]  COND FALSE  !(choice == 5)
[L3202]  COND TRUE   choice == 4
[L3203]              gas := gas - 21000;
[L3204]  COND TRUE   gas >= 0
[L3205]              assume amount_s336 >= 0 && amount_s336 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3206]              assume msgvalue_MSG == 0;
[L3207]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s336, amount_s336);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == recipient_s336 && amount_s336 <= _balances_ERC20[this][msgsender_MSG]) && amount_s336 >= 0) && amount_s336 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s336] >= 0) && _balances_ERC20[this][recipient_s336] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_ERC200 := true;
[L2]                 call_transfer_ERC200 := false;
[L2]                 revert := revert_hold;
[L222]               havoc __exception;
[L223]               revert := false;
[L224]   COND TRUE   __exception
[L225]               __tmp__Balance := Balance;
[L226]               __tmp__DType := DType;
[L227]               __tmp__Alloc := Alloc;
[L228]               __tmp__balance_ADDR := balance_ADDR;
[L229]               __tmp__M_Ref_int := M_Ref_int;
[L230]               __tmp__sum__balances0 := sum__balances0;
[L231]               __tmp__alloc__allowances_ERC20_lvl0 := alloc__allowances_ERC20_lvl0;
[L232]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L233]               __tmp__sum__allowances1 := sum__allowances1;
[L234]               __tmp__M_Ref_bool := M_Ref_bool;
[L235]               __tmp__sum := sum;
[L236]               __tmp__Length := Length;
[L237]               __tmp__now := now;
[L238]               __tmp___name_ERC20Detailed := _name_ERC20Detailed;
[L239]               __tmp___symbol_ERC20Detailed := _symbol_ERC20Detailed;
[L240]               __tmp___decimals_ERC20Detailed := _decimals_ERC20Detailed;
[L241]               __tmp___balances_ERC20 := _balances_ERC20;
[L242]               __tmp___allowances_ERC20 := _allowances_ERC20;
[L243]               __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L244]               __tmp__bearer_Roles.Role := bearer_Roles.Role;
[L245]               __tmp___minters_MinterRole := _minters_MinterRole;
[L246]               __tmp___cap_ERC20Capped := _cap_ERC20Capped;
[L247]               __tmp__DECIMALS_VIToken := DECIMALS_VIToken;
[L248]               __tmp__INITIAL_SUPPLY_VIToken := INITIAL_SUPPLY_VIToken;
[L249]   CALL        call __ret_0_ := transfer~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, recipient_s336, amount_s336);
[L1061]  COND TRUE   __tmp__DType[this] == VIToken
[L1062]  CALL        call __var_1 := _msgSender_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L976]               __ret_0_ := msgsender_MSG;
[L1062]  RET         call __var_1 := _msgSender_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L1063]  COND FALSE  !(revert)
[L1084]  COND TRUE   __tmp__DType[this] == VIToken
[L1085]  CALL        call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, __var_1, recipient_s336, amount_s336);
[L1498]              __var_6 := null;
[L1499]  COND FALSE  !(!(sender_s519 != null))
[L1503]              __var_7 := null;
[L1504]  COND FALSE  !(!(recipient_s519 != null))
[L1508]  CALL        call __var_8 := sub~uint256~uint256~string_SafeMath__fail(this, this, 0, __tmp___balances_ERC20[this][sender_s519], amount_s519, -710627154);
[L1013]  COND FALSE  !(!(b_s192 <= a_s192))
[L1017]              c_s192 := (a_s192 - b_s192) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1018]              __ret_0_ := c_s192;
[L1508]  RET         call __var_8 := sub~uint256~uint256~string_SafeMath__fail(this, this, 0, __tmp___balances_ERC20[this][sender_s519], amount_s519, -710627154);
[L1509]  COND FALSE  !(revert)
[L1512]              __tmp__sum__balances0[this] := __tmp__sum__balances0[this] - __tmp___balances_ERC20[this][sender_s519];
[L1513]              __tmp___balances_ERC20[this][sender_s519] := __var_8;
[L1514]              __tmp__sum__balances0[this] := __tmp__sum__balances0[this] + __tmp___balances_ERC20[this][sender_s519];
[L1515]  CALL        call __var_9 := add~uint256~uint256_SafeMath__fail(this, this, 0, __tmp___balances_ERC20[this][recipient_s519], amount_s519);
[L989]               c_s165 := (a_s165 + b_s165) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L990]   COND TRUE   !(c_s165 >= a_s165)
[L991]               revert := true;
[L1515]  RET         call __var_9 := add~uint256~uint256_SafeMath__fail(this, this, 0, __tmp___balances_ERC20[this][recipient_s519], amount_s519);
[L1516]  COND TRUE   revert
[L1085]  RET         call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, __var_1, recipient_s336, amount_s336);
[L1086]  COND TRUE   revert
[L249]   RET         call __ret_0_ := transfer~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, recipient_s336, amount_s336);
[L250]               assume revert || gas < 0;
[L3207]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s336, amount_s336);
[L3242]  RET         call CorralChoice_VIToken(this);

Loop:
[L3242]        assume true;

[2020-11-24 17:54:29,550 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 17:54:29,551 INFO  L82        PathProgramCache]: Analyzing trace with hash 1547975932, now seen corresponding path program 1 times
[2020-11-24 17:54:29,552 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 17:54:29,561 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 17:54:29,671 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 17:54:29,671 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 17:54:29,671 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [18] imperfect sequences [] total 18
[2020-11-24 17:54:29,672 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 17:54:29,672 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 18 interpolants.
[2020-11-24 17:54:29,672 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=37, Invalid=269, Unknown=0, NotChecked=0, Total=306
[2020-11-24 17:54:29,672 INFO  L87              Difference]: Start difference. First operand 210 states and 226 transitions. cyclomatic complexity: 17 Second operand 18 states.
[2020-11-24 17:54:29,864 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 17:54:29,864 INFO  L93              Difference]: Finished difference Result 216 states and 231 transitions.
[2020-11-24 17:54:29,864 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 20 states. 
[2020-11-24 17:54:29,864 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 216 states and 231 transitions.
[2020-11-24 17:54:29,866 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 17:54:29,866 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 216 states to 195 states and 207 transitions.
[2020-11-24 17:54:29,867 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 195
[2020-11-24 17:54:29,867 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 195
[2020-11-24 17:54:29,867 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 195 states and 207 transitions.
[2020-11-24 17:54:29,867 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 17:54:29,867 INFO  L728         BuchiCegarLoop]: Abstraction has 195 states and 207 transitions.
[2020-11-24 17:54:29,868 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 195 states and 207 transitions.
[2020-11-24 17:54:29,869 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 195 to 195.
[2020-11-24 17:54:29,869 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 195 states.
[2020-11-24 17:54:29,870 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 195 states to 195 states and 207 transitions.
[2020-11-24 17:54:29,870 INFO  L751         BuchiCegarLoop]: Abstraction has 195 states and 207 transitions.
[2020-11-24 17:54:29,870 INFO  L631         BuchiCegarLoop]: Abstraction has 195 states and 207 transitions.
[2020-11-24 17:54:29,870 INFO  L445         BuchiCegarLoop]: ======== Iteration 9============
[2020-11-24 17:54:29,870 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 195 states and 207 transitions.
[2020-11-24 17:54:29,871 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 17:54:29,871 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 17:54:29,871 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 17:54:29,872 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 17:54:29,872 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L2]                 success_transfer_ERC200 := false;
[L2]                 call_transfer_ERC200 := false;
[L2]     CALL        call main();
[L3237]              assume null == 0;
[L3238]  CALL        call this := FreshRefGenerator__success();
[L958]               havoc newRef;
[L959]               assume Alloc[newRef] == false;
[L960]               Alloc[newRef] := true;
[L961]               assume newRef != null;
[L3238]  RET         call this := FreshRefGenerator__success();
[L3239]              assume now >= 0;
[L3240]              assume DType[this] == VIToken;
[L3241]              assume !revert && gas >= 0;
[L3242]  CALL        call CorralChoice_VIToken(this);
[L3142]              havoc msgsender_MSG;
[L3143]              havoc msgvalue_MSG;
[L3144]              havoc choice;
[L3145]              havoc __ret_0_totalSupply;
[L3146]              havoc account_s317;
[L3147]              havoc __ret_0_balanceOf;
[L3148]              havoc recipient_s336;
[L3149]              havoc amount_s336;
[L3150]              havoc __ret_0_transfer;
[L3151]              havoc owner_s352;
[L3152]              havoc spender_s352;
[L3153]              havoc __ret_0_allowance;
[L3154]              havoc spender_s371;
[L3155]              havoc amount_s371;
[L3156]              havoc __ret_0_approve;
[L3157]              havoc sender_s407;
[L3158]              havoc recipient_s407;
[L3159]              havoc amount_s407;
[L3160]              havoc __ret_0_transferFrom;
[L3161]              havoc name_s99;
[L3162]              havoc symbol_s99;
[L3163]              havoc decimals_s99;
[L3164]              havoc __ret_0_name;
[L3165]              havoc __ret_0_symbol;
[L3166]              havoc __ret_0_decimals;
[L3167]              havoc spender_s434;
[L3168]              havoc addedValue_s434;
[L3169]              havoc __ret_0_increaseAllowance;
[L3170]              havoc spender_s462;
[L3171]              havoc subtractedValue_s462;
[L3172]              havoc __ret_0_decreaseAllowance;
[L3173]              havoc account_s809;
[L3174]              havoc __ret_0_isMinter;
[L3175]              havoc account_s821;
[L3176]              havoc account_s887;
[L3177]              havoc amount_s887;
[L3178]              havoc __ret_0_mint;
[L3179]              havoc cap_s910;
[L3180]              havoc __ret_0_cap;
[L3181]              havoc __ret_0_DECIMALS;
[L3182]              havoc __ret_0_INITIAL_SUPPLY;
[L3183]              havoc tmpNow;
[L3184]              havoc gas;
[L3185]              assume gas > 4000000 && gas <= 8000000;
[L3186]              tmpNow := now;
[L3187]              havoc now;
[L3188]              assume now > tmpNow;
[L3189]              assume msgsender_MSG != null;
[L3190]  COND FALSE  !(choice == 6)
[L3196]  COND FALSE  !(choice == 5)
[L3202]  COND TRUE   choice == 4
[L3203]              gas := gas - 21000;
[L3204]  COND TRUE   gas >= 0
[L3205]              assume amount_s336 >= 0 && amount_s336 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3206]              assume msgvalue_MSG == 0;
[L3207]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s336, amount_s336);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == recipient_s336 && amount_s336 <= _balances_ERC20[this][msgsender_MSG]) && amount_s336 >= 0) && amount_s336 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s336] >= 0) && _balances_ERC20[this][recipient_s336] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_ERC200 := true;
[L2]                 call_transfer_ERC200 := false;
[L2]                 revert := revert_hold;
[L222]               havoc __exception;
[L223]               revert := false;
[L224]   COND TRUE   __exception
[L225]               __tmp__Balance := Balance;
[L226]               __tmp__DType := DType;
[L227]               __tmp__Alloc := Alloc;
[L228]               __tmp__balance_ADDR := balance_ADDR;
[L229]               __tmp__M_Ref_int := M_Ref_int;
[L230]               __tmp__sum__balances0 := sum__balances0;
[L231]               __tmp__alloc__allowances_ERC20_lvl0 := alloc__allowances_ERC20_lvl0;
[L232]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L233]               __tmp__sum__allowances1 := sum__allowances1;
[L234]               __tmp__M_Ref_bool := M_Ref_bool;
[L235]               __tmp__sum := sum;
[L236]               __tmp__Length := Length;
[L237]               __tmp__now := now;
[L238]               __tmp___name_ERC20Detailed := _name_ERC20Detailed;
[L239]               __tmp___symbol_ERC20Detailed := _symbol_ERC20Detailed;
[L240]               __tmp___decimals_ERC20Detailed := _decimals_ERC20Detailed;
[L241]               __tmp___balances_ERC20 := _balances_ERC20;
[L242]               __tmp___allowances_ERC20 := _allowances_ERC20;
[L243]               __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L244]               __tmp__bearer_Roles.Role := bearer_Roles.Role;
[L245]               __tmp___minters_MinterRole := _minters_MinterRole;
[L246]               __tmp___cap_ERC20Capped := _cap_ERC20Capped;
[L247]               __tmp__DECIMALS_VIToken := DECIMALS_VIToken;
[L248]               __tmp__INITIAL_SUPPLY_VIToken := INITIAL_SUPPLY_VIToken;
[L249]   CALL        call __ret_0_ := transfer~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, recipient_s336, amount_s336);
[L1061]  COND TRUE   __tmp__DType[this] == VIToken
[L1062]  CALL        call __var_1 := _msgSender_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L976]               __ret_0_ := msgsender_MSG;
[L1062]  RET         call __var_1 := _msgSender_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L1063]  COND FALSE  !(revert)
[L1084]  COND TRUE   __tmp__DType[this] == VIToken
[L1085]  CALL        call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, __var_1, recipient_s336, amount_s336);
[L1498]              __var_6 := null;
[L1499]  COND FALSE  !(!(sender_s519 != null))
[L1503]              __var_7 := null;
[L1504]  COND FALSE  !(!(recipient_s519 != null))
[L1508]  CALL        call __var_8 := sub~uint256~uint256~string_SafeMath__fail(this, this, 0, __tmp___balances_ERC20[this][sender_s519], amount_s519, -710627154);
[L1013]  COND FALSE  !(!(b_s192 <= a_s192))
[L1017]              c_s192 := (a_s192 - b_s192) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1018]              __ret_0_ := c_s192;
[L1508]  RET         call __var_8 := sub~uint256~uint256~string_SafeMath__fail(this, this, 0, __tmp___balances_ERC20[this][sender_s519], amount_s519, -710627154);
[L1509]  COND FALSE  !(revert)
[L1512]              __tmp__sum__balances0[this] := __tmp__sum__balances0[this] - __tmp___balances_ERC20[this][sender_s519];
[L1513]              __tmp___balances_ERC20[this][sender_s519] := __var_8;
[L1514]              __tmp__sum__balances0[this] := __tmp__sum__balances0[this] + __tmp___balances_ERC20[this][sender_s519];
[L1515]  CALL        call __var_9 := add~uint256~uint256_SafeMath__fail(this, this, 0, __tmp___balances_ERC20[this][recipient_s519], amount_s519);
[L989]               c_s165 := (a_s165 + b_s165) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L990]   COND FALSE  !(!(c_s165 >= a_s165))
[L994]               __ret_0_ := c_s165;
[L1515]  RET         call __var_9 := add~uint256~uint256_SafeMath__fail(this, this, 0, __tmp___balances_ERC20[this][recipient_s519], amount_s519);
[L1516]  COND FALSE  !(revert)
[L1519]              __tmp__sum__balances0[this] := __tmp__sum__balances0[this] - __tmp___balances_ERC20[this][recipient_s519];
[L1520]              __tmp___balances_ERC20[this][recipient_s519] := __var_9;
[L1521]              __tmp__sum__balances0[this] := __tmp__sum__balances0[this] + __tmp___balances_ERC20[this][recipient_s519];
[L1085]  RET         call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, __var_1, recipient_s336, amount_s336);
[L1086]  COND FALSE  !(revert)
[L1107]              __ret_0_ := true;
[L249]   RET         call __ret_0_ := transfer~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, recipient_s336, amount_s336);
[L250]               assume revert || gas < 0;
[L3207]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s336, amount_s336);
[L3242]  RET         call CorralChoice_VIToken(this);

Loop:
[L3242]        assume true;

[2020-11-24 17:54:29,874 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 17:54:29,874 INFO  L82        PathProgramCache]: Analyzing trace with hash -1104273578, now seen corresponding path program 1 times
[2020-11-24 17:54:29,875 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 17:54:29,883 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 17:54:29,904 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 17:54:29,904 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 17:54:29,904 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [5] imperfect sequences [] total 5
[2020-11-24 17:54:29,904 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 17:54:29,904 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 5 interpolants.
[2020-11-24 17:54:29,904 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=7, Invalid=13, Unknown=0, NotChecked=0, Total=20
[2020-11-24 17:54:29,905 INFO  L87              Difference]: Start difference. First operand 195 states and 207 transitions. cyclomatic complexity: 13 Second operand 5 states.
[2020-11-24 17:54:29,925 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 17:54:29,925 INFO  L93              Difference]: Finished difference Result 188 states and 199 transitions.
[2020-11-24 17:54:29,925 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 5 states. 
[2020-11-24 17:54:29,925 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 188 states and 199 transitions.
[2020-11-24 17:54:29,926 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-24 17:54:29,926 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 188 states to 0 states and 0 transitions.
[2020-11-24 17:54:29,926 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 0
[2020-11-24 17:54:29,926 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 0
[2020-11-24 17:54:29,926 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 0 states and 0 transitions.
[2020-11-24 17:54:29,926 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 17:54:29,927 INFO  L728         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-24 17:54:29,927 INFO  L751         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-24 17:54:29,927 INFO  L631         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-24 17:54:29,927 INFO  L445         BuchiCegarLoop]: ======== Iteration 10============
[2020-11-24 17:54:29,927 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 0 states and 0 transitions.
[2020-11-24 17:54:29,927 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-24 17:54:29,927 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is true
[2020-11-24 17:54:29,931 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 24.11 05:54:29 BasicIcfg
[2020-11-24 17:54:29,931 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-24 17:54:29,931 INFO  L168              Benchmark]: Toolchain (without parser) took 4984.53 ms. Allocated memory was 1.0 GB in the beginning and 1.4 GB in the end (delta: 343.4 MB). Free memory was 940.6 MB in the beginning and 920.4 MB in the end (delta: 20.1 MB). Peak memory consumption was 363.5 MB. Max. memory is 15.3 GB.
[2020-11-24 17:54:29,932 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.16 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-24 17:54:29,933 INFO  L168              Benchmark]: Boogie Preprocessor took 75.28 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 929.8 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
[2020-11-24 17:54:29,933 INFO  L168              Benchmark]: UtopiaSpecLang took 48.39 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 924.5 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-24 17:54:29,933 INFO  L168              Benchmark]: Boogie Printer took 13.41 ms. Allocated memory is still 1.0 GB. Free memory is still 924.5 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-24 17:54:29,934 INFO  L168              Benchmark]: RCFGBuilder took 781.12 ms. Allocated memory is still 1.0 GB. Free memory was 924.5 MB in the beginning and 811.7 MB in the end (delta: 112.7 MB). Peak memory consumption was 112.7 MB. Max. memory is 15.3 GB.
[2020-11-24 17:54:29,934 INFO  L168              Benchmark]: UtopiaLTL2Aut took 41.36 ms. Allocated memory is still 1.0 GB. Free memory was 811.7 MB in the beginning and 808.1 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
[2020-11-24 17:54:29,934 INFO  L168              Benchmark]: BÃ¼chi Program Product took 1414.62 ms. Allocated memory was 1.0 GB in the beginning and 1.2 GB in the end (delta: 170.4 MB). Free memory was 808.1 MB in the beginning and 1.0 GB in the end (delta: -223.7 MB). Peak memory consumption was 174.6 MB. Max. memory is 15.3 GB.
[2020-11-24 17:54:29,935 INFO  L168              Benchmark]: BlockEncodingV2 took 104.75 ms. Allocated memory is still 1.2 GB. Free memory was 1.0 GB in the beginning and 974.6 MB in the end (delta: 57.3 MB). Peak memory consumption was 57.3 MB. Max. memory is 15.3 GB.
[2020-11-24 17:54:29,935 INFO  L168              Benchmark]: BuchiAutomizer took 2502.72 ms. Allocated memory was 1.2 GB in the beginning and 1.4 GB in the end (delta: 173.0 MB). Free memory was 974.6 MB in the beginning and 920.4 MB in the end (delta: 54.1 MB). Peak memory consumption was 227.1 MB. Max. memory is 15.3 GB.
[2020-11-24 17:54:29,938 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    2836 locations, 5337 edges
  - StatisticsResult: Encoded RCFG
    2756 locations, 5132 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.16 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 75.28 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 929.8 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 48.39 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 924.5 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 13.41 ms. Allocated memory is still 1.0 GB. Free memory is still 924.5 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * RCFGBuilder took 781.12 ms. Allocated memory is still 1.0 GB. Free memory was 924.5 MB in the beginning and 811.7 MB in the end (delta: 112.7 MB). Peak memory consumption was 112.7 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 41.36 ms. Allocated memory is still 1.0 GB. Free memory was 811.7 MB in the beginning and 808.1 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 1414.62 ms. Allocated memory was 1.0 GB in the beginning and 1.2 GB in the end (delta: 170.4 MB). Free memory was 808.1 MB in the beginning and 1.0 GB in the end (delta: -223.7 MB). Peak memory consumption was 174.6 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 104.75 ms. Allocated memory is still 1.2 GB. Free memory was 1.0 GB in the beginning and 974.6 MB in the end (delta: 57.3 MB). Peak memory consumption was 57.3 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 2502.72 ms. Allocated memory was 1.2 GB in the beginning and 1.4 GB in the end (delta: 173.0 MB). Free memory was 974.6 MB in the beginning and 920.4 MB in the end (delta: 54.1 MB). Peak memory consumption was 227.1 MB. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    1124 locations, 1629 edges
  - StatisticsResult: BuchiProgram size
    2836 locations, 5337 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 9 terminating modules (9 trivial, 0 deterministic, 0 nondeterministic). 9 modules have a trivial ranking function, the largest among these consists of 19 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 2.4s and 10 iterations.  TraceHistogramMax:1. Analysis of lassos took 0.7s. Construction of modules took 0.8s. BÃ¼chi inclusion checks took 0.6s. Highest rank in rank-based complementation 0. Minimization of det autom 9. Minimization of nondet autom 0. Automata minimization 0.0s AutomataMinimizationTime, 8 MinimizatonAttempts, 22 StatesRemovedByMinimization, 2 NontrivialMinimizations. Non-live state removal took 0.0s Buchi closure took 0.0s. Biggest automaton had 302 states and ocurred in iteration 2.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 3413 SDtfs, 2685 SDslu, 10264 SDs, 0 SdLazy, 3624 SolverSat, 961 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 0.8s Time	LassoAnalysisResults: nont0 unkn0 SFLI0 SFLT0 conc0 concLT0 SILN0 SILU9 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - AllSpecificationsHoldResult: All specifications hold
    Buchi Automizer proved that the LTL property ! ( ( []( (call_transfer_ERC200) ==> ( <>(success_transfer_ERC200) ) ) )) holds
RESULT: Ultimate proved your program to be correct!
Received shutdown request...
