This is Ultimate 0.1.24-f1553f5-m
[2020-11-24 16:07:45,780 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-24 16:07:45,781 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-24 16:07:45,791 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-24 16:07:45,792 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-24 16:07:45,792 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-24 16:07:45,793 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-24 16:07:45,795 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-24 16:07:45,796 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-24 16:07:45,797 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-24 16:07:45,797 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-24 16:07:45,798 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-24 16:07:45,798 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-24 16:07:45,799 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-24 16:07:45,800 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-24 16:07:45,801 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-24 16:07:45,801 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-24 16:07:45,802 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-24 16:07:45,804 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-24 16:07:45,805 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-24 16:07:45,806 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-24 16:07:45,807 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-24 16:07:45,808 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-24 16:07:45,808 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-24 16:07:45,809 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-24 16:07:45,809 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-24 16:07:45,809 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-24 16:07:45,810 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-24 16:07:45,810 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-24 16:07:45,810 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-24 16:07:45,811 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-24 16:07:45,811 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-24 16:07:45,812 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-24 16:07:45,812 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-24 16:07:45,813 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-24 16:07:45,813 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-24 16:07:45,814 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-24 16:07:45,814 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-24 16:07:45,814 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-24 16:07:45,815 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-24 16:07:45,815 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-24 16:07:45,815 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-24 16:07:45,823 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-24 16:07:45,823 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-24 16:07:45,824 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-24 16:07:45,824 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-24 16:07:45,824 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-24 16:07:45,824 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-24 16:07:45,824 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-24 16:07:45,825 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-24 16:07:45,825 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-24 16:07:45,825 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-24 16:07:45,825 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-24 16:07:45,825 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-24 16:07:45,825 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-24 16:07:45,825 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-24 16:07:45,825 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-24 16:07:45,826 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-24 16:07:45,826 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-24 16:07:45,826 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-24 16:07:45,826 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-24 16:07:45,826 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-24 16:07:45,826 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-24 16:07:45,826 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-24 16:07:45,826 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-24 16:07:45,827 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-24 16:07:45,827 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-24 16:07:45,827 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-24 16:07:45,847 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-24 16:07:45,857 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-24 16:07:45,860 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-24 16:07:45,861 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-24 16:07:45,861 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-24 16:07:45,862 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/RICH_0x025daf950c6e814dee4c96e13c98d3196d22e60c_transfer-normal.bpl
[2020-11-24 16:07:45,862 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/RICH_0x025daf950c6e814dee4c96e13c98d3196d22e60c_transfer-normal.bpl'
[2020-11-24 16:07:45,925 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-24 16:07:45,926 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-24 16:07:45,927 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-24 16:07:45,927 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-24 16:07:45,927 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-24 16:07:45,943 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "RICH_0x025daf950c6e814dee4c96e13c98d3196d22e60c_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 04:07:45" (1/1) ...
[2020-11-24 16:07:45,944 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "RICH_0x025daf950c6e814dee4c96e13c98d3196d22e60c_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 04:07:45" (1/1) ...
[2020-11-24 16:07:45,965 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "RICH_0x025daf950c6e814dee4c96e13c98d3196d22e60c_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 04:07:45" (1/1) ...
[2020-11-24 16:07:45,966 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "RICH_0x025daf950c6e814dee4c96e13c98d3196d22e60c_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 04:07:45" (1/1) ...
[2020-11-24 16:07:45,980 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "RICH_0x025daf950c6e814dee4c96e13c98d3196d22e60c_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 04:07:45" (1/1) ...
[2020-11-24 16:07:45,986 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "RICH_0x025daf950c6e814dee4c96e13c98d3196d22e60c_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 04:07:45" (1/1) ...
[2020-11-24 16:07:45,990 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "RICH_0x025daf950c6e814dee4c96e13c98d3196d22e60c_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 04:07:45" (1/1) ...
[2020-11-24 16:07:45,996 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-24 16:07:45,997 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-24 16:07:45,997 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-24 16:07:45,999 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-24 16:07:46,002 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "RICH_0x025daf950c6e814dee4c96e13c98d3196d22e60c_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 04:07:45" (1/1) ...
[2020-11-24 16:07:46,017 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(TokenERC20.transfer(to, value), p1 != msg.sender && p1 != to && msg.sender != to && value <= balances_TokenERC20[this][msg.sender] && balances_TokenERC20[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_TokenERC20[this][to] >= 0 && balances_TokenERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_TokenERC20[this][msg.sender] >= 0 &&  balances_TokenERC20[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(TokenERC20.transfer(to, value), return == true && balances_TokenERC20[this][msg.sender] == old(balances_TokenERC20[this][msg.sender]) - value && balances_TokenERC20[this][to] == old(balances_TokenERC20[this][to]) + value && _totalSupply_TokenERC20[this] == old(_totalSupply_TokenERC20[this]) && allowed_TokenERC20[this] == old(allowed_TokenERC20[this]) && balances_TokenERC20[this][p1] == old(balances_TokenERC20[this][p1]) && aSBlock_RICH[this] == old(aSBlock_RICH[this]) && aEBlock_RICH[this] == old(aEBlock_RICH[this]) && aCap_RICH[this] == old(aCap_RICH[this]) && aTot_RICH[this] == old(aTot_RICH[this]) && aAmt_RICH[this] == old(aAmt_RICH[this]) && sSBlock_RICH[this] == old(sSBlock_RICH[this]) && sEBlock_RICH[this] == old(sEBlock_RICH[this]) && sCap_RICH[this] == old(sCap_RICH[this]) && sTot_RICH[this] == old(sTot_RICH[this]) && sChunk_RICH[this] == old(sChunk_RICH[this]) && sPrice_RICH[this] == old(sPrice_RICH[this]) && symbol_TokenERC20[this] == old(symbol_TokenERC20[this]) && name_TokenERC20[this] == old(name_TokenERC20[this]) && decimals_TokenERC20[this] == old(decimals_TokenERC20[this]) && owner_Owned[this] == old(owner_Owned[this]) && newOwner_Owned[this] == old(newOwner_Owned[this]))))
[2020-11-24 16:07:46,022 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(TokenERC20.transfer(to, value), p1 != msg.sender && p1 != to && msg.sender != to && value <= balances_TokenERC20[this][msg.sender] && balances_TokenERC20[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_TokenERC20[this][to] >= 0 && balances_TokenERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_TokenERC20[this][msg.sender] >= 0 &&  balances_TokenERC20[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(TokenERC20.transfer(to, value), return == true && balances_TokenERC20[this][msg.sender] == old(balances_TokenERC20[this][msg.sender]) - value && balances_TokenERC20[this][to] == old(balances_TokenERC20[this][to]) + value && _totalSupply_TokenERC20[this] == old(_totalSupply_TokenERC20[this]) && allowed_TokenERC20[this] == old(allowed_TokenERC20[this]) && balances_TokenERC20[this][p1] == old(balances_TokenERC20[this][p1]) && aSBlock_RICH[this] == old(aSBlock_RICH[this]) && aEBlock_RICH[this] == old(aEBlock_RICH[this]) && aCap_RICH[this] == old(aCap_RICH[this]) && aTot_RICH[this] == old(aTot_RICH[this]) && aAmt_RICH[this] == old(aAmt_RICH[this]) && sSBlock_RICH[this] == old(sSBlock_RICH[this]) && sEBlock_RICH[this] == old(sEBlock_RICH[this]) && sCap_RICH[this] == old(sCap_RICH[this]) && sTot_RICH[this] == old(sTot_RICH[this]) && sChunk_RICH[this] == old(sChunk_RICH[this]) && sPrice_RICH[this] == old(sPrice_RICH[this]) && symbol_TokenERC20[this] == old(symbol_TokenERC20[this]) && name_TokenERC20[this] == old(name_TokenERC20[this]) && decimals_TokenERC20[this] == old(decimals_TokenERC20[this]) && owner_Owned[this] == old(owner_Owned[this]) && newOwner_Owned[this] == old(newOwner_Owned[this]))))
[2020-11-24 16:07:46,030 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(TokenERC20.transfer(to, value), p1 != msg.sender && p1 != to && msg.sender != to && value <= balances_TokenERC20[this][msg.sender] && balances_TokenERC20[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_TokenERC20[this][to] >= 0 && balances_TokenERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_TokenERC20[this][msg.sender] >= 0 &&  balances_TokenERC20[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(TokenERC20.transfer(to, value), return == true && balances_TokenERC20[this][msg.sender] == old(balances_TokenERC20[this][msg.sender]) - value && balances_TokenERC20[this][to] == old(balances_TokenERC20[this][to]) + value && _totalSupply_TokenERC20[this] == old(_totalSupply_TokenERC20[this]) && allowed_TokenERC20[this] == old(allowed_TokenERC20[this]) && balances_TokenERC20[this][p1] == old(balances_TokenERC20[this][p1]) && aSBlock_RICH[this] == old(aSBlock_RICH[this]) && aEBlock_RICH[this] == old(aEBlock_RICH[this]) && aCap_RICH[this] == old(aCap_RICH[this]) && aTot_RICH[this] == old(aTot_RICH[this]) && aAmt_RICH[this] == old(aAmt_RICH[this]) && sSBlock_RICH[this] == old(sSBlock_RICH[this]) && sEBlock_RICH[this] == old(sEBlock_RICH[this]) && sCap_RICH[this] == old(sCap_RICH[this]) && sTot_RICH[this] == old(sTot_RICH[this]) && sChunk_RICH[this] == old(sChunk_RICH[this]) && sPrice_RICH[this] == old(sPrice_RICH[this]) && symbol_TokenERC20[this] == old(symbol_TokenERC20[this]) && name_TokenERC20[this] == old(name_TokenERC20[this]) && decimals_TokenERC20[this] == old(decimals_TokenERC20[this]) && owner_Owned[this] == old(owner_Owned[this]) && newOwner_Owned[this] == old(newOwner_Owned[this]))))
[2020-11-24 16:07:46,036 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( ( ( p1!=msg.sender && p1!=to_s381 ) && msg.sender!=to_s381 ) && tokens_s381<=balances_TokenERC20[this][msg.sender] ) && ( balances_TokenERC20[this][to_s381] + tokens_s381 )<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && tokens_s381>=0 ) && tokens_s381<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && balances_TokenERC20[this][to_s381]>=0 ) && balances_TokenERC20[this][to_s381]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && balances_TokenERC20[this][msg.sender]>=0 ) && balances_TokenERC20[this][msg.sender]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPNEQ,IdentifierExpression[p1,GLOBAL],IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]],BinaryExpression[COMPNEQ,IdentifierExpression[p1,GLOBAL],IdentifierExpression[to_s381,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]],BinaryExpression[COMPNEQ,IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>],IdentifierExpression[to_s381,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]],BinaryExpression[COMPLEQ,IdentifierExpression[tokens_s381,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>],ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]]]],BinaryExpression[COMPLT,BinaryExpression[ARITHPLUS,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]],[IdentifierExpression[to_s381,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]],IdentifierExpression[tokens_s381,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,IdentifierExpression[tokens_s381,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>],IntegerLiteral[0]]],BinaryExpression[COMPLT,IdentifierExpression[tokens_s381,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]],[IdentifierExpression[to_s381,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]],[IdentifierExpression[to_s381,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]]
[2020-11-24 16:07:46,040 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( success_s381==true && balances_TokenERC20[this][msg.sender]==( ( old(balances_TokenERC20[this][msg.sender]) ) - tokens_s381 ) ) && balances_TokenERC20[this][to_s381]==( ( old(balances_TokenERC20[this][to_s381]) ) + tokens_s381 ) ) && _totalSupply_TokenERC20[this]==( old(_totalSupply_TokenERC20[this]) ) ) && allowed_TokenERC20[this]==( old(allowed_TokenERC20[this]) ) ) && balances_TokenERC20[this][p1]==( old(balances_TokenERC20[this][p1]) ) ) && aSBlock_RICH[this]==( old(aSBlock_RICH[this]) ) ) && aEBlock_RICH[this]==( old(aEBlock_RICH[this]) ) ) && aCap_RICH[this]==( old(aCap_RICH[this]) ) ) && aTot_RICH[this]==( old(aTot_RICH[this]) ) ) && aAmt_RICH[this]==( old(aAmt_RICH[this]) ) ) && sSBlock_RICH[this]==( old(sSBlock_RICH[this]) ) ) && sEBlock_RICH[this]==( old(sEBlock_RICH[this]) ) ) && sCap_RICH[this]==( old(sCap_RICH[this]) ) ) && sTot_RICH[this]==( old(sTot_RICH[this]) ) ) && sChunk_RICH[this]==( old(sChunk_RICH[this]) ) ) && sPrice_RICH[this]==( old(sPrice_RICH[this]) ) ) && symbol_TokenERC20[this]==( old(symbol_TokenERC20[this]) ) ) && name_TokenERC20[this]==( old(name_TokenERC20[this]) ) ) && decimals_TokenERC20[this]==( old(decimals_TokenERC20[this]) ) ) && owner_Owned[this]==( old(owner_Owned[this]) ) ) && newOwner_Owned[this]==( old(newOwner_Owned[this]) ) ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[success_s381,<IMPLEMENTATION_OUTPARAM,transfer~address~uint256_TokenERC20>],BooleanLiteral[true]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]],BinaryExpression[ARITHMINUS,UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]]],IdentifierExpression[tokens_s381,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]],[IdentifierExpression[to_s381,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]],BinaryExpression[ARITHPLUS,UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]],[IdentifierExpression[to_s381,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]]],IdentifierExpression[tokens_s381,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_totalSupply_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_totalSupply_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[allowed_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[allowed_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]],[IdentifierExpression[p1,GLOBAL]]],UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]],[IdentifierExpression[p1,GLOBAL]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[aSBlock_RICH,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[aSBlock_RICH,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[aEBlock_RICH,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[aEBlock_RICH,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[aCap_RICH,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[aCap_RICH,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[aTot_RICH,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[aTot_RICH,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[aAmt_RICH,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[aAmt_RICH,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[sSBlock_RICH,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[sSBlock_RICH,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[sEBlock_RICH,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[sEBlock_RICH,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[sCap_RICH,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[sCap_RICH,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[sTot_RICH,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[sTot_RICH,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[sChunk_RICH,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[sChunk_RICH,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[sPrice_RICH,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[sPrice_RICH,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[symbol_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[symbol_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[name_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[name_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[decimals_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[decimals_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[owner_Owned,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[owner_Owned,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[newOwner_Owned,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[newOwner_Owned,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]]]]]
[2020-11-24 16:07:46,043 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(TokenERC20.transfer(to, value), p1 != msg.sender && p1 != to && msg.sender != to && value <= balances_TokenERC20[this][msg.sender] && balances_TokenERC20[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_TokenERC20[this][to] >= 0 && balances_TokenERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_TokenERC20[this][msg.sender] >= 0 &&  balances_TokenERC20[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(TokenERC20.transfer(to, value), return == true && balances_TokenERC20[this][msg.sender] == old(balances_TokenERC20[this][msg.sender]) - value && balances_TokenERC20[this][to] == old(balances_TokenERC20[this][to]) + value && _totalSupply_TokenERC20[this] == old(_totalSupply_TokenERC20[this]) && allowed_TokenERC20[this] == old(allowed_TokenERC20[this]) && balances_TokenERC20[this][p1] == old(balances_TokenERC20[this][p1]) && aSBlock_RICH[this] == old(aSBlock_RICH[this]) && aEBlock_RICH[this] == old(aEBlock_RICH[this]) && aCap_RICH[this] == old(aCap_RICH[this]) && aTot_RICH[this] == old(aTot_RICH[this]) && aAmt_RICH[this] == old(aAmt_RICH[this]) && sSBlock_RICH[this] == old(sSBlock_RICH[this]) && sEBlock_RICH[this] == old(sEBlock_RICH[this]) && sCap_RICH[this] == old(sCap_RICH[this]) && sTot_RICH[this] == old(sTot_RICH[this]) && sChunk_RICH[this] == old(sChunk_RICH[this]) && sPrice_RICH[this] == old(sPrice_RICH[this]) && symbol_TokenERC20[this] == old(symbol_TokenERC20[this]) && name_TokenERC20[this] == old(name_TokenERC20[this]) && decimals_TokenERC20[this] == old(decimals_TokenERC20[this]) && owner_Owned[this] == old(owner_Owned[this]) && newOwner_Owned[this] == old(newOwner_Owned[this]))))
[2020-11-24 16:07:46,043 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_transfer_TokenERC200) ==> ( <>AP(success_transfer_TokenERC200) ) ) )
Executed UtopiaSpecLang
[2020-11-24 16:07:46,048 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 04:07:46 PropertyContainer
[2020-11-24 16:07:46,048 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-24 16:07:46,049 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-24 16:07:46,049 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-24 16:07:46,049 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-24 16:07:46,049 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "RICH_0x025daf950c6e814dee4c96e13c98d3196d22e60c_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 04:07:45" (1/2) ...
[2020-11-24 16:07:46,050 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-24 16:07:46,050 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-24 16:07:46,058 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 04:07:46" (2/2) ...
[2020-11-24 16:07:46,058 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-24 16:07:46,059 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-24 16:07:46,059 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-24 16:07:46,059 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-24 16:07:46,060 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "RICH_0x025daf950c6e814dee4c96e13c98d3196d22e60c_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 04:07:45" (1/2) ...
[2020-11-24 16:07:46,115 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-24 16:07:46,115 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__success
[2020-11-24 16:07:46,116 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__success
[2020-11-24 16:07:46,116 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_TokenERC20
[2020-11-24 16:07:46,117 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_TokenERC20
[2020-11-24 16:07:46,117 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_TokenERC20
[2020-11-24 16:07:46,117 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_TokenERC20
[2020-11-24 16:07:46,117 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_TokenERC20
[2020-11-24 16:07:46,117 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_TokenERC20
[2020-11-24 16:07:46,117 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_TokenERC20
[2020-11-24 16:07:46,117 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_TokenERC20
[2020-11-24 16:07:46,117 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_TokenERC20
[2020-11-24 16:07:46,117 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_TokenERC20
[2020-11-24 16:07:46,118 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_TokenERC20
[2020-11-24 16:07:46,118 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_TokenERC20
[2020-11-24 16:07:46,118 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-24 16:07:46,118 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-24 16:07:46,118 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-24 16:07:46,118 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__success
[2020-11-24 16:07:46,118 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_SafeMath
[2020-11-24 16:07:46,118 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_SafeMath
[2020-11-24 16:07:46,118 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20Interface
[2020-11-24 16:07:46,118 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20Interface
[2020-11-24 16:07:46,118 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ApproveAndCallFallBack
[2020-11-24 16:07:46,119 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ApproveAndCallFallBack
[2020-11-24 16:07:46,119 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_Owned
[2020-11-24 16:07:46,119 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_Owned
[2020-11-24 16:07:46,119 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_TokenERC20
[2020-11-24 16:07:46,119 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_TokenERC20
[2020-11-24 16:07:46,119 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_RICH
[2020-11-24 16:07:46,119 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-24 16:07:46,119 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-24 16:07:46,119 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__fail
[2020-11-24 16:07:46,119 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-24 16:07:46,119 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_TokenERC20__success
[2020-11-24 16:07:46,119 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_TokenERC20__fail
[2020-11-24 16:07:46,119 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_TokenERC20__success
[2020-11-24 16:07:46,120 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_TokenERC20__fail
[2020-11-24 16:07:46,120 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_TokenERC20__success
[2020-11-24 16:07:46,120 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_TokenERC20__fail
[2020-11-24 16:07:46,120 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_TokenERC20__success
[2020-11-24 16:07:46,120 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_TokenERC20__fail
[2020-11-24 16:07:46,120 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_TokenERC20__success
[2020-11-24 16:07:46,120 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_TokenERC20__fail
[2020-11-24 16:07:46,120 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_TokenERC20__success
[2020-11-24 16:07:46,120 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_TokenERC20__fail
[2020-11-24 16:07:46,120 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-24 16:07:46,120 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-24 16:07:46,120 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-24 16:07:46,120 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__fail
[2020-11-24 16:07:46,121 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-24 16:07:46,121 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-24 16:07:46,121 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__fail
[2020-11-24 16:07:46,121 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__success
[2020-11-24 16:07:46,121 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-24 16:07:46,121 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__success
[2020-11-24 16:07:46,121 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_TokenERC20__fail
[2020-11-24 16:07:46,121 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_TokenERC20__success
[2020-11-24 16:07:46,121 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_TokenERC20__fail
[2020-11-24 16:07:46,121 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_TokenERC20__success
[2020-11-24 16:07:46,121 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_TokenERC20__fail
[2020-11-24 16:07:46,121 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_TokenERC20__success
[2020-11-24 16:07:46,121 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_TokenERC20__fail
[2020-11-24 16:07:46,121 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_TokenERC20__success
[2020-11-24 16:07:46,122 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_TokenERC20__fail
[2020-11-24 16:07:46,122 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_TokenERC20__success
[2020-11-24 16:07:46,122 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_TokenERC20__fail
[2020-11-24 16:07:46,122 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_TokenERC20__success
[2020-11-24 16:07:46,122 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-24 16:07:46,122 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-24 16:07:46,122 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-24 16:07:46,122 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-24 16:07:46,122 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-24 16:07:46,122 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-24 16:07:46,122 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__fail
[2020-11-24 16:07:46,122 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__success
[2020-11-24 16:07:46,123 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_SafeMath
[2020-11-24 16:07:46,123 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_SafeMath
[2020-11-24 16:07:46,123 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20Interface
[2020-11-24 16:07:46,123 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20Interface
[2020-11-24 16:07:46,123 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ApproveAndCallFallBack
[2020-11-24 16:07:46,123 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ApproveAndCallFallBack
[2020-11-24 16:07:46,123 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_Owned
[2020-11-24 16:07:46,123 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_Owned
[2020-11-24 16:07:46,123 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_TokenERC20
[2020-11-24 16:07:46,123 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_TokenERC20
[2020-11-24 16:07:46,123 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_RICH
[2020-11-24 16:07:46,123 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-24 16:07:46,124 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-24 16:07:46,124 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-24 16:07:46,382 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 16:07:46,612 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 16:07:46,613 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 16:07:46,613 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 16:07:46,661 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-24 16:07:46,661 INFO  L286             CfgBuilder]: Removed 6 assue(true) statements.
[2020-11-24 16:07:46,663 INFO  L202        PluginConnector]: Adding new model RICH_0x025daf950c6e814dee4c96e13c98d3196d22e60c_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 04:07:46 BoogieIcfgContainer
[2020-11-24 16:07:46,663 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 04:07:46" (2/2) ...
[2020-11-24 16:07:46,663 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-24 16:07:46,663 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@7f90b210 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 04:07:46, skipping insertion in model container
[2020-11-24 16:07:46,663 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-24 16:07:46,664 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-24 16:07:46,664 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-24 16:07:46,665 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-24 16:07:46,665 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "RICH_0x025daf950c6e814dee4c96e13c98d3196d22e60c_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 04:07:45" (1/3) ...
[2020-11-24 16:07:46,666 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@4aed036e and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 04:07:46, skipping insertion in model container
[2020-11-24 16:07:46,666 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 04:07:46" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-24 16:07:46,702 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 04:07:46 NWAContainer
[2020-11-24 16:07:46,703 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-24 16:07:46,703 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-24 16:07:46,703 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-24 16:07:46,704 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-24 16:07:46,705 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "RICH_0x025daf950c6e814dee4c96e13c98d3196d22e60c_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 04:07:46" (3/4) ...
[2020-11-24 16:07:46,706 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@8aa7113 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 04:07:46, skipping insertion in model container
[2020-11-24 16:07:46,706 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 04:07:46" (4/4) ...
[2020-11-24 16:07:46,709 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-24 16:07:46,711 INFO  L110   BuchiProductObserver]: Initial RCFG 752 locations, 913 edges
[2020-11-24 16:07:46,711 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-24 16:07:46,724 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-24 16:07:47,708 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-24 16:07:47,712 INFO  L110   BuchiProductObserver]: BuchiProgram size 1740 locations, 2948 edges
[2020-11-24 16:07:47,712 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 04:07:47 BoogieIcfgContainer
[2020-11-24 16:07:47,712 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-24 16:07:47,712 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-24 16:07:47,712 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-24 16:07:47,714 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-24 16:07:47,715 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 04:07:47" (1/1) ...
[2020-11-24 16:07:47,761 INFO  L313           BlockEncoder]: Initial Icfg 1740 locations, 2948 edges
[2020-11-24 16:07:47,761 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-24 16:07:47,762 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-24 16:07:47,762 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-24 16:07:47,763 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-24 16:07:47,769 INFO  L70    emoveInfeasibleEdges]: Removed 51 edges and 15 locations because of local infeasibility
[2020-11-24 16:07:47,774 INFO  L70        RemoveSinkStates]: Removed 2 edges and 1 locations by removing sink states
[2020-11-24 16:07:47,779 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-24 16:07:47,781 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-24 16:07:47,783 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-24 16:07:47,784 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-24 16:07:47,787 INFO  L313           BlockEncoder]: Encoded RCFG 1706 locations, 2869 edges
[2020-11-24 16:07:47,787 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 24.11 04:07:47 BasicIcfg
[2020-11-24 16:07:47,787 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-24 16:07:47,788 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-24 16:07:47,788 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-24 16:07:47,791 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-24 16:07:47,791 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 16:07:47,791 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "RICH_0x025daf950c6e814dee4c96e13c98d3196d22e60c_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 04:07:45" (1/6) ...
[2020-11-24 16:07:47,793 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@7e03fd74 and model type RICH_0x025daf950c6e814dee4c96e13c98d3196d22e60c_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 24.11 04:07:47, skipping insertion in model container
[2020-11-24 16:07:47,793 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 16:07:47,793 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 04:07:46" (2/6) ...
[2020-11-24 16:07:47,793 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@7e03fd74 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 24.11 04:07:47, skipping insertion in model container
[2020-11-24 16:07:47,793 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 16:07:47,793 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "RICH_0x025daf950c6e814dee4c96e13c98d3196d22e60c_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 04:07:46" (3/6) ...
[2020-11-24 16:07:47,794 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@7e03fd74 and model type RICH_0x025daf950c6e814dee4c96e13c98d3196d22e60c_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 24.11 04:07:47, skipping insertion in model container
[2020-11-24 16:07:47,794 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 16:07:47,794 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 04:07:46" (4/6) ...
[2020-11-24 16:07:47,794 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@7e03fd74 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 24.11 04:07:47, skipping insertion in model container
[2020-11-24 16:07:47,794 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 16:07:47,794 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 04:07:47" (5/6) ...
[2020-11-24 16:07:47,795 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@7e03fd74 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 24.11 04:07:47, skipping insertion in model container
[2020-11-24 16:07:47,795 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 16:07:47,795 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 24.11 04:07:47" (6/6) ...
[2020-11-24 16:07:47,796 INFO  L404   chiAutomizerObserver]: Analyzing ICFG RICH_0x025daf950c6e814dee4c96e13c98d3196d22e60c_transfer-normal.bpl_BEv2
[2020-11-24 16:07:47,829 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-24 16:07:47,829 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-24 16:07:47,829 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-24 16:07:47,829 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-24 16:07:47,830 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-24 16:07:47,830 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-24 16:07:47,830 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-24 16:07:47,830 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-24 16:07:47,830 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-24 16:07:47,850 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1706 states.
[2020-11-24 16:07:47,883 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 16:07:47,883 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 16:07:47,883 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 16:07:47,891 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 16:07:47,891 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
[2020-11-24 16:07:47,891 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-24 16:07:47,891 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1706 states.
[2020-11-24 16:07:47,899 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 16:07:47,899 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 16:07:47,899 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 16:07:47,900 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 16:07:47,900 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L3]                 success_transfer_TokenERC200 := false;
[L3]                 call_transfer_TokenERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p1;
[L2249]              assume null == 0;
[L2250]  CALL        call this := FreshRefGenerator__success();
[L897]               havoc newRef;
[L898]               assume Alloc[newRef] == false;
[L899]               Alloc[newRef] := true;
[L900]               assume newRef != null;
[L2250]  RET         call this := FreshRefGenerator__success();
[L2251]              assume now >= 0;
[L2252]              assume DType[this] == RICH;
[L2253]              assume !revert && gas >= 0;
[L2254]  CALL        call CorralChoice_RICH(this);
[L2131]              havoc msgsender_MSG;
[L2132]              havoc msgvalue_MSG;
[L2133]              havoc choice;
[L2134]              havoc __ret_0_totalSupply;
[L2135]              havoc tokenOwner_s338;
[L2136]              havoc balance_s338;
[L2137]              havoc tokenOwner_s484;
[L2138]              havoc spender_s484;
[L2139]              havoc remaining_s484;
[L2140]              havoc to_s381;
[L2141]              havoc tokens_s381;
[L2142]              havoc success_s381;
[L2143]              havoc spender_s409;
[L2144]              havoc tokens_s409;
[L2145]              havoc success_s409;
[L2146]              havoc from_s468;
[L2147]              havoc to_s468;
[L2148]              havoc tokens_s468;
[L2149]              havoc success_s468;
[L2150]              havoc __ret_0_owner;
[L2151]              havoc __ret_0_newOwner;
[L2152]              havoc _newOwner_s217;
[L2153]              havoc __ret_0_symbol;
[L2154]              havoc __ret_0_name;
[L2155]              havoc __ret_0_decimals;
[L2156]              havoc spender_s527;
[L2157]              havoc tokens_s527;
[L2158]              havoc data_s527;
[L2159]              havoc success_s527;
[L2160]              havoc __ret_0_aSBlock;
[L2161]              havoc __ret_0_aEBlock;
[L2162]              havoc __ret_0_aCap;
[L2163]              havoc __ret_0_aTot;
[L2164]              havoc __ret_0_aAmt;
[L2165]              havoc __ret_0_sSBlock;
[L2166]              havoc __ret_0_sEBlock;
[L2167]              havoc __ret_0_sCap;
[L2168]              havoc __ret_0_sTot;
[L2169]              havoc __ret_0_sChunk;
[L2170]              havoc __ret_0_sPrice;
[L2171]              havoc _refer_s687;
[L2172]              havoc success_s687;
[L2173]              havoc _refer_s847;
[L2174]              havoc success_s847;
[L2175]              havoc StartBlock_s868;
[L2176]              havoc EndBlock_s868;
[L2177]              havoc DropCap_s868;
[L2178]              havoc DropCount_s868;
[L2179]              havoc DropAmount_s868;
[L2180]              havoc StartBlock_s892;
[L2181]              havoc EndBlock_s892;
[L2182]              havoc SaleCap_s892;
[L2183]              havoc SaleCount_s892;
[L2184]              havoc ChunkSize_s892;
[L2185]              havoc SalePrice_s892;
[L2186]              havoc _aSBlock_s926;
[L2187]              havoc _aEBlock_s926;
[L2188]              havoc _aAmt_s926;
[L2189]              havoc _aCap_s926;
[L2190]              havoc _sSBlock_s966;
[L2191]              havoc _sEBlock_s966;
[L2192]              havoc _sChunk_s966;
[L2193]              havoc _sPrice_s966;
[L2194]              havoc _sCap_s966;
[L2195]              havoc tmpNow;
[L2196]              havoc gas;
[L2197]              assume gas > 4000000 && gas <= 8000000;
[L2198]              tmpNow := now;
[L2199]              havoc now;
[L2200]              assume now > tmpNow;
[L2201]              assume msgsender_MSG != null;
[L2202]  COND TRUE   choice == 6
[L2203]              gas := gas - 21000;
[L2204]  COND FALSE  !(gas >= 0)
[L2254]  RET         call CorralChoice_RICH(this);

Loop:
[L2254]        assume true;

[2020-11-24 16:07:47,914 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 16:07:47,914 INFO  L82        PathProgramCache]: Analyzing trace with hash 1486935302, now seen corresponding path program 1 times
[2020-11-24 16:07:47,918 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 16:07:47,941 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 16:07:47,996 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 16:07:47,998 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 16:07:47,998 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-24 16:07:48,002 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 16:07:48,098 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-24 16:07:48,099 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-24 16:07:48,102 INFO  L87              Difference]: Start difference. First operand 1706 states. Second operand 3 states.
[2020-11-24 16:07:48,190 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 16:07:48,190 INFO  L93              Difference]: Finished difference Result 663 states and 717 transitions.
[2020-11-24 16:07:48,190 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-24 16:07:48,191 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 663 states and 717 transitions.
[2020-11-24 16:07:48,195 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 16:07:48,199 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 663 states to 213 states and 222 transitions.
[2020-11-24 16:07:48,200 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 4
[2020-11-24 16:07:48,200 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 213
[2020-11-24 16:07:48,201 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 213 states and 222 transitions.
[2020-11-24 16:07:48,202 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 16:07:48,202 INFO  L728         BuchiCegarLoop]: Abstraction has 213 states and 222 transitions.
[2020-11-24 16:07:48,215 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 213 states and 222 transitions.
[2020-11-24 16:07:48,229 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 213 to 213.
[2020-11-24 16:07:48,229 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 213 states.
[2020-11-24 16:07:48,230 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 213 states to 213 states and 222 transitions.
[2020-11-24 16:07:48,231 INFO  L751         BuchiCegarLoop]: Abstraction has 213 states and 222 transitions.
[2020-11-24 16:07:48,231 INFO  L631         BuchiCegarLoop]: Abstraction has 213 states and 222 transitions.
[2020-11-24 16:07:48,231 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-24 16:07:48,231 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 213 states and 222 transitions.
[2020-11-24 16:07:48,233 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 16:07:48,233 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 16:07:48,233 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 16:07:48,234 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 16:07:48,234 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L3]                 success_transfer_TokenERC200 := false;
[L3]                 call_transfer_TokenERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p1;
[L2249]              assume null == 0;
[L2250]  CALL        call this := FreshRefGenerator__success();
[L897]               havoc newRef;
[L898]               assume Alloc[newRef] == false;
[L899]               Alloc[newRef] := true;
[L900]               assume newRef != null;
[L2250]  RET         call this := FreshRefGenerator__success();
[L2251]              assume now >= 0;
[L2252]              assume DType[this] == RICH;
[L2253]              assume !revert && gas >= 0;
[L2254]  CALL        call CorralChoice_RICH(this);
[L2131]              havoc msgsender_MSG;
[L2132]              havoc msgvalue_MSG;
[L2133]              havoc choice;
[L2134]              havoc __ret_0_totalSupply;
[L2135]              havoc tokenOwner_s338;
[L2136]              havoc balance_s338;
[L2137]              havoc tokenOwner_s484;
[L2138]              havoc spender_s484;
[L2139]              havoc remaining_s484;
[L2140]              havoc to_s381;
[L2141]              havoc tokens_s381;
[L2142]              havoc success_s381;
[L2143]              havoc spender_s409;
[L2144]              havoc tokens_s409;
[L2145]              havoc success_s409;
[L2146]              havoc from_s468;
[L2147]              havoc to_s468;
[L2148]              havoc tokens_s468;
[L2149]              havoc success_s468;
[L2150]              havoc __ret_0_owner;
[L2151]              havoc __ret_0_newOwner;
[L2152]              havoc _newOwner_s217;
[L2153]              havoc __ret_0_symbol;
[L2154]              havoc __ret_0_name;
[L2155]              havoc __ret_0_decimals;
[L2156]              havoc spender_s527;
[L2157]              havoc tokens_s527;
[L2158]              havoc data_s527;
[L2159]              havoc success_s527;
[L2160]              havoc __ret_0_aSBlock;
[L2161]              havoc __ret_0_aEBlock;
[L2162]              havoc __ret_0_aCap;
[L2163]              havoc __ret_0_aTot;
[L2164]              havoc __ret_0_aAmt;
[L2165]              havoc __ret_0_sSBlock;
[L2166]              havoc __ret_0_sEBlock;
[L2167]              havoc __ret_0_sCap;
[L2168]              havoc __ret_0_sTot;
[L2169]              havoc __ret_0_sChunk;
[L2170]              havoc __ret_0_sPrice;
[L2171]              havoc _refer_s687;
[L2172]              havoc success_s687;
[L2173]              havoc _refer_s847;
[L2174]              havoc success_s847;
[L2175]              havoc StartBlock_s868;
[L2176]              havoc EndBlock_s868;
[L2177]              havoc DropCap_s868;
[L2178]              havoc DropCount_s868;
[L2179]              havoc DropAmount_s868;
[L2180]              havoc StartBlock_s892;
[L2181]              havoc EndBlock_s892;
[L2182]              havoc SaleCap_s892;
[L2183]              havoc SaleCount_s892;
[L2184]              havoc ChunkSize_s892;
[L2185]              havoc SalePrice_s892;
[L2186]              havoc _aSBlock_s926;
[L2187]              havoc _aEBlock_s926;
[L2188]              havoc _aAmt_s926;
[L2189]              havoc _aCap_s926;
[L2190]              havoc _sSBlock_s966;
[L2191]              havoc _sEBlock_s966;
[L2192]              havoc _sChunk_s966;
[L2193]              havoc _sPrice_s966;
[L2194]              havoc _sCap_s966;
[L2195]              havoc tmpNow;
[L2196]              havoc gas;
[L2197]              assume gas > 4000000 && gas <= 8000000;
[L2198]              tmpNow := now;
[L2199]              havoc now;
[L2200]              assume now > tmpNow;
[L2201]              assume msgsender_MSG != null;
[L2202]  COND FALSE  !(choice == 6)
[L2208]  COND FALSE  !(choice == 5)
[L2214]  COND FALSE  !(choice == 4)
[L2220]  COND TRUE   choice == 3
[L2221]              gas := gas - 21000;
[L2222]  COND TRUE   gas >= 0
[L2223]              assume tokens_s381 >= 0 && tokens_s381 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2224]              assume msgvalue_MSG == 0;
[L2225]  CALL        call success_s381 := transfer~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, to_s381, tokens_s381);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != to_s381) && msgsender_MSG != to_s381) && tokens_s381 <= balances_TokenERC20[this][msgsender_MSG]) && balances_TokenERC20[this][to_s381] + tokens_s381 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && tokens_s381 >= 0) && tokens_s381 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_TokenERC20[this][to_s381] >= 0) && balances_TokenERC20[this][to_s381] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_TokenERC20[this][msgsender_MSG] >= 0) && balances_TokenERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_TokenERC200 := true;
[L3]                 call_transfer_TokenERC200 := false;
[L3]                 revert := revert_hold;
[L244]               havoc __exception;
[L245]               revert := false;
[L246]   COND FALSE  !(__exception)
[L280]   CALL        call success_s381 := transfer~address~uint256_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, to_s381, tokens_s381);
[L1003]  CALL        call __var_3 := sub~uint256~uint256_SafeMath__success(this, this, 0, balances_TokenERC20[this][msgsender_MSG], tokens_s381);
[L932]   COND TRUE   !(b_s45 <= a_s45)
[L933]               revert := true;
[L1003]  RET         call __var_3 := sub~uint256~uint256_SafeMath__success(this, this, 0, balances_TokenERC20[this][msgsender_MSG], tokens_s381);
[L1004]  COND TRUE   revert
[L280]   RET         call success_s381 := transfer~address~uint256_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, to_s381, tokens_s381);
[L281]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((((((((((((((((success_s381 == true && balances_TokenERC20[this][msgsender_MSG] == old(balances_TokenERC20[this][msgsender_MSG]) - tokens_s381) && balances_TokenERC20[this][to_s381] == old(balances_TokenERC20[this][to_s381]) + tokens_s381) && _totalSupply_TokenERC20[this] == old(_totalSupply_TokenERC20[this])) && allowed_TokenERC20[this] == old(allowed_TokenERC20[this])) && balances_TokenERC20[this][p1] == old(balances_TokenERC20[this][p1])) && aSBlock_RICH[this] == old(aSBlock_RICH[this])) && aEBlock_RICH[this] == old(aEBlock_RICH[this])) && aCap_RICH[this] == old(aCap_RICH[this])) && aTot_RICH[this] == old(aTot_RICH[this])) && aAmt_RICH[this] == old(aAmt_RICH[this])) && sSBlock_RICH[this] == old(sSBlock_RICH[this])) && sEBlock_RICH[this] == old(sEBlock_RICH[this])) && sCap_RICH[this] == old(sCap_RICH[this])) && sTot_RICH[this] == old(sTot_RICH[this])) && sChunk_RICH[this] == old(sChunk_RICH[this])) && sPrice_RICH[this] == old(sPrice_RICH[this])) && symbol_TokenERC20[this] == old(symbol_TokenERC20[this])) && name_TokenERC20[this] == old(name_TokenERC20[this])) && decimals_TokenERC20[this] == old(decimals_TokenERC20[this])) && owner_Owned[this] == old(owner_Owned[this])) && newOwner_Owned[this] == old(newOwner_Owned[this]));
[L3]                 revert := revert_hold;
[L2225]  RET         call success_s381 := transfer~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, to_s381, tokens_s381);
[L2254]  RET         call CorralChoice_RICH(this);

Loop:
[L2254]        assume true;

[2020-11-24 16:07:48,238 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 16:07:48,238 INFO  L82        PathProgramCache]: Analyzing trace with hash 2029098113, now seen corresponding path program 1 times
[2020-11-24 16:07:48,239 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 16:07:48,253 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 16:07:48,269 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 16:07:48,269 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 16:07:48,269 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-24 16:07:48,270 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 16:07:48,270 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-24 16:07:48,271 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-24 16:07:48,271 INFO  L87              Difference]: Start difference. First operand 213 states and 222 transitions. cyclomatic complexity: 10 Second operand 3 states.
[2020-11-24 16:07:48,277 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 16:07:48,277 INFO  L93              Difference]: Finished difference Result 244 states and 252 transitions.
[2020-11-24 16:07:48,277 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-24 16:07:48,277 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 244 states and 252 transitions.
[2020-11-24 16:07:48,278 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 2
[2020-11-24 16:07:48,280 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 244 states to 230 states and 235 transitions.
[2020-11-24 16:07:48,280 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 230
[2020-11-24 16:07:48,280 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 230
[2020-11-24 16:07:48,280 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 230 states and 235 transitions.
[2020-11-24 16:07:48,281 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 16:07:48,281 INFO  L728         BuchiCegarLoop]: Abstraction has 230 states and 235 transitions.
[2020-11-24 16:07:48,282 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 230 states and 235 transitions.
[2020-11-24 16:07:48,286 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 230 to 219.
[2020-11-24 16:07:48,286 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 219 states.
[2020-11-24 16:07:48,286 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 219 states to 219 states and 224 transitions.
[2020-11-24 16:07:48,287 INFO  L751         BuchiCegarLoop]: Abstraction has 219 states and 224 transitions.
[2020-11-24 16:07:48,287 INFO  L631         BuchiCegarLoop]: Abstraction has 219 states and 224 transitions.
[2020-11-24 16:07:48,287 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-24 16:07:48,287 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 219 states and 224 transitions.
[2020-11-24 16:07:48,287 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 16:07:48,288 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 16:07:48,288 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 16:07:48,289 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 16:07:48,289 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L3]                 success_transfer_TokenERC200 := false;
[L3]                 call_transfer_TokenERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p1;
[L2249]              assume null == 0;
[L2250]  CALL        call this := FreshRefGenerator__success();
[L897]               havoc newRef;
[L898]               assume Alloc[newRef] == false;
[L899]               Alloc[newRef] := true;
[L900]               assume newRef != null;
[L2250]  RET         call this := FreshRefGenerator__success();
[L2251]              assume now >= 0;
[L2252]              assume DType[this] == RICH;
[L2253]              assume !revert && gas >= 0;
[L2254]  CALL        call CorralChoice_RICH(this);
[L2131]              havoc msgsender_MSG;
[L2132]              havoc msgvalue_MSG;
[L2133]              havoc choice;
[L2134]              havoc __ret_0_totalSupply;
[L2135]              havoc tokenOwner_s338;
[L2136]              havoc balance_s338;
[L2137]              havoc tokenOwner_s484;
[L2138]              havoc spender_s484;
[L2139]              havoc remaining_s484;
[L2140]              havoc to_s381;
[L2141]              havoc tokens_s381;
[L2142]              havoc success_s381;
[L2143]              havoc spender_s409;
[L2144]              havoc tokens_s409;
[L2145]              havoc success_s409;
[L2146]              havoc from_s468;
[L2147]              havoc to_s468;
[L2148]              havoc tokens_s468;
[L2149]              havoc success_s468;
[L2150]              havoc __ret_0_owner;
[L2151]              havoc __ret_0_newOwner;
[L2152]              havoc _newOwner_s217;
[L2153]              havoc __ret_0_symbol;
[L2154]              havoc __ret_0_name;
[L2155]              havoc __ret_0_decimals;
[L2156]              havoc spender_s527;
[L2157]              havoc tokens_s527;
[L2158]              havoc data_s527;
[L2159]              havoc success_s527;
[L2160]              havoc __ret_0_aSBlock;
[L2161]              havoc __ret_0_aEBlock;
[L2162]              havoc __ret_0_aCap;
[L2163]              havoc __ret_0_aTot;
[L2164]              havoc __ret_0_aAmt;
[L2165]              havoc __ret_0_sSBlock;
[L2166]              havoc __ret_0_sEBlock;
[L2167]              havoc __ret_0_sCap;
[L2168]              havoc __ret_0_sTot;
[L2169]              havoc __ret_0_sChunk;
[L2170]              havoc __ret_0_sPrice;
[L2171]              havoc _refer_s687;
[L2172]              havoc success_s687;
[L2173]              havoc _refer_s847;
[L2174]              havoc success_s847;
[L2175]              havoc StartBlock_s868;
[L2176]              havoc EndBlock_s868;
[L2177]              havoc DropCap_s868;
[L2178]              havoc DropCount_s868;
[L2179]              havoc DropAmount_s868;
[L2180]              havoc StartBlock_s892;
[L2181]              havoc EndBlock_s892;
[L2182]              havoc SaleCap_s892;
[L2183]              havoc SaleCount_s892;
[L2184]              havoc ChunkSize_s892;
[L2185]              havoc SalePrice_s892;
[L2186]              havoc _aSBlock_s926;
[L2187]              havoc _aEBlock_s926;
[L2188]              havoc _aAmt_s926;
[L2189]              havoc _aCap_s926;
[L2190]              havoc _sSBlock_s966;
[L2191]              havoc _sEBlock_s966;
[L2192]              havoc _sChunk_s966;
[L2193]              havoc _sPrice_s966;
[L2194]              havoc _sCap_s966;
[L2195]              havoc tmpNow;
[L2196]              havoc gas;
[L2197]              assume gas > 4000000 && gas <= 8000000;
[L2198]              tmpNow := now;
[L2199]              havoc now;
[L2200]              assume now > tmpNow;
[L2201]              assume msgsender_MSG != null;
[L2202]  COND FALSE  !(choice == 6)
[L2208]  COND FALSE  !(choice == 5)
[L2214]  COND FALSE  !(choice == 4)
[L2220]  COND TRUE   choice == 3
[L2221]              gas := gas - 21000;
[L2222]  COND TRUE   gas >= 0
[L2223]              assume tokens_s381 >= 0 && tokens_s381 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2224]              assume msgvalue_MSG == 0;
[L2225]  CALL        call success_s381 := transfer~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, to_s381, tokens_s381);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != to_s381) && msgsender_MSG != to_s381) && tokens_s381 <= balances_TokenERC20[this][msgsender_MSG]) && balances_TokenERC20[this][to_s381] + tokens_s381 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && tokens_s381 >= 0) && tokens_s381 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_TokenERC20[this][to_s381] >= 0) && balances_TokenERC20[this][to_s381] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_TokenERC20[this][msgsender_MSG] >= 0) && balances_TokenERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_TokenERC200 := true;
[L3]                 call_transfer_TokenERC200 := false;
[L3]                 revert := revert_hold;
[L244]               havoc __exception;
[L245]               revert := false;
[L246]   COND FALSE  !(__exception)
[L280]   CALL        call success_s381 := transfer~address~uint256_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, to_s381, tokens_s381);
[L1003]  CALL        call __var_3 := sub~uint256~uint256_SafeMath__success(this, this, 0, balances_TokenERC20[this][msgsender_MSG], tokens_s381);
[L932]   COND FALSE  !(!(b_s45 <= a_s45))
[L936]               c_s45 := (a_s45 - b_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1003]  RET         call __var_3 := sub~uint256~uint256_SafeMath__success(this, this, 0, balances_TokenERC20[this][msgsender_MSG], tokens_s381);
[L1004]  COND FALSE  !(revert)
[L1007]              sum_balances0[this] := sum_balances0[this] - balances_TokenERC20[this][msgsender_MSG];
[L1008]              balances_TokenERC20[this][msgsender_MSG] := __var_3;
[L1009]              sum_balances0[this] := sum_balances0[this] + balances_TokenERC20[this][msgsender_MSG];
[L1010]  CALL        call __var_4 := add~uint256~uint256_SafeMath__success(this, this, 0, balances_TokenERC20[this][to_s381], tokens_s381);
[L914]               c_s23 := (a_s23 + b_s23) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L915]   COND FALSE  !(!(c_s23 >= a_s23))
[L1010]  RET         call __var_4 := add~uint256~uint256_SafeMath__success(this, this, 0, balances_TokenERC20[this][to_s381], tokens_s381);
[L1011]  COND FALSE  !(revert)
[L1014]              sum_balances0[this] := sum_balances0[this] - balances_TokenERC20[this][to_s381];
[L1015]              balances_TokenERC20[this][to_s381] := __var_4;
[L1016]              sum_balances0[this] := sum_balances0[this] + balances_TokenERC20[this][to_s381];
[L1017]              assert { :EventEmitted "Transfer_TokenERC20" } true;
[L1018]              success_s381 := true;
[L280]   RET         call success_s381 := transfer~address~uint256_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, to_s381, tokens_s381);
[L281]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((((((((((((((((success_s381 == true && balances_TokenERC20[this][msgsender_MSG] == old(balances_TokenERC20[this][msgsender_MSG]) - tokens_s381) && balances_TokenERC20[this][to_s381] == old(balances_TokenERC20[this][to_s381]) + tokens_s381) && _totalSupply_TokenERC20[this] == old(_totalSupply_TokenERC20[this])) && allowed_TokenERC20[this] == old(allowed_TokenERC20[this])) && balances_TokenERC20[this][p1] == old(balances_TokenERC20[this][p1])) && aSBlock_RICH[this] == old(aSBlock_RICH[this])) && aEBlock_RICH[this] == old(aEBlock_RICH[this])) && aCap_RICH[this] == old(aCap_RICH[this])) && aTot_RICH[this] == old(aTot_RICH[this])) && aAmt_RICH[this] == old(aAmt_RICH[this])) && sSBlock_RICH[this] == old(sSBlock_RICH[this])) && sEBlock_RICH[this] == old(sEBlock_RICH[this])) && sCap_RICH[this] == old(sCap_RICH[this])) && sTot_RICH[this] == old(sTot_RICH[this])) && sChunk_RICH[this] == old(sChunk_RICH[this])) && sPrice_RICH[this] == old(sPrice_RICH[this])) && symbol_TokenERC20[this] == old(symbol_TokenERC20[this])) && name_TokenERC20[this] == old(name_TokenERC20[this])) && decimals_TokenERC20[this] == old(decimals_TokenERC20[this])) && owner_Owned[this] == old(owner_Owned[this])) && newOwner_Owned[this] == old(newOwner_Owned[this]));
[L3]                 revert := revert_hold;
[L2225]  RET         call success_s381 := transfer~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, to_s381, tokens_s381);
[L2254]  RET         call CorralChoice_RICH(this);

Loop:
[L2254]        assume true;

[2020-11-24 16:07:48,291 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 16:07:48,291 INFO  L82        PathProgramCache]: Analyzing trace with hash 1088583272, now seen corresponding path program 1 times
[2020-11-24 16:07:48,292 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 16:07:48,341 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 16:07:48,605 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 16:07:48,605 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 16:07:48,605 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [15] imperfect sequences [] total 15
[2020-11-24 16:07:48,605 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 16:07:48,606 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 15 interpolants.
[2020-11-24 16:07:48,606 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=31, Invalid=179, Unknown=0, NotChecked=0, Total=210
[2020-11-24 16:07:48,606 INFO  L87              Difference]: Start difference. First operand 219 states and 224 transitions. cyclomatic complexity: 6 Second operand 15 states.
[2020-11-24 16:07:48,917 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 16:07:48,918 INFO  L93              Difference]: Finished difference Result 218 states and 222 transitions.
[2020-11-24 16:07:48,918 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 14 states. 
[2020-11-24 16:07:48,918 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 218 states and 222 transitions.
[2020-11-24 16:07:48,920 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 16:07:48,921 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 218 states to 185 states and 189 transitions.
[2020-11-24 16:07:48,921 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 185
[2020-11-24 16:07:48,922 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 185
[2020-11-24 16:07:48,922 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 185 states and 189 transitions.
[2020-11-24 16:07:48,922 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 16:07:48,922 INFO  L728         BuchiCegarLoop]: Abstraction has 185 states and 189 transitions.
[2020-11-24 16:07:48,923 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 185 states and 189 transitions.
[2020-11-24 16:07:48,927 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 185 to 185.
[2020-11-24 16:07:48,927 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 185 states.
[2020-11-24 16:07:48,928 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 185 states to 185 states and 189 transitions.
[2020-11-24 16:07:48,928 INFO  L751         BuchiCegarLoop]: Abstraction has 185 states and 189 transitions.
[2020-11-24 16:07:48,928 INFO  L631         BuchiCegarLoop]: Abstraction has 185 states and 189 transitions.
[2020-11-24 16:07:48,928 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-24 16:07:48,928 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 185 states and 189 transitions.
[2020-11-24 16:07:48,929 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 16:07:48,930 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 16:07:48,930 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 16:07:48,931 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 16:07:48,931 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L3]                 success_transfer_TokenERC200 := false;
[L3]                 call_transfer_TokenERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p1;
[L2249]              assume null == 0;
[L2250]  CALL        call this := FreshRefGenerator__success();
[L897]               havoc newRef;
[L898]               assume Alloc[newRef] == false;
[L899]               Alloc[newRef] := true;
[L900]               assume newRef != null;
[L2250]  RET         call this := FreshRefGenerator__success();
[L2251]              assume now >= 0;
[L2252]              assume DType[this] == RICH;
[L2253]              assume !revert && gas >= 0;
[L2254]  CALL        call CorralChoice_RICH(this);
[L2131]              havoc msgsender_MSG;
[L2132]              havoc msgvalue_MSG;
[L2133]              havoc choice;
[L2134]              havoc __ret_0_totalSupply;
[L2135]              havoc tokenOwner_s338;
[L2136]              havoc balance_s338;
[L2137]              havoc tokenOwner_s484;
[L2138]              havoc spender_s484;
[L2139]              havoc remaining_s484;
[L2140]              havoc to_s381;
[L2141]              havoc tokens_s381;
[L2142]              havoc success_s381;
[L2143]              havoc spender_s409;
[L2144]              havoc tokens_s409;
[L2145]              havoc success_s409;
[L2146]              havoc from_s468;
[L2147]              havoc to_s468;
[L2148]              havoc tokens_s468;
[L2149]              havoc success_s468;
[L2150]              havoc __ret_0_owner;
[L2151]              havoc __ret_0_newOwner;
[L2152]              havoc _newOwner_s217;
[L2153]              havoc __ret_0_symbol;
[L2154]              havoc __ret_0_name;
[L2155]              havoc __ret_0_decimals;
[L2156]              havoc spender_s527;
[L2157]              havoc tokens_s527;
[L2158]              havoc data_s527;
[L2159]              havoc success_s527;
[L2160]              havoc __ret_0_aSBlock;
[L2161]              havoc __ret_0_aEBlock;
[L2162]              havoc __ret_0_aCap;
[L2163]              havoc __ret_0_aTot;
[L2164]              havoc __ret_0_aAmt;
[L2165]              havoc __ret_0_sSBlock;
[L2166]              havoc __ret_0_sEBlock;
[L2167]              havoc __ret_0_sCap;
[L2168]              havoc __ret_0_sTot;
[L2169]              havoc __ret_0_sChunk;
[L2170]              havoc __ret_0_sPrice;
[L2171]              havoc _refer_s687;
[L2172]              havoc success_s687;
[L2173]              havoc _refer_s847;
[L2174]              havoc success_s847;
[L2175]              havoc StartBlock_s868;
[L2176]              havoc EndBlock_s868;
[L2177]              havoc DropCap_s868;
[L2178]              havoc DropCount_s868;
[L2179]              havoc DropAmount_s868;
[L2180]              havoc StartBlock_s892;
[L2181]              havoc EndBlock_s892;
[L2182]              havoc SaleCap_s892;
[L2183]              havoc SaleCount_s892;
[L2184]              havoc ChunkSize_s892;
[L2185]              havoc SalePrice_s892;
[L2186]              havoc _aSBlock_s926;
[L2187]              havoc _aEBlock_s926;
[L2188]              havoc _aAmt_s926;
[L2189]              havoc _aCap_s926;
[L2190]              havoc _sSBlock_s966;
[L2191]              havoc _sEBlock_s966;
[L2192]              havoc _sChunk_s966;
[L2193]              havoc _sPrice_s966;
[L2194]              havoc _sCap_s966;
[L2195]              havoc tmpNow;
[L2196]              havoc gas;
[L2197]              assume gas > 4000000 && gas <= 8000000;
[L2198]              tmpNow := now;
[L2199]              havoc now;
[L2200]              assume now > tmpNow;
[L2201]              assume msgsender_MSG != null;
[L2202]  COND FALSE  !(choice == 6)
[L2208]  COND FALSE  !(choice == 5)
[L2214]  COND FALSE  !(choice == 4)
[L2220]  COND TRUE   choice == 3
[L2221]              gas := gas - 21000;
[L2222]  COND TRUE   gas >= 0
[L2223]              assume tokens_s381 >= 0 && tokens_s381 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2224]              assume msgvalue_MSG == 0;
[L2225]  CALL        call success_s381 := transfer~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, to_s381, tokens_s381);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != to_s381) && msgsender_MSG != to_s381) && tokens_s381 <= balances_TokenERC20[this][msgsender_MSG]) && balances_TokenERC20[this][to_s381] + tokens_s381 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && tokens_s381 >= 0) && tokens_s381 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_TokenERC20[this][to_s381] >= 0) && balances_TokenERC20[this][to_s381] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_TokenERC20[this][msgsender_MSG] >= 0) && balances_TokenERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_TokenERC200 := true;
[L3]                 call_transfer_TokenERC200 := false;
[L3]                 revert := revert_hold;
[L244]               havoc __exception;
[L245]               revert := false;
[L246]   COND TRUE   __exception
[L247]               __tmp__Balance := Balance;
[L248]               __tmp__DType := DType;
[L249]               __tmp__Alloc := Alloc;
[L250]               __tmp__balance_ADDR := balance_ADDR;
[L251]               __tmp__M_Ref_int := M_Ref_int;
[L252]               __tmp__sum_balances0 := sum_balances0;
[L253]               __tmp__alloc_allowed_TokenERC20_lvl0 := alloc_allowed_TokenERC20_lvl0;
[L254]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L255]               __tmp__sum_allowed1 := sum_allowed1;
[L256]               __tmp__Length := Length;
[L257]               __tmp__now := now;
[L258]               __tmp__owner_Owned := owner_Owned;
[L259]               __tmp__newOwner_Owned := newOwner_Owned;
[L260]               __tmp__symbol_TokenERC20 := symbol_TokenERC20;
[L261]               __tmp__name_TokenERC20 := name_TokenERC20;
[L262]               __tmp__decimals_TokenERC20 := decimals_TokenERC20;
[L263]               __tmp___totalSupply_TokenERC20 := _totalSupply_TokenERC20;
[L264]               __tmp__balances_TokenERC20 := balances_TokenERC20;
[L265]               __tmp__allowed_TokenERC20 := allowed_TokenERC20;
[L266]               __tmp__aSBlock_RICH := aSBlock_RICH;
[L267]               __tmp__aEBlock_RICH := aEBlock_RICH;
[L268]               __tmp__aCap_RICH := aCap_RICH;
[L269]               __tmp__aTot_RICH := aTot_RICH;
[L270]               __tmp__aAmt_RICH := aAmt_RICH;
[L271]               __tmp__sSBlock_RICH := sSBlock_RICH;
[L272]               __tmp__sEBlock_RICH := sEBlock_RICH;
[L273]               __tmp__sCap_RICH := sCap_RICH;
[L274]               __tmp__sTot_RICH := sTot_RICH;
[L275]               __tmp__sChunk_RICH := sChunk_RICH;
[L276]               __tmp__sPrice_RICH := sPrice_RICH;
[L277]   CALL        call success_s381 := transfer~address~uint256_TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, to_s381, tokens_s381);
[L981]   CALL        call __var_3 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __tmp__balances_TokenERC20[this][msgsender_MSG], tokens_s381);
[L923]   COND TRUE   !(b_s45 <= a_s45)
[L924]               revert := true;
[L981]   RET         call __var_3 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __tmp__balances_TokenERC20[this][msgsender_MSG], tokens_s381);
[L982]   COND TRUE   revert
[L277]   RET         call success_s381 := transfer~address~uint256_TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, to_s381, tokens_s381);
[L278]               assume revert || gas < 0;
[L2225]  RET         call success_s381 := transfer~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, to_s381, tokens_s381);
[L2254]  RET         call CorralChoice_RICH(this);

Loop:
[L2254]        assume true;

[2020-11-24 16:07:48,934 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 16:07:48,935 INFO  L82        PathProgramCache]: Analyzing trace with hash 1508108750, now seen corresponding path program 1 times
[2020-11-24 16:07:48,936 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 16:07:48,947 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 16:07:49,004 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 16:07:49,004 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 16:07:49,004 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [7] imperfect sequences [] total 7
[2020-11-24 16:07:49,005 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 16:07:49,005 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 7 interpolants.
[2020-11-24 16:07:49,005 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=11, Invalid=31, Unknown=0, NotChecked=0, Total=42
[2020-11-24 16:07:49,005 INFO  L87              Difference]: Start difference. First operand 185 states and 189 transitions. cyclomatic complexity: 5 Second operand 7 states.
[2020-11-24 16:07:49,054 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 16:07:49,054 INFO  L93              Difference]: Finished difference Result 193 states and 196 transitions.
[2020-11-24 16:07:49,054 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 8 states. 
[2020-11-24 16:07:49,054 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 193 states and 196 transitions.
[2020-11-24 16:07:49,056 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 16:07:49,057 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 193 states to 186 states and 189 transitions.
[2020-11-24 16:07:49,057 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 186
[2020-11-24 16:07:49,058 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 186
[2020-11-24 16:07:49,058 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 186 states and 189 transitions.
[2020-11-24 16:07:49,058 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 16:07:49,058 INFO  L728         BuchiCegarLoop]: Abstraction has 186 states and 189 transitions.
[2020-11-24 16:07:49,058 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 186 states and 189 transitions.
[2020-11-24 16:07:49,061 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 186 to 180.
[2020-11-24 16:07:49,061 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 180 states.
[2020-11-24 16:07:49,062 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 180 states to 180 states and 183 transitions.
[2020-11-24 16:07:49,062 INFO  L751         BuchiCegarLoop]: Abstraction has 180 states and 183 transitions.
[2020-11-24 16:07:49,062 INFO  L631         BuchiCegarLoop]: Abstraction has 180 states and 183 transitions.
[2020-11-24 16:07:49,062 INFO  L445         BuchiCegarLoop]: ======== Iteration 5============
[2020-11-24 16:07:49,062 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 180 states and 183 transitions.
[2020-11-24 16:07:49,063 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 16:07:49,063 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 16:07:49,063 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 16:07:49,065 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 16:07:49,065 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L3]                 success_transfer_TokenERC200 := false;
[L3]                 call_transfer_TokenERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p1;
[L2249]              assume null == 0;
[L2250]  CALL        call this := FreshRefGenerator__success();
[L897]               havoc newRef;
[L898]               assume Alloc[newRef] == false;
[L899]               Alloc[newRef] := true;
[L900]               assume newRef != null;
[L2250]  RET         call this := FreshRefGenerator__success();
[L2251]              assume now >= 0;
[L2252]              assume DType[this] == RICH;
[L2253]              assume !revert && gas >= 0;
[L2254]  CALL        call CorralChoice_RICH(this);
[L2131]              havoc msgsender_MSG;
[L2132]              havoc msgvalue_MSG;
[L2133]              havoc choice;
[L2134]              havoc __ret_0_totalSupply;
[L2135]              havoc tokenOwner_s338;
[L2136]              havoc balance_s338;
[L2137]              havoc tokenOwner_s484;
[L2138]              havoc spender_s484;
[L2139]              havoc remaining_s484;
[L2140]              havoc to_s381;
[L2141]              havoc tokens_s381;
[L2142]              havoc success_s381;
[L2143]              havoc spender_s409;
[L2144]              havoc tokens_s409;
[L2145]              havoc success_s409;
[L2146]              havoc from_s468;
[L2147]              havoc to_s468;
[L2148]              havoc tokens_s468;
[L2149]              havoc success_s468;
[L2150]              havoc __ret_0_owner;
[L2151]              havoc __ret_0_newOwner;
[L2152]              havoc _newOwner_s217;
[L2153]              havoc __ret_0_symbol;
[L2154]              havoc __ret_0_name;
[L2155]              havoc __ret_0_decimals;
[L2156]              havoc spender_s527;
[L2157]              havoc tokens_s527;
[L2158]              havoc data_s527;
[L2159]              havoc success_s527;
[L2160]              havoc __ret_0_aSBlock;
[L2161]              havoc __ret_0_aEBlock;
[L2162]              havoc __ret_0_aCap;
[L2163]              havoc __ret_0_aTot;
[L2164]              havoc __ret_0_aAmt;
[L2165]              havoc __ret_0_sSBlock;
[L2166]              havoc __ret_0_sEBlock;
[L2167]              havoc __ret_0_sCap;
[L2168]              havoc __ret_0_sTot;
[L2169]              havoc __ret_0_sChunk;
[L2170]              havoc __ret_0_sPrice;
[L2171]              havoc _refer_s687;
[L2172]              havoc success_s687;
[L2173]              havoc _refer_s847;
[L2174]              havoc success_s847;
[L2175]              havoc StartBlock_s868;
[L2176]              havoc EndBlock_s868;
[L2177]              havoc DropCap_s868;
[L2178]              havoc DropCount_s868;
[L2179]              havoc DropAmount_s868;
[L2180]              havoc StartBlock_s892;
[L2181]              havoc EndBlock_s892;
[L2182]              havoc SaleCap_s892;
[L2183]              havoc SaleCount_s892;
[L2184]              havoc ChunkSize_s892;
[L2185]              havoc SalePrice_s892;
[L2186]              havoc _aSBlock_s926;
[L2187]              havoc _aEBlock_s926;
[L2188]              havoc _aAmt_s926;
[L2189]              havoc _aCap_s926;
[L2190]              havoc _sSBlock_s966;
[L2191]              havoc _sEBlock_s966;
[L2192]              havoc _sChunk_s966;
[L2193]              havoc _sPrice_s966;
[L2194]              havoc _sCap_s966;
[L2195]              havoc tmpNow;
[L2196]              havoc gas;
[L2197]              assume gas > 4000000 && gas <= 8000000;
[L2198]              tmpNow := now;
[L2199]              havoc now;
[L2200]              assume now > tmpNow;
[L2201]              assume msgsender_MSG != null;
[L2202]  COND FALSE  !(choice == 6)
[L2208]  COND FALSE  !(choice == 5)
[L2214]  COND FALSE  !(choice == 4)
[L2220]  COND TRUE   choice == 3
[L2221]              gas := gas - 21000;
[L2222]  COND TRUE   gas >= 0
[L2223]              assume tokens_s381 >= 0 && tokens_s381 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2224]              assume msgvalue_MSG == 0;
[L2225]  CALL        call success_s381 := transfer~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, to_s381, tokens_s381);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != to_s381) && msgsender_MSG != to_s381) && tokens_s381 <= balances_TokenERC20[this][msgsender_MSG]) && balances_TokenERC20[this][to_s381] + tokens_s381 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && tokens_s381 >= 0) && tokens_s381 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_TokenERC20[this][to_s381] >= 0) && balances_TokenERC20[this][to_s381] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_TokenERC20[this][msgsender_MSG] >= 0) && balances_TokenERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_TokenERC200 := true;
[L3]                 call_transfer_TokenERC200 := false;
[L3]                 revert := revert_hold;
[L244]               havoc __exception;
[L245]               revert := false;
[L246]   COND TRUE   __exception
[L247]               __tmp__Balance := Balance;
[L248]               __tmp__DType := DType;
[L249]               __tmp__Alloc := Alloc;
[L250]               __tmp__balance_ADDR := balance_ADDR;
[L251]               __tmp__M_Ref_int := M_Ref_int;
[L252]               __tmp__sum_balances0 := sum_balances0;
[L253]               __tmp__alloc_allowed_TokenERC20_lvl0 := alloc_allowed_TokenERC20_lvl0;
[L254]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L255]               __tmp__sum_allowed1 := sum_allowed1;
[L256]               __tmp__Length := Length;
[L257]               __tmp__now := now;
[L258]               __tmp__owner_Owned := owner_Owned;
[L259]               __tmp__newOwner_Owned := newOwner_Owned;
[L260]               __tmp__symbol_TokenERC20 := symbol_TokenERC20;
[L261]               __tmp__name_TokenERC20 := name_TokenERC20;
[L262]               __tmp__decimals_TokenERC20 := decimals_TokenERC20;
[L263]               __tmp___totalSupply_TokenERC20 := _totalSupply_TokenERC20;
[L264]               __tmp__balances_TokenERC20 := balances_TokenERC20;
[L265]               __tmp__allowed_TokenERC20 := allowed_TokenERC20;
[L266]               __tmp__aSBlock_RICH := aSBlock_RICH;
[L267]               __tmp__aEBlock_RICH := aEBlock_RICH;
[L268]               __tmp__aCap_RICH := aCap_RICH;
[L269]               __tmp__aTot_RICH := aTot_RICH;
[L270]               __tmp__aAmt_RICH := aAmt_RICH;
[L271]               __tmp__sSBlock_RICH := sSBlock_RICH;
[L272]               __tmp__sEBlock_RICH := sEBlock_RICH;
[L273]               __tmp__sCap_RICH := sCap_RICH;
[L274]               __tmp__sTot_RICH := sTot_RICH;
[L275]               __tmp__sChunk_RICH := sChunk_RICH;
[L276]               __tmp__sPrice_RICH := sPrice_RICH;
[L277]   CALL        call success_s381 := transfer~address~uint256_TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, to_s381, tokens_s381);
[L981]   CALL        call __var_3 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __tmp__balances_TokenERC20[this][msgsender_MSG], tokens_s381);
[L923]   COND FALSE  !(!(b_s45 <= a_s45))
[L927]               c_s45 := (a_s45 - b_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L981]   RET         call __var_3 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __tmp__balances_TokenERC20[this][msgsender_MSG], tokens_s381);
[L982]   COND TRUE   revert
[L277]   RET         call success_s381 := transfer~address~uint256_TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, to_s381, tokens_s381);
[L278]               assume revert || gas < 0;
[L2225]  RET         call success_s381 := transfer~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, to_s381, tokens_s381);
[L2254]  RET         call CorralChoice_RICH(this);

Loop:
[L2254]        assume true;

[2020-11-24 16:07:49,067 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 16:07:49,067 INFO  L82        PathProgramCache]: Analyzing trace with hash 2006117441, now seen corresponding path program 1 times
[2020-11-24 16:07:49,068 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 16:07:49,078 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 16:07:49,110 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 16:07:49,110 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 16:07:49,110 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [5] imperfect sequences [] total 5
[2020-11-24 16:07:49,111 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 16:07:49,111 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 5 interpolants.
[2020-11-24 16:07:49,111 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=9, Invalid=11, Unknown=0, NotChecked=0, Total=20
[2020-11-24 16:07:49,111 INFO  L87              Difference]: Start difference. First operand 180 states and 183 transitions. cyclomatic complexity: 4 Second operand 5 states.
[2020-11-24 16:07:49,118 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 16:07:49,118 INFO  L93              Difference]: Finished difference Result 191 states and 192 transitions.
[2020-11-24 16:07:49,118 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-24 16:07:49,118 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 191 states and 192 transitions.
[2020-11-24 16:07:49,119 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 2
[2020-11-24 16:07:49,120 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 191 states to 191 states and 192 transitions.
[2020-11-24 16:07:49,120 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 191
[2020-11-24 16:07:49,120 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 191
[2020-11-24 16:07:49,120 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 191 states and 192 transitions.
[2020-11-24 16:07:49,120 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 16:07:49,120 INFO  L728         BuchiCegarLoop]: Abstraction has 191 states and 192 transitions.
[2020-11-24 16:07:49,121 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 191 states and 192 transitions.
[2020-11-24 16:07:49,122 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 191 to 180.
[2020-11-24 16:07:49,122 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 180 states.
[2020-11-24 16:07:49,122 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 180 states to 180 states and 181 transitions.
[2020-11-24 16:07:49,122 INFO  L751         BuchiCegarLoop]: Abstraction has 180 states and 181 transitions.
[2020-11-24 16:07:49,122 INFO  L631         BuchiCegarLoop]: Abstraction has 180 states and 181 transitions.
[2020-11-24 16:07:49,123 INFO  L445         BuchiCegarLoop]: ======== Iteration 6============
[2020-11-24 16:07:49,123 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 180 states and 181 transitions.
[2020-11-24 16:07:49,123 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 16:07:49,123 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 16:07:49,123 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 16:07:49,124 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 16:07:49,124 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L3]                 success_transfer_TokenERC200 := false;
[L3]                 call_transfer_TokenERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p1;
[L2249]              assume null == 0;
[L2250]  CALL        call this := FreshRefGenerator__success();
[L897]               havoc newRef;
[L898]               assume Alloc[newRef] == false;
[L899]               Alloc[newRef] := true;
[L900]               assume newRef != null;
[L2250]  RET         call this := FreshRefGenerator__success();
[L2251]              assume now >= 0;
[L2252]              assume DType[this] == RICH;
[L2253]              assume !revert && gas >= 0;
[L2254]  CALL        call CorralChoice_RICH(this);
[L2131]              havoc msgsender_MSG;
[L2132]              havoc msgvalue_MSG;
[L2133]              havoc choice;
[L2134]              havoc __ret_0_totalSupply;
[L2135]              havoc tokenOwner_s338;
[L2136]              havoc balance_s338;
[L2137]              havoc tokenOwner_s484;
[L2138]              havoc spender_s484;
[L2139]              havoc remaining_s484;
[L2140]              havoc to_s381;
[L2141]              havoc tokens_s381;
[L2142]              havoc success_s381;
[L2143]              havoc spender_s409;
[L2144]              havoc tokens_s409;
[L2145]              havoc success_s409;
[L2146]              havoc from_s468;
[L2147]              havoc to_s468;
[L2148]              havoc tokens_s468;
[L2149]              havoc success_s468;
[L2150]              havoc __ret_0_owner;
[L2151]              havoc __ret_0_newOwner;
[L2152]              havoc _newOwner_s217;
[L2153]              havoc __ret_0_symbol;
[L2154]              havoc __ret_0_name;
[L2155]              havoc __ret_0_decimals;
[L2156]              havoc spender_s527;
[L2157]              havoc tokens_s527;
[L2158]              havoc data_s527;
[L2159]              havoc success_s527;
[L2160]              havoc __ret_0_aSBlock;
[L2161]              havoc __ret_0_aEBlock;
[L2162]              havoc __ret_0_aCap;
[L2163]              havoc __ret_0_aTot;
[L2164]              havoc __ret_0_aAmt;
[L2165]              havoc __ret_0_sSBlock;
[L2166]              havoc __ret_0_sEBlock;
[L2167]              havoc __ret_0_sCap;
[L2168]              havoc __ret_0_sTot;
[L2169]              havoc __ret_0_sChunk;
[L2170]              havoc __ret_0_sPrice;
[L2171]              havoc _refer_s687;
[L2172]              havoc success_s687;
[L2173]              havoc _refer_s847;
[L2174]              havoc success_s847;
[L2175]              havoc StartBlock_s868;
[L2176]              havoc EndBlock_s868;
[L2177]              havoc DropCap_s868;
[L2178]              havoc DropCount_s868;
[L2179]              havoc DropAmount_s868;
[L2180]              havoc StartBlock_s892;
[L2181]              havoc EndBlock_s892;
[L2182]              havoc SaleCap_s892;
[L2183]              havoc SaleCount_s892;
[L2184]              havoc ChunkSize_s892;
[L2185]              havoc SalePrice_s892;
[L2186]              havoc _aSBlock_s926;
[L2187]              havoc _aEBlock_s926;
[L2188]              havoc _aAmt_s926;
[L2189]              havoc _aCap_s926;
[L2190]              havoc _sSBlock_s966;
[L2191]              havoc _sEBlock_s966;
[L2192]              havoc _sChunk_s966;
[L2193]              havoc _sPrice_s966;
[L2194]              havoc _sCap_s966;
[L2195]              havoc tmpNow;
[L2196]              havoc gas;
[L2197]              assume gas > 4000000 && gas <= 8000000;
[L2198]              tmpNow := now;
[L2199]              havoc now;
[L2200]              assume now > tmpNow;
[L2201]              assume msgsender_MSG != null;
[L2202]  COND FALSE  !(choice == 6)
[L2208]  COND FALSE  !(choice == 5)
[L2214]  COND FALSE  !(choice == 4)
[L2220]  COND TRUE   choice == 3
[L2221]              gas := gas - 21000;
[L2222]  COND TRUE   gas >= 0
[L2223]              assume tokens_s381 >= 0 && tokens_s381 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2224]              assume msgvalue_MSG == 0;
[L2225]  CALL        call success_s381 := transfer~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, to_s381, tokens_s381);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != to_s381) && msgsender_MSG != to_s381) && tokens_s381 <= balances_TokenERC20[this][msgsender_MSG]) && balances_TokenERC20[this][to_s381] + tokens_s381 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && tokens_s381 >= 0) && tokens_s381 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_TokenERC20[this][to_s381] >= 0) && balances_TokenERC20[this][to_s381] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_TokenERC20[this][msgsender_MSG] >= 0) && balances_TokenERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_TokenERC200 := true;
[L3]                 call_transfer_TokenERC200 := false;
[L3]                 revert := revert_hold;
[L244]               havoc __exception;
[L245]               revert := false;
[L246]   COND TRUE   __exception
[L247]               __tmp__Balance := Balance;
[L248]               __tmp__DType := DType;
[L249]               __tmp__Alloc := Alloc;
[L250]               __tmp__balance_ADDR := balance_ADDR;
[L251]               __tmp__M_Ref_int := M_Ref_int;
[L252]               __tmp__sum_balances0 := sum_balances0;
[L253]               __tmp__alloc_allowed_TokenERC20_lvl0 := alloc_allowed_TokenERC20_lvl0;
[L254]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L255]               __tmp__sum_allowed1 := sum_allowed1;
[L256]               __tmp__Length := Length;
[L257]               __tmp__now := now;
[L258]               __tmp__owner_Owned := owner_Owned;
[L259]               __tmp__newOwner_Owned := newOwner_Owned;
[L260]               __tmp__symbol_TokenERC20 := symbol_TokenERC20;
[L261]               __tmp__name_TokenERC20 := name_TokenERC20;
[L262]               __tmp__decimals_TokenERC20 := decimals_TokenERC20;
[L263]               __tmp___totalSupply_TokenERC20 := _totalSupply_TokenERC20;
[L264]               __tmp__balances_TokenERC20 := balances_TokenERC20;
[L265]               __tmp__allowed_TokenERC20 := allowed_TokenERC20;
[L266]               __tmp__aSBlock_RICH := aSBlock_RICH;
[L267]               __tmp__aEBlock_RICH := aEBlock_RICH;
[L268]               __tmp__aCap_RICH := aCap_RICH;
[L269]               __tmp__aTot_RICH := aTot_RICH;
[L270]               __tmp__aAmt_RICH := aAmt_RICH;
[L271]               __tmp__sSBlock_RICH := sSBlock_RICH;
[L272]               __tmp__sEBlock_RICH := sEBlock_RICH;
[L273]               __tmp__sCap_RICH := sCap_RICH;
[L274]               __tmp__sTot_RICH := sTot_RICH;
[L275]               __tmp__sChunk_RICH := sChunk_RICH;
[L276]               __tmp__sPrice_RICH := sPrice_RICH;
[L277]   CALL        call success_s381 := transfer~address~uint256_TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, to_s381, tokens_s381);
[L981]   CALL        call __var_3 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __tmp__balances_TokenERC20[this][msgsender_MSG], tokens_s381);
[L923]   COND FALSE  !(!(b_s45 <= a_s45))
[L927]               c_s45 := (a_s45 - b_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L981]   RET         call __var_3 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __tmp__balances_TokenERC20[this][msgsender_MSG], tokens_s381);
[L982]   COND FALSE  !(revert)
[L985]               __tmp__sum_balances0[this] := __tmp__sum_balances0[this] - __tmp__balances_TokenERC20[this][msgsender_MSG];
[L986]               __tmp__balances_TokenERC20[this][msgsender_MSG] := __var_3;
[L987]               __tmp__sum_balances0[this] := __tmp__sum_balances0[this] + __tmp__balances_TokenERC20[this][msgsender_MSG];
[L988]   CALL        call __var_4 := add~uint256~uint256_SafeMath__fail(this, this, 0, __tmp__balances_TokenERC20[this][to_s381], tokens_s381);
[L905]               c_s23 := (a_s23 + b_s23) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L906]   COND TRUE   !(c_s23 >= a_s23)
[L907]               revert := true;
[L988]   RET         call __var_4 := add~uint256~uint256_SafeMath__fail(this, this, 0, __tmp__balances_TokenERC20[this][to_s381], tokens_s381);
[L989]   COND TRUE   revert
[L277]   RET         call success_s381 := transfer~address~uint256_TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, to_s381, tokens_s381);
[L278]               assume revert || gas < 0;
[L2225]  RET         call success_s381 := transfer~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, to_s381, tokens_s381);
[L2254]  RET         call CorralChoice_RICH(this);

Loop:
[L2254]        assume true;

[2020-11-24 16:07:49,126 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 16:07:49,126 INFO  L82        PathProgramCache]: Analyzing trace with hash -2052839383, now seen corresponding path program 1 times
[2020-11-24 16:07:49,127 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 16:07:49,135 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 16:07:49,237 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 16:07:49,238 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 16:07:49,238 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [9] imperfect sequences [] total 9
[2020-11-24 16:07:49,238 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 16:07:49,238 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 9 interpolants.
[2020-11-24 16:07:49,238 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=16, Invalid=56, Unknown=0, NotChecked=0, Total=72
[2020-11-24 16:07:49,239 INFO  L87              Difference]: Start difference. First operand 180 states and 181 transitions. cyclomatic complexity: 2 Second operand 9 states.
[2020-11-24 16:07:49,307 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 16:07:49,307 INFO  L93              Difference]: Finished difference Result 182 states and 182 transitions.
[2020-11-24 16:07:49,307 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 10 states. 
[2020-11-24 16:07:49,308 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 182 states and 182 transitions.
[2020-11-24 16:07:49,309 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 16:07:49,310 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 182 states to 175 states and 175 transitions.
[2020-11-24 16:07:49,310 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 175
[2020-11-24 16:07:49,310 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 175
[2020-11-24 16:07:49,310 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 175 states and 175 transitions.
[2020-11-24 16:07:49,310 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 16:07:49,310 INFO  L728         BuchiCegarLoop]: Abstraction has 175 states and 175 transitions.
[2020-11-24 16:07:49,311 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 175 states and 175 transitions.
[2020-11-24 16:07:49,312 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 175 to 175.
[2020-11-24 16:07:49,312 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 175 states.
[2020-11-24 16:07:49,313 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 175 states to 175 states and 175 transitions.
[2020-11-24 16:07:49,313 INFO  L751         BuchiCegarLoop]: Abstraction has 175 states and 175 transitions.
[2020-11-24 16:07:49,313 INFO  L631         BuchiCegarLoop]: Abstraction has 175 states and 175 transitions.
[2020-11-24 16:07:49,313 INFO  L445         BuchiCegarLoop]: ======== Iteration 7============
[2020-11-24 16:07:49,313 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 175 states and 175 transitions.
[2020-11-24 16:07:49,314 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 16:07:49,314 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 16:07:49,314 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 16:07:49,315 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 16:07:49,315 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L3]                 success_transfer_TokenERC200 := false;
[L3]                 call_transfer_TokenERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p1;
[L2249]              assume null == 0;
[L2250]  CALL        call this := FreshRefGenerator__success();
[L897]               havoc newRef;
[L898]               assume Alloc[newRef] == false;
[L899]               Alloc[newRef] := true;
[L900]               assume newRef != null;
[L2250]  RET         call this := FreshRefGenerator__success();
[L2251]              assume now >= 0;
[L2252]              assume DType[this] == RICH;
[L2253]              assume !revert && gas >= 0;
[L2254]  CALL        call CorralChoice_RICH(this);
[L2131]              havoc msgsender_MSG;
[L2132]              havoc msgvalue_MSG;
[L2133]              havoc choice;
[L2134]              havoc __ret_0_totalSupply;
[L2135]              havoc tokenOwner_s338;
[L2136]              havoc balance_s338;
[L2137]              havoc tokenOwner_s484;
[L2138]              havoc spender_s484;
[L2139]              havoc remaining_s484;
[L2140]              havoc to_s381;
[L2141]              havoc tokens_s381;
[L2142]              havoc success_s381;
[L2143]              havoc spender_s409;
[L2144]              havoc tokens_s409;
[L2145]              havoc success_s409;
[L2146]              havoc from_s468;
[L2147]              havoc to_s468;
[L2148]              havoc tokens_s468;
[L2149]              havoc success_s468;
[L2150]              havoc __ret_0_owner;
[L2151]              havoc __ret_0_newOwner;
[L2152]              havoc _newOwner_s217;
[L2153]              havoc __ret_0_symbol;
[L2154]              havoc __ret_0_name;
[L2155]              havoc __ret_0_decimals;
[L2156]              havoc spender_s527;
[L2157]              havoc tokens_s527;
[L2158]              havoc data_s527;
[L2159]              havoc success_s527;
[L2160]              havoc __ret_0_aSBlock;
[L2161]              havoc __ret_0_aEBlock;
[L2162]              havoc __ret_0_aCap;
[L2163]              havoc __ret_0_aTot;
[L2164]              havoc __ret_0_aAmt;
[L2165]              havoc __ret_0_sSBlock;
[L2166]              havoc __ret_0_sEBlock;
[L2167]              havoc __ret_0_sCap;
[L2168]              havoc __ret_0_sTot;
[L2169]              havoc __ret_0_sChunk;
[L2170]              havoc __ret_0_sPrice;
[L2171]              havoc _refer_s687;
[L2172]              havoc success_s687;
[L2173]              havoc _refer_s847;
[L2174]              havoc success_s847;
[L2175]              havoc StartBlock_s868;
[L2176]              havoc EndBlock_s868;
[L2177]              havoc DropCap_s868;
[L2178]              havoc DropCount_s868;
[L2179]              havoc DropAmount_s868;
[L2180]              havoc StartBlock_s892;
[L2181]              havoc EndBlock_s892;
[L2182]              havoc SaleCap_s892;
[L2183]              havoc SaleCount_s892;
[L2184]              havoc ChunkSize_s892;
[L2185]              havoc SalePrice_s892;
[L2186]              havoc _aSBlock_s926;
[L2187]              havoc _aEBlock_s926;
[L2188]              havoc _aAmt_s926;
[L2189]              havoc _aCap_s926;
[L2190]              havoc _sSBlock_s966;
[L2191]              havoc _sEBlock_s966;
[L2192]              havoc _sChunk_s966;
[L2193]              havoc _sPrice_s966;
[L2194]              havoc _sCap_s966;
[L2195]              havoc tmpNow;
[L2196]              havoc gas;
[L2197]              assume gas > 4000000 && gas <= 8000000;
[L2198]              tmpNow := now;
[L2199]              havoc now;
[L2200]              assume now > tmpNow;
[L2201]              assume msgsender_MSG != null;
[L2202]  COND FALSE  !(choice == 6)
[L2208]  COND FALSE  !(choice == 5)
[L2214]  COND FALSE  !(choice == 4)
[L2220]  COND TRUE   choice == 3
[L2221]              gas := gas - 21000;
[L2222]  COND TRUE   gas >= 0
[L2223]              assume tokens_s381 >= 0 && tokens_s381 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2224]              assume msgvalue_MSG == 0;
[L2225]  CALL        call success_s381 := transfer~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, to_s381, tokens_s381);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != to_s381) && msgsender_MSG != to_s381) && tokens_s381 <= balances_TokenERC20[this][msgsender_MSG]) && balances_TokenERC20[this][to_s381] + tokens_s381 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && tokens_s381 >= 0) && tokens_s381 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_TokenERC20[this][to_s381] >= 0) && balances_TokenERC20[this][to_s381] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_TokenERC20[this][msgsender_MSG] >= 0) && balances_TokenERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_TokenERC200 := true;
[L3]                 call_transfer_TokenERC200 := false;
[L3]                 revert := revert_hold;
[L244]               havoc __exception;
[L245]               revert := false;
[L246]   COND TRUE   __exception
[L247]               __tmp__Balance := Balance;
[L248]               __tmp__DType := DType;
[L249]               __tmp__Alloc := Alloc;
[L250]               __tmp__balance_ADDR := balance_ADDR;
[L251]               __tmp__M_Ref_int := M_Ref_int;
[L252]               __tmp__sum_balances0 := sum_balances0;
[L253]               __tmp__alloc_allowed_TokenERC20_lvl0 := alloc_allowed_TokenERC20_lvl0;
[L254]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L255]               __tmp__sum_allowed1 := sum_allowed1;
[L256]               __tmp__Length := Length;
[L257]               __tmp__now := now;
[L258]               __tmp__owner_Owned := owner_Owned;
[L259]               __tmp__newOwner_Owned := newOwner_Owned;
[L260]               __tmp__symbol_TokenERC20 := symbol_TokenERC20;
[L261]               __tmp__name_TokenERC20 := name_TokenERC20;
[L262]               __tmp__decimals_TokenERC20 := decimals_TokenERC20;
[L263]               __tmp___totalSupply_TokenERC20 := _totalSupply_TokenERC20;
[L264]               __tmp__balances_TokenERC20 := balances_TokenERC20;
[L265]               __tmp__allowed_TokenERC20 := allowed_TokenERC20;
[L266]               __tmp__aSBlock_RICH := aSBlock_RICH;
[L267]               __tmp__aEBlock_RICH := aEBlock_RICH;
[L268]               __tmp__aCap_RICH := aCap_RICH;
[L269]               __tmp__aTot_RICH := aTot_RICH;
[L270]               __tmp__aAmt_RICH := aAmt_RICH;
[L271]               __tmp__sSBlock_RICH := sSBlock_RICH;
[L272]               __tmp__sEBlock_RICH := sEBlock_RICH;
[L273]               __tmp__sCap_RICH := sCap_RICH;
[L274]               __tmp__sTot_RICH := sTot_RICH;
[L275]               __tmp__sChunk_RICH := sChunk_RICH;
[L276]               __tmp__sPrice_RICH := sPrice_RICH;
[L277]   CALL        call success_s381 := transfer~address~uint256_TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, to_s381, tokens_s381);
[L981]   CALL        call __var_3 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __tmp__balances_TokenERC20[this][msgsender_MSG], tokens_s381);
[L923]   COND FALSE  !(!(b_s45 <= a_s45))
[L927]               c_s45 := (a_s45 - b_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L981]   RET         call __var_3 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __tmp__balances_TokenERC20[this][msgsender_MSG], tokens_s381);
[L982]   COND FALSE  !(revert)
[L985]               __tmp__sum_balances0[this] := __tmp__sum_balances0[this] - __tmp__balances_TokenERC20[this][msgsender_MSG];
[L986]               __tmp__balances_TokenERC20[this][msgsender_MSG] := __var_3;
[L987]               __tmp__sum_balances0[this] := __tmp__sum_balances0[this] + __tmp__balances_TokenERC20[this][msgsender_MSG];
[L988]   CALL        call __var_4 := add~uint256~uint256_SafeMath__fail(this, this, 0, __tmp__balances_TokenERC20[this][to_s381], tokens_s381);
[L905]               c_s23 := (a_s23 + b_s23) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L906]   COND FALSE  !(!(c_s23 >= a_s23))
[L988]   RET         call __var_4 := add~uint256~uint256_SafeMath__fail(this, this, 0, __tmp__balances_TokenERC20[this][to_s381], tokens_s381);
[L989]   COND FALSE  !(revert)
[L992]               __tmp__sum_balances0[this] := __tmp__sum_balances0[this] - __tmp__balances_TokenERC20[this][to_s381];
[L993]               __tmp__balances_TokenERC20[this][to_s381] := __var_4;
[L994]               __tmp__sum_balances0[this] := __tmp__sum_balances0[this] + __tmp__balances_TokenERC20[this][to_s381];
[L995]               success_s381 := true;
[L277]   RET         call success_s381 := transfer~address~uint256_TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, to_s381, tokens_s381);
[L278]               assume revert || gas < 0;
[L2225]  RET         call success_s381 := transfer~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, to_s381, tokens_s381);
[L2254]  RET         call CorralChoice_RICH(this);

Loop:
[L2254]        assume true;

[2020-11-24 16:07:49,318 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 16:07:49,318 INFO  L82        PathProgramCache]: Analyzing trace with hash -1622632967, now seen corresponding path program 1 times
[2020-11-24 16:07:49,319 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 16:07:49,327 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 16:07:49,350 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 16:07:49,351 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 16:07:49,351 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [5] imperfect sequences [] total 5
[2020-11-24 16:07:49,351 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 16:07:49,351 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 5 interpolants.
[2020-11-24 16:07:49,351 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=7, Invalid=13, Unknown=0, NotChecked=0, Total=20
[2020-11-24 16:07:49,352 INFO  L87              Difference]: Start difference. First operand 175 states and 175 transitions. cyclomatic complexity: 1 Second operand 5 states.
[2020-11-24 16:07:49,361 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 16:07:49,361 INFO  L93              Difference]: Finished difference Result 168 states and 167 transitions.
[2020-11-24 16:07:49,361 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 5 states. 
[2020-11-24 16:07:49,362 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 168 states and 167 transitions.
[2020-11-24 16:07:49,363 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-24 16:07:49,363 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 168 states to 0 states and 0 transitions.
[2020-11-24 16:07:49,363 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 0
[2020-11-24 16:07:49,363 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 0
[2020-11-24 16:07:49,363 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 0 states and 0 transitions.
[2020-11-24 16:07:49,363 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 16:07:49,363 INFO  L728         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-24 16:07:49,363 INFO  L751         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-24 16:07:49,363 INFO  L631         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-24 16:07:49,363 INFO  L445         BuchiCegarLoop]: ======== Iteration 8============
[2020-11-24 16:07:49,363 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 0 states and 0 transitions.
[2020-11-24 16:07:49,364 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-24 16:07:49,364 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is true
[2020-11-24 16:07:49,368 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 24.11 04:07:49 BasicIcfg
[2020-11-24 16:07:49,368 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-24 16:07:49,368 INFO  L168              Benchmark]: Toolchain (without parser) took 3442.71 ms. Allocated memory was 1.0 GB in the beginning and 1.3 GB in the end (delta: 248.0 MB). Free memory was 940.6 MB in the beginning and 1.1 GB in the end (delta: -168.5 MB). Peak memory consumption was 79.5 MB. Max. memory is 15.3 GB.
[2020-11-24 16:07:49,369 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.16 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-24 16:07:49,370 INFO  L168              Benchmark]: Boogie Preprocessor took 70.34 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 935.2 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-24 16:07:49,370 INFO  L168              Benchmark]: UtopiaSpecLang took 51.21 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 929.8 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-24 16:07:49,371 INFO  L168              Benchmark]: Boogie Printer took 9.84 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 924.4 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-24 16:07:49,371 INFO  L168              Benchmark]: RCFGBuilder took 604.81 ms. Allocated memory is still 1.0 GB. Free memory was 924.4 MB in the beginning and 860.0 MB in the end (delta: 64.4 MB). Peak memory consumption was 64.4 MB. Max. memory is 15.3 GB.
[2020-11-24 16:07:49,371 INFO  L168              Benchmark]: UtopiaLTL2Aut took 39.02 ms. Allocated memory is still 1.0 GB. Free memory was 860.0 MB in the beginning and 856.4 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
[2020-11-24 16:07:49,372 INFO  L168              Benchmark]: BÃ¼chi Program Product took 1009.39 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 69.2 MB). Free memory was 856.4 MB in the beginning and 905.6 MB in the end (delta: -49.2 MB). Peak memory consumption was 139.6 MB. Max. memory is 15.3 GB.
[2020-11-24 16:07:49,372 INFO  L168              Benchmark]: BlockEncodingV2 took 74.86 ms. Allocated memory is still 1.1 GB. Free memory was 905.6 MB in the beginning and 870.2 MB in the end (delta: 35.4 MB). Peak memory consumption was 35.4 MB. Max. memory is 15.3 GB.
[2020-11-24 16:07:49,372 INFO  L168              Benchmark]: BuchiAutomizer took 1580.34 ms. Allocated memory was 1.1 GB in the beginning and 1.3 GB in the end (delta: 178.8 MB). Free memory was 866.7 MB in the beginning and 1.1 GB in the end (delta: -242.4 MB). There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-24 16:07:49,376 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    1740 locations, 2948 edges
  - StatisticsResult: Encoded RCFG
    1706 locations, 2869 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.16 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 70.34 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 935.2 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 51.21 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 929.8 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 9.84 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 924.4 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * RCFGBuilder took 604.81 ms. Allocated memory is still 1.0 GB. Free memory was 924.4 MB in the beginning and 860.0 MB in the end (delta: 64.4 MB). Peak memory consumption was 64.4 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 39.02 ms. Allocated memory is still 1.0 GB. Free memory was 860.0 MB in the beginning and 856.4 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 1009.39 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 69.2 MB). Free memory was 856.4 MB in the beginning and 905.6 MB in the end (delta: -49.2 MB). Peak memory consumption was 139.6 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 74.86 ms. Allocated memory is still 1.1 GB. Free memory was 905.6 MB in the beginning and 870.2 MB in the end (delta: 35.4 MB). Peak memory consumption was 35.4 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 1580.34 ms. Allocated memory was 1.1 GB in the beginning and 1.3 GB in the end (delta: 178.8 MB). Free memory was 866.7 MB in the beginning and 1.1 GB in the end (delta: -242.4 MB). There was no memory consumed. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    752 locations, 913 edges
  - StatisticsResult: BuchiProgram size
    1740 locations, 2948 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 7 terminating modules (7 trivial, 0 deterministic, 0 nondeterministic). 7 modules have a trivial ranking function, the largest among these consists of 15 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 1.5s and 8 iterations.  TraceHistogramMax:1. Analysis of lassos took 0.7s. Construction of modules took 0.3s. BÃ¼chi inclusion checks took 0.3s. Highest rank in rank-based complementation 0. Minimization of det autom 7. Minimization of nondet autom 0. Automata minimization 0.0s AutomataMinimizationTime, 6 MinimizatonAttempts, 28 StatesRemovedByMinimization, 3 NontrivialMinimizations. Non-live state removal took 0.0s Buchi closure took 0.0s. Biggest automaton had 219 states and ocurred in iteration 2.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 1833 SDtfs, 1694 SDslu, 3317 SDs, 0 SdLazy, 1038 SolverSat, 568 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 0.3s Time	LassoAnalysisResults: nont0 unkn0 SFLI0 SFLT0 conc0 concLT0 SILN0 SILU7 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - AllSpecificationsHoldResult: All specifications hold
    Buchi Automizer proved that the LTL property ! ( ( []( (call_transfer_TokenERC200) ==> ( <>(success_transfer_TokenERC200) ) ) )) holds
RESULT: Ultimate proved your program to be correct!
Received shutdown request...
