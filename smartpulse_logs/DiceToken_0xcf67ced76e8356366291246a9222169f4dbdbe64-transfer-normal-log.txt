This is Ultimate 0.1.24-f1553f5-m
[2020-11-24 18:28:31,537 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-24 18:28:31,538 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-24 18:28:31,550 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-24 18:28:31,550 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-24 18:28:31,551 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-24 18:28:31,552 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-24 18:28:31,554 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-24 18:28:31,556 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-24 18:28:31,557 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-24 18:28:31,557 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-24 18:28:31,558 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-24 18:28:31,558 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-24 18:28:31,559 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-24 18:28:31,560 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-24 18:28:31,561 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-24 18:28:31,561 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-24 18:28:31,563 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-24 18:28:31,564 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-24 18:28:31,565 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-24 18:28:31,566 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-24 18:28:31,567 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-24 18:28:31,569 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-24 18:28:31,569 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-24 18:28:31,569 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-24 18:28:31,570 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-24 18:28:31,570 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-24 18:28:31,570 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-24 18:28:31,571 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-24 18:28:31,571 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-24 18:28:31,571 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-24 18:28:31,572 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-24 18:28:31,572 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-24 18:28:31,573 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-24 18:28:31,574 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-24 18:28:31,574 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-24 18:28:31,574 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-24 18:28:31,575 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-24 18:28:31,575 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-24 18:28:31,576 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-24 18:28:31,576 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-24 18:28:31,576 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-24 18:28:31,584 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-24 18:28:31,584 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-24 18:28:31,585 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-24 18:28:31,585 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-24 18:28:31,585 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-24 18:28:31,585 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-24 18:28:31,586 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-24 18:28:31,586 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-24 18:28:31,586 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-24 18:28:31,586 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-24 18:28:31,586 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-24 18:28:31,586 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-24 18:28:31,586 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-24 18:28:31,586 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-24 18:28:31,586 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-24 18:28:31,587 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-24 18:28:31,587 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-24 18:28:31,587 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-24 18:28:31,587 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-24 18:28:31,587 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-24 18:28:31,587 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-24 18:28:31,587 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-24 18:28:31,587 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-24 18:28:31,587 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-24 18:28:31,587 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-24 18:28:31,588 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-24 18:28:31,609 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-24 18:28:31,623 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-24 18:28:31,626 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-24 18:28:31,627 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-24 18:28:31,627 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-24 18:28:31,628 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/DiceToken_0xcf67ced76e8356366291246a9222169f4dbdbe64_transfer-normal.bpl
[2020-11-24 18:28:31,628 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/DiceToken_0xcf67ced76e8356366291246a9222169f4dbdbe64_transfer-normal.bpl'
[2020-11-24 18:28:31,684 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-24 18:28:31,686 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-24 18:28:31,686 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-24 18:28:31,686 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-24 18:28:31,686 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-24 18:28:31,703 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "DiceToken_0xcf67ced76e8356366291246a9222169f4dbdbe64_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 06:28:31" (1/1) ...
[2020-11-24 18:28:31,704 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "DiceToken_0xcf67ced76e8356366291246a9222169f4dbdbe64_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 06:28:31" (1/1) ...
[2020-11-24 18:28:31,726 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "DiceToken_0xcf67ced76e8356366291246a9222169f4dbdbe64_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 06:28:31" (1/1) ...
[2020-11-24 18:28:31,727 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "DiceToken_0xcf67ced76e8356366291246a9222169f4dbdbe64_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 06:28:31" (1/1) ...
[2020-11-24 18:28:31,742 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "DiceToken_0xcf67ced76e8356366291246a9222169f4dbdbe64_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 06:28:31" (1/1) ...
[2020-11-24 18:28:31,749 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "DiceToken_0xcf67ced76e8356366291246a9222169f4dbdbe64_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 06:28:31" (1/1) ...
[2020-11-24 18:28:31,753 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "DiceToken_0xcf67ced76e8356366291246a9222169f4dbdbe64_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 06:28:31" (1/1) ...
[2020-11-24 18:28:31,759 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-24 18:28:31,760 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-24 18:28:31,760 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-24 18:28:31,763 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-24 18:28:31,767 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "DiceToken_0xcf67ced76e8356366291246a9222169f4dbdbe64_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 06:28:31" (1/1) ...
[2020-11-24 18:28:31,780 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(DiceToken.transfer(to, value), p1 != msg.sender && p1 != to && msg.sender != to && value <= balances_DiceToken[this][msg.sender] && balances_DiceToken[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_DiceToken[this][to] >= 0 && balances_DiceToken[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_DiceToken[this][msg.sender] >= 0 &&  balances_DiceToken[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(DiceToken.transfer(to, value), return == true && balances_DiceToken[this][msg.sender] == old(balances_DiceToken[this][msg.sender]) - value && balances_DiceToken[this][to] == old(balances_DiceToken[this][to]) + value && _totalSupply_DiceToken[this] == old(_totalSupply_DiceToken[this]) && allowed_DiceToken[this] == old(allowed_DiceToken[this]) && balances_DiceToken[this][p1] == old(balances_DiceToken[this][p1]) && symbol_DiceToken[this] == old(symbol_DiceToken[this]) && name_DiceToken[this] == old(name_DiceToken[this]) && decimals_DiceToken[this] == old(decimals_DiceToken[this]) && owner_Owned[this] == old(owner_Owned[this]) && newOwner_Owned[this] == old(newOwner_Owned[this]))))
[2020-11-24 18:28:31,786 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(DiceToken.transfer(to, value), p1 != msg.sender && p1 != to && msg.sender != to && value <= balances_DiceToken[this][msg.sender] && balances_DiceToken[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_DiceToken[this][to] >= 0 && balances_DiceToken[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_DiceToken[this][msg.sender] >= 0 &&  balances_DiceToken[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(DiceToken.transfer(to, value), return == true && balances_DiceToken[this][msg.sender] == old(balances_DiceToken[this][msg.sender]) - value && balances_DiceToken[this][to] == old(balances_DiceToken[this][to]) + value && _totalSupply_DiceToken[this] == old(_totalSupply_DiceToken[this]) && allowed_DiceToken[this] == old(allowed_DiceToken[this]) && balances_DiceToken[this][p1] == old(balances_DiceToken[this][p1]) && symbol_DiceToken[this] == old(symbol_DiceToken[this]) && name_DiceToken[this] == old(name_DiceToken[this]) && decimals_DiceToken[this] == old(decimals_DiceToken[this]) && owner_Owned[this] == old(owner_Owned[this]) && newOwner_Owned[this] == old(newOwner_Owned[this]))))
[2020-11-24 18:28:31,794 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(DiceToken.transfer(to, value), p1 != msg.sender && p1 != to && msg.sender != to && value <= balances_DiceToken[this][msg.sender] && balances_DiceToken[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_DiceToken[this][to] >= 0 && balances_DiceToken[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_DiceToken[this][msg.sender] >= 0 &&  balances_DiceToken[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(DiceToken.transfer(to, value), return == true && balances_DiceToken[this][msg.sender] == old(balances_DiceToken[this][msg.sender]) - value && balances_DiceToken[this][to] == old(balances_DiceToken[this][to]) + value && _totalSupply_DiceToken[this] == old(_totalSupply_DiceToken[this]) && allowed_DiceToken[this] == old(allowed_DiceToken[this]) && balances_DiceToken[this][p1] == old(balances_DiceToken[this][p1]) && symbol_DiceToken[this] == old(symbol_DiceToken[this]) && name_DiceToken[this] == old(name_DiceToken[this]) && decimals_DiceToken[this] == old(decimals_DiceToken[this]) && owner_Owned[this] == old(owner_Owned[this]) && newOwner_Owned[this] == old(newOwner_Owned[this]))))
[2020-11-24 18:28:31,800 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( ( ( p1!=msg.sender && p1!=to_s366 ) && msg.sender!=to_s366 ) && tokens_s366<=balances_DiceToken[this][msg.sender] ) && ( balances_DiceToken[this][to_s366] + tokens_s366 )<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && tokens_s366>=0 ) && tokens_s366<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && balances_DiceToken[this][to_s366]>=0 ) && balances_DiceToken[this][to_s366]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && balances_DiceToken[this][msg.sender]>=0 ) && balances_DiceToken[this][msg.sender]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPNEQ,IdentifierExpression[p1,GLOBAL],IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_DiceToken>]],BinaryExpression[COMPNEQ,IdentifierExpression[p1,GLOBAL],IdentifierExpression[to_s366,<IMPLEMENTATION_INPARAM,transfer~address~uint256_DiceToken>]]],BinaryExpression[COMPNEQ,IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_DiceToken>],IdentifierExpression[to_s366,<IMPLEMENTATION_INPARAM,transfer~address~uint256_DiceToken>]]],BinaryExpression[COMPLEQ,IdentifierExpression[tokens_s366,<IMPLEMENTATION_INPARAM,transfer~address~uint256_DiceToken>],ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_DiceToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_DiceToken>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_DiceToken>]]]]],BinaryExpression[COMPLT,BinaryExpression[ARITHPLUS,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_DiceToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_DiceToken>]]],[IdentifierExpression[to_s366,<IMPLEMENTATION_INPARAM,transfer~address~uint256_DiceToken>]]],IdentifierExpression[tokens_s366,<IMPLEMENTATION_INPARAM,transfer~address~uint256_DiceToken>]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,IdentifierExpression[tokens_s366,<IMPLEMENTATION_INPARAM,transfer~address~uint256_DiceToken>],IntegerLiteral[0]]],BinaryExpression[COMPLT,IdentifierExpression[tokens_s366,<IMPLEMENTATION_INPARAM,transfer~address~uint256_DiceToken>],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_DiceToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_DiceToken>]]],[IdentifierExpression[to_s366,<IMPLEMENTATION_INPARAM,transfer~address~uint256_DiceToken>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_DiceToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_DiceToken>]]],[IdentifierExpression[to_s366,<IMPLEMENTATION_INPARAM,transfer~address~uint256_DiceToken>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_DiceToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_DiceToken>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_DiceToken>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_DiceToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_DiceToken>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_DiceToken>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]]
[2020-11-24 18:28:31,803 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( ( ( success_s366==true && balances_DiceToken[this][msg.sender]==( ( old(balances_DiceToken[this][msg.sender]) ) - tokens_s366 ) ) && balances_DiceToken[this][to_s366]==( ( old(balances_DiceToken[this][to_s366]) ) + tokens_s366 ) ) && _totalSupply_DiceToken[this]==( old(_totalSupply_DiceToken[this]) ) ) && allowed_DiceToken[this]==( old(allowed_DiceToken[this]) ) ) && balances_DiceToken[this][p1]==( old(balances_DiceToken[this][p1]) ) ) && symbol_DiceToken[this]==( old(symbol_DiceToken[this]) ) ) && name_DiceToken[this]==( old(name_DiceToken[this]) ) ) && decimals_DiceToken[this]==( old(decimals_DiceToken[this]) ) ) && owner_Owned[this]==( old(owner_Owned[this]) ) ) && newOwner_Owned[this]==( old(newOwner_Owned[this]) ) ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[success_s366,<IMPLEMENTATION_OUTPARAM,transfer~address~uint256_DiceToken>],BooleanLiteral[true]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_DiceToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_DiceToken>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_DiceToken>]]],BinaryExpression[ARITHMINUS,UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_DiceToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_DiceToken>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_DiceToken>]]]],IdentifierExpression[tokens_s366,<IMPLEMENTATION_INPARAM,transfer~address~uint256_DiceToken>]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_DiceToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_DiceToken>]]],[IdentifierExpression[to_s366,<IMPLEMENTATION_INPARAM,transfer~address~uint256_DiceToken>]]],BinaryExpression[ARITHPLUS,UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_DiceToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_DiceToken>]]],[IdentifierExpression[to_s366,<IMPLEMENTATION_INPARAM,transfer~address~uint256_DiceToken>]]]],IdentifierExpression[tokens_s366,<IMPLEMENTATION_INPARAM,transfer~address~uint256_DiceToken>]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_totalSupply_DiceToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_DiceToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_totalSupply_DiceToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_DiceToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[allowed_DiceToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_DiceToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[allowed_DiceToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_DiceToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_DiceToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_DiceToken>]]],[IdentifierExpression[p1,GLOBAL]]],UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_DiceToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_DiceToken>]]],[IdentifierExpression[p1,GLOBAL]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[symbol_DiceToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_DiceToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[symbol_DiceToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_DiceToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[name_DiceToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_DiceToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[name_DiceToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_DiceToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[decimals_DiceToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_DiceToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[decimals_DiceToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_DiceToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[owner_Owned,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_DiceToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[owner_Owned,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_DiceToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[newOwner_Owned,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_DiceToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[newOwner_Owned,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_DiceToken>]]]]]]
[2020-11-24 18:28:31,807 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(DiceToken.transfer(to, value), p1 != msg.sender && p1 != to && msg.sender != to && value <= balances_DiceToken[this][msg.sender] && balances_DiceToken[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_DiceToken[this][to] >= 0 && balances_DiceToken[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_DiceToken[this][msg.sender] >= 0 &&  balances_DiceToken[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(DiceToken.transfer(to, value), return == true && balances_DiceToken[this][msg.sender] == old(balances_DiceToken[this][msg.sender]) - value && balances_DiceToken[this][to] == old(balances_DiceToken[this][to]) + value && _totalSupply_DiceToken[this] == old(_totalSupply_DiceToken[this]) && allowed_DiceToken[this] == old(allowed_DiceToken[this]) && balances_DiceToken[this][p1] == old(balances_DiceToken[this][p1]) && symbol_DiceToken[this] == old(symbol_DiceToken[this]) && name_DiceToken[this] == old(name_DiceToken[this]) && decimals_DiceToken[this] == old(decimals_DiceToken[this]) && owner_Owned[this] == old(owner_Owned[this]) && newOwner_Owned[this] == old(newOwner_Owned[this]))))
[2020-11-24 18:28:31,807 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_transfer_DiceToken0) ==> ( <>AP(success_transfer_DiceToken0) ) ) )
Executed UtopiaSpecLang
[2020-11-24 18:28:31,813 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 06:28:31 PropertyContainer
[2020-11-24 18:28:31,813 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-24 18:28:31,814 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-24 18:28:31,814 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-24 18:28:31,814 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-24 18:28:31,815 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "DiceToken_0xcf67ced76e8356366291246a9222169f4dbdbe64_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 06:28:31" (1/2) ...
[2020-11-24 18:28:31,815 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-24 18:28:31,816 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-24 18:28:31,828 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 06:28:31" (2/2) ...
[2020-11-24 18:28:31,828 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-24 18:28:31,828 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-24 18:28:31,828 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-24 18:28:31,828 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-24 18:28:31,829 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "DiceToken_0xcf67ced76e8356366291246a9222169f4dbdbe64_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 06:28:31" (1/2) ...
[2020-11-24 18:28:31,884 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-24 18:28:31,885 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__success
[2020-11-24 18:28:31,885 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__success
[2020-11-24 18:28:31,885 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_DiceToken
[2020-11-24 18:28:31,885 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_DiceToken
[2020-11-24 18:28:31,885 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_DiceToken
[2020-11-24 18:28:31,885 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_DiceToken
[2020-11-24 18:28:31,885 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_DiceToken
[2020-11-24 18:28:31,885 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_DiceToken
[2020-11-24 18:28:31,885 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_DiceToken
[2020-11-24 18:28:31,885 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_DiceToken
[2020-11-24 18:28:31,885 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_DiceToken
[2020-11-24 18:28:31,886 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_DiceToken
[2020-11-24 18:28:31,886 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_DiceToken
[2020-11-24 18:28:31,886 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_DiceToken
[2020-11-24 18:28:31,886 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-24 18:28:31,887 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-24 18:28:31,887 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-24 18:28:31,887 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__success
[2020-11-24 18:28:31,887 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_SafeMath
[2020-11-24 18:28:31,887 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_SafeMath
[2020-11-24 18:28:31,887 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20Interface
[2020-11-24 18:28:31,887 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20Interface
[2020-11-24 18:28:31,888 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_Owned
[2020-11-24 18:28:31,888 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_Owned
[2020-11-24 18:28:31,888 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_DiceToken
[2020-11-24 18:28:31,888 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-24 18:28:31,888 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-24 18:28:31,888 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__fail
[2020-11-24 18:28:31,888 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-24 18:28:31,888 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_DiceToken__success
[2020-11-24 18:28:31,888 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_DiceToken__fail
[2020-11-24 18:28:31,888 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_DiceToken__success
[2020-11-24 18:28:31,888 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_DiceToken__fail
[2020-11-24 18:28:31,888 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_DiceToken__success
[2020-11-24 18:28:31,888 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_DiceToken__fail
[2020-11-24 18:28:31,889 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_DiceToken__success
[2020-11-24 18:28:31,889 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_DiceToken__fail
[2020-11-24 18:28:31,889 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_DiceToken__success
[2020-11-24 18:28:31,889 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_DiceToken__fail
[2020-11-24 18:28:31,889 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_DiceToken__success
[2020-11-24 18:28:31,889 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_DiceToken__fail
[2020-11-24 18:28:31,889 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-24 18:28:31,889 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-24 18:28:31,889 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-24 18:28:31,889 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__fail
[2020-11-24 18:28:31,889 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-24 18:28:31,889 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-24 18:28:31,889 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__fail
[2020-11-24 18:28:31,890 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__success
[2020-11-24 18:28:31,890 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-24 18:28:31,890 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__success
[2020-11-24 18:28:31,890 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_DiceToken__fail
[2020-11-24 18:28:31,890 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_DiceToken__success
[2020-11-24 18:28:31,890 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_DiceToken__fail
[2020-11-24 18:28:31,890 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_DiceToken__success
[2020-11-24 18:28:31,890 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_DiceToken__fail
[2020-11-24 18:28:31,890 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_DiceToken__success
[2020-11-24 18:28:31,890 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_DiceToken__fail
[2020-11-24 18:28:31,890 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_DiceToken__success
[2020-11-24 18:28:31,890 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_DiceToken__fail
[2020-11-24 18:28:31,890 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_DiceToken__success
[2020-11-24 18:28:31,890 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_DiceToken__fail
[2020-11-24 18:28:31,891 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_DiceToken__success
[2020-11-24 18:28:31,891 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-24 18:28:31,891 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-24 18:28:31,891 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-24 18:28:31,891 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-24 18:28:31,891 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-24 18:28:31,891 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-24 18:28:31,891 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__fail
[2020-11-24 18:28:31,891 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__success
[2020-11-24 18:28:31,891 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_SafeMath
[2020-11-24 18:28:31,891 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_SafeMath
[2020-11-24 18:28:31,891 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20Interface
[2020-11-24 18:28:31,891 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20Interface
[2020-11-24 18:28:31,892 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_Owned
[2020-11-24 18:28:31,892 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_Owned
[2020-11-24 18:28:31,892 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_DiceToken
[2020-11-24 18:28:31,892 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-24 18:28:31,892 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-24 18:28:31,892 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-24 18:28:32,004 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 18:28:32,004 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 18:28:32,005 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 18:28:32,086 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 18:28:32,289 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-24 18:28:32,289 INFO  L286             CfgBuilder]: Removed 4 assue(true) statements.
[2020-11-24 18:28:32,290 INFO  L202        PluginConnector]: Adding new model DiceToken_0xcf67ced76e8356366291246a9222169f4dbdbe64_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 06:28:32 BoogieIcfgContainer
[2020-11-24 18:28:32,290 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 06:28:31" (2/2) ...
[2020-11-24 18:28:32,290 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-24 18:28:32,291 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@19e2b653 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 06:28:32, skipping insertion in model container
[2020-11-24 18:28:32,291 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-24 18:28:32,291 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-24 18:28:32,291 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-24 18:28:32,293 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-24 18:28:32,293 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "DiceToken_0xcf67ced76e8356366291246a9222169f4dbdbe64_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 06:28:31" (1/3) ...
[2020-11-24 18:28:32,293 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@3db8ba01 and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 06:28:32, skipping insertion in model container
[2020-11-24 18:28:32,294 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 06:28:31" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-24 18:28:32,329 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 06:28:32 NWAContainer
[2020-11-24 18:28:32,330 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-24 18:28:32,330 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-24 18:28:32,330 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-24 18:28:32,331 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-24 18:28:32,331 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "DiceToken_0xcf67ced76e8356366291246a9222169f4dbdbe64_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 06:28:32" (3/4) ...
[2020-11-24 18:28:32,332 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@4105dca2 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 06:28:32, skipping insertion in model container
[2020-11-24 18:28:32,332 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 06:28:32" (4/4) ...
[2020-11-24 18:28:32,336 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-24 18:28:32,338 INFO  L110   BuchiProductObserver]: Initial RCFG 523 locations, 626 edges
[2020-11-24 18:28:32,338 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-24 18:28:32,348 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-24 18:28:33,181 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-24 18:28:33,183 INFO  L110   BuchiProductObserver]: BuchiProgram size 1214 locations, 2019 edges
[2020-11-24 18:28:33,183 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 06:28:33 BoogieIcfgContainer
[2020-11-24 18:28:33,183 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-24 18:28:33,184 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-24 18:28:33,184 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-24 18:28:33,186 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-24 18:28:33,186 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 06:28:33" (1/1) ...
[2020-11-24 18:28:33,223 INFO  L313           BlockEncoder]: Initial Icfg 1214 locations, 2019 edges
[2020-11-24 18:28:33,224 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-24 18:28:33,224 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-24 18:28:33,224 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-24 18:28:33,225 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-24 18:28:33,232 INFO  L70    emoveInfeasibleEdges]: Removed 39 edges and 11 locations because of local infeasibility
[2020-11-24 18:28:33,236 INFO  L70        RemoveSinkStates]: Removed 2 edges and 1 locations by removing sink states
[2020-11-24 18:28:33,241 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-24 18:28:33,243 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-24 18:28:33,244 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-24 18:28:33,245 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-24 18:28:33,247 INFO  L313           BlockEncoder]: Encoded RCFG 1188 locations, 1958 edges
[2020-11-24 18:28:33,247 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 24.11 06:28:33 BasicIcfg
[2020-11-24 18:28:33,247 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-24 18:28:33,248 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-24 18:28:33,248 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-24 18:28:33,250 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-24 18:28:33,250 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 18:28:33,250 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "DiceToken_0xcf67ced76e8356366291246a9222169f4dbdbe64_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 06:28:31" (1/6) ...
[2020-11-24 18:28:33,252 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@3ba46e47 and model type DiceToken_0xcf67ced76e8356366291246a9222169f4dbdbe64_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 24.11 06:28:33, skipping insertion in model container
[2020-11-24 18:28:33,252 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 18:28:33,253 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 06:28:31" (2/6) ...
[2020-11-24 18:28:33,253 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@3ba46e47 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 24.11 06:28:33, skipping insertion in model container
[2020-11-24 18:28:33,253 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 18:28:33,253 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "DiceToken_0xcf67ced76e8356366291246a9222169f4dbdbe64_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 06:28:32" (3/6) ...
[2020-11-24 18:28:33,253 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@3ba46e47 and model type DiceToken_0xcf67ced76e8356366291246a9222169f4dbdbe64_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 24.11 06:28:33, skipping insertion in model container
[2020-11-24 18:28:33,253 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 18:28:33,253 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 06:28:32" (4/6) ...
[2020-11-24 18:28:33,254 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@3ba46e47 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 24.11 06:28:33, skipping insertion in model container
[2020-11-24 18:28:33,254 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 18:28:33,254 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 06:28:33" (5/6) ...
[2020-11-24 18:28:33,254 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@3ba46e47 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 24.11 06:28:33, skipping insertion in model container
[2020-11-24 18:28:33,254 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 18:28:33,254 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 24.11 06:28:33" (6/6) ...
[2020-11-24 18:28:33,256 INFO  L404   chiAutomizerObserver]: Analyzing ICFG DiceToken_0xcf67ced76e8356366291246a9222169f4dbdbe64_transfer-normal.bpl_BEv2
[2020-11-24 18:28:33,292 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-24 18:28:33,293 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-24 18:28:33,293 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-24 18:28:33,293 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-24 18:28:33,293 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-24 18:28:33,293 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-24 18:28:33,293 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-24 18:28:33,293 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-24 18:28:33,293 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-24 18:28:33,310 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1188 states.
[2020-11-24 18:28:33,345 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 18:28:33,345 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 18:28:33,345 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 18:28:33,353 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 18:28:33,353 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
[2020-11-24 18:28:33,353 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-24 18:28:33,354 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1188 states.
[2020-11-24 18:28:33,362 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 18:28:33,362 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 18:28:33,362 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 18:28:33,363 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 18:28:33,363 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L3]                 success_transfer_DiceToken0 := false;
[L3]                 call_transfer_DiceToken0 := false;
[L3]     CALL        call main();
[L3]                 havoc p1;
[L1471]              assume null == 0;
[L1472]  CALL        call this := FreshRefGenerator__success();
[L611]               havoc newRef;
[L612]               assume Alloc[newRef] == false;
[L613]               Alloc[newRef] := true;
[L614]               assume newRef != null;
[L1472]  RET         call this := FreshRefGenerator__success();
[L1473]              assume now >= 0;
[L1474]              assume DType[this] == DiceToken;
[L1475]              assume !revert && gas >= 0;
[L1476]  CALL        call CorralChoice_DiceToken(this);
[L1388]              havoc msgsender_MSG;
[L1389]              havoc msgvalue_MSG;
[L1390]              havoc choice;
[L1391]              havoc __ret_0_totalSupply;
[L1392]              havoc tokenOwner_s323;
[L1393]              havoc balance_s323;
[L1394]              havoc tokenOwner_s469;
[L1395]              havoc spender_s469;
[L1396]              havoc remaining_s469;
[L1397]              havoc to_s366;
[L1398]              havoc tokens_s366;
[L1399]              havoc success_s366;
[L1400]              havoc spender_s394;
[L1401]              havoc tokens_s394;
[L1402]              havoc success_s394;
[L1403]              havoc from_s453;
[L1404]              havoc to_s453;
[L1405]              havoc tokens_s453;
[L1406]              havoc success_s453;
[L1407]              havoc __ret_0_owner;
[L1408]              havoc __ret_0_newOwner;
[L1409]              havoc _newOwner_s205;
[L1410]              havoc __ret_0_symbol;
[L1411]              havoc __ret_0_name;
[L1412]              havoc __ret_0_decimals;
[L1413]              havoc __ret_0__totalSupply;
[L1414]              havoc tokenAddress_s496;
[L1415]              havoc tokens_s496;
[L1416]              havoc success_s496;
[L1417]              havoc tmpNow;
[L1418]              havoc gas;
[L1419]              assume gas > 4000000 && gas <= 8000000;
[L1420]              tmpNow := now;
[L1421]              havoc now;
[L1422]              assume now > tmpNow;
[L1423]              assume msgsender_MSG != null;
[L1424]  COND TRUE   choice == 6
[L1425]              gas := gas - 21000;
[L1426]  COND FALSE  !(gas >= 0)
[L1476]  RET         call CorralChoice_DiceToken(this);

Loop:
[L1476]        assume true;

[2020-11-24 18:28:33,379 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 18:28:33,379 INFO  L82        PathProgramCache]: Analyzing trace with hash 197204714, now seen corresponding path program 1 times
[2020-11-24 18:28:33,383 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 18:28:33,403 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 18:28:33,449 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 18:28:33,451 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 18:28:33,452 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-24 18:28:33,455 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 18:28:33,468 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-24 18:28:33,468 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-24 18:28:33,470 INFO  L87              Difference]: Start difference. First operand 1188 states. Second operand 3 states.
[2020-11-24 18:28:33,648 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 18:28:33,649 INFO  L93              Difference]: Finished difference Result 543 states and 593 transitions.
[2020-11-24 18:28:33,649 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-24 18:28:33,650 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 543 states and 593 transitions.
[2020-11-24 18:28:33,655 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 18:28:33,661 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 543 states to 167 states and 176 transitions.
[2020-11-24 18:28:33,662 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 4
[2020-11-24 18:28:33,662 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 167
[2020-11-24 18:28:33,663 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 167 states and 176 transitions.
[2020-11-24 18:28:33,664 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 18:28:33,664 INFO  L728         BuchiCegarLoop]: Abstraction has 167 states and 176 transitions.
[2020-11-24 18:28:33,678 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 167 states and 176 transitions.
[2020-11-24 18:28:33,698 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 167 to 167.
[2020-11-24 18:28:33,699 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 167 states.
[2020-11-24 18:28:33,700 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 167 states to 167 states and 176 transitions.
[2020-11-24 18:28:33,702 INFO  L751         BuchiCegarLoop]: Abstraction has 167 states and 176 transitions.
[2020-11-24 18:28:33,702 INFO  L631         BuchiCegarLoop]: Abstraction has 167 states and 176 transitions.
[2020-11-24 18:28:33,702 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-24 18:28:33,702 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 167 states and 176 transitions.
[2020-11-24 18:28:33,704 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 18:28:33,704 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 18:28:33,704 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 18:28:33,706 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 18:28:33,706 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L3]                 success_transfer_DiceToken0 := false;
[L3]                 call_transfer_DiceToken0 := false;
[L3]     CALL        call main();
[L3]                 havoc p1;
[L1471]              assume null == 0;
[L1472]  CALL        call this := FreshRefGenerator__success();
[L611]               havoc newRef;
[L612]               assume Alloc[newRef] == false;
[L613]               Alloc[newRef] := true;
[L614]               assume newRef != null;
[L1472]  RET         call this := FreshRefGenerator__success();
[L1473]              assume now >= 0;
[L1474]              assume DType[this] == DiceToken;
[L1475]              assume !revert && gas >= 0;
[L1476]  CALL        call CorralChoice_DiceToken(this);
[L1388]              havoc msgsender_MSG;
[L1389]              havoc msgvalue_MSG;
[L1390]              havoc choice;
[L1391]              havoc __ret_0_totalSupply;
[L1392]              havoc tokenOwner_s323;
[L1393]              havoc balance_s323;
[L1394]              havoc tokenOwner_s469;
[L1395]              havoc spender_s469;
[L1396]              havoc remaining_s469;
[L1397]              havoc to_s366;
[L1398]              havoc tokens_s366;
[L1399]              havoc success_s366;
[L1400]              havoc spender_s394;
[L1401]              havoc tokens_s394;
[L1402]              havoc success_s394;
[L1403]              havoc from_s453;
[L1404]              havoc to_s453;
[L1405]              havoc tokens_s453;
[L1406]              havoc success_s453;
[L1407]              havoc __ret_0_owner;
[L1408]              havoc __ret_0_newOwner;
[L1409]              havoc _newOwner_s205;
[L1410]              havoc __ret_0_symbol;
[L1411]              havoc __ret_0_name;
[L1412]              havoc __ret_0_decimals;
[L1413]              havoc __ret_0__totalSupply;
[L1414]              havoc tokenAddress_s496;
[L1415]              havoc tokens_s496;
[L1416]              havoc success_s496;
[L1417]              havoc tmpNow;
[L1418]              havoc gas;
[L1419]              assume gas > 4000000 && gas <= 8000000;
[L1420]              tmpNow := now;
[L1421]              havoc now;
[L1422]              assume now > tmpNow;
[L1423]              assume msgsender_MSG != null;
[L1424]  COND FALSE  !(choice == 6)
[L1430]  COND FALSE  !(choice == 5)
[L1436]  COND FALSE  !(choice == 4)
[L1442]  COND TRUE   choice == 3
[L1443]              gas := gas - 21000;
[L1444]  COND TRUE   gas >= 0
[L1445]              assume tokens_s366 >= 0 && tokens_s366 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1446]              assume msgvalue_MSG == 0;
[L1447]  CALL        call success_s366 := transfer~address~uint256_DiceToken(this, msgsender_MSG, msgvalue_MSG, to_s366, tokens_s366);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != to_s366) && msgsender_MSG != to_s366) && tokens_s366 <= balances_DiceToken[this][msgsender_MSG]) && balances_DiceToken[this][to_s366] + tokens_s366 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && tokens_s366 >= 0) && tokens_s366 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_DiceToken[this][to_s366] >= 0) && balances_DiceToken[this][to_s366] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_DiceToken[this][msgsender_MSG] >= 0) && balances_DiceToken[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_DiceToken0 := true;
[L3]                 call_transfer_DiceToken0 := false;
[L3]                 revert := revert_hold;
[L187]               havoc __exception;
[L188]               revert := false;
[L189]   COND FALSE  !(__exception)
[L212]   CALL        call success_s366 := transfer~address~uint256_DiceToken__success(this, msgsender_MSG, msgvalue_MSG, to_s366, tokens_s366);
[L707]   CALL        call __var_2 := sub~uint256~uint256_SafeMath__success(this, this, 0, balances_DiceToken[this][msgsender_MSG], tokens_s366);
[L646]   COND TRUE   !(b_s45 <= a_s45)
[L647]               revert := true;
[L707]   RET         call __var_2 := sub~uint256~uint256_SafeMath__success(this, this, 0, balances_DiceToken[this][msgsender_MSG], tokens_s366);
[L708]   COND TRUE   revert
[L212]   RET         call success_s366 := transfer~address~uint256_DiceToken__success(this, msgsender_MSG, msgvalue_MSG, to_s366, tokens_s366);
[L213]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !((((((((((success_s366 == true && balances_DiceToken[this][msgsender_MSG] == old(balances_DiceToken[this][msgsender_MSG]) - tokens_s366) && balances_DiceToken[this][to_s366] == old(balances_DiceToken[this][to_s366]) + tokens_s366) && _totalSupply_DiceToken[this] == old(_totalSupply_DiceToken[this])) && allowed_DiceToken[this] == old(allowed_DiceToken[this])) && balances_DiceToken[this][p1] == old(balances_DiceToken[this][p1])) && symbol_DiceToken[this] == old(symbol_DiceToken[this])) && name_DiceToken[this] == old(name_DiceToken[this])) && decimals_DiceToken[this] == old(decimals_DiceToken[this])) && owner_Owned[this] == old(owner_Owned[this])) && newOwner_Owned[this] == old(newOwner_Owned[this]));
[L3]                 revert := revert_hold;
[L1447]  RET         call success_s366 := transfer~address~uint256_DiceToken(this, msgsender_MSG, msgvalue_MSG, to_s366, tokens_s366);
[L1476]  RET         call CorralChoice_DiceToken(this);

Loop:
[L1476]        assume true;

[2020-11-24 18:28:33,709 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 18:28:33,709 INFO  L82        PathProgramCache]: Analyzing trace with hash 485158449, now seen corresponding path program 1 times
[2020-11-24 18:28:33,710 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 18:28:33,722 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 18:28:33,738 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 18:28:33,739 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 18:28:33,739 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-24 18:28:33,740 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 18:28:33,740 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-24 18:28:33,740 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-24 18:28:33,741 INFO  L87              Difference]: Start difference. First operand 167 states and 176 transitions. cyclomatic complexity: 10 Second operand 3 states.
[2020-11-24 18:28:33,748 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 18:28:33,748 INFO  L93              Difference]: Finished difference Result 198 states and 206 transitions.
[2020-11-24 18:28:33,748 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-24 18:28:33,748 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 198 states and 206 transitions.
[2020-11-24 18:28:33,750 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 2
[2020-11-24 18:28:33,752 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 198 states to 184 states and 189 transitions.
[2020-11-24 18:28:33,752 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 184
[2020-11-24 18:28:33,752 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 184
[2020-11-24 18:28:33,752 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 184 states and 189 transitions.
[2020-11-24 18:28:33,753 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 18:28:33,753 INFO  L728         BuchiCegarLoop]: Abstraction has 184 states and 189 transitions.
[2020-11-24 18:28:33,753 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 184 states and 189 transitions.
[2020-11-24 18:28:33,759 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 184 to 173.
[2020-11-24 18:28:33,759 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 173 states.
[2020-11-24 18:28:33,760 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 173 states to 173 states and 178 transitions.
[2020-11-24 18:28:33,760 INFO  L751         BuchiCegarLoop]: Abstraction has 173 states and 178 transitions.
[2020-11-24 18:28:33,760 INFO  L631         BuchiCegarLoop]: Abstraction has 173 states and 178 transitions.
[2020-11-24 18:28:33,760 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-24 18:28:33,760 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 173 states and 178 transitions.
[2020-11-24 18:28:33,761 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 18:28:33,761 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 18:28:33,761 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 18:28:33,762 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 18:28:33,762 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L3]                 success_transfer_DiceToken0 := false;
[L3]                 call_transfer_DiceToken0 := false;
[L3]     CALL        call main();
[L3]                 havoc p1;
[L1471]              assume null == 0;
[L1472]  CALL        call this := FreshRefGenerator__success();
[L611]               havoc newRef;
[L612]               assume Alloc[newRef] == false;
[L613]               Alloc[newRef] := true;
[L614]               assume newRef != null;
[L1472]  RET         call this := FreshRefGenerator__success();
[L1473]              assume now >= 0;
[L1474]              assume DType[this] == DiceToken;
[L1475]              assume !revert && gas >= 0;
[L1476]  CALL        call CorralChoice_DiceToken(this);
[L1388]              havoc msgsender_MSG;
[L1389]              havoc msgvalue_MSG;
[L1390]              havoc choice;
[L1391]              havoc __ret_0_totalSupply;
[L1392]              havoc tokenOwner_s323;
[L1393]              havoc balance_s323;
[L1394]              havoc tokenOwner_s469;
[L1395]              havoc spender_s469;
[L1396]              havoc remaining_s469;
[L1397]              havoc to_s366;
[L1398]              havoc tokens_s366;
[L1399]              havoc success_s366;
[L1400]              havoc spender_s394;
[L1401]              havoc tokens_s394;
[L1402]              havoc success_s394;
[L1403]              havoc from_s453;
[L1404]              havoc to_s453;
[L1405]              havoc tokens_s453;
[L1406]              havoc success_s453;
[L1407]              havoc __ret_0_owner;
[L1408]              havoc __ret_0_newOwner;
[L1409]              havoc _newOwner_s205;
[L1410]              havoc __ret_0_symbol;
[L1411]              havoc __ret_0_name;
[L1412]              havoc __ret_0_decimals;
[L1413]              havoc __ret_0__totalSupply;
[L1414]              havoc tokenAddress_s496;
[L1415]              havoc tokens_s496;
[L1416]              havoc success_s496;
[L1417]              havoc tmpNow;
[L1418]              havoc gas;
[L1419]              assume gas > 4000000 && gas <= 8000000;
[L1420]              tmpNow := now;
[L1421]              havoc now;
[L1422]              assume now > tmpNow;
[L1423]              assume msgsender_MSG != null;
[L1424]  COND FALSE  !(choice == 6)
[L1430]  COND FALSE  !(choice == 5)
[L1436]  COND FALSE  !(choice == 4)
[L1442]  COND TRUE   choice == 3
[L1443]              gas := gas - 21000;
[L1444]  COND TRUE   gas >= 0
[L1445]              assume tokens_s366 >= 0 && tokens_s366 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1446]              assume msgvalue_MSG == 0;
[L1447]  CALL        call success_s366 := transfer~address~uint256_DiceToken(this, msgsender_MSG, msgvalue_MSG, to_s366, tokens_s366);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != to_s366) && msgsender_MSG != to_s366) && tokens_s366 <= balances_DiceToken[this][msgsender_MSG]) && balances_DiceToken[this][to_s366] + tokens_s366 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && tokens_s366 >= 0) && tokens_s366 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_DiceToken[this][to_s366] >= 0) && balances_DiceToken[this][to_s366] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_DiceToken[this][msgsender_MSG] >= 0) && balances_DiceToken[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_DiceToken0 := true;
[L3]                 call_transfer_DiceToken0 := false;
[L3]                 revert := revert_hold;
[L187]               havoc __exception;
[L188]               revert := false;
[L189]   COND TRUE   __exception
[L190]               __tmp__Balance := Balance;
[L191]               __tmp__DType := DType;
[L192]               __tmp__Alloc := Alloc;
[L193]               __tmp__balance_ADDR := balance_ADDR;
[L194]               __tmp__M_Ref_int := M_Ref_int;
[L195]               __tmp__sum_balances0 := sum_balances0;
[L196]               __tmp__alloc_allowed_DiceToken_lvl0 := alloc_allowed_DiceToken_lvl0;
[L197]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L198]               __tmp__sum_allowed1 := sum_allowed1;
[L199]               __tmp__Length := Length;
[L200]               __tmp__now := now;
[L201]               __tmp__owner_Owned := owner_Owned;
[L202]               __tmp__newOwner_Owned := newOwner_Owned;
[L203]               __tmp__symbol_DiceToken := symbol_DiceToken;
[L204]               __tmp__name_DiceToken := name_DiceToken;
[L205]               __tmp__decimals_DiceToken := decimals_DiceToken;
[L206]               __tmp___totalSupply_DiceToken := _totalSupply_DiceToken;
[L207]               __tmp__balances_DiceToken := balances_DiceToken;
[L208]               __tmp__allowed_DiceToken := allowed_DiceToken;
[L209]   CALL        call success_s366 := transfer~address~uint256_DiceToken__fail(this, msgsender_MSG, msgvalue_MSG, to_s366, tokens_s366);
[L685]   CALL        call __var_2 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __tmp__balances_DiceToken[this][msgsender_MSG], tokens_s366);
[L637]   COND TRUE   !(b_s45 <= a_s45)
[L638]               revert := true;
[L685]   RET         call __var_2 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __tmp__balances_DiceToken[this][msgsender_MSG], tokens_s366);
[L686]   COND TRUE   revert
[L209]   RET         call success_s366 := transfer~address~uint256_DiceToken__fail(this, msgsender_MSG, msgvalue_MSG, to_s366, tokens_s366);
[L210]               assume revert || gas < 0;
[L1447]  RET         call success_s366 := transfer~address~uint256_DiceToken(this, msgsender_MSG, msgvalue_MSG, to_s366, tokens_s366);
[L1476]  RET         call CorralChoice_DiceToken(this);

Loop:
[L1476]        assume true;

[2020-11-24 18:28:33,764 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 18:28:33,765 INFO  L82        PathProgramCache]: Analyzing trace with hash -1898477368, now seen corresponding path program 1 times
[2020-11-24 18:28:33,765 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 18:28:33,776 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 18:28:33,824 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 18:28:33,825 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 18:28:33,825 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [7] imperfect sequences [] total 7
[2020-11-24 18:28:33,825 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 18:28:33,825 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 7 interpolants.
[2020-11-24 18:28:33,825 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=11, Invalid=31, Unknown=0, NotChecked=0, Total=42
[2020-11-24 18:28:33,826 INFO  L87              Difference]: Start difference. First operand 173 states and 178 transitions. cyclomatic complexity: 6 Second operand 7 states.
[2020-11-24 18:28:33,909 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 18:28:33,909 INFO  L93              Difference]: Finished difference Result 188 states and 192 transitions.
[2020-11-24 18:28:33,909 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 8 states. 
[2020-11-24 18:28:33,910 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 188 states and 192 transitions.
[2020-11-24 18:28:33,911 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 2
[2020-11-24 18:28:33,912 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 188 states to 181 states and 185 transitions.
[2020-11-24 18:28:33,912 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 181
[2020-11-24 18:28:33,913 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 181
[2020-11-24 18:28:33,913 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 181 states and 185 transitions.
[2020-11-24 18:28:33,913 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 18:28:33,913 INFO  L728         BuchiCegarLoop]: Abstraction has 181 states and 185 transitions.
[2020-11-24 18:28:33,914 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 181 states and 185 transitions.
[2020-11-24 18:28:33,917 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 181 to 168.
[2020-11-24 18:28:33,917 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 168 states.
[2020-11-24 18:28:33,918 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 168 states to 168 states and 172 transitions.
[2020-11-24 18:28:33,918 INFO  L751         BuchiCegarLoop]: Abstraction has 168 states and 172 transitions.
[2020-11-24 18:28:33,918 INFO  L631         BuchiCegarLoop]: Abstraction has 168 states and 172 transitions.
[2020-11-24 18:28:33,918 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-24 18:28:33,918 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 168 states and 172 transitions.
[2020-11-24 18:28:33,919 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 18:28:33,919 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 18:28:33,919 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 18:28:33,921 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 18:28:33,921 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L3]                 success_transfer_DiceToken0 := false;
[L3]                 call_transfer_DiceToken0 := false;
[L3]     CALL        call main();
[L3]                 havoc p1;
[L1471]              assume null == 0;
[L1472]  CALL        call this := FreshRefGenerator__success();
[L611]               havoc newRef;
[L612]               assume Alloc[newRef] == false;
[L613]               Alloc[newRef] := true;
[L614]               assume newRef != null;
[L1472]  RET         call this := FreshRefGenerator__success();
[L1473]              assume now >= 0;
[L1474]              assume DType[this] == DiceToken;
[L1475]              assume !revert && gas >= 0;
[L1476]  CALL        call CorralChoice_DiceToken(this);
[L1388]              havoc msgsender_MSG;
[L1389]              havoc msgvalue_MSG;
[L1390]              havoc choice;
[L1391]              havoc __ret_0_totalSupply;
[L1392]              havoc tokenOwner_s323;
[L1393]              havoc balance_s323;
[L1394]              havoc tokenOwner_s469;
[L1395]              havoc spender_s469;
[L1396]              havoc remaining_s469;
[L1397]              havoc to_s366;
[L1398]              havoc tokens_s366;
[L1399]              havoc success_s366;
[L1400]              havoc spender_s394;
[L1401]              havoc tokens_s394;
[L1402]              havoc success_s394;
[L1403]              havoc from_s453;
[L1404]              havoc to_s453;
[L1405]              havoc tokens_s453;
[L1406]              havoc success_s453;
[L1407]              havoc __ret_0_owner;
[L1408]              havoc __ret_0_newOwner;
[L1409]              havoc _newOwner_s205;
[L1410]              havoc __ret_0_symbol;
[L1411]              havoc __ret_0_name;
[L1412]              havoc __ret_0_decimals;
[L1413]              havoc __ret_0__totalSupply;
[L1414]              havoc tokenAddress_s496;
[L1415]              havoc tokens_s496;
[L1416]              havoc success_s496;
[L1417]              havoc tmpNow;
[L1418]              havoc gas;
[L1419]              assume gas > 4000000 && gas <= 8000000;
[L1420]              tmpNow := now;
[L1421]              havoc now;
[L1422]              assume now > tmpNow;
[L1423]              assume msgsender_MSG != null;
[L1424]  COND FALSE  !(choice == 6)
[L1430]  COND FALSE  !(choice == 5)
[L1436]  COND FALSE  !(choice == 4)
[L1442]  COND TRUE   choice == 3
[L1443]              gas := gas - 21000;
[L1444]  COND TRUE   gas >= 0
[L1445]              assume tokens_s366 >= 0 && tokens_s366 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1446]              assume msgvalue_MSG == 0;
[L1447]  CALL        call success_s366 := transfer~address~uint256_DiceToken(this, msgsender_MSG, msgvalue_MSG, to_s366, tokens_s366);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != to_s366) && msgsender_MSG != to_s366) && tokens_s366 <= balances_DiceToken[this][msgsender_MSG]) && balances_DiceToken[this][to_s366] + tokens_s366 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && tokens_s366 >= 0) && tokens_s366 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_DiceToken[this][to_s366] >= 0) && balances_DiceToken[this][to_s366] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_DiceToken[this][msgsender_MSG] >= 0) && balances_DiceToken[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_DiceToken0 := true;
[L3]                 call_transfer_DiceToken0 := false;
[L3]                 revert := revert_hold;
[L187]               havoc __exception;
[L188]               revert := false;
[L189]   COND TRUE   __exception
[L190]               __tmp__Balance := Balance;
[L191]               __tmp__DType := DType;
[L192]               __tmp__Alloc := Alloc;
[L193]               __tmp__balance_ADDR := balance_ADDR;
[L194]               __tmp__M_Ref_int := M_Ref_int;
[L195]               __tmp__sum_balances0 := sum_balances0;
[L196]               __tmp__alloc_allowed_DiceToken_lvl0 := alloc_allowed_DiceToken_lvl0;
[L197]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L198]               __tmp__sum_allowed1 := sum_allowed1;
[L199]               __tmp__Length := Length;
[L200]               __tmp__now := now;
[L201]               __tmp__owner_Owned := owner_Owned;
[L202]               __tmp__newOwner_Owned := newOwner_Owned;
[L203]               __tmp__symbol_DiceToken := symbol_DiceToken;
[L204]               __tmp__name_DiceToken := name_DiceToken;
[L205]               __tmp__decimals_DiceToken := decimals_DiceToken;
[L206]               __tmp___totalSupply_DiceToken := _totalSupply_DiceToken;
[L207]               __tmp__balances_DiceToken := balances_DiceToken;
[L208]               __tmp__allowed_DiceToken := allowed_DiceToken;
[L209]   CALL        call success_s366 := transfer~address~uint256_DiceToken__fail(this, msgsender_MSG, msgvalue_MSG, to_s366, tokens_s366);
[L685]   CALL        call __var_2 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __tmp__balances_DiceToken[this][msgsender_MSG], tokens_s366);
[L637]   COND FALSE  !(!(b_s45 <= a_s45))
[L641]               c_s45 := (a_s45 - b_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L685]   RET         call __var_2 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __tmp__balances_DiceToken[this][msgsender_MSG], tokens_s366);
[L686]   COND TRUE   revert
[L209]   RET         call success_s366 := transfer~address~uint256_DiceToken__fail(this, msgsender_MSG, msgvalue_MSG, to_s366, tokens_s366);
[L210]               assume revert || gas < 0;
[L1447]  RET         call success_s366 := transfer~address~uint256_DiceToken(this, msgsender_MSG, msgvalue_MSG, to_s366, tokens_s366);
[L1476]  RET         call CorralChoice_DiceToken(this);

Loop:
[L1476]        assume true;

[2020-11-24 18:28:33,923 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 18:28:33,923 INFO  L82        PathProgramCache]: Analyzing trace with hash 867768706, now seen corresponding path program 1 times
[2020-11-24 18:28:33,924 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 18:28:33,932 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 18:28:33,951 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 18:28:33,951 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 18:28:33,952 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [5] imperfect sequences [] total 5
[2020-11-24 18:28:33,952 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 18:28:33,952 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 5 interpolants.
[2020-11-24 18:28:33,952 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=9, Invalid=11, Unknown=0, NotChecked=0, Total=20
[2020-11-24 18:28:33,952 INFO  L87              Difference]: Start difference. First operand 168 states and 172 transitions. cyclomatic complexity: 5 Second operand 5 states.
[2020-11-24 18:28:33,969 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 18:28:33,969 INFO  L93              Difference]: Finished difference Result 179 states and 181 transitions.
[2020-11-24 18:28:33,969 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-24 18:28:33,970 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 179 states and 181 transitions.
[2020-11-24 18:28:33,971 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 2
[2020-11-24 18:28:33,972 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 179 states to 179 states and 181 transitions.
[2020-11-24 18:28:33,972 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 179
[2020-11-24 18:28:33,972 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 179
[2020-11-24 18:28:33,972 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 179 states and 181 transitions.
[2020-11-24 18:28:33,972 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 18:28:33,972 INFO  L728         BuchiCegarLoop]: Abstraction has 179 states and 181 transitions.
[2020-11-24 18:28:33,973 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 179 states and 181 transitions.
[2020-11-24 18:28:33,975 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 179 to 168.
[2020-11-24 18:28:33,975 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 168 states.
[2020-11-24 18:28:33,976 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 168 states to 168 states and 170 transitions.
[2020-11-24 18:28:33,976 INFO  L751         BuchiCegarLoop]: Abstraction has 168 states and 170 transitions.
[2020-11-24 18:28:33,976 INFO  L631         BuchiCegarLoop]: Abstraction has 168 states and 170 transitions.
[2020-11-24 18:28:33,976 INFO  L445         BuchiCegarLoop]: ======== Iteration 5============
[2020-11-24 18:28:33,976 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 168 states and 170 transitions.
[2020-11-24 18:28:33,977 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 18:28:33,977 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 18:28:33,977 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 18:28:33,977 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 18:28:33,977 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L3]                 success_transfer_DiceToken0 := false;
[L3]                 call_transfer_DiceToken0 := false;
[L3]     CALL        call main();
[L3]                 havoc p1;
[L1471]              assume null == 0;
[L1472]  CALL        call this := FreshRefGenerator__success();
[L611]               havoc newRef;
[L612]               assume Alloc[newRef] == false;
[L613]               Alloc[newRef] := true;
[L614]               assume newRef != null;
[L1472]  RET         call this := FreshRefGenerator__success();
[L1473]              assume now >= 0;
[L1474]              assume DType[this] == DiceToken;
[L1475]              assume !revert && gas >= 0;
[L1476]  CALL        call CorralChoice_DiceToken(this);
[L1388]              havoc msgsender_MSG;
[L1389]              havoc msgvalue_MSG;
[L1390]              havoc choice;
[L1391]              havoc __ret_0_totalSupply;
[L1392]              havoc tokenOwner_s323;
[L1393]              havoc balance_s323;
[L1394]              havoc tokenOwner_s469;
[L1395]              havoc spender_s469;
[L1396]              havoc remaining_s469;
[L1397]              havoc to_s366;
[L1398]              havoc tokens_s366;
[L1399]              havoc success_s366;
[L1400]              havoc spender_s394;
[L1401]              havoc tokens_s394;
[L1402]              havoc success_s394;
[L1403]              havoc from_s453;
[L1404]              havoc to_s453;
[L1405]              havoc tokens_s453;
[L1406]              havoc success_s453;
[L1407]              havoc __ret_0_owner;
[L1408]              havoc __ret_0_newOwner;
[L1409]              havoc _newOwner_s205;
[L1410]              havoc __ret_0_symbol;
[L1411]              havoc __ret_0_name;
[L1412]              havoc __ret_0_decimals;
[L1413]              havoc __ret_0__totalSupply;
[L1414]              havoc tokenAddress_s496;
[L1415]              havoc tokens_s496;
[L1416]              havoc success_s496;
[L1417]              havoc tmpNow;
[L1418]              havoc gas;
[L1419]              assume gas > 4000000 && gas <= 8000000;
[L1420]              tmpNow := now;
[L1421]              havoc now;
[L1422]              assume now > tmpNow;
[L1423]              assume msgsender_MSG != null;
[L1424]  COND FALSE  !(choice == 6)
[L1430]  COND FALSE  !(choice == 5)
[L1436]  COND FALSE  !(choice == 4)
[L1442]  COND TRUE   choice == 3
[L1443]              gas := gas - 21000;
[L1444]  COND TRUE   gas >= 0
[L1445]              assume tokens_s366 >= 0 && tokens_s366 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1446]              assume msgvalue_MSG == 0;
[L1447]  CALL        call success_s366 := transfer~address~uint256_DiceToken(this, msgsender_MSG, msgvalue_MSG, to_s366, tokens_s366);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != to_s366) && msgsender_MSG != to_s366) && tokens_s366 <= balances_DiceToken[this][msgsender_MSG]) && balances_DiceToken[this][to_s366] + tokens_s366 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && tokens_s366 >= 0) && tokens_s366 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_DiceToken[this][to_s366] >= 0) && balances_DiceToken[this][to_s366] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_DiceToken[this][msgsender_MSG] >= 0) && balances_DiceToken[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_DiceToken0 := true;
[L3]                 call_transfer_DiceToken0 := false;
[L3]                 revert := revert_hold;
[L187]               havoc __exception;
[L188]               revert := false;
[L189]   COND FALSE  !(__exception)
[L212]   CALL        call success_s366 := transfer~address~uint256_DiceToken__success(this, msgsender_MSG, msgvalue_MSG, to_s366, tokens_s366);
[L707]   CALL        call __var_2 := sub~uint256~uint256_SafeMath__success(this, this, 0, balances_DiceToken[this][msgsender_MSG], tokens_s366);
[L646]   COND FALSE  !(!(b_s45 <= a_s45))
[L650]               c_s45 := (a_s45 - b_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L707]   RET         call __var_2 := sub~uint256~uint256_SafeMath__success(this, this, 0, balances_DiceToken[this][msgsender_MSG], tokens_s366);
[L708]   COND FALSE  !(revert)
[L711]               sum_balances0[this] := sum_balances0[this] - balances_DiceToken[this][msgsender_MSG];
[L712]               balances_DiceToken[this][msgsender_MSG] := __var_2;
[L713]               sum_balances0[this] := sum_balances0[this] + balances_DiceToken[this][msgsender_MSG];
[L714]   CALL        call __var_3 := add~uint256~uint256_SafeMath__success(this, this, 0, balances_DiceToken[this][to_s366], tokens_s366);
[L628]               c_s23 := (a_s23 + b_s23) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L629]   COND FALSE  !(!(c_s23 >= a_s23))
[L714]   RET         call __var_3 := add~uint256~uint256_SafeMath__success(this, this, 0, balances_DiceToken[this][to_s366], tokens_s366);
[L715]   COND FALSE  !(revert)
[L718]               sum_balances0[this] := sum_balances0[this] - balances_DiceToken[this][to_s366];
[L719]               balances_DiceToken[this][to_s366] := __var_3;
[L720]               sum_balances0[this] := sum_balances0[this] + balances_DiceToken[this][to_s366];
[L721]               assert { :EventEmitted "Transfer_DiceToken" } true;
[L722]               success_s366 := true;
[L212]   RET         call success_s366 := transfer~address~uint256_DiceToken__success(this, msgsender_MSG, msgvalue_MSG, to_s366, tokens_s366);
[L213]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !((((((((((success_s366 == true && balances_DiceToken[this][msgsender_MSG] == old(balances_DiceToken[this][msgsender_MSG]) - tokens_s366) && balances_DiceToken[this][to_s366] == old(balances_DiceToken[this][to_s366]) + tokens_s366) && _totalSupply_DiceToken[this] == old(_totalSupply_DiceToken[this])) && allowed_DiceToken[this] == old(allowed_DiceToken[this])) && balances_DiceToken[this][p1] == old(balances_DiceToken[this][p1])) && symbol_DiceToken[this] == old(symbol_DiceToken[this])) && name_DiceToken[this] == old(name_DiceToken[this])) && decimals_DiceToken[this] == old(decimals_DiceToken[this])) && owner_Owned[this] == old(owner_Owned[this])) && newOwner_Owned[this] == old(newOwner_Owned[this]));
[L3]                 revert := revert_hold;
[L1447]  RET         call success_s366 := transfer~address~uint256_DiceToken(this, msgsender_MSG, msgvalue_MSG, to_s366, tokens_s366);
[L1476]  RET         call CorralChoice_DiceToken(this);

Loop:
[L1476]        assume true;

[2020-11-24 18:28:33,980 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 18:28:33,980 INFO  L82        PathProgramCache]: Analyzing trace with hash -877480457, now seen corresponding path program 1 times
[2020-11-24 18:28:33,980 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 18:28:34,034 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 18:28:34,386 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 18:28:34,387 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 18:28:34,387 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [17] imperfect sequences [] total 17
[2020-11-24 18:28:34,387 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 18:28:34,387 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 17 interpolants.
[2020-11-24 18:28:34,388 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=35, Invalid=237, Unknown=0, NotChecked=0, Total=272
[2020-11-24 18:28:34,388 INFO  L87              Difference]: Start difference. First operand 168 states and 170 transitions. cyclomatic complexity: 3 Second operand 17 states.
[2020-11-24 18:28:34,764 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 18:28:34,764 INFO  L93              Difference]: Finished difference Result 170 states and 171 transitions.
[2020-11-24 18:28:34,764 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 16 states. 
[2020-11-24 18:28:34,764 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 170 states and 171 transitions.
[2020-11-24 18:28:34,765 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 18:28:34,765 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 170 states to 134 states and 135 transitions.
[2020-11-24 18:28:34,766 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 134
[2020-11-24 18:28:34,766 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 134
[2020-11-24 18:28:34,766 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 134 states and 135 transitions.
[2020-11-24 18:28:34,766 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 18:28:34,766 INFO  L728         BuchiCegarLoop]: Abstraction has 134 states and 135 transitions.
[2020-11-24 18:28:34,766 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 134 states and 135 transitions.
[2020-11-24 18:28:34,767 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 134 to 134.
[2020-11-24 18:28:34,768 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 134 states.
[2020-11-24 18:28:34,768 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 134 states to 134 states and 135 transitions.
[2020-11-24 18:28:34,768 INFO  L751         BuchiCegarLoop]: Abstraction has 134 states and 135 transitions.
[2020-11-24 18:28:34,768 INFO  L631         BuchiCegarLoop]: Abstraction has 134 states and 135 transitions.
[2020-11-24 18:28:34,769 INFO  L445         BuchiCegarLoop]: ======== Iteration 6============
[2020-11-24 18:28:34,769 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 134 states and 135 transitions.
[2020-11-24 18:28:34,769 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 18:28:34,769 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 18:28:34,769 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 18:28:34,770 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 18:28:34,770 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L3]                 success_transfer_DiceToken0 := false;
[L3]                 call_transfer_DiceToken0 := false;
[L3]     CALL        call main();
[L3]                 havoc p1;
[L1471]              assume null == 0;
[L1472]  CALL        call this := FreshRefGenerator__success();
[L611]               havoc newRef;
[L612]               assume Alloc[newRef] == false;
[L613]               Alloc[newRef] := true;
[L614]               assume newRef != null;
[L1472]  RET         call this := FreshRefGenerator__success();
[L1473]              assume now >= 0;
[L1474]              assume DType[this] == DiceToken;
[L1475]              assume !revert && gas >= 0;
[L1476]  CALL        call CorralChoice_DiceToken(this);
[L1388]              havoc msgsender_MSG;
[L1389]              havoc msgvalue_MSG;
[L1390]              havoc choice;
[L1391]              havoc __ret_0_totalSupply;
[L1392]              havoc tokenOwner_s323;
[L1393]              havoc balance_s323;
[L1394]              havoc tokenOwner_s469;
[L1395]              havoc spender_s469;
[L1396]              havoc remaining_s469;
[L1397]              havoc to_s366;
[L1398]              havoc tokens_s366;
[L1399]              havoc success_s366;
[L1400]              havoc spender_s394;
[L1401]              havoc tokens_s394;
[L1402]              havoc success_s394;
[L1403]              havoc from_s453;
[L1404]              havoc to_s453;
[L1405]              havoc tokens_s453;
[L1406]              havoc success_s453;
[L1407]              havoc __ret_0_owner;
[L1408]              havoc __ret_0_newOwner;
[L1409]              havoc _newOwner_s205;
[L1410]              havoc __ret_0_symbol;
[L1411]              havoc __ret_0_name;
[L1412]              havoc __ret_0_decimals;
[L1413]              havoc __ret_0__totalSupply;
[L1414]              havoc tokenAddress_s496;
[L1415]              havoc tokens_s496;
[L1416]              havoc success_s496;
[L1417]              havoc tmpNow;
[L1418]              havoc gas;
[L1419]              assume gas > 4000000 && gas <= 8000000;
[L1420]              tmpNow := now;
[L1421]              havoc now;
[L1422]              assume now > tmpNow;
[L1423]              assume msgsender_MSG != null;
[L1424]  COND FALSE  !(choice == 6)
[L1430]  COND FALSE  !(choice == 5)
[L1436]  COND FALSE  !(choice == 4)
[L1442]  COND TRUE   choice == 3
[L1443]              gas := gas - 21000;
[L1444]  COND TRUE   gas >= 0
[L1445]              assume tokens_s366 >= 0 && tokens_s366 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1446]              assume msgvalue_MSG == 0;
[L1447]  CALL        call success_s366 := transfer~address~uint256_DiceToken(this, msgsender_MSG, msgvalue_MSG, to_s366, tokens_s366);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != to_s366) && msgsender_MSG != to_s366) && tokens_s366 <= balances_DiceToken[this][msgsender_MSG]) && balances_DiceToken[this][to_s366] + tokens_s366 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && tokens_s366 >= 0) && tokens_s366 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_DiceToken[this][to_s366] >= 0) && balances_DiceToken[this][to_s366] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_DiceToken[this][msgsender_MSG] >= 0) && balances_DiceToken[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_DiceToken0 := true;
[L3]                 call_transfer_DiceToken0 := false;
[L3]                 revert := revert_hold;
[L187]               havoc __exception;
[L188]               revert := false;
[L189]   COND TRUE   __exception
[L190]               __tmp__Balance := Balance;
[L191]               __tmp__DType := DType;
[L192]               __tmp__Alloc := Alloc;
[L193]               __tmp__balance_ADDR := balance_ADDR;
[L194]               __tmp__M_Ref_int := M_Ref_int;
[L195]               __tmp__sum_balances0 := sum_balances0;
[L196]               __tmp__alloc_allowed_DiceToken_lvl0 := alloc_allowed_DiceToken_lvl0;
[L197]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L198]               __tmp__sum_allowed1 := sum_allowed1;
[L199]               __tmp__Length := Length;
[L200]               __tmp__now := now;
[L201]               __tmp__owner_Owned := owner_Owned;
[L202]               __tmp__newOwner_Owned := newOwner_Owned;
[L203]               __tmp__symbol_DiceToken := symbol_DiceToken;
[L204]               __tmp__name_DiceToken := name_DiceToken;
[L205]               __tmp__decimals_DiceToken := decimals_DiceToken;
[L206]               __tmp___totalSupply_DiceToken := _totalSupply_DiceToken;
[L207]               __tmp__balances_DiceToken := balances_DiceToken;
[L208]               __tmp__allowed_DiceToken := allowed_DiceToken;
[L209]   CALL        call success_s366 := transfer~address~uint256_DiceToken__fail(this, msgsender_MSG, msgvalue_MSG, to_s366, tokens_s366);
[L685]   CALL        call __var_2 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __tmp__balances_DiceToken[this][msgsender_MSG], tokens_s366);
[L637]   COND FALSE  !(!(b_s45 <= a_s45))
[L641]               c_s45 := (a_s45 - b_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L685]   RET         call __var_2 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __tmp__balances_DiceToken[this][msgsender_MSG], tokens_s366);
[L686]   COND FALSE  !(revert)
[L689]               __tmp__sum_balances0[this] := __tmp__sum_balances0[this] - __tmp__balances_DiceToken[this][msgsender_MSG];
[L690]               __tmp__balances_DiceToken[this][msgsender_MSG] := __var_2;
[L691]               __tmp__sum_balances0[this] := __tmp__sum_balances0[this] + __tmp__balances_DiceToken[this][msgsender_MSG];
[L692]   CALL        call __var_3 := add~uint256~uint256_SafeMath__fail(this, this, 0, __tmp__balances_DiceToken[this][to_s366], tokens_s366);
[L619]               c_s23 := (a_s23 + b_s23) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L620]   COND TRUE   !(c_s23 >= a_s23)
[L621]               revert := true;
[L692]   RET         call __var_3 := add~uint256~uint256_SafeMath__fail(this, this, 0, __tmp__balances_DiceToken[this][to_s366], tokens_s366);
[L693]   COND TRUE   revert
[L209]   RET         call success_s366 := transfer~address~uint256_DiceToken__fail(this, msgsender_MSG, msgvalue_MSG, to_s366, tokens_s366);
[L210]               assume revert || gas < 0;
[L1447]  RET         call success_s366 := transfer~address~uint256_DiceToken(this, msgsender_MSG, msgvalue_MSG, to_s366, tokens_s366);
[L1476]  RET         call CorralChoice_DiceToken(this);

Loop:
[L1476]        assume true;

[2020-11-24 18:28:34,772 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 18:28:34,772 INFO  L82        PathProgramCache]: Analyzing trace with hash -2044991293, now seen corresponding path program 1 times
[2020-11-24 18:28:34,772 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 18:28:34,778 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 18:28:34,820 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 18:28:34,821 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 18:28:34,821 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [9] imperfect sequences [] total 9
[2020-11-24 18:28:34,821 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 18:28:34,821 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 9 interpolants.
[2020-11-24 18:28:34,822 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=16, Invalid=56, Unknown=0, NotChecked=0, Total=72
[2020-11-24 18:28:34,822 INFO  L87              Difference]: Start difference. First operand 134 states and 135 transitions. cyclomatic complexity: 2 Second operand 9 states.
[2020-11-24 18:28:34,893 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 18:28:34,893 INFO  L93              Difference]: Finished difference Result 136 states and 136 transitions.
[2020-11-24 18:28:34,893 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 10 states. 
[2020-11-24 18:28:34,893 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 136 states and 136 transitions.
[2020-11-24 18:28:34,894 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 18:28:34,894 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 136 states to 129 states and 129 transitions.
[2020-11-24 18:28:34,894 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 129
[2020-11-24 18:28:34,894 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 129
[2020-11-24 18:28:34,894 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 129 states and 129 transitions.
[2020-11-24 18:28:34,894 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 18:28:34,894 INFO  L728         BuchiCegarLoop]: Abstraction has 129 states and 129 transitions.
[2020-11-24 18:28:34,895 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 129 states and 129 transitions.
[2020-11-24 18:28:34,895 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 129 to 129.
[2020-11-24 18:28:34,896 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 129 states.
[2020-11-24 18:28:34,896 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 129 states to 129 states and 129 transitions.
[2020-11-24 18:28:34,896 INFO  L751         BuchiCegarLoop]: Abstraction has 129 states and 129 transitions.
[2020-11-24 18:28:34,896 INFO  L631         BuchiCegarLoop]: Abstraction has 129 states and 129 transitions.
[2020-11-24 18:28:34,896 INFO  L445         BuchiCegarLoop]: ======== Iteration 7============
[2020-11-24 18:28:34,896 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 129 states and 129 transitions.
[2020-11-24 18:28:34,896 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 18:28:34,896 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 18:28:34,896 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 18:28:34,897 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 18:28:34,897 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L3]                 success_transfer_DiceToken0 := false;
[L3]                 call_transfer_DiceToken0 := false;
[L3]     CALL        call main();
[L3]                 havoc p1;
[L1471]              assume null == 0;
[L1472]  CALL        call this := FreshRefGenerator__success();
[L611]               havoc newRef;
[L612]               assume Alloc[newRef] == false;
[L613]               Alloc[newRef] := true;
[L614]               assume newRef != null;
[L1472]  RET         call this := FreshRefGenerator__success();
[L1473]              assume now >= 0;
[L1474]              assume DType[this] == DiceToken;
[L1475]              assume !revert && gas >= 0;
[L1476]  CALL        call CorralChoice_DiceToken(this);
[L1388]              havoc msgsender_MSG;
[L1389]              havoc msgvalue_MSG;
[L1390]              havoc choice;
[L1391]              havoc __ret_0_totalSupply;
[L1392]              havoc tokenOwner_s323;
[L1393]              havoc balance_s323;
[L1394]              havoc tokenOwner_s469;
[L1395]              havoc spender_s469;
[L1396]              havoc remaining_s469;
[L1397]              havoc to_s366;
[L1398]              havoc tokens_s366;
[L1399]              havoc success_s366;
[L1400]              havoc spender_s394;
[L1401]              havoc tokens_s394;
[L1402]              havoc success_s394;
[L1403]              havoc from_s453;
[L1404]              havoc to_s453;
[L1405]              havoc tokens_s453;
[L1406]              havoc success_s453;
[L1407]              havoc __ret_0_owner;
[L1408]              havoc __ret_0_newOwner;
[L1409]              havoc _newOwner_s205;
[L1410]              havoc __ret_0_symbol;
[L1411]              havoc __ret_0_name;
[L1412]              havoc __ret_0_decimals;
[L1413]              havoc __ret_0__totalSupply;
[L1414]              havoc tokenAddress_s496;
[L1415]              havoc tokens_s496;
[L1416]              havoc success_s496;
[L1417]              havoc tmpNow;
[L1418]              havoc gas;
[L1419]              assume gas > 4000000 && gas <= 8000000;
[L1420]              tmpNow := now;
[L1421]              havoc now;
[L1422]              assume now > tmpNow;
[L1423]              assume msgsender_MSG != null;
[L1424]  COND FALSE  !(choice == 6)
[L1430]  COND FALSE  !(choice == 5)
[L1436]  COND FALSE  !(choice == 4)
[L1442]  COND TRUE   choice == 3
[L1443]              gas := gas - 21000;
[L1444]  COND TRUE   gas >= 0
[L1445]              assume tokens_s366 >= 0 && tokens_s366 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1446]              assume msgvalue_MSG == 0;
[L1447]  CALL        call success_s366 := transfer~address~uint256_DiceToken(this, msgsender_MSG, msgvalue_MSG, to_s366, tokens_s366);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != to_s366) && msgsender_MSG != to_s366) && tokens_s366 <= balances_DiceToken[this][msgsender_MSG]) && balances_DiceToken[this][to_s366] + tokens_s366 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && tokens_s366 >= 0) && tokens_s366 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_DiceToken[this][to_s366] >= 0) && balances_DiceToken[this][to_s366] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_DiceToken[this][msgsender_MSG] >= 0) && balances_DiceToken[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_DiceToken0 := true;
[L3]                 call_transfer_DiceToken0 := false;
[L3]                 revert := revert_hold;
[L187]               havoc __exception;
[L188]               revert := false;
[L189]   COND TRUE   __exception
[L190]               __tmp__Balance := Balance;
[L191]               __tmp__DType := DType;
[L192]               __tmp__Alloc := Alloc;
[L193]               __tmp__balance_ADDR := balance_ADDR;
[L194]               __tmp__M_Ref_int := M_Ref_int;
[L195]               __tmp__sum_balances0 := sum_balances0;
[L196]               __tmp__alloc_allowed_DiceToken_lvl0 := alloc_allowed_DiceToken_lvl0;
[L197]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L198]               __tmp__sum_allowed1 := sum_allowed1;
[L199]               __tmp__Length := Length;
[L200]               __tmp__now := now;
[L201]               __tmp__owner_Owned := owner_Owned;
[L202]               __tmp__newOwner_Owned := newOwner_Owned;
[L203]               __tmp__symbol_DiceToken := symbol_DiceToken;
[L204]               __tmp__name_DiceToken := name_DiceToken;
[L205]               __tmp__decimals_DiceToken := decimals_DiceToken;
[L206]               __tmp___totalSupply_DiceToken := _totalSupply_DiceToken;
[L207]               __tmp__balances_DiceToken := balances_DiceToken;
[L208]               __tmp__allowed_DiceToken := allowed_DiceToken;
[L209]   CALL        call success_s366 := transfer~address~uint256_DiceToken__fail(this, msgsender_MSG, msgvalue_MSG, to_s366, tokens_s366);
[L685]   CALL        call __var_2 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __tmp__balances_DiceToken[this][msgsender_MSG], tokens_s366);
[L637]   COND FALSE  !(!(b_s45 <= a_s45))
[L641]               c_s45 := (a_s45 - b_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L685]   RET         call __var_2 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __tmp__balances_DiceToken[this][msgsender_MSG], tokens_s366);
[L686]   COND FALSE  !(revert)
[L689]               __tmp__sum_balances0[this] := __tmp__sum_balances0[this] - __tmp__balances_DiceToken[this][msgsender_MSG];
[L690]               __tmp__balances_DiceToken[this][msgsender_MSG] := __var_2;
[L691]               __tmp__sum_balances0[this] := __tmp__sum_balances0[this] + __tmp__balances_DiceToken[this][msgsender_MSG];
[L692]   CALL        call __var_3 := add~uint256~uint256_SafeMath__fail(this, this, 0, __tmp__balances_DiceToken[this][to_s366], tokens_s366);
[L619]               c_s23 := (a_s23 + b_s23) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L620]   COND FALSE  !(!(c_s23 >= a_s23))
[L692]   RET         call __var_3 := add~uint256~uint256_SafeMath__fail(this, this, 0, __tmp__balances_DiceToken[this][to_s366], tokens_s366);
[L693]   COND FALSE  !(revert)
[L696]               __tmp__sum_balances0[this] := __tmp__sum_balances0[this] - __tmp__balances_DiceToken[this][to_s366];
[L697]               __tmp__balances_DiceToken[this][to_s366] := __var_3;
[L698]               __tmp__sum_balances0[this] := __tmp__sum_balances0[this] + __tmp__balances_DiceToken[this][to_s366];
[L699]               success_s366 := true;
[L209]   RET         call success_s366 := transfer~address~uint256_DiceToken__fail(this, msgsender_MSG, msgvalue_MSG, to_s366, tokens_s366);
[L210]               assume revert || gas < 0;
[L1447]  RET         call success_s366 := transfer~address~uint256_DiceToken(this, msgsender_MSG, msgvalue_MSG, to_s366, tokens_s366);
[L1476]  RET         call CorralChoice_DiceToken(this);

Loop:
[L1476]        assume true;

[2020-11-24 18:28:34,898 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 18:28:34,899 INFO  L82        PathProgramCache]: Analyzing trace with hash -1861657736, now seen corresponding path program 1 times
[2020-11-24 18:28:34,899 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 18:28:34,904 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 18:28:34,916 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 18:28:34,917 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 18:28:34,917 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [6] imperfect sequences [] total 6
[2020-11-24 18:28:34,917 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 18:28:34,917 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 6 interpolants.
[2020-11-24 18:28:34,917 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=10, Invalid=20, Unknown=0, NotChecked=0, Total=30
[2020-11-24 18:28:34,917 INFO  L87              Difference]: Start difference. First operand 129 states and 129 transitions. cyclomatic complexity: 1 Second operand 6 states.
[2020-11-24 18:28:34,924 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 18:28:34,924 INFO  L93              Difference]: Finished difference Result 122 states and 121 transitions.
[2020-11-24 18:28:34,924 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 6 states. 
[2020-11-24 18:28:34,925 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 122 states and 121 transitions.
[2020-11-24 18:28:34,925 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-24 18:28:34,925 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 122 states to 0 states and 0 transitions.
[2020-11-24 18:28:34,925 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 0
[2020-11-24 18:28:34,925 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 0
[2020-11-24 18:28:34,925 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 0 states and 0 transitions.
[2020-11-24 18:28:34,925 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 18:28:34,925 INFO  L728         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-24 18:28:34,925 INFO  L751         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-24 18:28:34,925 INFO  L631         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-24 18:28:34,926 INFO  L445         BuchiCegarLoop]: ======== Iteration 8============
[2020-11-24 18:28:34,926 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 0 states and 0 transitions.
[2020-11-24 18:28:34,926 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-24 18:28:34,926 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is true
[2020-11-24 18:28:34,929 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 24.11 06:28:34 BasicIcfg
[2020-11-24 18:28:34,929 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-24 18:28:34,929 INFO  L168              Benchmark]: Toolchain (without parser) took 3244.20 ms. Allocated memory was 1.0 GB in the beginning and 1.3 GB in the end (delta: 265.3 MB). Free memory was 940.6 MB in the beginning and 1.2 GB in the end (delta: -270.6 MB). There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-24 18:28:34,930 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.16 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-24 18:28:34,930 INFO  L168              Benchmark]: Boogie Preprocessor took 73.59 ms. Allocated memory is still 1.0 GB. Free memory is still 940.6 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-24 18:28:34,930 INFO  L168              Benchmark]: UtopiaSpecLang took 53.57 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 935.2 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-24 18:28:34,930 INFO  L168              Benchmark]: Boogie Printer took 14.36 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 929.8 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-24 18:28:34,931 INFO  L168              Benchmark]: RCFGBuilder took 462.80 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 892.2 MB in the end (delta: 37.6 MB). Peak memory consumption was 37.6 MB. Max. memory is 15.3 GB.
[2020-11-24 18:28:34,931 INFO  L168              Benchmark]: UtopiaLTL2Aut took 38.43 ms. Allocated memory is still 1.0 GB. Free memory was 892.2 MB in the beginning and 883.3 MB in the end (delta: 8.9 MB). Peak memory consumption was 8.9 MB. Max. memory is 15.3 GB.
[2020-11-24 18:28:34,931 INFO  L168              Benchmark]: BÃ¼chi Program Product took 853.78 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 59.8 MB). Free memory was 883.3 MB in the beginning and 1.0 GB in the end (delta: -135.4 MB). Peak memory consumption was 164.5 MB. Max. memory is 15.3 GB.
[2020-11-24 18:28:34,932 INFO  L168              Benchmark]: BlockEncodingV2 took 63.49 ms. Allocated memory is still 1.1 GB. Free memory was 1.0 GB in the beginning and 986.3 MB in the end (delta: 32.5 MB). Peak memory consumption was 32.5 MB. Max. memory is 15.3 GB.
[2020-11-24 18:28:34,932 INFO  L168              Benchmark]: BuchiAutomizer took 1681.11 ms. Allocated memory was 1.1 GB in the beginning and 1.3 GB in the end (delta: 205.5 MB). Free memory was 986.3 MB in the beginning and 1.2 GB in the end (delta: -224.9 MB). There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-24 18:28:34,934 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    1214 locations, 2019 edges
  - StatisticsResult: Encoded RCFG
    1188 locations, 1958 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.16 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 73.59 ms. Allocated memory is still 1.0 GB. Free memory is still 940.6 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 53.57 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 935.2 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 14.36 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 929.8 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * RCFGBuilder took 462.80 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 892.2 MB in the end (delta: 37.6 MB). Peak memory consumption was 37.6 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 38.43 ms. Allocated memory is still 1.0 GB. Free memory was 892.2 MB in the beginning and 883.3 MB in the end (delta: 8.9 MB). Peak memory consumption was 8.9 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 853.78 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 59.8 MB). Free memory was 883.3 MB in the beginning and 1.0 GB in the end (delta: -135.4 MB). Peak memory consumption was 164.5 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 63.49 ms. Allocated memory is still 1.1 GB. Free memory was 1.0 GB in the beginning and 986.3 MB in the end (delta: 32.5 MB). Peak memory consumption was 32.5 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 1681.11 ms. Allocated memory was 1.1 GB in the beginning and 1.3 GB in the end (delta: 205.5 MB). Free memory was 986.3 MB in the beginning and 1.2 GB in the end (delta: -224.9 MB). There was no memory consumed. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    523 locations, 626 edges
  - StatisticsResult: BuchiProgram size
    1214 locations, 2019 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 7 terminating modules (7 trivial, 0 deterministic, 0 nondeterministic). 7 modules have a trivial ranking function, the largest among these consists of 17 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 1.6s and 8 iterations.  TraceHistogramMax:1. Analysis of lassos took 0.7s. Construction of modules took 0.3s. BÃ¼chi inclusion checks took 0.3s. Highest rank in rank-based complementation 0. Minimization of det autom 7. Minimization of nondet autom 0. Automata minimization 0.0s AutomataMinimizationTime, 6 MinimizatonAttempts, 35 StatesRemovedByMinimization, 3 NontrivialMinimizations. Non-live state removal took 0.0s Buchi closure took 0.0s. Biggest automaton had 173 states and ocurred in iteration 2.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 1491 SDtfs, 1473 SDslu, 2607 SDs, 0 SdLazy, 1283 SolverSat, 489 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 0.3s Time	LassoAnalysisResults: nont0 unkn0 SFLI0 SFLT0 conc0 concLT0 SILN0 SILU7 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - AllSpecificationsHoldResult: All specifications hold
    Buchi Automizer proved that the LTL property ! ( ( []( (call_transfer_DiceToken0) ==> ( <>(success_transfer_DiceToken0) ) ) )) holds
RESULT: Ultimate proved your program to be correct!
Received shutdown request...
