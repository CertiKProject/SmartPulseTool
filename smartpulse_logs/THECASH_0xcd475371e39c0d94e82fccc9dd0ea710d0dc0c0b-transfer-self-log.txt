This is Ultimate 0.1.24-f1553f5-m
[2020-11-24 17:34:39,226 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-24 17:34:39,227 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-24 17:34:39,242 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-24 17:34:39,242 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-24 17:34:39,242 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-24 17:34:39,243 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-24 17:34:39,245 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-24 17:34:39,247 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-24 17:34:39,248 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-24 17:34:39,248 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-24 17:34:39,249 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-24 17:34:39,249 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-24 17:34:39,250 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-24 17:34:39,251 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-24 17:34:39,251 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-24 17:34:39,252 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-24 17:34:39,253 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-24 17:34:39,255 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-24 17:34:39,256 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-24 17:34:39,257 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-24 17:34:39,258 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-24 17:34:39,260 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-24 17:34:39,260 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-24 17:34:39,260 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-24 17:34:39,261 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-24 17:34:39,261 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-24 17:34:39,262 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-24 17:34:39,262 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-24 17:34:39,262 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-24 17:34:39,262 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-24 17:34:39,263 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-24 17:34:39,263 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-24 17:34:39,264 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-24 17:34:39,265 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-24 17:34:39,265 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-24 17:34:39,265 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-24 17:34:39,265 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-24 17:34:39,266 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-24 17:34:39,266 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-24 17:34:39,267 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-24 17:34:39,267 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-24 17:34:39,275 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-24 17:34:39,275 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-24 17:34:39,276 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-24 17:34:39,276 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-24 17:34:39,276 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-24 17:34:39,276 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-24 17:34:39,276 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-24 17:34:39,276 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-24 17:34:39,277 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-24 17:34:39,277 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-24 17:34:39,277 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-24 17:34:39,277 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-24 17:34:39,277 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-24 17:34:39,277 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-24 17:34:39,277 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-24 17:34:39,277 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-24 17:34:39,277 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-24 17:34:39,277 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-24 17:34:39,278 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-24 17:34:39,278 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-24 17:34:39,278 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-24 17:34:39,278 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-24 17:34:39,278 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-24 17:34:39,278 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-24 17:34:39,278 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-24 17:34:39,278 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-24 17:34:39,302 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-24 17:34:39,314 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-24 17:34:39,316 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-24 17:34:39,318 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-24 17:34:39,318 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-24 17:34:39,318 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/THECASH_0xcd475371e39c0d94e82fccc9dd0ea710d0dc0c0b_transfer-self.bpl
[2020-11-24 17:34:39,319 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/THECASH_0xcd475371e39c0d94e82fccc9dd0ea710d0dc0c0b_transfer-self.bpl'
[2020-11-24 17:34:39,399 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-24 17:34:39,400 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-24 17:34:39,400 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-24 17:34:39,401 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-24 17:34:39,401 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-24 17:34:39,417 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "THECASH_0xcd475371e39c0d94e82fccc9dd0ea710d0dc0c0b_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 05:34:39" (1/1) ...
[2020-11-24 17:34:39,419 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "THECASH_0xcd475371e39c0d94e82fccc9dd0ea710d0dc0c0b_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 05:34:39" (1/1) ...
[2020-11-24 17:34:39,449 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "THECASH_0xcd475371e39c0d94e82fccc9dd0ea710d0dc0c0b_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 05:34:39" (1/1) ...
[2020-11-24 17:34:39,450 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "THECASH_0xcd475371e39c0d94e82fccc9dd0ea710d0dc0c0b_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 05:34:39" (1/1) ...
[2020-11-24 17:34:39,469 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "THECASH_0xcd475371e39c0d94e82fccc9dd0ea710d0dc0c0b_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 05:34:39" (1/1) ...
[2020-11-24 17:34:39,481 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "THECASH_0xcd475371e39c0d94e82fccc9dd0ea710d0dc0c0b_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 05:34:39" (1/1) ...
[2020-11-24 17:34:39,490 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "THECASH_0xcd475371e39c0d94e82fccc9dd0ea710d0dc0c0b_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 05:34:39" (1/1) ...
[2020-11-24 17:34:39,500 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-24 17:34:39,501 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-24 17:34:39,501 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-24 17:34:39,503 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-24 17:34:39,507 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "THECASH_0xcd475371e39c0d94e82fccc9dd0ea710d0dc0c0b_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 05:34:39" (1/1) ...
[2020-11-24 17:34:39,529 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(BaseToken.transfer(to, value), msg.sender == to && value <= balances_BaseToken[this][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_BaseToken[this][to] >= 0 && balances_BaseToken[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_BaseToken[this][msg.sender] >= 0 &&  balances_BaseToken[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(BaseToken.transfer(to, value), return == true && totalSupply_BaseToken[this] == old(totalSupply_BaseToken[this]) && balances_BaseToken[this] == old(balances_BaseToken[this]) && approvals_BaseToken[this] == old(approvals_BaseToken[this]) && _minters_MinterRole[this] == old(_minters_MinterRole[this]) && M_Ref_Ref[lockup_BaseToken[this]] == old(M_Ref_Ref[lockup_BaseToken[this]]) && lockedAddresses_BaseToken[this] == old(lockedAddresses_BaseToken[this]) && stopped_Ownable[this] == old(stopped_Ownable[this]) && _owner_Ownable[this] == old(_owner_Ownable[this]) && _admin_Ownable[this] == old(_admin_Ownable[this]) && proposedOwner_Ownable[this] == old(proposedOwner_Ownable[this]) && _allowed_Ownable[this] == old(_allowed_Ownable[this]))))
[2020-11-24 17:34:39,534 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(BaseToken.transfer(to, value), msg.sender == to && value <= balances_BaseToken[this][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_BaseToken[this][to] >= 0 && balances_BaseToken[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_BaseToken[this][msg.sender] >= 0 &&  balances_BaseToken[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(BaseToken.transfer(to, value), return == true && totalSupply_BaseToken[this] == old(totalSupply_BaseToken[this]) && balances_BaseToken[this] == old(balances_BaseToken[this]) && approvals_BaseToken[this] == old(approvals_BaseToken[this]) && _minters_MinterRole[this] == old(_minters_MinterRole[this]) && M_Ref_Ref[lockup_BaseToken[this]] == old(M_Ref_Ref[lockup_BaseToken[this]]) && lockedAddresses_BaseToken[this] == old(lockedAddresses_BaseToken[this]) && stopped_Ownable[this] == old(stopped_Ownable[this]) && _owner_Ownable[this] == old(_owner_Ownable[this]) && _admin_Ownable[this] == old(_admin_Ownable[this]) && proposedOwner_Ownable[this] == old(proposedOwner_Ownable[this]) && _allowed_Ownable[this] == old(_allowed_Ownable[this]))))
[2020-11-24 17:34:39,542 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(BaseToken.transfer(to, value), msg.sender == to && value <= balances_BaseToken[this][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_BaseToken[this][to] >= 0 && balances_BaseToken[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_BaseToken[this][msg.sender] >= 0 &&  balances_BaseToken[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(BaseToken.transfer(to, value), return == true && totalSupply_BaseToken[this] == old(totalSupply_BaseToken[this]) && balances_BaseToken[this] == old(balances_BaseToken[this]) && approvals_BaseToken[this] == old(approvals_BaseToken[this]) && _minters_MinterRole[this] == old(_minters_MinterRole[this]) && M_Ref_Ref[lockup_BaseToken[this]] == old(M_Ref_Ref[lockup_BaseToken[this]]) && lockedAddresses_BaseToken[this] == old(lockedAddresses_BaseToken[this]) && stopped_Ownable[this] == old(stopped_Ownable[this]) && _owner_Ownable[this] == old(_owner_Ownable[this]) && _admin_Ownable[this] == old(_admin_Ownable[this]) && proposedOwner_Ownable[this] == old(proposedOwner_Ownable[this]) && _allowed_Ownable[this] == old(_allowed_Ownable[this]))))
[2020-11-24 17:34:39,548 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( msg.sender==_to_s719 && _value_s719<=balances_BaseToken[this][msg.sender] ) && _value_s719>=0 ) && _value_s719<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && balances_BaseToken[this][_to_s719]>=0 ) && balances_BaseToken[this][_to_s719]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && balances_BaseToken[this][msg.sender]>=0 ) && balances_BaseToken[this][msg.sender]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_BaseToken>],IdentifierExpression[_to_s719,<IMPLEMENTATION_INPARAM,transfer~address~uint256_BaseToken>]],BinaryExpression[COMPLEQ,IdentifierExpression[_value_s719,<IMPLEMENTATION_INPARAM,transfer~address~uint256_BaseToken>],ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_BaseToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_BaseToken>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_BaseToken>]]]]],BinaryExpression[COMPGEQ,IdentifierExpression[_value_s719,<IMPLEMENTATION_INPARAM,transfer~address~uint256_BaseToken>],IntegerLiteral[0]]],BinaryExpression[COMPLT,IdentifierExpression[_value_s719,<IMPLEMENTATION_INPARAM,transfer~address~uint256_BaseToken>],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_BaseToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_BaseToken>]]],[IdentifierExpression[_to_s719,<IMPLEMENTATION_INPARAM,transfer~address~uint256_BaseToken>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_BaseToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_BaseToken>]]],[IdentifierExpression[_to_s719,<IMPLEMENTATION_INPARAM,transfer~address~uint256_BaseToken>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_BaseToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_BaseToken>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_BaseToken>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_BaseToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_BaseToken>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_BaseToken>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]]
[2020-11-24 17:34:39,551 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( ( ( ( __ret_0_==true && totalSupply_BaseToken[this]==( old(totalSupply_BaseToken[this]) ) ) && balances_BaseToken[this]==( old(balances_BaseToken[this]) ) ) && approvals_BaseToken[this]==( old(approvals_BaseToken[this]) ) ) && _minters_MinterRole[this]==( old(_minters_MinterRole[this]) ) ) && M_Ref_Ref[lockup_BaseToken[this]]==( old(M_Ref_Ref[lockup_BaseToken[this]]) ) ) && lockedAddresses_BaseToken[this]==( old(lockedAddresses_BaseToken[this]) ) ) && stopped_Ownable[this]==( old(stopped_Ownable[this]) ) ) && _owner_Ownable[this]==( old(_owner_Ownable[this]) ) ) && _admin_Ownable[this]==( old(_admin_Ownable[this]) ) ) && proposedOwner_Ownable[this]==( old(proposedOwner_Ownable[this]) ) ) && _allowed_Ownable[this]==( old(_allowed_Ownable[this]) ) ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[__ret_0_,<IMPLEMENTATION_OUTPARAM,transfer~address~uint256_BaseToken>],BooleanLiteral[true]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[totalSupply_BaseToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_BaseToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[totalSupply_BaseToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_BaseToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[balances_BaseToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_BaseToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[balances_BaseToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_BaseToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[approvals_BaseToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_BaseToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[approvals_BaseToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_BaseToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_minters_MinterRole,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_BaseToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_minters_MinterRole,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_BaseToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[M_Ref_Ref,GLOBAL],[ArrayAccessExpression[IdentifierExpression[lockup_BaseToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_BaseToken>]]]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[M_Ref_Ref,GLOBAL],[ArrayAccessExpression[IdentifierExpression[lockup_BaseToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_BaseToken>]]]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[lockedAddresses_BaseToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_BaseToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[lockedAddresses_BaseToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_BaseToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[stopped_Ownable,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_BaseToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[stopped_Ownable,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_BaseToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_owner_Ownable,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_BaseToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_owner_Ownable,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_BaseToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_admin_Ownable,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_BaseToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_admin_Ownable,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_BaseToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[proposedOwner_Ownable,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_BaseToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[proposedOwner_Ownable,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_BaseToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_allowed_Ownable,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_BaseToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_allowed_Ownable,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_BaseToken>]]]]]]
[2020-11-24 17:34:39,556 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(BaseToken.transfer(to, value), msg.sender == to && value <= balances_BaseToken[this][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_BaseToken[this][to] >= 0 && balances_BaseToken[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_BaseToken[this][msg.sender] >= 0 &&  balances_BaseToken[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(BaseToken.transfer(to, value), return == true && totalSupply_BaseToken[this] == old(totalSupply_BaseToken[this]) && balances_BaseToken[this] == old(balances_BaseToken[this]) && approvals_BaseToken[this] == old(approvals_BaseToken[this]) && _minters_MinterRole[this] == old(_minters_MinterRole[this]) && M_Ref_Ref[lockup_BaseToken[this]] == old(M_Ref_Ref[lockup_BaseToken[this]]) && lockedAddresses_BaseToken[this] == old(lockedAddresses_BaseToken[this]) && stopped_Ownable[this] == old(stopped_Ownable[this]) && _owner_Ownable[this] == old(_owner_Ownable[this]) && _admin_Ownable[this] == old(_admin_Ownable[this]) && proposedOwner_Ownable[this] == old(proposedOwner_Ownable[this]) && _allowed_Ownable[this] == old(_allowed_Ownable[this]))))
[2020-11-24 17:34:39,557 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_transfer_BaseToken0) ==> ( <>AP(success_transfer_BaseToken0) ) ) )
Executed UtopiaSpecLang
[2020-11-24 17:34:39,566 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 05:34:39 PropertyContainer
[2020-11-24 17:34:39,566 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-24 17:34:39,566 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-24 17:34:39,566 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-24 17:34:39,566 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-24 17:34:39,567 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "THECASH_0xcd475371e39c0d94e82fccc9dd0ea710d0dc0c0b_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 05:34:39" (1/2) ...
[2020-11-24 17:34:39,568 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-24 17:34:39,568 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-24 17:34:39,582 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 05:34:39" (2/2) ...
[2020-11-24 17:34:39,583 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-24 17:34:39,583 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-24 17:34:39,583 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-24 17:34:39,583 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-24 17:34:39,584 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "THECASH_0xcd475371e39c0d94e82fccc9dd0ea710d0dc0c0b_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 05:34:39" (1/2) ...
[2020-11-24 17:34:39,636 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-24 17:34:39,636 INFO  L130     BoogieDeclarations]: Found specification of procedure BaseToken.Lock_ctor__success
[2020-11-24 17:34:39,637 INFO  L130     BoogieDeclarations]: Found specification of procedure Roles.Role_ctor__success
[2020-11-24 17:34:39,637 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__success
[2020-11-24 17:34:39,637 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__success
[2020-11-24 17:34:39,637 INFO  L130     BoogieDeclarations]: Found specification of procedure isOwner_Ownable
[2020-11-24 17:34:39,637 INFO  L138     BoogieDeclarations]: Found implementation of procedure isOwner_Ownable
[2020-11-24 17:34:39,637 INFO  L130     BoogieDeclarations]: Found specification of procedure isAllowed_Ownable
[2020-11-24 17:34:39,637 INFO  L138     BoogieDeclarations]: Found implementation of procedure isAllowed_Ownable
[2020-11-24 17:34:39,637 INFO  L130     BoogieDeclarations]: Found specification of procedure isStopped_Ownable
[2020-11-24 17:34:39,637 INFO  L138     BoogieDeclarations]: Found implementation of procedure isStopped_Ownable
[2020-11-24 17:34:39,637 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_BaseToken
[2020-11-24 17:34:39,637 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_BaseToken
[2020-11-24 17:34:39,638 INFO  L130     BoogieDeclarations]: Found specification of procedure lockedBalanceOf~address_BaseToken
[2020-11-24 17:34:39,638 INFO  L138     BoogieDeclarations]: Found implementation of procedure lockedBalanceOf~address_BaseToken
[2020-11-24 17:34:39,638 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_BaseToken
[2020-11-24 17:34:39,638 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_BaseToken
[2020-11-24 17:34:39,638 INFO  L130     BoogieDeclarations]: Found specification of procedure isLocked~address~uint256_BaseToken
[2020-11-24 17:34:39,638 INFO  L138     BoogieDeclarations]: Found implementation of procedure isLocked~address~uint256_BaseToken
[2020-11-24 17:34:39,638 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_BaseToken
[2020-11-24 17:34:39,638 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_BaseToken
[2020-11-24 17:34:39,638 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_BaseToken
[2020-11-24 17:34:39,638 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_BaseToken
[2020-11-24 17:34:39,638 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_BaseToken
[2020-11-24 17:34:39,638 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_BaseToken
[2020-11-24 17:34:39,639 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_BaseToken__success
[2020-11-24 17:34:39,639 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_BaseToken
[2020-11-24 17:34:39,639 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_BaseToken
[2020-11-24 17:34:39,639 INFO  L130     BoogieDeclarations]: Found specification of procedure add~Role~address_Roles__success
[2020-11-24 17:34:39,639 INFO  L130     BoogieDeclarations]: Found specification of procedure has~Role~address_Roles__success
[2020-11-24 17:34:39,639 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-24 17:34:39,639 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-24 17:34:39,639 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-24 17:34:39,639 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__success
[2020-11-24 17:34:39,639 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyAllowed_pre__success
[2020-11-24 17:34:39,639 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyWhenNotStopped_pre__success
[2020-11-24 17:34:39,640 INFO  L130     BoogieDeclarations]: Found specification of procedure transferParamsValidation_pre__success
[2020-11-24 17:34:39,640 INFO  L130     BoogieDeclarations]: Found specification of procedure canTransfer_pre__success
[2020-11-24 17:34:39,640 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyMinter_pre__success
[2020-11-24 17:34:39,640 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_SafeMath
[2020-11-24 17:34:39,640 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_SafeMath
[2020-11-24 17:34:39,640 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_Ownable
[2020-11-24 17:34:39,640 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_Ownable
[2020-11-24 17:34:39,640 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_BaseToken
[2020-11-24 17:34:39,640 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_BaseToken
[2020-11-24 17:34:39,640 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_Roles
[2020-11-24 17:34:39,641 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_Roles
[2020-11-24 17:34:39,641 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_MinterRole
[2020-11-24 17:34:39,641 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_MinterRole
[2020-11-24 17:34:39,641 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20Mintable
[2020-11-24 17:34:39,641 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20Mintable
[2020-11-24 17:34:39,641 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_THECASH
[2020-11-24 17:34:39,641 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-24 17:34:39,641 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-24 17:34:39,641 INFO  L130     BoogieDeclarations]: Found specification of procedure BaseToken.Lock_ctor__fail
[2020-11-24 17:34:39,641 INFO  L130     BoogieDeclarations]: Found specification of procedure Roles.Role_ctor__fail
[2020-11-24 17:34:39,642 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-24 17:34:39,642 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__fail
[2020-11-24 17:34:39,642 INFO  L130     BoogieDeclarations]: Found specification of procedure isOwner_Ownable__success
[2020-11-24 17:34:39,642 INFO  L130     BoogieDeclarations]: Found specification of procedure isOwner_Ownable__fail
[2020-11-24 17:34:39,642 INFO  L130     BoogieDeclarations]: Found specification of procedure isAllowed_Ownable__success
[2020-11-24 17:34:39,642 INFO  L130     BoogieDeclarations]: Found specification of procedure isAllowed_Ownable__fail
[2020-11-24 17:34:39,642 INFO  L130     BoogieDeclarations]: Found specification of procedure isStopped_Ownable__success
[2020-11-24 17:34:39,642 INFO  L130     BoogieDeclarations]: Found specification of procedure isStopped_Ownable__fail
[2020-11-24 17:34:39,642 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_BaseToken__success
[2020-11-24 17:34:39,642 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_BaseToken__fail
[2020-11-24 17:34:39,643 INFO  L130     BoogieDeclarations]: Found specification of procedure lockedBalanceOf~address_BaseToken__success
[2020-11-24 17:34:39,643 INFO  L130     BoogieDeclarations]: Found specification of procedure lockedBalanceOf~address_BaseToken__fail
[2020-11-24 17:34:39,643 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_BaseToken__success
[2020-11-24 17:34:39,643 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_BaseToken__fail
[2020-11-24 17:34:39,643 INFO  L130     BoogieDeclarations]: Found specification of procedure isLocked~address~uint256_BaseToken__success
[2020-11-24 17:34:39,643 INFO  L130     BoogieDeclarations]: Found specification of procedure isLocked~address~uint256_BaseToken__fail
[2020-11-24 17:34:39,643 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_BaseToken__success
[2020-11-24 17:34:39,643 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_BaseToken__fail
[2020-11-24 17:34:39,643 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_BaseToken__success
[2020-11-24 17:34:39,643 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_BaseToken__fail
[2020-11-24 17:34:39,644 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_BaseToken__success
[2020-11-24 17:34:39,644 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_BaseToken__fail
[2020-11-24 17:34:39,644 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_BaseToken__fail
[2020-11-24 17:34:39,644 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_BaseToken__success
[2020-11-24 17:34:39,644 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_BaseToken__fail
[2020-11-24 17:34:39,644 INFO  L130     BoogieDeclarations]: Found specification of procedure add~Role~address_Roles__fail
[2020-11-24 17:34:39,644 INFO  L130     BoogieDeclarations]: Found specification of procedure has~Role~address_Roles__fail
[2020-11-24 17:34:39,644 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-24 17:34:39,644 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-24 17:34:39,645 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-24 17:34:39,645 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__fail
[2020-11-24 17:34:39,645 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyAllowed_pre__fail
[2020-11-24 17:34:39,645 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyWhenNotStopped_pre__fail
[2020-11-24 17:34:39,645 INFO  L130     BoogieDeclarations]: Found specification of procedure transferParamsValidation_pre__fail
[2020-11-24 17:34:39,645 INFO  L130     BoogieDeclarations]: Found specification of procedure canTransfer_pre__fail
[2020-11-24 17:34:39,645 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyMinter_pre__fail
[2020-11-24 17:34:39,645 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-24 17:34:39,645 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-24 17:34:39,645 INFO  L138     BoogieDeclarations]: Found implementation of procedure BaseToken.Lock_ctor__fail
[2020-11-24 17:34:39,646 INFO  L138     BoogieDeclarations]: Found implementation of procedure BaseToken.Lock_ctor__success
[2020-11-24 17:34:39,646 INFO  L138     BoogieDeclarations]: Found implementation of procedure Roles.Role_ctor__fail
[2020-11-24 17:34:39,646 INFO  L138     BoogieDeclarations]: Found implementation of procedure Roles.Role_ctor__success
[2020-11-24 17:34:39,646 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-24 17:34:39,646 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__success
[2020-11-24 17:34:39,646 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__fail
[2020-11-24 17:34:39,646 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__success
[2020-11-24 17:34:39,646 INFO  L138     BoogieDeclarations]: Found implementation of procedure isOwner_Ownable__fail
[2020-11-24 17:34:39,646 INFO  L138     BoogieDeclarations]: Found implementation of procedure isOwner_Ownable__success
[2020-11-24 17:34:39,646 INFO  L138     BoogieDeclarations]: Found implementation of procedure isAllowed_Ownable__fail
[2020-11-24 17:34:39,647 INFO  L138     BoogieDeclarations]: Found implementation of procedure isAllowed_Ownable__success
[2020-11-24 17:34:39,647 INFO  L138     BoogieDeclarations]: Found implementation of procedure isStopped_Ownable__fail
[2020-11-24 17:34:39,647 INFO  L138     BoogieDeclarations]: Found implementation of procedure isStopped_Ownable__success
[2020-11-24 17:34:39,647 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_BaseToken__fail
[2020-11-24 17:34:39,647 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_BaseToken__success
[2020-11-24 17:34:39,647 INFO  L138     BoogieDeclarations]: Found implementation of procedure lockedBalanceOf~address_BaseToken__fail
[2020-11-24 17:34:39,647 INFO  L138     BoogieDeclarations]: Found implementation of procedure lockedBalanceOf~address_BaseToken__success
[2020-11-24 17:34:39,647 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_BaseToken__fail
[2020-11-24 17:34:39,647 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_BaseToken__success
[2020-11-24 17:34:39,648 INFO  L138     BoogieDeclarations]: Found implementation of procedure isLocked~address~uint256_BaseToken__fail
[2020-11-24 17:34:39,648 INFO  L138     BoogieDeclarations]: Found implementation of procedure isLocked~address~uint256_BaseToken__success
[2020-11-24 17:34:39,648 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_BaseToken__fail
[2020-11-24 17:34:39,648 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_BaseToken__success
[2020-11-24 17:34:39,648 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_BaseToken__fail
[2020-11-24 17:34:39,648 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_BaseToken__success
[2020-11-24 17:34:39,648 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_BaseToken__fail
[2020-11-24 17:34:39,648 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_BaseToken__success
[2020-11-24 17:34:39,648 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_BaseToken__fail
[2020-11-24 17:34:39,648 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_BaseToken__success
[2020-11-24 17:34:39,649 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_BaseToken__fail
[2020-11-24 17:34:39,649 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_BaseToken__success
[2020-11-24 17:34:39,649 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~Role~address_Roles__fail
[2020-11-24 17:34:39,649 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~Role~address_Roles__success
[2020-11-24 17:34:39,649 INFO  L138     BoogieDeclarations]: Found implementation of procedure has~Role~address_Roles__fail
[2020-11-24 17:34:39,649 INFO  L138     BoogieDeclarations]: Found implementation of procedure has~Role~address_Roles__success
[2020-11-24 17:34:39,649 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-24 17:34:39,649 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-24 17:34:39,649 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-24 17:34:39,649 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-24 17:34:39,649 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-24 17:34:39,650 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-24 17:34:39,650 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__fail
[2020-11-24 17:34:39,650 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__success
[2020-11-24 17:34:39,650 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyAllowed_pre__fail
[2020-11-24 17:34:39,650 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyAllowed_pre__success
[2020-11-24 17:34:39,650 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyWhenNotStopped_pre__fail
[2020-11-24 17:34:39,650 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyWhenNotStopped_pre__success
[2020-11-24 17:34:39,650 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferParamsValidation_pre__fail
[2020-11-24 17:34:39,650 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferParamsValidation_pre__success
[2020-11-24 17:34:39,651 INFO  L138     BoogieDeclarations]: Found implementation of procedure canTransfer_pre__fail
[2020-11-24 17:34:39,651 INFO  L138     BoogieDeclarations]: Found implementation of procedure canTransfer_pre__success
[2020-11-24 17:34:39,651 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyMinter_pre__fail
[2020-11-24 17:34:39,651 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyMinter_pre__success
[2020-11-24 17:34:39,651 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_SafeMath
[2020-11-24 17:34:39,651 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_SafeMath
[2020-11-24 17:34:39,651 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_Ownable
[2020-11-24 17:34:39,651 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_Ownable
[2020-11-24 17:34:39,651 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_BaseToken
[2020-11-24 17:34:39,651 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_BaseToken
[2020-11-24 17:34:39,652 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_Roles
[2020-11-24 17:34:39,652 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_Roles
[2020-11-24 17:34:39,652 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_MinterRole
[2020-11-24 17:34:39,652 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_MinterRole
[2020-11-24 17:34:39,652 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20Mintable
[2020-11-24 17:34:39,652 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20Mintable
[2020-11-24 17:34:39,652 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_THECASH
[2020-11-24 17:34:39,652 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-24 17:34:39,652 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-24 17:34:39,653 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-24 17:34:40,119 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 17:34:40,119 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 17:34:40,120 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 17:34:40,453 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-24 17:34:40,454 INFO  L286             CfgBuilder]: Removed 7 assue(true) statements.
[2020-11-24 17:34:40,456 INFO  L202        PluginConnector]: Adding new model THECASH_0xcd475371e39c0d94e82fccc9dd0ea710d0dc0c0b_transfer-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 05:34:40 BoogieIcfgContainer
[2020-11-24 17:34:40,456 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 05:34:39" (2/2) ...
[2020-11-24 17:34:40,456 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-24 17:34:40,456 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@67b9d73b and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 05:34:40, skipping insertion in model container
[2020-11-24 17:34:40,456 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-24 17:34:40,457 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-24 17:34:40,457 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-24 17:34:40,458 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-24 17:34:40,458 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "THECASH_0xcd475371e39c0d94e82fccc9dd0ea710d0dc0c0b_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 05:34:39" (1/3) ...
[2020-11-24 17:34:40,459 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@5c1ece50 and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 05:34:40, skipping insertion in model container
[2020-11-24 17:34:40,459 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 05:34:39" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-24 17:34:40,498 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 05:34:40 NWAContainer
[2020-11-24 17:34:40,498 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-24 17:34:40,499 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-24 17:34:40,499 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-24 17:34:40,499 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-24 17:34:40,500 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "THECASH_0xcd475371e39c0d94e82fccc9dd0ea710d0dc0c0b_transfer-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 05:34:40" (3/4) ...
[2020-11-24 17:34:40,501 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@9ef8a0d and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 05:34:40, skipping insertion in model container
[2020-11-24 17:34:40,501 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 05:34:40" (4/4) ...
[2020-11-24 17:34:40,504 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-24 17:34:40,508 INFO  L110   BuchiProductObserver]: Initial RCFG 1659 locations, 2315 edges
[2020-11-24 17:34:40,509 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-24 17:34:40,521 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-24 17:34:41,878 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-24 17:34:41,883 INFO  L110   BuchiProductObserver]: BuchiProgram size 4064 locations, 7507 edges
[2020-11-24 17:34:41,883 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 05:34:41 BoogieIcfgContainer
[2020-11-24 17:34:41,883 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-24 17:34:41,884 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-24 17:34:41,884 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-24 17:34:41,885 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-24 17:34:41,885 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 05:34:41" (1/1) ...
[2020-11-24 17:34:41,973 INFO  L313           BlockEncoder]: Initial Icfg 4064 locations, 7507 edges
[2020-11-24 17:34:41,974 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-24 17:34:41,974 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-24 17:34:41,974 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-24 17:34:41,975 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-24 17:34:41,984 INFO  L70    emoveInfeasibleEdges]: Removed 102 edges and 17 locations because of local infeasibility
[2020-11-24 17:34:41,990 INFO  L70        RemoveSinkStates]: Removed 50 edges and 33 locations by removing sink states
[2020-11-24 17:34:41,999 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-24 17:34:42,002 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-24 17:34:42,006 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-24 17:34:42,006 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-24 17:34:42,011 INFO  L313           BlockEncoder]: Encoded RCFG 3996 locations, 7329 edges
[2020-11-24 17:34:42,011 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 24.11 05:34:42 BasicIcfg
[2020-11-24 17:34:42,011 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-24 17:34:42,011 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-24 17:34:42,011 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-24 17:34:42,013 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-24 17:34:42,013 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 17:34:42,013 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "THECASH_0xcd475371e39c0d94e82fccc9dd0ea710d0dc0c0b_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 05:34:39" (1/6) ...
[2020-11-24 17:34:42,015 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@57daa751 and model type THECASH_0xcd475371e39c0d94e82fccc9dd0ea710d0dc0c0b_transfer-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 24.11 05:34:42, skipping insertion in model container
[2020-11-24 17:34:42,015 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 17:34:42,016 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 05:34:39" (2/6) ...
[2020-11-24 17:34:42,016 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@57daa751 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 24.11 05:34:42, skipping insertion in model container
[2020-11-24 17:34:42,016 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 17:34:42,016 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "THECASH_0xcd475371e39c0d94e82fccc9dd0ea710d0dc0c0b_transfer-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 05:34:40" (3/6) ...
[2020-11-24 17:34:42,016 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@57daa751 and model type THECASH_0xcd475371e39c0d94e82fccc9dd0ea710d0dc0c0b_transfer-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 24.11 05:34:42, skipping insertion in model container
[2020-11-24 17:34:42,016 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 17:34:42,016 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 05:34:40" (4/6) ...
[2020-11-24 17:34:42,017 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@57daa751 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 24.11 05:34:42, skipping insertion in model container
[2020-11-24 17:34:42,017 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 17:34:42,017 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 05:34:41" (5/6) ...
[2020-11-24 17:34:42,017 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@57daa751 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 24.11 05:34:42, skipping insertion in model container
[2020-11-24 17:34:42,017 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 17:34:42,017 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 24.11 05:34:42" (6/6) ...
[2020-11-24 17:34:42,018 INFO  L404   chiAutomizerObserver]: Analyzing ICFG THECASH_0xcd475371e39c0d94e82fccc9dd0ea710d0dc0c0b_transfer-self.bpl_BEv2
[2020-11-24 17:34:42,056 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-24 17:34:42,057 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-24 17:34:42,057 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-24 17:34:42,057 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-24 17:34:42,057 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-24 17:34:42,057 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-24 17:34:42,057 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-24 17:34:42,057 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-24 17:34:42,057 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-24 17:34:42,089 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3996 states.
[2020-11-24 17:34:42,147 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 17:34:42,147 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 17:34:42,147 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 17:34:42,154 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 17:34:42,154 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
[2020-11-24 17:34:42,154 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-24 17:34:42,154 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3996 states.
[2020-11-24 17:34:42,174 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 17:34:42,175 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 17:34:42,175 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 17:34:42,177 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 17:34:42,177 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L2]                 success_transfer_BaseToken0 := false;
[L2]                 call_transfer_BaseToken0 := false;
[L2]     CALL        call main();
[L4678]              assume null == 0;
[L4679]  CALL        call this := FreshRefGenerator__success();
[L1729]              havoc newRef;
[L1730]              assume Alloc[newRef] == false;
[L1731]              Alloc[newRef] := true;
[L1732]              assume newRef != null;
[L4679]  RET         call this := FreshRefGenerator__success();
[L4680]              assume now >= 0;
[L4681]              assume DType[this] == THECASH;
[L4682]              assume !revert && gas >= 0;
[L4683]  CALL        call CorralChoice_THECASH(this);
[L4526]              havoc msgsender_MSG;
[L4527]              havoc msgvalue_MSG;
[L4528]              havoc choice;
[L4529]              havoc __ret_0__owner;
[L4530]              havoc __ret_0__admin;
[L4531]              havoc __ret_0_owner;
[L4532]              havoc __ret_0_isOwner;
[L4533]              havoc __ret_0_isAllowed;
[L4534]              havoc _target_s260;
[L4535]              havoc __ret_0_allow;
[L4536]              havoc _target_s282;
[L4537]              havoc __ret_0_removeAllowed;
[L4538]              havoc __ret_0_isStopped;
[L4539]              havoc _proposedOwner_s337;
[L4540]              havoc __ret_0_decimals;
[L4541]              havoc __ret_0_totalSupply;
[L4542]              havoc arg1390_s0;
[L4543]              havoc __ret_0_balances;
[L4544]              havoc arg1391_s0;
[L4545]              havoc arg1392_s0;
[L4546]              havoc __ret_0_approvals;
[L4547]              havoc arg1393_s0;
[L4548]              havoc arg1394_s0;
[L4549]              havoc __ret_0_lockup;
[L4550]              havoc arg1395_s0;
[L4551]              havoc __ret_0_lockedAddresses;
[L4552]              havoc _who_s555;
[L4553]              havoc __ret_0_balanceOf;
[L4554]              havoc _who_s628;
[L4555]              havoc __ret_0_lockedBalanceOf;
[L4556]              havoc _owner_s644;
[L4557]              havoc _spender_s644;
[L4558]              havoc __ret_0_allowance;
[L4559]              havoc _who_s687;
[L4560]              havoc _value_s687;
[L4561]              havoc __ret_0_isLocked;
[L4562]              havoc _to_s719;
[L4563]              havoc _value_s719;
[L4564]              havoc __ret_0_transfer;
[L4565]              havoc _from_s774;
[L4566]              havoc _to_s774;
[L4567]              havoc _value_s774;
[L4568]              havoc __ret_0_transferFrom;
[L4569]              havoc _to_s815;
[L4570]              havoc _value_s815;
[L4571]              havoc _time_s815;
[L4572]              havoc __ret_0_transferWithLock;
[L4573]              havoc _addr_s831;
[L4574]              havoc _locked_s831;
[L4575]              havoc _spender_s885;
[L4576]              havoc _value_s885;
[L4577]              havoc __ret_0_approve;
[L4578]              havoc _who_s937;
[L4579]              havoc _index_s937;
[L4580]              havoc __ret_0_unlock;
[L4581]              havoc _who_s967;
[L4582]              havoc __ret_0_unlockAll;
[L4583]              havoc _value_s1014;
[L4584]              havoc account_s1276;
[L4585]              havoc __ret_0_isMinter;
[L4586]              havoc account_s1288;
[L4587]              havoc to_s1353;
[L4588]              havoc value_s1353;
[L4589]              havoc __ret_0_mint;
[L4590]              havoc __ret_0_name;
[L4591]              havoc __ret_0_symbol;
[L4592]              havoc __ret_0_version;
[L4593]              havoc tmpNow;
[L4594]              havoc gas;
[L4595]              assume gas > 4000000 && gas <= 8000000;
[L4596]              tmpNow := now;
[L4597]              havoc now;
[L4598]              assume now > tmpNow;
[L4599]              assume msgsender_MSG != null;
[L4600]  COND TRUE   choice == 11
[L4601]              gas := gas - 21000;
[L4602]  COND FALSE  !(gas >= 0)
[L4683]  RET         call CorralChoice_THECASH(this);

Loop:
[L4683]        assume true;

[2020-11-24 17:34:42,193 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 17:34:42,193 INFO  L82        PathProgramCache]: Analyzing trace with hash 511287826, now seen corresponding path program 1 times
[2020-11-24 17:34:42,203 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 17:34:42,232 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 17:34:42,307 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 17:34:42,309 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 17:34:42,309 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [5] imperfect sequences [] total 5
[2020-11-24 17:34:42,313 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 17:34:42,535 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 5 interpolants.
[2020-11-24 17:34:42,535 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=9, Invalid=11, Unknown=0, NotChecked=0, Total=20
[2020-11-24 17:34:42,536 INFO  L87              Difference]: Start difference. First operand 3996 states. Second operand 5 states.
[2020-11-24 17:34:42,869 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 17:34:42,870 INFO  L93              Difference]: Finished difference Result 1937 states and 2383 transitions.
[2020-11-24 17:34:42,870 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-24 17:34:42,871 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 1937 states and 2383 transitions.
[2020-11-24 17:34:42,885 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 17:34:42,895 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 1937 states to 690 states and 869 transitions.
[2020-11-24 17:34:42,896 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 4
[2020-11-24 17:34:42,897 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 161
[2020-11-24 17:34:42,898 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 690 states and 869 transitions.
[2020-11-24 17:34:42,902 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 17:34:42,902 INFO  L728         BuchiCegarLoop]: Abstraction has 690 states and 869 transitions.
[2020-11-24 17:34:42,918 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 690 states and 869 transitions.
[2020-11-24 17:34:42,944 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 690 to 690.
[2020-11-24 17:34:42,944 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 690 states.
[2020-11-24 17:34:42,947 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 690 states to 690 states and 869 transitions.
[2020-11-24 17:34:42,948 INFO  L751         BuchiCegarLoop]: Abstraction has 690 states and 869 transitions.
[2020-11-24 17:34:42,948 INFO  L631         BuchiCegarLoop]: Abstraction has 690 states and 869 transitions.
[2020-11-24 17:34:42,948 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-24 17:34:42,948 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 690 states and 869 transitions.
[2020-11-24 17:34:42,950 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 17:34:42,950 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 17:34:42,950 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 17:34:42,952 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 17:34:42,952 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L2]                 success_transfer_BaseToken0 := false;
[L2]                 call_transfer_BaseToken0 := false;
[L2]     CALL        call main();
[L4678]              assume null == 0;
[L4679]  CALL        call this := FreshRefGenerator__success();
[L1729]              havoc newRef;
[L1730]              assume Alloc[newRef] == false;
[L1731]              Alloc[newRef] := true;
[L1732]              assume newRef != null;
[L4679]  RET         call this := FreshRefGenerator__success();
[L4680]              assume now >= 0;
[L4681]              assume DType[this] == THECASH;
[L4682]              assume !revert && gas >= 0;
[L4683]  CALL        call CorralChoice_THECASH(this);
[L4526]              havoc msgsender_MSG;
[L4527]              havoc msgvalue_MSG;
[L4528]              havoc choice;
[L4529]              havoc __ret_0__owner;
[L4530]              havoc __ret_0__admin;
[L4531]              havoc __ret_0_owner;
[L4532]              havoc __ret_0_isOwner;
[L4533]              havoc __ret_0_isAllowed;
[L4534]              havoc _target_s260;
[L4535]              havoc __ret_0_allow;
[L4536]              havoc _target_s282;
[L4537]              havoc __ret_0_removeAllowed;
[L4538]              havoc __ret_0_isStopped;
[L4539]              havoc _proposedOwner_s337;
[L4540]              havoc __ret_0_decimals;
[L4541]              havoc __ret_0_totalSupply;
[L4542]              havoc arg1390_s0;
[L4543]              havoc __ret_0_balances;
[L4544]              havoc arg1391_s0;
[L4545]              havoc arg1392_s0;
[L4546]              havoc __ret_0_approvals;
[L4547]              havoc arg1393_s0;
[L4548]              havoc arg1394_s0;
[L4549]              havoc __ret_0_lockup;
[L4550]              havoc arg1395_s0;
[L4551]              havoc __ret_0_lockedAddresses;
[L4552]              havoc _who_s555;
[L4553]              havoc __ret_0_balanceOf;
[L4554]              havoc _who_s628;
[L4555]              havoc __ret_0_lockedBalanceOf;
[L4556]              havoc _owner_s644;
[L4557]              havoc _spender_s644;
[L4558]              havoc __ret_0_allowance;
[L4559]              havoc _who_s687;
[L4560]              havoc _value_s687;
[L4561]              havoc __ret_0_isLocked;
[L4562]              havoc _to_s719;
[L4563]              havoc _value_s719;
[L4564]              havoc __ret_0_transfer;
[L4565]              havoc _from_s774;
[L4566]              havoc _to_s774;
[L4567]              havoc _value_s774;
[L4568]              havoc __ret_0_transferFrom;
[L4569]              havoc _to_s815;
[L4570]              havoc _value_s815;
[L4571]              havoc _time_s815;
[L4572]              havoc __ret_0_transferWithLock;
[L4573]              havoc _addr_s831;
[L4574]              havoc _locked_s831;
[L4575]              havoc _spender_s885;
[L4576]              havoc _value_s885;
[L4577]              havoc __ret_0_approve;
[L4578]              havoc _who_s937;
[L4579]              havoc _index_s937;
[L4580]              havoc __ret_0_unlock;
[L4581]              havoc _who_s967;
[L4582]              havoc __ret_0_unlockAll;
[L4583]              havoc _value_s1014;
[L4584]              havoc account_s1276;
[L4585]              havoc __ret_0_isMinter;
[L4586]              havoc account_s1288;
[L4587]              havoc to_s1353;
[L4588]              havoc value_s1353;
[L4589]              havoc __ret_0_mint;
[L4590]              havoc __ret_0_name;
[L4591]              havoc __ret_0_symbol;
[L4592]              havoc __ret_0_version;
[L4593]              havoc tmpNow;
[L4594]              havoc gas;
[L4595]              assume gas > 4000000 && gas <= 8000000;
[L4596]              tmpNow := now;
[L4597]              havoc now;
[L4598]              assume now > tmpNow;
[L4599]              assume msgsender_MSG != null;
[L4600]  COND FALSE  !(choice == 11)
[L4606]  COND FALSE  !(choice == 10)
[L4612]  COND FALSE  !(choice == 9)
[L4618]  COND FALSE  !(choice == 8)
[L4624]  COND FALSE  !(choice == 7)
[L4630]  COND FALSE  !(choice == 6)
[L4636]  COND FALSE  !(choice == 5)
[L4642]  COND FALSE  !(choice == 4)
[L4649]  COND TRUE   choice == 3
[L4650]              gas := gas - 21000;
[L4651]  COND TRUE   gas >= 0
[L4652]              assume _value_s719 >= 0 && _value_s719 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4653]              assume msgvalue_MSG == 0;
[L4654]  CALL        call __ret_0_transfer := transfer~address~uint256_BaseToken(this, msgsender_MSG, msgvalue_MSG, _to_s719, _value_s719);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == _to_s719 && _value_s719 <= balances_BaseToken[this][msgsender_MSG]) && _value_s719 >= 0) && _value_s719 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BaseToken[this][_to_s719] >= 0) && balances_BaseToken[this][_to_s719] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BaseToken[this][msgsender_MSG] >= 0) && balances_BaseToken[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_BaseToken0 := true;
[L2]                 call_transfer_BaseToken0 := false;
[L2]                 revert := revert_hold;
[L741]               havoc __exception;
[L742]               revert := false;
[L743]   COND FALSE  !(__exception)
[L783]   CALL        call __ret_0_ := transfer~address~uint256_BaseToken__success(this, msgsender_MSG, msgvalue_MSG, _to_s719, _value_s719);
[L2241]  CALL        call onlyWhenNotStopped_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L3672]  COND FALSE  !(DType[this] == THECASH)
[L3677]  COND TRUE   DType[this] == ERC20Mintable
[L3678]  CALL        call __var_1 := isStopped_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L1892]  COND TRUE   DType[this] == THECASH
[L1893]  CALL        call __var_2 := isOwner_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L1813]              __ret_0_ := msgsender_MSG == _owner_Ownable[this];
[L1893]  RET         call __var_2 := isOwner_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L1894]  COND TRUE   revert
[L3678]  RET         call __var_1 := isStopped_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3679]  COND TRUE   revert
[L2241]  RET         call onlyWhenNotStopped_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L2242]  COND TRUE   revert
[L783]   RET         call __ret_0_ := transfer~address~uint256_BaseToken__success(this, msgsender_MSG, msgvalue_MSG, _to_s719, _value_s719);
[L784]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !(((((((((((__ret_0_ == true && totalSupply_BaseToken[this] == old(totalSupply_BaseToken[this])) && balances_BaseToken[this] == old(balances_BaseToken[this])) && approvals_BaseToken[this] == old(approvals_BaseToken[this])) && _minters_MinterRole[this] == old(_minters_MinterRole[this])) && M_Ref_Ref[lockup_BaseToken[this]] == old(M_Ref_Ref[lockup_BaseToken[this]])) && lockedAddresses_BaseToken[this] == old(lockedAddresses_BaseToken[this])) && stopped_Ownable[this] == old(stopped_Ownable[this])) && _owner_Ownable[this] == old(_owner_Ownable[this])) && _admin_Ownable[this] == old(_admin_Ownable[this])) && proposedOwner_Ownable[this] == old(proposedOwner_Ownable[this])) && _allowed_Ownable[this] == old(_allowed_Ownable[this]));
[L2]                 revert := revert_hold;
[L4654]  RET         call __ret_0_transfer := transfer~address~uint256_BaseToken(this, msgsender_MSG, msgvalue_MSG, _to_s719, _value_s719);
[L4683]  RET         call CorralChoice_THECASH(this);

Loop:
[L4683]        assume true;

[2020-11-24 17:34:42,956 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 17:34:42,956 INFO  L82        PathProgramCache]: Analyzing trace with hash -567896808, now seen corresponding path program 1 times
[2020-11-24 17:34:42,957 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 17:34:42,971 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 17:34:42,996 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 17:34:42,996 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 17:34:42,997 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-24 17:34:42,998 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 17:34:42,998 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-24 17:34:42,998 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-24 17:34:42,999 INFO  L87              Difference]: Start difference. First operand 690 states and 869 transitions. cyclomatic complexity: 182 Second operand 3 states.
[2020-11-24 17:34:43,027 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 17:34:43,027 INFO  L93              Difference]: Finished difference Result 821 states and 1021 transitions.
[2020-11-24 17:34:43,027 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-24 17:34:43,028 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 821 states and 1021 transitions.
[2020-11-24 17:34:43,031 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 2
[2020-11-24 17:34:43,034 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 821 states to 748 states and 894 transitions.
[2020-11-24 17:34:43,034 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 182
[2020-11-24 17:34:43,035 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 241
[2020-11-24 17:34:43,035 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 748 states and 894 transitions.
[2020-11-24 17:34:43,036 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 17:34:43,036 INFO  L728         BuchiCegarLoop]: Abstraction has 748 states and 894 transitions.
[2020-11-24 17:34:43,037 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 748 states and 894 transitions.
[2020-11-24 17:34:43,044 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 748 to 737.
[2020-11-24 17:34:43,044 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 737 states.
[2020-11-24 17:34:43,045 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 737 states to 737 states and 883 transitions.
[2020-11-24 17:34:43,045 INFO  L751         BuchiCegarLoop]: Abstraction has 737 states and 883 transitions.
[2020-11-24 17:34:43,046 INFO  L631         BuchiCegarLoop]: Abstraction has 737 states and 883 transitions.
[2020-11-24 17:34:43,046 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-24 17:34:43,046 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 737 states and 883 transitions.
[2020-11-24 17:34:43,047 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 17:34:43,047 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 17:34:43,047 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 17:34:43,048 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 17:34:43,048 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L2]                 success_transfer_BaseToken0 := false;
[L2]                 call_transfer_BaseToken0 := false;
[L2]     CALL        call main();
[L4678]              assume null == 0;
[L4679]  CALL        call this := FreshRefGenerator__success();
[L1729]              havoc newRef;
[L1730]              assume Alloc[newRef] == false;
[L1731]              Alloc[newRef] := true;
[L1732]              assume newRef != null;
[L4679]  RET         call this := FreshRefGenerator__success();
[L4680]              assume now >= 0;
[L4681]              assume DType[this] == THECASH;
[L4682]              assume !revert && gas >= 0;
[L4683]  CALL        call CorralChoice_THECASH(this);
[L4526]              havoc msgsender_MSG;
[L4527]              havoc msgvalue_MSG;
[L4528]              havoc choice;
[L4529]              havoc __ret_0__owner;
[L4530]              havoc __ret_0__admin;
[L4531]              havoc __ret_0_owner;
[L4532]              havoc __ret_0_isOwner;
[L4533]              havoc __ret_0_isAllowed;
[L4534]              havoc _target_s260;
[L4535]              havoc __ret_0_allow;
[L4536]              havoc _target_s282;
[L4537]              havoc __ret_0_removeAllowed;
[L4538]              havoc __ret_0_isStopped;
[L4539]              havoc _proposedOwner_s337;
[L4540]              havoc __ret_0_decimals;
[L4541]              havoc __ret_0_totalSupply;
[L4542]              havoc arg1390_s0;
[L4543]              havoc __ret_0_balances;
[L4544]              havoc arg1391_s0;
[L4545]              havoc arg1392_s0;
[L4546]              havoc __ret_0_approvals;
[L4547]              havoc arg1393_s0;
[L4548]              havoc arg1394_s0;
[L4549]              havoc __ret_0_lockup;
[L4550]              havoc arg1395_s0;
[L4551]              havoc __ret_0_lockedAddresses;
[L4552]              havoc _who_s555;
[L4553]              havoc __ret_0_balanceOf;
[L4554]              havoc _who_s628;
[L4555]              havoc __ret_0_lockedBalanceOf;
[L4556]              havoc _owner_s644;
[L4557]              havoc _spender_s644;
[L4558]              havoc __ret_0_allowance;
[L4559]              havoc _who_s687;
[L4560]              havoc _value_s687;
[L4561]              havoc __ret_0_isLocked;
[L4562]              havoc _to_s719;
[L4563]              havoc _value_s719;
[L4564]              havoc __ret_0_transfer;
[L4565]              havoc _from_s774;
[L4566]              havoc _to_s774;
[L4567]              havoc _value_s774;
[L4568]              havoc __ret_0_transferFrom;
[L4569]              havoc _to_s815;
[L4570]              havoc _value_s815;
[L4571]              havoc _time_s815;
[L4572]              havoc __ret_0_transferWithLock;
[L4573]              havoc _addr_s831;
[L4574]              havoc _locked_s831;
[L4575]              havoc _spender_s885;
[L4576]              havoc _value_s885;
[L4577]              havoc __ret_0_approve;
[L4578]              havoc _who_s937;
[L4579]              havoc _index_s937;
[L4580]              havoc __ret_0_unlock;
[L4581]              havoc _who_s967;
[L4582]              havoc __ret_0_unlockAll;
[L4583]              havoc _value_s1014;
[L4584]              havoc account_s1276;
[L4585]              havoc __ret_0_isMinter;
[L4586]              havoc account_s1288;
[L4587]              havoc to_s1353;
[L4588]              havoc value_s1353;
[L4589]              havoc __ret_0_mint;
[L4590]              havoc __ret_0_name;
[L4591]              havoc __ret_0_symbol;
[L4592]              havoc __ret_0_version;
[L4593]              havoc tmpNow;
[L4594]              havoc gas;
[L4595]              assume gas > 4000000 && gas <= 8000000;
[L4596]              tmpNow := now;
[L4597]              havoc now;
[L4598]              assume now > tmpNow;
[L4599]              assume msgsender_MSG != null;
[L4600]  COND FALSE  !(choice == 11)
[L4606]  COND FALSE  !(choice == 10)
[L4612]  COND FALSE  !(choice == 9)
[L4618]  COND FALSE  !(choice == 8)
[L4624]  COND FALSE  !(choice == 7)
[L4630]  COND FALSE  !(choice == 6)
[L4636]  COND FALSE  !(choice == 5)
[L4642]  COND FALSE  !(choice == 4)
[L4649]  COND TRUE   choice == 3
[L4650]              gas := gas - 21000;
[L4651]  COND TRUE   gas >= 0
[L4652]              assume _value_s719 >= 0 && _value_s719 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4653]              assume msgvalue_MSG == 0;
[L4654]  CALL        call __ret_0_transfer := transfer~address~uint256_BaseToken(this, msgsender_MSG, msgvalue_MSG, _to_s719, _value_s719);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == _to_s719 && _value_s719 <= balances_BaseToken[this][msgsender_MSG]) && _value_s719 >= 0) && _value_s719 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BaseToken[this][_to_s719] >= 0) && balances_BaseToken[this][_to_s719] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BaseToken[this][msgsender_MSG] >= 0) && balances_BaseToken[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_BaseToken0 := true;
[L2]                 call_transfer_BaseToken0 := false;
[L2]                 revert := revert_hold;
[L741]               havoc __exception;
[L742]               revert := false;
[L743]   COND TRUE   __exception
[L744]               __tmp__Balance := Balance;
[L745]               __tmp__DType := DType;
[L746]               __tmp__Alloc := Alloc;
[L747]               __tmp__balance_ADDR := balance_ADDR;
[L748]               __tmp__M_Ref_bool := M_Ref_bool;
[L749]               __tmp__sum__allowed0 := sum__allowed0;
[L750]               __tmp__M_Ref_int := M_Ref_int;
[L751]               __tmp__sum_balances1 := sum_balances1;
[L752]               __tmp__alloc_approvals_BaseToken_lvl0 := alloc_approvals_BaseToken_lvl0;
[L753]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L754]               __tmp__sum_approvals2 := sum_approvals2;
[L755]               __tmp__M_int_Ref := M_int_Ref;
[L756]               __tmp__alloc_lockup_BaseToken_lvl0 := alloc_lockup_BaseToken_lvl0;
[L757]               __tmp__sum := sum;
[L758]               __tmp__sum_lockedAddresses3 := sum_lockedAddresses3;
[L759]               __tmp__Length := Length;
[L760]               __tmp__now := now;
[L761]               __tmp__stopped_Ownable := stopped_Ownable;
[L762]               __tmp___owner_Ownable := _owner_Ownable;
[L763]               __tmp___admin_Ownable := _admin_Ownable;
[L764]               __tmp__proposedOwner_Ownable := proposedOwner_Ownable;
[L765]               __tmp___allowed_Ownable := _allowed_Ownable;
[L766]               __tmp__E18_BaseToken := E18_BaseToken;
[L767]               __tmp__decimals_BaseToken := decimals_BaseToken;
[L768]               __tmp__totalSupply_BaseToken := totalSupply_BaseToken;
[L769]               __tmp__amount_BaseToken.Lock := amount_BaseToken.Lock;
[L770]               __tmp__expiresAt_BaseToken.Lock := expiresAt_BaseToken.Lock;
[L771]               __tmp__balances_BaseToken := balances_BaseToken;
[L772]               __tmp__approvals_BaseToken := approvals_BaseToken;
[L773]               __tmp__lockup_BaseToken := lockup_BaseToken;
[L774]               __tmp__lockedAddresses_BaseToken := lockedAddresses_BaseToken;
[L775]               __tmp__bearer_Roles.Role := bearer_Roles.Role;
[L776]               __tmp___minters_MinterRole := _minters_MinterRole;
[L777]               __tmp__name_THECASH := name_THECASH;
[L778]               __tmp__symbol_THECASH := symbol_THECASH;
[L779]               __tmp__version_THECASH := version_THECASH;
[L780]   CALL        call __ret_0_ := transfer~address~uint256_BaseToken__fail(this, msgsender_MSG, msgvalue_MSG, _to_s719, _value_s719);
[L2205]  CALL        call onlyWhenNotStopped_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L3640]  COND TRUE   __tmp__DType[this] == THECASH
[L3641]  CALL        call __var_1 := isStopped_Ownable__fail(this, msgsender_MSG, msgvalue_MSG);
[L1833]  COND TRUE   __tmp__DType[this] == THECASH
[L1834]  CALL        call __var_2 := isOwner_Ownable__fail(this, msgsender_MSG, msgvalue_MSG);
[L1807]              __ret_0_ := msgsender_MSG == __tmp___owner_Ownable[this];
[L1834]  RET         call __var_2 := isOwner_Ownable__fail(this, msgsender_MSG, msgvalue_MSG);
[L1835]  COND TRUE   revert
[L3641]  RET         call __var_1 := isStopped_Ownable__fail(this, msgsender_MSG, msgvalue_MSG);
[L3642]  COND TRUE   revert
[L2205]  RET         call onlyWhenNotStopped_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L2206]  COND TRUE   revert
[L780]   RET         call __ret_0_ := transfer~address~uint256_BaseToken__fail(this, msgsender_MSG, msgvalue_MSG, _to_s719, _value_s719);
[L781]               assume revert || gas < 0;
[L4654]  RET         call __ret_0_transfer := transfer~address~uint256_BaseToken(this, msgsender_MSG, msgvalue_MSG, _to_s719, _value_s719);
[L4683]  RET         call CorralChoice_THECASH(this);

Loop:
[L4683]        assume true;

[2020-11-24 17:34:43,051 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 17:34:43,051 INFO  L82        PathProgramCache]: Analyzing trace with hash 762431003, now seen corresponding path program 1 times
[2020-11-24 17:34:43,052 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 17:34:43,059 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 17:34:43,082 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 17:34:43,082 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 17:34:43,082 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [6] imperfect sequences [] total 6
[2020-11-24 17:34:43,083 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 17:34:43,083 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 6 interpolants.
[2020-11-24 17:34:43,083 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=11, Invalid=19, Unknown=0, NotChecked=0, Total=30
[2020-11-24 17:34:43,083 INFO  L87              Difference]: Start difference. First operand 737 states and 883 transitions. cyclomatic complexity: 149 Second operand 6 states.
[2020-11-24 17:34:43,167 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 17:34:43,168 INFO  L93              Difference]: Finished difference Result 745 states and 855 transitions.
[2020-11-24 17:34:43,168 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 5 states. 
[2020-11-24 17:34:43,168 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 745 states and 855 transitions.
[2020-11-24 17:34:43,170 INFO  L131   ngComponentsAnalysis]: Automaton has 3 accepting balls. 3
[2020-11-24 17:34:43,173 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 745 states to 745 states and 855 transitions.
[2020-11-24 17:34:43,173 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 238
[2020-11-24 17:34:43,174 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 238
[2020-11-24 17:34:43,174 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 745 states and 855 transitions.
[2020-11-24 17:34:43,175 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 17:34:43,175 INFO  L728         BuchiCegarLoop]: Abstraction has 745 states and 855 transitions.
[2020-11-24 17:34:43,176 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 745 states and 855 transitions.
[2020-11-24 17:34:43,182 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 745 to 727.
[2020-11-24 17:34:43,182 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 727 states.
[2020-11-24 17:34:43,183 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 727 states to 727 states and 837 transitions.
[2020-11-24 17:34:43,183 INFO  L751         BuchiCegarLoop]: Abstraction has 727 states and 837 transitions.
[2020-11-24 17:34:43,183 INFO  L631         BuchiCegarLoop]: Abstraction has 727 states and 837 transitions.
[2020-11-24 17:34:43,183 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-24 17:34:43,183 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 727 states and 837 transitions.
[2020-11-24 17:34:43,185 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 17:34:43,185 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 17:34:43,185 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 17:34:43,186 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 17:34:43,186 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L2]                 success_transfer_BaseToken0 := false;
[L2]                 call_transfer_BaseToken0 := false;
[L2]     CALL        call main();
[L4678]              assume null == 0;
[L4679]  CALL        call this := FreshRefGenerator__success();
[L1729]              havoc newRef;
[L1730]              assume Alloc[newRef] == false;
[L1731]              Alloc[newRef] := true;
[L1732]              assume newRef != null;
[L4679]  RET         call this := FreshRefGenerator__success();
[L4680]              assume now >= 0;
[L4681]              assume DType[this] == THECASH;
[L4682]              assume !revert && gas >= 0;
[L4683]  CALL        call CorralChoice_THECASH(this);
[L4526]              havoc msgsender_MSG;
[L4527]              havoc msgvalue_MSG;
[L4528]              havoc choice;
[L4529]              havoc __ret_0__owner;
[L4530]              havoc __ret_0__admin;
[L4531]              havoc __ret_0_owner;
[L4532]              havoc __ret_0_isOwner;
[L4533]              havoc __ret_0_isAllowed;
[L4534]              havoc _target_s260;
[L4535]              havoc __ret_0_allow;
[L4536]              havoc _target_s282;
[L4537]              havoc __ret_0_removeAllowed;
[L4538]              havoc __ret_0_isStopped;
[L4539]              havoc _proposedOwner_s337;
[L4540]              havoc __ret_0_decimals;
[L4541]              havoc __ret_0_totalSupply;
[L4542]              havoc arg1390_s0;
[L4543]              havoc __ret_0_balances;
[L4544]              havoc arg1391_s0;
[L4545]              havoc arg1392_s0;
[L4546]              havoc __ret_0_approvals;
[L4547]              havoc arg1393_s0;
[L4548]              havoc arg1394_s0;
[L4549]              havoc __ret_0_lockup;
[L4550]              havoc arg1395_s0;
[L4551]              havoc __ret_0_lockedAddresses;
[L4552]              havoc _who_s555;
[L4553]              havoc __ret_0_balanceOf;
[L4554]              havoc _who_s628;
[L4555]              havoc __ret_0_lockedBalanceOf;
[L4556]              havoc _owner_s644;
[L4557]              havoc _spender_s644;
[L4558]              havoc __ret_0_allowance;
[L4559]              havoc _who_s687;
[L4560]              havoc _value_s687;
[L4561]              havoc __ret_0_isLocked;
[L4562]              havoc _to_s719;
[L4563]              havoc _value_s719;
[L4564]              havoc __ret_0_transfer;
[L4565]              havoc _from_s774;
[L4566]              havoc _to_s774;
[L4567]              havoc _value_s774;
[L4568]              havoc __ret_0_transferFrom;
[L4569]              havoc _to_s815;
[L4570]              havoc _value_s815;
[L4571]              havoc _time_s815;
[L4572]              havoc __ret_0_transferWithLock;
[L4573]              havoc _addr_s831;
[L4574]              havoc _locked_s831;
[L4575]              havoc _spender_s885;
[L4576]              havoc _value_s885;
[L4577]              havoc __ret_0_approve;
[L4578]              havoc _who_s937;
[L4579]              havoc _index_s937;
[L4580]              havoc __ret_0_unlock;
[L4581]              havoc _who_s967;
[L4582]              havoc __ret_0_unlockAll;
[L4583]              havoc _value_s1014;
[L4584]              havoc account_s1276;
[L4585]              havoc __ret_0_isMinter;
[L4586]              havoc account_s1288;
[L4587]              havoc to_s1353;
[L4588]              havoc value_s1353;
[L4589]              havoc __ret_0_mint;
[L4590]              havoc __ret_0_name;
[L4591]              havoc __ret_0_symbol;
[L4592]              havoc __ret_0_version;
[L4593]              havoc tmpNow;
[L4594]              havoc gas;
[L4595]              assume gas > 4000000 && gas <= 8000000;
[L4596]              tmpNow := now;
[L4597]              havoc now;
[L4598]              assume now > tmpNow;
[L4599]              assume msgsender_MSG != null;
[L4600]  COND FALSE  !(choice == 11)
[L4606]  COND FALSE  !(choice == 10)
[L4612]  COND FALSE  !(choice == 9)
[L4618]  COND FALSE  !(choice == 8)
[L4624]  COND FALSE  !(choice == 7)
[L4630]  COND FALSE  !(choice == 6)
[L4636]  COND FALSE  !(choice == 5)
[L4642]  COND FALSE  !(choice == 4)
[L4649]  COND TRUE   choice == 3
[L4650]              gas := gas - 21000;
[L4651]  COND TRUE   gas >= 0
[L4652]              assume _value_s719 >= 0 && _value_s719 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4653]              assume msgvalue_MSG == 0;
[L4654]  CALL        call __ret_0_transfer := transfer~address~uint256_BaseToken(this, msgsender_MSG, msgvalue_MSG, _to_s719, _value_s719);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == _to_s719 && _value_s719 <= balances_BaseToken[this][msgsender_MSG]) && _value_s719 >= 0) && _value_s719 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BaseToken[this][_to_s719] >= 0) && balances_BaseToken[this][_to_s719] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BaseToken[this][msgsender_MSG] >= 0) && balances_BaseToken[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_BaseToken0 := true;
[L2]                 call_transfer_BaseToken0 := false;
[L2]                 revert := revert_hold;
[L741]               havoc __exception;
[L742]               revert := false;
[L743]   COND TRUE   __exception
[L744]               __tmp__Balance := Balance;
[L745]               __tmp__DType := DType;
[L746]               __tmp__Alloc := Alloc;
[L747]               __tmp__balance_ADDR := balance_ADDR;
[L748]               __tmp__M_Ref_bool := M_Ref_bool;
[L749]               __tmp__sum__allowed0 := sum__allowed0;
[L750]               __tmp__M_Ref_int := M_Ref_int;
[L751]               __tmp__sum_balances1 := sum_balances1;
[L752]               __tmp__alloc_approvals_BaseToken_lvl0 := alloc_approvals_BaseToken_lvl0;
[L753]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L754]               __tmp__sum_approvals2 := sum_approvals2;
[L755]               __tmp__M_int_Ref := M_int_Ref;
[L756]               __tmp__alloc_lockup_BaseToken_lvl0 := alloc_lockup_BaseToken_lvl0;
[L757]               __tmp__sum := sum;
[L758]               __tmp__sum_lockedAddresses3 := sum_lockedAddresses3;
[L759]               __tmp__Length := Length;
[L760]               __tmp__now := now;
[L761]               __tmp__stopped_Ownable := stopped_Ownable;
[L762]               __tmp___owner_Ownable := _owner_Ownable;
[L763]               __tmp___admin_Ownable := _admin_Ownable;
[L764]               __tmp__proposedOwner_Ownable := proposedOwner_Ownable;
[L765]               __tmp___allowed_Ownable := _allowed_Ownable;
[L766]               __tmp__E18_BaseToken := E18_BaseToken;
[L767]               __tmp__decimals_BaseToken := decimals_BaseToken;
[L768]               __tmp__totalSupply_BaseToken := totalSupply_BaseToken;
[L769]               __tmp__amount_BaseToken.Lock := amount_BaseToken.Lock;
[L770]               __tmp__expiresAt_BaseToken.Lock := expiresAt_BaseToken.Lock;
[L771]               __tmp__balances_BaseToken := balances_BaseToken;
[L772]               __tmp__approvals_BaseToken := approvals_BaseToken;
[L773]               __tmp__lockup_BaseToken := lockup_BaseToken;
[L774]               __tmp__lockedAddresses_BaseToken := lockedAddresses_BaseToken;
[L775]               __tmp__bearer_Roles.Role := bearer_Roles.Role;
[L776]               __tmp___minters_MinterRole := _minters_MinterRole;
[L777]               __tmp__name_THECASH := name_THECASH;
[L778]               __tmp__symbol_THECASH := symbol_THECASH;
[L779]               __tmp__version_THECASH := version_THECASH;
[L780]   CALL        call __ret_0_ := transfer~address~uint256_BaseToken__fail(this, msgsender_MSG, msgvalue_MSG, _to_s719, _value_s719);
[L2205]  CALL        call onlyWhenNotStopped_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L3640]  COND TRUE   __tmp__DType[this] == THECASH
[L3641]  CALL        call __var_1 := isStopped_Ownable__fail(this, msgsender_MSG, msgvalue_MSG);
[L1833]  COND TRUE   __tmp__DType[this] == THECASH
[L1834]  CALL        call __var_2 := isOwner_Ownable__fail(this, msgsender_MSG, msgvalue_MSG);
[L1807]              __ret_0_ := msgsender_MSG == __tmp___owner_Ownable[this];
[L1834]  RET         call __var_2 := isOwner_Ownable__fail(this, msgsender_MSG, msgvalue_MSG);
[L1835]  COND FALSE  !(revert)
[L1856]  COND TRUE   __tmp__DType[this] == THECASH
[L1857]  CALL        call __var_3 := isAllowed_Ownable__fail(this, msgsender_MSG, msgvalue_MSG);
[L1819]              __ret_0_ := __tmp___allowed_Ownable[this][msgsender_MSG];
[L1857]  RET         call __var_3 := isAllowed_Ownable__fail(this, msgsender_MSG, msgvalue_MSG);
[L1858]  COND FALSE  !(revert)
[L1879]  COND TRUE   __var_2 || __var_3
[L1880]              __ret_0_ := false;
[L3641]  RET         call __var_1 := isStopped_Ownable__fail(this, msgsender_MSG, msgvalue_MSG);
[L3642]  COND FALSE  !(revert)
[L3663]  COND TRUE   !!__var_1
[L3664]              revert := true;
[L2205]  RET         call onlyWhenNotStopped_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L2206]  COND TRUE   revert
[L780]   RET         call __ret_0_ := transfer~address~uint256_BaseToken__fail(this, msgsender_MSG, msgvalue_MSG, _to_s719, _value_s719);
[L781]               assume revert || gas < 0;
[L4654]  RET         call __ret_0_transfer := transfer~address~uint256_BaseToken(this, msgsender_MSG, msgvalue_MSG, _to_s719, _value_s719);
[L4683]  RET         call CorralChoice_THECASH(this);

Loop:
[L4683]        assume true;

[2020-11-24 17:34:43,188 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 17:34:43,188 INFO  L82        PathProgramCache]: Analyzing trace with hash 2064212826, now seen corresponding path program 1 times
[2020-11-24 17:34:43,189 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 17:34:43,196 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 17:34:43,217 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 17:34:43,217 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 17:34:43,217 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-24 17:34:43,217 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 17:34:43,217 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-24 17:34:43,218 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-24 17:34:43,218 INFO  L87              Difference]: Start difference. First operand 727 states and 837 transitions. cyclomatic complexity: 113 Second operand 4 states.
[2020-11-24 17:34:43,225 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 17:34:43,225 INFO  L93              Difference]: Finished difference Result 738 states and 851 transitions.
[2020-11-24 17:34:43,225 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-24 17:34:43,225 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 738 states and 851 transitions.
[2020-11-24 17:34:43,228 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 17:34:43,231 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 738 states to 738 states and 851 transitions.
[2020-11-24 17:34:43,231 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 220
[2020-11-24 17:34:43,231 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 220
[2020-11-24 17:34:43,232 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 738 states and 851 transitions.
[2020-11-24 17:34:43,233 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 17:34:43,233 INFO  L728         BuchiCegarLoop]: Abstraction has 738 states and 851 transitions.
[2020-11-24 17:34:43,233 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 738 states and 851 transitions.
[2020-11-24 17:34:43,239 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 738 to 738.
[2020-11-24 17:34:43,239 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 738 states.
[2020-11-24 17:34:43,240 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 738 states to 738 states and 851 transitions.
[2020-11-24 17:34:43,240 INFO  L751         BuchiCegarLoop]: Abstraction has 738 states and 851 transitions.
[2020-11-24 17:34:43,240 INFO  L631         BuchiCegarLoop]: Abstraction has 738 states and 851 transitions.
[2020-11-24 17:34:43,240 INFO  L445         BuchiCegarLoop]: ======== Iteration 5============
[2020-11-24 17:34:43,240 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 738 states and 851 transitions.
[2020-11-24 17:34:43,242 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 17:34:43,242 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 17:34:43,242 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 17:34:43,243 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 17:34:43,243 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L2]                 success_transfer_BaseToken0 := false;
[L2]                 call_transfer_BaseToken0 := false;
[L2]     CALL        call main();
[L4678]              assume null == 0;
[L4679]  CALL        call this := FreshRefGenerator__success();
[L1729]              havoc newRef;
[L1730]              assume Alloc[newRef] == false;
[L1731]              Alloc[newRef] := true;
[L1732]              assume newRef != null;
[L4679]  RET         call this := FreshRefGenerator__success();
[L4680]              assume now >= 0;
[L4681]              assume DType[this] == THECASH;
[L4682]              assume !revert && gas >= 0;
[L4683]  CALL        call CorralChoice_THECASH(this);
[L4526]              havoc msgsender_MSG;
[L4527]              havoc msgvalue_MSG;
[L4528]              havoc choice;
[L4529]              havoc __ret_0__owner;
[L4530]              havoc __ret_0__admin;
[L4531]              havoc __ret_0_owner;
[L4532]              havoc __ret_0_isOwner;
[L4533]              havoc __ret_0_isAllowed;
[L4534]              havoc _target_s260;
[L4535]              havoc __ret_0_allow;
[L4536]              havoc _target_s282;
[L4537]              havoc __ret_0_removeAllowed;
[L4538]              havoc __ret_0_isStopped;
[L4539]              havoc _proposedOwner_s337;
[L4540]              havoc __ret_0_decimals;
[L4541]              havoc __ret_0_totalSupply;
[L4542]              havoc arg1390_s0;
[L4543]              havoc __ret_0_balances;
[L4544]              havoc arg1391_s0;
[L4545]              havoc arg1392_s0;
[L4546]              havoc __ret_0_approvals;
[L4547]              havoc arg1393_s0;
[L4548]              havoc arg1394_s0;
[L4549]              havoc __ret_0_lockup;
[L4550]              havoc arg1395_s0;
[L4551]              havoc __ret_0_lockedAddresses;
[L4552]              havoc _who_s555;
[L4553]              havoc __ret_0_balanceOf;
[L4554]              havoc _who_s628;
[L4555]              havoc __ret_0_lockedBalanceOf;
[L4556]              havoc _owner_s644;
[L4557]              havoc _spender_s644;
[L4558]              havoc __ret_0_allowance;
[L4559]              havoc _who_s687;
[L4560]              havoc _value_s687;
[L4561]              havoc __ret_0_isLocked;
[L4562]              havoc _to_s719;
[L4563]              havoc _value_s719;
[L4564]              havoc __ret_0_transfer;
[L4565]              havoc _from_s774;
[L4566]              havoc _to_s774;
[L4567]              havoc _value_s774;
[L4568]              havoc __ret_0_transferFrom;
[L4569]              havoc _to_s815;
[L4570]              havoc _value_s815;
[L4571]              havoc _time_s815;
[L4572]              havoc __ret_0_transferWithLock;
[L4573]              havoc _addr_s831;
[L4574]              havoc _locked_s831;
[L4575]              havoc _spender_s885;
[L4576]              havoc _value_s885;
[L4577]              havoc __ret_0_approve;
[L4578]              havoc _who_s937;
[L4579]              havoc _index_s937;
[L4580]              havoc __ret_0_unlock;
[L4581]              havoc _who_s967;
[L4582]              havoc __ret_0_unlockAll;
[L4583]              havoc _value_s1014;
[L4584]              havoc account_s1276;
[L4585]              havoc __ret_0_isMinter;
[L4586]              havoc account_s1288;
[L4587]              havoc to_s1353;
[L4588]              havoc value_s1353;
[L4589]              havoc __ret_0_mint;
[L4590]              havoc __ret_0_name;
[L4591]              havoc __ret_0_symbol;
[L4592]              havoc __ret_0_version;
[L4593]              havoc tmpNow;
[L4594]              havoc gas;
[L4595]              assume gas > 4000000 && gas <= 8000000;
[L4596]              tmpNow := now;
[L4597]              havoc now;
[L4598]              assume now > tmpNow;
[L4599]              assume msgsender_MSG != null;
[L4600]  COND FALSE  !(choice == 11)
[L4606]  COND FALSE  !(choice == 10)
[L4612]  COND FALSE  !(choice == 9)
[L4618]  COND FALSE  !(choice == 8)
[L4624]  COND FALSE  !(choice == 7)
[L4630]  COND FALSE  !(choice == 6)
[L4636]  COND FALSE  !(choice == 5)
[L4642]  COND FALSE  !(choice == 4)
[L4649]  COND TRUE   choice == 3
[L4650]              gas := gas - 21000;
[L4651]  COND TRUE   gas >= 0
[L4652]              assume _value_s719 >= 0 && _value_s719 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4653]              assume msgvalue_MSG == 0;
[L4654]  CALL        call __ret_0_transfer := transfer~address~uint256_BaseToken(this, msgsender_MSG, msgvalue_MSG, _to_s719, _value_s719);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == _to_s719 && _value_s719 <= balances_BaseToken[this][msgsender_MSG]) && _value_s719 >= 0) && _value_s719 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BaseToken[this][_to_s719] >= 0) && balances_BaseToken[this][_to_s719] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BaseToken[this][msgsender_MSG] >= 0) && balances_BaseToken[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_BaseToken0 := true;
[L2]                 call_transfer_BaseToken0 := false;
[L2]                 revert := revert_hold;
[L741]               havoc __exception;
[L742]               revert := false;
[L743]   COND TRUE   __exception
[L744]               __tmp__Balance := Balance;
[L745]               __tmp__DType := DType;
[L746]               __tmp__Alloc := Alloc;
[L747]               __tmp__balance_ADDR := balance_ADDR;
[L748]               __tmp__M_Ref_bool := M_Ref_bool;
[L749]               __tmp__sum__allowed0 := sum__allowed0;
[L750]               __tmp__M_Ref_int := M_Ref_int;
[L751]               __tmp__sum_balances1 := sum_balances1;
[L752]               __tmp__alloc_approvals_BaseToken_lvl0 := alloc_approvals_BaseToken_lvl0;
[L753]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L754]               __tmp__sum_approvals2 := sum_approvals2;
[L755]               __tmp__M_int_Ref := M_int_Ref;
[L756]               __tmp__alloc_lockup_BaseToken_lvl0 := alloc_lockup_BaseToken_lvl0;
[L757]               __tmp__sum := sum;
[L758]               __tmp__sum_lockedAddresses3 := sum_lockedAddresses3;
[L759]               __tmp__Length := Length;
[L760]               __tmp__now := now;
[L761]               __tmp__stopped_Ownable := stopped_Ownable;
[L762]               __tmp___owner_Ownable := _owner_Ownable;
[L763]               __tmp___admin_Ownable := _admin_Ownable;
[L764]               __tmp__proposedOwner_Ownable := proposedOwner_Ownable;
[L765]               __tmp___allowed_Ownable := _allowed_Ownable;
[L766]               __tmp__E18_BaseToken := E18_BaseToken;
[L767]               __tmp__decimals_BaseToken := decimals_BaseToken;
[L768]               __tmp__totalSupply_BaseToken := totalSupply_BaseToken;
[L769]               __tmp__amount_BaseToken.Lock := amount_BaseToken.Lock;
[L770]               __tmp__expiresAt_BaseToken.Lock := expiresAt_BaseToken.Lock;
[L771]               __tmp__balances_BaseToken := balances_BaseToken;
[L772]               __tmp__approvals_BaseToken := approvals_BaseToken;
[L773]               __tmp__lockup_BaseToken := lockup_BaseToken;
[L774]               __tmp__lockedAddresses_BaseToken := lockedAddresses_BaseToken;
[L775]               __tmp__bearer_Roles.Role := bearer_Roles.Role;
[L776]               __tmp___minters_MinterRole := _minters_MinterRole;
[L777]               __tmp__name_THECASH := name_THECASH;
[L778]               __tmp__symbol_THECASH := symbol_THECASH;
[L779]               __tmp__version_THECASH := version_THECASH;
[L780]   CALL        call __ret_0_ := transfer~address~uint256_BaseToken__fail(this, msgsender_MSG, msgvalue_MSG, _to_s719, _value_s719);
[L2205]  CALL        call onlyWhenNotStopped_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L3640]  COND TRUE   __tmp__DType[this] == THECASH
[L3641]  CALL        call __var_1 := isStopped_Ownable__fail(this, msgsender_MSG, msgvalue_MSG);
[L1833]  COND TRUE   __tmp__DType[this] == THECASH
[L1834]  CALL        call __var_2 := isOwner_Ownable__fail(this, msgsender_MSG, msgvalue_MSG);
[L1807]              __ret_0_ := msgsender_MSG == __tmp___owner_Ownable[this];
[L1834]  RET         call __var_2 := isOwner_Ownable__fail(this, msgsender_MSG, msgvalue_MSG);
[L1835]  COND FALSE  !(revert)
[L1856]  COND TRUE   __tmp__DType[this] == THECASH
[L1857]  CALL        call __var_3 := isAllowed_Ownable__fail(this, msgsender_MSG, msgvalue_MSG);
[L1819]              __ret_0_ := __tmp___allowed_Ownable[this][msgsender_MSG];
[L1857]  RET         call __var_3 := isAllowed_Ownable__fail(this, msgsender_MSG, msgvalue_MSG);
[L1858]  COND FALSE  !(revert)
[L1879]  COND FALSE  !(__var_2 || __var_3)
[L1883]              __ret_0_ := __tmp__stopped_Ownable[this];
[L3641]  RET         call __var_1 := isStopped_Ownable__fail(this, msgsender_MSG, msgvalue_MSG);
[L3642]  COND FALSE  !(revert)
[L3663]  COND TRUE   !!__var_1
[L3664]              revert := true;
[L2205]  RET         call onlyWhenNotStopped_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L2206]  COND TRUE   revert
[L780]   RET         call __ret_0_ := transfer~address~uint256_BaseToken__fail(this, msgsender_MSG, msgvalue_MSG, _to_s719, _value_s719);
[L781]               assume revert || gas < 0;
[L4654]  RET         call __ret_0_transfer := transfer~address~uint256_BaseToken(this, msgsender_MSG, msgvalue_MSG, _to_s719, _value_s719);
[L4683]  RET         call CorralChoice_THECASH(this);

Loop:
[L4683]        assume true;

[2020-11-24 17:34:43,245 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 17:34:43,245 INFO  L82        PathProgramCache]: Analyzing trace with hash 1960403929, now seen corresponding path program 1 times
[2020-11-24 17:34:43,246 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 17:34:43,253 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 17:34:43,261 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 17:34:43,307 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 17:34:43,307 INFO  L82        PathProgramCache]: Analyzing trace with hash 16580, now seen corresponding path program 1 times
[2020-11-24 17:34:43,308 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 17:34:43,308 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 17:34:43,309 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 17:34:43,310 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 17:34:43,310 INFO  L82        PathProgramCache]: Analyzing trace with hash 642996204, now seen corresponding path program 1 times
[2020-11-24 17:34:43,310 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 17:34:43,317 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 17:34:43,325 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #4: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
[2020-11-24 17:34:43,648 WARN  L188               SmtUtils]: Spent 174.00 ms on a formula simplification. DAG size of input: 199 DAG size of output: 190
Garbage collection #1: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #2: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #3: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #4: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #5: 1093 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 1093 to 2179
Garbage collection #6: 2179 nodes / 0 free / 0.002s / 0.003s total
Resizing node table from 2179 to 4357
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 883 to 1759
Garbage collection #6: 1759 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 1759 to 3517
Garbage collection #7: 3517 nodes / 0 free / 0.002s / 0.004s total
Resizing node table from 3517 to 7027
[2020-11-24 17:34:43,845 WARN  L188               SmtUtils]: Spent 163.00 ms on a formula simplification. DAG size of input: 147 DAG size of output: 143
[2020-11-24 17:34:44,062 WARN  L188               SmtUtils]: Spent 215.00 ms on a formula simplification that was a NOOP. DAG size: 376
Garbage collection #1: 149 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 149 to 293
Garbage collection #2: 293 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 293 to 577
Garbage collection #3: 577 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 577 to 1153
Garbage collection #4: 1153 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 1153 to 2297
Garbage collection #5: 2297 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 2297 to 4591
Garbage collection #6: 4591 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 4591 to 9181
Garbage collection #7: 9181 nodes / 0 free / 0.002s / 0.004s total
Resizing node table from 9181 to 18353
[2020-11-24 17:34:44,359 WARN  L188               SmtUtils]: Spent 276.00 ms on a formula simplification that was a NOOP. DAG size: 296
[2020-11-24 17:34:44,965 WARN  L188               SmtUtils]: Spent 602.00 ms on a formula simplification. DAG size of input: 344 DAG size of output: 317
Garbage collection #1: 127 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 127 to 251
Garbage collection #2: 251 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 251 to 499
Garbage collection #3: 499 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 499 to 997
Garbage collection #4: 997 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 997 to 1993
Garbage collection #5: 1993 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 1993 to 3967
Garbage collection #6: 3967 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 3967 to 7933
Garbage collection #7: 7933 nodes / 0 free / 0.001s / 0.003s total
Resizing node table from 7933 to 15859
Garbage collection #8: 15859 nodes / 0 free / 0.001s / 0.004s total
Resizing node table from 15859 to 31699
Garbage collection #1: 67 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 67 to 131
Garbage collection #2: 131 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 131 to 257
Garbage collection #3: 257 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 257 to 509
Garbage collection #4: 509 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 509 to 1013
Garbage collection #5: 1013 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1013 to 2017
Garbage collection #6: 2017 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2017 to 4027
Garbage collection #7: 4027 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4027 to 8053
[2020-11-24 17:34:45,092 WARN  L188               SmtUtils]: Spent 108.00 ms on a formula simplification. DAG size of input: 173 DAG size of output: 169
[2020-11-24 17:34:45,302 WARN  L188               SmtUtils]: Spent 208.00 ms on a formula simplification that was a NOOP. DAG size: 403
Garbage collection #1: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #2: 317 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 317 to 631
Garbage collection #3: 631 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 631 to 1259
Garbage collection #4: 1259 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1259 to 2503
Garbage collection #5: 2503 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2503 to 5003
Garbage collection #6: 5003 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 5003 to 9973
[2020-11-24 17:34:45,445 WARN  L188               SmtUtils]: Spent 135.00 ms on a formula simplification that was a NOOP. DAG size: 310
[2020-11-24 17:34:45,692 WARN  L188               SmtUtils]: Spent 245.00 ms on a formula simplification. DAG size of input: 329 DAG size of output: 324
Garbage collection #1: 127 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 127 to 251
Garbage collection #2: 251 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 251 to 499
Garbage collection #3: 499 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 499 to 997
Garbage collection #4: 997 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 997 to 1993
Garbage collection #5: 1993 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1993 to 3967
Garbage collection #6: 3967 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3967 to 7933
Garbage collection #1: 67 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 67 to 131
Garbage collection #2: 131 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 131 to 257
Garbage collection #3: 257 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 257 to 509
Garbage collection #4: 509 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 509 to 1013
Garbage collection #5: 1013 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 1013 to 2017
Garbage collection #6: 2017 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 2017 to 4027
Garbage collection #1: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #2: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #3: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #4: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #5: 1759 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1759 to 3517
Garbage collection #6: 3517 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3517 to 7027
Garbage collection #1: 67 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 67 to 131
Garbage collection #2: 131 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 131 to 257
Garbage collection #3: 257 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 257 to 509
Garbage collection #4: 509 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 509 to 1013
Garbage collection #5: 1013 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1013 to 2017
Garbage collection #6: 2017 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2017 to 4027
[2020-11-24 17:34:45,999 WARN  L188               SmtUtils]: Spent 134.00 ms on a formula simplification. DAG size of input: 306 DAG size of output: 305
Garbage collection #1: 127 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 127 to 251
Garbage collection #2: 251 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 251 to 499
Garbage collection #3: 499 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 499 to 997
Garbage collection #4: 997 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 997 to 1993
Garbage collection #5: 1993 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1993 to 3967
Garbage collection #6: 3967 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3967 to 7933
Garbage collection #1: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #2: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #3: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #4: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #5: 1759 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1759 to 3517
Garbage collection #6: 3517 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3517 to 7027
[2020-11-24 17:34:46,076 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 17:34:46,081 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 24.11 05:34:46 BasicIcfg
[2020-11-24 17:34:46,081 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-24 17:34:46,081 INFO  L168              Benchmark]: Toolchain (without parser) took 6682.09 ms. Allocated memory was 1.0 GB in the beginning and 1.7 GB in the end (delta: 706.2 MB). Free memory was 935.2 MB in the beginning and 1.3 GB in the end (delta: -385.9 MB). Peak memory consumption was 644.4 MB. Max. memory is 15.3 GB.
[2020-11-24 17:34:46,082 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.16 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-24 17:34:46,082 INFO  L168              Benchmark]: Boogie Preprocessor took 99.86 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 924.5 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
[2020-11-24 17:34:46,082 INFO  L168              Benchmark]: UtopiaSpecLang took 65.56 ms. Allocated memory is still 1.0 GB. Free memory was 924.5 MB in the beginning and 919.1 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-24 17:34:46,082 INFO  L168              Benchmark]: Boogie Printer took 16.55 ms. Allocated memory is still 1.0 GB. Free memory was 919.1 MB in the beginning and 913.7 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-24 17:34:46,083 INFO  L168              Benchmark]: RCFGBuilder took 873.33 ms. Allocated memory is still 1.0 GB. Free memory was 913.7 MB in the beginning and 768.7 MB in the end (delta: 145.0 MB). Peak memory consumption was 145.0 MB. Max. memory is 15.3 GB.
[2020-11-24 17:34:46,083 INFO  L168              Benchmark]: UtopiaLTL2Aut took 41.81 ms. Allocated memory is still 1.0 GB. Free memory was 768.7 MB in the beginning and 765.1 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
[2020-11-24 17:34:46,083 INFO  L168              Benchmark]: BÃ¼chi Program Product took 1384.67 ms. Allocated memory was 1.0 GB in the beginning and 1.2 GB in the end (delta: 203.9 MB). Free memory was 765.1 MB in the beginning and 864.0 MB in the end (delta: -98.9 MB). Peak memory consumption was 148.4 MB. Max. memory is 15.3 GB.
[2020-11-24 17:34:46,084 INFO  L168              Benchmark]: BlockEncodingV2 took 127.49 ms. Allocated memory is still 1.2 GB. Free memory was 864.0 MB in the beginning and 790.4 MB in the end (delta: 73.6 MB). Peak memory consumption was 73.6 MB. Max. memory is 15.3 GB.
[2020-11-24 17:34:46,084 INFO  L168              Benchmark]: BuchiAutomizer took 4069.79 ms. Allocated memory was 1.2 GB in the beginning and 1.7 GB in the end (delta: 502.3 MB). Free memory was 790.4 MB in the beginning and 1.3 GB in the end (delta: -530.7 MB). Peak memory consumption was 295.7 MB. Max. memory is 15.3 GB.
[2020-11-24 17:34:46,086 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    4064 locations, 7507 edges
  - StatisticsResult: Encoded RCFG
    3996 locations, 7329 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.16 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 99.86 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 924.5 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 65.56 ms. Allocated memory is still 1.0 GB. Free memory was 924.5 MB in the beginning and 919.1 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 16.55 ms. Allocated memory is still 1.0 GB. Free memory was 919.1 MB in the beginning and 913.7 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * RCFGBuilder took 873.33 ms. Allocated memory is still 1.0 GB. Free memory was 913.7 MB in the beginning and 768.7 MB in the end (delta: 145.0 MB). Peak memory consumption was 145.0 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 41.81 ms. Allocated memory is still 1.0 GB. Free memory was 768.7 MB in the beginning and 765.1 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 1384.67 ms. Allocated memory was 1.0 GB in the beginning and 1.2 GB in the end (delta: 203.9 MB). Free memory was 765.1 MB in the beginning and 864.0 MB in the end (delta: -98.9 MB). Peak memory consumption was 148.4 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 127.49 ms. Allocated memory is still 1.2 GB. Free memory was 864.0 MB in the beginning and 790.4 MB in the end (delta: 73.6 MB). Peak memory consumption was 73.6 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 4069.79 ms. Allocated memory was 1.2 GB in the beginning and 1.7 GB in the end (delta: 502.3 MB). Free memory was 790.4 MB in the beginning and 1.3 GB in the end (delta: -530.7 MB). Peak memory consumption was 295.7 MB. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    1659 locations, 2315 edges
  - StatisticsResult: BuchiProgram size
    4064 locations, 7507 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 4 terminating modules (4 trivial, 0 deterministic, 0 nondeterministic) and one nonterminating remainder module.4 modules have a trivial ranking function, the largest among these consists of 6 locations. The remainder module has 738 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 4.0s and 5 iterations.  TraceHistogramMax:1. Analysis of lassos took 3.0s. Construction of modules took 0.2s. BÃ¼chi inclusion checks took 0.4s. Highest rank in rank-based complementation 0. Minimization of det autom 4. Minimization of nondet autom 0. Automata minimization 0.0s AutomataMinimizationTime, 4 MinimizatonAttempts, 29 StatesRemovedByMinimization, 2 NontrivialMinimizations. Non-live state removal took 0.0s Buchi closure took 0.0s. Biggest automaton had 738 states and ocurred in iteration 4.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 4766 SDtfs, 3349 SDslu, 3891 SDs, 0 SdLazy, 2720 SolverSat, 1458 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 0.2s Time	LassoAnalysisResults: nont1 unkn0 SFLI0 SFLT0 conc0 concLT0 SILN0 SILU4 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - TransactionCounterexample: Violation of LTL property LTL
    Found an infinite, lasso-shaped execution that violates the LTL property LTL.
Stem:
BaseToken(8).transfer~address~uint256.gas(3979001)({from : 6, _to : 6, _value : 0});
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == _to_s719 && _value_s719 <= balances_BaseToken[this][msgsender_MSG]) && _value_s719 >= 0) && _value_s719 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BaseToken[this][_to_s719] >= 0) && balances_BaseToken[this][_to_s719] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BaseToken[this][msgsender_MSG] >= 0) && balances_BaseToken[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_BaseToken0 := true;
[L2]                 call_transfer_BaseToken0 := false;
[L2]                 revert := revert_hold;
[L741]               havoc __exception;
[L742]               revert := false;
[L743]   COND TRUE   __exception
[L744]               __tmp__Balance := Balance;
[L745]               __tmp__DType := DType;
[L746]               __tmp__Alloc := Alloc;
[L747]               __tmp__balance_ADDR := balance_ADDR;
[L748]               __tmp__M_Ref_bool := M_Ref_bool;
[L749]               __tmp__sum__allowed0 := sum__allowed0;
[L750]               __tmp__M_Ref_int := M_Ref_int;
[L751]               __tmp__sum_balances1 := sum_balances1;
[L752]               __tmp__alloc_approvals_BaseToken_lvl0 := alloc_approvals_BaseToken_lvl0;
[L753]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L754]               __tmp__sum_approvals2 := sum_approvals2;
[L755]               __tmp__M_int_Ref := M_int_Ref;
[L756]               __tmp__alloc_lockup_BaseToken_lvl0 := alloc_lockup_BaseToken_lvl0;
[L757]               __tmp__sum := sum;
[L758]               __tmp__sum_lockedAddresses3 := sum_lockedAddresses3;
[L759]               __tmp__Length := Length;
[L760]               __tmp__now := now;
[L761]               __tmp__stopped_Ownable := stopped_Ownable;
[L762]               __tmp___owner_Ownable := _owner_Ownable;
[L763]               __tmp___admin_Ownable := _admin_Ownable;
[L764]               __tmp__proposedOwner_Ownable := proposedOwner_Ownable;
[L765]               __tmp___allowed_Ownable := _allowed_Ownable;
[L766]               __tmp__E18_BaseToken := E18_BaseToken;
[L767]               __tmp__decimals_BaseToken := decimals_BaseToken;
[L768]               __tmp__totalSupply_BaseToken := totalSupply_BaseToken;
[L769]               __tmp__amount_BaseToken.Lock := amount_BaseToken.Lock;
[L770]               __tmp__expiresAt_BaseToken.Lock := expiresAt_BaseToken.Lock;
[L771]               __tmp__balances_BaseToken := balances_BaseToken;
[L772]               __tmp__approvals_BaseToken := approvals_BaseToken;
[L773]               __tmp__lockup_BaseToken := lockup_BaseToken;
[L774]               __tmp__lockedAddresses_BaseToken := lockedAddresses_BaseToken;
[L775]               __tmp__bearer_Roles.Role := bearer_Roles.Role;
[L776]               __tmp___minters_MinterRole := _minters_MinterRole;
[L777]               __tmp__name_THECASH := name_THECASH;
[L778]               __tmp__symbol_THECASH := symbol_THECASH;
[L779]               __tmp__version_THECASH := version_THECASH;
[L780]   CALL        call __ret_0_ := transfer~address~uint256_BaseToken__fail(this, msgsender_MSG, msgvalue_MSG, _to_s719, _value_s719);
[L2205]  CALL        call onlyWhenNotStopped_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L3640]  COND TRUE   __tmp__DType[this] == THECASH
[L3641]  CALL        call __var_1 := isStopped_Ownable__fail(this, msgsender_MSG, msgvalue_MSG);
[L1833]  COND TRUE   __tmp__DType[this] == THECASH
[L1834]  CALL        call __var_2 := isOwner_Ownable__fail(this, msgsender_MSG, msgvalue_MSG);
[L1807]              __ret_0_ := msgsender_MSG == __tmp___owner_Ownable[this];
[L1834]  RET         call __var_2 := isOwner_Ownable__fail(this, msgsender_MSG, msgvalue_MSG);
[L1835]  COND FALSE  !(revert)
[L1856]  COND TRUE   __tmp__DType[this] == THECASH
[L1857]  CALL        call __var_3 := isAllowed_Ownable__fail(this, msgsender_MSG, msgvalue_MSG);
[L1819]              __ret_0_ := __tmp___allowed_Ownable[this][msgsender_MSG];
[L1857]  RET         call __var_3 := isAllowed_Ownable__fail(this, msgsender_MSG, msgvalue_MSG);
[L1858]  COND FALSE  !(revert)
[L1879]  COND FALSE  !(__var_2 || __var_3)
[L1883]              __ret_0_ := __tmp__stopped_Ownable[this];
[L3641]  RET         call __var_1 := isStopped_Ownable__fail(this, msgsender_MSG, msgvalue_MSG);
[L3642]  COND FALSE  !(revert)
[L3663]  COND TRUE   !!__var_1
[L3664]              revert := true;
[L2205]  RET         call onlyWhenNotStopped_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L2206]  COND TRUE   revert
[L780]   RET         call __ret_0_ := transfer~address~uint256_BaseToken__fail(this, msgsender_MSG, msgvalue_MSG, _to_s719, _value_s719);
[L781]               assume revert || gas < 0;
[L4654]  RET         call __ret_0_transfer := transfer~address~uint256_BaseToken(this, msgsender_MSG, msgvalue_MSG, _to_s719, _value_s719);

Loop:

End of lasso representation.
RESULT: Ultimate could not prove your program: Toolchain returned no result.
Received shutdown request...
