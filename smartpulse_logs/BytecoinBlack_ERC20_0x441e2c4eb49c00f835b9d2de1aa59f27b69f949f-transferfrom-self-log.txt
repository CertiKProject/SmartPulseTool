This is Ultimate 0.1.24-f1553f5-m
[2020-11-24 18:15:00,320 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-24 18:15:00,321 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-24 18:15:00,332 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-24 18:15:00,332 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-24 18:15:00,332 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-24 18:15:00,333 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-24 18:15:00,335 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-24 18:15:00,336 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-24 18:15:00,337 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-24 18:15:00,337 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-24 18:15:00,338 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-24 18:15:00,338 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-24 18:15:00,339 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-24 18:15:00,340 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-24 18:15:00,340 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-24 18:15:00,341 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-24 18:15:00,342 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-24 18:15:00,343 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-24 18:15:00,344 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-24 18:15:00,345 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-24 18:15:00,346 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-24 18:15:00,348 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-24 18:15:00,348 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-24 18:15:00,348 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-24 18:15:00,348 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-24 18:15:00,349 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-24 18:15:00,349 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-24 18:15:00,349 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-24 18:15:00,350 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-24 18:15:00,350 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-24 18:15:00,351 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-24 18:15:00,351 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-24 18:15:00,351 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-24 18:15:00,352 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-24 18:15:00,352 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-24 18:15:00,353 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-24 18:15:00,353 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-24 18:15:00,353 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-24 18:15:00,354 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-24 18:15:00,354 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-24 18:15:00,354 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-24 18:15:00,364 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-24 18:15:00,364 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-24 18:15:00,366 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-24 18:15:00,366 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-24 18:15:00,366 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-24 18:15:00,366 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-24 18:15:00,367 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-24 18:15:00,367 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-24 18:15:00,367 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-24 18:15:00,367 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-24 18:15:00,367 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-24 18:15:00,367 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-24 18:15:00,368 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-24 18:15:00,368 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-24 18:15:00,368 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-24 18:15:00,368 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-24 18:15:00,368 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-24 18:15:00,369 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-24 18:15:00,369 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-24 18:15:00,369 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-24 18:15:00,369 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-24 18:15:00,369 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-24 18:15:00,369 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-24 18:15:00,370 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-24 18:15:00,370 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-24 18:15:00,370 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-24 18:15:00,391 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-24 18:15:00,402 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-24 18:15:00,405 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-24 18:15:00,406 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-24 18:15:00,406 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-24 18:15:00,407 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/BytecoinBlack_ERC20_0x441e2c4eb49c00f835b9d2de1aa59f27b69f949f_transferfrom-self.bpl
[2020-11-24 18:15:00,407 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/BytecoinBlack_ERC20_0x441e2c4eb49c00f835b9d2de1aa59f27b69f949f_transferfrom-self.bpl'
[2020-11-24 18:15:00,476 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-24 18:15:00,477 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-24 18:15:00,478 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-24 18:15:00,478 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-24 18:15:00,478 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-24 18:15:00,495 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "BytecoinBlack_ERC20_0x441e2c4eb49c00f835b9d2de1aa59f27b69f949f_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 06:15:00" (1/1) ...
[2020-11-24 18:15:00,496 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "BytecoinBlack_ERC20_0x441e2c4eb49c00f835b9d2de1aa59f27b69f949f_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 06:15:00" (1/1) ...
[2020-11-24 18:15:00,516 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "BytecoinBlack_ERC20_0x441e2c4eb49c00f835b9d2de1aa59f27b69f949f_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 06:15:00" (1/1) ...
[2020-11-24 18:15:00,517 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "BytecoinBlack_ERC20_0x441e2c4eb49c00f835b9d2de1aa59f27b69f949f_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 06:15:00" (1/1) ...
[2020-11-24 18:15:00,531 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "BytecoinBlack_ERC20_0x441e2c4eb49c00f835b9d2de1aa59f27b69f949f_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 06:15:00" (1/1) ...
[2020-11-24 18:15:00,537 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "BytecoinBlack_ERC20_0x441e2c4eb49c00f835b9d2de1aa59f27b69f949f_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 06:15:00" (1/1) ...
[2020-11-24 18:15:00,541 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "BytecoinBlack_ERC20_0x441e2c4eb49c00f835b9d2de1aa59f27b69f949f_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 06:15:00" (1/1) ...
[2020-11-24 18:15:00,548 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-24 18:15:00,548 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-24 18:15:00,549 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-24 18:15:00,551 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-24 18:15:00,554 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "BytecoinBlack_ERC20_0x441e2c4eb49c00f835b9d2de1aa59f27b69f949f_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 06:15:00" (1/1) ...
[2020-11-24 18:15:00,577 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(TokenERC20.transferFrom(from, to, value), (p1 != from || p2 != msg.sender) && from == to && value <= balances_TokenERC20[this][from] && value <= allowed_TokenERC20[this][from][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_TokenERC20[this][to] >= 0 && balances_TokenERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_TokenERC20[this][from] >= 0 &&  balances_TokenERC20[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && allowed_TokenERC20[this][from][msg.sender] >= 0 && allowed_TokenERC20[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(TokenERC20.transferFrom(from, to, value), return == true && allowed_TokenERC20[this][from][msg.sender] == old(allowed_TokenERC20[this][from][msg.sender]) - value && _totalSupply_TokenERC20[this] == old(_totalSupply_TokenERC20[this]) && balances_TokenERC20[this] == old(balances_TokenERC20[this]) && allowed_TokenERC20[this][p1][p2] == old(allowed_TokenERC20[this][p1][p2]) && aSBlock_BytecoinBlack_ERC20[this] == old(aSBlock_BytecoinBlack_ERC20[this]) && aEBlock_BytecoinBlack_ERC20[this] == old(aEBlock_BytecoinBlack_ERC20[this]) && aCap_BytecoinBlack_ERC20[this] == old(aCap_BytecoinBlack_ERC20[this]) && aTot_BytecoinBlack_ERC20[this] == old(aTot_BytecoinBlack_ERC20[this]) && aAmt_BytecoinBlack_ERC20[this] == old(aAmt_BytecoinBlack_ERC20[this]) && sSBlock_BytecoinBlack_ERC20[this] == old(sSBlock_BytecoinBlack_ERC20[this]) && sEBlock_BytecoinBlack_ERC20[this] == old(sEBlock_BytecoinBlack_ERC20[this]) && sCap_BytecoinBlack_ERC20[this] == old(sCap_BytecoinBlack_ERC20[this]) && sTot_BytecoinBlack_ERC20[this] == old(sTot_BytecoinBlack_ERC20[this]) && sChunk_BytecoinBlack_ERC20[this] == old(sChunk_BytecoinBlack_ERC20[this]) && sPrice_BytecoinBlack_ERC20[this] == old(sPrice_BytecoinBlack_ERC20[this]) && symbol_TokenERC20[this] == old(symbol_TokenERC20[this]) && name_TokenERC20[this] == old(name_TokenERC20[this]) && decimals_TokenERC20[this] == old(decimals_TokenERC20[this]) && owner_Owned[this] == old(owner_Owned[this]) && newOwner_Owned[this] == old(newOwner_Owned[this]))))
[2020-11-24 18:15:00,582 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(TokenERC20.transferFrom(from, to, value), (p1 != from || p2 != msg.sender) && from == to && value <= balances_TokenERC20[this][from] && value <= allowed_TokenERC20[this][from][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_TokenERC20[this][to] >= 0 && balances_TokenERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_TokenERC20[this][from] >= 0 &&  balances_TokenERC20[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && allowed_TokenERC20[this][from][msg.sender] >= 0 && allowed_TokenERC20[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(TokenERC20.transferFrom(from, to, value), return == true && allowed_TokenERC20[this][from][msg.sender] == old(allowed_TokenERC20[this][from][msg.sender]) - value && _totalSupply_TokenERC20[this] == old(_totalSupply_TokenERC20[this]) && balances_TokenERC20[this] == old(balances_TokenERC20[this]) && allowed_TokenERC20[this][p1][p2] == old(allowed_TokenERC20[this][p1][p2]) && aSBlock_BytecoinBlack_ERC20[this] == old(aSBlock_BytecoinBlack_ERC20[this]) && aEBlock_BytecoinBlack_ERC20[this] == old(aEBlock_BytecoinBlack_ERC20[this]) && aCap_BytecoinBlack_ERC20[this] == old(aCap_BytecoinBlack_ERC20[this]) && aTot_BytecoinBlack_ERC20[this] == old(aTot_BytecoinBlack_ERC20[this]) && aAmt_BytecoinBlack_ERC20[this] == old(aAmt_BytecoinBlack_ERC20[this]) && sSBlock_BytecoinBlack_ERC20[this] == old(sSBlock_BytecoinBlack_ERC20[this]) && sEBlock_BytecoinBlack_ERC20[this] == old(sEBlock_BytecoinBlack_ERC20[this]) && sCap_BytecoinBlack_ERC20[this] == old(sCap_BytecoinBlack_ERC20[this]) && sTot_BytecoinBlack_ERC20[this] == old(sTot_BytecoinBlack_ERC20[this]) && sChunk_BytecoinBlack_ERC20[this] == old(sChunk_BytecoinBlack_ERC20[this]) && sPrice_BytecoinBlack_ERC20[this] == old(sPrice_BytecoinBlack_ERC20[this]) && symbol_TokenERC20[this] == old(symbol_TokenERC20[this]) && name_TokenERC20[this] == old(name_TokenERC20[this]) && decimals_TokenERC20[this] == old(decimals_TokenERC20[this]) && owner_Owned[this] == old(owner_Owned[this]) && newOwner_Owned[this] == old(newOwner_Owned[this]))))
[2020-11-24 18:15:00,590 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(TokenERC20.transferFrom(from, to, value), (p1 != from || p2 != msg.sender) && from == to && value <= balances_TokenERC20[this][from] && value <= allowed_TokenERC20[this][from][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_TokenERC20[this][to] >= 0 && balances_TokenERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_TokenERC20[this][from] >= 0 &&  balances_TokenERC20[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && allowed_TokenERC20[this][from][msg.sender] >= 0 && allowed_TokenERC20[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(TokenERC20.transferFrom(from, to, value), return == true && allowed_TokenERC20[this][from][msg.sender] == old(allowed_TokenERC20[this][from][msg.sender]) - value && _totalSupply_TokenERC20[this] == old(_totalSupply_TokenERC20[this]) && balances_TokenERC20[this] == old(balances_TokenERC20[this]) && allowed_TokenERC20[this][p1][p2] == old(allowed_TokenERC20[this][p1][p2]) && aSBlock_BytecoinBlack_ERC20[this] == old(aSBlock_BytecoinBlack_ERC20[this]) && aEBlock_BytecoinBlack_ERC20[this] == old(aEBlock_BytecoinBlack_ERC20[this]) && aCap_BytecoinBlack_ERC20[this] == old(aCap_BytecoinBlack_ERC20[this]) && aTot_BytecoinBlack_ERC20[this] == old(aTot_BytecoinBlack_ERC20[this]) && aAmt_BytecoinBlack_ERC20[this] == old(aAmt_BytecoinBlack_ERC20[this]) && sSBlock_BytecoinBlack_ERC20[this] == old(sSBlock_BytecoinBlack_ERC20[this]) && sEBlock_BytecoinBlack_ERC20[this] == old(sEBlock_BytecoinBlack_ERC20[this]) && sCap_BytecoinBlack_ERC20[this] == old(sCap_BytecoinBlack_ERC20[this]) && sTot_BytecoinBlack_ERC20[this] == old(sTot_BytecoinBlack_ERC20[this]) && sChunk_BytecoinBlack_ERC20[this] == old(sChunk_BytecoinBlack_ERC20[this]) && sPrice_BytecoinBlack_ERC20[this] == old(sPrice_BytecoinBlack_ERC20[this]) && symbol_TokenERC20[this] == old(symbol_TokenERC20[this]) && name_TokenERC20[this] == old(name_TokenERC20[this]) && decimals_TokenERC20[this] == old(decimals_TokenERC20[this]) && owner_Owned[this] == old(owner_Owned[this]) && newOwner_Owned[this] == old(newOwner_Owned[this]))))
[2020-11-24 18:15:00,596 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( ( ( ( ( p1!=from_s468 || p2!=msg.sender ) && from_s468==to_s468 ) && tokens_s468<=balances_TokenERC20[this][from_s468] ) && tokens_s468<=allowed_TokenERC20[this][from_s468][msg.sender] ) && tokens_s468>=0 ) && tokens_s468<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && balances_TokenERC20[this][to_s468]>=0 ) && balances_TokenERC20[this][to_s468]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && balances_TokenERC20[this][from_s468]>=0 ) && balances_TokenERC20[this][from_s468]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && allowed_TokenERC20[this][from_s468][msg.sender]>=0 ) && allowed_TokenERC20[this][from_s468][msg.sender]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICOR,BinaryExpression[COMPNEQ,IdentifierExpression[p1,GLOBAL],IdentifierExpression[from_s468,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]],BinaryExpression[COMPNEQ,IdentifierExpression[p2,GLOBAL],IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],BinaryExpression[COMPEQ,IdentifierExpression[from_s468,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>],IdentifierExpression[to_s468,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],BinaryExpression[COMPLEQ,IdentifierExpression[tokens_s468,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>],ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],[IdentifierExpression[from_s468,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]]]],BinaryExpression[COMPLEQ,IdentifierExpression[tokens_s468,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>],ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowed_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],[IdentifierExpression[from_s468,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]]]],BinaryExpression[COMPGEQ,IdentifierExpression[tokens_s468,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>],IntegerLiteral[0]]],BinaryExpression[COMPLT,IdentifierExpression[tokens_s468,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],[IdentifierExpression[to_s468,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],[IdentifierExpression[to_s468,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],[IdentifierExpression[from_s468,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],[IdentifierExpression[from_s468,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowed_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],[IdentifierExpression[from_s468,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowed_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],[IdentifierExpression[from_s468,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]]
[2020-11-24 18:15:00,600 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( success_s468==true && allowed_TokenERC20[this][from_s468][msg.sender]==( ( old(allowed_TokenERC20[this][from_s468][msg.sender]) ) - tokens_s468 ) ) && _totalSupply_TokenERC20[this]==( old(_totalSupply_TokenERC20[this]) ) ) && balances_TokenERC20[this]==( old(balances_TokenERC20[this]) ) ) && allowed_TokenERC20[this][p1][p2]==( old(allowed_TokenERC20[this][p1][p2]) ) ) && aSBlock_BytecoinBlack_ERC20[this]==( old(aSBlock_BytecoinBlack_ERC20[this]) ) ) && aEBlock_BytecoinBlack_ERC20[this]==( old(aEBlock_BytecoinBlack_ERC20[this]) ) ) && aCap_BytecoinBlack_ERC20[this]==( old(aCap_BytecoinBlack_ERC20[this]) ) ) && aTot_BytecoinBlack_ERC20[this]==( old(aTot_BytecoinBlack_ERC20[this]) ) ) && aAmt_BytecoinBlack_ERC20[this]==( old(aAmt_BytecoinBlack_ERC20[this]) ) ) && sSBlock_BytecoinBlack_ERC20[this]==( old(sSBlock_BytecoinBlack_ERC20[this]) ) ) && sEBlock_BytecoinBlack_ERC20[this]==( old(sEBlock_BytecoinBlack_ERC20[this]) ) ) && sCap_BytecoinBlack_ERC20[this]==( old(sCap_BytecoinBlack_ERC20[this]) ) ) && sTot_BytecoinBlack_ERC20[this]==( old(sTot_BytecoinBlack_ERC20[this]) ) ) && sChunk_BytecoinBlack_ERC20[this]==( old(sChunk_BytecoinBlack_ERC20[this]) ) ) && sPrice_BytecoinBlack_ERC20[this]==( old(sPrice_BytecoinBlack_ERC20[this]) ) ) && symbol_TokenERC20[this]==( old(symbol_TokenERC20[this]) ) ) && name_TokenERC20[this]==( old(name_TokenERC20[this]) ) ) && decimals_TokenERC20[this]==( old(decimals_TokenERC20[this]) ) ) && owner_Owned[this]==( old(owner_Owned[this]) ) ) && newOwner_Owned[this]==( old(newOwner_Owned[this]) ) ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[success_s468,<IMPLEMENTATION_OUTPARAM,transferFrom~address~address~uint256_TokenERC20>],BooleanLiteral[true]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowed_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],[IdentifierExpression[from_s468,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],BinaryExpression[ARITHMINUS,UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowed_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],[IdentifierExpression[from_s468,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]]],IdentifierExpression[tokens_s468,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_totalSupply_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_totalSupply_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[balances_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[balances_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowed_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],[IdentifierExpression[p1,GLOBAL]]],[IdentifierExpression[p2,GLOBAL]]],UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowed_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],[IdentifierExpression[p1,GLOBAL]]],[IdentifierExpression[p2,GLOBAL]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[aSBlock_BytecoinBlack_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[aSBlock_BytecoinBlack_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[aEBlock_BytecoinBlack_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[aEBlock_BytecoinBlack_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[aCap_BytecoinBlack_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[aCap_BytecoinBlack_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[aTot_BytecoinBlack_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[aTot_BytecoinBlack_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[aAmt_BytecoinBlack_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[aAmt_BytecoinBlack_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[sSBlock_BytecoinBlack_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[sSBlock_BytecoinBlack_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[sEBlock_BytecoinBlack_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[sEBlock_BytecoinBlack_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[sCap_BytecoinBlack_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[sCap_BytecoinBlack_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[sTot_BytecoinBlack_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[sTot_BytecoinBlack_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[sChunk_BytecoinBlack_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[sChunk_BytecoinBlack_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[sPrice_BytecoinBlack_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[sPrice_BytecoinBlack_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[symbol_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[symbol_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[name_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[name_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[decimals_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[decimals_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[owner_Owned,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[owner_Owned,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[newOwner_Owned,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[newOwner_Owned,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]]]]]
[2020-11-24 18:15:00,605 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(TokenERC20.transferFrom(from, to, value), (p1 != from || p2 != msg.sender) && from == to && value <= balances_TokenERC20[this][from] && value <= allowed_TokenERC20[this][from][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_TokenERC20[this][to] >= 0 && balances_TokenERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_TokenERC20[this][from] >= 0 &&  balances_TokenERC20[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && allowed_TokenERC20[this][from][msg.sender] >= 0 && allowed_TokenERC20[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(TokenERC20.transferFrom(from, to, value), return == true && allowed_TokenERC20[this][from][msg.sender] == old(allowed_TokenERC20[this][from][msg.sender]) - value && _totalSupply_TokenERC20[this] == old(_totalSupply_TokenERC20[this]) && balances_TokenERC20[this] == old(balances_TokenERC20[this]) && allowed_TokenERC20[this][p1][p2] == old(allowed_TokenERC20[this][p1][p2]) && aSBlock_BytecoinBlack_ERC20[this] == old(aSBlock_BytecoinBlack_ERC20[this]) && aEBlock_BytecoinBlack_ERC20[this] == old(aEBlock_BytecoinBlack_ERC20[this]) && aCap_BytecoinBlack_ERC20[this] == old(aCap_BytecoinBlack_ERC20[this]) && aTot_BytecoinBlack_ERC20[this] == old(aTot_BytecoinBlack_ERC20[this]) && aAmt_BytecoinBlack_ERC20[this] == old(aAmt_BytecoinBlack_ERC20[this]) && sSBlock_BytecoinBlack_ERC20[this] == old(sSBlock_BytecoinBlack_ERC20[this]) && sEBlock_BytecoinBlack_ERC20[this] == old(sEBlock_BytecoinBlack_ERC20[this]) && sCap_BytecoinBlack_ERC20[this] == old(sCap_BytecoinBlack_ERC20[this]) && sTot_BytecoinBlack_ERC20[this] == old(sTot_BytecoinBlack_ERC20[this]) && sChunk_BytecoinBlack_ERC20[this] == old(sChunk_BytecoinBlack_ERC20[this]) && sPrice_BytecoinBlack_ERC20[this] == old(sPrice_BytecoinBlack_ERC20[this]) && symbol_TokenERC20[this] == old(symbol_TokenERC20[this]) && name_TokenERC20[this] == old(name_TokenERC20[this]) && decimals_TokenERC20[this] == old(decimals_TokenERC20[this]) && owner_Owned[this] == old(owner_Owned[this]) && newOwner_Owned[this] == old(newOwner_Owned[this]))))
[2020-11-24 18:15:00,605 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_transferFrom_TokenERC200) ==> ( <>AP(success_transferFrom_TokenERC200) ) ) )
Executed UtopiaSpecLang
[2020-11-24 18:15:00,615 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 06:15:00 PropertyContainer
[2020-11-24 18:15:00,616 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-24 18:15:00,616 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-24 18:15:00,616 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-24 18:15:00,616 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-24 18:15:00,617 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "BytecoinBlack_ERC20_0x441e2c4eb49c00f835b9d2de1aa59f27b69f949f_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 06:15:00" (1/2) ...
[2020-11-24 18:15:00,617 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-24 18:15:00,617 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-24 18:15:00,631 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 06:15:00" (2/2) ...
[2020-11-24 18:15:00,631 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-24 18:15:00,631 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-24 18:15:00,631 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-24 18:15:00,631 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-24 18:15:00,632 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "BytecoinBlack_ERC20_0x441e2c4eb49c00f835b9d2de1aa59f27b69f949f_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 06:15:00" (1/2) ...
[2020-11-24 18:15:00,687 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-24 18:15:00,687 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__success
[2020-11-24 18:15:00,687 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__success
[2020-11-24 18:15:00,687 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_TokenERC20
[2020-11-24 18:15:00,687 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_TokenERC20
[2020-11-24 18:15:00,687 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_TokenERC20
[2020-11-24 18:15:00,687 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_TokenERC20
[2020-11-24 18:15:00,688 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_TokenERC20
[2020-11-24 18:15:00,688 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_TokenERC20
[2020-11-24 18:15:00,688 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_TokenERC20
[2020-11-24 18:15:00,688 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_TokenERC20
[2020-11-24 18:15:00,688 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_TokenERC20
[2020-11-24 18:15:00,688 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_TokenERC20
[2020-11-24 18:15:00,688 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_TokenERC20
[2020-11-24 18:15:00,688 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_TokenERC20
[2020-11-24 18:15:00,688 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-24 18:15:00,688 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-24 18:15:00,688 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-24 18:15:00,689 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__success
[2020-11-24 18:15:00,689 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_SafeMath
[2020-11-24 18:15:00,689 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_SafeMath
[2020-11-24 18:15:00,689 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20Interface
[2020-11-24 18:15:00,689 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20Interface
[2020-11-24 18:15:00,689 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ApproveAndCallFallBack
[2020-11-24 18:15:00,689 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ApproveAndCallFallBack
[2020-11-24 18:15:00,689 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_Owned
[2020-11-24 18:15:00,689 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_Owned
[2020-11-24 18:15:00,689 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_TokenERC20
[2020-11-24 18:15:00,689 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_TokenERC20
[2020-11-24 18:15:00,690 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_BytecoinBlack_ERC20
[2020-11-24 18:15:00,690 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-24 18:15:00,690 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-24 18:15:00,690 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__fail
[2020-11-24 18:15:00,690 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-24 18:15:00,690 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_TokenERC20__success
[2020-11-24 18:15:00,690 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_TokenERC20__fail
[2020-11-24 18:15:00,690 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_TokenERC20__success
[2020-11-24 18:15:00,690 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_TokenERC20__fail
[2020-11-24 18:15:00,690 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_TokenERC20__success
[2020-11-24 18:15:00,690 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_TokenERC20__fail
[2020-11-24 18:15:00,691 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_TokenERC20__success
[2020-11-24 18:15:00,691 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_TokenERC20__fail
[2020-11-24 18:15:00,691 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_TokenERC20__success
[2020-11-24 18:15:00,691 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_TokenERC20__fail
[2020-11-24 18:15:00,691 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_TokenERC20__success
[2020-11-24 18:15:00,691 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_TokenERC20__fail
[2020-11-24 18:15:00,691 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-24 18:15:00,691 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-24 18:15:00,691 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-24 18:15:00,691 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__fail
[2020-11-24 18:15:00,691 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-24 18:15:00,691 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-24 18:15:00,692 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__fail
[2020-11-24 18:15:00,692 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__success
[2020-11-24 18:15:00,692 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-24 18:15:00,692 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__success
[2020-11-24 18:15:00,692 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_TokenERC20__fail
[2020-11-24 18:15:00,692 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_TokenERC20__success
[2020-11-24 18:15:00,692 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_TokenERC20__fail
[2020-11-24 18:15:00,692 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_TokenERC20__success
[2020-11-24 18:15:00,692 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_TokenERC20__fail
[2020-11-24 18:15:00,692 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_TokenERC20__success
[2020-11-24 18:15:00,692 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_TokenERC20__fail
[2020-11-24 18:15:00,692 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_TokenERC20__success
[2020-11-24 18:15:00,692 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_TokenERC20__fail
[2020-11-24 18:15:00,693 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_TokenERC20__success
[2020-11-24 18:15:00,693 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_TokenERC20__fail
[2020-11-24 18:15:00,693 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_TokenERC20__success
[2020-11-24 18:15:00,693 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-24 18:15:00,693 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-24 18:15:00,693 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-24 18:15:00,693 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-24 18:15:00,693 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-24 18:15:00,693 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-24 18:15:00,693 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__fail
[2020-11-24 18:15:00,693 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__success
[2020-11-24 18:15:00,693 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_SafeMath
[2020-11-24 18:15:00,694 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_SafeMath
[2020-11-24 18:15:00,694 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20Interface
[2020-11-24 18:15:00,694 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20Interface
[2020-11-24 18:15:00,694 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ApproveAndCallFallBack
[2020-11-24 18:15:00,694 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ApproveAndCallFallBack
[2020-11-24 18:15:00,694 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_Owned
[2020-11-24 18:15:00,694 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_Owned
[2020-11-24 18:15:00,694 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_TokenERC20
[2020-11-24 18:15:00,694 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_TokenERC20
[2020-11-24 18:15:00,694 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_BytecoinBlack_ERC20
[2020-11-24 18:15:00,694 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-24 18:15:00,694 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-24 18:15:00,695 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-24 18:15:00,896 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 18:15:01,017 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 18:15:01,017 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 18:15:01,018 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 18:15:01,209 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-24 18:15:01,209 INFO  L286             CfgBuilder]: Removed 6 assue(true) statements.
[2020-11-24 18:15:01,211 INFO  L202        PluginConnector]: Adding new model BytecoinBlack_ERC20_0x441e2c4eb49c00f835b9d2de1aa59f27b69f949f_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 06:15:01 BoogieIcfgContainer
[2020-11-24 18:15:01,212 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 06:15:00" (2/2) ...
[2020-11-24 18:15:01,212 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-24 18:15:01,212 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@61005c60 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 06:15:01, skipping insertion in model container
[2020-11-24 18:15:01,212 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-24 18:15:01,213 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-24 18:15:01,213 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-24 18:15:01,215 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-24 18:15:01,215 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "BytecoinBlack_ERC20_0x441e2c4eb49c00f835b9d2de1aa59f27b69f949f_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 06:15:00" (1/3) ...
[2020-11-24 18:15:01,216 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@1cc02869 and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 06:15:01, skipping insertion in model container
[2020-11-24 18:15:01,216 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 06:15:00" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-24 18:15:01,255 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 06:15:01 NWAContainer
[2020-11-24 18:15:01,255 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-24 18:15:01,255 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-24 18:15:01,256 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-24 18:15:01,257 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-24 18:15:01,258 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "BytecoinBlack_ERC20_0x441e2c4eb49c00f835b9d2de1aa59f27b69f949f_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 06:15:01" (3/4) ...
[2020-11-24 18:15:01,258 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@f124ff9 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 06:15:01, skipping insertion in model container
[2020-11-24 18:15:01,259 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 06:15:01" (4/4) ...
[2020-11-24 18:15:01,265 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-24 18:15:01,270 INFO  L110   BuchiProductObserver]: Initial RCFG 753 locations, 914 edges
[2020-11-24 18:15:01,270 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-24 18:15:01,285 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-24 18:15:02,194 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-24 18:15:02,196 INFO  L110   BuchiProductObserver]: BuchiProgram size 1742 locations, 2951 edges
[2020-11-24 18:15:02,196 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 06:15:02 BoogieIcfgContainer
[2020-11-24 18:15:02,196 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-24 18:15:02,197 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-24 18:15:02,197 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-24 18:15:02,198 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-24 18:15:02,199 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 06:15:02" (1/1) ...
[2020-11-24 18:15:02,239 INFO  L313           BlockEncoder]: Initial Icfg 1742 locations, 2951 edges
[2020-11-24 18:15:02,239 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-24 18:15:02,239 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-24 18:15:02,240 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-24 18:15:02,240 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-24 18:15:02,247 INFO  L70    emoveInfeasibleEdges]: Removed 51 edges and 15 locations because of local infeasibility
[2020-11-24 18:15:02,250 INFO  L70        RemoveSinkStates]: Removed 2 edges and 1 locations by removing sink states
[2020-11-24 18:15:02,255 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-24 18:15:02,257 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-24 18:15:02,258 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-24 18:15:02,258 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-24 18:15:02,260 INFO  L313           BlockEncoder]: Encoded RCFG 1708 locations, 2872 edges
[2020-11-24 18:15:02,260 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 24.11 06:15:02 BasicIcfg
[2020-11-24 18:15:02,261 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-24 18:15:02,261 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-24 18:15:02,261 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-24 18:15:02,263 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-24 18:15:02,263 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 18:15:02,263 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "BytecoinBlack_ERC20_0x441e2c4eb49c00f835b9d2de1aa59f27b69f949f_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 06:15:00" (1/6) ...
[2020-11-24 18:15:02,266 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@26b6fc1a and model type BytecoinBlack_ERC20_0x441e2c4eb49c00f835b9d2de1aa59f27b69f949f_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 24.11 06:15:02, skipping insertion in model container
[2020-11-24 18:15:02,266 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 18:15:02,266 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 06:15:00" (2/6) ...
[2020-11-24 18:15:02,266 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@26b6fc1a and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 24.11 06:15:02, skipping insertion in model container
[2020-11-24 18:15:02,266 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 18:15:02,266 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "BytecoinBlack_ERC20_0x441e2c4eb49c00f835b9d2de1aa59f27b69f949f_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 06:15:01" (3/6) ...
[2020-11-24 18:15:02,267 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@26b6fc1a and model type BytecoinBlack_ERC20_0x441e2c4eb49c00f835b9d2de1aa59f27b69f949f_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 24.11 06:15:02, skipping insertion in model container
[2020-11-24 18:15:02,267 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 18:15:02,267 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 06:15:01" (4/6) ...
[2020-11-24 18:15:02,267 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@26b6fc1a and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 24.11 06:15:02, skipping insertion in model container
[2020-11-24 18:15:02,267 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 18:15:02,267 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 06:15:02" (5/6) ...
[2020-11-24 18:15:02,267 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@26b6fc1a and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 24.11 06:15:02, skipping insertion in model container
[2020-11-24 18:15:02,267 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 18:15:02,268 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 24.11 06:15:02" (6/6) ...
[2020-11-24 18:15:02,269 INFO  L404   chiAutomizerObserver]: Analyzing ICFG BytecoinBlack_ERC20_0x441e2c4eb49c00f835b9d2de1aa59f27b69f949f_transferfrom-self.bpl_BEv2
[2020-11-24 18:15:02,302 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-24 18:15:02,302 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-24 18:15:02,302 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-24 18:15:02,302 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-24 18:15:02,302 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-24 18:15:02,302 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-24 18:15:02,302 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-24 18:15:02,302 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-24 18:15:02,302 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-24 18:15:02,318 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1708 states.
[2020-11-24 18:15:02,351 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 18:15:02,351 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 18:15:02,351 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 18:15:02,360 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 18:15:02,360 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
[2020-11-24 18:15:02,360 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-24 18:15:02,360 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1708 states.
[2020-11-24 18:15:02,369 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 18:15:02,369 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 18:15:02,369 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 18:15:02,371 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 18:15:02,371 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L3]                 success_transferFrom_TokenERC200 := false;
[L3]                 call_transferFrom_TokenERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L2249]              assume null == 0;
[L2250]  CALL        call this := FreshRefGenerator__success();
[L897]               havoc newRef;
[L898]               assume Alloc[newRef] == false;
[L899]               Alloc[newRef] := true;
[L900]               assume newRef != null;
[L2250]  RET         call this := FreshRefGenerator__success();
[L2251]              assume now >= 0;
[L2252]              assume DType[this] == BytecoinBlack_ERC20;
[L2253]              assume !revert && gas >= 0;
[L2254]  CALL        call CorralChoice_BytecoinBlack_ERC20(this);
[L2131]              havoc msgsender_MSG;
[L2132]              havoc msgvalue_MSG;
[L2133]              havoc choice;
[L2134]              havoc __ret_0_totalSupply;
[L2135]              havoc tokenOwner_s338;
[L2136]              havoc balance_s338;
[L2137]              havoc tokenOwner_s484;
[L2138]              havoc spender_s484;
[L2139]              havoc remaining_s484;
[L2140]              havoc to_s381;
[L2141]              havoc tokens_s381;
[L2142]              havoc success_s381;
[L2143]              havoc spender_s409;
[L2144]              havoc tokens_s409;
[L2145]              havoc success_s409;
[L2146]              havoc from_s468;
[L2147]              havoc to_s468;
[L2148]              havoc tokens_s468;
[L2149]              havoc success_s468;
[L2150]              havoc __ret_0_owner;
[L2151]              havoc __ret_0_newOwner;
[L2152]              havoc _newOwner_s217;
[L2153]              havoc __ret_0_symbol;
[L2154]              havoc __ret_0_name;
[L2155]              havoc __ret_0_decimals;
[L2156]              havoc spender_s527;
[L2157]              havoc tokens_s527;
[L2158]              havoc data_s527;
[L2159]              havoc success_s527;
[L2160]              havoc __ret_0_aSBlock;
[L2161]              havoc __ret_0_aEBlock;
[L2162]              havoc __ret_0_aCap;
[L2163]              havoc __ret_0_aTot;
[L2164]              havoc __ret_0_aAmt;
[L2165]              havoc __ret_0_sSBlock;
[L2166]              havoc __ret_0_sEBlock;
[L2167]              havoc __ret_0_sCap;
[L2168]              havoc __ret_0_sTot;
[L2169]              havoc __ret_0_sChunk;
[L2170]              havoc __ret_0_sPrice;
[L2171]              havoc _refer_s687;
[L2172]              havoc success_s687;
[L2173]              havoc _refer_s847;
[L2174]              havoc success_s847;
[L2175]              havoc StartBlock_s868;
[L2176]              havoc EndBlock_s868;
[L2177]              havoc DropCap_s868;
[L2178]              havoc DropCount_s868;
[L2179]              havoc DropAmount_s868;
[L2180]              havoc StartBlock_s892;
[L2181]              havoc EndBlock_s892;
[L2182]              havoc SaleCap_s892;
[L2183]              havoc SaleCount_s892;
[L2184]              havoc ChunkSize_s892;
[L2185]              havoc SalePrice_s892;
[L2186]              havoc _aSBlock_s926;
[L2187]              havoc _aEBlock_s926;
[L2188]              havoc _aAmt_s926;
[L2189]              havoc _aCap_s926;
[L2190]              havoc _sSBlock_s966;
[L2191]              havoc _sEBlock_s966;
[L2192]              havoc _sChunk_s966;
[L2193]              havoc _sPrice_s966;
[L2194]              havoc _sCap_s966;
[L2195]              havoc tmpNow;
[L2196]              havoc gas;
[L2197]              assume gas > 4000000 && gas <= 8000000;
[L2198]              tmpNow := now;
[L2199]              havoc now;
[L2200]              assume now > tmpNow;
[L2201]              assume msgsender_MSG != null;
[L2202]  COND TRUE   choice == 6
[L2203]              gas := gas - 21000;
[L2204]  COND FALSE  !(gas >= 0)
[L2254]  RET         call CorralChoice_BytecoinBlack_ERC20(this);

Loop:
[L2254]        assume true;

[2020-11-24 18:15:02,387 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 18:15:02,387 INFO  L82        PathProgramCache]: Analyzing trace with hash -1607326838, now seen corresponding path program 1 times
[2020-11-24 18:15:02,391 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 18:15:02,408 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 18:15:02,469 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 18:15:02,471 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 18:15:02,472 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-24 18:15:02,476 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 18:15:02,488 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-24 18:15:02,488 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-24 18:15:02,489 INFO  L87              Difference]: Start difference. First operand 1708 states. Second operand 3 states.
[2020-11-24 18:15:02,693 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 18:15:02,693 INFO  L93              Difference]: Finished difference Result 678 states and 736 transitions.
[2020-11-24 18:15:02,694 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-24 18:15:02,695 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 678 states and 736 transitions.
[2020-11-24 18:15:02,701 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 18:15:02,707 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 678 states to 230 states and 243 transitions.
[2020-11-24 18:15:02,708 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 4
[2020-11-24 18:15:02,709 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 165
[2020-11-24 18:15:02,710 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 230 states and 243 transitions.
[2020-11-24 18:15:02,712 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 18:15:02,712 INFO  L728         BuchiCegarLoop]: Abstraction has 230 states and 243 transitions.
[2020-11-24 18:15:02,727 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 230 states and 243 transitions.
[2020-11-24 18:15:02,742 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 230 to 230.
[2020-11-24 18:15:02,743 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 230 states.
[2020-11-24 18:15:02,744 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 230 states to 230 states and 243 transitions.
[2020-11-24 18:15:02,744 INFO  L751         BuchiCegarLoop]: Abstraction has 230 states and 243 transitions.
[2020-11-24 18:15:02,745 INFO  L631         BuchiCegarLoop]: Abstraction has 230 states and 243 transitions.
[2020-11-24 18:15:02,745 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-24 18:15:02,745 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 230 states and 243 transitions.
[2020-11-24 18:15:02,746 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 18:15:02,746 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 18:15:02,746 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 18:15:02,748 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 18:15:02,748 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L3]                 success_transferFrom_TokenERC200 := false;
[L3]                 call_transferFrom_TokenERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L2249]              assume null == 0;
[L2250]  CALL        call this := FreshRefGenerator__success();
[L897]               havoc newRef;
[L898]               assume Alloc[newRef] == false;
[L899]               Alloc[newRef] := true;
[L900]               assume newRef != null;
[L2250]  RET         call this := FreshRefGenerator__success();
[L2251]              assume now >= 0;
[L2252]              assume DType[this] == BytecoinBlack_ERC20;
[L2253]              assume !revert && gas >= 0;
[L2254]  CALL        call CorralChoice_BytecoinBlack_ERC20(this);
[L2131]              havoc msgsender_MSG;
[L2132]              havoc msgvalue_MSG;
[L2133]              havoc choice;
[L2134]              havoc __ret_0_totalSupply;
[L2135]              havoc tokenOwner_s338;
[L2136]              havoc balance_s338;
[L2137]              havoc tokenOwner_s484;
[L2138]              havoc spender_s484;
[L2139]              havoc remaining_s484;
[L2140]              havoc to_s381;
[L2141]              havoc tokens_s381;
[L2142]              havoc success_s381;
[L2143]              havoc spender_s409;
[L2144]              havoc tokens_s409;
[L2145]              havoc success_s409;
[L2146]              havoc from_s468;
[L2147]              havoc to_s468;
[L2148]              havoc tokens_s468;
[L2149]              havoc success_s468;
[L2150]              havoc __ret_0_owner;
[L2151]              havoc __ret_0_newOwner;
[L2152]              havoc _newOwner_s217;
[L2153]              havoc __ret_0_symbol;
[L2154]              havoc __ret_0_name;
[L2155]              havoc __ret_0_decimals;
[L2156]              havoc spender_s527;
[L2157]              havoc tokens_s527;
[L2158]              havoc data_s527;
[L2159]              havoc success_s527;
[L2160]              havoc __ret_0_aSBlock;
[L2161]              havoc __ret_0_aEBlock;
[L2162]              havoc __ret_0_aCap;
[L2163]              havoc __ret_0_aTot;
[L2164]              havoc __ret_0_aAmt;
[L2165]              havoc __ret_0_sSBlock;
[L2166]              havoc __ret_0_sEBlock;
[L2167]              havoc __ret_0_sCap;
[L2168]              havoc __ret_0_sTot;
[L2169]              havoc __ret_0_sChunk;
[L2170]              havoc __ret_0_sPrice;
[L2171]              havoc _refer_s687;
[L2172]              havoc success_s687;
[L2173]              havoc _refer_s847;
[L2174]              havoc success_s847;
[L2175]              havoc StartBlock_s868;
[L2176]              havoc EndBlock_s868;
[L2177]              havoc DropCap_s868;
[L2178]              havoc DropCount_s868;
[L2179]              havoc DropAmount_s868;
[L2180]              havoc StartBlock_s892;
[L2181]              havoc EndBlock_s892;
[L2182]              havoc SaleCap_s892;
[L2183]              havoc SaleCount_s892;
[L2184]              havoc ChunkSize_s892;
[L2185]              havoc SalePrice_s892;
[L2186]              havoc _aSBlock_s926;
[L2187]              havoc _aEBlock_s926;
[L2188]              havoc _aAmt_s926;
[L2189]              havoc _aCap_s926;
[L2190]              havoc _sSBlock_s966;
[L2191]              havoc _sEBlock_s966;
[L2192]              havoc _sChunk_s966;
[L2193]              havoc _sPrice_s966;
[L2194]              havoc _sCap_s966;
[L2195]              havoc tmpNow;
[L2196]              havoc gas;
[L2197]              assume gas > 4000000 && gas <= 8000000;
[L2198]              tmpNow := now;
[L2199]              havoc now;
[L2200]              assume now > tmpNow;
[L2201]              assume msgsender_MSG != null;
[L2202]  COND FALSE  !(choice == 6)
[L2208]  COND FALSE  !(choice == 5)
[L2214]  COND FALSE  !(choice == 4)
[L2220]  COND FALSE  !(choice == 3)
[L2227]  COND FALSE  !(choice == 2)
[L2234]  COND TRUE   choice == 1
[L2235]              gas := gas - 21000;
[L2236]  COND TRUE   gas >= 0
[L2237]              assume tokens_s468 >= 0 && tokens_s468 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2238]              assume msgvalue_MSG == 0;
[L2239]  CALL        call success_s468 := transferFrom~address~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, from_s468, to_s468, tokens_s468);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != from_s468 || p2 != msgsender_MSG) && from_s468 == to_s468) && tokens_s468 <= balances_TokenERC20[this][from_s468]) && tokens_s468 <= allowed_TokenERC20[this][from_s468][msgsender_MSG]) && tokens_s468 >= 0) && tokens_s468 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_TokenERC20[this][to_s468] >= 0) && balances_TokenERC20[this][to_s468] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_TokenERC20[this][from_s468] >= 0) && balances_TokenERC20[this][from_s468] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_TokenERC20[this][from_s468][msgsender_MSG] >= 0) && allowed_TokenERC20[this][from_s468][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_TokenERC200 := true;
[L3]                 call_transferFrom_TokenERC200 := false;
[L3]                 revert := revert_hold;
[L402]               havoc __exception;
[L403]               revert := false;
[L404]   COND FALSE  !(__exception)
[L438]   CALL        call success_s468 := transferFrom~address~address~uint256_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s468, to_s468, tokens_s468);
[L1076]  CALL        call __var_5 := sub~uint256~uint256_SafeMath__success(this, this, 0, balances_TokenERC20[this][from_s468], tokens_s468);
[L932]   COND TRUE   !(b_s45 <= a_s45)
[L933]               revert := true;
[L1076]  RET         call __var_5 := sub~uint256~uint256_SafeMath__success(this, this, 0, balances_TokenERC20[this][from_s468], tokens_s468);
[L1077]  COND TRUE   revert
[L438]   RET         call success_s468 := transferFrom~address~address~uint256_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s468, to_s468, tokens_s468);
[L439]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !((((((((((((((((((((success_s468 == true && allowed_TokenERC20[this][from_s468][msgsender_MSG] == old(allowed_TokenERC20[this][from_s468][msgsender_MSG]) - tokens_s468) && _totalSupply_TokenERC20[this] == old(_totalSupply_TokenERC20[this])) && balances_TokenERC20[this] == old(balances_TokenERC20[this])) && allowed_TokenERC20[this][p1][p2] == old(allowed_TokenERC20[this][p1][p2])) && aSBlock_BytecoinBlack_ERC20[this] == old(aSBlock_BytecoinBlack_ERC20[this])) && aEBlock_BytecoinBlack_ERC20[this] == old(aEBlock_BytecoinBlack_ERC20[this])) && aCap_BytecoinBlack_ERC20[this] == old(aCap_BytecoinBlack_ERC20[this])) && aTot_BytecoinBlack_ERC20[this] == old(aTot_BytecoinBlack_ERC20[this])) && aAmt_BytecoinBlack_ERC20[this] == old(aAmt_BytecoinBlack_ERC20[this])) && sSBlock_BytecoinBlack_ERC20[this] == old(sSBlock_BytecoinBlack_ERC20[this])) && sEBlock_BytecoinBlack_ERC20[this] == old(sEBlock_BytecoinBlack_ERC20[this])) && sCap_BytecoinBlack_ERC20[this] == old(sCap_BytecoinBlack_ERC20[this])) && sTot_BytecoinBlack_ERC20[this] == old(sTot_BytecoinBlack_ERC20[this])) && sChunk_BytecoinBlack_ERC20[this] == old(sChunk_BytecoinBlack_ERC20[this])) && sPrice_BytecoinBlack_ERC20[this] == old(sPrice_BytecoinBlack_ERC20[this])) && symbol_TokenERC20[this] == old(symbol_TokenERC20[this])) && name_TokenERC20[this] == old(name_TokenERC20[this])) && decimals_TokenERC20[this] == old(decimals_TokenERC20[this])) && owner_Owned[this] == old(owner_Owned[this])) && newOwner_Owned[this] == old(newOwner_Owned[this]));
[L3]                 revert := revert_hold;
[L2239]  RET         call success_s468 := transferFrom~address~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, from_s468, to_s468, tokens_s468);
[L2254]  RET         call CorralChoice_BytecoinBlack_ERC20(this);

Loop:
[L2254]        assume true;

[2020-11-24 18:15:02,751 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 18:15:02,751 INFO  L82        PathProgramCache]: Analyzing trace with hash -1412315208, now seen corresponding path program 1 times
[2020-11-24 18:15:02,752 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 18:15:02,767 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 18:15:02,790 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 18:15:02,791 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 18:15:02,791 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-24 18:15:02,792 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 18:15:02,792 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-24 18:15:02,792 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-24 18:15:02,793 INFO  L87              Difference]: Start difference. First operand 230 states and 243 transitions. cyclomatic complexity: 14 Second operand 3 states.
[2020-11-24 18:15:02,802 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 18:15:02,802 INFO  L93              Difference]: Finished difference Result 265 states and 279 transitions.
[2020-11-24 18:15:02,802 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-24 18:15:02,803 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 265 states and 279 transitions.
[2020-11-24 18:15:02,804 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 2
[2020-11-24 18:15:02,806 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 265 states to 249 states and 258 transitions.
[2020-11-24 18:15:02,807 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 181
[2020-11-24 18:15:02,807 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 186
[2020-11-24 18:15:02,807 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 249 states and 258 transitions.
[2020-11-24 18:15:02,808 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 18:15:02,808 INFO  L728         BuchiCegarLoop]: Abstraction has 249 states and 258 transitions.
[2020-11-24 18:15:02,809 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 249 states and 258 transitions.
[2020-11-24 18:15:02,814 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 249 to 238.
[2020-11-24 18:15:02,814 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 238 states.
[2020-11-24 18:15:02,815 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 238 states to 238 states and 247 transitions.
[2020-11-24 18:15:02,815 INFO  L751         BuchiCegarLoop]: Abstraction has 238 states and 247 transitions.
[2020-11-24 18:15:02,815 INFO  L631         BuchiCegarLoop]: Abstraction has 238 states and 247 transitions.
[2020-11-24 18:15:02,815 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-24 18:15:02,815 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 238 states and 247 transitions.
[2020-11-24 18:15:02,816 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 18:15:02,817 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 18:15:02,817 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 18:15:02,818 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 18:15:02,818 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L3]                 success_transferFrom_TokenERC200 := false;
[L3]                 call_transferFrom_TokenERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L2249]              assume null == 0;
[L2250]  CALL        call this := FreshRefGenerator__success();
[L897]               havoc newRef;
[L898]               assume Alloc[newRef] == false;
[L899]               Alloc[newRef] := true;
[L900]               assume newRef != null;
[L2250]  RET         call this := FreshRefGenerator__success();
[L2251]              assume now >= 0;
[L2252]              assume DType[this] == BytecoinBlack_ERC20;
[L2253]              assume !revert && gas >= 0;
[L2254]  CALL        call CorralChoice_BytecoinBlack_ERC20(this);
[L2131]              havoc msgsender_MSG;
[L2132]              havoc msgvalue_MSG;
[L2133]              havoc choice;
[L2134]              havoc __ret_0_totalSupply;
[L2135]              havoc tokenOwner_s338;
[L2136]              havoc balance_s338;
[L2137]              havoc tokenOwner_s484;
[L2138]              havoc spender_s484;
[L2139]              havoc remaining_s484;
[L2140]              havoc to_s381;
[L2141]              havoc tokens_s381;
[L2142]              havoc success_s381;
[L2143]              havoc spender_s409;
[L2144]              havoc tokens_s409;
[L2145]              havoc success_s409;
[L2146]              havoc from_s468;
[L2147]              havoc to_s468;
[L2148]              havoc tokens_s468;
[L2149]              havoc success_s468;
[L2150]              havoc __ret_0_owner;
[L2151]              havoc __ret_0_newOwner;
[L2152]              havoc _newOwner_s217;
[L2153]              havoc __ret_0_symbol;
[L2154]              havoc __ret_0_name;
[L2155]              havoc __ret_0_decimals;
[L2156]              havoc spender_s527;
[L2157]              havoc tokens_s527;
[L2158]              havoc data_s527;
[L2159]              havoc success_s527;
[L2160]              havoc __ret_0_aSBlock;
[L2161]              havoc __ret_0_aEBlock;
[L2162]              havoc __ret_0_aCap;
[L2163]              havoc __ret_0_aTot;
[L2164]              havoc __ret_0_aAmt;
[L2165]              havoc __ret_0_sSBlock;
[L2166]              havoc __ret_0_sEBlock;
[L2167]              havoc __ret_0_sCap;
[L2168]              havoc __ret_0_sTot;
[L2169]              havoc __ret_0_sChunk;
[L2170]              havoc __ret_0_sPrice;
[L2171]              havoc _refer_s687;
[L2172]              havoc success_s687;
[L2173]              havoc _refer_s847;
[L2174]              havoc success_s847;
[L2175]              havoc StartBlock_s868;
[L2176]              havoc EndBlock_s868;
[L2177]              havoc DropCap_s868;
[L2178]              havoc DropCount_s868;
[L2179]              havoc DropAmount_s868;
[L2180]              havoc StartBlock_s892;
[L2181]              havoc EndBlock_s892;
[L2182]              havoc SaleCap_s892;
[L2183]              havoc SaleCount_s892;
[L2184]              havoc ChunkSize_s892;
[L2185]              havoc SalePrice_s892;
[L2186]              havoc _aSBlock_s926;
[L2187]              havoc _aEBlock_s926;
[L2188]              havoc _aAmt_s926;
[L2189]              havoc _aCap_s926;
[L2190]              havoc _sSBlock_s966;
[L2191]              havoc _sEBlock_s966;
[L2192]              havoc _sChunk_s966;
[L2193]              havoc _sPrice_s966;
[L2194]              havoc _sCap_s966;
[L2195]              havoc tmpNow;
[L2196]              havoc gas;
[L2197]              assume gas > 4000000 && gas <= 8000000;
[L2198]              tmpNow := now;
[L2199]              havoc now;
[L2200]              assume now > tmpNow;
[L2201]              assume msgsender_MSG != null;
[L2202]  COND FALSE  !(choice == 6)
[L2208]  COND FALSE  !(choice == 5)
[L2214]  COND FALSE  !(choice == 4)
[L2220]  COND FALSE  !(choice == 3)
[L2227]  COND FALSE  !(choice == 2)
[L2234]  COND TRUE   choice == 1
[L2235]              gas := gas - 21000;
[L2236]  COND TRUE   gas >= 0
[L2237]              assume tokens_s468 >= 0 && tokens_s468 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2238]              assume msgvalue_MSG == 0;
[L2239]  CALL        call success_s468 := transferFrom~address~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, from_s468, to_s468, tokens_s468);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != from_s468 || p2 != msgsender_MSG) && from_s468 == to_s468) && tokens_s468 <= balances_TokenERC20[this][from_s468]) && tokens_s468 <= allowed_TokenERC20[this][from_s468][msgsender_MSG]) && tokens_s468 >= 0) && tokens_s468 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_TokenERC20[this][to_s468] >= 0) && balances_TokenERC20[this][to_s468] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_TokenERC20[this][from_s468] >= 0) && balances_TokenERC20[this][from_s468] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_TokenERC20[this][from_s468][msgsender_MSG] >= 0) && allowed_TokenERC20[this][from_s468][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_TokenERC200 := true;
[L3]                 call_transferFrom_TokenERC200 := false;
[L3]                 revert := revert_hold;
[L402]               havoc __exception;
[L403]               revert := false;
[L404]   COND TRUE   __exception
[L405]               __tmp__Balance := Balance;
[L406]               __tmp__DType := DType;
[L407]               __tmp__Alloc := Alloc;
[L408]               __tmp__balance_ADDR := balance_ADDR;
[L409]               __tmp__M_Ref_int := M_Ref_int;
[L410]               __tmp__sum_balances0 := sum_balances0;
[L411]               __tmp__alloc_allowed_TokenERC20_lvl0 := alloc_allowed_TokenERC20_lvl0;
[L412]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L413]               __tmp__sum_allowed1 := sum_allowed1;
[L414]               __tmp__Length := Length;
[L415]               __tmp__now := now;
[L416]               __tmp__owner_Owned := owner_Owned;
[L417]               __tmp__newOwner_Owned := newOwner_Owned;
[L418]               __tmp__symbol_TokenERC20 := symbol_TokenERC20;
[L419]               __tmp__name_TokenERC20 := name_TokenERC20;
[L420]               __tmp__decimals_TokenERC20 := decimals_TokenERC20;
[L421]               __tmp___totalSupply_TokenERC20 := _totalSupply_TokenERC20;
[L422]               __tmp__balances_TokenERC20 := balances_TokenERC20;
[L423]               __tmp__allowed_TokenERC20 := allowed_TokenERC20;
[L424]               __tmp__aSBlock_BytecoinBlack_ERC20 := aSBlock_BytecoinBlack_ERC20;
[L425]               __tmp__aEBlock_BytecoinBlack_ERC20 := aEBlock_BytecoinBlack_ERC20;
[L426]               __tmp__aCap_BytecoinBlack_ERC20 := aCap_BytecoinBlack_ERC20;
[L427]               __tmp__aTot_BytecoinBlack_ERC20 := aTot_BytecoinBlack_ERC20;
[L428]               __tmp__aAmt_BytecoinBlack_ERC20 := aAmt_BytecoinBlack_ERC20;
[L429]               __tmp__sSBlock_BytecoinBlack_ERC20 := sSBlock_BytecoinBlack_ERC20;
[L430]               __tmp__sEBlock_BytecoinBlack_ERC20 := sEBlock_BytecoinBlack_ERC20;
[L431]               __tmp__sCap_BytecoinBlack_ERC20 := sCap_BytecoinBlack_ERC20;
[L432]               __tmp__sTot_BytecoinBlack_ERC20 := sTot_BytecoinBlack_ERC20;
[L433]               __tmp__sChunk_BytecoinBlack_ERC20 := sChunk_BytecoinBlack_ERC20;
[L434]               __tmp__sPrice_BytecoinBlack_ERC20 := sPrice_BytecoinBlack_ERC20;
[L435]   CALL        call success_s468 := transferFrom~address~address~uint256_TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, from_s468, to_s468, tokens_s468);
[L1046]  CALL        call __var_5 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __tmp__balances_TokenERC20[this][from_s468], tokens_s468);
[L923]   COND TRUE   !(b_s45 <= a_s45)
[L924]               revert := true;
[L1046]  RET         call __var_5 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __tmp__balances_TokenERC20[this][from_s468], tokens_s468);
[L1047]  COND TRUE   revert
[L435]   RET         call success_s468 := transferFrom~address~address~uint256_TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, from_s468, to_s468, tokens_s468);
[L436]               assume revert || gas < 0;
[L2239]  RET         call success_s468 := transferFrom~address~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, from_s468, to_s468, tokens_s468);
[L2254]  RET         call CorralChoice_BytecoinBlack_ERC20(this);

Loop:
[L2254]        assume true;

[2020-11-24 18:15:02,821 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 18:15:02,821 INFO  L82        PathProgramCache]: Analyzing trace with hash -1269185744, now seen corresponding path program 1 times
[2020-11-24 18:15:02,822 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 18:15:02,835 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 18:15:02,910 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 18:15:02,910 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 18:15:02,910 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [7] imperfect sequences [] total 7
[2020-11-24 18:15:02,910 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 18:15:02,910 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 7 interpolants.
[2020-11-24 18:15:02,911 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=11, Invalid=31, Unknown=0, NotChecked=0, Total=42
[2020-11-24 18:15:02,911 INFO  L87              Difference]: Start difference. First operand 238 states and 247 transitions. cyclomatic complexity: 10 Second operand 7 states.
[2020-11-24 18:15:02,984 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 18:15:02,984 INFO  L93              Difference]: Finished difference Result 253 states and 261 transitions.
[2020-11-24 18:15:02,984 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 8 states. 
[2020-11-24 18:15:02,984 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 253 states and 261 transitions.
[2020-11-24 18:15:02,985 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 2
[2020-11-24 18:15:02,987 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 253 states to 249 states and 257 transitions.
[2020-11-24 18:15:02,987 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 186
[2020-11-24 18:15:02,987 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 186
[2020-11-24 18:15:02,987 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 249 states and 257 transitions.
[2020-11-24 18:15:02,988 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 18:15:02,988 INFO  L728         BuchiCegarLoop]: Abstraction has 249 states and 257 transitions.
[2020-11-24 18:15:02,988 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 249 states and 257 transitions.
[2020-11-24 18:15:02,991 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 249 to 236.
[2020-11-24 18:15:02,991 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 236 states.
[2020-11-24 18:15:02,991 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 236 states to 236 states and 244 transitions.
[2020-11-24 18:15:02,991 INFO  L751         BuchiCegarLoop]: Abstraction has 236 states and 244 transitions.
[2020-11-24 18:15:02,991 INFO  L631         BuchiCegarLoop]: Abstraction has 236 states and 244 transitions.
[2020-11-24 18:15:02,991 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-24 18:15:02,991 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 236 states and 244 transitions.
[2020-11-24 18:15:02,992 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 18:15:02,992 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 18:15:02,992 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 18:15:02,993 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 18:15:02,993 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L3]                 success_transferFrom_TokenERC200 := false;
[L3]                 call_transferFrom_TokenERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L2249]              assume null == 0;
[L2250]  CALL        call this := FreshRefGenerator__success();
[L897]               havoc newRef;
[L898]               assume Alloc[newRef] == false;
[L899]               Alloc[newRef] := true;
[L900]               assume newRef != null;
[L2250]  RET         call this := FreshRefGenerator__success();
[L2251]              assume now >= 0;
[L2252]              assume DType[this] == BytecoinBlack_ERC20;
[L2253]              assume !revert && gas >= 0;
[L2254]  CALL        call CorralChoice_BytecoinBlack_ERC20(this);
[L2131]              havoc msgsender_MSG;
[L2132]              havoc msgvalue_MSG;
[L2133]              havoc choice;
[L2134]              havoc __ret_0_totalSupply;
[L2135]              havoc tokenOwner_s338;
[L2136]              havoc balance_s338;
[L2137]              havoc tokenOwner_s484;
[L2138]              havoc spender_s484;
[L2139]              havoc remaining_s484;
[L2140]              havoc to_s381;
[L2141]              havoc tokens_s381;
[L2142]              havoc success_s381;
[L2143]              havoc spender_s409;
[L2144]              havoc tokens_s409;
[L2145]              havoc success_s409;
[L2146]              havoc from_s468;
[L2147]              havoc to_s468;
[L2148]              havoc tokens_s468;
[L2149]              havoc success_s468;
[L2150]              havoc __ret_0_owner;
[L2151]              havoc __ret_0_newOwner;
[L2152]              havoc _newOwner_s217;
[L2153]              havoc __ret_0_symbol;
[L2154]              havoc __ret_0_name;
[L2155]              havoc __ret_0_decimals;
[L2156]              havoc spender_s527;
[L2157]              havoc tokens_s527;
[L2158]              havoc data_s527;
[L2159]              havoc success_s527;
[L2160]              havoc __ret_0_aSBlock;
[L2161]              havoc __ret_0_aEBlock;
[L2162]              havoc __ret_0_aCap;
[L2163]              havoc __ret_0_aTot;
[L2164]              havoc __ret_0_aAmt;
[L2165]              havoc __ret_0_sSBlock;
[L2166]              havoc __ret_0_sEBlock;
[L2167]              havoc __ret_0_sCap;
[L2168]              havoc __ret_0_sTot;
[L2169]              havoc __ret_0_sChunk;
[L2170]              havoc __ret_0_sPrice;
[L2171]              havoc _refer_s687;
[L2172]              havoc success_s687;
[L2173]              havoc _refer_s847;
[L2174]              havoc success_s847;
[L2175]              havoc StartBlock_s868;
[L2176]              havoc EndBlock_s868;
[L2177]              havoc DropCap_s868;
[L2178]              havoc DropCount_s868;
[L2179]              havoc DropAmount_s868;
[L2180]              havoc StartBlock_s892;
[L2181]              havoc EndBlock_s892;
[L2182]              havoc SaleCap_s892;
[L2183]              havoc SaleCount_s892;
[L2184]              havoc ChunkSize_s892;
[L2185]              havoc SalePrice_s892;
[L2186]              havoc _aSBlock_s926;
[L2187]              havoc _aEBlock_s926;
[L2188]              havoc _aAmt_s926;
[L2189]              havoc _aCap_s926;
[L2190]              havoc _sSBlock_s966;
[L2191]              havoc _sEBlock_s966;
[L2192]              havoc _sChunk_s966;
[L2193]              havoc _sPrice_s966;
[L2194]              havoc _sCap_s966;
[L2195]              havoc tmpNow;
[L2196]              havoc gas;
[L2197]              assume gas > 4000000 && gas <= 8000000;
[L2198]              tmpNow := now;
[L2199]              havoc now;
[L2200]              assume now > tmpNow;
[L2201]              assume msgsender_MSG != null;
[L2202]  COND FALSE  !(choice == 6)
[L2208]  COND FALSE  !(choice == 5)
[L2214]  COND FALSE  !(choice == 4)
[L2220]  COND FALSE  !(choice == 3)
[L2227]  COND FALSE  !(choice == 2)
[L2234]  COND TRUE   choice == 1
[L2235]              gas := gas - 21000;
[L2236]  COND TRUE   gas >= 0
[L2237]              assume tokens_s468 >= 0 && tokens_s468 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2238]              assume msgvalue_MSG == 0;
[L2239]  CALL        call success_s468 := transferFrom~address~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, from_s468, to_s468, tokens_s468);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != from_s468 || p2 != msgsender_MSG) && from_s468 == to_s468) && tokens_s468 <= balances_TokenERC20[this][from_s468]) && tokens_s468 <= allowed_TokenERC20[this][from_s468][msgsender_MSG]) && tokens_s468 >= 0) && tokens_s468 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_TokenERC20[this][to_s468] >= 0) && balances_TokenERC20[this][to_s468] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_TokenERC20[this][from_s468] >= 0) && balances_TokenERC20[this][from_s468] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_TokenERC20[this][from_s468][msgsender_MSG] >= 0) && allowed_TokenERC20[this][from_s468][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_TokenERC200 := true;
[L3]                 call_transferFrom_TokenERC200 := false;
[L3]                 revert := revert_hold;
[L402]               havoc __exception;
[L403]               revert := false;
[L404]   COND TRUE   __exception
[L405]               __tmp__Balance := Balance;
[L406]               __tmp__DType := DType;
[L407]               __tmp__Alloc := Alloc;
[L408]               __tmp__balance_ADDR := balance_ADDR;
[L409]               __tmp__M_Ref_int := M_Ref_int;
[L410]               __tmp__sum_balances0 := sum_balances0;
[L411]               __tmp__alloc_allowed_TokenERC20_lvl0 := alloc_allowed_TokenERC20_lvl0;
[L412]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L413]               __tmp__sum_allowed1 := sum_allowed1;
[L414]               __tmp__Length := Length;
[L415]               __tmp__now := now;
[L416]               __tmp__owner_Owned := owner_Owned;
[L417]               __tmp__newOwner_Owned := newOwner_Owned;
[L418]               __tmp__symbol_TokenERC20 := symbol_TokenERC20;
[L419]               __tmp__name_TokenERC20 := name_TokenERC20;
[L420]               __tmp__decimals_TokenERC20 := decimals_TokenERC20;
[L421]               __tmp___totalSupply_TokenERC20 := _totalSupply_TokenERC20;
[L422]               __tmp__balances_TokenERC20 := balances_TokenERC20;
[L423]               __tmp__allowed_TokenERC20 := allowed_TokenERC20;
[L424]               __tmp__aSBlock_BytecoinBlack_ERC20 := aSBlock_BytecoinBlack_ERC20;
[L425]               __tmp__aEBlock_BytecoinBlack_ERC20 := aEBlock_BytecoinBlack_ERC20;
[L426]               __tmp__aCap_BytecoinBlack_ERC20 := aCap_BytecoinBlack_ERC20;
[L427]               __tmp__aTot_BytecoinBlack_ERC20 := aTot_BytecoinBlack_ERC20;
[L428]               __tmp__aAmt_BytecoinBlack_ERC20 := aAmt_BytecoinBlack_ERC20;
[L429]               __tmp__sSBlock_BytecoinBlack_ERC20 := sSBlock_BytecoinBlack_ERC20;
[L430]               __tmp__sEBlock_BytecoinBlack_ERC20 := sEBlock_BytecoinBlack_ERC20;
[L431]               __tmp__sCap_BytecoinBlack_ERC20 := sCap_BytecoinBlack_ERC20;
[L432]               __tmp__sTot_BytecoinBlack_ERC20 := sTot_BytecoinBlack_ERC20;
[L433]               __tmp__sChunk_BytecoinBlack_ERC20 := sChunk_BytecoinBlack_ERC20;
[L434]               __tmp__sPrice_BytecoinBlack_ERC20 := sPrice_BytecoinBlack_ERC20;
[L435]   CALL        call success_s468 := transferFrom~address~address~uint256_TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, from_s468, to_s468, tokens_s468);
[L1046]  CALL        call __var_5 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __tmp__balances_TokenERC20[this][from_s468], tokens_s468);
[L923]   COND FALSE  !(!(b_s45 <= a_s45))
[L927]               c_s45 := (a_s45 - b_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1046]  RET         call __var_5 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __tmp__balances_TokenERC20[this][from_s468], tokens_s468);
[L1047]  COND TRUE   revert
[L435]   RET         call success_s468 := transferFrom~address~address~uint256_TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, from_s468, to_s468, tokens_s468);
[L436]               assume revert || gas < 0;
[L2239]  RET         call success_s468 := transferFrom~address~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, from_s468, to_s468, tokens_s468);
[L2254]  RET         call CorralChoice_BytecoinBlack_ERC20(this);

Loop:
[L2254]        assume true;

[2020-11-24 18:15:02,995 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 18:15:02,995 INFO  L82        PathProgramCache]: Analyzing trace with hash 1246908933, now seen corresponding path program 1 times
[2020-11-24 18:15:02,996 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 18:15:03,002 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 18:15:03,021 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 18:15:03,022 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 18:15:03,022 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [5] imperfect sequences [] total 5
[2020-11-24 18:15:03,022 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 18:15:03,022 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 5 interpolants.
[2020-11-24 18:15:03,022 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=9, Invalid=11, Unknown=0, NotChecked=0, Total=20
[2020-11-24 18:15:03,022 INFO  L87              Difference]: Start difference. First operand 236 states and 244 transitions. cyclomatic complexity: 9 Second operand 5 states.
[2020-11-24 18:15:03,032 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 18:15:03,033 INFO  L93              Difference]: Finished difference Result 247 states and 252 transitions.
[2020-11-24 18:15:03,033 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-24 18:15:03,033 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 247 states and 252 transitions.
[2020-11-24 18:15:03,034 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 2
[2020-11-24 18:15:03,034 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 247 states to 247 states and 252 transitions.
[2020-11-24 18:15:03,034 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 184
[2020-11-24 18:15:03,035 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 184
[2020-11-24 18:15:03,035 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 247 states and 252 transitions.
[2020-11-24 18:15:03,035 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 18:15:03,035 INFO  L728         BuchiCegarLoop]: Abstraction has 247 states and 252 transitions.
[2020-11-24 18:15:03,035 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 247 states and 252 transitions.
[2020-11-24 18:15:03,037 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 247 to 236.
[2020-11-24 18:15:03,037 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 236 states.
[2020-11-24 18:15:03,038 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 236 states to 236 states and 241 transitions.
[2020-11-24 18:15:03,038 INFO  L751         BuchiCegarLoop]: Abstraction has 236 states and 241 transitions.
[2020-11-24 18:15:03,038 INFO  L631         BuchiCegarLoop]: Abstraction has 236 states and 241 transitions.
[2020-11-24 18:15:03,038 INFO  L445         BuchiCegarLoop]: ======== Iteration 5============
[2020-11-24 18:15:03,038 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 236 states and 241 transitions.
[2020-11-24 18:15:03,039 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 18:15:03,039 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 18:15:03,039 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 18:15:03,040 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 18:15:03,040 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L3]                 success_transferFrom_TokenERC200 := false;
[L3]                 call_transferFrom_TokenERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L2249]              assume null == 0;
[L2250]  CALL        call this := FreshRefGenerator__success();
[L897]               havoc newRef;
[L898]               assume Alloc[newRef] == false;
[L899]               Alloc[newRef] := true;
[L900]               assume newRef != null;
[L2250]  RET         call this := FreshRefGenerator__success();
[L2251]              assume now >= 0;
[L2252]              assume DType[this] == BytecoinBlack_ERC20;
[L2253]              assume !revert && gas >= 0;
[L2254]  CALL        call CorralChoice_BytecoinBlack_ERC20(this);
[L2131]              havoc msgsender_MSG;
[L2132]              havoc msgvalue_MSG;
[L2133]              havoc choice;
[L2134]              havoc __ret_0_totalSupply;
[L2135]              havoc tokenOwner_s338;
[L2136]              havoc balance_s338;
[L2137]              havoc tokenOwner_s484;
[L2138]              havoc spender_s484;
[L2139]              havoc remaining_s484;
[L2140]              havoc to_s381;
[L2141]              havoc tokens_s381;
[L2142]              havoc success_s381;
[L2143]              havoc spender_s409;
[L2144]              havoc tokens_s409;
[L2145]              havoc success_s409;
[L2146]              havoc from_s468;
[L2147]              havoc to_s468;
[L2148]              havoc tokens_s468;
[L2149]              havoc success_s468;
[L2150]              havoc __ret_0_owner;
[L2151]              havoc __ret_0_newOwner;
[L2152]              havoc _newOwner_s217;
[L2153]              havoc __ret_0_symbol;
[L2154]              havoc __ret_0_name;
[L2155]              havoc __ret_0_decimals;
[L2156]              havoc spender_s527;
[L2157]              havoc tokens_s527;
[L2158]              havoc data_s527;
[L2159]              havoc success_s527;
[L2160]              havoc __ret_0_aSBlock;
[L2161]              havoc __ret_0_aEBlock;
[L2162]              havoc __ret_0_aCap;
[L2163]              havoc __ret_0_aTot;
[L2164]              havoc __ret_0_aAmt;
[L2165]              havoc __ret_0_sSBlock;
[L2166]              havoc __ret_0_sEBlock;
[L2167]              havoc __ret_0_sCap;
[L2168]              havoc __ret_0_sTot;
[L2169]              havoc __ret_0_sChunk;
[L2170]              havoc __ret_0_sPrice;
[L2171]              havoc _refer_s687;
[L2172]              havoc success_s687;
[L2173]              havoc _refer_s847;
[L2174]              havoc success_s847;
[L2175]              havoc StartBlock_s868;
[L2176]              havoc EndBlock_s868;
[L2177]              havoc DropCap_s868;
[L2178]              havoc DropCount_s868;
[L2179]              havoc DropAmount_s868;
[L2180]              havoc StartBlock_s892;
[L2181]              havoc EndBlock_s892;
[L2182]              havoc SaleCap_s892;
[L2183]              havoc SaleCount_s892;
[L2184]              havoc ChunkSize_s892;
[L2185]              havoc SalePrice_s892;
[L2186]              havoc _aSBlock_s926;
[L2187]              havoc _aEBlock_s926;
[L2188]              havoc _aAmt_s926;
[L2189]              havoc _aCap_s926;
[L2190]              havoc _sSBlock_s966;
[L2191]              havoc _sEBlock_s966;
[L2192]              havoc _sChunk_s966;
[L2193]              havoc _sPrice_s966;
[L2194]              havoc _sCap_s966;
[L2195]              havoc tmpNow;
[L2196]              havoc gas;
[L2197]              assume gas > 4000000 && gas <= 8000000;
[L2198]              tmpNow := now;
[L2199]              havoc now;
[L2200]              assume now > tmpNow;
[L2201]              assume msgsender_MSG != null;
[L2202]  COND FALSE  !(choice == 6)
[L2208]  COND FALSE  !(choice == 5)
[L2214]  COND FALSE  !(choice == 4)
[L2220]  COND FALSE  !(choice == 3)
[L2227]  COND FALSE  !(choice == 2)
[L2234]  COND TRUE   choice == 1
[L2235]              gas := gas - 21000;
[L2236]  COND TRUE   gas >= 0
[L2237]              assume tokens_s468 >= 0 && tokens_s468 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2238]              assume msgvalue_MSG == 0;
[L2239]  CALL        call success_s468 := transferFrom~address~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, from_s468, to_s468, tokens_s468);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != from_s468 || p2 != msgsender_MSG) && from_s468 == to_s468) && tokens_s468 <= balances_TokenERC20[this][from_s468]) && tokens_s468 <= allowed_TokenERC20[this][from_s468][msgsender_MSG]) && tokens_s468 >= 0) && tokens_s468 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_TokenERC20[this][to_s468] >= 0) && balances_TokenERC20[this][to_s468] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_TokenERC20[this][from_s468] >= 0) && balances_TokenERC20[this][from_s468] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_TokenERC20[this][from_s468][msgsender_MSG] >= 0) && allowed_TokenERC20[this][from_s468][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_TokenERC200 := true;
[L3]                 call_transferFrom_TokenERC200 := false;
[L3]                 revert := revert_hold;
[L402]               havoc __exception;
[L403]               revert := false;
[L404]   COND FALSE  !(__exception)
[L438]   CALL        call success_s468 := transferFrom~address~address~uint256_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s468, to_s468, tokens_s468);
[L1076]  CALL        call __var_5 := sub~uint256~uint256_SafeMath__success(this, this, 0, balances_TokenERC20[this][from_s468], tokens_s468);
[L932]   COND FALSE  !(!(b_s45 <= a_s45))
[L936]               c_s45 := (a_s45 - b_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1076]  RET         call __var_5 := sub~uint256~uint256_SafeMath__success(this, this, 0, balances_TokenERC20[this][from_s468], tokens_s468);
[L1077]  COND FALSE  !(revert)
[L1080]              sum_balances0[this] := sum_balances0[this] - balances_TokenERC20[this][from_s468];
[L1081]              balances_TokenERC20[this][from_s468] := __var_5;
[L1082]              sum_balances0[this] := sum_balances0[this] + balances_TokenERC20[this][from_s468];
[L1083]  CALL        call __var_6 := sub~uint256~uint256_SafeMath__success(this, this, 0, allowed_TokenERC20[this][from_s468][msgsender_MSG], tokens_s468);
[L932]   COND FALSE  !(!(b_s45 <= a_s45))
[L936]               c_s45 := (a_s45 - b_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1083]  RET         call __var_6 := sub~uint256~uint256_SafeMath__success(this, this, 0, allowed_TokenERC20[this][from_s468][msgsender_MSG], tokens_s468);
[L1084]  COND FALSE  !(revert)
[L1087]              sum_allowed1[from_s468] := sum_allowed1[from_s468] - allowed_TokenERC20[this][from_s468][msgsender_MSG];
[L1088]              allowed_TokenERC20[this][from_s468][msgsender_MSG] := __var_6;
[L1089]              sum_allowed1[from_s468] := sum_allowed1[from_s468] + allowed_TokenERC20[this][from_s468][msgsender_MSG];
[L1090]  CALL        call __var_7 := add~uint256~uint256_SafeMath__success(this, this, 0, balances_TokenERC20[this][to_s468], tokens_s468);
[L914]               c_s23 := (a_s23 + b_s23) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L915]   COND FALSE  !(!(c_s23 >= a_s23))
[L1090]  RET         call __var_7 := add~uint256~uint256_SafeMath__success(this, this, 0, balances_TokenERC20[this][to_s468], tokens_s468);
[L1091]  COND FALSE  !(revert)
[L1094]              sum_balances0[this] := sum_balances0[this] - balances_TokenERC20[this][to_s468];
[L1095]              balances_TokenERC20[this][to_s468] := __var_7;
[L1096]              sum_balances0[this] := sum_balances0[this] + balances_TokenERC20[this][to_s468];
[L1097]              assert { :EventEmitted "Transfer_TokenERC20" } true;
[L1098]              success_s468 := true;
[L438]   RET         call success_s468 := transferFrom~address~address~uint256_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s468, to_s468, tokens_s468);
[L439]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !((((((((((((((((((((success_s468 == true && allowed_TokenERC20[this][from_s468][msgsender_MSG] == old(allowed_TokenERC20[this][from_s468][msgsender_MSG]) - tokens_s468) && _totalSupply_TokenERC20[this] == old(_totalSupply_TokenERC20[this])) && balances_TokenERC20[this] == old(balances_TokenERC20[this])) && allowed_TokenERC20[this][p1][p2] == old(allowed_TokenERC20[this][p1][p2])) && aSBlock_BytecoinBlack_ERC20[this] == old(aSBlock_BytecoinBlack_ERC20[this])) && aEBlock_BytecoinBlack_ERC20[this] == old(aEBlock_BytecoinBlack_ERC20[this])) && aCap_BytecoinBlack_ERC20[this] == old(aCap_BytecoinBlack_ERC20[this])) && aTot_BytecoinBlack_ERC20[this] == old(aTot_BytecoinBlack_ERC20[this])) && aAmt_BytecoinBlack_ERC20[this] == old(aAmt_BytecoinBlack_ERC20[this])) && sSBlock_BytecoinBlack_ERC20[this] == old(sSBlock_BytecoinBlack_ERC20[this])) && sEBlock_BytecoinBlack_ERC20[this] == old(sEBlock_BytecoinBlack_ERC20[this])) && sCap_BytecoinBlack_ERC20[this] == old(sCap_BytecoinBlack_ERC20[this])) && sTot_BytecoinBlack_ERC20[this] == old(sTot_BytecoinBlack_ERC20[this])) && sChunk_BytecoinBlack_ERC20[this] == old(sChunk_BytecoinBlack_ERC20[this])) && sPrice_BytecoinBlack_ERC20[this] == old(sPrice_BytecoinBlack_ERC20[this])) && symbol_TokenERC20[this] == old(symbol_TokenERC20[this])) && name_TokenERC20[this] == old(name_TokenERC20[this])) && decimals_TokenERC20[this] == old(decimals_TokenERC20[this])) && owner_Owned[this] == old(owner_Owned[this])) && newOwner_Owned[this] == old(newOwner_Owned[this]));
[L3]                 revert := revert_hold;
[L2239]  RET         call success_s468 := transferFrom~address~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, from_s468, to_s468, tokens_s468);
[L2254]  RET         call CorralChoice_BytecoinBlack_ERC20(this);

Loop:
[L2254]        assume true;

[2020-11-24 18:15:03,041 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 18:15:03,041 INFO  L82        PathProgramCache]: Analyzing trace with hash 923911965, now seen corresponding path program 1 times
[2020-11-24 18:15:03,042 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 18:15:03,098 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 18:15:03,541 INFO  L134       CoverageAnalysis]: Checked inductivity of 4 backedges. 0 proven. 2 refuted. 0 times theorem prover too weak. 2 trivial. 0 not checked.
[2020-11-24 18:15:03,541 INFO  L312   seRefinementStrategy]: Constructing automaton from 0 perfect and 1 imperfect interpolant sequences.
[2020-11-24 18:15:03,543 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [] imperfect sequences [17] total 17
[2020-11-24 18:15:03,544 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 18:15:03,545 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 17 interpolants.
[2020-11-24 18:15:03,545 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=34, Invalid=238, Unknown=0, NotChecked=0, Total=272
[2020-11-24 18:15:03,545 INFO  L87              Difference]: Start difference. First operand 236 states and 241 transitions. cyclomatic complexity: 6 Second operand 17 states.
[2020-11-24 18:15:04,027 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 18:15:04,027 INFO  L93              Difference]: Finished difference Result 235 states and 239 transitions.
[2020-11-24 18:15:04,027 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 15 states. 
[2020-11-24 18:15:04,028 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 235 states and 239 transitions.
[2020-11-24 18:15:04,029 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 18:15:04,029 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 235 states to 195 states and 198 transitions.
[2020-11-24 18:15:04,029 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 147
[2020-11-24 18:15:04,030 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 147
[2020-11-24 18:15:04,030 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 195 states and 198 transitions.
[2020-11-24 18:15:04,030 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 18:15:04,030 INFO  L728         BuchiCegarLoop]: Abstraction has 195 states and 198 transitions.
[2020-11-24 18:15:04,030 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 195 states and 198 transitions.
[2020-11-24 18:15:04,031 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 195 to 195.
[2020-11-24 18:15:04,032 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 195 states.
[2020-11-24 18:15:04,032 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 195 states to 195 states and 198 transitions.
[2020-11-24 18:15:04,033 INFO  L751         BuchiCegarLoop]: Abstraction has 195 states and 198 transitions.
[2020-11-24 18:15:04,033 INFO  L631         BuchiCegarLoop]: Abstraction has 195 states and 198 transitions.
[2020-11-24 18:15:04,033 INFO  L445         BuchiCegarLoop]: ======== Iteration 6============
[2020-11-24 18:15:04,033 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 195 states and 198 transitions.
[2020-11-24 18:15:04,033 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 18:15:04,033 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 18:15:04,033 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 18:15:04,034 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 18:15:04,034 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L3]                 success_transferFrom_TokenERC200 := false;
[L3]                 call_transferFrom_TokenERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L2249]              assume null == 0;
[L2250]  CALL        call this := FreshRefGenerator__success();
[L897]               havoc newRef;
[L898]               assume Alloc[newRef] == false;
[L899]               Alloc[newRef] := true;
[L900]               assume newRef != null;
[L2250]  RET         call this := FreshRefGenerator__success();
[L2251]              assume now >= 0;
[L2252]              assume DType[this] == BytecoinBlack_ERC20;
[L2253]              assume !revert && gas >= 0;
[L2254]  CALL        call CorralChoice_BytecoinBlack_ERC20(this);
[L2131]              havoc msgsender_MSG;
[L2132]              havoc msgvalue_MSG;
[L2133]              havoc choice;
[L2134]              havoc __ret_0_totalSupply;
[L2135]              havoc tokenOwner_s338;
[L2136]              havoc balance_s338;
[L2137]              havoc tokenOwner_s484;
[L2138]              havoc spender_s484;
[L2139]              havoc remaining_s484;
[L2140]              havoc to_s381;
[L2141]              havoc tokens_s381;
[L2142]              havoc success_s381;
[L2143]              havoc spender_s409;
[L2144]              havoc tokens_s409;
[L2145]              havoc success_s409;
[L2146]              havoc from_s468;
[L2147]              havoc to_s468;
[L2148]              havoc tokens_s468;
[L2149]              havoc success_s468;
[L2150]              havoc __ret_0_owner;
[L2151]              havoc __ret_0_newOwner;
[L2152]              havoc _newOwner_s217;
[L2153]              havoc __ret_0_symbol;
[L2154]              havoc __ret_0_name;
[L2155]              havoc __ret_0_decimals;
[L2156]              havoc spender_s527;
[L2157]              havoc tokens_s527;
[L2158]              havoc data_s527;
[L2159]              havoc success_s527;
[L2160]              havoc __ret_0_aSBlock;
[L2161]              havoc __ret_0_aEBlock;
[L2162]              havoc __ret_0_aCap;
[L2163]              havoc __ret_0_aTot;
[L2164]              havoc __ret_0_aAmt;
[L2165]              havoc __ret_0_sSBlock;
[L2166]              havoc __ret_0_sEBlock;
[L2167]              havoc __ret_0_sCap;
[L2168]              havoc __ret_0_sTot;
[L2169]              havoc __ret_0_sChunk;
[L2170]              havoc __ret_0_sPrice;
[L2171]              havoc _refer_s687;
[L2172]              havoc success_s687;
[L2173]              havoc _refer_s847;
[L2174]              havoc success_s847;
[L2175]              havoc StartBlock_s868;
[L2176]              havoc EndBlock_s868;
[L2177]              havoc DropCap_s868;
[L2178]              havoc DropCount_s868;
[L2179]              havoc DropAmount_s868;
[L2180]              havoc StartBlock_s892;
[L2181]              havoc EndBlock_s892;
[L2182]              havoc SaleCap_s892;
[L2183]              havoc SaleCount_s892;
[L2184]              havoc ChunkSize_s892;
[L2185]              havoc SalePrice_s892;
[L2186]              havoc _aSBlock_s926;
[L2187]              havoc _aEBlock_s926;
[L2188]              havoc _aAmt_s926;
[L2189]              havoc _aCap_s926;
[L2190]              havoc _sSBlock_s966;
[L2191]              havoc _sEBlock_s966;
[L2192]              havoc _sChunk_s966;
[L2193]              havoc _sPrice_s966;
[L2194]              havoc _sCap_s966;
[L2195]              havoc tmpNow;
[L2196]              havoc gas;
[L2197]              assume gas > 4000000 && gas <= 8000000;
[L2198]              tmpNow := now;
[L2199]              havoc now;
[L2200]              assume now > tmpNow;
[L2201]              assume msgsender_MSG != null;
[L2202]  COND FALSE  !(choice == 6)
[L2208]  COND FALSE  !(choice == 5)
[L2214]  COND FALSE  !(choice == 4)
[L2220]  COND FALSE  !(choice == 3)
[L2227]  COND FALSE  !(choice == 2)
[L2234]  COND TRUE   choice == 1
[L2235]              gas := gas - 21000;
[L2236]  COND TRUE   gas >= 0
[L2237]              assume tokens_s468 >= 0 && tokens_s468 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2238]              assume msgvalue_MSG == 0;
[L2239]  CALL        call success_s468 := transferFrom~address~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, from_s468, to_s468, tokens_s468);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != from_s468 || p2 != msgsender_MSG) && from_s468 == to_s468) && tokens_s468 <= balances_TokenERC20[this][from_s468]) && tokens_s468 <= allowed_TokenERC20[this][from_s468][msgsender_MSG]) && tokens_s468 >= 0) && tokens_s468 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_TokenERC20[this][to_s468] >= 0) && balances_TokenERC20[this][to_s468] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_TokenERC20[this][from_s468] >= 0) && balances_TokenERC20[this][from_s468] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_TokenERC20[this][from_s468][msgsender_MSG] >= 0) && allowed_TokenERC20[this][from_s468][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_TokenERC200 := true;
[L3]                 call_transferFrom_TokenERC200 := false;
[L3]                 revert := revert_hold;
[L402]               havoc __exception;
[L403]               revert := false;
[L404]   COND TRUE   __exception
[L405]               __tmp__Balance := Balance;
[L406]               __tmp__DType := DType;
[L407]               __tmp__Alloc := Alloc;
[L408]               __tmp__balance_ADDR := balance_ADDR;
[L409]               __tmp__M_Ref_int := M_Ref_int;
[L410]               __tmp__sum_balances0 := sum_balances0;
[L411]               __tmp__alloc_allowed_TokenERC20_lvl0 := alloc_allowed_TokenERC20_lvl0;
[L412]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L413]               __tmp__sum_allowed1 := sum_allowed1;
[L414]               __tmp__Length := Length;
[L415]               __tmp__now := now;
[L416]               __tmp__owner_Owned := owner_Owned;
[L417]               __tmp__newOwner_Owned := newOwner_Owned;
[L418]               __tmp__symbol_TokenERC20 := symbol_TokenERC20;
[L419]               __tmp__name_TokenERC20 := name_TokenERC20;
[L420]               __tmp__decimals_TokenERC20 := decimals_TokenERC20;
[L421]               __tmp___totalSupply_TokenERC20 := _totalSupply_TokenERC20;
[L422]               __tmp__balances_TokenERC20 := balances_TokenERC20;
[L423]               __tmp__allowed_TokenERC20 := allowed_TokenERC20;
[L424]               __tmp__aSBlock_BytecoinBlack_ERC20 := aSBlock_BytecoinBlack_ERC20;
[L425]               __tmp__aEBlock_BytecoinBlack_ERC20 := aEBlock_BytecoinBlack_ERC20;
[L426]               __tmp__aCap_BytecoinBlack_ERC20 := aCap_BytecoinBlack_ERC20;
[L427]               __tmp__aTot_BytecoinBlack_ERC20 := aTot_BytecoinBlack_ERC20;
[L428]               __tmp__aAmt_BytecoinBlack_ERC20 := aAmt_BytecoinBlack_ERC20;
[L429]               __tmp__sSBlock_BytecoinBlack_ERC20 := sSBlock_BytecoinBlack_ERC20;
[L430]               __tmp__sEBlock_BytecoinBlack_ERC20 := sEBlock_BytecoinBlack_ERC20;
[L431]               __tmp__sCap_BytecoinBlack_ERC20 := sCap_BytecoinBlack_ERC20;
[L432]               __tmp__sTot_BytecoinBlack_ERC20 := sTot_BytecoinBlack_ERC20;
[L433]               __tmp__sChunk_BytecoinBlack_ERC20 := sChunk_BytecoinBlack_ERC20;
[L434]               __tmp__sPrice_BytecoinBlack_ERC20 := sPrice_BytecoinBlack_ERC20;
[L435]   CALL        call success_s468 := transferFrom~address~address~uint256_TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, from_s468, to_s468, tokens_s468);
[L1046]  CALL        call __var_5 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __tmp__balances_TokenERC20[this][from_s468], tokens_s468);
[L923]   COND FALSE  !(!(b_s45 <= a_s45))
[L927]               c_s45 := (a_s45 - b_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1046]  RET         call __var_5 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __tmp__balances_TokenERC20[this][from_s468], tokens_s468);
[L1047]  COND FALSE  !(revert)
[L1050]              __tmp__sum_balances0[this] := __tmp__sum_balances0[this] - __tmp__balances_TokenERC20[this][from_s468];
[L1051]              __tmp__balances_TokenERC20[this][from_s468] := __var_5;
[L1052]              __tmp__sum_balances0[this] := __tmp__sum_balances0[this] + __tmp__balances_TokenERC20[this][from_s468];
[L1053]  CALL        call __var_6 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __tmp__allowed_TokenERC20[this][from_s468][msgsender_MSG], tokens_s468);
[L923]   COND TRUE   !(b_s45 <= a_s45)
[L924]               revert := true;
[L1053]  RET         call __var_6 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __tmp__allowed_TokenERC20[this][from_s468][msgsender_MSG], tokens_s468);
[L1054]  COND TRUE   revert
[L435]   RET         call success_s468 := transferFrom~address~address~uint256_TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, from_s468, to_s468, tokens_s468);
[L436]               assume revert || gas < 0;
[L2239]  RET         call success_s468 := transferFrom~address~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, from_s468, to_s468, tokens_s468);
[L2254]  RET         call CorralChoice_BytecoinBlack_ERC20(this);

Loop:
[L2254]        assume true;

[2020-11-24 18:15:04,036 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 18:15:04,036 INFO  L82        PathProgramCache]: Analyzing trace with hash 2146647761, now seen corresponding path program 1 times
[2020-11-24 18:15:04,037 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 18:15:04,043 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 18:15:04,070 INFO  L134       CoverageAnalysis]: Checked inductivity of 3 backedges. 2 proven. 0 refuted. 0 times theorem prover too weak. 1 trivial. 0 not checked.
[2020-11-24 18:15:04,070 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 18:15:04,071 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [7] imperfect sequences [] total 7
[2020-11-24 18:15:04,071 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 18:15:04,071 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 7 interpolants.
[2020-11-24 18:15:04,071 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=11, Invalid=31, Unknown=0, NotChecked=0, Total=42
[2020-11-24 18:15:04,071 INFO  L87              Difference]: Start difference. First operand 195 states and 198 transitions. cyclomatic complexity: 4 Second operand 7 states.
[2020-11-24 18:15:04,099 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 18:15:04,100 INFO  L93              Difference]: Finished difference Result 197 states and 199 transitions.
[2020-11-24 18:15:04,100 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 8 states. 
[2020-11-24 18:15:04,100 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 197 states and 199 transitions.
[2020-11-24 18:15:04,101 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 18:15:04,101 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 197 states to 190 states and 192 transitions.
[2020-11-24 18:15:04,101 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 142
[2020-11-24 18:15:04,101 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 142
[2020-11-24 18:15:04,102 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 190 states and 192 transitions.
[2020-11-24 18:15:04,102 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 18:15:04,102 INFO  L728         BuchiCegarLoop]: Abstraction has 190 states and 192 transitions.
[2020-11-24 18:15:04,102 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 190 states and 192 transitions.
[2020-11-24 18:15:04,103 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 190 to 190.
[2020-11-24 18:15:04,103 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 190 states.
[2020-11-24 18:15:04,104 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 190 states to 190 states and 192 transitions.
[2020-11-24 18:15:04,104 INFO  L751         BuchiCegarLoop]: Abstraction has 190 states and 192 transitions.
[2020-11-24 18:15:04,104 INFO  L631         BuchiCegarLoop]: Abstraction has 190 states and 192 transitions.
[2020-11-24 18:15:04,104 INFO  L445         BuchiCegarLoop]: ======== Iteration 7============
[2020-11-24 18:15:04,104 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 190 states and 192 transitions.
[2020-11-24 18:15:04,104 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 18:15:04,104 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 18:15:04,104 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 18:15:04,105 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 18:15:04,105 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L3]                 success_transferFrom_TokenERC200 := false;
[L3]                 call_transferFrom_TokenERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L2249]              assume null == 0;
[L2250]  CALL        call this := FreshRefGenerator__success();
[L897]               havoc newRef;
[L898]               assume Alloc[newRef] == false;
[L899]               Alloc[newRef] := true;
[L900]               assume newRef != null;
[L2250]  RET         call this := FreshRefGenerator__success();
[L2251]              assume now >= 0;
[L2252]              assume DType[this] == BytecoinBlack_ERC20;
[L2253]              assume !revert && gas >= 0;
[L2254]  CALL        call CorralChoice_BytecoinBlack_ERC20(this);
[L2131]              havoc msgsender_MSG;
[L2132]              havoc msgvalue_MSG;
[L2133]              havoc choice;
[L2134]              havoc __ret_0_totalSupply;
[L2135]              havoc tokenOwner_s338;
[L2136]              havoc balance_s338;
[L2137]              havoc tokenOwner_s484;
[L2138]              havoc spender_s484;
[L2139]              havoc remaining_s484;
[L2140]              havoc to_s381;
[L2141]              havoc tokens_s381;
[L2142]              havoc success_s381;
[L2143]              havoc spender_s409;
[L2144]              havoc tokens_s409;
[L2145]              havoc success_s409;
[L2146]              havoc from_s468;
[L2147]              havoc to_s468;
[L2148]              havoc tokens_s468;
[L2149]              havoc success_s468;
[L2150]              havoc __ret_0_owner;
[L2151]              havoc __ret_0_newOwner;
[L2152]              havoc _newOwner_s217;
[L2153]              havoc __ret_0_symbol;
[L2154]              havoc __ret_0_name;
[L2155]              havoc __ret_0_decimals;
[L2156]              havoc spender_s527;
[L2157]              havoc tokens_s527;
[L2158]              havoc data_s527;
[L2159]              havoc success_s527;
[L2160]              havoc __ret_0_aSBlock;
[L2161]              havoc __ret_0_aEBlock;
[L2162]              havoc __ret_0_aCap;
[L2163]              havoc __ret_0_aTot;
[L2164]              havoc __ret_0_aAmt;
[L2165]              havoc __ret_0_sSBlock;
[L2166]              havoc __ret_0_sEBlock;
[L2167]              havoc __ret_0_sCap;
[L2168]              havoc __ret_0_sTot;
[L2169]              havoc __ret_0_sChunk;
[L2170]              havoc __ret_0_sPrice;
[L2171]              havoc _refer_s687;
[L2172]              havoc success_s687;
[L2173]              havoc _refer_s847;
[L2174]              havoc success_s847;
[L2175]              havoc StartBlock_s868;
[L2176]              havoc EndBlock_s868;
[L2177]              havoc DropCap_s868;
[L2178]              havoc DropCount_s868;
[L2179]              havoc DropAmount_s868;
[L2180]              havoc StartBlock_s892;
[L2181]              havoc EndBlock_s892;
[L2182]              havoc SaleCap_s892;
[L2183]              havoc SaleCount_s892;
[L2184]              havoc ChunkSize_s892;
[L2185]              havoc SalePrice_s892;
[L2186]              havoc _aSBlock_s926;
[L2187]              havoc _aEBlock_s926;
[L2188]              havoc _aAmt_s926;
[L2189]              havoc _aCap_s926;
[L2190]              havoc _sSBlock_s966;
[L2191]              havoc _sEBlock_s966;
[L2192]              havoc _sChunk_s966;
[L2193]              havoc _sPrice_s966;
[L2194]              havoc _sCap_s966;
[L2195]              havoc tmpNow;
[L2196]              havoc gas;
[L2197]              assume gas > 4000000 && gas <= 8000000;
[L2198]              tmpNow := now;
[L2199]              havoc now;
[L2200]              assume now > tmpNow;
[L2201]              assume msgsender_MSG != null;
[L2202]  COND FALSE  !(choice == 6)
[L2208]  COND FALSE  !(choice == 5)
[L2214]  COND FALSE  !(choice == 4)
[L2220]  COND FALSE  !(choice == 3)
[L2227]  COND FALSE  !(choice == 2)
[L2234]  COND TRUE   choice == 1
[L2235]              gas := gas - 21000;
[L2236]  COND TRUE   gas >= 0
[L2237]              assume tokens_s468 >= 0 && tokens_s468 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2238]              assume msgvalue_MSG == 0;
[L2239]  CALL        call success_s468 := transferFrom~address~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, from_s468, to_s468, tokens_s468);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != from_s468 || p2 != msgsender_MSG) && from_s468 == to_s468) && tokens_s468 <= balances_TokenERC20[this][from_s468]) && tokens_s468 <= allowed_TokenERC20[this][from_s468][msgsender_MSG]) && tokens_s468 >= 0) && tokens_s468 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_TokenERC20[this][to_s468] >= 0) && balances_TokenERC20[this][to_s468] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_TokenERC20[this][from_s468] >= 0) && balances_TokenERC20[this][from_s468] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_TokenERC20[this][from_s468][msgsender_MSG] >= 0) && allowed_TokenERC20[this][from_s468][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_TokenERC200 := true;
[L3]                 call_transferFrom_TokenERC200 := false;
[L3]                 revert := revert_hold;
[L402]               havoc __exception;
[L403]               revert := false;
[L404]   COND TRUE   __exception
[L405]               __tmp__Balance := Balance;
[L406]               __tmp__DType := DType;
[L407]               __tmp__Alloc := Alloc;
[L408]               __tmp__balance_ADDR := balance_ADDR;
[L409]               __tmp__M_Ref_int := M_Ref_int;
[L410]               __tmp__sum_balances0 := sum_balances0;
[L411]               __tmp__alloc_allowed_TokenERC20_lvl0 := alloc_allowed_TokenERC20_lvl0;
[L412]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L413]               __tmp__sum_allowed1 := sum_allowed1;
[L414]               __tmp__Length := Length;
[L415]               __tmp__now := now;
[L416]               __tmp__owner_Owned := owner_Owned;
[L417]               __tmp__newOwner_Owned := newOwner_Owned;
[L418]               __tmp__symbol_TokenERC20 := symbol_TokenERC20;
[L419]               __tmp__name_TokenERC20 := name_TokenERC20;
[L420]               __tmp__decimals_TokenERC20 := decimals_TokenERC20;
[L421]               __tmp___totalSupply_TokenERC20 := _totalSupply_TokenERC20;
[L422]               __tmp__balances_TokenERC20 := balances_TokenERC20;
[L423]               __tmp__allowed_TokenERC20 := allowed_TokenERC20;
[L424]               __tmp__aSBlock_BytecoinBlack_ERC20 := aSBlock_BytecoinBlack_ERC20;
[L425]               __tmp__aEBlock_BytecoinBlack_ERC20 := aEBlock_BytecoinBlack_ERC20;
[L426]               __tmp__aCap_BytecoinBlack_ERC20 := aCap_BytecoinBlack_ERC20;
[L427]               __tmp__aTot_BytecoinBlack_ERC20 := aTot_BytecoinBlack_ERC20;
[L428]               __tmp__aAmt_BytecoinBlack_ERC20 := aAmt_BytecoinBlack_ERC20;
[L429]               __tmp__sSBlock_BytecoinBlack_ERC20 := sSBlock_BytecoinBlack_ERC20;
[L430]               __tmp__sEBlock_BytecoinBlack_ERC20 := sEBlock_BytecoinBlack_ERC20;
[L431]               __tmp__sCap_BytecoinBlack_ERC20 := sCap_BytecoinBlack_ERC20;
[L432]               __tmp__sTot_BytecoinBlack_ERC20 := sTot_BytecoinBlack_ERC20;
[L433]               __tmp__sChunk_BytecoinBlack_ERC20 := sChunk_BytecoinBlack_ERC20;
[L434]               __tmp__sPrice_BytecoinBlack_ERC20 := sPrice_BytecoinBlack_ERC20;
[L435]   CALL        call success_s468 := transferFrom~address~address~uint256_TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, from_s468, to_s468, tokens_s468);
[L1046]  CALL        call __var_5 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __tmp__balances_TokenERC20[this][from_s468], tokens_s468);
[L923]   COND FALSE  !(!(b_s45 <= a_s45))
[L927]               c_s45 := (a_s45 - b_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1046]  RET         call __var_5 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __tmp__balances_TokenERC20[this][from_s468], tokens_s468);
[L1047]  COND FALSE  !(revert)
[L1050]              __tmp__sum_balances0[this] := __tmp__sum_balances0[this] - __tmp__balances_TokenERC20[this][from_s468];
[L1051]              __tmp__balances_TokenERC20[this][from_s468] := __var_5;
[L1052]              __tmp__sum_balances0[this] := __tmp__sum_balances0[this] + __tmp__balances_TokenERC20[this][from_s468];
[L1053]  CALL        call __var_6 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __tmp__allowed_TokenERC20[this][from_s468][msgsender_MSG], tokens_s468);
[L923]   COND FALSE  !(!(b_s45 <= a_s45))
[L927]               c_s45 := (a_s45 - b_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1053]  RET         call __var_6 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __tmp__allowed_TokenERC20[this][from_s468][msgsender_MSG], tokens_s468);
[L1054]  COND FALSE  !(revert)
[L1057]              __tmp__sum_allowed1[from_s468] := __tmp__sum_allowed1[from_s468] - __tmp__allowed_TokenERC20[this][from_s468][msgsender_MSG];
[L1058]              __tmp__allowed_TokenERC20[this][from_s468][msgsender_MSG] := __var_6;
[L1059]              __tmp__sum_allowed1[from_s468] := __tmp__sum_allowed1[from_s468] + __tmp__allowed_TokenERC20[this][from_s468][msgsender_MSG];
[L1060]  CALL        call __var_7 := add~uint256~uint256_SafeMath__fail(this, this, 0, __tmp__balances_TokenERC20[this][to_s468], tokens_s468);
[L905]               c_s23 := (a_s23 + b_s23) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L906]   COND TRUE   !(c_s23 >= a_s23)
[L907]               revert := true;
[L1060]  RET         call __var_7 := add~uint256~uint256_SafeMath__fail(this, this, 0, __tmp__balances_TokenERC20[this][to_s468], tokens_s468);
[L1061]  COND TRUE   revert
[L435]   RET         call success_s468 := transferFrom~address~address~uint256_TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, from_s468, to_s468, tokens_s468);
[L436]               assume revert || gas < 0;
[L2239]  RET         call success_s468 := transferFrom~address~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, from_s468, to_s468, tokens_s468);
[L2254]  RET         call CorralChoice_BytecoinBlack_ERC20(this);

Loop:
[L2254]        assume true;

[2020-11-24 18:15:04,107 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 18:15:04,107 INFO  L82        PathProgramCache]: Analyzing trace with hash -1725710790, now seen corresponding path program 1 times
[2020-11-24 18:15:04,108 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 18:15:04,116 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 18:15:04,179 INFO  L134       CoverageAnalysis]: Checked inductivity of 4 backedges. 0 proven. 3 refuted. 0 times theorem prover too weak. 1 trivial. 0 not checked.
[2020-11-24 18:15:04,179 INFO  L312   seRefinementStrategy]: Constructing automaton from 0 perfect and 1 imperfect interpolant sequences.
[2020-11-24 18:15:04,179 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [] imperfect sequences [12] total 12
[2020-11-24 18:15:04,180 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 18:15:04,180 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 12 interpolants.
[2020-11-24 18:15:04,180 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=23, Invalid=109, Unknown=0, NotChecked=0, Total=132
[2020-11-24 18:15:04,180 INFO  L87              Difference]: Start difference. First operand 190 states and 192 transitions. cyclomatic complexity: 3 Second operand 12 states.
[2020-11-24 18:15:04,252 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 18:15:04,252 INFO  L93              Difference]: Finished difference Result 192 states and 193 transitions.
[2020-11-24 18:15:04,252 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 13 states. 
[2020-11-24 18:15:04,252 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 192 states and 193 transitions.
[2020-11-24 18:15:04,253 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 18:15:04,253 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 192 states to 185 states and 186 transitions.
[2020-11-24 18:15:04,254 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 137
[2020-11-24 18:15:04,254 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 137
[2020-11-24 18:15:04,254 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 185 states and 186 transitions.
[2020-11-24 18:15:04,254 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 18:15:04,254 INFO  L728         BuchiCegarLoop]: Abstraction has 185 states and 186 transitions.
[2020-11-24 18:15:04,254 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 185 states and 186 transitions.
[2020-11-24 18:15:04,256 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 185 to 185.
[2020-11-24 18:15:04,256 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 185 states.
[2020-11-24 18:15:04,256 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 185 states to 185 states and 186 transitions.
[2020-11-24 18:15:04,256 INFO  L751         BuchiCegarLoop]: Abstraction has 185 states and 186 transitions.
[2020-11-24 18:15:04,256 INFO  L631         BuchiCegarLoop]: Abstraction has 185 states and 186 transitions.
[2020-11-24 18:15:04,256 INFO  L445         BuchiCegarLoop]: ======== Iteration 8============
[2020-11-24 18:15:04,256 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 185 states and 186 transitions.
[2020-11-24 18:15:04,257 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 18:15:04,257 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 18:15:04,257 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 18:15:04,258 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 18:15:04,258 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L3]                 success_transferFrom_TokenERC200 := false;
[L3]                 call_transferFrom_TokenERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L2249]              assume null == 0;
[L2250]  CALL        call this := FreshRefGenerator__success();
[L897]               havoc newRef;
[L898]               assume Alloc[newRef] == false;
[L899]               Alloc[newRef] := true;
[L900]               assume newRef != null;
[L2250]  RET         call this := FreshRefGenerator__success();
[L2251]              assume now >= 0;
[L2252]              assume DType[this] == BytecoinBlack_ERC20;
[L2253]              assume !revert && gas >= 0;
[L2254]  CALL        call CorralChoice_BytecoinBlack_ERC20(this);
[L2131]              havoc msgsender_MSG;
[L2132]              havoc msgvalue_MSG;
[L2133]              havoc choice;
[L2134]              havoc __ret_0_totalSupply;
[L2135]              havoc tokenOwner_s338;
[L2136]              havoc balance_s338;
[L2137]              havoc tokenOwner_s484;
[L2138]              havoc spender_s484;
[L2139]              havoc remaining_s484;
[L2140]              havoc to_s381;
[L2141]              havoc tokens_s381;
[L2142]              havoc success_s381;
[L2143]              havoc spender_s409;
[L2144]              havoc tokens_s409;
[L2145]              havoc success_s409;
[L2146]              havoc from_s468;
[L2147]              havoc to_s468;
[L2148]              havoc tokens_s468;
[L2149]              havoc success_s468;
[L2150]              havoc __ret_0_owner;
[L2151]              havoc __ret_0_newOwner;
[L2152]              havoc _newOwner_s217;
[L2153]              havoc __ret_0_symbol;
[L2154]              havoc __ret_0_name;
[L2155]              havoc __ret_0_decimals;
[L2156]              havoc spender_s527;
[L2157]              havoc tokens_s527;
[L2158]              havoc data_s527;
[L2159]              havoc success_s527;
[L2160]              havoc __ret_0_aSBlock;
[L2161]              havoc __ret_0_aEBlock;
[L2162]              havoc __ret_0_aCap;
[L2163]              havoc __ret_0_aTot;
[L2164]              havoc __ret_0_aAmt;
[L2165]              havoc __ret_0_sSBlock;
[L2166]              havoc __ret_0_sEBlock;
[L2167]              havoc __ret_0_sCap;
[L2168]              havoc __ret_0_sTot;
[L2169]              havoc __ret_0_sChunk;
[L2170]              havoc __ret_0_sPrice;
[L2171]              havoc _refer_s687;
[L2172]              havoc success_s687;
[L2173]              havoc _refer_s847;
[L2174]              havoc success_s847;
[L2175]              havoc StartBlock_s868;
[L2176]              havoc EndBlock_s868;
[L2177]              havoc DropCap_s868;
[L2178]              havoc DropCount_s868;
[L2179]              havoc DropAmount_s868;
[L2180]              havoc StartBlock_s892;
[L2181]              havoc EndBlock_s892;
[L2182]              havoc SaleCap_s892;
[L2183]              havoc SaleCount_s892;
[L2184]              havoc ChunkSize_s892;
[L2185]              havoc SalePrice_s892;
[L2186]              havoc _aSBlock_s926;
[L2187]              havoc _aEBlock_s926;
[L2188]              havoc _aAmt_s926;
[L2189]              havoc _aCap_s926;
[L2190]              havoc _sSBlock_s966;
[L2191]              havoc _sEBlock_s966;
[L2192]              havoc _sChunk_s966;
[L2193]              havoc _sPrice_s966;
[L2194]              havoc _sCap_s966;
[L2195]              havoc tmpNow;
[L2196]              havoc gas;
[L2197]              assume gas > 4000000 && gas <= 8000000;
[L2198]              tmpNow := now;
[L2199]              havoc now;
[L2200]              assume now > tmpNow;
[L2201]              assume msgsender_MSG != null;
[L2202]  COND FALSE  !(choice == 6)
[L2208]  COND FALSE  !(choice == 5)
[L2214]  COND FALSE  !(choice == 4)
[L2220]  COND FALSE  !(choice == 3)
[L2227]  COND FALSE  !(choice == 2)
[L2234]  COND TRUE   choice == 1
[L2235]              gas := gas - 21000;
[L2236]  COND TRUE   gas >= 0
[L2237]              assume tokens_s468 >= 0 && tokens_s468 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2238]              assume msgvalue_MSG == 0;
[L2239]  CALL        call success_s468 := transferFrom~address~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, from_s468, to_s468, tokens_s468);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != from_s468 || p2 != msgsender_MSG) && from_s468 == to_s468) && tokens_s468 <= balances_TokenERC20[this][from_s468]) && tokens_s468 <= allowed_TokenERC20[this][from_s468][msgsender_MSG]) && tokens_s468 >= 0) && tokens_s468 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_TokenERC20[this][to_s468] >= 0) && balances_TokenERC20[this][to_s468] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_TokenERC20[this][from_s468] >= 0) && balances_TokenERC20[this][from_s468] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_TokenERC20[this][from_s468][msgsender_MSG] >= 0) && allowed_TokenERC20[this][from_s468][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_TokenERC200 := true;
[L3]                 call_transferFrom_TokenERC200 := false;
[L3]                 revert := revert_hold;
[L402]               havoc __exception;
[L403]               revert := false;
[L404]   COND TRUE   __exception
[L405]               __tmp__Balance := Balance;
[L406]               __tmp__DType := DType;
[L407]               __tmp__Alloc := Alloc;
[L408]               __tmp__balance_ADDR := balance_ADDR;
[L409]               __tmp__M_Ref_int := M_Ref_int;
[L410]               __tmp__sum_balances0 := sum_balances0;
[L411]               __tmp__alloc_allowed_TokenERC20_lvl0 := alloc_allowed_TokenERC20_lvl0;
[L412]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L413]               __tmp__sum_allowed1 := sum_allowed1;
[L414]               __tmp__Length := Length;
[L415]               __tmp__now := now;
[L416]               __tmp__owner_Owned := owner_Owned;
[L417]               __tmp__newOwner_Owned := newOwner_Owned;
[L418]               __tmp__symbol_TokenERC20 := symbol_TokenERC20;
[L419]               __tmp__name_TokenERC20 := name_TokenERC20;
[L420]               __tmp__decimals_TokenERC20 := decimals_TokenERC20;
[L421]               __tmp___totalSupply_TokenERC20 := _totalSupply_TokenERC20;
[L422]               __tmp__balances_TokenERC20 := balances_TokenERC20;
[L423]               __tmp__allowed_TokenERC20 := allowed_TokenERC20;
[L424]               __tmp__aSBlock_BytecoinBlack_ERC20 := aSBlock_BytecoinBlack_ERC20;
[L425]               __tmp__aEBlock_BytecoinBlack_ERC20 := aEBlock_BytecoinBlack_ERC20;
[L426]               __tmp__aCap_BytecoinBlack_ERC20 := aCap_BytecoinBlack_ERC20;
[L427]               __tmp__aTot_BytecoinBlack_ERC20 := aTot_BytecoinBlack_ERC20;
[L428]               __tmp__aAmt_BytecoinBlack_ERC20 := aAmt_BytecoinBlack_ERC20;
[L429]               __tmp__sSBlock_BytecoinBlack_ERC20 := sSBlock_BytecoinBlack_ERC20;
[L430]               __tmp__sEBlock_BytecoinBlack_ERC20 := sEBlock_BytecoinBlack_ERC20;
[L431]               __tmp__sCap_BytecoinBlack_ERC20 := sCap_BytecoinBlack_ERC20;
[L432]               __tmp__sTot_BytecoinBlack_ERC20 := sTot_BytecoinBlack_ERC20;
[L433]               __tmp__sChunk_BytecoinBlack_ERC20 := sChunk_BytecoinBlack_ERC20;
[L434]               __tmp__sPrice_BytecoinBlack_ERC20 := sPrice_BytecoinBlack_ERC20;
[L435]   CALL        call success_s468 := transferFrom~address~address~uint256_TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, from_s468, to_s468, tokens_s468);
[L1046]  CALL        call __var_5 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __tmp__balances_TokenERC20[this][from_s468], tokens_s468);
[L923]   COND FALSE  !(!(b_s45 <= a_s45))
[L927]               c_s45 := (a_s45 - b_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1046]  RET         call __var_5 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __tmp__balances_TokenERC20[this][from_s468], tokens_s468);
[L1047]  COND FALSE  !(revert)
[L1050]              __tmp__sum_balances0[this] := __tmp__sum_balances0[this] - __tmp__balances_TokenERC20[this][from_s468];
[L1051]              __tmp__balances_TokenERC20[this][from_s468] := __var_5;
[L1052]              __tmp__sum_balances0[this] := __tmp__sum_balances0[this] + __tmp__balances_TokenERC20[this][from_s468];
[L1053]  CALL        call __var_6 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __tmp__allowed_TokenERC20[this][from_s468][msgsender_MSG], tokens_s468);
[L923]   COND FALSE  !(!(b_s45 <= a_s45))
[L927]               c_s45 := (a_s45 - b_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1053]  RET         call __var_6 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __tmp__allowed_TokenERC20[this][from_s468][msgsender_MSG], tokens_s468);
[L1054]  COND FALSE  !(revert)
[L1057]              __tmp__sum_allowed1[from_s468] := __tmp__sum_allowed1[from_s468] - __tmp__allowed_TokenERC20[this][from_s468][msgsender_MSG];
[L1058]              __tmp__allowed_TokenERC20[this][from_s468][msgsender_MSG] := __var_6;
[L1059]              __tmp__sum_allowed1[from_s468] := __tmp__sum_allowed1[from_s468] + __tmp__allowed_TokenERC20[this][from_s468][msgsender_MSG];
[L1060]  CALL        call __var_7 := add~uint256~uint256_SafeMath__fail(this, this, 0, __tmp__balances_TokenERC20[this][to_s468], tokens_s468);
[L905]               c_s23 := (a_s23 + b_s23) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L906]   COND FALSE  !(!(c_s23 >= a_s23))
[L1060]  RET         call __var_7 := add~uint256~uint256_SafeMath__fail(this, this, 0, __tmp__balances_TokenERC20[this][to_s468], tokens_s468);
[L1061]  COND FALSE  !(revert)
[L1064]              __tmp__sum_balances0[this] := __tmp__sum_balances0[this] - __tmp__balances_TokenERC20[this][to_s468];
[L1065]              __tmp__balances_TokenERC20[this][to_s468] := __var_7;
[L1066]              __tmp__sum_balances0[this] := __tmp__sum_balances0[this] + __tmp__balances_TokenERC20[this][to_s468];
[L1067]              success_s468 := true;
[L435]   RET         call success_s468 := transferFrom~address~address~uint256_TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, from_s468, to_s468, tokens_s468);
[L436]               assume revert || gas < 0;
[L2239]  RET         call success_s468 := transferFrom~address~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, from_s468, to_s468, tokens_s468);
[L2254]  RET         call CorralChoice_BytecoinBlack_ERC20(this);

Loop:
[L2254]        assume true;

[2020-11-24 18:15:04,260 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 18:15:04,260 INFO  L82        PathProgramCache]: Analyzing trace with hash -132409111, now seen corresponding path program 1 times
[2020-11-24 18:15:04,260 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 18:15:04,267 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 18:15:04,285 INFO  L134       CoverageAnalysis]: Checked inductivity of 4 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 4 trivial. 0 not checked.
[2020-11-24 18:15:04,285 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 18:15:04,286 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [5] imperfect sequences [] total 5
[2020-11-24 18:15:04,286 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 18:15:04,286 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 5 interpolants.
[2020-11-24 18:15:04,286 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=7, Invalid=13, Unknown=0, NotChecked=0, Total=20
[2020-11-24 18:15:04,286 INFO  L87              Difference]: Start difference. First operand 185 states and 186 transitions. cyclomatic complexity: 2 Second operand 5 states.
[2020-11-24 18:15:04,295 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 18:15:04,295 INFO  L93              Difference]: Finished difference Result 178 states and 178 transitions.
[2020-11-24 18:15:04,295 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 5 states. 
[2020-11-24 18:15:04,295 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 178 states and 178 transitions.
[2020-11-24 18:15:04,296 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-24 18:15:04,296 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 178 states to 0 states and 0 transitions.
[2020-11-24 18:15:04,296 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 0
[2020-11-24 18:15:04,297 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 0
[2020-11-24 18:15:04,297 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 0 states and 0 transitions.
[2020-11-24 18:15:04,297 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 18:15:04,297 INFO  L728         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-24 18:15:04,297 INFO  L751         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-24 18:15:04,297 INFO  L631         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-24 18:15:04,297 INFO  L445         BuchiCegarLoop]: ======== Iteration 9============
[2020-11-24 18:15:04,297 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 0 states and 0 transitions.
[2020-11-24 18:15:04,297 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-24 18:15:04,297 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is true
[2020-11-24 18:15:04,300 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 24.11 06:15:04 BasicIcfg
[2020-11-24 18:15:04,300 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-24 18:15:04,301 INFO  L168              Benchmark]: Toolchain (without parser) took 3824.59 ms. Allocated memory was 1.0 GB in the beginning and 1.3 GB in the end (delta: 280.5 MB). Free memory was 940.6 MB in the beginning and 797.9 MB in the end (delta: 142.7 MB). Peak memory consumption was 423.2 MB. Max. memory is 15.3 GB.
[2020-11-24 18:15:04,302 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.15 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-24 18:15:04,302 INFO  L168              Benchmark]: Boogie Preprocessor took 70.43 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 935.2 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-24 18:15:04,302 INFO  L168              Benchmark]: UtopiaSpecLang took 67.48 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 929.8 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-24 18:15:04,302 INFO  L168              Benchmark]: Boogie Printer took 14.98 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 924.5 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-24 18:15:04,303 INFO  L168              Benchmark]: RCFGBuilder took 581.08 ms. Allocated memory is still 1.0 GB. Free memory was 924.5 MB in the beginning and 865.4 MB in the end (delta: 59.1 MB). Peak memory consumption was 59.1 MB. Max. memory is 15.3 GB.
[2020-11-24 18:15:04,303 INFO  L168              Benchmark]: UtopiaLTL2Aut took 42.39 ms. Allocated memory is still 1.0 GB. Free memory was 865.4 MB in the beginning and 861.8 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
[2020-11-24 18:15:04,303 INFO  L168              Benchmark]: BÃ¼chi Program Product took 941.08 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 54.5 MB). Free memory was 861.8 MB in the beginning and 895.2 MB in the end (delta: -33.3 MB). Peak memory consumption was 145.5 MB. Max. memory is 15.3 GB.
[2020-11-24 18:15:04,304 INFO  L168              Benchmark]: BlockEncodingV2 took 63.87 ms. Allocated memory is still 1.1 GB. Free memory was 895.2 MB in the beginning and 861.0 MB in the end (delta: 34.1 MB). Peak memory consumption was 34.1 MB. Max. memory is 15.3 GB.
[2020-11-24 18:15:04,304 INFO  L168              Benchmark]: BuchiAutomizer took 2039.56 ms. Allocated memory was 1.1 GB in the beginning and 1.3 GB in the end (delta: 226.0 MB). Free memory was 861.0 MB in the beginning and 797.9 MB in the end (delta: 63.1 MB). Peak memory consumption was 289.1 MB. Max. memory is 15.3 GB.
[2020-11-24 18:15:04,306 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    1742 locations, 2951 edges
  - StatisticsResult: Encoded RCFG
    1708 locations, 2872 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.15 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 70.43 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 935.2 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 67.48 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 929.8 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 14.98 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 924.5 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * RCFGBuilder took 581.08 ms. Allocated memory is still 1.0 GB. Free memory was 924.5 MB in the beginning and 865.4 MB in the end (delta: 59.1 MB). Peak memory consumption was 59.1 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 42.39 ms. Allocated memory is still 1.0 GB. Free memory was 865.4 MB in the beginning and 861.8 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 941.08 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 54.5 MB). Free memory was 861.8 MB in the beginning and 895.2 MB in the end (delta: -33.3 MB). Peak memory consumption was 145.5 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 63.87 ms. Allocated memory is still 1.1 GB. Free memory was 895.2 MB in the beginning and 861.0 MB in the end (delta: 34.1 MB). Peak memory consumption was 34.1 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 2039.56 ms. Allocated memory was 1.1 GB in the beginning and 1.3 GB in the end (delta: 226.0 MB). Free memory was 861.0 MB in the beginning and 797.9 MB in the end (delta: 63.1 MB). Peak memory consumption was 289.1 MB. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    753 locations, 914 edges
  - StatisticsResult: BuchiProgram size
    1742 locations, 2951 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 8 terminating modules (8 trivial, 0 deterministic, 0 nondeterministic). 8 modules have a trivial ranking function, the largest among these consists of 17 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 2.0s and 9 iterations.  TraceHistogramMax:2. Analysis of lassos took 0.9s. Construction of modules took 0.4s. BÃ¼chi inclusion checks took 0.4s. Highest rank in rank-based complementation 0. Minimization of det autom 8. Minimization of nondet autom 0. Automata minimization 0.0s AutomataMinimizationTime, 7 MinimizatonAttempts, 35 StatesRemovedByMinimization, 3 NontrivialMinimizations. Non-live state removal took 0.0s Buchi closure took 0.0s. Biggest automaton had 238 states and ocurred in iteration 2.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 2187 SDtfs, 2015 SDslu, 5031 SDs, 0 SdLazy, 1890 SolverSat, 600 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 0.4s Time	LassoAnalysisResults: nont0 unkn0 SFLI0 SFLT0 conc0 concLT0 SILN0 SILU8 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - AllSpecificationsHoldResult: All specifications hold
    Buchi Automizer proved that the LTL property ! ( ( []( (call_transferFrom_TokenERC200) ==> ( <>(success_transferFrom_TokenERC200) ) ) )) holds
RESULT: Ultimate proved your program to be correct!
Received shutdown request...
