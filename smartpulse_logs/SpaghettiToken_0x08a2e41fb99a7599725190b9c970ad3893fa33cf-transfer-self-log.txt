This is Ultimate 0.1.24-f1553f5-m
[2020-11-24 16:12:12,338 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-24 16:12:12,340 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-24 16:12:12,352 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-24 16:12:12,353 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-24 16:12:12,353 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-24 16:12:12,354 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-24 16:12:12,356 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-24 16:12:12,358 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-24 16:12:12,358 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-24 16:12:12,359 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-24 16:12:12,359 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-24 16:12:12,360 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-24 16:12:12,361 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-24 16:12:12,362 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-24 16:12:12,362 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-24 16:12:12,363 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-24 16:12:12,364 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-24 16:12:12,366 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-24 16:12:12,367 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-24 16:12:12,368 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-24 16:12:12,369 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-24 16:12:12,370 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-24 16:12:12,370 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-24 16:12:12,371 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-24 16:12:12,371 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-24 16:12:12,371 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-24 16:12:12,372 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-24 16:12:12,372 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-24 16:12:12,373 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-24 16:12:12,373 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-24 16:12:12,373 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-24 16:12:12,374 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-24 16:12:12,375 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-24 16:12:12,375 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-24 16:12:12,375 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-24 16:12:12,376 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-24 16:12:12,376 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-24 16:12:12,376 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-24 16:12:12,377 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-24 16:12:12,377 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-24 16:12:12,378 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-24 16:12:12,385 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-24 16:12:12,386 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-24 16:12:12,386 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-24 16:12:12,387 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-24 16:12:12,387 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-24 16:12:12,387 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-24 16:12:12,387 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-24 16:12:12,387 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-24 16:12:12,387 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-24 16:12:12,387 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-24 16:12:12,387 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-24 16:12:12,387 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-24 16:12:12,388 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-24 16:12:12,388 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-24 16:12:12,388 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-24 16:12:12,388 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-24 16:12:12,388 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-24 16:12:12,388 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-24 16:12:12,388 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-24 16:12:12,388 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-24 16:12:12,388 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-24 16:12:12,388 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-24 16:12:12,389 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-24 16:12:12,389 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-24 16:12:12,389 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-24 16:12:12,389 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-24 16:12:12,411 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-24 16:12:12,427 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-24 16:12:12,429 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-24 16:12:12,431 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-24 16:12:12,431 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-24 16:12:12,432 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/SpaghettiToken_0x08a2e41fb99a7599725190b9c970ad3893fa33cf_transfer-self.bpl
[2020-11-24 16:12:12,432 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/SpaghettiToken_0x08a2e41fb99a7599725190b9c970ad3893fa33cf_transfer-self.bpl'
[2020-11-24 16:12:12,491 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-24 16:12:12,492 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-24 16:12:12,493 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-24 16:12:12,493 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-24 16:12:12,493 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-24 16:12:12,509 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "SpaghettiToken_0x08a2e41fb99a7599725190b9c970ad3893fa33cf_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 04:12:12" (1/1) ...
[2020-11-24 16:12:12,510 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "SpaghettiToken_0x08a2e41fb99a7599725190b9c970ad3893fa33cf_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 04:12:12" (1/1) ...
[2020-11-24 16:12:12,533 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "SpaghettiToken_0x08a2e41fb99a7599725190b9c970ad3893fa33cf_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 04:12:12" (1/1) ...
[2020-11-24 16:12:12,533 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "SpaghettiToken_0x08a2e41fb99a7599725190b9c970ad3893fa33cf_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 04:12:12" (1/1) ...
[2020-11-24 16:12:12,550 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "SpaghettiToken_0x08a2e41fb99a7599725190b9c970ad3893fa33cf_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 04:12:12" (1/1) ...
[2020-11-24 16:12:12,556 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "SpaghettiToken_0x08a2e41fb99a7599725190b9c970ad3893fa33cf_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 04:12:12" (1/1) ...
[2020-11-24 16:12:12,560 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "SpaghettiToken_0x08a2e41fb99a7599725190b9c970ad3893fa33cf_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 04:12:12" (1/1) ...
[2020-11-24 16:12:12,566 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-24 16:12:12,567 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-24 16:12:12,567 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-24 16:12:12,570 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-24 16:12:12,573 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "SpaghettiToken_0x08a2e41fb99a7599725190b9c970ad3893fa33cf_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 04:12:12" (1/1) ...
[2020-11-24 16:12:12,587 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(SpaghettiToken.transfer(to, value), msg.sender == to && value <= balanceOf_SpaghettiToken[this][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_SpaghettiToken[this][to] >= 0 && balanceOf_SpaghettiToken[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_SpaghettiToken[this][msg.sender] >= 0 &&  balanceOf_SpaghettiToken[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(SpaghettiToken.transfer(to, value), return == true && totalSupply_SpaghettiToken[this] == old(totalSupply_SpaghettiToken[this]) && balanceOf_SpaghettiToken[this] == old(balanceOf_SpaghettiToken[this]) && allowance_SpaghettiToken[this] == old(allowance_SpaghettiToken[this]) && symbol_SpaghettiToken[this] == old(symbol_SpaghettiToken[this]) && decimals_SpaghettiToken[this] == old(decimals_SpaghettiToken[this]) && name_SpaghettiToken[this] == old(name_SpaghettiToken[this]))))
[2020-11-24 16:12:12,592 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(SpaghettiToken.transfer(to, value), msg.sender == to && value <= balanceOf_SpaghettiToken[this][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_SpaghettiToken[this][to] >= 0 && balanceOf_SpaghettiToken[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_SpaghettiToken[this][msg.sender] >= 0 &&  balanceOf_SpaghettiToken[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(SpaghettiToken.transfer(to, value), return == true && totalSupply_SpaghettiToken[this] == old(totalSupply_SpaghettiToken[this]) && balanceOf_SpaghettiToken[this] == old(balanceOf_SpaghettiToken[this]) && allowance_SpaghettiToken[this] == old(allowance_SpaghettiToken[this]) && symbol_SpaghettiToken[this] == old(symbol_SpaghettiToken[this]) && decimals_SpaghettiToken[this] == old(decimals_SpaghettiToken[this]) && name_SpaghettiToken[this] == old(name_SpaghettiToken[this]))))
[2020-11-24 16:12:12,600 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(SpaghettiToken.transfer(to, value), msg.sender == to && value <= balanceOf_SpaghettiToken[this][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_SpaghettiToken[this][to] >= 0 && balanceOf_SpaghettiToken[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_SpaghettiToken[this][msg.sender] >= 0 &&  balanceOf_SpaghettiToken[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(SpaghettiToken.transfer(to, value), return == true && totalSupply_SpaghettiToken[this] == old(totalSupply_SpaghettiToken[this]) && balanceOf_SpaghettiToken[this] == old(balanceOf_SpaghettiToken[this]) && allowance_SpaghettiToken[this] == old(allowance_SpaghettiToken[this]) && symbol_SpaghettiToken[this] == old(symbol_SpaghettiToken[this]) && decimals_SpaghettiToken[this] == old(decimals_SpaghettiToken[this]) && name_SpaghettiToken[this] == old(name_SpaghettiToken[this]))))
[2020-11-24 16:12:12,605 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( msg.sender==dst_s194 && wad_s194<=balanceOf_SpaghettiToken[this][msg.sender] ) && wad_s194>=0 ) && wad_s194<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && balanceOf_SpaghettiToken[this][dst_s194]>=0 ) && balanceOf_SpaghettiToken[this][dst_s194]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && balanceOf_SpaghettiToken[this][msg.sender]>=0 ) && balanceOf_SpaghettiToken[this][msg.sender]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_SpaghettiToken>],IdentifierExpression[dst_s194,<IMPLEMENTATION_INPARAM,transfer~address~uint256_SpaghettiToken>]],BinaryExpression[COMPLEQ,IdentifierExpression[wad_s194,<IMPLEMENTATION_INPARAM,transfer~address~uint256_SpaghettiToken>],ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_SpaghettiToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_SpaghettiToken>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_SpaghettiToken>]]]]],BinaryExpression[COMPGEQ,IdentifierExpression[wad_s194,<IMPLEMENTATION_INPARAM,transfer~address~uint256_SpaghettiToken>],IntegerLiteral[0]]],BinaryExpression[COMPLT,IdentifierExpression[wad_s194,<IMPLEMENTATION_INPARAM,transfer~address~uint256_SpaghettiToken>],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_SpaghettiToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_SpaghettiToken>]]],[IdentifierExpression[dst_s194,<IMPLEMENTATION_INPARAM,transfer~address~uint256_SpaghettiToken>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_SpaghettiToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_SpaghettiToken>]]],[IdentifierExpression[dst_s194,<IMPLEMENTATION_INPARAM,transfer~address~uint256_SpaghettiToken>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_SpaghettiToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_SpaghettiToken>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_SpaghettiToken>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_SpaghettiToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_SpaghettiToken>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_SpaghettiToken>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]]
[2020-11-24 16:12:12,608 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( __ret_0_==true && totalSupply_SpaghettiToken[this]==( old(totalSupply_SpaghettiToken[this]) ) ) && balanceOf_SpaghettiToken[this]==( old(balanceOf_SpaghettiToken[this]) ) ) && allowance_SpaghettiToken[this]==( old(allowance_SpaghettiToken[this]) ) ) && symbol_SpaghettiToken[this]==( old(symbol_SpaghettiToken[this]) ) ) && decimals_SpaghettiToken[this]==( old(decimals_SpaghettiToken[this]) ) ) && name_SpaghettiToken[this]==( old(name_SpaghettiToken[this]) ) ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[__ret_0_,<IMPLEMENTATION_OUTPARAM,transfer~address~uint256_SpaghettiToken>],BooleanLiteral[true]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[totalSupply_SpaghettiToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_SpaghettiToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[totalSupply_SpaghettiToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_SpaghettiToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[balanceOf_SpaghettiToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_SpaghettiToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[balanceOf_SpaghettiToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_SpaghettiToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[allowance_SpaghettiToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_SpaghettiToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[allowance_SpaghettiToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_SpaghettiToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[symbol_SpaghettiToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_SpaghettiToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[symbol_SpaghettiToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_SpaghettiToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[decimals_SpaghettiToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_SpaghettiToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[decimals_SpaghettiToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_SpaghettiToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[name_SpaghettiToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_SpaghettiToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[name_SpaghettiToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_SpaghettiToken>]]]]]]
[2020-11-24 16:12:12,612 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(SpaghettiToken.transfer(to, value), msg.sender == to && value <= balanceOf_SpaghettiToken[this][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_SpaghettiToken[this][to] >= 0 && balanceOf_SpaghettiToken[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_SpaghettiToken[this][msg.sender] >= 0 &&  balanceOf_SpaghettiToken[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(SpaghettiToken.transfer(to, value), return == true && totalSupply_SpaghettiToken[this] == old(totalSupply_SpaghettiToken[this]) && balanceOf_SpaghettiToken[this] == old(balanceOf_SpaghettiToken[this]) && allowance_SpaghettiToken[this] == old(allowance_SpaghettiToken[this]) && symbol_SpaghettiToken[this] == old(symbol_SpaghettiToken[this]) && decimals_SpaghettiToken[this] == old(decimals_SpaghettiToken[this]) && name_SpaghettiToken[this] == old(name_SpaghettiToken[this]))))
[2020-11-24 16:12:12,612 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_transfer_SpaghettiToken0) ==> ( <>AP(success_transfer_SpaghettiToken0) ) ) )
Executed UtopiaSpecLang
[2020-11-24 16:12:12,617 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 04:12:12 PropertyContainer
[2020-11-24 16:12:12,617 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-24 16:12:12,617 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-24 16:12:12,617 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-24 16:12:12,618 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-24 16:12:12,619 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "SpaghettiToken_0x08a2e41fb99a7599725190b9c970ad3893fa33cf_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 04:12:12" (1/2) ...
[2020-11-24 16:12:12,619 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-24 16:12:12,619 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-24 16:12:12,629 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 04:12:12" (2/2) ...
[2020-11-24 16:12:12,629 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-24 16:12:12,629 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-24 16:12:12,629 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-24 16:12:12,630 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-24 16:12:12,630 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "SpaghettiToken_0x08a2e41fb99a7599725190b9c970ad3893fa33cf_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 04:12:12" (1/2) ...
[2020-11-24 16:12:12,683 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-24 16:12:12,684 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_DSMath__success
[2020-11-24 16:12:12,684 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_DSMath__success
[2020-11-24 16:12:12,684 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address_SpaghettiToken
[2020-11-24 16:12:12,684 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address_SpaghettiToken
[2020-11-24 16:12:12,684 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_SpaghettiToken
[2020-11-24 16:12:12,684 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_SpaghettiToken
[2020-11-24 16:12:12,684 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_SpaghettiToken
[2020-11-24 16:12:12,684 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_SpaghettiToken
[2020-11-24 16:12:12,684 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_SpaghettiToken
[2020-11-24 16:12:12,684 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_SpaghettiToken
[2020-11-24 16:12:12,685 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_SpaghettiToken__success
[2020-11-24 16:12:12,685 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_SpaghettiToken
[2020-11-24 16:12:12,685 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_SpaghettiToken
[2020-11-24 16:12:12,685 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_SpaghettiToken
[2020-11-24 16:12:12,685 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_SpaghettiToken
[2020-11-24 16:12:12,687 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_SpaghettiToken
[2020-11-24 16:12:12,687 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_SpaghettiToken
[2020-11-24 16:12:12,687 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-24 16:12:12,687 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-24 16:12:12,687 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-24 16:12:12,687 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_DSMath
[2020-11-24 16:12:12,687 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_DSMath
[2020-11-24 16:12:12,687 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_SpaghettiToken
[2020-11-24 16:12:12,687 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-24 16:12:12,688 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-24 16:12:12,688 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_DSMath__fail
[2020-11-24 16:12:12,688 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_DSMath__fail
[2020-11-24 16:12:12,688 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address_SpaghettiToken__success
[2020-11-24 16:12:12,688 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address_SpaghettiToken__fail
[2020-11-24 16:12:12,688 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_SpaghettiToken__success
[2020-11-24 16:12:12,688 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_SpaghettiToken__fail
[2020-11-24 16:12:12,688 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_SpaghettiToken__success
[2020-11-24 16:12:12,688 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_SpaghettiToken__fail
[2020-11-24 16:12:12,688 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_SpaghettiToken__success
[2020-11-24 16:12:12,688 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_SpaghettiToken__fail
[2020-11-24 16:12:12,688 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_SpaghettiToken__fail
[2020-11-24 16:12:12,688 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_SpaghettiToken__success
[2020-11-24 16:12:12,689 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_SpaghettiToken__fail
[2020-11-24 16:12:12,689 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_SpaghettiToken__success
[2020-11-24 16:12:12,689 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_SpaghettiToken__fail
[2020-11-24 16:12:12,689 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_SpaghettiToken__success
[2020-11-24 16:12:12,689 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_SpaghettiToken__fail
[2020-11-24 16:12:12,689 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-24 16:12:12,689 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-24 16:12:12,689 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-24 16:12:12,689 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-24 16:12:12,689 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-24 16:12:12,689 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_DSMath__fail
[2020-11-24 16:12:12,689 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_DSMath__success
[2020-11-24 16:12:12,689 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_DSMath__fail
[2020-11-24 16:12:12,690 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_DSMath__success
[2020-11-24 16:12:12,690 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address_SpaghettiToken__fail
[2020-11-24 16:12:12,690 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address_SpaghettiToken__success
[2020-11-24 16:12:12,690 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_SpaghettiToken__fail
[2020-11-24 16:12:12,690 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_SpaghettiToken__success
[2020-11-24 16:12:12,690 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_SpaghettiToken__fail
[2020-11-24 16:12:12,690 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_SpaghettiToken__success
[2020-11-24 16:12:12,690 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_SpaghettiToken__fail
[2020-11-24 16:12:12,690 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_SpaghettiToken__success
[2020-11-24 16:12:12,690 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_SpaghettiToken__fail
[2020-11-24 16:12:12,690 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_SpaghettiToken__success
[2020-11-24 16:12:12,690 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_SpaghettiToken__fail
[2020-11-24 16:12:12,690 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_SpaghettiToken__success
[2020-11-24 16:12:12,690 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_SpaghettiToken__fail
[2020-11-24 16:12:12,691 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_SpaghettiToken__success
[2020-11-24 16:12:12,691 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_SpaghettiToken__fail
[2020-11-24 16:12:12,691 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_SpaghettiToken__success
[2020-11-24 16:12:12,691 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-24 16:12:12,691 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-24 16:12:12,691 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-24 16:12:12,691 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-24 16:12:12,691 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-24 16:12:12,691 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-24 16:12:12,691 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_DSMath
[2020-11-24 16:12:12,691 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_DSMath
[2020-11-24 16:12:12,691 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_SpaghettiToken
[2020-11-24 16:12:12,692 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-24 16:12:12,692 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-24 16:12:12,692 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-24 16:12:13,023 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 16:12:13,024 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 16:12:13,024 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 16:12:13,128 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-24 16:12:13,128 INFO  L286             CfgBuilder]: Removed 2 assue(true) statements.
[2020-11-24 16:12:13,130 INFO  L202        PluginConnector]: Adding new model SpaghettiToken_0x08a2e41fb99a7599725190b9c970ad3893fa33cf_transfer-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 04:12:13 BoogieIcfgContainer
[2020-11-24 16:12:13,130 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 04:12:12" (2/2) ...
[2020-11-24 16:12:13,130 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-24 16:12:13,130 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@45f019cb and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 04:12:13, skipping insertion in model container
[2020-11-24 16:12:13,131 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-24 16:12:13,131 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-24 16:12:13,131 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-24 16:12:13,132 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-24 16:12:13,133 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "SpaghettiToken_0x08a2e41fb99a7599725190b9c970ad3893fa33cf_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 04:12:12" (1/3) ...
[2020-11-24 16:12:13,133 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@e65b1b9 and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 04:12:13, skipping insertion in model container
[2020-11-24 16:12:13,133 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 04:12:12" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-24 16:12:13,172 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 04:12:13 NWAContainer
[2020-11-24 16:12:13,172 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-24 16:12:13,172 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-24 16:12:13,172 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-24 16:12:13,173 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-24 16:12:13,174 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "SpaghettiToken_0x08a2e41fb99a7599725190b9c970ad3893fa33cf_transfer-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 04:12:13" (3/4) ...
[2020-11-24 16:12:13,175 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@b58330f and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 04:12:13, skipping insertion in model container
[2020-11-24 16:12:13,175 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 04:12:13" (4/4) ...
[2020-11-24 16:12:13,179 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-24 16:12:13,181 INFO  L110   BuchiProductObserver]: Initial RCFG 527 locations, 668 edges
[2020-11-24 16:12:13,182 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-24 16:12:13,191 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-24 16:12:14,006 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-24 16:12:14,009 INFO  L110   BuchiProductObserver]: BuchiProgram size 1250 locations, 2153 edges
[2020-11-24 16:12:14,009 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 04:12:14 BoogieIcfgContainer
[2020-11-24 16:12:14,009 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-24 16:12:14,010 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-24 16:12:14,010 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-24 16:12:14,012 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-24 16:12:14,012 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 04:12:14" (1/1) ...
[2020-11-24 16:12:14,051 INFO  L313           BlockEncoder]: Initial Icfg 1250 locations, 2153 edges
[2020-11-24 16:12:14,052 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-24 16:12:14,052 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-24 16:12:14,052 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-24 16:12:14,053 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-24 16:12:14,061 INFO  L70    emoveInfeasibleEdges]: Removed 57 edges and 7 locations because of local infeasibility
[2020-11-24 16:12:14,065 INFO  L70        RemoveSinkStates]: Removed 32 edges and 21 locations by removing sink states
[2020-11-24 16:12:14,071 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-24 16:12:14,073 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-24 16:12:14,074 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-24 16:12:14,075 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-24 16:12:14,077 INFO  L313           BlockEncoder]: Encoded RCFG 1212 locations, 2050 edges
[2020-11-24 16:12:14,078 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 24.11 04:12:14 BasicIcfg
[2020-11-24 16:12:14,078 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-24 16:12:14,078 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-24 16:12:14,079 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-24 16:12:14,081 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-24 16:12:14,081 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 16:12:14,081 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "SpaghettiToken_0x08a2e41fb99a7599725190b9c970ad3893fa33cf_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 04:12:12" (1/6) ...
[2020-11-24 16:12:14,082 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@49d6646e and model type SpaghettiToken_0x08a2e41fb99a7599725190b9c970ad3893fa33cf_transfer-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 24.11 04:12:14, skipping insertion in model container
[2020-11-24 16:12:14,082 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 16:12:14,083 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 04:12:12" (2/6) ...
[2020-11-24 16:12:14,083 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@49d6646e and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 24.11 04:12:14, skipping insertion in model container
[2020-11-24 16:12:14,083 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 16:12:14,083 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "SpaghettiToken_0x08a2e41fb99a7599725190b9c970ad3893fa33cf_transfer-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 04:12:13" (3/6) ...
[2020-11-24 16:12:14,083 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@49d6646e and model type SpaghettiToken_0x08a2e41fb99a7599725190b9c970ad3893fa33cf_transfer-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 24.11 04:12:14, skipping insertion in model container
[2020-11-24 16:12:14,084 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 16:12:14,084 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 04:12:13" (4/6) ...
[2020-11-24 16:12:14,084 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@49d6646e and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 24.11 04:12:14, skipping insertion in model container
[2020-11-24 16:12:14,084 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 16:12:14,084 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 04:12:14" (5/6) ...
[2020-11-24 16:12:14,085 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@49d6646e and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 24.11 04:12:14, skipping insertion in model container
[2020-11-24 16:12:14,085 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 16:12:14,085 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 24.11 04:12:14" (6/6) ...
[2020-11-24 16:12:14,086 INFO  L404   chiAutomizerObserver]: Analyzing ICFG SpaghettiToken_0x08a2e41fb99a7599725190b9c970ad3893fa33cf_transfer-self.bpl_BEv2
[2020-11-24 16:12:14,124 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-24 16:12:14,125 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-24 16:12:14,125 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-24 16:12:14,125 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-24 16:12:14,125 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-24 16:12:14,125 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-24 16:12:14,125 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-24 16:12:14,125 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-24 16:12:14,125 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-24 16:12:14,143 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1212 states.
[2020-11-24 16:12:14,188 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 16:12:14,188 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 16:12:14,188 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 16:12:14,198 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 16:12:14,198 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
[2020-11-24 16:12:14,198 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-24 16:12:14,198 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1212 states.
[2020-11-24 16:12:14,209 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 16:12:14,209 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 16:12:14,209 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 16:12:14,210 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 16:12:14,210 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L2]                 success_transfer_SpaghettiToken0 := false;
[L2]                 call_transfer_SpaghettiToken0 := false;
[L2]     CALL        call main();
[L1460]              assume null == 0;
[L1461]  CALL        call this := FreshRefGenerator__success();
[L639]               havoc newRef;
[L640]               assume Alloc[newRef] == false;
[L641]               Alloc[newRef] := true;
[L642]               assume newRef != null;
[L1461]  RET         call this := FreshRefGenerator__success();
[L1462]              assume now >= 0;
[L1463]              assume DType[this] == SpaghettiToken;
[L1464]              assume !revert && gas >= 0;
[L1465]  CALL        call CorralChoice_SpaghettiToken(this);
[L1375]              havoc msgsender_MSG;
[L1376]              havoc msgvalue_MSG;
[L1377]              havoc choice;
[L1378]              havoc __ret_0_totalSupply;
[L1379]              havoc arg329_s0;
[L1380]              havoc __ret_0_balanceOf;
[L1381]              havoc arg330_s0;
[L1382]              havoc arg331_s0;
[L1383]              havoc __ret_0_allowance;
[L1384]              havoc __ret_0_symbol;
[L1385]              havoc __ret_0_decimals;
[L1386]              havoc __ret_0_name;
[L1387]              havoc chef_s113;
[L1388]              havoc guy_s149;
[L1389]              havoc __ret_0_approve;
[L1390]              havoc guy_s177;
[L1391]              havoc wad_s177;
[L1392]              havoc dst_s194;
[L1393]              havoc wad_s194;
[L1394]              havoc __ret_0_transfer;
[L1395]              havoc src_s309;
[L1396]              havoc dst_s309;
[L1397]              havoc wad_s309;
[L1398]              havoc __ret_0_transferFrom;
[L1399]              havoc tmpNow;
[L1400]              havoc gas;
[L1401]              assume gas > 4000000 && gas <= 8000000;
[L1402]              tmpNow := now;
[L1403]              havoc now;
[L1404]              assume now > tmpNow;
[L1405]              assume msgsender_MSG != null;
[L1406]  COND TRUE   choice == 7
[L1407]              gas := gas - 21000;
[L1408]  COND FALSE  !(gas >= 0)
[L1465]  RET         call CorralChoice_SpaghettiToken(this);

Loop:
[L1465]        assume true;

[2020-11-24 16:12:14,228 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 16:12:14,228 INFO  L82        PathProgramCache]: Analyzing trace with hash 2137001749, now seen corresponding path program 1 times
[2020-11-24 16:12:14,232 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 16:12:14,253 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 16:12:14,307 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 16:12:14,309 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 16:12:14,309 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [5] imperfect sequences [] total 5
[2020-11-24 16:12:14,313 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 16:12:14,325 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 5 interpolants.
[2020-11-24 16:12:14,325 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=9, Invalid=11, Unknown=0, NotChecked=0, Total=20
[2020-11-24 16:12:14,326 INFO  L87              Difference]: Start difference. First operand 1212 states. Second operand 5 states.
[2020-11-24 16:12:14,589 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 16:12:14,590 INFO  L93              Difference]: Finished difference Result 695 states and 786 transitions.
[2020-11-24 16:12:14,590 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-24 16:12:14,591 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 695 states and 786 transitions.
[2020-11-24 16:12:14,597 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 16:12:14,604 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 695 states to 246 states and 277 transitions.
[2020-11-24 16:12:14,605 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 4
[2020-11-24 16:12:14,605 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 118
[2020-11-24 16:12:14,606 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 246 states and 277 transitions.
[2020-11-24 16:12:14,608 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 16:12:14,608 INFO  L728         BuchiCegarLoop]: Abstraction has 246 states and 277 transitions.
[2020-11-24 16:12:14,623 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 246 states and 277 transitions.
[2020-11-24 16:12:14,643 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 246 to 246.
[2020-11-24 16:12:14,644 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 246 states.
[2020-11-24 16:12:14,645 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 246 states to 246 states and 277 transitions.
[2020-11-24 16:12:14,645 INFO  L751         BuchiCegarLoop]: Abstraction has 246 states and 277 transitions.
[2020-11-24 16:12:14,646 INFO  L631         BuchiCegarLoop]: Abstraction has 246 states and 277 transitions.
[2020-11-24 16:12:14,646 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-24 16:12:14,646 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 246 states and 277 transitions.
[2020-11-24 16:12:14,647 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 16:12:14,647 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 16:12:14,647 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 16:12:14,648 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 16:12:14,649 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L2]                 success_transfer_SpaghettiToken0 := false;
[L2]                 call_transfer_SpaghettiToken0 := false;
[L2]     CALL        call main();
[L1460]              assume null == 0;
[L1461]  CALL        call this := FreshRefGenerator__success();
[L639]               havoc newRef;
[L640]               assume Alloc[newRef] == false;
[L641]               Alloc[newRef] := true;
[L642]               assume newRef != null;
[L1461]  RET         call this := FreshRefGenerator__success();
[L1462]              assume now >= 0;
[L1463]              assume DType[this] == SpaghettiToken;
[L1464]              assume !revert && gas >= 0;
[L1465]  CALL        call CorralChoice_SpaghettiToken(this);
[L1375]              havoc msgsender_MSG;
[L1376]              havoc msgvalue_MSG;
[L1377]              havoc choice;
[L1378]              havoc __ret_0_totalSupply;
[L1379]              havoc arg329_s0;
[L1380]              havoc __ret_0_balanceOf;
[L1381]              havoc arg330_s0;
[L1382]              havoc arg331_s0;
[L1383]              havoc __ret_0_allowance;
[L1384]              havoc __ret_0_symbol;
[L1385]              havoc __ret_0_decimals;
[L1386]              havoc __ret_0_name;
[L1387]              havoc chef_s113;
[L1388]              havoc guy_s149;
[L1389]              havoc __ret_0_approve;
[L1390]              havoc guy_s177;
[L1391]              havoc wad_s177;
[L1392]              havoc dst_s194;
[L1393]              havoc wad_s194;
[L1394]              havoc __ret_0_transfer;
[L1395]              havoc src_s309;
[L1396]              havoc dst_s309;
[L1397]              havoc wad_s309;
[L1398]              havoc __ret_0_transferFrom;
[L1399]              havoc tmpNow;
[L1400]              havoc gas;
[L1401]              assume gas > 4000000 && gas <= 8000000;
[L1402]              tmpNow := now;
[L1403]              havoc now;
[L1404]              assume now > tmpNow;
[L1405]              assume msgsender_MSG != null;
[L1406]  COND FALSE  !(choice == 7)
[L1412]  COND FALSE  !(choice == 6)
[L1418]  COND FALSE  !(choice == 5)
[L1424]  COND FALSE  !(choice == 4)
[L1430]  COND FALSE  !(choice == 3)
[L1437]  COND TRUE   choice == 2
[L1438]              gas := gas - 21000;
[L1439]  COND TRUE   gas >= 0
[L1440]              assume wad_s194 >= 0 && wad_s194 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1441]              assume msgvalue_MSG == 0;
[L1442]  CALL        call __ret_0_transfer := transfer~address~uint256_SpaghettiToken(this, msgsender_MSG, msgvalue_MSG, dst_s194, wad_s194);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == dst_s194 && wad_s194 <= balanceOf_SpaghettiToken[this][msgsender_MSG]) && wad_s194 >= 0) && wad_s194 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_SpaghettiToken[this][dst_s194] >= 0) && balanceOf_SpaghettiToken[this][dst_s194] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_SpaghettiToken[this][msgsender_MSG] >= 0) && balanceOf_SpaghettiToken[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_SpaghettiToken0 := true;
[L2]                 call_transfer_SpaghettiToken0 := false;
[L2]                 revert := revert_hold;
[L179]               havoc __exception;
[L180]               revert := false;
[L181]   COND FALSE  !(__exception)
[L202]   CALL        call __ret_0_ := transfer~address~uint256_SpaghettiToken__success(this, msgsender_MSG, msgvalue_MSG, dst_s194, wad_s194);
[L740]   CALL        call __var_3 := transferFrom~address~address~uint256_SpaghettiToken__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, dst_s194, wad_s194);
[L826]               __var_4 := -1 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L827]   COND TRUE   src_s309 != msgsender_MSG && allowance_SpaghettiToken[this][src_s309][msgsender_MSG] != -1 % 115792089237316195423570985008687907853269984665640564039457584007913129639936
[L828]   COND TRUE   !(allowance_SpaghettiToken[this][src_s309][msgsender_MSG] >= wad_s309)
[L829]               revert := true;
[L740]   RET         call __var_3 := transferFrom~address~address~uint256_SpaghettiToken__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, dst_s194, wad_s194);
[L741]   COND TRUE   revert
[L202]   RET         call __ret_0_ := transfer~address~uint256_SpaghettiToken__success(this, msgsender_MSG, msgvalue_MSG, dst_s194, wad_s194);
[L203]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !((((((__ret_0_ == true && totalSupply_SpaghettiToken[this] == old(totalSupply_SpaghettiToken[this])) && balanceOf_SpaghettiToken[this] == old(balanceOf_SpaghettiToken[this])) && allowance_SpaghettiToken[this] == old(allowance_SpaghettiToken[this])) && symbol_SpaghettiToken[this] == old(symbol_SpaghettiToken[this])) && decimals_SpaghettiToken[this] == old(decimals_SpaghettiToken[this])) && name_SpaghettiToken[this] == old(name_SpaghettiToken[this]));
[L2]                 revert := revert_hold;
[L1442]  RET         call __ret_0_transfer := transfer~address~uint256_SpaghettiToken(this, msgsender_MSG, msgvalue_MSG, dst_s194, wad_s194);
[L1465]  RET         call CorralChoice_SpaghettiToken(this);

Loop:
[L1465]        assume true;

[2020-11-24 16:12:14,651 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 16:12:14,651 INFO  L82        PathProgramCache]: Analyzing trace with hash -126907524, now seen corresponding path program 1 times
[2020-11-24 16:12:14,652 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 16:12:14,663 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 16:12:14,686 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 16:12:14,686 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 16:12:14,686 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-24 16:12:14,688 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 16:12:14,688 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-24 16:12:14,688 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-24 16:12:14,688 INFO  L87              Difference]: Start difference. First operand 246 states and 277 transitions. cyclomatic complexity: 32 Second operand 3 states.
[2020-11-24 16:12:14,697 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 16:12:14,697 INFO  L93              Difference]: Finished difference Result 275 states and 314 transitions.
[2020-11-24 16:12:14,697 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-24 16:12:14,698 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 275 states and 314 transitions.
[2020-11-24 16:12:14,700 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 16:12:14,702 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 275 states to 236 states and 263 transitions.
[2020-11-24 16:12:14,702 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 117
[2020-11-24 16:12:14,702 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 117
[2020-11-24 16:12:14,702 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 236 states and 263 transitions.
[2020-11-24 16:12:14,703 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 16:12:14,703 INFO  L728         BuchiCegarLoop]: Abstraction has 236 states and 263 transitions.
[2020-11-24 16:12:14,704 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 236 states and 263 transitions.
[2020-11-24 16:12:14,709 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 236 to 236.
[2020-11-24 16:12:14,709 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 236 states.
[2020-11-24 16:12:14,710 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 236 states to 236 states and 263 transitions.
[2020-11-24 16:12:14,710 INFO  L751         BuchiCegarLoop]: Abstraction has 236 states and 263 transitions.
[2020-11-24 16:12:14,710 INFO  L631         BuchiCegarLoop]: Abstraction has 236 states and 263 transitions.
[2020-11-24 16:12:14,710 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-24 16:12:14,710 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 236 states and 263 transitions.
[2020-11-24 16:12:14,711 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 16:12:14,712 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 16:12:14,712 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 16:12:14,713 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 16:12:14,713 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L2]                 success_transfer_SpaghettiToken0 := false;
[L2]                 call_transfer_SpaghettiToken0 := false;
[L2]     CALL        call main();
[L1460]              assume null == 0;
[L1461]  CALL        call this := FreshRefGenerator__success();
[L639]               havoc newRef;
[L640]               assume Alloc[newRef] == false;
[L641]               Alloc[newRef] := true;
[L642]               assume newRef != null;
[L1461]  RET         call this := FreshRefGenerator__success();
[L1462]              assume now >= 0;
[L1463]              assume DType[this] == SpaghettiToken;
[L1464]              assume !revert && gas >= 0;
[L1465]  CALL        call CorralChoice_SpaghettiToken(this);
[L1375]              havoc msgsender_MSG;
[L1376]              havoc msgvalue_MSG;
[L1377]              havoc choice;
[L1378]              havoc __ret_0_totalSupply;
[L1379]              havoc arg329_s0;
[L1380]              havoc __ret_0_balanceOf;
[L1381]              havoc arg330_s0;
[L1382]              havoc arg331_s0;
[L1383]              havoc __ret_0_allowance;
[L1384]              havoc __ret_0_symbol;
[L1385]              havoc __ret_0_decimals;
[L1386]              havoc __ret_0_name;
[L1387]              havoc chef_s113;
[L1388]              havoc guy_s149;
[L1389]              havoc __ret_0_approve;
[L1390]              havoc guy_s177;
[L1391]              havoc wad_s177;
[L1392]              havoc dst_s194;
[L1393]              havoc wad_s194;
[L1394]              havoc __ret_0_transfer;
[L1395]              havoc src_s309;
[L1396]              havoc dst_s309;
[L1397]              havoc wad_s309;
[L1398]              havoc __ret_0_transferFrom;
[L1399]              havoc tmpNow;
[L1400]              havoc gas;
[L1401]              assume gas > 4000000 && gas <= 8000000;
[L1402]              tmpNow := now;
[L1403]              havoc now;
[L1404]              assume now > tmpNow;
[L1405]              assume msgsender_MSG != null;
[L1406]  COND FALSE  !(choice == 7)
[L1412]  COND FALSE  !(choice == 6)
[L1418]  COND FALSE  !(choice == 5)
[L1424]  COND FALSE  !(choice == 4)
[L1430]  COND FALSE  !(choice == 3)
[L1437]  COND TRUE   choice == 2
[L1438]              gas := gas - 21000;
[L1439]  COND TRUE   gas >= 0
[L1440]              assume wad_s194 >= 0 && wad_s194 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1441]              assume msgvalue_MSG == 0;
[L1442]  CALL        call __ret_0_transfer := transfer~address~uint256_SpaghettiToken(this, msgsender_MSG, msgvalue_MSG, dst_s194, wad_s194);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == dst_s194 && wad_s194 <= balanceOf_SpaghettiToken[this][msgsender_MSG]) && wad_s194 >= 0) && wad_s194 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_SpaghettiToken[this][dst_s194] >= 0) && balanceOf_SpaghettiToken[this][dst_s194] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_SpaghettiToken[this][msgsender_MSG] >= 0) && balanceOf_SpaghettiToken[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_SpaghettiToken0 := true;
[L2]                 call_transfer_SpaghettiToken0 := false;
[L2]                 revert := revert_hold;
[L179]               havoc __exception;
[L180]               revert := false;
[L181]   COND FALSE  !(__exception)
[L202]   CALL        call __ret_0_ := transfer~address~uint256_SpaghettiToken__success(this, msgsender_MSG, msgvalue_MSG, dst_s194, wad_s194);
[L740]   CALL        call __var_3 := transferFrom~address~address~uint256_SpaghettiToken__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, dst_s194, wad_s194);
[L826]               __var_4 := -1 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L827]   COND FALSE  !(src_s309 != msgsender_MSG && allowance_SpaghettiToken[this][src_s309][msgsender_MSG] != -1 % 115792089237316195423570985008687907853269984665640564039457584007913129639936)
[L844]   COND TRUE   !(balanceOf_SpaghettiToken[this][src_s309] >= wad_s309)
[L845]               revert := true;
[L740]   RET         call __var_3 := transferFrom~address~address~uint256_SpaghettiToken__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, dst_s194, wad_s194);
[L741]   COND TRUE   revert
[L202]   RET         call __ret_0_ := transfer~address~uint256_SpaghettiToken__success(this, msgsender_MSG, msgvalue_MSG, dst_s194, wad_s194);
[L203]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !((((((__ret_0_ == true && totalSupply_SpaghettiToken[this] == old(totalSupply_SpaghettiToken[this])) && balanceOf_SpaghettiToken[this] == old(balanceOf_SpaghettiToken[this])) && allowance_SpaghettiToken[this] == old(allowance_SpaghettiToken[this])) && symbol_SpaghettiToken[this] == old(symbol_SpaghettiToken[this])) && decimals_SpaghettiToken[this] == old(decimals_SpaghettiToken[this])) && name_SpaghettiToken[this] == old(name_SpaghettiToken[this]));
[L2]                 revert := revert_hold;
[L1442]  RET         call __ret_0_transfer := transfer~address~uint256_SpaghettiToken(this, msgsender_MSG, msgvalue_MSG, dst_s194, wad_s194);
[L1465]  RET         call CorralChoice_SpaghettiToken(this);

Loop:
[L1465]        assume true;

[2020-11-24 16:12:14,715 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 16:12:14,715 INFO  L82        PathProgramCache]: Analyzing trace with hash -335479613, now seen corresponding path program 1 times
[2020-11-24 16:12:14,716 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 16:12:14,724 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 16:12:14,739 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 16:12:14,739 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 16:12:14,740 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-24 16:12:14,740 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 16:12:14,740 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-24 16:12:14,740 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-24 16:12:14,740 INFO  L87              Difference]: Start difference. First operand 236 states and 263 transitions. cyclomatic complexity: 28 Second operand 3 states.
[2020-11-24 16:12:14,750 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 16:12:14,750 INFO  L93              Difference]: Finished difference Result 293 states and 324 transitions.
[2020-11-24 16:12:14,750 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-24 16:12:14,750 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 293 states and 324 transitions.
[2020-11-24 16:12:14,752 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 2
[2020-11-24 16:12:14,754 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 293 states to 266 states and 287 transitions.
[2020-11-24 16:12:14,754 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 137
[2020-11-24 16:12:14,754 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 151
[2020-11-24 16:12:14,754 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 266 states and 287 transitions.
[2020-11-24 16:12:14,755 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 16:12:14,755 INFO  L728         BuchiCegarLoop]: Abstraction has 266 states and 287 transitions.
[2020-11-24 16:12:14,755 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 266 states and 287 transitions.
[2020-11-24 16:12:14,759 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 266 to 255.
[2020-11-24 16:12:14,759 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 255 states.
[2020-11-24 16:12:14,760 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 255 states to 255 states and 276 transitions.
[2020-11-24 16:12:14,760 INFO  L751         BuchiCegarLoop]: Abstraction has 255 states and 276 transitions.
[2020-11-24 16:12:14,760 INFO  L631         BuchiCegarLoop]: Abstraction has 255 states and 276 transitions.
[2020-11-24 16:12:14,760 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-24 16:12:14,761 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 255 states and 276 transitions.
[2020-11-24 16:12:14,762 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 16:12:14,762 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 16:12:14,762 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 16:12:14,763 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 16:12:14,764 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L2]                 success_transfer_SpaghettiToken0 := false;
[L2]                 call_transfer_SpaghettiToken0 := false;
[L2]     CALL        call main();
[L1460]              assume null == 0;
[L1461]  CALL        call this := FreshRefGenerator__success();
[L639]               havoc newRef;
[L640]               assume Alloc[newRef] == false;
[L641]               Alloc[newRef] := true;
[L642]               assume newRef != null;
[L1461]  RET         call this := FreshRefGenerator__success();
[L1462]              assume now >= 0;
[L1463]              assume DType[this] == SpaghettiToken;
[L1464]              assume !revert && gas >= 0;
[L1465]  CALL        call CorralChoice_SpaghettiToken(this);
[L1375]              havoc msgsender_MSG;
[L1376]              havoc msgvalue_MSG;
[L1377]              havoc choice;
[L1378]              havoc __ret_0_totalSupply;
[L1379]              havoc arg329_s0;
[L1380]              havoc __ret_0_balanceOf;
[L1381]              havoc arg330_s0;
[L1382]              havoc arg331_s0;
[L1383]              havoc __ret_0_allowance;
[L1384]              havoc __ret_0_symbol;
[L1385]              havoc __ret_0_decimals;
[L1386]              havoc __ret_0_name;
[L1387]              havoc chef_s113;
[L1388]              havoc guy_s149;
[L1389]              havoc __ret_0_approve;
[L1390]              havoc guy_s177;
[L1391]              havoc wad_s177;
[L1392]              havoc dst_s194;
[L1393]              havoc wad_s194;
[L1394]              havoc __ret_0_transfer;
[L1395]              havoc src_s309;
[L1396]              havoc dst_s309;
[L1397]              havoc wad_s309;
[L1398]              havoc __ret_0_transferFrom;
[L1399]              havoc tmpNow;
[L1400]              havoc gas;
[L1401]              assume gas > 4000000 && gas <= 8000000;
[L1402]              tmpNow := now;
[L1403]              havoc now;
[L1404]              assume now > tmpNow;
[L1405]              assume msgsender_MSG != null;
[L1406]  COND FALSE  !(choice == 7)
[L1412]  COND FALSE  !(choice == 6)
[L1418]  COND FALSE  !(choice == 5)
[L1424]  COND FALSE  !(choice == 4)
[L1430]  COND FALSE  !(choice == 3)
[L1437]  COND TRUE   choice == 2
[L1438]              gas := gas - 21000;
[L1439]  COND TRUE   gas >= 0
[L1440]              assume wad_s194 >= 0 && wad_s194 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1441]              assume msgvalue_MSG == 0;
[L1442]  CALL        call __ret_0_transfer := transfer~address~uint256_SpaghettiToken(this, msgsender_MSG, msgvalue_MSG, dst_s194, wad_s194);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == dst_s194 && wad_s194 <= balanceOf_SpaghettiToken[this][msgsender_MSG]) && wad_s194 >= 0) && wad_s194 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_SpaghettiToken[this][dst_s194] >= 0) && balanceOf_SpaghettiToken[this][dst_s194] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_SpaghettiToken[this][msgsender_MSG] >= 0) && balanceOf_SpaghettiToken[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_SpaghettiToken0 := true;
[L2]                 call_transfer_SpaghettiToken0 := false;
[L2]                 revert := revert_hold;
[L179]               havoc __exception;
[L180]               revert := false;
[L181]   COND TRUE   __exception
[L182]               __tmp__Balance := Balance;
[L183]               __tmp__DType := DType;
[L184]               __tmp__Alloc := Alloc;
[L185]               __tmp__balance_ADDR := balance_ADDR;
[L186]               __tmp__M_Ref_int := M_Ref_int;
[L187]               __tmp__sum_balanceOf0 := sum_balanceOf0;
[L188]               __tmp__alloc_allowance_SpaghettiToken_lvl0 := alloc_allowance_SpaghettiToken_lvl0;
[L189]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L190]               __tmp__sum_allowance1 := sum_allowance1;
[L191]               __tmp__Length := Length;
[L192]               __tmp__now := now;
[L193]               __tmp__totalSupply_SpaghettiToken := totalSupply_SpaghettiToken;
[L194]               __tmp__balanceOf_SpaghettiToken := balanceOf_SpaghettiToken;
[L195]               __tmp__allowance_SpaghettiToken := allowance_SpaghettiToken;
[L196]               __tmp__symbol_SpaghettiToken := symbol_SpaghettiToken;
[L197]               __tmp__decimals_SpaghettiToken := decimals_SpaghettiToken;
[L198]               __tmp__name_SpaghettiToken := name_SpaghettiToken;
[L199]   CALL        call __ret_0_ := transfer~address~uint256_SpaghettiToken__fail(this, msgsender_MSG, msgvalue_MSG, dst_s194, wad_s194);
[L729]   CALL        call __var_3 := transferFrom~address~address~uint256_SpaghettiToken__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, dst_s194, wad_s194);
[L756]               __var_4 := -1 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L757]   COND TRUE   src_s309 != msgsender_MSG && __tmp__allowance_SpaghettiToken[this][src_s309][msgsender_MSG] != -1 % 115792089237316195423570985008687907853269984665640564039457584007913129639936
[L758]   COND TRUE   !(__tmp__allowance_SpaghettiToken[this][src_s309][msgsender_MSG] >= wad_s309)
[L759]               revert := true;
[L729]   RET         call __var_3 := transferFrom~address~address~uint256_SpaghettiToken__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, dst_s194, wad_s194);
[L730]   COND TRUE   revert
[L199]   RET         call __ret_0_ := transfer~address~uint256_SpaghettiToken__fail(this, msgsender_MSG, msgvalue_MSG, dst_s194, wad_s194);
[L200]               assume revert || gas < 0;
[L1442]  RET         call __ret_0_transfer := transfer~address~uint256_SpaghettiToken(this, msgsender_MSG, msgvalue_MSG, dst_s194, wad_s194);
[L1465]  RET         call CorralChoice_SpaghettiToken(this);

Loop:
[L1465]        assume true;

[2020-11-24 16:12:14,766 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 16:12:14,766 INFO  L82        PathProgramCache]: Analyzing trace with hash 792227161, now seen corresponding path program 1 times
[2020-11-24 16:12:14,767 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 16:12:14,776 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 16:12:14,792 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 16:12:14,792 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 16:12:14,792 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-24 16:12:14,793 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 16:12:14,793 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-24 16:12:14,793 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-24 16:12:14,793 INFO  L87              Difference]: Start difference. First operand 255 states and 276 transitions. cyclomatic complexity: 22 Second operand 3 states.
[2020-11-24 16:12:14,803 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 16:12:14,803 INFO  L93              Difference]: Finished difference Result 293 states and 325 transitions.
[2020-11-24 16:12:14,803 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-24 16:12:14,804 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 293 states and 325 transitions.
[2020-11-24 16:12:14,809 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 16:12:14,813 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 293 states to 243 states and 259 transitions.
[2020-11-24 16:12:14,813 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 137
[2020-11-24 16:12:14,814 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 137
[2020-11-24 16:12:14,814 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 243 states and 259 transitions.
[2020-11-24 16:12:14,815 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 16:12:14,815 INFO  L728         BuchiCegarLoop]: Abstraction has 243 states and 259 transitions.
[2020-11-24 16:12:14,816 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 243 states and 259 transitions.
[2020-11-24 16:12:14,821 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 243 to 243.
[2020-11-24 16:12:14,821 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 243 states.
[2020-11-24 16:12:14,822 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 243 states to 243 states and 259 transitions.
[2020-11-24 16:12:14,822 INFO  L751         BuchiCegarLoop]: Abstraction has 243 states and 259 transitions.
[2020-11-24 16:12:14,822 INFO  L631         BuchiCegarLoop]: Abstraction has 243 states and 259 transitions.
[2020-11-24 16:12:14,823 INFO  L445         BuchiCegarLoop]: ======== Iteration 5============
[2020-11-24 16:12:14,823 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 243 states and 259 transitions.
[2020-11-24 16:12:14,824 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 16:12:14,824 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 16:12:14,824 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 16:12:14,825 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 16:12:14,825 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L2]                 success_transfer_SpaghettiToken0 := false;
[L2]                 call_transfer_SpaghettiToken0 := false;
[L2]     CALL        call main();
[L1460]              assume null == 0;
[L1461]  CALL        call this := FreshRefGenerator__success();
[L639]               havoc newRef;
[L640]               assume Alloc[newRef] == false;
[L641]               Alloc[newRef] := true;
[L642]               assume newRef != null;
[L1461]  RET         call this := FreshRefGenerator__success();
[L1462]              assume now >= 0;
[L1463]              assume DType[this] == SpaghettiToken;
[L1464]              assume !revert && gas >= 0;
[L1465]  CALL        call CorralChoice_SpaghettiToken(this);
[L1375]              havoc msgsender_MSG;
[L1376]              havoc msgvalue_MSG;
[L1377]              havoc choice;
[L1378]              havoc __ret_0_totalSupply;
[L1379]              havoc arg329_s0;
[L1380]              havoc __ret_0_balanceOf;
[L1381]              havoc arg330_s0;
[L1382]              havoc arg331_s0;
[L1383]              havoc __ret_0_allowance;
[L1384]              havoc __ret_0_symbol;
[L1385]              havoc __ret_0_decimals;
[L1386]              havoc __ret_0_name;
[L1387]              havoc chef_s113;
[L1388]              havoc guy_s149;
[L1389]              havoc __ret_0_approve;
[L1390]              havoc guy_s177;
[L1391]              havoc wad_s177;
[L1392]              havoc dst_s194;
[L1393]              havoc wad_s194;
[L1394]              havoc __ret_0_transfer;
[L1395]              havoc src_s309;
[L1396]              havoc dst_s309;
[L1397]              havoc wad_s309;
[L1398]              havoc __ret_0_transferFrom;
[L1399]              havoc tmpNow;
[L1400]              havoc gas;
[L1401]              assume gas > 4000000 && gas <= 8000000;
[L1402]              tmpNow := now;
[L1403]              havoc now;
[L1404]              assume now > tmpNow;
[L1405]              assume msgsender_MSG != null;
[L1406]  COND FALSE  !(choice == 7)
[L1412]  COND FALSE  !(choice == 6)
[L1418]  COND FALSE  !(choice == 5)
[L1424]  COND FALSE  !(choice == 4)
[L1430]  COND FALSE  !(choice == 3)
[L1437]  COND TRUE   choice == 2
[L1438]              gas := gas - 21000;
[L1439]  COND TRUE   gas >= 0
[L1440]              assume wad_s194 >= 0 && wad_s194 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1441]              assume msgvalue_MSG == 0;
[L1442]  CALL        call __ret_0_transfer := transfer~address~uint256_SpaghettiToken(this, msgsender_MSG, msgvalue_MSG, dst_s194, wad_s194);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == dst_s194 && wad_s194 <= balanceOf_SpaghettiToken[this][msgsender_MSG]) && wad_s194 >= 0) && wad_s194 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_SpaghettiToken[this][dst_s194] >= 0) && balanceOf_SpaghettiToken[this][dst_s194] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_SpaghettiToken[this][msgsender_MSG] >= 0) && balanceOf_SpaghettiToken[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_SpaghettiToken0 := true;
[L2]                 call_transfer_SpaghettiToken0 := false;
[L2]                 revert := revert_hold;
[L179]               havoc __exception;
[L180]               revert := false;
[L181]   COND TRUE   __exception
[L182]               __tmp__Balance := Balance;
[L183]               __tmp__DType := DType;
[L184]               __tmp__Alloc := Alloc;
[L185]               __tmp__balance_ADDR := balance_ADDR;
[L186]               __tmp__M_Ref_int := M_Ref_int;
[L187]               __tmp__sum_balanceOf0 := sum_balanceOf0;
[L188]               __tmp__alloc_allowance_SpaghettiToken_lvl0 := alloc_allowance_SpaghettiToken_lvl0;
[L189]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L190]               __tmp__sum_allowance1 := sum_allowance1;
[L191]               __tmp__Length := Length;
[L192]               __tmp__now := now;
[L193]               __tmp__totalSupply_SpaghettiToken := totalSupply_SpaghettiToken;
[L194]               __tmp__balanceOf_SpaghettiToken := balanceOf_SpaghettiToken;
[L195]               __tmp__allowance_SpaghettiToken := allowance_SpaghettiToken;
[L196]               __tmp__symbol_SpaghettiToken := symbol_SpaghettiToken;
[L197]               __tmp__decimals_SpaghettiToken := decimals_SpaghettiToken;
[L198]               __tmp__name_SpaghettiToken := name_SpaghettiToken;
[L199]   CALL        call __ret_0_ := transfer~address~uint256_SpaghettiToken__fail(this, msgsender_MSG, msgvalue_MSG, dst_s194, wad_s194);
[L729]   CALL        call __var_3 := transferFrom~address~address~uint256_SpaghettiToken__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, dst_s194, wad_s194);
[L756]               __var_4 := -1 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L757]   COND FALSE  !(src_s309 != msgsender_MSG && __tmp__allowance_SpaghettiToken[this][src_s309][msgsender_MSG] != -1 % 115792089237316195423570985008687907853269984665640564039457584007913129639936)
[L774]   COND TRUE   !(__tmp__balanceOf_SpaghettiToken[this][src_s309] >= wad_s309)
[L775]               revert := true;
[L729]   RET         call __var_3 := transferFrom~address~address~uint256_SpaghettiToken__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, dst_s194, wad_s194);
[L730]   COND TRUE   revert
[L199]   RET         call __ret_0_ := transfer~address~uint256_SpaghettiToken__fail(this, msgsender_MSG, msgvalue_MSG, dst_s194, wad_s194);
[L200]               assume revert || gas < 0;
[L1442]  RET         call __ret_0_transfer := transfer~address~uint256_SpaghettiToken(this, msgsender_MSG, msgvalue_MSG, dst_s194, wad_s194);
[L1465]  RET         call CorralChoice_SpaghettiToken(this);

Loop:
[L1465]        assume true;

[2020-11-24 16:12:14,827 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 16:12:14,827 INFO  L82        PathProgramCache]: Analyzing trace with hash 492506305, now seen corresponding path program 1 times
[2020-11-24 16:12:14,828 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 16:12:14,838 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 16:12:14,877 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 16:12:14,877 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 16:12:14,877 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [7] imperfect sequences [] total 7
[2020-11-24 16:12:14,878 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 16:12:14,878 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 7 interpolants.
[2020-11-24 16:12:14,878 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=11, Invalid=31, Unknown=0, NotChecked=0, Total=42
[2020-11-24 16:12:14,878 INFO  L87              Difference]: Start difference. First operand 243 states and 259 transitions. cyclomatic complexity: 17 Second operand 7 states.
[2020-11-24 16:12:14,993 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 16:12:14,993 INFO  L93              Difference]: Finished difference Result 266 states and 281 transitions.
[2020-11-24 16:12:14,993 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 8 states. 
[2020-11-24 16:12:14,993 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 266 states and 281 transitions.
[2020-11-24 16:12:14,995 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 2
[2020-11-24 16:12:14,996 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 266 states to 259 states and 274 transitions.
[2020-11-24 16:12:14,996 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 153
[2020-11-24 16:12:14,997 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 153
[2020-11-24 16:12:14,997 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 259 states and 274 transitions.
[2020-11-24 16:12:14,997 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 16:12:14,997 INFO  L728         BuchiCegarLoop]: Abstraction has 259 states and 274 transitions.
[2020-11-24 16:12:14,997 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 259 states and 274 transitions.
[2020-11-24 16:12:15,000 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 259 to 242.
[2020-11-24 16:12:15,001 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 242 states.
[2020-11-24 16:12:15,001 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 242 states to 242 states and 257 transitions.
[2020-11-24 16:12:15,001 INFO  L751         BuchiCegarLoop]: Abstraction has 242 states and 257 transitions.
[2020-11-24 16:12:15,002 INFO  L631         BuchiCegarLoop]: Abstraction has 242 states and 257 transitions.
[2020-11-24 16:12:15,002 INFO  L445         BuchiCegarLoop]: ======== Iteration 6============
[2020-11-24 16:12:15,002 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 242 states and 257 transitions.
[2020-11-24 16:12:15,003 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 16:12:15,003 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 16:12:15,003 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 16:12:15,004 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 16:12:15,004 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L2]                 success_transfer_SpaghettiToken0 := false;
[L2]                 call_transfer_SpaghettiToken0 := false;
[L2]     CALL        call main();
[L1460]              assume null == 0;
[L1461]  CALL        call this := FreshRefGenerator__success();
[L639]               havoc newRef;
[L640]               assume Alloc[newRef] == false;
[L641]               Alloc[newRef] := true;
[L642]               assume newRef != null;
[L1461]  RET         call this := FreshRefGenerator__success();
[L1462]              assume now >= 0;
[L1463]              assume DType[this] == SpaghettiToken;
[L1464]              assume !revert && gas >= 0;
[L1465]  CALL        call CorralChoice_SpaghettiToken(this);
[L1375]              havoc msgsender_MSG;
[L1376]              havoc msgvalue_MSG;
[L1377]              havoc choice;
[L1378]              havoc __ret_0_totalSupply;
[L1379]              havoc arg329_s0;
[L1380]              havoc __ret_0_balanceOf;
[L1381]              havoc arg330_s0;
[L1382]              havoc arg331_s0;
[L1383]              havoc __ret_0_allowance;
[L1384]              havoc __ret_0_symbol;
[L1385]              havoc __ret_0_decimals;
[L1386]              havoc __ret_0_name;
[L1387]              havoc chef_s113;
[L1388]              havoc guy_s149;
[L1389]              havoc __ret_0_approve;
[L1390]              havoc guy_s177;
[L1391]              havoc wad_s177;
[L1392]              havoc dst_s194;
[L1393]              havoc wad_s194;
[L1394]              havoc __ret_0_transfer;
[L1395]              havoc src_s309;
[L1396]              havoc dst_s309;
[L1397]              havoc wad_s309;
[L1398]              havoc __ret_0_transferFrom;
[L1399]              havoc tmpNow;
[L1400]              havoc gas;
[L1401]              assume gas > 4000000 && gas <= 8000000;
[L1402]              tmpNow := now;
[L1403]              havoc now;
[L1404]              assume now > tmpNow;
[L1405]              assume msgsender_MSG != null;
[L1406]  COND FALSE  !(choice == 7)
[L1412]  COND FALSE  !(choice == 6)
[L1418]  COND FALSE  !(choice == 5)
[L1424]  COND FALSE  !(choice == 4)
[L1430]  COND FALSE  !(choice == 3)
[L1437]  COND TRUE   choice == 2
[L1438]              gas := gas - 21000;
[L1439]  COND TRUE   gas >= 0
[L1440]              assume wad_s194 >= 0 && wad_s194 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1441]              assume msgvalue_MSG == 0;
[L1442]  CALL        call __ret_0_transfer := transfer~address~uint256_SpaghettiToken(this, msgsender_MSG, msgvalue_MSG, dst_s194, wad_s194);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == dst_s194 && wad_s194 <= balanceOf_SpaghettiToken[this][msgsender_MSG]) && wad_s194 >= 0) && wad_s194 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_SpaghettiToken[this][dst_s194] >= 0) && balanceOf_SpaghettiToken[this][dst_s194] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_SpaghettiToken[this][msgsender_MSG] >= 0) && balanceOf_SpaghettiToken[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_SpaghettiToken0 := true;
[L2]                 call_transfer_SpaghettiToken0 := false;
[L2]                 revert := revert_hold;
[L179]               havoc __exception;
[L180]               revert := false;
[L181]   COND TRUE   __exception
[L182]               __tmp__Balance := Balance;
[L183]               __tmp__DType := DType;
[L184]               __tmp__Alloc := Alloc;
[L185]               __tmp__balance_ADDR := balance_ADDR;
[L186]               __tmp__M_Ref_int := M_Ref_int;
[L187]               __tmp__sum_balanceOf0 := sum_balanceOf0;
[L188]               __tmp__alloc_allowance_SpaghettiToken_lvl0 := alloc_allowance_SpaghettiToken_lvl0;
[L189]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L190]               __tmp__sum_allowance1 := sum_allowance1;
[L191]               __tmp__Length := Length;
[L192]               __tmp__now := now;
[L193]               __tmp__totalSupply_SpaghettiToken := totalSupply_SpaghettiToken;
[L194]               __tmp__balanceOf_SpaghettiToken := balanceOf_SpaghettiToken;
[L195]               __tmp__allowance_SpaghettiToken := allowance_SpaghettiToken;
[L196]               __tmp__symbol_SpaghettiToken := symbol_SpaghettiToken;
[L197]               __tmp__decimals_SpaghettiToken := decimals_SpaghettiToken;
[L198]               __tmp__name_SpaghettiToken := name_SpaghettiToken;
[L199]   CALL        call __ret_0_ := transfer~address~uint256_SpaghettiToken__fail(this, msgsender_MSG, msgvalue_MSG, dst_s194, wad_s194);
[L729]   CALL        call __var_3 := transferFrom~address~address~uint256_SpaghettiToken__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, dst_s194, wad_s194);
[L756]               __var_4 := -1 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L757]   COND FALSE  !(src_s309 != msgsender_MSG && __tmp__allowance_SpaghettiToken[this][src_s309][msgsender_MSG] != -1 % 115792089237316195423570985008687907853269984665640564039457584007913129639936)
[L774]   COND FALSE  !(!(__tmp__balanceOf_SpaghettiToken[this][src_s309] >= wad_s309))
[L778]   COND TRUE   __tmp__DType[this] == SpaghettiToken
[L779]   CALL        call __var_6 := sub~uint256~uint256_DSMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balanceOf_SpaghettiToken[this][src_s309], wad_s309);
[L665]               z_s45 := (x_s45 - y_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L666]   COND FALSE  !(!((x_s45 - y_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 <= x_s45))
[L779]   RET         call __var_6 := sub~uint256~uint256_DSMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balanceOf_SpaghettiToken[this][src_s309], wad_s309);
[L780]   COND TRUE   revert
[L729]   RET         call __var_3 := transferFrom~address~address~uint256_SpaghettiToken__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, dst_s194, wad_s194);
[L730]   COND TRUE   revert
[L199]   RET         call __ret_0_ := transfer~address~uint256_SpaghettiToken__fail(this, msgsender_MSG, msgvalue_MSG, dst_s194, wad_s194);
[L200]               assume revert || gas < 0;
[L1442]  RET         call __ret_0_transfer := transfer~address~uint256_SpaghettiToken(this, msgsender_MSG, msgvalue_MSG, dst_s194, wad_s194);
[L1465]  RET         call CorralChoice_SpaghettiToken(this);

Loop:
[L1465]        assume true;

[2020-11-24 16:12:15,006 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 16:12:15,006 INFO  L82        PathProgramCache]: Analyzing trace with hash 263695893, now seen corresponding path program 1 times
[2020-11-24 16:12:15,006 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 16:12:15,014 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 16:12:15,033 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 16:12:15,034 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 16:12:15,034 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [5] imperfect sequences [] total 5
[2020-11-24 16:12:15,034 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 16:12:15,034 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 5 interpolants.
[2020-11-24 16:12:15,034 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=9, Invalid=11, Unknown=0, NotChecked=0, Total=20
[2020-11-24 16:12:15,034 INFO  L87              Difference]: Start difference. First operand 242 states and 257 transitions. cyclomatic complexity: 16 Second operand 5 states.
[2020-11-24 16:12:15,048 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 16:12:15,048 INFO  L93              Difference]: Finished difference Result 253 states and 262 transitions.
[2020-11-24 16:12:15,048 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-24 16:12:15,048 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 253 states and 262 transitions.
[2020-11-24 16:12:15,050 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 2
[2020-11-24 16:12:15,051 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 253 states to 253 states and 262 transitions.
[2020-11-24 16:12:15,051 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 147
[2020-11-24 16:12:15,051 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 147
[2020-11-24 16:12:15,052 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 253 states and 262 transitions.
[2020-11-24 16:12:15,052 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 16:12:15,052 INFO  L728         BuchiCegarLoop]: Abstraction has 253 states and 262 transitions.
[2020-11-24 16:12:15,052 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 253 states and 262 transitions.
[2020-11-24 16:12:15,055 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 253 to 242.
[2020-11-24 16:12:15,055 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 242 states.
[2020-11-24 16:12:15,056 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 242 states to 242 states and 251 transitions.
[2020-11-24 16:12:15,056 INFO  L751         BuchiCegarLoop]: Abstraction has 242 states and 251 transitions.
[2020-11-24 16:12:15,056 INFO  L631         BuchiCegarLoop]: Abstraction has 242 states and 251 transitions.
[2020-11-24 16:12:15,056 INFO  L445         BuchiCegarLoop]: ======== Iteration 7============
[2020-11-24 16:12:15,056 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 242 states and 251 transitions.
[2020-11-24 16:12:15,057 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 16:12:15,057 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 16:12:15,058 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 16:12:15,058 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 16:12:15,058 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L2]                 success_transfer_SpaghettiToken0 := false;
[L2]                 call_transfer_SpaghettiToken0 := false;
[L2]     CALL        call main();
[L1460]              assume null == 0;
[L1461]  CALL        call this := FreshRefGenerator__success();
[L639]               havoc newRef;
[L640]               assume Alloc[newRef] == false;
[L641]               Alloc[newRef] := true;
[L642]               assume newRef != null;
[L1461]  RET         call this := FreshRefGenerator__success();
[L1462]              assume now >= 0;
[L1463]              assume DType[this] == SpaghettiToken;
[L1464]              assume !revert && gas >= 0;
[L1465]  CALL        call CorralChoice_SpaghettiToken(this);
[L1375]              havoc msgsender_MSG;
[L1376]              havoc msgvalue_MSG;
[L1377]              havoc choice;
[L1378]              havoc __ret_0_totalSupply;
[L1379]              havoc arg329_s0;
[L1380]              havoc __ret_0_balanceOf;
[L1381]              havoc arg330_s0;
[L1382]              havoc arg331_s0;
[L1383]              havoc __ret_0_allowance;
[L1384]              havoc __ret_0_symbol;
[L1385]              havoc __ret_0_decimals;
[L1386]              havoc __ret_0_name;
[L1387]              havoc chef_s113;
[L1388]              havoc guy_s149;
[L1389]              havoc __ret_0_approve;
[L1390]              havoc guy_s177;
[L1391]              havoc wad_s177;
[L1392]              havoc dst_s194;
[L1393]              havoc wad_s194;
[L1394]              havoc __ret_0_transfer;
[L1395]              havoc src_s309;
[L1396]              havoc dst_s309;
[L1397]              havoc wad_s309;
[L1398]              havoc __ret_0_transferFrom;
[L1399]              havoc tmpNow;
[L1400]              havoc gas;
[L1401]              assume gas > 4000000 && gas <= 8000000;
[L1402]              tmpNow := now;
[L1403]              havoc now;
[L1404]              assume now > tmpNow;
[L1405]              assume msgsender_MSG != null;
[L1406]  COND FALSE  !(choice == 7)
[L1412]  COND FALSE  !(choice == 6)
[L1418]  COND FALSE  !(choice == 5)
[L1424]  COND FALSE  !(choice == 4)
[L1430]  COND FALSE  !(choice == 3)
[L1437]  COND TRUE   choice == 2
[L1438]              gas := gas - 21000;
[L1439]  COND TRUE   gas >= 0
[L1440]              assume wad_s194 >= 0 && wad_s194 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1441]              assume msgvalue_MSG == 0;
[L1442]  CALL        call __ret_0_transfer := transfer~address~uint256_SpaghettiToken(this, msgsender_MSG, msgvalue_MSG, dst_s194, wad_s194);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == dst_s194 && wad_s194 <= balanceOf_SpaghettiToken[this][msgsender_MSG]) && wad_s194 >= 0) && wad_s194 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_SpaghettiToken[this][dst_s194] >= 0) && balanceOf_SpaghettiToken[this][dst_s194] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_SpaghettiToken[this][msgsender_MSG] >= 0) && balanceOf_SpaghettiToken[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_SpaghettiToken0 := true;
[L2]                 call_transfer_SpaghettiToken0 := false;
[L2]                 revert := revert_hold;
[L179]               havoc __exception;
[L180]               revert := false;
[L181]   COND TRUE   __exception
[L182]               __tmp__Balance := Balance;
[L183]               __tmp__DType := DType;
[L184]               __tmp__Alloc := Alloc;
[L185]               __tmp__balance_ADDR := balance_ADDR;
[L186]               __tmp__M_Ref_int := M_Ref_int;
[L187]               __tmp__sum_balanceOf0 := sum_balanceOf0;
[L188]               __tmp__alloc_allowance_SpaghettiToken_lvl0 := alloc_allowance_SpaghettiToken_lvl0;
[L189]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L190]               __tmp__sum_allowance1 := sum_allowance1;
[L191]               __tmp__Length := Length;
[L192]               __tmp__now := now;
[L193]               __tmp__totalSupply_SpaghettiToken := totalSupply_SpaghettiToken;
[L194]               __tmp__balanceOf_SpaghettiToken := balanceOf_SpaghettiToken;
[L195]               __tmp__allowance_SpaghettiToken := allowance_SpaghettiToken;
[L196]               __tmp__symbol_SpaghettiToken := symbol_SpaghettiToken;
[L197]               __tmp__decimals_SpaghettiToken := decimals_SpaghettiToken;
[L198]               __tmp__name_SpaghettiToken := name_SpaghettiToken;
[L199]   CALL        call __ret_0_ := transfer~address~uint256_SpaghettiToken__fail(this, msgsender_MSG, msgvalue_MSG, dst_s194, wad_s194);
[L729]   CALL        call __var_3 := transferFrom~address~address~uint256_SpaghettiToken__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, dst_s194, wad_s194);
[L756]               __var_4 := -1 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L757]   COND FALSE  !(src_s309 != msgsender_MSG && __tmp__allowance_SpaghettiToken[this][src_s309][msgsender_MSG] != -1 % 115792089237316195423570985008687907853269984665640564039457584007913129639936)
[L774]   COND FALSE  !(!(__tmp__balanceOf_SpaghettiToken[this][src_s309] >= wad_s309))
[L778]   COND TRUE   __tmp__DType[this] == SpaghettiToken
[L779]   CALL        call __var_6 := sub~uint256~uint256_DSMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balanceOf_SpaghettiToken[this][src_s309], wad_s309);
[L665]               z_s45 := (x_s45 - y_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L666]   COND TRUE   !((x_s45 - y_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 <= x_s45)
[L667]               revert := true;
[L779]   RET         call __var_6 := sub~uint256~uint256_DSMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balanceOf_SpaghettiToken[this][src_s309], wad_s309);
[L780]   COND TRUE   revert
[L729]   RET         call __var_3 := transferFrom~address~address~uint256_SpaghettiToken__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, dst_s194, wad_s194);
[L730]   COND TRUE   revert
[L199]   RET         call __ret_0_ := transfer~address~uint256_SpaghettiToken__fail(this, msgsender_MSG, msgvalue_MSG, dst_s194, wad_s194);
[L200]               assume revert || gas < 0;
[L1442]  RET         call __ret_0_transfer := transfer~address~uint256_SpaghettiToken(this, msgsender_MSG, msgvalue_MSG, dst_s194, wad_s194);
[L1465]  RET         call CorralChoice_SpaghettiToken(this);

Loop:
[L1465]        assume true;

[2020-11-24 16:12:15,060 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 16:12:15,060 INFO  L82        PathProgramCache]: Analyzing trace with hash -1561366526, now seen corresponding path program 1 times
[2020-11-24 16:12:15,061 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 16:12:15,072 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 16:12:15,111 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 16:12:15,112 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 16:12:15,112 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [7] imperfect sequences [] total 7
[2020-11-24 16:12:15,112 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 16:12:15,112 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 7 interpolants.
[2020-11-24 16:12:15,112 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=11, Invalid=31, Unknown=0, NotChecked=0, Total=42
[2020-11-24 16:12:15,113 INFO  L87              Difference]: Start difference. First operand 242 states and 251 transitions. cyclomatic complexity: 10 Second operand 7 states.
[2020-11-24 16:12:15,145 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 16:12:15,145 INFO  L93              Difference]: Finished difference Result 248 states and 256 transitions.
[2020-11-24 16:12:15,145 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 7 states. 
[2020-11-24 16:12:15,145 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 248 states and 256 transitions.
[2020-11-24 16:12:15,147 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 16:12:15,148 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 248 states to 240 states and 248 transitions.
[2020-11-24 16:12:15,148 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 134
[2020-11-24 16:12:15,149 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 134
[2020-11-24 16:12:15,149 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 240 states and 248 transitions.
[2020-11-24 16:12:15,149 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 16:12:15,149 INFO  L728         BuchiCegarLoop]: Abstraction has 240 states and 248 transitions.
[2020-11-24 16:12:15,150 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 240 states and 248 transitions.
[2020-11-24 16:12:15,152 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 240 to 240.
[2020-11-24 16:12:15,153 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 240 states.
[2020-11-24 16:12:15,153 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 240 states to 240 states and 248 transitions.
[2020-11-24 16:12:15,154 INFO  L751         BuchiCegarLoop]: Abstraction has 240 states and 248 transitions.
[2020-11-24 16:12:15,154 INFO  L631         BuchiCegarLoop]: Abstraction has 240 states and 248 transitions.
[2020-11-24 16:12:15,154 INFO  L445         BuchiCegarLoop]: ======== Iteration 8============
[2020-11-24 16:12:15,154 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 240 states and 248 transitions.
[2020-11-24 16:12:15,155 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 16:12:15,155 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 16:12:15,155 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 16:12:15,156 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 16:12:15,156 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L2]                 success_transfer_SpaghettiToken0 := false;
[L2]                 call_transfer_SpaghettiToken0 := false;
[L2]     CALL        call main();
[L1460]              assume null == 0;
[L1461]  CALL        call this := FreshRefGenerator__success();
[L639]               havoc newRef;
[L640]               assume Alloc[newRef] == false;
[L641]               Alloc[newRef] := true;
[L642]               assume newRef != null;
[L1461]  RET         call this := FreshRefGenerator__success();
[L1462]              assume now >= 0;
[L1463]              assume DType[this] == SpaghettiToken;
[L1464]              assume !revert && gas >= 0;
[L1465]  CALL        call CorralChoice_SpaghettiToken(this);
[L1375]              havoc msgsender_MSG;
[L1376]              havoc msgvalue_MSG;
[L1377]              havoc choice;
[L1378]              havoc __ret_0_totalSupply;
[L1379]              havoc arg329_s0;
[L1380]              havoc __ret_0_balanceOf;
[L1381]              havoc arg330_s0;
[L1382]              havoc arg331_s0;
[L1383]              havoc __ret_0_allowance;
[L1384]              havoc __ret_0_symbol;
[L1385]              havoc __ret_0_decimals;
[L1386]              havoc __ret_0_name;
[L1387]              havoc chef_s113;
[L1388]              havoc guy_s149;
[L1389]              havoc __ret_0_approve;
[L1390]              havoc guy_s177;
[L1391]              havoc wad_s177;
[L1392]              havoc dst_s194;
[L1393]              havoc wad_s194;
[L1394]              havoc __ret_0_transfer;
[L1395]              havoc src_s309;
[L1396]              havoc dst_s309;
[L1397]              havoc wad_s309;
[L1398]              havoc __ret_0_transferFrom;
[L1399]              havoc tmpNow;
[L1400]              havoc gas;
[L1401]              assume gas > 4000000 && gas <= 8000000;
[L1402]              tmpNow := now;
[L1403]              havoc now;
[L1404]              assume now > tmpNow;
[L1405]              assume msgsender_MSG != null;
[L1406]  COND FALSE  !(choice == 7)
[L1412]  COND FALSE  !(choice == 6)
[L1418]  COND FALSE  !(choice == 5)
[L1424]  COND FALSE  !(choice == 4)
[L1430]  COND FALSE  !(choice == 3)
[L1437]  COND TRUE   choice == 2
[L1438]              gas := gas - 21000;
[L1439]  COND TRUE   gas >= 0
[L1440]              assume wad_s194 >= 0 && wad_s194 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1441]              assume msgvalue_MSG == 0;
[L1442]  CALL        call __ret_0_transfer := transfer~address~uint256_SpaghettiToken(this, msgsender_MSG, msgvalue_MSG, dst_s194, wad_s194);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == dst_s194 && wad_s194 <= balanceOf_SpaghettiToken[this][msgsender_MSG]) && wad_s194 >= 0) && wad_s194 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_SpaghettiToken[this][dst_s194] >= 0) && balanceOf_SpaghettiToken[this][dst_s194] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_SpaghettiToken[this][msgsender_MSG] >= 0) && balanceOf_SpaghettiToken[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_SpaghettiToken0 := true;
[L2]                 call_transfer_SpaghettiToken0 := false;
[L2]                 revert := revert_hold;
[L179]               havoc __exception;
[L180]               revert := false;
[L181]   COND TRUE   __exception
[L182]               __tmp__Balance := Balance;
[L183]               __tmp__DType := DType;
[L184]               __tmp__Alloc := Alloc;
[L185]               __tmp__balance_ADDR := balance_ADDR;
[L186]               __tmp__M_Ref_int := M_Ref_int;
[L187]               __tmp__sum_balanceOf0 := sum_balanceOf0;
[L188]               __tmp__alloc_allowance_SpaghettiToken_lvl0 := alloc_allowance_SpaghettiToken_lvl0;
[L189]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L190]               __tmp__sum_allowance1 := sum_allowance1;
[L191]               __tmp__Length := Length;
[L192]               __tmp__now := now;
[L193]               __tmp__totalSupply_SpaghettiToken := totalSupply_SpaghettiToken;
[L194]               __tmp__balanceOf_SpaghettiToken := balanceOf_SpaghettiToken;
[L195]               __tmp__allowance_SpaghettiToken := allowance_SpaghettiToken;
[L196]               __tmp__symbol_SpaghettiToken := symbol_SpaghettiToken;
[L197]               __tmp__decimals_SpaghettiToken := decimals_SpaghettiToken;
[L198]               __tmp__name_SpaghettiToken := name_SpaghettiToken;
[L199]   CALL        call __ret_0_ := transfer~address~uint256_SpaghettiToken__fail(this, msgsender_MSG, msgvalue_MSG, dst_s194, wad_s194);
[L729]   CALL        call __var_3 := transferFrom~address~address~uint256_SpaghettiToken__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, dst_s194, wad_s194);
[L756]               __var_4 := -1 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L757]   COND FALSE  !(src_s309 != msgsender_MSG && __tmp__allowance_SpaghettiToken[this][src_s309][msgsender_MSG] != -1 % 115792089237316195423570985008687907853269984665640564039457584007913129639936)
[L774]   COND FALSE  !(!(__tmp__balanceOf_SpaghettiToken[this][src_s309] >= wad_s309))
[L778]   COND TRUE   __tmp__DType[this] == SpaghettiToken
[L779]   CALL        call __var_6 := sub~uint256~uint256_DSMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balanceOf_SpaghettiToken[this][src_s309], wad_s309);
[L665]               z_s45 := (x_s45 - y_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L666]   COND FALSE  !(!((x_s45 - y_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 <= x_s45))
[L779]   RET         call __var_6 := sub~uint256~uint256_DSMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balanceOf_SpaghettiToken[this][src_s309], wad_s309);
[L780]   COND FALSE  !(revert)
[L786]               __tmp__sum_balanceOf0[this] := __tmp__sum_balanceOf0[this] - __tmp__balanceOf_SpaghettiToken[this][src_s309];
[L787]               __tmp__balanceOf_SpaghettiToken[this][src_s309] := __var_6;
[L788]               __tmp__sum_balanceOf0[this] := __tmp__sum_balanceOf0[this] + __tmp__balanceOf_SpaghettiToken[this][src_s309];
[L789]               one_s309 := wad_s309 / 100 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L790]   COND TRUE   __tmp__DType[this] == SpaghettiToken
[L791]   CALL        call ninetynine_s309 := sub~uint256~uint256_DSMath__fail(this, msgsender_MSG, msgvalue_MSG, wad_s309, one_s309);
[L665]               z_s45 := (x_s45 - y_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L666]   COND FALSE  !(!((x_s45 - y_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 <= x_s45))
[L791]   RET         call ninetynine_s309 := sub~uint256~uint256_DSMath__fail(this, msgsender_MSG, msgvalue_MSG, wad_s309, one_s309);
[L792]   COND FALSE  !(revert)
[L798]               ninetynine_s309 := ninetynine_s309;
[L799]   COND TRUE   __tmp__DType[this] == SpaghettiToken
[L800]   CALL        call __var_7 := add~uint256~uint256_DSMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balanceOf_SpaghettiToken[this][dst_s309], ninetynine_s309);
[L647]               z_s23 := (x_s23 + y_s23) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L648]   COND TRUE   !((x_s23 + y_s23) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 >= x_s23)
[L649]               revert := true;
[L800]   RET         call __var_7 := add~uint256~uint256_DSMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balanceOf_SpaghettiToken[this][dst_s309], ninetynine_s309);
[L801]   COND TRUE   revert
[L729]   RET         call __var_3 := transferFrom~address~address~uint256_SpaghettiToken__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, dst_s194, wad_s194);
[L730]   COND TRUE   revert
[L199]   RET         call __ret_0_ := transfer~address~uint256_SpaghettiToken__fail(this, msgsender_MSG, msgvalue_MSG, dst_s194, wad_s194);
[L200]               assume revert || gas < 0;
[L1442]  RET         call __ret_0_transfer := transfer~address~uint256_SpaghettiToken(this, msgsender_MSG, msgvalue_MSG, dst_s194, wad_s194);
[L1465]  RET         call CorralChoice_SpaghettiToken(this);

Loop:
[L1465]        assume true;

[2020-11-24 16:12:15,158 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 16:12:15,158 INFO  L82        PathProgramCache]: Analyzing trace with hash 1487734764, now seen corresponding path program 1 times
[2020-11-24 16:12:15,159 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 16:12:15,177 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 16:12:15,427 INFO  L134       CoverageAnalysis]: Checked inductivity of 4 backedges. 1 proven. 2 refuted. 0 times theorem prover too weak. 1 trivial. 0 not checked.
[2020-11-24 16:12:15,427 INFO  L312   seRefinementStrategy]: Constructing automaton from 0 perfect and 1 imperfect interpolant sequences.
[2020-11-24 16:12:15,428 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [] imperfect sequences [15] total 15
[2020-11-24 16:12:15,428 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 16:12:15,429 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 15 interpolants.
[2020-11-24 16:12:15,429 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=28, Invalid=182, Unknown=0, NotChecked=0, Total=210
[2020-11-24 16:12:15,429 INFO  L87              Difference]: Start difference. First operand 240 states and 248 transitions. cyclomatic complexity: 9 Second operand 15 states.
[2020-11-24 16:12:15,901 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 16:12:15,901 INFO  L93              Difference]: Finished difference Result 255 states and 262 transitions.
[2020-11-24 16:12:15,901 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 15 states. 
[2020-11-24 16:12:15,902 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 255 states and 262 transitions.
[2020-11-24 16:12:15,903 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 2
[2020-11-24 16:12:15,903 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 255 states to 244 states and 251 transitions.
[2020-11-24 16:12:15,903 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 138
[2020-11-24 16:12:15,904 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 138
[2020-11-24 16:12:15,904 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 244 states and 251 transitions.
[2020-11-24 16:12:15,904 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 16:12:15,904 INFO  L728         BuchiCegarLoop]: Abstraction has 244 states and 251 transitions.
[2020-11-24 16:12:15,904 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 244 states and 251 transitions.
[2020-11-24 16:12:15,906 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 244 to 235.
[2020-11-24 16:12:15,906 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 235 states.
[2020-11-24 16:12:15,906 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 235 states to 235 states and 242 transitions.
[2020-11-24 16:12:15,906 INFO  L751         BuchiCegarLoop]: Abstraction has 235 states and 242 transitions.
[2020-11-24 16:12:15,906 INFO  L631         BuchiCegarLoop]: Abstraction has 235 states and 242 transitions.
[2020-11-24 16:12:15,906 INFO  L445         BuchiCegarLoop]: ======== Iteration 9============
[2020-11-24 16:12:15,906 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 235 states and 242 transitions.
[2020-11-24 16:12:15,907 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 16:12:15,907 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 16:12:15,907 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 16:12:15,908 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 16:12:15,908 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L2]                 success_transfer_SpaghettiToken0 := false;
[L2]                 call_transfer_SpaghettiToken0 := false;
[L2]     CALL        call main();
[L1460]              assume null == 0;
[L1461]  CALL        call this := FreshRefGenerator__success();
[L639]               havoc newRef;
[L640]               assume Alloc[newRef] == false;
[L641]               Alloc[newRef] := true;
[L642]               assume newRef != null;
[L1461]  RET         call this := FreshRefGenerator__success();
[L1462]              assume now >= 0;
[L1463]              assume DType[this] == SpaghettiToken;
[L1464]              assume !revert && gas >= 0;
[L1465]  CALL        call CorralChoice_SpaghettiToken(this);
[L1375]              havoc msgsender_MSG;
[L1376]              havoc msgvalue_MSG;
[L1377]              havoc choice;
[L1378]              havoc __ret_0_totalSupply;
[L1379]              havoc arg329_s0;
[L1380]              havoc __ret_0_balanceOf;
[L1381]              havoc arg330_s0;
[L1382]              havoc arg331_s0;
[L1383]              havoc __ret_0_allowance;
[L1384]              havoc __ret_0_symbol;
[L1385]              havoc __ret_0_decimals;
[L1386]              havoc __ret_0_name;
[L1387]              havoc chef_s113;
[L1388]              havoc guy_s149;
[L1389]              havoc __ret_0_approve;
[L1390]              havoc guy_s177;
[L1391]              havoc wad_s177;
[L1392]              havoc dst_s194;
[L1393]              havoc wad_s194;
[L1394]              havoc __ret_0_transfer;
[L1395]              havoc src_s309;
[L1396]              havoc dst_s309;
[L1397]              havoc wad_s309;
[L1398]              havoc __ret_0_transferFrom;
[L1399]              havoc tmpNow;
[L1400]              havoc gas;
[L1401]              assume gas > 4000000 && gas <= 8000000;
[L1402]              tmpNow := now;
[L1403]              havoc now;
[L1404]              assume now > tmpNow;
[L1405]              assume msgsender_MSG != null;
[L1406]  COND FALSE  !(choice == 7)
[L1412]  COND FALSE  !(choice == 6)
[L1418]  COND FALSE  !(choice == 5)
[L1424]  COND FALSE  !(choice == 4)
[L1430]  COND FALSE  !(choice == 3)
[L1437]  COND TRUE   choice == 2
[L1438]              gas := gas - 21000;
[L1439]  COND TRUE   gas >= 0
[L1440]              assume wad_s194 >= 0 && wad_s194 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1441]              assume msgvalue_MSG == 0;
[L1442]  CALL        call __ret_0_transfer := transfer~address~uint256_SpaghettiToken(this, msgsender_MSG, msgvalue_MSG, dst_s194, wad_s194);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == dst_s194 && wad_s194 <= balanceOf_SpaghettiToken[this][msgsender_MSG]) && wad_s194 >= 0) && wad_s194 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_SpaghettiToken[this][dst_s194] >= 0) && balanceOf_SpaghettiToken[this][dst_s194] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_SpaghettiToken[this][msgsender_MSG] >= 0) && balanceOf_SpaghettiToken[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_SpaghettiToken0 := true;
[L2]                 call_transfer_SpaghettiToken0 := false;
[L2]                 revert := revert_hold;
[L179]               havoc __exception;
[L180]               revert := false;
[L181]   COND TRUE   __exception
[L182]               __tmp__Balance := Balance;
[L183]               __tmp__DType := DType;
[L184]               __tmp__Alloc := Alloc;
[L185]               __tmp__balance_ADDR := balance_ADDR;
[L186]               __tmp__M_Ref_int := M_Ref_int;
[L187]               __tmp__sum_balanceOf0 := sum_balanceOf0;
[L188]               __tmp__alloc_allowance_SpaghettiToken_lvl0 := alloc_allowance_SpaghettiToken_lvl0;
[L189]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L190]               __tmp__sum_allowance1 := sum_allowance1;
[L191]               __tmp__Length := Length;
[L192]               __tmp__now := now;
[L193]               __tmp__totalSupply_SpaghettiToken := totalSupply_SpaghettiToken;
[L194]               __tmp__balanceOf_SpaghettiToken := balanceOf_SpaghettiToken;
[L195]               __tmp__allowance_SpaghettiToken := allowance_SpaghettiToken;
[L196]               __tmp__symbol_SpaghettiToken := symbol_SpaghettiToken;
[L197]               __tmp__decimals_SpaghettiToken := decimals_SpaghettiToken;
[L198]               __tmp__name_SpaghettiToken := name_SpaghettiToken;
[L199]   CALL        call __ret_0_ := transfer~address~uint256_SpaghettiToken__fail(this, msgsender_MSG, msgvalue_MSG, dst_s194, wad_s194);
[L729]   CALL        call __var_3 := transferFrom~address~address~uint256_SpaghettiToken__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, dst_s194, wad_s194);
[L756]               __var_4 := -1 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L757]   COND FALSE  !(src_s309 != msgsender_MSG && __tmp__allowance_SpaghettiToken[this][src_s309][msgsender_MSG] != -1 % 115792089237316195423570985008687907853269984665640564039457584007913129639936)
[L774]   COND FALSE  !(!(__tmp__balanceOf_SpaghettiToken[this][src_s309] >= wad_s309))
[L778]   COND TRUE   __tmp__DType[this] == SpaghettiToken
[L779]   CALL        call __var_6 := sub~uint256~uint256_DSMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balanceOf_SpaghettiToken[this][src_s309], wad_s309);
[L665]               z_s45 := (x_s45 - y_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L666]   COND FALSE  !(!((x_s45 - y_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 <= x_s45))
[L779]   RET         call __var_6 := sub~uint256~uint256_DSMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balanceOf_SpaghettiToken[this][src_s309], wad_s309);
[L780]   COND FALSE  !(revert)
[L786]               __tmp__sum_balanceOf0[this] := __tmp__sum_balanceOf0[this] - __tmp__balanceOf_SpaghettiToken[this][src_s309];
[L787]               __tmp__balanceOf_SpaghettiToken[this][src_s309] := __var_6;
[L788]               __tmp__sum_balanceOf0[this] := __tmp__sum_balanceOf0[this] + __tmp__balanceOf_SpaghettiToken[this][src_s309];
[L789]               one_s309 := wad_s309 / 100 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L790]   COND TRUE   __tmp__DType[this] == SpaghettiToken
[L791]   CALL        call ninetynine_s309 := sub~uint256~uint256_DSMath__fail(this, msgsender_MSG, msgvalue_MSG, wad_s309, one_s309);
[L665]               z_s45 := (x_s45 - y_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L666]   COND TRUE   !((x_s45 - y_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 <= x_s45)
[L667]               revert := true;
[L791]   RET         call ninetynine_s309 := sub~uint256~uint256_DSMath__fail(this, msgsender_MSG, msgvalue_MSG, wad_s309, one_s309);
[L792]   COND TRUE   revert
[L729]   RET         call __var_3 := transferFrom~address~address~uint256_SpaghettiToken__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, dst_s194, wad_s194);
[L730]   COND TRUE   revert
[L199]   RET         call __ret_0_ := transfer~address~uint256_SpaghettiToken__fail(this, msgsender_MSG, msgvalue_MSG, dst_s194, wad_s194);
[L200]               assume revert || gas < 0;
[L1442]  RET         call __ret_0_transfer := transfer~address~uint256_SpaghettiToken(this, msgsender_MSG, msgvalue_MSG, dst_s194, wad_s194);
[L1465]  RET         call CorralChoice_SpaghettiToken(this);

Loop:
[L1465]        assume true;

[2020-11-24 16:12:15,909 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 16:12:15,909 INFO  L82        PathProgramCache]: Analyzing trace with hash -1058191733, now seen corresponding path program 1 times
[2020-11-24 16:12:15,910 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 16:12:15,917 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 16:12:15,941 INFO  L134       CoverageAnalysis]: Checked inductivity of 4 backedges. 2 proven. 0 refuted. 0 times theorem prover too weak. 2 trivial. 0 not checked.
[2020-11-24 16:12:15,941 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 16:12:15,941 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [7] imperfect sequences [] total 7
[2020-11-24 16:12:15,941 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 16:12:15,942 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 7 interpolants.
[2020-11-24 16:12:15,942 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=11, Invalid=31, Unknown=0, NotChecked=0, Total=42
[2020-11-24 16:12:15,942 INFO  L87              Difference]: Start difference. First operand 235 states and 242 transitions. cyclomatic complexity: 8 Second operand 7 states.
[2020-11-24 16:12:15,962 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 16:12:15,962 INFO  L93              Difference]: Finished difference Result 241 states and 247 transitions.
[2020-11-24 16:12:15,962 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 7 states. 
[2020-11-24 16:12:15,963 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 241 states and 247 transitions.
[2020-11-24 16:12:15,963 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 16:12:15,964 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 241 states to 233 states and 239 transitions.
[2020-11-24 16:12:15,964 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 127
[2020-11-24 16:12:15,964 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 127
[2020-11-24 16:12:15,964 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 233 states and 239 transitions.
[2020-11-24 16:12:15,965 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 16:12:15,965 INFO  L728         BuchiCegarLoop]: Abstraction has 233 states and 239 transitions.
[2020-11-24 16:12:15,965 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 233 states and 239 transitions.
[2020-11-24 16:12:15,966 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 233 to 233.
[2020-11-24 16:12:15,966 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 233 states.
[2020-11-24 16:12:15,967 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 233 states to 233 states and 239 transitions.
[2020-11-24 16:12:15,967 INFO  L751         BuchiCegarLoop]: Abstraction has 233 states and 239 transitions.
[2020-11-24 16:12:15,967 INFO  L631         BuchiCegarLoop]: Abstraction has 233 states and 239 transitions.
[2020-11-24 16:12:15,967 INFO  L445         BuchiCegarLoop]: ======== Iteration 10============
[2020-11-24 16:12:15,967 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 233 states and 239 transitions.
[2020-11-24 16:12:15,967 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 16:12:15,967 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 16:12:15,968 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 16:12:15,968 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 16:12:15,968 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L2]                 success_transfer_SpaghettiToken0 := false;
[L2]                 call_transfer_SpaghettiToken0 := false;
[L2]     CALL        call main();
[L1460]              assume null == 0;
[L1461]  CALL        call this := FreshRefGenerator__success();
[L639]               havoc newRef;
[L640]               assume Alloc[newRef] == false;
[L641]               Alloc[newRef] := true;
[L642]               assume newRef != null;
[L1461]  RET         call this := FreshRefGenerator__success();
[L1462]              assume now >= 0;
[L1463]              assume DType[this] == SpaghettiToken;
[L1464]              assume !revert && gas >= 0;
[L1465]  CALL        call CorralChoice_SpaghettiToken(this);
[L1375]              havoc msgsender_MSG;
[L1376]              havoc msgvalue_MSG;
[L1377]              havoc choice;
[L1378]              havoc __ret_0_totalSupply;
[L1379]              havoc arg329_s0;
[L1380]              havoc __ret_0_balanceOf;
[L1381]              havoc arg330_s0;
[L1382]              havoc arg331_s0;
[L1383]              havoc __ret_0_allowance;
[L1384]              havoc __ret_0_symbol;
[L1385]              havoc __ret_0_decimals;
[L1386]              havoc __ret_0_name;
[L1387]              havoc chef_s113;
[L1388]              havoc guy_s149;
[L1389]              havoc __ret_0_approve;
[L1390]              havoc guy_s177;
[L1391]              havoc wad_s177;
[L1392]              havoc dst_s194;
[L1393]              havoc wad_s194;
[L1394]              havoc __ret_0_transfer;
[L1395]              havoc src_s309;
[L1396]              havoc dst_s309;
[L1397]              havoc wad_s309;
[L1398]              havoc __ret_0_transferFrom;
[L1399]              havoc tmpNow;
[L1400]              havoc gas;
[L1401]              assume gas > 4000000 && gas <= 8000000;
[L1402]              tmpNow := now;
[L1403]              havoc now;
[L1404]              assume now > tmpNow;
[L1405]              assume msgsender_MSG != null;
[L1406]  COND FALSE  !(choice == 7)
[L1412]  COND FALSE  !(choice == 6)
[L1418]  COND FALSE  !(choice == 5)
[L1424]  COND FALSE  !(choice == 4)
[L1430]  COND FALSE  !(choice == 3)
[L1437]  COND TRUE   choice == 2
[L1438]              gas := gas - 21000;
[L1439]  COND TRUE   gas >= 0
[L1440]              assume wad_s194 >= 0 && wad_s194 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1441]              assume msgvalue_MSG == 0;
[L1442]  CALL        call __ret_0_transfer := transfer~address~uint256_SpaghettiToken(this, msgsender_MSG, msgvalue_MSG, dst_s194, wad_s194);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == dst_s194 && wad_s194 <= balanceOf_SpaghettiToken[this][msgsender_MSG]) && wad_s194 >= 0) && wad_s194 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_SpaghettiToken[this][dst_s194] >= 0) && balanceOf_SpaghettiToken[this][dst_s194] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_SpaghettiToken[this][msgsender_MSG] >= 0) && balanceOf_SpaghettiToken[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_SpaghettiToken0 := true;
[L2]                 call_transfer_SpaghettiToken0 := false;
[L2]                 revert := revert_hold;
[L179]               havoc __exception;
[L180]               revert := false;
[L181]   COND FALSE  !(__exception)
[L202]   CALL        call __ret_0_ := transfer~address~uint256_SpaghettiToken__success(this, msgsender_MSG, msgvalue_MSG, dst_s194, wad_s194);
[L740]   CALL        call __var_3 := transferFrom~address~address~uint256_SpaghettiToken__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, dst_s194, wad_s194);
[L826]               __var_4 := -1 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L827]   COND FALSE  !(src_s309 != msgsender_MSG && allowance_SpaghettiToken[this][src_s309][msgsender_MSG] != -1 % 115792089237316195423570985008687907853269984665640564039457584007913129639936)
[L844]   COND FALSE  !(!(balanceOf_SpaghettiToken[this][src_s309] >= wad_s309))
[L848]   COND TRUE   DType[this] == SpaghettiToken
[L849]   CALL        call __var_6 := sub~uint256~uint256_DSMath__success(this, msgsender_MSG, msgvalue_MSG, balanceOf_SpaghettiToken[this][src_s309], wad_s309);
[L674]               z_s45 := (x_s45 - y_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L675]   COND FALSE  !(!((x_s45 - y_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 <= x_s45))
[L849]   RET         call __var_6 := sub~uint256~uint256_DSMath__success(this, msgsender_MSG, msgvalue_MSG, balanceOf_SpaghettiToken[this][src_s309], wad_s309);
[L850]   COND FALSE  !(revert)
[L856]               sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_SpaghettiToken[this][src_s309];
[L857]               balanceOf_SpaghettiToken[this][src_s309] := __var_6;
[L858]               sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_SpaghettiToken[this][src_s309];
[L859]               one_s309 := wad_s309 / 100 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L860]   COND TRUE   DType[this] == SpaghettiToken
[L861]   CALL        call ninetynine_s309 := sub~uint256~uint256_DSMath__success(this, msgsender_MSG, msgvalue_MSG, wad_s309, one_s309);
[L674]               z_s45 := (x_s45 - y_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L675]   COND FALSE  !(!((x_s45 - y_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 <= x_s45))
[L861]   RET         call ninetynine_s309 := sub~uint256~uint256_DSMath__success(this, msgsender_MSG, msgvalue_MSG, wad_s309, one_s309);
[L862]   COND FALSE  !(revert)
[L868]               ninetynine_s309 := ninetynine_s309;
[L869]   COND TRUE   DType[this] == SpaghettiToken
[L870]   CALL        call __var_7 := add~uint256~uint256_DSMath__success(this, msgsender_MSG, msgvalue_MSG, balanceOf_SpaghettiToken[this][dst_s309], ninetynine_s309);
[L656]               z_s23 := (x_s23 + y_s23) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L657]   COND FALSE  !(!((x_s23 + y_s23) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 >= x_s23))
[L870]   RET         call __var_7 := add~uint256~uint256_DSMath__success(this, msgsender_MSG, msgvalue_MSG, balanceOf_SpaghettiToken[this][dst_s309], ninetynine_s309);
[L871]   COND FALSE  !(revert)
[L877]               sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_SpaghettiToken[this][dst_s309];
[L878]               balanceOf_SpaghettiToken[this][dst_s309] := __var_7;
[L879]               sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_SpaghettiToken[this][dst_s309];
[L880]   CALL        call burn~uint256_SpaghettiToken__success(this, msgsender_MSG, msgvalue_MSG, one_s309);
[L906]   COND TRUE   DType[this] == SpaghettiToken
[L907]   CALL        call __var_8 := sub~uint256~uint256_DSMath__success(this, msgsender_MSG, msgvalue_MSG, totalSupply_SpaghettiToken[this], wad_s326);
[L674]               z_s45 := (x_s45 - y_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L675]   COND FALSE  !(!((x_s45 - y_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 <= x_s45))
[L907]   RET         call __var_8 := sub~uint256~uint256_DSMath__success(this, msgsender_MSG, msgvalue_MSG, totalSupply_SpaghettiToken[this], wad_s326);
[L908]   COND FALSE  !(revert)
[L914]               totalSupply_SpaghettiToken[this] := __var_8;
[L915]               assert { :EventEmitted "Burn_SpaghettiToken" } true;
[L880]   RET         call burn~uint256_SpaghettiToken__success(this, msgsender_MSG, msgvalue_MSG, one_s309);
[L881]   COND FALSE  !(revert)
[L884]               assert { :EventEmitted "Transfer_SpaghettiToken" } true;
[L885]               __ret_0_ := true;
[L740]   RET         call __var_3 := transferFrom~address~address~uint256_SpaghettiToken__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, dst_s194, wad_s194);
[L741]   COND FALSE  !(revert)
[L744]               __ret_0_ := __var_3;
[L202]   RET         call __ret_0_ := transfer~address~uint256_SpaghettiToken__success(this, msgsender_MSG, msgvalue_MSG, dst_s194, wad_s194);
[L203]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !((((((__ret_0_ == true && totalSupply_SpaghettiToken[this] == old(totalSupply_SpaghettiToken[this])) && balanceOf_SpaghettiToken[this] == old(balanceOf_SpaghettiToken[this])) && allowance_SpaghettiToken[this] == old(allowance_SpaghettiToken[this])) && symbol_SpaghettiToken[this] == old(symbol_SpaghettiToken[this])) && decimals_SpaghettiToken[this] == old(decimals_SpaghettiToken[this])) && name_SpaghettiToken[this] == old(name_SpaghettiToken[this]));
[L2]                 revert := revert_hold;
[L1442]  RET         call __ret_0_transfer := transfer~address~uint256_SpaghettiToken(this, msgsender_MSG, msgvalue_MSG, dst_s194, wad_s194);
[L1465]  RET         call CorralChoice_SpaghettiToken(this);

Loop:
[L1465]        assume true;

[2020-11-24 16:12:15,970 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 16:12:15,970 INFO  L82        PathProgramCache]: Analyzing trace with hash 1689071934, now seen corresponding path program 1 times
[2020-11-24 16:12:15,970 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 16:12:15,983 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 16:12:16,001 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 16:12:16,036 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 16:12:16,036 INFO  L82        PathProgramCache]: Analyzing trace with hash 4240, now seen corresponding path program 1 times
[2020-11-24 16:12:16,037 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 16:12:16,037 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 16:12:16,037 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 16:12:16,038 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 16:12:16,038 INFO  L82        PathProgramCache]: Analyzing trace with hash 821626611, now seen corresponding path program 1 times
[2020-11-24 16:12:16,039 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 16:12:16,051 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 16:12:16,071 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #4: 113 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 113 to 223
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #4: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
[2020-11-24 16:12:16,675 WARN  L188               SmtUtils]: Spent 490.00 ms on a formula simplification. DAG size of input: 170 DAG size of output: 164
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 883 to 1759
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #5: 317 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 317 to 631
[2020-11-24 16:12:16,840 WARN  L188               SmtUtils]: Spent 141.00 ms on a formula simplification. DAG size of input: 80 DAG size of output: 79
[2020-11-24 16:12:16,971 WARN  L188               SmtUtils]: Spent 130.00 ms on a formula simplification. DAG size of input: 123 DAG size of output: 111
Garbage collection #1: 41 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 41 to 79
Garbage collection #2: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #3: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #4: 313 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 313 to 619
Garbage collection #5: 619 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 619 to 1237
[2020-11-24 16:12:17,179 WARN  L188               SmtUtils]: Spent 150.00 ms on a formula simplification. DAG size of input: 108 DAG size of output: 103
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #5: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
[2020-11-24 16:12:17,355 WARN  L188               SmtUtils]: Spent 143.00 ms on a formula simplification. DAG size of input: 108 DAG size of output: 103
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 277 to 547
Garbage collection #5: 547 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 547 to 1093
[2020-11-24 16:12:17,663 WARN  L188               SmtUtils]: Spent 258.00 ms on a formula simplification. DAG size of input: 154 DAG size of output: 138
Garbage collection #1: 47 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 47 to 89
Garbage collection #2: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #3: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #4: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #5: 673 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 673 to 1327
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #5: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #6: 1093 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1093 to 2179
[2020-11-24 16:12:17,891 WARN  L188               SmtUtils]: Spent 215.00 ms on a formula simplification. DAG size of input: 96 DAG size of output: 91
[2020-11-24 16:12:18,207 WARN  L188               SmtUtils]: Spent 315.00 ms on a formula simplification. DAG size of input: 230 DAG size of output: 215
Garbage collection #1: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #2: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #3: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #4: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #5: 1237 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 1237 to 2473
Garbage collection #6: 2473 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 2473 to 4943
[2020-11-24 16:12:18,321 WARN  L188               SmtUtils]: Spent 110.00 ms on a formula simplification that was a NOOP. DAG size: 197
[2020-11-24 16:12:18,640 WARN  L188               SmtUtils]: Spent 316.00 ms on a formula simplification. DAG size of input: 234 DAG size of output: 216
Garbage collection #1: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #2: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #3: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #4: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #5: 1237 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1237 to 2473
Garbage collection #6: 2473 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 2473 to 4943
Garbage collection #1: 47 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 47 to 89
Garbage collection #2: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #3: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #4: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #5: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
[2020-11-24 16:12:18,912 WARN  L188               SmtUtils]: Spent 206.00 ms on a formula simplification that was a NOOP. DAG size: 259
Garbage collection #1: 101 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 101 to 199
Garbage collection #2: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #3: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #4: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #5: 1571 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 1571 to 3137
Garbage collection #6: 3137 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 3137 to 6271
[2020-11-24 16:12:19,031 WARN  L188               SmtUtils]: Spent 114.00 ms on a formula simplification that was a NOOP. DAG size: 203
[2020-11-24 16:12:19,345 WARN  L188               SmtUtils]: Spent 312.00 ms on a formula simplification. DAG size of input: 222 DAG size of output: 220
Garbage collection #1: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #2: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #3: 317 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 317 to 631
Garbage collection #4: 631 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 631 to 1259
Garbage collection #5: 1259 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1259 to 2503
Garbage collection #6: 2503 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 2503 to 5003
Garbage collection #1: 47 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 47 to 89
Garbage collection #2: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #3: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #4: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #5: 673 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 673 to 1327
[2020-11-24 16:12:19,581 WARN  L188               SmtUtils]: Spent 146.00 ms on a formula simplification that was a NOOP. DAG size: 206
Garbage collection #1: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #2: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #3: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #4: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #5: 1237 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1237 to 2473
Garbage collection #6: 2473 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2473 to 4943
Garbage collection #1: 47 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 47 to 89
Garbage collection #2: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #3: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #4: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #5: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
[2020-11-24 16:12:19,969 WARN  L188               SmtUtils]: Spent 308.00 ms on a formula simplification. DAG size of input: 208 DAG size of output: 207
Garbage collection #1: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #2: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #3: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #4: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #5: 1237 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1237 to 2473
Garbage collection #6: 2473 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2473 to 4943
Garbage collection #1: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #2: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #3: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #4: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #5: 1237 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1237 to 2473
Garbage collection #6: 2473 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2473 to 4943
[2020-11-24 16:12:20,098 WARN  L188               SmtUtils]: Spent 126.00 ms on a formula simplification that was a NOOP. DAG size: 203
[2020-11-24 16:12:20,113 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 16:12:20,118 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 24.11 04:12:20 BasicIcfg
[2020-11-24 16:12:20,118 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-24 16:12:20,118 INFO  L168              Benchmark]: Toolchain (without parser) took 7626.59 ms. Allocated memory was 1.0 GB in the beginning and 1.6 GB in the end (delta: 563.1 MB). Free memory was 940.6 MB in the beginning and 1.3 GB in the end (delta: -380.2 MB). Peak memory consumption was 787.6 MB. Max. memory is 15.3 GB.
[2020-11-24 16:12:20,118 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.17 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-24 16:12:20,119 INFO  L168              Benchmark]: Boogie Preprocessor took 73.75 ms. Allocated memory is still 1.0 GB. Free memory is still 940.6 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-24 16:12:20,119 INFO  L168              Benchmark]: UtopiaSpecLang took 50.56 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 935.2 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-24 16:12:20,119 INFO  L168              Benchmark]: Boogie Printer took 11.68 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 929.8 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-24 16:12:20,119 INFO  L168              Benchmark]: RCFGBuilder took 501.37 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 892.3 MB in the end (delta: 37.6 MB). Peak memory consumption was 37.6 MB. Max. memory is 15.3 GB.
[2020-11-24 16:12:20,119 INFO  L168              Benchmark]: UtopiaLTL2Aut took 41.19 ms. Allocated memory is still 1.0 GB. Free memory was 892.3 MB in the beginning and 883.2 MB in the end (delta: 9.1 MB). Peak memory consumption was 9.1 MB. Max. memory is 15.3 GB.
[2020-11-24 16:12:20,120 INFO  L168              Benchmark]: BÃ¼chi Program Product took 837.25 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 68.7 MB). Free memory was 883.2 MB in the beginning and 1.0 GB in the end (delta: -136.5 MB). Peak memory consumption was 165.1 MB. Max. memory is 15.3 GB.
[2020-11-24 16:12:20,120 INFO  L168              Benchmark]: BlockEncodingV2 took 68.32 ms. Allocated memory is still 1.1 GB. Free memory was 1.0 GB in the beginning and 986.2 MB in the end (delta: 33.5 MB). Peak memory consumption was 33.5 MB. Max. memory is 15.3 GB.
[2020-11-24 16:12:20,120 INFO  L168              Benchmark]: BuchiAutomizer took 6039.44 ms. Allocated memory was 1.1 GB in the beginning and 1.6 GB in the end (delta: 494.4 MB). Free memory was 986.2 MB in the beginning and 1.3 GB in the end (delta: -334.5 MB). Peak memory consumption was 764.6 MB. Max. memory is 15.3 GB.
[2020-11-24 16:12:20,123 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    1250 locations, 2153 edges
  - StatisticsResult: Encoded RCFG
    1212 locations, 2050 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.17 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 73.75 ms. Allocated memory is still 1.0 GB. Free memory is still 940.6 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 50.56 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 935.2 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 11.68 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 929.8 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * RCFGBuilder took 501.37 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 892.3 MB in the end (delta: 37.6 MB). Peak memory consumption was 37.6 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 41.19 ms. Allocated memory is still 1.0 GB. Free memory was 892.3 MB in the beginning and 883.2 MB in the end (delta: 9.1 MB). Peak memory consumption was 9.1 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 837.25 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 68.7 MB). Free memory was 883.2 MB in the beginning and 1.0 GB in the end (delta: -136.5 MB). Peak memory consumption was 165.1 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 68.32 ms. Allocated memory is still 1.1 GB. Free memory was 1.0 GB in the beginning and 986.2 MB in the end (delta: 33.5 MB). Peak memory consumption was 33.5 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 6039.44 ms. Allocated memory was 1.1 GB in the beginning and 1.6 GB in the end (delta: 494.4 MB). Free memory was 986.2 MB in the beginning and 1.3 GB in the end (delta: -334.5 MB). Peak memory consumption was 764.6 MB. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    527 locations, 668 edges
  - StatisticsResult: BuchiProgram size
    1250 locations, 2153 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 9 terminating modules (9 trivial, 0 deterministic, 0 nondeterministic) and one nonterminating remainder module.9 modules have a trivial ranking function, the largest among these consists of 15 locations. The remainder module has 233 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 5.9s and 10 iterations.  TraceHistogramMax:3. Analysis of lassos took 4.7s. Construction of modules took 0.5s. BÃ¼chi inclusion checks took 0.4s. Highest rank in rank-based complementation 0. Minimization of det autom 9. Minimization of nondet autom 0. Automata minimization 0.0s AutomataMinimizationTime, 9 MinimizatonAttempts, 48 StatesRemovedByMinimization, 4 NontrivialMinimizations. Non-live state removal took 0.0s Buchi closure took 0.0s. Biggest automaton had 255 states and ocurred in iteration 3.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 2776 SDtfs, 1532 SDslu, 5232 SDs, 0 SdLazy, 2637 SolverSat, 548 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 0.5s Time	LassoAnalysisResults: nont1 unkn0 SFLI0 SFLT0 conc0 concLT0 SILN0 SILU9 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - TransactionCounterexample: Violation of LTL property LTL
    Found an infinite, lasso-shaped execution that violates the LTL property LTL.
Stem:
SpaghettiToken(115792089237316195423570985008687907853269984665640564039457584007913129639938).transfer~address~uint256.gas(3979001)({from : 115792089237316195423570985008687907853269984665640564039457584007913129639941, dst : 115792089237316195423570985008687907853269984665640564039457584007913129639941, wad : 0});
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == dst_s194 && wad_s194 <= balanceOf_SpaghettiToken[this][msgsender_MSG]) && wad_s194 >= 0) && wad_s194 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_SpaghettiToken[this][dst_s194] >= 0) && balanceOf_SpaghettiToken[this][dst_s194] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_SpaghettiToken[this][msgsender_MSG] >= 0) && balanceOf_SpaghettiToken[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_SpaghettiToken0 := true;
[L2]                 call_transfer_SpaghettiToken0 := false;
[L2]                 revert := revert_hold;
[L179]               havoc __exception;
[L180]               revert := false;
[L181]   COND FALSE  !(__exception)
[L202]   CALL        call __ret_0_ := transfer~address~uint256_SpaghettiToken__success(this, msgsender_MSG, msgvalue_MSG, dst_s194, wad_s194);
[L740]   CALL        call __var_3 := transferFrom~address~address~uint256_SpaghettiToken__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, dst_s194, wad_s194);
[L826]               __var_4 := -1 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L827]   COND FALSE  !(src_s309 != msgsender_MSG && allowance_SpaghettiToken[this][src_s309][msgsender_MSG] != -1 % 115792089237316195423570985008687907853269984665640564039457584007913129639936)
[L844]   COND FALSE  !(!(balanceOf_SpaghettiToken[this][src_s309] >= wad_s309))
[L848]   COND TRUE   DType[this] == SpaghettiToken
[L849]   CALL        call __var_6 := sub~uint256~uint256_DSMath__success(this, msgsender_MSG, msgvalue_MSG, balanceOf_SpaghettiToken[this][src_s309], wad_s309);
[L674]               z_s45 := (x_s45 - y_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L675]   COND FALSE  !(!((x_s45 - y_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 <= x_s45))
[L849]   RET         call __var_6 := sub~uint256~uint256_DSMath__success(this, msgsender_MSG, msgvalue_MSG, balanceOf_SpaghettiToken[this][src_s309], wad_s309);
[L850]   COND FALSE  !(revert)
[L856]               sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_SpaghettiToken[this][src_s309];
[L857]               balanceOf_SpaghettiToken[this][src_s309] := __var_6;
[L858]               sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_SpaghettiToken[this][src_s309];
[L859]               one_s309 := wad_s309 / 100 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L860]   COND TRUE   DType[this] == SpaghettiToken
[L861]   CALL        call ninetynine_s309 := sub~uint256~uint256_DSMath__success(this, msgsender_MSG, msgvalue_MSG, wad_s309, one_s309);
[L674]               z_s45 := (x_s45 - y_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L675]   COND FALSE  !(!((x_s45 - y_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 <= x_s45))
[L861]   RET         call ninetynine_s309 := sub~uint256~uint256_DSMath__success(this, msgsender_MSG, msgvalue_MSG, wad_s309, one_s309);
[L862]   COND FALSE  !(revert)
[L868]               ninetynine_s309 := ninetynine_s309;
[L869]   COND TRUE   DType[this] == SpaghettiToken
[L870]   CALL        call __var_7 := add~uint256~uint256_DSMath__success(this, msgsender_MSG, msgvalue_MSG, balanceOf_SpaghettiToken[this][dst_s309], ninetynine_s309);
[L656]               z_s23 := (x_s23 + y_s23) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L657]   COND FALSE  !(!((x_s23 + y_s23) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 >= x_s23))
[L870]   RET         call __var_7 := add~uint256~uint256_DSMath__success(this, msgsender_MSG, msgvalue_MSG, balanceOf_SpaghettiToken[this][dst_s309], ninetynine_s309);
[L871]   COND FALSE  !(revert)
[L877]               sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_SpaghettiToken[this][dst_s309];
[L878]               balanceOf_SpaghettiToken[this][dst_s309] := __var_7;
[L879]               sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_SpaghettiToken[this][dst_s309];
[L880]   CALL        call burn~uint256_SpaghettiToken__success(this, msgsender_MSG, msgvalue_MSG, one_s309);
[L906]   COND TRUE   DType[this] == SpaghettiToken
[L907]   CALL        call __var_8 := sub~uint256~uint256_DSMath__success(this, msgsender_MSG, msgvalue_MSG, totalSupply_SpaghettiToken[this], wad_s326);
[L674]               z_s45 := (x_s45 - y_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L675]   COND FALSE  !(!((x_s45 - y_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 <= x_s45))
[L907]   RET         call __var_8 := sub~uint256~uint256_DSMath__success(this, msgsender_MSG, msgvalue_MSG, totalSupply_SpaghettiToken[this], wad_s326);
[L908]   COND FALSE  !(revert)
[L914]               totalSupply_SpaghettiToken[this] := __var_8;
[L915]               assert { :EventEmitted "Burn_SpaghettiToken" } true;
[L880]   RET         call burn~uint256_SpaghettiToken__success(this, msgsender_MSG, msgvalue_MSG, one_s309);
[L881]   COND FALSE  !(revert)
[L884]               assert { :EventEmitted "Transfer_SpaghettiToken" } true;
[L885]               __ret_0_ := true;
[L740]   RET         call __var_3 := transferFrom~address~address~uint256_SpaghettiToken__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, dst_s194, wad_s194);
[L741]   COND FALSE  !(revert)
[L744]               __ret_0_ := __var_3;
[L202]   RET         call __ret_0_ := transfer~address~uint256_SpaghettiToken__success(this, msgsender_MSG, msgvalue_MSG, dst_s194, wad_s194);
[L203]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !((((((__ret_0_ == true && totalSupply_SpaghettiToken[this] == old(totalSupply_SpaghettiToken[this])) && balanceOf_SpaghettiToken[this] == old(balanceOf_SpaghettiToken[this])) && allowance_SpaghettiToken[this] == old(allowance_SpaghettiToken[this])) && symbol_SpaghettiToken[this] == old(symbol_SpaghettiToken[this])) && decimals_SpaghettiToken[this] == old(decimals_SpaghettiToken[this])) && name_SpaghettiToken[this] == old(name_SpaghettiToken[this]));
[L2]                 revert := revert_hold;
[L1442]  RET         call __ret_0_transfer := transfer~address~uint256_SpaghettiToken(this, msgsender_MSG, msgvalue_MSG, dst_s194, wad_s194);

Loop:

End of lasso representation.
RESULT: Ultimate could not prove your program: Toolchain returned no result.
Received shutdown request...
