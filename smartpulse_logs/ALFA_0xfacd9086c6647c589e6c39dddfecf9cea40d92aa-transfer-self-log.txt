This is Ultimate 0.1.24-f1553f5-m
[2020-11-24 15:26:31,316 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-24 15:26:31,318 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-24 15:26:31,329 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-24 15:26:31,329 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-24 15:26:31,330 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-24 15:26:31,331 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-24 15:26:31,333 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-24 15:26:31,335 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-24 15:26:31,335 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-24 15:26:31,336 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-24 15:26:31,337 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-24 15:26:31,337 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-24 15:26:31,338 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-24 15:26:31,339 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-24 15:26:31,339 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-24 15:26:31,340 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-24 15:26:31,341 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-24 15:26:31,343 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-24 15:26:31,344 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-24 15:26:31,345 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-24 15:26:31,346 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-24 15:26:31,348 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-24 15:26:31,348 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-24 15:26:31,348 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-24 15:26:31,349 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-24 15:26:31,349 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-24 15:26:31,350 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-24 15:26:31,350 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-24 15:26:31,350 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-24 15:26:31,350 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-24 15:26:31,351 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-24 15:26:31,351 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-24 15:26:31,352 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-24 15:26:31,353 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-24 15:26:31,353 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-24 15:26:31,353 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-24 15:26:31,354 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-24 15:26:31,354 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-24 15:26:31,354 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-24 15:26:31,355 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-24 15:26:31,355 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-24 15:26:31,363 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-24 15:26:31,363 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-24 15:26:31,364 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-24 15:26:31,364 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-24 15:26:31,364 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-24 15:26:31,364 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-24 15:26:31,364 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-24 15:26:31,364 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-24 15:26:31,365 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-24 15:26:31,365 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-24 15:26:31,365 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-24 15:26:31,365 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-24 15:26:31,365 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-24 15:26:31,365 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-24 15:26:31,365 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-24 15:26:31,365 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-24 15:26:31,365 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-24 15:26:31,365 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-24 15:26:31,366 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-24 15:26:31,366 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-24 15:26:31,366 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-24 15:26:31,366 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-24 15:26:31,366 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-24 15:26:31,366 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-24 15:26:31,366 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-24 15:26:31,366 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-24 15:26:31,391 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-24 15:26:31,405 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-24 15:26:31,407 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-24 15:26:31,408 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-24 15:26:31,409 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-24 15:26:31,409 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/ALFA_0xfacd9086c6647c589e6c39dddfecf9cea40d92aa_transfer-self.bpl
[2020-11-24 15:26:31,409 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/ALFA_0xfacd9086c6647c589e6c39dddfecf9cea40d92aa_transfer-self.bpl'
[2020-11-24 15:26:31,477 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-24 15:26:31,478 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-24 15:26:31,478 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-24 15:26:31,478 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-24 15:26:31,478 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-24 15:26:31,494 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "ALFA_0xfacd9086c6647c589e6c39dddfecf9cea40d92aa_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 03:26:31" (1/1) ...
[2020-11-24 15:26:31,496 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "ALFA_0xfacd9086c6647c589e6c39dddfecf9cea40d92aa_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 03:26:31" (1/1) ...
[2020-11-24 15:26:31,519 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "ALFA_0xfacd9086c6647c589e6c39dddfecf9cea40d92aa_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 03:26:31" (1/1) ...
[2020-11-24 15:26:31,520 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "ALFA_0xfacd9086c6647c589e6c39dddfecf9cea40d92aa_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 03:26:31" (1/1) ...
[2020-11-24 15:26:31,534 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "ALFA_0xfacd9086c6647c589e6c39dddfecf9cea40d92aa_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 03:26:31" (1/1) ...
[2020-11-24 15:26:31,541 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "ALFA_0xfacd9086c6647c589e6c39dddfecf9cea40d92aa_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 03:26:31" (1/1) ...
[2020-11-24 15:26:31,546 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "ALFA_0xfacd9086c6647c589e6c39dddfecf9cea40d92aa_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 03:26:31" (1/1) ...
[2020-11-24 15:26:31,553 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-24 15:26:31,553 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-24 15:26:31,553 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-24 15:26:31,555 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-24 15:26:31,559 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "ALFA_0xfacd9086c6647c589e6c39dddfecf9cea40d92aa_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 03:26:31" (1/1) ...
[2020-11-24 15:26:31,575 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(ALFA.transfer(to, value), msg.sender == to && value <= _balances_ALFA[this][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ALFA[this][to] >= 0 && _balances_ALFA[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ALFA[this][msg.sender] >= 0 &&  _balances_ALFA[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(ALFA.transfer(to, value), return == true && _totalSupply_ALFA[this] == old(_totalSupply_ALFA[this]) && _balances_ALFA[this] == old(_balances_ALFA[this]) && _allowances_ALFA[this] == old(_allowances_ALFA[this]) && _name_ALFA[this] == old(_name_ALFA[this]) && _symbol_ALFA[this] == old(_symbol_ALFA[this]) && _decimals_ALFA[this] == old(_decimals_ALFA[this]) && _bank_ALFA[this] == old(_bank_ALFA[this]) && _price_ALFA[this] == old(_price_ALFA[this]) && _time_ALFA[this] == old(_time_ALFA[this]) && M_int_int[_block_ALFA[this]] == old(M_int_int[_block_ALFA[this]]) && own_ALFA[this] == old(own_ALFA[this]) && adv_ALFA[this] == old(adv_ALFA[this]) && ins_ALFA[this] == old(ins_ALFA[this]) && reff_ALFA[this] == old(reff_ALFA[this]) && prev_ALFA[this] == old(prev_ALFA[this]) && summ_ALFA[this] == old(summ_ALFA[this]))))
[2020-11-24 15:26:31,580 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(ALFA.transfer(to, value), msg.sender == to && value <= _balances_ALFA[this][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ALFA[this][to] >= 0 && _balances_ALFA[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ALFA[this][msg.sender] >= 0 &&  _balances_ALFA[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(ALFA.transfer(to, value), return == true && _totalSupply_ALFA[this] == old(_totalSupply_ALFA[this]) && _balances_ALFA[this] == old(_balances_ALFA[this]) && _allowances_ALFA[this] == old(_allowances_ALFA[this]) && _name_ALFA[this] == old(_name_ALFA[this]) && _symbol_ALFA[this] == old(_symbol_ALFA[this]) && _decimals_ALFA[this] == old(_decimals_ALFA[this]) && _bank_ALFA[this] == old(_bank_ALFA[this]) && _price_ALFA[this] == old(_price_ALFA[this]) && _time_ALFA[this] == old(_time_ALFA[this]) && M_int_int[_block_ALFA[this]] == old(M_int_int[_block_ALFA[this]]) && own_ALFA[this] == old(own_ALFA[this]) && adv_ALFA[this] == old(adv_ALFA[this]) && ins_ALFA[this] == old(ins_ALFA[this]) && reff_ALFA[this] == old(reff_ALFA[this]) && prev_ALFA[this] == old(prev_ALFA[this]) && summ_ALFA[this] == old(summ_ALFA[this]))))
[2020-11-24 15:26:31,588 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(ALFA.transfer(to, value), msg.sender == to && value <= _balances_ALFA[this][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ALFA[this][to] >= 0 && _balances_ALFA[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ALFA[this][msg.sender] >= 0 &&  _balances_ALFA[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(ALFA.transfer(to, value), return == true && _totalSupply_ALFA[this] == old(_totalSupply_ALFA[this]) && _balances_ALFA[this] == old(_balances_ALFA[this]) && _allowances_ALFA[this] == old(_allowances_ALFA[this]) && _name_ALFA[this] == old(_name_ALFA[this]) && _symbol_ALFA[this] == old(_symbol_ALFA[this]) && _decimals_ALFA[this] == old(_decimals_ALFA[this]) && _bank_ALFA[this] == old(_bank_ALFA[this]) && _price_ALFA[this] == old(_price_ALFA[this]) && _time_ALFA[this] == old(_time_ALFA[this]) && M_int_int[_block_ALFA[this]] == old(M_int_int[_block_ALFA[this]]) && own_ALFA[this] == old(own_ALFA[this]) && adv_ALFA[this] == old(adv_ALFA[this]) && ins_ALFA[this] == old(ins_ALFA[this]) && reff_ALFA[this] == old(reff_ALFA[this]) && prev_ALFA[this] == old(prev_ALFA[this]) && summ_ALFA[this] == old(summ_ALFA[this]))))
[2020-11-24 15:26:31,593 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( msg.sender==recipient_s1452 && amount_s1452<=_balances_ALFA[this][msg.sender] ) && amount_s1452>=0 ) && amount_s1452<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && _balances_ALFA[this][recipient_s1452]>=0 ) && _balances_ALFA[this][recipient_s1452]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && _balances_ALFA[this][msg.sender]>=0 ) && _balances_ALFA[this][msg.sender]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ALFA>],IdentifierExpression[recipient_s1452,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ALFA>]],BinaryExpression[COMPLEQ,IdentifierExpression[amount_s1452,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ALFA>],ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ALFA,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ALFA>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ALFA>]]]]],BinaryExpression[COMPGEQ,IdentifierExpression[amount_s1452,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ALFA>],IntegerLiteral[0]]],BinaryExpression[COMPLT,IdentifierExpression[amount_s1452,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ALFA>],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ALFA,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ALFA>]]],[IdentifierExpression[recipient_s1452,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ALFA>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ALFA,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ALFA>]]],[IdentifierExpression[recipient_s1452,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ALFA>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ALFA,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ALFA>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ALFA>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ALFA,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ALFA>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ALFA>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]]
[2020-11-24 15:26:31,597 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( __ret_0_==true && _totalSupply_ALFA[this]==( old(_totalSupply_ALFA[this]) ) ) && _balances_ALFA[this]==( old(_balances_ALFA[this]) ) ) && _allowances_ALFA[this]==( old(_allowances_ALFA[this]) ) ) && _name_ALFA[this]==( old(_name_ALFA[this]) ) ) && _symbol_ALFA[this]==( old(_symbol_ALFA[this]) ) ) && _decimals_ALFA[this]==( old(_decimals_ALFA[this]) ) ) && _bank_ALFA[this]==( old(_bank_ALFA[this]) ) ) && _price_ALFA[this]==( old(_price_ALFA[this]) ) ) && _time_ALFA[this]==( old(_time_ALFA[this]) ) ) && M_int_int[_block_ALFA[this]]==( old(M_int_int[_block_ALFA[this]]) ) ) && own_ALFA[this]==( old(own_ALFA[this]) ) ) && adv_ALFA[this]==( old(adv_ALFA[this]) ) ) && ins_ALFA[this]==( old(ins_ALFA[this]) ) ) && reff_ALFA[this]==( old(reff_ALFA[this]) ) ) && prev_ALFA[this]==( old(prev_ALFA[this]) ) ) && summ_ALFA[this]==( old(summ_ALFA[this]) ) ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[__ret_0_,<IMPLEMENTATION_OUTPARAM,transfer~address~uint256_ALFA>],BooleanLiteral[true]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_totalSupply_ALFA,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ALFA>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_totalSupply_ALFA,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ALFA>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_balances_ALFA,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ALFA>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_balances_ALFA,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ALFA>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_allowances_ALFA,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ALFA>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_allowances_ALFA,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ALFA>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_name_ALFA,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ALFA>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_name_ALFA,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ALFA>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_symbol_ALFA,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ALFA>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_symbol_ALFA,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ALFA>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_decimals_ALFA,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ALFA>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_decimals_ALFA,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ALFA>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_bank_ALFA,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ALFA>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_bank_ALFA,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ALFA>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_price_ALFA,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ALFA>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_price_ALFA,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ALFA>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_time_ALFA,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ALFA>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_time_ALFA,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ALFA>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[M_int_int,GLOBAL],[ArrayAccessExpression[IdentifierExpression[_block_ALFA,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ALFA>]]]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[M_int_int,GLOBAL],[ArrayAccessExpression[IdentifierExpression[_block_ALFA,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ALFA>]]]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[own_ALFA,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ALFA>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[own_ALFA,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ALFA>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[adv_ALFA,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ALFA>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[adv_ALFA,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ALFA>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[ins_ALFA,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ALFA>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[ins_ALFA,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ALFA>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[reff_ALFA,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ALFA>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[reff_ALFA,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ALFA>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[prev_ALFA,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ALFA>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[prev_ALFA,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ALFA>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[summ_ALFA,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ALFA>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[summ_ALFA,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ALFA>]]]]]]
[2020-11-24 15:26:31,600 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(ALFA.transfer(to, value), msg.sender == to && value <= _balances_ALFA[this][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ALFA[this][to] >= 0 && _balances_ALFA[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ALFA[this][msg.sender] >= 0 &&  _balances_ALFA[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(ALFA.transfer(to, value), return == true && _totalSupply_ALFA[this] == old(_totalSupply_ALFA[this]) && _balances_ALFA[this] == old(_balances_ALFA[this]) && _allowances_ALFA[this] == old(_allowances_ALFA[this]) && _name_ALFA[this] == old(_name_ALFA[this]) && _symbol_ALFA[this] == old(_symbol_ALFA[this]) && _decimals_ALFA[this] == old(_decimals_ALFA[this]) && _bank_ALFA[this] == old(_bank_ALFA[this]) && _price_ALFA[this] == old(_price_ALFA[this]) && _time_ALFA[this] == old(_time_ALFA[this]) && M_int_int[_block_ALFA[this]] == old(M_int_int[_block_ALFA[this]]) && own_ALFA[this] == old(own_ALFA[this]) && adv_ALFA[this] == old(adv_ALFA[this]) && ins_ALFA[this] == old(ins_ALFA[this]) && reff_ALFA[this] == old(reff_ALFA[this]) && prev_ALFA[this] == old(prev_ALFA[this]) && summ_ALFA[this] == old(summ_ALFA[this]))))
[2020-11-24 15:26:31,600 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_transfer_ALFA0) ==> ( <>AP(success_transfer_ALFA0) ) ) )
Executed UtopiaSpecLang
[2020-11-24 15:26:31,607 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 03:26:31 PropertyContainer
[2020-11-24 15:26:31,607 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-24 15:26:31,607 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-24 15:26:31,607 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-24 15:26:31,607 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-24 15:26:31,608 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "ALFA_0xfacd9086c6647c589e6c39dddfecf9cea40d92aa_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 03:26:31" (1/2) ...
[2020-11-24 15:26:31,608 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-24 15:26:31,609 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-24 15:26:31,626 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 03:26:31" (2/2) ...
[2020-11-24 15:26:31,626 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-24 15:26:31,626 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-24 15:26:31,626 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-24 15:26:31,626 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-24 15:26:31,627 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "ALFA_0xfacd9086c6647c589e6c39dddfecf9cea40d92aa_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 03:26:31" (1/2) ...
[2020-11-24 15:26:31,680 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-24 15:26:31,680 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__success
[2020-11-24 15:26:31,680 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__success
[2020-11-24 15:26:31,680 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__success
[2020-11-24 15:26:31,681 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256_SafeMath__success
[2020-11-24 15:26:31,681 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ALFA
[2020-11-24 15:26:31,681 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ALFA
[2020-11-24 15:26:31,681 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ALFA
[2020-11-24 15:26:31,681 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ALFA
[2020-11-24 15:26:31,681 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ALFA
[2020-11-24 15:26:31,681 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ALFA
[2020-11-24 15:26:31,681 INFO  L130     BoogieDeclarations]: Found specification of procedure toPay~address_ALFA__success
[2020-11-24 15:26:31,681 INFO  L130     BoogieDeclarations]: Found specification of procedure chart_ALFA__success
[2020-11-24 15:26:31,681 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ALFA
[2020-11-24 15:26:31,682 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ALFA
[2020-11-24 15:26:31,682 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ALFA
[2020-11-24 15:26:31,682 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ALFA
[2020-11-24 15:26:31,682 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ALFA
[2020-11-24 15:26:31,682 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ALFA
[2020-11-24 15:26:31,682 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_ALFA__success
[2020-11-24 15:26:31,682 INFO  L130     BoogieDeclarations]: Found specification of procedure _approve~address~address~uint256_ALFA__success
[2020-11-24 15:26:31,682 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-24 15:26:31,683 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-24 15:26:31,683 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-24 15:26:31,683 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_SafeMath
[2020-11-24 15:26:31,683 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_SafeMath
[2020-11-24 15:26:31,683 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_IERC20
[2020-11-24 15:26:31,683 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_IERC20
[2020-11-24 15:26:31,683 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ALFA
[2020-11-24 15:26:31,683 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-24 15:26:31,683 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-24 15:26:31,683 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__fail
[2020-11-24 15:26:31,683 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-24 15:26:31,683 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-24 15:26:31,683 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256_SafeMath__fail
[2020-11-24 15:26:31,684 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ALFA__success
[2020-11-24 15:26:31,684 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ALFA__fail
[2020-11-24 15:26:31,684 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ALFA__success
[2020-11-24 15:26:31,684 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ALFA__fail
[2020-11-24 15:26:31,684 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ALFA__success
[2020-11-24 15:26:31,684 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ALFA__fail
[2020-11-24 15:26:31,684 INFO  L130     BoogieDeclarations]: Found specification of procedure toPay~address_ALFA__fail
[2020-11-24 15:26:31,684 INFO  L130     BoogieDeclarations]: Found specification of procedure chart_ALFA__fail
[2020-11-24 15:26:31,684 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ALFA__success
[2020-11-24 15:26:31,684 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ALFA__fail
[2020-11-24 15:26:31,684 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ALFA__success
[2020-11-24 15:26:31,684 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ALFA__fail
[2020-11-24 15:26:31,684 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ALFA__success
[2020-11-24 15:26:31,684 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ALFA__fail
[2020-11-24 15:26:31,685 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_ALFA__fail
[2020-11-24 15:26:31,685 INFO  L130     BoogieDeclarations]: Found specification of procedure _approve~address~address~uint256_ALFA__fail
[2020-11-24 15:26:31,685 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-24 15:26:31,685 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-24 15:26:31,685 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-24 15:26:31,685 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-24 15:26:31,685 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-24 15:26:31,685 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__fail
[2020-11-24 15:26:31,685 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__success
[2020-11-24 15:26:31,685 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-24 15:26:31,685 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__success
[2020-11-24 15:26:31,685 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-24 15:26:31,685 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__success
[2020-11-24 15:26:31,685 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256_SafeMath__fail
[2020-11-24 15:26:31,686 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256_SafeMath__success
[2020-11-24 15:26:31,686 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ALFA__fail
[2020-11-24 15:26:31,686 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ALFA__success
[2020-11-24 15:26:31,686 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ALFA__fail
[2020-11-24 15:26:31,686 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ALFA__success
[2020-11-24 15:26:31,686 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ALFA__fail
[2020-11-24 15:26:31,686 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ALFA__success
[2020-11-24 15:26:31,686 INFO  L138     BoogieDeclarations]: Found implementation of procedure toPay~address_ALFA__fail
[2020-11-24 15:26:31,686 INFO  L138     BoogieDeclarations]: Found implementation of procedure toPay~address_ALFA__success
[2020-11-24 15:26:31,686 INFO  L138     BoogieDeclarations]: Found implementation of procedure chart_ALFA__fail
[2020-11-24 15:26:31,686 INFO  L138     BoogieDeclarations]: Found implementation of procedure chart_ALFA__success
[2020-11-24 15:26:31,686 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ALFA__fail
[2020-11-24 15:26:31,686 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ALFA__success
[2020-11-24 15:26:31,687 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ALFA__fail
[2020-11-24 15:26:31,687 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ALFA__success
[2020-11-24 15:26:31,687 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ALFA__fail
[2020-11-24 15:26:31,687 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ALFA__success
[2020-11-24 15:26:31,687 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_ALFA__fail
[2020-11-24 15:26:31,687 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_ALFA__success
[2020-11-24 15:26:31,687 INFO  L138     BoogieDeclarations]: Found implementation of procedure _approve~address~address~uint256_ALFA__fail
[2020-11-24 15:26:31,687 INFO  L138     BoogieDeclarations]: Found implementation of procedure _approve~address~address~uint256_ALFA__success
[2020-11-24 15:26:31,687 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-24 15:26:31,687 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-24 15:26:31,687 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-24 15:26:31,687 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-24 15:26:31,687 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-24 15:26:31,688 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-24 15:26:31,688 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_SafeMath
[2020-11-24 15:26:31,688 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_SafeMath
[2020-11-24 15:26:31,688 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_IERC20
[2020-11-24 15:26:31,688 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_IERC20
[2020-11-24 15:26:31,688 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ALFA
[2020-11-24 15:26:31,688 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-24 15:26:31,688 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-24 15:26:31,688 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-24 15:26:32,076 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 15:26:32,076 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 15:26:32,078 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 15:26:32,186 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-24 15:26:32,187 INFO  L286             CfgBuilder]: Removed 3 assue(true) statements.
[2020-11-24 15:26:32,188 INFO  L202        PluginConnector]: Adding new model ALFA_0xfacd9086c6647c589e6c39dddfecf9cea40d92aa_transfer-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 03:26:32 BoogieIcfgContainer
[2020-11-24 15:26:32,188 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 03:26:31" (2/2) ...
[2020-11-24 15:26:32,189 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-24 15:26:32,189 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@27e508e3 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 03:26:32, skipping insertion in model container
[2020-11-24 15:26:32,189 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-24 15:26:32,189 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-24 15:26:32,190 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-24 15:26:32,191 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-24 15:26:32,191 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "ALFA_0xfacd9086c6647c589e6c39dddfecf9cea40d92aa_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 03:26:31" (1/3) ...
[2020-11-24 15:26:32,192 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@52d690ac and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 03:26:32, skipping insertion in model container
[2020-11-24 15:26:32,192 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 03:26:31" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-24 15:26:32,230 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 03:26:32 NWAContainer
[2020-11-24 15:26:32,230 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-24 15:26:32,230 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-24 15:26:32,230 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-24 15:26:32,231 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-24 15:26:32,232 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "ALFA_0xfacd9086c6647c589e6c39dddfecf9cea40d92aa_transfer-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 03:26:32" (3/4) ...
[2020-11-24 15:26:32,233 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@519c6d35 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 03:26:32, skipping insertion in model container
[2020-11-24 15:26:32,233 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 03:26:32" (4/4) ...
[2020-11-24 15:26:32,236 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-24 15:26:32,240 INFO  L110   BuchiProductObserver]: Initial RCFG 1169 locations, 1658 edges
[2020-11-24 15:26:32,241 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-24 15:26:32,252 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-24 15:26:33,064 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-24 15:26:33,068 INFO  L110   BuchiProductObserver]: BuchiProgram size 2944 locations, 5296 edges
[2020-11-24 15:26:33,068 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 03:26:33 BoogieIcfgContainer
[2020-11-24 15:26:33,068 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-24 15:26:33,068 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-24 15:26:33,068 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-24 15:26:33,070 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-24 15:26:33,070 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 03:26:33" (1/1) ...
[2020-11-24 15:26:33,124 INFO  L313           BlockEncoder]: Initial Icfg 2944 locations, 5296 edges
[2020-11-24 15:26:33,125 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-24 15:26:33,125 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-24 15:26:33,125 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-24 15:26:33,126 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-24 15:26:33,134 INFO  L70    emoveInfeasibleEdges]: Removed 42 edges and 9 locations because of local infeasibility
[2020-11-24 15:26:33,139 INFO  L70        RemoveSinkStates]: Removed 2 edges and 1 locations by removing sink states
[2020-11-24 15:26:33,150 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-24 15:26:33,154 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-24 15:26:33,156 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-24 15:26:33,157 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-24 15:26:33,160 INFO  L313           BlockEncoder]: Encoded RCFG 2916 locations, 5226 edges
[2020-11-24 15:26:33,161 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 24.11 03:26:33 BasicIcfg
[2020-11-24 15:26:33,161 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-24 15:26:33,161 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-24 15:26:33,161 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-24 15:26:33,163 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-24 15:26:33,163 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 15:26:33,163 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "ALFA_0xfacd9086c6647c589e6c39dddfecf9cea40d92aa_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 03:26:31" (1/6) ...
[2020-11-24 15:26:33,165 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@50e56750 and model type ALFA_0xfacd9086c6647c589e6c39dddfecf9cea40d92aa_transfer-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 24.11 03:26:33, skipping insertion in model container
[2020-11-24 15:26:33,165 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 15:26:33,165 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 03:26:31" (2/6) ...
[2020-11-24 15:26:33,166 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@50e56750 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 24.11 03:26:33, skipping insertion in model container
[2020-11-24 15:26:33,166 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 15:26:33,166 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "ALFA_0xfacd9086c6647c589e6c39dddfecf9cea40d92aa_transfer-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 03:26:32" (3/6) ...
[2020-11-24 15:26:33,166 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@50e56750 and model type ALFA_0xfacd9086c6647c589e6c39dddfecf9cea40d92aa_transfer-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 24.11 03:26:33, skipping insertion in model container
[2020-11-24 15:26:33,166 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 15:26:33,166 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 03:26:32" (4/6) ...
[2020-11-24 15:26:33,166 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@50e56750 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 24.11 03:26:33, skipping insertion in model container
[2020-11-24 15:26:33,166 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 15:26:33,166 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 03:26:33" (5/6) ...
[2020-11-24 15:26:33,166 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@50e56750 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 24.11 03:26:33, skipping insertion in model container
[2020-11-24 15:26:33,166 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 15:26:33,166 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 24.11 03:26:33" (6/6) ...
[2020-11-24 15:26:33,167 INFO  L404   chiAutomizerObserver]: Analyzing ICFG ALFA_0xfacd9086c6647c589e6c39dddfecf9cea40d92aa_transfer-self.bpl_BEv2
[2020-11-24 15:26:33,198 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-24 15:26:33,198 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-24 15:26:33,198 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-24 15:26:33,198 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-24 15:26:33,198 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-24 15:26:33,198 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-24 15:26:33,198 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-24 15:26:33,198 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-24 15:26:33,198 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-24 15:26:33,221 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2916 states.
[2020-11-24 15:26:33,281 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 15:26:33,281 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 15:26:33,281 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 15:26:33,290 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 15:26:33,290 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
[2020-11-24 15:26:33,290 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-24 15:26:33,290 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2916 states.
[2020-11-24 15:26:33,313 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 15:26:33,314 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 15:26:33,314 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 15:26:33,315 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 15:26:33,316 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L2]                 success_transfer_ALFA0 := false;
[L2]                 call_transfer_ALFA0 := false;
[L2]     CALL        call main();
[L2883]              assume null == 0;
[L2884]  CALL        call this := FreshRefGenerator__success();
[L1190]              havoc newRef;
[L1191]              assume Alloc[newRef] == false;
[L1192]              Alloc[newRef] := true;
[L1193]              assume newRef != null;
[L2884]  RET         call this := FreshRefGenerator__success();
[L2885]              assume now >= 0;
[L2886]              assume DType[this] == ALFA;
[L2887]              assume !revert && gas >= 0;
[L2888]  CALL        call CorralChoice_ALFA(this);
[L2786]              havoc msgsender_MSG;
[L2787]              havoc msgvalue_MSG;
[L2788]              havoc choice;
[L2789]              havoc sender_s1694;
[L2790]              havoc recipient_s1694;
[L2791]              havoc amount_s1694;
[L2792]              havoc __ret_0_transferFrom;
[L2793]              havoc owner_s284;
[L2794]              havoc spender_s284;
[L2795]              havoc __ret_0_allowance;
[L2796]              havoc recipient_s1452;
[L2797]              havoc amount_s1452;
[L2798]              havoc __ret_0_transfer;
[L2799]              havoc spender_s1713;
[L2800]              havoc amount_s1713;
[L2801]              havoc __ret_0_approve;
[L2802]              havoc account_s268;
[L2803]              havoc __ret_0_balanceOf;
[L2804]              havoc __ret_0_totalSupply;
[L2805]              havoc __ret_0_name;
[L2806]              havoc __ret_0_symbol;
[L2807]              havoc __ret_0_decimals;
[L2808]              havoc __ret_0_bank;
[L2809]              havoc __ret_0_price;
[L2810]              havoc n_s685;
[L2811]              havoc __ret_0_sblock;
[L2812]              havoc __ret_0_sdata;
[L2813]              havoc __ret_1_sdata;
[L2814]              havoc __ret_2_sdata;
[L2815]              havoc __ret_3_sdata;
[L2816]              havoc __ret_4_sdata;
[L2817]              havoc arg1893_s0;
[L2818]              havoc __ret_0_reff;
[L2819]              havoc arg1894_s0;
[L2820]              havoc __ret_0_prev;
[L2821]              havoc arg1895_s0;
[L2822]              havoc __ret_0_summ;
[L2823]              havoc spender_s1740;
[L2824]              havoc addedValue_s1740;
[L2825]              havoc __ret_0_increaseAllowance;
[L2826]              havoc spender_s1767;
[L2827]              havoc subtractedValue_s1767;
[L2828]              havoc __ret_0_decreaseAllowance;
[L2829]              havoc tmpNow;
[L2830]              havoc gas;
[L2831]              assume gas > 4000000 && gas <= 8000000;
[L2832]              tmpNow := now;
[L2833]              havoc now;
[L2834]              assume now > tmpNow;
[L2835]              assume msgsender_MSG != null;
[L2836]  COND TRUE   choice == 6
[L2837]              gas := gas - 21000;
[L2838]  COND FALSE  !(gas >= 0)
[L2888]  RET         call CorralChoice_ALFA(this);

Loop:
[L2888]        assume true;

[2020-11-24 15:26:33,332 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 15:26:33,333 INFO  L82        PathProgramCache]: Analyzing trace with hash 1535321509, now seen corresponding path program 1 times
[2020-11-24 15:26:33,337 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 15:26:33,362 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 15:26:33,425 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 15:26:33,427 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 15:26:33,427 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [5] imperfect sequences [] total 5
[2020-11-24 15:26:33,431 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 15:26:33,549 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 5 interpolants.
[2020-11-24 15:26:33,549 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=9, Invalid=11, Unknown=0, NotChecked=0, Total=20
[2020-11-24 15:26:33,551 INFO  L87              Difference]: Start difference. First operand 2916 states. Second operand 5 states.
[2020-11-24 15:26:34,021 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 15:26:34,021 INFO  L93              Difference]: Finished difference Result 2499 states and 3139 transitions.
[2020-11-24 15:26:34,021 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-24 15:26:34,023 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2499 states and 3139 transitions.
[2020-11-24 15:26:34,037 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 15:26:34,058 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2499 states to 1159 states and 1464 transitions.
[2020-11-24 15:26:34,059 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 4
[2020-11-24 15:26:34,060 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 98
[2020-11-24 15:26:34,060 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 1159 states and 1464 transitions.
[2020-11-24 15:26:34,067 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 15:26:34,067 INFO  L728         BuchiCegarLoop]: Abstraction has 1159 states and 1464 transitions.
[2020-11-24 15:26:34,084 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 1159 states and 1464 transitions.
[2020-11-24 15:26:34,125 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 1159 to 1159.
[2020-11-24 15:26:34,125 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 1159 states.
[2020-11-24 15:26:34,129 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 1159 states to 1159 states and 1464 transitions.
[2020-11-24 15:26:34,130 INFO  L751         BuchiCegarLoop]: Abstraction has 1159 states and 1464 transitions.
[2020-11-24 15:26:34,130 INFO  L631         BuchiCegarLoop]: Abstraction has 1159 states and 1464 transitions.
[2020-11-24 15:26:34,130 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-24 15:26:34,130 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1159 states and 1464 transitions.
[2020-11-24 15:26:34,134 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 15:26:34,134 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 15:26:34,134 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 15:26:34,135 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 15:26:34,135 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L2]                 success_transfer_ALFA0 := false;
[L2]                 call_transfer_ALFA0 := false;
[L2]     CALL        call main();
[L2883]              assume null == 0;
[L2884]  CALL        call this := FreshRefGenerator__success();
[L1190]              havoc newRef;
[L1191]              assume Alloc[newRef] == false;
[L1192]              Alloc[newRef] := true;
[L1193]              assume newRef != null;
[L2884]  RET         call this := FreshRefGenerator__success();
[L2885]              assume now >= 0;
[L2886]              assume DType[this] == ALFA;
[L2887]              assume !revert && gas >= 0;
[L2888]  CALL        call CorralChoice_ALFA(this);
[L2786]              havoc msgsender_MSG;
[L2787]              havoc msgvalue_MSG;
[L2788]              havoc choice;
[L2789]              havoc sender_s1694;
[L2790]              havoc recipient_s1694;
[L2791]              havoc amount_s1694;
[L2792]              havoc __ret_0_transferFrom;
[L2793]              havoc owner_s284;
[L2794]              havoc spender_s284;
[L2795]              havoc __ret_0_allowance;
[L2796]              havoc recipient_s1452;
[L2797]              havoc amount_s1452;
[L2798]              havoc __ret_0_transfer;
[L2799]              havoc spender_s1713;
[L2800]              havoc amount_s1713;
[L2801]              havoc __ret_0_approve;
[L2802]              havoc account_s268;
[L2803]              havoc __ret_0_balanceOf;
[L2804]              havoc __ret_0_totalSupply;
[L2805]              havoc __ret_0_name;
[L2806]              havoc __ret_0_symbol;
[L2807]              havoc __ret_0_decimals;
[L2808]              havoc __ret_0_bank;
[L2809]              havoc __ret_0_price;
[L2810]              havoc n_s685;
[L2811]              havoc __ret_0_sblock;
[L2812]              havoc __ret_0_sdata;
[L2813]              havoc __ret_1_sdata;
[L2814]              havoc __ret_2_sdata;
[L2815]              havoc __ret_3_sdata;
[L2816]              havoc __ret_4_sdata;
[L2817]              havoc arg1893_s0;
[L2818]              havoc __ret_0_reff;
[L2819]              havoc arg1894_s0;
[L2820]              havoc __ret_0_prev;
[L2821]              havoc arg1895_s0;
[L2822]              havoc __ret_0_summ;
[L2823]              havoc spender_s1740;
[L2824]              havoc addedValue_s1740;
[L2825]              havoc __ret_0_increaseAllowance;
[L2826]              havoc spender_s1767;
[L2827]              havoc subtractedValue_s1767;
[L2828]              havoc __ret_0_decreaseAllowance;
[L2829]              havoc tmpNow;
[L2830]              havoc gas;
[L2831]              assume gas > 4000000 && gas <= 8000000;
[L2832]              tmpNow := now;
[L2833]              havoc now;
[L2834]              assume now > tmpNow;
[L2835]              assume msgsender_MSG != null;
[L2836]  COND FALSE  !(choice == 6)
[L2843]  COND FALSE  !(choice == 5)
[L2849]  COND TRUE   choice == 4
[L2850]              gas := gas - 21000;
[L2851]  COND TRUE   gas >= 0
[L2852]              assume amount_s1452 >= 0 && amount_s1452 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2853]              assume msgvalue_MSG == 0;
[L2854]  CALL        call __ret_0_transfer := transfer~address~uint256_ALFA(this, msgsender_MSG, msgvalue_MSG, recipient_s1452, amount_s1452);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == recipient_s1452 && amount_s1452 <= _balances_ALFA[this][msgsender_MSG]) && amount_s1452 >= 0) && amount_s1452 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ALFA[this][recipient_s1452] >= 0) && _balances_ALFA[this][recipient_s1452] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ALFA[this][msgsender_MSG] >= 0) && _balances_ALFA[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_ALFA0 := true;
[L2]                 call_transfer_ALFA0 := false;
[L2]                 revert := revert_hold;
[L364]               havoc __exception;
[L365]               revert := false;
[L366]   COND FALSE  !(__exception)
[L402]   CALL        call __ret_0_ := transfer~address~uint256_ALFA__success(this, msgsender_MSG, msgvalue_MSG, recipient_s1452, amount_s1452);
[L1583]              __var_6 := this;
[L1584]  COND FALSE  !(recipient_s1452 != this)
[L1592]  CALL        call __var_7 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_ALFA[this][msgsender_MSG], amount_s1452);
[L1235]  COND TRUE   !(b_s49 <= a_s49)
[L1236]              revert := true;
[L1592]  RET         call __var_7 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_ALFA[this][msgsender_MSG], amount_s1452);
[L1593]  COND TRUE   revert
[L402]   RET         call __ret_0_ := transfer~address~uint256_ALFA__success(this, msgsender_MSG, msgvalue_MSG, recipient_s1452, amount_s1452);
[L403]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !((((((((((((((((__ret_0_ == true && _totalSupply_ALFA[this] == old(_totalSupply_ALFA[this])) && _balances_ALFA[this] == old(_balances_ALFA[this])) && _allowances_ALFA[this] == old(_allowances_ALFA[this])) && _name_ALFA[this] == old(_name_ALFA[this])) && _symbol_ALFA[this] == old(_symbol_ALFA[this])) && _decimals_ALFA[this] == old(_decimals_ALFA[this])) && _bank_ALFA[this] == old(_bank_ALFA[this])) && _price_ALFA[this] == old(_price_ALFA[this])) && _time_ALFA[this] == old(_time_ALFA[this])) && M_int_int[_block_ALFA[this]] == old(M_int_int[_block_ALFA[this]])) && own_ALFA[this] == old(own_ALFA[this])) && adv_ALFA[this] == old(adv_ALFA[this])) && ins_ALFA[this] == old(ins_ALFA[this])) && reff_ALFA[this] == old(reff_ALFA[this])) && prev_ALFA[this] == old(prev_ALFA[this])) && summ_ALFA[this] == old(summ_ALFA[this]));
[L2]                 revert := revert_hold;
[L2854]  RET         call __ret_0_transfer := transfer~address~uint256_ALFA(this, msgsender_MSG, msgvalue_MSG, recipient_s1452, amount_s1452);
[L2888]  RET         call CorralChoice_ALFA(this);

Loop:
[L2888]        assume true;

[2020-11-24 15:26:34,138 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 15:26:34,138 INFO  L82        PathProgramCache]: Analyzing trace with hash 1716076501, now seen corresponding path program 1 times
[2020-11-24 15:26:34,139 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 15:26:34,156 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 15:26:34,182 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 15:26:34,182 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 15:26:34,182 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-24 15:26:34,184 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 15:26:34,184 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-24 15:26:34,184 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-24 15:26:34,184 INFO  L87              Difference]: Start difference. First operand 1159 states and 1464 transitions. cyclomatic complexity: 308 Second operand 3 states.
[2020-11-24 15:26:34,232 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 15:26:34,232 INFO  L93              Difference]: Finished difference Result 1424 states and 1792 transitions.
[2020-11-24 15:26:34,232 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-24 15:26:34,233 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 1424 states and 1792 transitions.
[2020-11-24 15:26:34,240 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 2
[2020-11-24 15:26:34,249 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 1424 states to 1298 states and 1563 transitions.
[2020-11-24 15:26:34,249 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 107
[2020-11-24 15:26:34,249 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 107
[2020-11-24 15:26:34,249 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 1298 states and 1563 transitions.
[2020-11-24 15:26:34,253 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 15:26:34,253 INFO  L728         BuchiCegarLoop]: Abstraction has 1298 states and 1563 transitions.
[2020-11-24 15:26:34,254 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 1298 states and 1563 transitions.
[2020-11-24 15:26:34,270 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 1298 to 1249.
[2020-11-24 15:26:34,270 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 1249 states.
[2020-11-24 15:26:34,274 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 1249 states to 1249 states and 1514 transitions.
[2020-11-24 15:26:34,274 INFO  L751         BuchiCegarLoop]: Abstraction has 1249 states and 1514 transitions.
[2020-11-24 15:26:34,274 INFO  L631         BuchiCegarLoop]: Abstraction has 1249 states and 1514 transitions.
[2020-11-24 15:26:34,275 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-24 15:26:34,275 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1249 states and 1514 transitions.
[2020-11-24 15:26:34,278 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 15:26:34,278 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 15:26:34,278 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 15:26:34,279 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 15:26:34,279 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L2]                 success_transfer_ALFA0 := false;
[L2]                 call_transfer_ALFA0 := false;
[L2]     CALL        call main();
[L2883]              assume null == 0;
[L2884]  CALL        call this := FreshRefGenerator__success();
[L1190]              havoc newRef;
[L1191]              assume Alloc[newRef] == false;
[L1192]              Alloc[newRef] := true;
[L1193]              assume newRef != null;
[L2884]  RET         call this := FreshRefGenerator__success();
[L2885]              assume now >= 0;
[L2886]              assume DType[this] == ALFA;
[L2887]              assume !revert && gas >= 0;
[L2888]  CALL        call CorralChoice_ALFA(this);
[L2786]              havoc msgsender_MSG;
[L2787]              havoc msgvalue_MSG;
[L2788]              havoc choice;
[L2789]              havoc sender_s1694;
[L2790]              havoc recipient_s1694;
[L2791]              havoc amount_s1694;
[L2792]              havoc __ret_0_transferFrom;
[L2793]              havoc owner_s284;
[L2794]              havoc spender_s284;
[L2795]              havoc __ret_0_allowance;
[L2796]              havoc recipient_s1452;
[L2797]              havoc amount_s1452;
[L2798]              havoc __ret_0_transfer;
[L2799]              havoc spender_s1713;
[L2800]              havoc amount_s1713;
[L2801]              havoc __ret_0_approve;
[L2802]              havoc account_s268;
[L2803]              havoc __ret_0_balanceOf;
[L2804]              havoc __ret_0_totalSupply;
[L2805]              havoc __ret_0_name;
[L2806]              havoc __ret_0_symbol;
[L2807]              havoc __ret_0_decimals;
[L2808]              havoc __ret_0_bank;
[L2809]              havoc __ret_0_price;
[L2810]              havoc n_s685;
[L2811]              havoc __ret_0_sblock;
[L2812]              havoc __ret_0_sdata;
[L2813]              havoc __ret_1_sdata;
[L2814]              havoc __ret_2_sdata;
[L2815]              havoc __ret_3_sdata;
[L2816]              havoc __ret_4_sdata;
[L2817]              havoc arg1893_s0;
[L2818]              havoc __ret_0_reff;
[L2819]              havoc arg1894_s0;
[L2820]              havoc __ret_0_prev;
[L2821]              havoc arg1895_s0;
[L2822]              havoc __ret_0_summ;
[L2823]              havoc spender_s1740;
[L2824]              havoc addedValue_s1740;
[L2825]              havoc __ret_0_increaseAllowance;
[L2826]              havoc spender_s1767;
[L2827]              havoc subtractedValue_s1767;
[L2828]              havoc __ret_0_decreaseAllowance;
[L2829]              havoc tmpNow;
[L2830]              havoc gas;
[L2831]              assume gas > 4000000 && gas <= 8000000;
[L2832]              tmpNow := now;
[L2833]              havoc now;
[L2834]              assume now > tmpNow;
[L2835]              assume msgsender_MSG != null;
[L2836]  COND FALSE  !(choice == 6)
[L2843]  COND FALSE  !(choice == 5)
[L2849]  COND TRUE   choice == 4
[L2850]              gas := gas - 21000;
[L2851]  COND TRUE   gas >= 0
[L2852]              assume amount_s1452 >= 0 && amount_s1452 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2853]              assume msgvalue_MSG == 0;
[L2854]  CALL        call __ret_0_transfer := transfer~address~uint256_ALFA(this, msgsender_MSG, msgvalue_MSG, recipient_s1452, amount_s1452);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == recipient_s1452 && amount_s1452 <= _balances_ALFA[this][msgsender_MSG]) && amount_s1452 >= 0) && amount_s1452 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ALFA[this][recipient_s1452] >= 0) && _balances_ALFA[this][recipient_s1452] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ALFA[this][msgsender_MSG] >= 0) && _balances_ALFA[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_ALFA0 := true;
[L2]                 call_transfer_ALFA0 := false;
[L2]                 revert := revert_hold;
[L364]               havoc __exception;
[L365]               revert := false;
[L366]   COND TRUE   __exception
[L367]               __tmp__Balance := Balance;
[L368]               __tmp__DType := DType;
[L369]               __tmp__Alloc := Alloc;
[L370]               __tmp__balance_ADDR := balance_ADDR;
[L371]               __tmp__M_Ref_int := M_Ref_int;
[L372]               __tmp__sum__balances0 := sum__balances0;
[L373]               __tmp__alloc__allowances_ALFA_lvl0 := alloc__allowances_ALFA_lvl0;
[L374]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L375]               __tmp__sum__allowances1 := sum__allowances1;
[L376]               __tmp__sum_reff2 := sum_reff2;
[L377]               __tmp__sum_prev3 := sum_prev3;
[L378]               __tmp__sum_summ4 := sum_summ4;
[L379]               __tmp__M_int_int := M_int_int;
[L380]               __tmp__sum := sum;
[L381]               __tmp__Length := Length;
[L382]               __tmp__now := now;
[L383]               __tmp___name_ALFA := _name_ALFA;
[L384]               __tmp___symbol_ALFA := _symbol_ALFA;
[L385]               __tmp___decimals_ALFA := _decimals_ALFA;
[L386]               __tmp___totalSupply_ALFA := _totalSupply_ALFA;
[L387]               __tmp___bank_ALFA := _bank_ALFA;
[L388]               __tmp___price_ALFA := _price_ALFA;
[L389]               __tmp___time_ALFA := _time_ALFA;
[L390]               __tmp___block_ALFA := _block_ALFA;
[L391]               __tmp__own_ALFA := own_ALFA;
[L392]               __tmp__adv_ALFA := adv_ALFA;
[L393]               __tmp__ins_ALFA := ins_ALFA;
[L394]               __tmp___balances_ALFA := _balances_ALFA;
[L395]               __tmp___allowances_ALFA := _allowances_ALFA;
[L396]               __tmp__reff_ALFA := reff_ALFA;
[L397]               __tmp__prev_ALFA := prev_ALFA;
[L398]               __tmp__summ_ALFA := summ_ALFA;
[L399]   CALL        call __ret_0_ := transfer~address~uint256_ALFA__fail(this, msgsender_MSG, msgvalue_MSG, recipient_s1452, amount_s1452);
[L1420]              __var_6 := this;
[L1421]  COND FALSE  !(recipient_s1452 != this)
[L1429]  CALL        call __var_7 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __tmp___balances_ALFA[this][msgsender_MSG], amount_s1452);
[L1223]  COND TRUE   !(b_s49 <= a_s49)
[L1224]              revert := true;
[L1429]  RET         call __var_7 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __tmp___balances_ALFA[this][msgsender_MSG], amount_s1452);
[L1430]  COND TRUE   revert
[L399]   RET         call __ret_0_ := transfer~address~uint256_ALFA__fail(this, msgsender_MSG, msgvalue_MSG, recipient_s1452, amount_s1452);
[L400]               assume revert || gas < 0;
[L2854]  RET         call __ret_0_transfer := transfer~address~uint256_ALFA(this, msgsender_MSG, msgvalue_MSG, recipient_s1452, amount_s1452);
[L2888]  RET         call CorralChoice_ALFA(this);

Loop:
[L2888]        assume true;

[2020-11-24 15:26:34,282 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 15:26:34,282 INFO  L82        PathProgramCache]: Analyzing trace with hash -1753377974, now seen corresponding path program 1 times
[2020-11-24 15:26:34,283 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 15:26:34,297 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 15:26:34,379 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 15:26:34,380 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 15:26:34,380 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [7] imperfect sequences [] total 7
[2020-11-24 15:26:34,380 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 15:26:34,380 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 7 interpolants.
[2020-11-24 15:26:34,381 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=11, Invalid=31, Unknown=0, NotChecked=0, Total=42
[2020-11-24 15:26:34,381 INFO  L87              Difference]: Start difference. First operand 1249 states and 1514 transitions. cyclomatic complexity: 268 Second operand 7 states.
[2020-11-24 15:26:34,890 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 15:26:34,890 INFO  L93              Difference]: Finished difference Result 1378 states and 1663 transitions.
[2020-11-24 15:26:34,890 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 8 states. 
[2020-11-24 15:26:34,890 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 1378 states and 1663 transitions.
[2020-11-24 15:26:34,895 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 2
[2020-11-24 15:26:34,902 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 1378 states to 1378 states and 1663 transitions.
[2020-11-24 15:26:34,902 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 117
[2020-11-24 15:26:34,903 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 117
[2020-11-24 15:26:34,903 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 1378 states and 1663 transitions.
[2020-11-24 15:26:34,905 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 15:26:34,906 INFO  L728         BuchiCegarLoop]: Abstraction has 1378 states and 1663 transitions.
[2020-11-24 15:26:34,907 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 1378 states and 1663 transitions.
[2020-11-24 15:26:34,920 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 1378 to 1251.
[2020-11-24 15:26:34,920 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 1251 states.
[2020-11-24 15:26:34,923 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 1251 states to 1251 states and 1516 transitions.
[2020-11-24 15:26:34,923 INFO  L751         BuchiCegarLoop]: Abstraction has 1251 states and 1516 transitions.
[2020-11-24 15:26:34,923 INFO  L631         BuchiCegarLoop]: Abstraction has 1251 states and 1516 transitions.
[2020-11-24 15:26:34,923 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-24 15:26:34,923 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1251 states and 1516 transitions.
[2020-11-24 15:26:34,925 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 15:26:34,925 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 15:26:34,925 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 15:26:34,926 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 15:26:34,927 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L2]                 success_transfer_ALFA0 := false;
[L2]                 call_transfer_ALFA0 := false;
[L2]     CALL        call main();
[L2883]              assume null == 0;
[L2884]  CALL        call this := FreshRefGenerator__success();
[L1190]              havoc newRef;
[L1191]              assume Alloc[newRef] == false;
[L1192]              Alloc[newRef] := true;
[L1193]              assume newRef != null;
[L2884]  RET         call this := FreshRefGenerator__success();
[L2885]              assume now >= 0;
[L2886]              assume DType[this] == ALFA;
[L2887]              assume !revert && gas >= 0;
[L2888]  CALL        call CorralChoice_ALFA(this);
[L2786]              havoc msgsender_MSG;
[L2787]              havoc msgvalue_MSG;
[L2788]              havoc choice;
[L2789]              havoc sender_s1694;
[L2790]              havoc recipient_s1694;
[L2791]              havoc amount_s1694;
[L2792]              havoc __ret_0_transferFrom;
[L2793]              havoc owner_s284;
[L2794]              havoc spender_s284;
[L2795]              havoc __ret_0_allowance;
[L2796]              havoc recipient_s1452;
[L2797]              havoc amount_s1452;
[L2798]              havoc __ret_0_transfer;
[L2799]              havoc spender_s1713;
[L2800]              havoc amount_s1713;
[L2801]              havoc __ret_0_approve;
[L2802]              havoc account_s268;
[L2803]              havoc __ret_0_balanceOf;
[L2804]              havoc __ret_0_totalSupply;
[L2805]              havoc __ret_0_name;
[L2806]              havoc __ret_0_symbol;
[L2807]              havoc __ret_0_decimals;
[L2808]              havoc __ret_0_bank;
[L2809]              havoc __ret_0_price;
[L2810]              havoc n_s685;
[L2811]              havoc __ret_0_sblock;
[L2812]              havoc __ret_0_sdata;
[L2813]              havoc __ret_1_sdata;
[L2814]              havoc __ret_2_sdata;
[L2815]              havoc __ret_3_sdata;
[L2816]              havoc __ret_4_sdata;
[L2817]              havoc arg1893_s0;
[L2818]              havoc __ret_0_reff;
[L2819]              havoc arg1894_s0;
[L2820]              havoc __ret_0_prev;
[L2821]              havoc arg1895_s0;
[L2822]              havoc __ret_0_summ;
[L2823]              havoc spender_s1740;
[L2824]              havoc addedValue_s1740;
[L2825]              havoc __ret_0_increaseAllowance;
[L2826]              havoc spender_s1767;
[L2827]              havoc subtractedValue_s1767;
[L2828]              havoc __ret_0_decreaseAllowance;
[L2829]              havoc tmpNow;
[L2830]              havoc gas;
[L2831]              assume gas > 4000000 && gas <= 8000000;
[L2832]              tmpNow := now;
[L2833]              havoc now;
[L2834]              assume now > tmpNow;
[L2835]              assume msgsender_MSG != null;
[L2836]  COND FALSE  !(choice == 6)
[L2843]  COND FALSE  !(choice == 5)
[L2849]  COND TRUE   choice == 4
[L2850]              gas := gas - 21000;
[L2851]  COND TRUE   gas >= 0
[L2852]              assume amount_s1452 >= 0 && amount_s1452 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2853]              assume msgvalue_MSG == 0;
[L2854]  CALL        call __ret_0_transfer := transfer~address~uint256_ALFA(this, msgsender_MSG, msgvalue_MSG, recipient_s1452, amount_s1452);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == recipient_s1452 && amount_s1452 <= _balances_ALFA[this][msgsender_MSG]) && amount_s1452 >= 0) && amount_s1452 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ALFA[this][recipient_s1452] >= 0) && _balances_ALFA[this][recipient_s1452] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ALFA[this][msgsender_MSG] >= 0) && _balances_ALFA[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_ALFA0 := true;
[L2]                 call_transfer_ALFA0 := false;
[L2]                 revert := revert_hold;
[L364]               havoc __exception;
[L365]               revert := false;
[L366]   COND TRUE   __exception
[L367]               __tmp__Balance := Balance;
[L368]               __tmp__DType := DType;
[L369]               __tmp__Alloc := Alloc;
[L370]               __tmp__balance_ADDR := balance_ADDR;
[L371]               __tmp__M_Ref_int := M_Ref_int;
[L372]               __tmp__sum__balances0 := sum__balances0;
[L373]               __tmp__alloc__allowances_ALFA_lvl0 := alloc__allowances_ALFA_lvl0;
[L374]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L375]               __tmp__sum__allowances1 := sum__allowances1;
[L376]               __tmp__sum_reff2 := sum_reff2;
[L377]               __tmp__sum_prev3 := sum_prev3;
[L378]               __tmp__sum_summ4 := sum_summ4;
[L379]               __tmp__M_int_int := M_int_int;
[L380]               __tmp__sum := sum;
[L381]               __tmp__Length := Length;
[L382]               __tmp__now := now;
[L383]               __tmp___name_ALFA := _name_ALFA;
[L384]               __tmp___symbol_ALFA := _symbol_ALFA;
[L385]               __tmp___decimals_ALFA := _decimals_ALFA;
[L386]               __tmp___totalSupply_ALFA := _totalSupply_ALFA;
[L387]               __tmp___bank_ALFA := _bank_ALFA;
[L388]               __tmp___price_ALFA := _price_ALFA;
[L389]               __tmp___time_ALFA := _time_ALFA;
[L390]               __tmp___block_ALFA := _block_ALFA;
[L391]               __tmp__own_ALFA := own_ALFA;
[L392]               __tmp__adv_ALFA := adv_ALFA;
[L393]               __tmp__ins_ALFA := ins_ALFA;
[L394]               __tmp___balances_ALFA := _balances_ALFA;
[L395]               __tmp___allowances_ALFA := _allowances_ALFA;
[L396]               __tmp__reff_ALFA := reff_ALFA;
[L397]               __tmp__prev_ALFA := prev_ALFA;
[L398]               __tmp__summ_ALFA := summ_ALFA;
[L399]   CALL        call __ret_0_ := transfer~address~uint256_ALFA__fail(this, msgsender_MSG, msgvalue_MSG, recipient_s1452, amount_s1452);
[L1420]              __var_6 := this;
[L1421]  COND TRUE   recipient_s1452 != this
[L1422]  CALL        call _transfer~address~address~uint256_ALFA__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, recipient_s1452, amount_s1452);
[L2138]              __var_58 := null;
[L2139]  COND TRUE   !(sender_s1821 != null)
[L2140]              revert := true;
[L1422]  RET         call _transfer~address~address~uint256_ALFA__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, recipient_s1452, amount_s1452);
[L1423]  COND TRUE   revert
[L399]   RET         call __ret_0_ := transfer~address~uint256_ALFA__fail(this, msgsender_MSG, msgvalue_MSG, recipient_s1452, amount_s1452);
[L400]               assume revert || gas < 0;
[L2854]  RET         call __ret_0_transfer := transfer~address~uint256_ALFA(this, msgsender_MSG, msgvalue_MSG, recipient_s1452, amount_s1452);
[L2888]  RET         call CorralChoice_ALFA(this);

Loop:
[L2888]        assume true;

[2020-11-24 15:26:34,928 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 15:26:34,929 INFO  L82        PathProgramCache]: Analyzing trace with hash -1616285609, now seen corresponding path program 1 times
[2020-11-24 15:26:34,929 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 15:26:34,938 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 15:26:34,964 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 15:26:34,964 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 15:26:34,964 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [6] imperfect sequences [] total 6
[2020-11-24 15:26:34,964 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 15:26:34,965 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 6 interpolants.
[2020-11-24 15:26:34,965 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=9, Invalid=21, Unknown=0, NotChecked=0, Total=30
[2020-11-24 15:26:34,965 INFO  L87              Difference]: Start difference. First operand 1251 states and 1516 transitions. cyclomatic complexity: 268 Second operand 6 states.
[2020-11-24 15:26:34,989 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 15:26:34,989 INFO  L93              Difference]: Finished difference Result 1261 states and 1527 transitions.
[2020-11-24 15:26:34,990 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 6 states. 
[2020-11-24 15:26:34,990 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 1261 states and 1527 transitions.
[2020-11-24 15:26:34,994 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 15:26:35,017 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 1261 states to 1257 states and 1523 transitions.
[2020-11-24 15:26:35,018 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 98
[2020-11-24 15:26:35,018 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 98
[2020-11-24 15:26:35,018 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 1257 states and 1523 transitions.
[2020-11-24 15:26:35,020 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 15:26:35,020 INFO  L728         BuchiCegarLoop]: Abstraction has 1257 states and 1523 transitions.
[2020-11-24 15:26:35,021 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 1257 states and 1523 transitions.
[2020-11-24 15:26:35,033 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 1257 to 1255.
[2020-11-24 15:26:35,033 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 1255 states.
[2020-11-24 15:26:35,038 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 1255 states to 1255 states and 1521 transitions.
[2020-11-24 15:26:35,038 INFO  L751         BuchiCegarLoop]: Abstraction has 1255 states and 1521 transitions.
[2020-11-24 15:26:35,039 INFO  L631         BuchiCegarLoop]: Abstraction has 1255 states and 1521 transitions.
[2020-11-24 15:26:35,039 INFO  L445         BuchiCegarLoop]: ======== Iteration 5============
[2020-11-24 15:26:35,039 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1255 states and 1521 transitions.
[2020-11-24 15:26:35,042 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 15:26:35,043 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 15:26:35,043 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 15:26:35,044 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 15:26:35,044 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L2]                 success_transfer_ALFA0 := false;
[L2]                 call_transfer_ALFA0 := false;
[L2]     CALL        call main();
[L2883]              assume null == 0;
[L2884]  CALL        call this := FreshRefGenerator__success();
[L1190]              havoc newRef;
[L1191]              assume Alloc[newRef] == false;
[L1192]              Alloc[newRef] := true;
[L1193]              assume newRef != null;
[L2884]  RET         call this := FreshRefGenerator__success();
[L2885]              assume now >= 0;
[L2886]              assume DType[this] == ALFA;
[L2887]              assume !revert && gas >= 0;
[L2888]  CALL        call CorralChoice_ALFA(this);
[L2786]              havoc msgsender_MSG;
[L2787]              havoc msgvalue_MSG;
[L2788]              havoc choice;
[L2789]              havoc sender_s1694;
[L2790]              havoc recipient_s1694;
[L2791]              havoc amount_s1694;
[L2792]              havoc __ret_0_transferFrom;
[L2793]              havoc owner_s284;
[L2794]              havoc spender_s284;
[L2795]              havoc __ret_0_allowance;
[L2796]              havoc recipient_s1452;
[L2797]              havoc amount_s1452;
[L2798]              havoc __ret_0_transfer;
[L2799]              havoc spender_s1713;
[L2800]              havoc amount_s1713;
[L2801]              havoc __ret_0_approve;
[L2802]              havoc account_s268;
[L2803]              havoc __ret_0_balanceOf;
[L2804]              havoc __ret_0_totalSupply;
[L2805]              havoc __ret_0_name;
[L2806]              havoc __ret_0_symbol;
[L2807]              havoc __ret_0_decimals;
[L2808]              havoc __ret_0_bank;
[L2809]              havoc __ret_0_price;
[L2810]              havoc n_s685;
[L2811]              havoc __ret_0_sblock;
[L2812]              havoc __ret_0_sdata;
[L2813]              havoc __ret_1_sdata;
[L2814]              havoc __ret_2_sdata;
[L2815]              havoc __ret_3_sdata;
[L2816]              havoc __ret_4_sdata;
[L2817]              havoc arg1893_s0;
[L2818]              havoc __ret_0_reff;
[L2819]              havoc arg1894_s0;
[L2820]              havoc __ret_0_prev;
[L2821]              havoc arg1895_s0;
[L2822]              havoc __ret_0_summ;
[L2823]              havoc spender_s1740;
[L2824]              havoc addedValue_s1740;
[L2825]              havoc __ret_0_increaseAllowance;
[L2826]              havoc spender_s1767;
[L2827]              havoc subtractedValue_s1767;
[L2828]              havoc __ret_0_decreaseAllowance;
[L2829]              havoc tmpNow;
[L2830]              havoc gas;
[L2831]              assume gas > 4000000 && gas <= 8000000;
[L2832]              tmpNow := now;
[L2833]              havoc now;
[L2834]              assume now > tmpNow;
[L2835]              assume msgsender_MSG != null;
[L2836]  COND FALSE  !(choice == 6)
[L2843]  COND FALSE  !(choice == 5)
[L2849]  COND TRUE   choice == 4
[L2850]              gas := gas - 21000;
[L2851]  COND TRUE   gas >= 0
[L2852]              assume amount_s1452 >= 0 && amount_s1452 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2853]              assume msgvalue_MSG == 0;
[L2854]  CALL        call __ret_0_transfer := transfer~address~uint256_ALFA(this, msgsender_MSG, msgvalue_MSG, recipient_s1452, amount_s1452);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == recipient_s1452 && amount_s1452 <= _balances_ALFA[this][msgsender_MSG]) && amount_s1452 >= 0) && amount_s1452 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ALFA[this][recipient_s1452] >= 0) && _balances_ALFA[this][recipient_s1452] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ALFA[this][msgsender_MSG] >= 0) && _balances_ALFA[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_ALFA0 := true;
[L2]                 call_transfer_ALFA0 := false;
[L2]                 revert := revert_hold;
[L364]               havoc __exception;
[L365]               revert := false;
[L366]   COND TRUE   __exception
[L367]               __tmp__Balance := Balance;
[L368]               __tmp__DType := DType;
[L369]               __tmp__Alloc := Alloc;
[L370]               __tmp__balance_ADDR := balance_ADDR;
[L371]               __tmp__M_Ref_int := M_Ref_int;
[L372]               __tmp__sum__balances0 := sum__balances0;
[L373]               __tmp__alloc__allowances_ALFA_lvl0 := alloc__allowances_ALFA_lvl0;
[L374]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L375]               __tmp__sum__allowances1 := sum__allowances1;
[L376]               __tmp__sum_reff2 := sum_reff2;
[L377]               __tmp__sum_prev3 := sum_prev3;
[L378]               __tmp__sum_summ4 := sum_summ4;
[L379]               __tmp__M_int_int := M_int_int;
[L380]               __tmp__sum := sum;
[L381]               __tmp__Length := Length;
[L382]               __tmp__now := now;
[L383]               __tmp___name_ALFA := _name_ALFA;
[L384]               __tmp___symbol_ALFA := _symbol_ALFA;
[L385]               __tmp___decimals_ALFA := _decimals_ALFA;
[L386]               __tmp___totalSupply_ALFA := _totalSupply_ALFA;
[L387]               __tmp___bank_ALFA := _bank_ALFA;
[L388]               __tmp___price_ALFA := _price_ALFA;
[L389]               __tmp___time_ALFA := _time_ALFA;
[L390]               __tmp___block_ALFA := _block_ALFA;
[L391]               __tmp__own_ALFA := own_ALFA;
[L392]               __tmp__adv_ALFA := adv_ALFA;
[L393]               __tmp__ins_ALFA := ins_ALFA;
[L394]               __tmp___balances_ALFA := _balances_ALFA;
[L395]               __tmp___allowances_ALFA := _allowances_ALFA;
[L396]               __tmp__reff_ALFA := reff_ALFA;
[L397]               __tmp__prev_ALFA := prev_ALFA;
[L398]               __tmp__summ_ALFA := summ_ALFA;
[L399]   CALL        call __ret_0_ := transfer~address~uint256_ALFA__fail(this, msgsender_MSG, msgvalue_MSG, recipient_s1452, amount_s1452);
[L1420]              __var_6 := this;
[L1421]  COND FALSE  !(recipient_s1452 != this)
[L1429]  CALL        call __var_7 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __tmp___balances_ALFA[this][msgsender_MSG], amount_s1452);
[L1223]  COND FALSE  !(!(b_s49 <= a_s49))
[L1227]              c_s49 := (a_s49 - b_s49) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1228]              __ret_0_ := c_s49;
[L1429]  RET         call __var_7 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __tmp___balances_ALFA[this][msgsender_MSG], amount_s1452);
[L1430]  COND TRUE   revert
[L399]   RET         call __ret_0_ := transfer~address~uint256_ALFA__fail(this, msgsender_MSG, msgvalue_MSG, recipient_s1452, amount_s1452);
[L400]               assume revert || gas < 0;
[L2854]  RET         call __ret_0_transfer := transfer~address~uint256_ALFA(this, msgsender_MSG, msgvalue_MSG, recipient_s1452, amount_s1452);
[L2888]  RET         call CorralChoice_ALFA(this);

Loop:
[L2888]        assume true;

[2020-11-24 15:26:35,050 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 15:26:35,050 INFO  L82        PathProgramCache]: Analyzing trace with hash 364258168, now seen corresponding path program 1 times
[2020-11-24 15:26:35,051 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 15:26:35,060 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 15:26:35,086 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 15:26:35,086 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 15:26:35,086 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [5] imperfect sequences [] total 5
[2020-11-24 15:26:35,087 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 15:26:35,087 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 5 interpolants.
[2020-11-24 15:26:35,087 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=9, Invalid=11, Unknown=0, NotChecked=0, Total=20
[2020-11-24 15:26:35,087 INFO  L87              Difference]: Start difference. First operand 1255 states and 1521 transitions. cyclomatic complexity: 269 Second operand 5 states.
[2020-11-24 15:26:35,212 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 15:26:35,212 INFO  L93              Difference]: Finished difference Result 1294 states and 1498 transitions.
[2020-11-24 15:26:35,212 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-24 15:26:35,212 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 1294 states and 1498 transitions.
[2020-11-24 15:26:35,216 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 2
[2020-11-24 15:26:35,220 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 1294 states to 1294 states and 1498 transitions.
[2020-11-24 15:26:35,220 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 107
[2020-11-24 15:26:35,220 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 107
[2020-11-24 15:26:35,220 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 1294 states and 1498 transitions.
[2020-11-24 15:26:35,221 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 15:26:35,222 INFO  L728         BuchiCegarLoop]: Abstraction has 1294 states and 1498 transitions.
[2020-11-24 15:26:35,222 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 1294 states and 1498 transitions.
[2020-11-24 15:26:35,231 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 1294 to 1245.
[2020-11-24 15:26:35,231 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 1245 states.
[2020-11-24 15:26:35,232 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 1245 states to 1245 states and 1449 transitions.
[2020-11-24 15:26:35,232 INFO  L751         BuchiCegarLoop]: Abstraction has 1245 states and 1449 transitions.
[2020-11-24 15:26:35,232 INFO  L631         BuchiCegarLoop]: Abstraction has 1245 states and 1449 transitions.
[2020-11-24 15:26:35,232 INFO  L445         BuchiCegarLoop]: ======== Iteration 6============
[2020-11-24 15:26:35,232 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1245 states and 1449 transitions.
[2020-11-24 15:26:35,234 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 15:26:35,234 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 15:26:35,234 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 15:26:35,235 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 15:26:35,235 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L2]                 success_transfer_ALFA0 := false;
[L2]                 call_transfer_ALFA0 := false;
[L2]     CALL        call main();
[L2883]              assume null == 0;
[L2884]  CALL        call this := FreshRefGenerator__success();
[L1190]              havoc newRef;
[L1191]              assume Alloc[newRef] == false;
[L1192]              Alloc[newRef] := true;
[L1193]              assume newRef != null;
[L2884]  RET         call this := FreshRefGenerator__success();
[L2885]              assume now >= 0;
[L2886]              assume DType[this] == ALFA;
[L2887]              assume !revert && gas >= 0;
[L2888]  CALL        call CorralChoice_ALFA(this);
[L2786]              havoc msgsender_MSG;
[L2787]              havoc msgvalue_MSG;
[L2788]              havoc choice;
[L2789]              havoc sender_s1694;
[L2790]              havoc recipient_s1694;
[L2791]              havoc amount_s1694;
[L2792]              havoc __ret_0_transferFrom;
[L2793]              havoc owner_s284;
[L2794]              havoc spender_s284;
[L2795]              havoc __ret_0_allowance;
[L2796]              havoc recipient_s1452;
[L2797]              havoc amount_s1452;
[L2798]              havoc __ret_0_transfer;
[L2799]              havoc spender_s1713;
[L2800]              havoc amount_s1713;
[L2801]              havoc __ret_0_approve;
[L2802]              havoc account_s268;
[L2803]              havoc __ret_0_balanceOf;
[L2804]              havoc __ret_0_totalSupply;
[L2805]              havoc __ret_0_name;
[L2806]              havoc __ret_0_symbol;
[L2807]              havoc __ret_0_decimals;
[L2808]              havoc __ret_0_bank;
[L2809]              havoc __ret_0_price;
[L2810]              havoc n_s685;
[L2811]              havoc __ret_0_sblock;
[L2812]              havoc __ret_0_sdata;
[L2813]              havoc __ret_1_sdata;
[L2814]              havoc __ret_2_sdata;
[L2815]              havoc __ret_3_sdata;
[L2816]              havoc __ret_4_sdata;
[L2817]              havoc arg1893_s0;
[L2818]              havoc __ret_0_reff;
[L2819]              havoc arg1894_s0;
[L2820]              havoc __ret_0_prev;
[L2821]              havoc arg1895_s0;
[L2822]              havoc __ret_0_summ;
[L2823]              havoc spender_s1740;
[L2824]              havoc addedValue_s1740;
[L2825]              havoc __ret_0_increaseAllowance;
[L2826]              havoc spender_s1767;
[L2827]              havoc subtractedValue_s1767;
[L2828]              havoc __ret_0_decreaseAllowance;
[L2829]              havoc tmpNow;
[L2830]              havoc gas;
[L2831]              assume gas > 4000000 && gas <= 8000000;
[L2832]              tmpNow := now;
[L2833]              havoc now;
[L2834]              assume now > tmpNow;
[L2835]              assume msgsender_MSG != null;
[L2836]  COND FALSE  !(choice == 6)
[L2843]  COND FALSE  !(choice == 5)
[L2849]  COND TRUE   choice == 4
[L2850]              gas := gas - 21000;
[L2851]  COND TRUE   gas >= 0
[L2852]              assume amount_s1452 >= 0 && amount_s1452 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2853]              assume msgvalue_MSG == 0;
[L2854]  CALL        call __ret_0_transfer := transfer~address~uint256_ALFA(this, msgsender_MSG, msgvalue_MSG, recipient_s1452, amount_s1452);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == recipient_s1452 && amount_s1452 <= _balances_ALFA[this][msgsender_MSG]) && amount_s1452 >= 0) && amount_s1452 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ALFA[this][recipient_s1452] >= 0) && _balances_ALFA[this][recipient_s1452] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ALFA[this][msgsender_MSG] >= 0) && _balances_ALFA[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_ALFA0 := true;
[L2]                 call_transfer_ALFA0 := false;
[L2]                 revert := revert_hold;
[L364]               havoc __exception;
[L365]               revert := false;
[L366]   COND TRUE   __exception
[L367]               __tmp__Balance := Balance;
[L368]               __tmp__DType := DType;
[L369]               __tmp__Alloc := Alloc;
[L370]               __tmp__balance_ADDR := balance_ADDR;
[L371]               __tmp__M_Ref_int := M_Ref_int;
[L372]               __tmp__sum__balances0 := sum__balances0;
[L373]               __tmp__alloc__allowances_ALFA_lvl0 := alloc__allowances_ALFA_lvl0;
[L374]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L375]               __tmp__sum__allowances1 := sum__allowances1;
[L376]               __tmp__sum_reff2 := sum_reff2;
[L377]               __tmp__sum_prev3 := sum_prev3;
[L378]               __tmp__sum_summ4 := sum_summ4;
[L379]               __tmp__M_int_int := M_int_int;
[L380]               __tmp__sum := sum;
[L381]               __tmp__Length := Length;
[L382]               __tmp__now := now;
[L383]               __tmp___name_ALFA := _name_ALFA;
[L384]               __tmp___symbol_ALFA := _symbol_ALFA;
[L385]               __tmp___decimals_ALFA := _decimals_ALFA;
[L386]               __tmp___totalSupply_ALFA := _totalSupply_ALFA;
[L387]               __tmp___bank_ALFA := _bank_ALFA;
[L388]               __tmp___price_ALFA := _price_ALFA;
[L389]               __tmp___time_ALFA := _time_ALFA;
[L390]               __tmp___block_ALFA := _block_ALFA;
[L391]               __tmp__own_ALFA := own_ALFA;
[L392]               __tmp__adv_ALFA := adv_ALFA;
[L393]               __tmp__ins_ALFA := ins_ALFA;
[L394]               __tmp___balances_ALFA := _balances_ALFA;
[L395]               __tmp___allowances_ALFA := _allowances_ALFA;
[L396]               __tmp__reff_ALFA := reff_ALFA;
[L397]               __tmp__prev_ALFA := prev_ALFA;
[L398]               __tmp__summ_ALFA := summ_ALFA;
[L399]   CALL        call __ret_0_ := transfer~address~uint256_ALFA__fail(this, msgsender_MSG, msgvalue_MSG, recipient_s1452, amount_s1452);
[L1420]              __var_6 := this;
[L1421]  COND TRUE   recipient_s1452 != this
[L1422]  CALL        call _transfer~address~address~uint256_ALFA__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, recipient_s1452, amount_s1452);
[L2138]              __var_58 := null;
[L2139]  COND FALSE  !(!(sender_s1821 != null))
[L2143]              __var_59 := null;
[L2144]  COND TRUE   !(recipient_s1821 != null)
[L2145]              revert := true;
[L1422]  RET         call _transfer~address~address~uint256_ALFA__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, recipient_s1452, amount_s1452);
[L1423]  COND TRUE   revert
[L399]   RET         call __ret_0_ := transfer~address~uint256_ALFA__fail(this, msgsender_MSG, msgvalue_MSG, recipient_s1452, amount_s1452);
[L400]               assume revert || gas < 0;
[L2854]  RET         call __ret_0_transfer := transfer~address~uint256_ALFA(this, msgsender_MSG, msgvalue_MSG, recipient_s1452, amount_s1452);
[L2888]  RET         call CorralChoice_ALFA(this);

Loop:
[L2888]        assume true;

[2020-11-24 15:26:35,236 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 15:26:35,237 INFO  L82        PathProgramCache]: Analyzing trace with hash -1035773632, now seen corresponding path program 1 times
[2020-11-24 15:26:35,237 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 15:26:35,243 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 15:26:35,259 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 15:26:35,260 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 15:26:35,260 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [7] imperfect sequences [] total 7
[2020-11-24 15:26:35,260 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 15:26:35,260 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 7 interpolants.
[2020-11-24 15:26:35,260 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=11, Invalid=31, Unknown=0, NotChecked=0, Total=42
[2020-11-24 15:26:35,260 INFO  L87              Difference]: Start difference. First operand 1245 states and 1449 transitions. cyclomatic complexity: 207 Second operand 7 states.
[2020-11-24 15:26:35,281 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 15:26:35,281 INFO  L93              Difference]: Finished difference Result 1255 states and 1460 transitions.
[2020-11-24 15:26:35,281 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 7 states. 
[2020-11-24 15:26:35,281 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 1255 states and 1460 transitions.
[2020-11-24 15:26:35,284 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 15:26:35,288 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 1255 states to 1251 states and 1456 transitions.
[2020-11-24 15:26:35,288 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 98
[2020-11-24 15:26:35,288 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 98
[2020-11-24 15:26:35,288 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 1251 states and 1456 transitions.
[2020-11-24 15:26:35,289 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 15:26:35,289 INFO  L728         BuchiCegarLoop]: Abstraction has 1251 states and 1456 transitions.
[2020-11-24 15:26:35,290 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 1251 states and 1456 transitions.
[2020-11-24 15:26:35,298 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 1251 to 1245.
[2020-11-24 15:26:35,299 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 1245 states.
[2020-11-24 15:26:35,300 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 1245 states to 1245 states and 1449 transitions.
[2020-11-24 15:26:35,300 INFO  L751         BuchiCegarLoop]: Abstraction has 1245 states and 1449 transitions.
[2020-11-24 15:26:35,300 INFO  L631         BuchiCegarLoop]: Abstraction has 1245 states and 1449 transitions.
[2020-11-24 15:26:35,300 INFO  L445         BuchiCegarLoop]: ======== Iteration 7============
[2020-11-24 15:26:35,300 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1245 states and 1449 transitions.
[2020-11-24 15:26:35,302 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 15:26:35,302 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 15:26:35,302 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 15:26:35,302 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 15:26:35,303 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L2]                 success_transfer_ALFA0 := false;
[L2]                 call_transfer_ALFA0 := false;
[L2]     CALL        call main();
[L2883]              assume null == 0;
[L2884]  CALL        call this := FreshRefGenerator__success();
[L1190]              havoc newRef;
[L1191]              assume Alloc[newRef] == false;
[L1192]              Alloc[newRef] := true;
[L1193]              assume newRef != null;
[L2884]  RET         call this := FreshRefGenerator__success();
[L2885]              assume now >= 0;
[L2886]              assume DType[this] == ALFA;
[L2887]              assume !revert && gas >= 0;
[L2888]  CALL        call CorralChoice_ALFA(this);
[L2786]              havoc msgsender_MSG;
[L2787]              havoc msgvalue_MSG;
[L2788]              havoc choice;
[L2789]              havoc sender_s1694;
[L2790]              havoc recipient_s1694;
[L2791]              havoc amount_s1694;
[L2792]              havoc __ret_0_transferFrom;
[L2793]              havoc owner_s284;
[L2794]              havoc spender_s284;
[L2795]              havoc __ret_0_allowance;
[L2796]              havoc recipient_s1452;
[L2797]              havoc amount_s1452;
[L2798]              havoc __ret_0_transfer;
[L2799]              havoc spender_s1713;
[L2800]              havoc amount_s1713;
[L2801]              havoc __ret_0_approve;
[L2802]              havoc account_s268;
[L2803]              havoc __ret_0_balanceOf;
[L2804]              havoc __ret_0_totalSupply;
[L2805]              havoc __ret_0_name;
[L2806]              havoc __ret_0_symbol;
[L2807]              havoc __ret_0_decimals;
[L2808]              havoc __ret_0_bank;
[L2809]              havoc __ret_0_price;
[L2810]              havoc n_s685;
[L2811]              havoc __ret_0_sblock;
[L2812]              havoc __ret_0_sdata;
[L2813]              havoc __ret_1_sdata;
[L2814]              havoc __ret_2_sdata;
[L2815]              havoc __ret_3_sdata;
[L2816]              havoc __ret_4_sdata;
[L2817]              havoc arg1893_s0;
[L2818]              havoc __ret_0_reff;
[L2819]              havoc arg1894_s0;
[L2820]              havoc __ret_0_prev;
[L2821]              havoc arg1895_s0;
[L2822]              havoc __ret_0_summ;
[L2823]              havoc spender_s1740;
[L2824]              havoc addedValue_s1740;
[L2825]              havoc __ret_0_increaseAllowance;
[L2826]              havoc spender_s1767;
[L2827]              havoc subtractedValue_s1767;
[L2828]              havoc __ret_0_decreaseAllowance;
[L2829]              havoc tmpNow;
[L2830]              havoc gas;
[L2831]              assume gas > 4000000 && gas <= 8000000;
[L2832]              tmpNow := now;
[L2833]              havoc now;
[L2834]              assume now > tmpNow;
[L2835]              assume msgsender_MSG != null;
[L2836]  COND FALSE  !(choice == 6)
[L2843]  COND FALSE  !(choice == 5)
[L2849]  COND TRUE   choice == 4
[L2850]              gas := gas - 21000;
[L2851]  COND TRUE   gas >= 0
[L2852]              assume amount_s1452 >= 0 && amount_s1452 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2853]              assume msgvalue_MSG == 0;
[L2854]  CALL        call __ret_0_transfer := transfer~address~uint256_ALFA(this, msgsender_MSG, msgvalue_MSG, recipient_s1452, amount_s1452);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == recipient_s1452 && amount_s1452 <= _balances_ALFA[this][msgsender_MSG]) && amount_s1452 >= 0) && amount_s1452 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ALFA[this][recipient_s1452] >= 0) && _balances_ALFA[this][recipient_s1452] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ALFA[this][msgsender_MSG] >= 0) && _balances_ALFA[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_ALFA0 := true;
[L2]                 call_transfer_ALFA0 := false;
[L2]                 revert := revert_hold;
[L364]               havoc __exception;
[L365]               revert := false;
[L366]   COND FALSE  !(__exception)
[L402]   CALL        call __ret_0_ := transfer~address~uint256_ALFA__success(this, msgsender_MSG, msgvalue_MSG, recipient_s1452, amount_s1452);
[L1583]              __var_6 := this;
[L1584]  COND FALSE  !(recipient_s1452 != this)
[L1592]  CALL        call __var_7 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_ALFA[this][msgsender_MSG], amount_s1452);
[L1235]  COND FALSE  !(!(b_s49 <= a_s49))
[L1239]              c_s49 := (a_s49 - b_s49) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1240]              __ret_0_ := c_s49;
[L1592]  RET         call __var_7 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_ALFA[this][msgsender_MSG], amount_s1452);
[L1593]  COND FALSE  !(revert)
[L1596]              sum__balances0[this] := sum__balances0[this] - _balances_ALFA[this][msgsender_MSG];
[L1597]              _balances_ALFA[this][msgsender_MSG] := __var_7;
[L1598]              sum__balances0[this] := sum__balances0[this] + _balances_ALFA[this][msgsender_MSG];
[L1599]  CALL        call __var_8 := mul~uint256~uint256_SafeMath__success(this, this, 0, amount_s1452, _price_ALFA[this]);
[L1263]  COND TRUE   a_s82 == 0
[L1264]              __ret_0_ := 0;
[L1599]  RET         call __var_8 := mul~uint256~uint256_SafeMath__success(this, this, 0, amount_s1452, _price_ALFA[this]);
[L1600]  COND FALSE  !(revert)
[L1603]  CALL        call change_s1452 := div~uint256~uint256_SafeMath__success(this, this, 0, __var_8, 1000000000000000000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L1287]              c_s100 := nonlinearDiv(a_s100, b_s100) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1288]              __ret_0_ := c_s100;
[L1603]  RET         call change_s1452 := div~uint256~uint256_SafeMath__success(this, this, 0, __var_8, 1000000000000000000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L1604]  COND FALSE  !(revert)
[L1607]              change_s1452 := change_s1452;
[L1608]              __var_9 := this;
[L1609]  COND FALSE  !(!(Balance[this] >= change_s1452))
[L1613]  COND FALSE  !(_totalSupply_ALFA[this] > amount_s1452)
[L1665]  COND FALSE  !(_totalSupply_ALFA[this] == amount_s1452)
[L1704]              __var_28 := gas;
[L1705]  COND FALSE  !(gas > 2300)
[L1708]              __var_28 := __var_28 - gas;
[L1709]  CALL        call __var_29 := send__success(this, msgsender_MSG, change_s1452);
[L2621]              havoc __exception;
[L2622]  COND FALSE  !(__exception)
[L2662]  COND FALSE  !(Balance[from] >= amount)
[L2666]              success := false;
[L2668]              assume !revert && gas >= 0;
[L1709]  RET         call __var_29 := send__success(this, msgsender_MSG, change_s1452);
[L1710]  COND FALSE  !(!__var_29)
[L1714]              gas := __var_28 + gas;
[L1715]              __ret_0_ := true;
[L402]   RET         call __ret_0_ := transfer~address~uint256_ALFA__success(this, msgsender_MSG, msgvalue_MSG, recipient_s1452, amount_s1452);
[L403]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !((((((((((((((((__ret_0_ == true && _totalSupply_ALFA[this] == old(_totalSupply_ALFA[this])) && _balances_ALFA[this] == old(_balances_ALFA[this])) && _allowances_ALFA[this] == old(_allowances_ALFA[this])) && _name_ALFA[this] == old(_name_ALFA[this])) && _symbol_ALFA[this] == old(_symbol_ALFA[this])) && _decimals_ALFA[this] == old(_decimals_ALFA[this])) && _bank_ALFA[this] == old(_bank_ALFA[this])) && _price_ALFA[this] == old(_price_ALFA[this])) && _time_ALFA[this] == old(_time_ALFA[this])) && M_int_int[_block_ALFA[this]] == old(M_int_int[_block_ALFA[this]])) && own_ALFA[this] == old(own_ALFA[this])) && adv_ALFA[this] == old(adv_ALFA[this])) && ins_ALFA[this] == old(ins_ALFA[this])) && reff_ALFA[this] == old(reff_ALFA[this])) && prev_ALFA[this] == old(prev_ALFA[this])) && summ_ALFA[this] == old(summ_ALFA[this]));
[L2]                 revert := revert_hold;
[L2854]  RET         call __ret_0_transfer := transfer~address~uint256_ALFA(this, msgsender_MSG, msgvalue_MSG, recipient_s1452, amount_s1452);
[L2888]  RET         call CorralChoice_ALFA(this);

Loop:
[L2888]        assume true;

[2020-11-24 15:26:35,304 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 15:26:35,304 INFO  L82        PathProgramCache]: Analyzing trace with hash -1704534510, now seen corresponding path program 1 times
[2020-11-24 15:26:35,305 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 15:26:35,314 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 15:26:35,330 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 15:26:35,330 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 15:26:35,330 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-24 15:26:35,330 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 15:26:35,330 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-24 15:26:35,330 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-24 15:26:35,330 INFO  L87              Difference]: Start difference. First operand 1245 states and 1449 transitions. cyclomatic complexity: 207 Second operand 4 states.
[2020-11-24 15:26:35,337 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 15:26:35,337 INFO  L93              Difference]: Finished difference Result 1250 states and 1456 transitions.
[2020-11-24 15:26:35,337 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-24 15:26:35,337 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 1250 states and 1456 transitions.
[2020-11-24 15:26:35,340 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 15:26:35,344 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 1250 states to 1248 states and 1454 transitions.
[2020-11-24 15:26:35,344 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 98
[2020-11-24 15:26:35,344 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 98
[2020-11-24 15:26:35,344 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 1248 states and 1454 transitions.
[2020-11-24 15:26:35,345 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 15:26:35,345 INFO  L728         BuchiCegarLoop]: Abstraction has 1248 states and 1454 transitions.
[2020-11-24 15:26:35,346 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 1248 states and 1454 transitions.
[2020-11-24 15:26:35,354 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 1248 to 1248.
[2020-11-24 15:26:35,354 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 1248 states.
[2020-11-24 15:26:35,355 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 1248 states to 1248 states and 1454 transitions.
[2020-11-24 15:26:35,356 INFO  L751         BuchiCegarLoop]: Abstraction has 1248 states and 1454 transitions.
[2020-11-24 15:26:35,356 INFO  L631         BuchiCegarLoop]: Abstraction has 1248 states and 1454 transitions.
[2020-11-24 15:26:35,356 INFO  L445         BuchiCegarLoop]: ======== Iteration 8============
[2020-11-24 15:26:35,356 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1248 states and 1454 transitions.
[2020-11-24 15:26:35,357 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 15:26:35,357 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 15:26:35,357 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 15:26:35,358 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 15:26:35,358 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L2]                 success_transfer_ALFA0 := false;
[L2]                 call_transfer_ALFA0 := false;
[L2]     CALL        call main();
[L2883]              assume null == 0;
[L2884]  CALL        call this := FreshRefGenerator__success();
[L1190]              havoc newRef;
[L1191]              assume Alloc[newRef] == false;
[L1192]              Alloc[newRef] := true;
[L1193]              assume newRef != null;
[L2884]  RET         call this := FreshRefGenerator__success();
[L2885]              assume now >= 0;
[L2886]              assume DType[this] == ALFA;
[L2887]              assume !revert && gas >= 0;
[L2888]  CALL        call CorralChoice_ALFA(this);
[L2786]              havoc msgsender_MSG;
[L2787]              havoc msgvalue_MSG;
[L2788]              havoc choice;
[L2789]              havoc sender_s1694;
[L2790]              havoc recipient_s1694;
[L2791]              havoc amount_s1694;
[L2792]              havoc __ret_0_transferFrom;
[L2793]              havoc owner_s284;
[L2794]              havoc spender_s284;
[L2795]              havoc __ret_0_allowance;
[L2796]              havoc recipient_s1452;
[L2797]              havoc amount_s1452;
[L2798]              havoc __ret_0_transfer;
[L2799]              havoc spender_s1713;
[L2800]              havoc amount_s1713;
[L2801]              havoc __ret_0_approve;
[L2802]              havoc account_s268;
[L2803]              havoc __ret_0_balanceOf;
[L2804]              havoc __ret_0_totalSupply;
[L2805]              havoc __ret_0_name;
[L2806]              havoc __ret_0_symbol;
[L2807]              havoc __ret_0_decimals;
[L2808]              havoc __ret_0_bank;
[L2809]              havoc __ret_0_price;
[L2810]              havoc n_s685;
[L2811]              havoc __ret_0_sblock;
[L2812]              havoc __ret_0_sdata;
[L2813]              havoc __ret_1_sdata;
[L2814]              havoc __ret_2_sdata;
[L2815]              havoc __ret_3_sdata;
[L2816]              havoc __ret_4_sdata;
[L2817]              havoc arg1893_s0;
[L2818]              havoc __ret_0_reff;
[L2819]              havoc arg1894_s0;
[L2820]              havoc __ret_0_prev;
[L2821]              havoc arg1895_s0;
[L2822]              havoc __ret_0_summ;
[L2823]              havoc spender_s1740;
[L2824]              havoc addedValue_s1740;
[L2825]              havoc __ret_0_increaseAllowance;
[L2826]              havoc spender_s1767;
[L2827]              havoc subtractedValue_s1767;
[L2828]              havoc __ret_0_decreaseAllowance;
[L2829]              havoc tmpNow;
[L2830]              havoc gas;
[L2831]              assume gas > 4000000 && gas <= 8000000;
[L2832]              tmpNow := now;
[L2833]              havoc now;
[L2834]              assume now > tmpNow;
[L2835]              assume msgsender_MSG != null;
[L2836]  COND FALSE  !(choice == 6)
[L2843]  COND FALSE  !(choice == 5)
[L2849]  COND TRUE   choice == 4
[L2850]              gas := gas - 21000;
[L2851]  COND TRUE   gas >= 0
[L2852]              assume amount_s1452 >= 0 && amount_s1452 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2853]              assume msgvalue_MSG == 0;
[L2854]  CALL        call __ret_0_transfer := transfer~address~uint256_ALFA(this, msgsender_MSG, msgvalue_MSG, recipient_s1452, amount_s1452);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == recipient_s1452 && amount_s1452 <= _balances_ALFA[this][msgsender_MSG]) && amount_s1452 >= 0) && amount_s1452 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ALFA[this][recipient_s1452] >= 0) && _balances_ALFA[this][recipient_s1452] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ALFA[this][msgsender_MSG] >= 0) && _balances_ALFA[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_ALFA0 := true;
[L2]                 call_transfer_ALFA0 := false;
[L2]                 revert := revert_hold;
[L364]               havoc __exception;
[L365]               revert := false;
[L366]   COND TRUE   __exception
[L367]               __tmp__Balance := Balance;
[L368]               __tmp__DType := DType;
[L369]               __tmp__Alloc := Alloc;
[L370]               __tmp__balance_ADDR := balance_ADDR;
[L371]               __tmp__M_Ref_int := M_Ref_int;
[L372]               __tmp__sum__balances0 := sum__balances0;
[L373]               __tmp__alloc__allowances_ALFA_lvl0 := alloc__allowances_ALFA_lvl0;
[L374]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L375]               __tmp__sum__allowances1 := sum__allowances1;
[L376]               __tmp__sum_reff2 := sum_reff2;
[L377]               __tmp__sum_prev3 := sum_prev3;
[L378]               __tmp__sum_summ4 := sum_summ4;
[L379]               __tmp__M_int_int := M_int_int;
[L380]               __tmp__sum := sum;
[L381]               __tmp__Length := Length;
[L382]               __tmp__now := now;
[L383]               __tmp___name_ALFA := _name_ALFA;
[L384]               __tmp___symbol_ALFA := _symbol_ALFA;
[L385]               __tmp___decimals_ALFA := _decimals_ALFA;
[L386]               __tmp___totalSupply_ALFA := _totalSupply_ALFA;
[L387]               __tmp___bank_ALFA := _bank_ALFA;
[L388]               __tmp___price_ALFA := _price_ALFA;
[L389]               __tmp___time_ALFA := _time_ALFA;
[L390]               __tmp___block_ALFA := _block_ALFA;
[L391]               __tmp__own_ALFA := own_ALFA;
[L392]               __tmp__adv_ALFA := adv_ALFA;
[L393]               __tmp__ins_ALFA := ins_ALFA;
[L394]               __tmp___balances_ALFA := _balances_ALFA;
[L395]               __tmp___allowances_ALFA := _allowances_ALFA;
[L396]               __tmp__reff_ALFA := reff_ALFA;
[L397]               __tmp__prev_ALFA := prev_ALFA;
[L398]               __tmp__summ_ALFA := summ_ALFA;
[L399]   CALL        call __ret_0_ := transfer~address~uint256_ALFA__fail(this, msgsender_MSG, msgvalue_MSG, recipient_s1452, amount_s1452);
[L1420]              __var_6 := this;
[L1421]  COND FALSE  !(recipient_s1452 != this)
[L1429]  CALL        call __var_7 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __tmp___balances_ALFA[this][msgsender_MSG], amount_s1452);
[L1223]  COND FALSE  !(!(b_s49 <= a_s49))
[L1227]              c_s49 := (a_s49 - b_s49) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1228]              __ret_0_ := c_s49;
[L1429]  RET         call __var_7 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __tmp___balances_ALFA[this][msgsender_MSG], amount_s1452);
[L1430]  COND FALSE  !(revert)
[L1433]              __tmp__sum__balances0[this] := __tmp__sum__balances0[this] - __tmp___balances_ALFA[this][msgsender_MSG];
[L1434]              __tmp___balances_ALFA[this][msgsender_MSG] := __var_7;
[L1435]              __tmp__sum__balances0[this] := __tmp__sum__balances0[this] + __tmp___balances_ALFA[this][msgsender_MSG];
[L1436]  CALL        call __var_8 := mul~uint256~uint256_SafeMath__fail(this, this, 0, amount_s1452, __tmp___price_ALFA[this]);
[L1247]  COND FALSE  !(a_s82 == 0)
[L1251]              c_s82 := nonlinearMul(a_s82, b_s82) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1252]  COND TRUE   !(nonlinearDiv(c_s82, a_s82) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 == b_s82)
[L1253]              revert := true;
[L1436]  RET         call __var_8 := mul~uint256~uint256_SafeMath__fail(this, this, 0, amount_s1452, __tmp___price_ALFA[this]);
[L1437]  COND TRUE   revert
[L399]   RET         call __ret_0_ := transfer~address~uint256_ALFA__fail(this, msgsender_MSG, msgvalue_MSG, recipient_s1452, amount_s1452);
[L400]               assume revert || gas < 0;
[L2854]  RET         call __ret_0_transfer := transfer~address~uint256_ALFA(this, msgsender_MSG, msgvalue_MSG, recipient_s1452, amount_s1452);
[L2888]  RET         call CorralChoice_ALFA(this);

Loop:
[L2888]        assume true;

[2020-11-24 15:26:35,359 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 15:26:35,359 INFO  L82        PathProgramCache]: Analyzing trace with hash 32617915, now seen corresponding path program 1 times
[2020-11-24 15:26:35,360 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 15:26:35,374 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 15:26:35,386 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 15:26:35,420 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 15:26:35,421 INFO  L82        PathProgramCache]: Analyzing trace with hash 10952, now seen corresponding path program 1 times
[2020-11-24 15:26:35,421 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 15:26:35,422 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 15:26:35,422 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 15:26:35,423 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 15:26:35,423 INFO  L82        PathProgramCache]: Analyzing trace with hash 1011166286, now seen corresponding path program 1 times
[2020-11-24 15:26:35,423 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 15:26:35,433 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 15:26:35,443 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 61 to 113
Garbage collection #1: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #2: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #3: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #4: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #5: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
[2020-11-24 15:26:35,701 WARN  L188               SmtUtils]: Spent 117.00 ms on a formula simplification that was a NOOP. DAG size: 233
Garbage collection #1: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #2: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #3: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #4: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #5: 1327 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 1327 to 2647
Garbage collection #6: 2647 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 2647 to 5281
[2020-11-24 15:26:35,939 WARN  L188               SmtUtils]: Spent 232.00 ms on a formula simplification that was a NOOP. DAG size: 226
[2020-11-24 15:26:36,760 WARN  L188               SmtUtils]: Spent 817.00 ms on a formula simplification. DAG size of input: 323 DAG size of output: 314
Garbage collection #1: 127 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 127 to 251
Garbage collection #2: 251 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 251 to 499
Garbage collection #3: 499 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 499 to 997
Garbage collection #4: 997 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 997 to 1993
Garbage collection #5: 1993 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 1993 to 3967
Garbage collection #6: 3967 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 3967 to 7933
Garbage collection #7: 7933 nodes / 0 free / 0.003s / 0.005s total
Resizing node table from 7933 to 15859
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 883 to 1759
Garbage collection #6: 1759 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 1759 to 3517
Garbage collection #7: 3517 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 3517 to 7027
[2020-11-24 15:26:37,125 WARN  L188               SmtUtils]: Spent 296.00 ms on a formula simplification. DAG size of input: 152 DAG size of output: 148
[2020-11-24 15:26:37,411 WARN  L188               SmtUtils]: Spent 284.00 ms on a formula simplification that was a NOOP. DAG size: 397
Garbage collection #1: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #2: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #3: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #4: 1237 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1237 to 2473
Garbage collection #5: 2473 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2473 to 4943
Garbage collection #6: 4943 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4943 to 9883
Garbage collection #7: 9883 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 9883 to 19763
[2020-11-24 15:26:37,999 WARN  L188               SmtUtils]: Spent 573.00 ms on a formula simplification that was a NOOP. DAG size: 323
[2020-11-24 15:26:39,201 WARN  L188               SmtUtils]: Spent 1.20 s on a formula simplification. DAG size of input: 352 DAG size of output: 343
Garbage collection #1: 127 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 127 to 251
Garbage collection #2: 251 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 251 to 499
Garbage collection #3: 499 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 499 to 997
Garbage collection #4: 997 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 997 to 1993
Garbage collection #5: 1993 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1993 to 3967
Garbage collection #6: 3967 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3967 to 7933
Garbage collection #7: 7933 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 7933 to 15859
Garbage collection #1: 71 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 71 to 139
Garbage collection #2: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #3: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #4: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #5: 1093 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1093 to 2179
Garbage collection #6: 2179 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2179 to 4357
Garbage collection #7: 4357 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4357 to 8713
Garbage collection #8: 8713 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 8713 to 17419
[2020-11-24 15:26:39,473 WARN  L188               SmtUtils]: Spent 253.00 ms on a formula simplification. DAG size of input: 190 DAG size of output: 186
[2020-11-24 15:26:39,774 WARN  L188               SmtUtils]: Spent 299.00 ms on a formula simplification that was a NOOP. DAG size: 424
Garbage collection #1: 167 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 167 to 331
Garbage collection #2: 331 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 331 to 661
Garbage collection #3: 661 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 661 to 1321
Garbage collection #4: 1321 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1321 to 2633
Garbage collection #5: 2633 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2633 to 5261
Garbage collection #6: 5261 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 5261 to 10513
Garbage collection #7: 10513 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 10513 to 21023
[2020-11-24 15:26:40,068 WARN  L188               SmtUtils]: Spent 285.00 ms on a formula simplification that was a NOOP. DAG size: 323
[2020-11-24 15:26:40,422 WARN  L188               SmtUtils]: Spent 352.00 ms on a formula simplification. DAG size of input: 343 DAG size of output: 338
Garbage collection #1: 127 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 127 to 251
Garbage collection #2: 251 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 251 to 499
Garbage collection #3: 499 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 499 to 997
Garbage collection #4: 997 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 997 to 1993
Garbage collection #5: 1993 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1993 to 3967
Garbage collection #6: 3967 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3967 to 7933
Garbage collection #1: 71 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 71 to 139
Garbage collection #2: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #3: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #4: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #5: 1093 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1093 to 2179
Garbage collection #6: 2179 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2179 to 4357
[2020-11-24 15:26:40,641 WARN  L188               SmtUtils]: Spent 130.00 ms on a formula simplification that was a NOOP. DAG size: 322
Garbage collection #1: 127 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 127 to 251
Garbage collection #2: 251 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 251 to 499
Garbage collection #3: 499 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 499 to 997
Garbage collection #4: 997 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 997 to 1993
Garbage collection #5: 1993 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1993 to 3967
Garbage collection #6: 3967 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3967 to 7933
Garbage collection #1: 67 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 67 to 131
Garbage collection #2: 131 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 131 to 257
Garbage collection #3: 257 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 257 to 509
Garbage collection #4: 509 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 509 to 1013
Garbage collection #5: 1013 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1013 to 2017
Garbage collection #6: 2017 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2017 to 4027
[2020-11-24 15:26:40,988 WARN  L188               SmtUtils]: Spent 289.00 ms on a formula simplification. DAG size of input: 324 DAG size of output: 323
Garbage collection #1: 127 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 127 to 251
Garbage collection #2: 251 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 251 to 499
Garbage collection #3: 499 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 499 to 997
Garbage collection #4: 997 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 997 to 1993
Garbage collection #5: 1993 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1993 to 3967
Garbage collection #6: 3967 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3967 to 7933
Garbage collection #1: 127 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 127 to 251
Garbage collection #2: 251 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 251 to 499
Garbage collection #3: 499 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 499 to 997
Garbage collection #4: 997 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 997 to 1993
Garbage collection #5: 1993 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1993 to 3967
Garbage collection #6: 3967 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3967 to 7933
[2020-11-24 15:26:41,111 WARN  L188               SmtUtils]: Spent 120.00 ms on a formula simplification that was a NOOP. DAG size: 319
[2020-11-24 15:26:41,123 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 15:26:41,128 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 24.11 03:26:41 BasicIcfg
[2020-11-24 15:26:41,128 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-24 15:26:41,128 INFO  L168              Benchmark]: Toolchain (without parser) took 9651.01 ms. Allocated memory was 1.0 GB in the beginning and 1.8 GB in the end (delta: 774.4 MB). Free memory was 945.9 MB in the beginning and 1.4 GB in the end (delta: -487.5 MB). Peak memory consumption was 945.9 MB. Max. memory is 15.3 GB.
[2020-11-24 15:26:41,128 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.16 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-24 15:26:41,129 INFO  L168              Benchmark]: Boogie Preprocessor took 75.05 ms. Allocated memory is still 1.0 GB. Free memory was 945.9 MB in the beginning and 940.6 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-24 15:26:41,129 INFO  L168              Benchmark]: UtopiaSpecLang took 53.63 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 929.8 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
[2020-11-24 15:26:41,129 INFO  L168              Benchmark]: Boogie Printer took 18.84 ms. Allocated memory is still 1.0 GB. Free memory is still 929.8 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-24 15:26:41,129 INFO  L168              Benchmark]: RCFGBuilder took 563.01 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 865.4 MB in the end (delta: 64.4 MB). Peak memory consumption was 64.4 MB. Max. memory is 15.3 GB.
[2020-11-24 15:26:41,130 INFO  L168              Benchmark]: UtopiaLTL2Aut took 40.71 ms. Allocated memory is still 1.0 GB. Free memory was 865.4 MB in the beginning and 861.8 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
[2020-11-24 15:26:41,131 INFO  L168              Benchmark]: BÃ¼chi Program Product took 837.86 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 57.7 MB). Free memory was 861.8 MB in the beginning and 859.9 MB in the end (delta: 2.0 MB). Peak memory consumption was 148.4 MB. Max. memory is 15.3 GB.
[2020-11-24 15:26:41,132 INFO  L168              Benchmark]: BlockEncodingV2 took 92.29 ms. Allocated memory is still 1.1 GB. Free memory was 859.9 MB in the beginning and 822.5 MB in the end (delta: 37.4 MB). Peak memory consumption was 37.4 MB. Max. memory is 15.3 GB.
[2020-11-24 15:26:41,133 INFO  L168              Benchmark]: BuchiAutomizer took 7966.91 ms. Allocated memory was 1.1 GB in the beginning and 1.8 GB in the end (delta: 716.7 MB). Free memory was 822.5 MB in the beginning and 1.4 GB in the end (delta: -611.0 MB). Peak memory consumption was 764.8 MB. Max. memory is 15.3 GB.
[2020-11-24 15:26:41,139 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    2944 locations, 5296 edges
  - StatisticsResult: Encoded RCFG
    2916 locations, 5226 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.16 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 75.05 ms. Allocated memory is still 1.0 GB. Free memory was 945.9 MB in the beginning and 940.6 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 53.63 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 929.8 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 18.84 ms. Allocated memory is still 1.0 GB. Free memory is still 929.8 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * RCFGBuilder took 563.01 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 865.4 MB in the end (delta: 64.4 MB). Peak memory consumption was 64.4 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 40.71 ms. Allocated memory is still 1.0 GB. Free memory was 865.4 MB in the beginning and 861.8 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 837.86 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 57.7 MB). Free memory was 861.8 MB in the beginning and 859.9 MB in the end (delta: 2.0 MB). Peak memory consumption was 148.4 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 92.29 ms. Allocated memory is still 1.1 GB. Free memory was 859.9 MB in the beginning and 822.5 MB in the end (delta: 37.4 MB). Peak memory consumption was 37.4 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 7966.91 ms. Allocated memory was 1.1 GB in the beginning and 1.8 GB in the end (delta: 716.7 MB). Free memory was 822.5 MB in the beginning and 1.4 GB in the end (delta: -611.0 MB). Peak memory consumption was 764.8 MB. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    1169 locations, 1658 edges
  - StatisticsResult: BuchiProgram size
    2944 locations, 5296 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 7 terminating modules (7 trivial, 0 deterministic, 0 nondeterministic) and one nonterminating remainder module.7 modules have a trivial ranking function, the largest among these consists of 7 locations. The remainder module has 1248 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 7.9s and 8 iterations.  TraceHistogramMax:1. Analysis of lassos took 6.1s. Construction of modules took 0.7s. BÃ¼chi inclusion checks took 0.5s. Highest rank in rank-based complementation 0. Minimization of det autom 7. Minimization of nondet autom 0. Automata minimization 0.1s AutomataMinimizationTime, 7 MinimizatonAttempts, 233 StatesRemovedByMinimization, 5 NontrivialMinimizations. Non-live state removal took 0.1s Buchi closure took 0.0s. Biggest automaton had 1255 states and ocurred in iteration 4.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 11305 SDtfs, 6574 SDslu, 21769 SDs, 0 SdLazy, 5430 SolverSat, 2033 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 0.7s Time	LassoAnalysisResults: nont1 unkn0 SFLI0 SFLT0 conc0 concLT0 SILN0 SILU7 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - TransactionCounterexample: Violation of LTL property LTL
    Found an infinite, lasso-shaped execution that violates the LTL property LTL.
Stem:
ALFA(115792089237316195423570985008687907853269984665640564039457584007913129639944).transfer~address~uint256.gas(3979001)({from : 115792089237316195423570985008687907853269984665640564039457584007913129639944, recipient : 115792089237316195423570985008687907853269984665640564039457584007913129639944, amount : 1});
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == recipient_s1452 && amount_s1452 <= _balances_ALFA[this][msgsender_MSG]) && amount_s1452 >= 0) && amount_s1452 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ALFA[this][recipient_s1452] >= 0) && _balances_ALFA[this][recipient_s1452] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ALFA[this][msgsender_MSG] >= 0) && _balances_ALFA[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_ALFA0 := true;
[L2]                 call_transfer_ALFA0 := false;
[L2]                 revert := revert_hold;
[L364]               havoc __exception;
[L365]               revert := false;
[L366]   COND TRUE   __exception
[L367]               __tmp__Balance := Balance;
[L368]               __tmp__DType := DType;
[L369]               __tmp__Alloc := Alloc;
[L370]               __tmp__balance_ADDR := balance_ADDR;
[L371]               __tmp__M_Ref_int := M_Ref_int;
[L372]               __tmp__sum__balances0 := sum__balances0;
[L373]               __tmp__alloc__allowances_ALFA_lvl0 := alloc__allowances_ALFA_lvl0;
[L374]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L375]               __tmp__sum__allowances1 := sum__allowances1;
[L376]               __tmp__sum_reff2 := sum_reff2;
[L377]               __tmp__sum_prev3 := sum_prev3;
[L378]               __tmp__sum_summ4 := sum_summ4;
[L379]               __tmp__M_int_int := M_int_int;
[L380]               __tmp__sum := sum;
[L381]               __tmp__Length := Length;
[L382]               __tmp__now := now;
[L383]               __tmp___name_ALFA := _name_ALFA;
[L384]               __tmp___symbol_ALFA := _symbol_ALFA;
[L385]               __tmp___decimals_ALFA := _decimals_ALFA;
[L386]               __tmp___totalSupply_ALFA := _totalSupply_ALFA;
[L387]               __tmp___bank_ALFA := _bank_ALFA;
[L388]               __tmp___price_ALFA := _price_ALFA;
[L389]               __tmp___time_ALFA := _time_ALFA;
[L390]               __tmp___block_ALFA := _block_ALFA;
[L391]               __tmp__own_ALFA := own_ALFA;
[L392]               __tmp__adv_ALFA := adv_ALFA;
[L393]               __tmp__ins_ALFA := ins_ALFA;
[L394]               __tmp___balances_ALFA := _balances_ALFA;
[L395]               __tmp___allowances_ALFA := _allowances_ALFA;
[L396]               __tmp__reff_ALFA := reff_ALFA;
[L397]               __tmp__prev_ALFA := prev_ALFA;
[L398]               __tmp__summ_ALFA := summ_ALFA;
[L399]   CALL        call __ret_0_ := transfer~address~uint256_ALFA__fail(this, msgsender_MSG, msgvalue_MSG, recipient_s1452, amount_s1452);
[L1420]              __var_6 := this;
[L1421]  COND FALSE  !(recipient_s1452 != this)
[L1429]  CALL        call __var_7 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __tmp___balances_ALFA[this][msgsender_MSG], amount_s1452);
[L1223]  COND FALSE  !(!(b_s49 <= a_s49))
[L1227]              c_s49 := (a_s49 - b_s49) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1228]              __ret_0_ := c_s49;
[L1429]  RET         call __var_7 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __tmp___balances_ALFA[this][msgsender_MSG], amount_s1452);
[L1430]  COND FALSE  !(revert)
[L1433]              __tmp__sum__balances0[this] := __tmp__sum__balances0[this] - __tmp___balances_ALFA[this][msgsender_MSG];
[L1434]              __tmp___balances_ALFA[this][msgsender_MSG] := __var_7;
[L1435]              __tmp__sum__balances0[this] := __tmp__sum__balances0[this] + __tmp___balances_ALFA[this][msgsender_MSG];
[L1436]  CALL        call __var_8 := mul~uint256~uint256_SafeMath__fail(this, this, 0, amount_s1452, __tmp___price_ALFA[this]);
[L1247]  COND FALSE  !(a_s82 == 0)
[L1251]              c_s82 := nonlinearMul(a_s82, b_s82) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1252]  COND TRUE   !(nonlinearDiv(c_s82, a_s82) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 == b_s82)
[L1253]              revert := true;
[L1436]  RET         call __var_8 := mul~uint256~uint256_SafeMath__fail(this, this, 0, amount_s1452, __tmp___price_ALFA[this]);
[L1437]  COND TRUE   revert
[L399]   RET         call __ret_0_ := transfer~address~uint256_ALFA__fail(this, msgsender_MSG, msgvalue_MSG, recipient_s1452, amount_s1452);
[L400]               assume revert || gas < 0;
[L2854]  RET         call __ret_0_transfer := transfer~address~uint256_ALFA(this, msgsender_MSG, msgvalue_MSG, recipient_s1452, amount_s1452);

Loop:

End of lasso representation.
RESULT: Ultimate could not prove your program: Toolchain returned no result.
Received shutdown request...
