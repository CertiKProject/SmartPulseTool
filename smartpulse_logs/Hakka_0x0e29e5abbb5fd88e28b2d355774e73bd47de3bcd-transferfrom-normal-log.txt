This is Ultimate 0.1.24-f1553f5-m
[2020-11-24 19:15:18,734 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-24 19:15:18,736 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-24 19:15:18,750 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-24 19:15:18,751 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-24 19:15:18,751 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-24 19:15:18,752 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-24 19:15:18,754 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-24 19:15:18,756 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-24 19:15:18,757 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-24 19:15:18,757 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-24 19:15:18,758 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-24 19:15:18,758 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-24 19:15:18,759 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-24 19:15:18,760 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-24 19:15:18,761 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-24 19:15:18,762 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-24 19:15:18,763 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-24 19:15:18,765 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-24 19:15:18,766 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-24 19:15:18,767 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-24 19:15:18,768 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-24 19:15:18,769 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-24 19:15:18,769 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-24 19:15:18,770 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-24 19:15:18,770 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-24 19:15:18,771 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-24 19:15:18,771 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-24 19:15:18,772 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-24 19:15:18,772 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-24 19:15:18,772 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-24 19:15:18,773 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-24 19:15:18,774 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-24 19:15:18,774 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-24 19:15:18,775 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-24 19:15:18,775 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-24 19:15:18,776 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-24 19:15:18,776 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-24 19:15:18,776 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-24 19:15:18,777 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-24 19:15:18,777 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-24 19:15:18,777 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-24 19:15:18,785 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-24 19:15:18,786 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-24 19:15:18,787 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-24 19:15:18,787 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-24 19:15:18,787 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-24 19:15:18,787 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-24 19:15:18,787 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-24 19:15:18,788 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-24 19:15:18,788 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-24 19:15:18,788 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-24 19:15:18,788 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-24 19:15:18,788 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-24 19:15:18,788 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-24 19:15:18,788 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-24 19:15:18,788 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-24 19:15:18,789 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-24 19:15:18,789 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-24 19:15:18,789 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-24 19:15:18,789 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-24 19:15:18,789 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-24 19:15:18,789 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-24 19:15:18,789 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-24 19:15:18,789 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-24 19:15:18,790 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-24 19:15:18,790 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-24 19:15:18,790 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-24 19:15:18,813 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-24 19:15:18,826 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-24 19:15:18,828 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-24 19:15:18,829 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-24 19:15:18,830 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-24 19:15:18,830 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/Hakka_0x0e29e5abbb5fd88e28b2d355774e73bd47de3bcd_transferfrom-normal.bpl
[2020-11-24 19:15:18,831 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/Hakka_0x0e29e5abbb5fd88e28b2d355774e73bd47de3bcd_transferfrom-normal.bpl'
[2020-11-24 19:15:18,887 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-24 19:15:18,888 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-24 19:15:18,888 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-24 19:15:18,888 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-24 19:15:18,888 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-24 19:15:18,905 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "Hakka_0x0e29e5abbb5fd88e28b2d355774e73bd47de3bcd_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 07:15:18" (1/1) ...
[2020-11-24 19:15:18,906 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "Hakka_0x0e29e5abbb5fd88e28b2d355774e73bd47de3bcd_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 07:15:18" (1/1) ...
[2020-11-24 19:15:18,926 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "Hakka_0x0e29e5abbb5fd88e28b2d355774e73bd47de3bcd_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 07:15:18" (1/1) ...
[2020-11-24 19:15:18,927 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "Hakka_0x0e29e5abbb5fd88e28b2d355774e73bd47de3bcd_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 07:15:18" (1/1) ...
[2020-11-24 19:15:18,941 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "Hakka_0x0e29e5abbb5fd88e28b2d355774e73bd47de3bcd_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 07:15:18" (1/1) ...
[2020-11-24 19:15:18,948 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "Hakka_0x0e29e5abbb5fd88e28b2d355774e73bd47de3bcd_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 07:15:18" (1/1) ...
[2020-11-24 19:15:18,953 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "Hakka_0x0e29e5abbb5fd88e28b2d355774e73bd47de3bcd_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 07:15:18" (1/1) ...
[2020-11-24 19:15:18,960 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-24 19:15:18,961 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-24 19:15:18,961 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-24 19:15:18,965 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-24 19:15:18,969 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "Hakka_0x0e29e5abbb5fd88e28b2d355774e73bd47de3bcd_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 07:15:18" (1/1) ...
[2020-11-24 19:15:18,984 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(Hakka.transferFrom(from, to, value), p1 != from && p1 != to && (p2 != from || p3 != msg.sender) && from != to && value <= balanceOf_Hakka[this][from] && value <= allowance_Hakka[this][from][msg.sender] && balanceOf_Hakka[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_Hakka[this][to] >= 0 && balanceOf_Hakka[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_Hakka[this][from] >= 0 &&  balanceOf_Hakka[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && allowance_Hakka[this][from][msg.sender] >= 0 && allowance_Hakka[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(Hakka.transferFrom(from, to, value), return == true && balanceOf_Hakka[this][from] == old(balanceOf_Hakka[this][from]) - value && balanceOf_Hakka[this][to] == old(balanceOf_Hakka[this][to]) + value && allowance_Hakka[this][from][msg.sender] == old(allowance_Hakka[this][from][msg.sender]) - value && totalSupply_Hakka[this] == old(totalSupply_Hakka[this]) && balanceOf_Hakka[this][p1] == old(balanceOf_Hakka[this][p1]) && allowance_Hakka[this][p2][p3] == old(allowance_Hakka[this][p2][p3]) && nonces_Hakka[this] == old(nonces_Hakka[this]) && DOMAIN_SEPARATOR_Hakka[this] == old(DOMAIN_SEPARATOR_Hakka[this]) && owner_Ownable[this] == old(owner_Ownable[this]))))
[2020-11-24 19:15:18,989 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(Hakka.transferFrom(from, to, value), p1 != from && p1 != to && (p2 != from || p3 != msg.sender) && from != to && value <= balanceOf_Hakka[this][from] && value <= allowance_Hakka[this][from][msg.sender] && balanceOf_Hakka[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_Hakka[this][to] >= 0 && balanceOf_Hakka[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_Hakka[this][from] >= 0 &&  balanceOf_Hakka[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && allowance_Hakka[this][from][msg.sender] >= 0 && allowance_Hakka[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(Hakka.transferFrom(from, to, value), return == true && balanceOf_Hakka[this][from] == old(balanceOf_Hakka[this][from]) - value && balanceOf_Hakka[this][to] == old(balanceOf_Hakka[this][to]) + value && allowance_Hakka[this][from][msg.sender] == old(allowance_Hakka[this][from][msg.sender]) - value && totalSupply_Hakka[this] == old(totalSupply_Hakka[this]) && balanceOf_Hakka[this][p1] == old(balanceOf_Hakka[this][p1]) && allowance_Hakka[this][p2][p3] == old(allowance_Hakka[this][p2][p3]) && nonces_Hakka[this] == old(nonces_Hakka[this]) && DOMAIN_SEPARATOR_Hakka[this] == old(DOMAIN_SEPARATOR_Hakka[this]) && owner_Ownable[this] == old(owner_Ownable[this]))))
[2020-11-24 19:15:18,997 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(Hakka.transferFrom(from, to, value), p1 != from && p1 != to && (p2 != from || p3 != msg.sender) && from != to && value <= balanceOf_Hakka[this][from] && value <= allowance_Hakka[this][from][msg.sender] && balanceOf_Hakka[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_Hakka[this][to] >= 0 && balanceOf_Hakka[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_Hakka[this][from] >= 0 &&  balanceOf_Hakka[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && allowance_Hakka[this][from][msg.sender] >= 0 && allowance_Hakka[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(Hakka.transferFrom(from, to, value), return == true && balanceOf_Hakka[this][from] == old(balanceOf_Hakka[this][from]) - value && balanceOf_Hakka[this][to] == old(balanceOf_Hakka[this][to]) + value && allowance_Hakka[this][from][msg.sender] == old(allowance_Hakka[this][from][msg.sender]) - value && totalSupply_Hakka[this] == old(totalSupply_Hakka[this]) && balanceOf_Hakka[this][p1] == old(balanceOf_Hakka[this][p1]) && allowance_Hakka[this][p2][p3] == old(allowance_Hakka[this][p2][p3]) && nonces_Hakka[this] == old(nonces_Hakka[this]) && DOMAIN_SEPARATOR_Hakka[this] == old(DOMAIN_SEPARATOR_Hakka[this]) && owner_Ownable[this] == old(owner_Ownable[this]))))
[2020-11-24 19:15:19,003 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( ( ( ( ( ( ( p1!=from_s295 && p1!=to_s295 ) && ( p2!=from_s295 || p3!=msg.sender ) ) && from_s295!=to_s295 ) && amount_s295<=balanceOf_Hakka[this][from_s295] ) && amount_s295<=allowance_Hakka[this][from_s295][msg.sender] ) && ( balanceOf_Hakka[this][to_s295] + amount_s295 )<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && amount_s295>=0 ) && amount_s295<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && balanceOf_Hakka[this][to_s295]>=0 ) && balanceOf_Hakka[this][to_s295]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && balanceOf_Hakka[this][from_s295]>=0 ) && balanceOf_Hakka[this][from_s295]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && allowance_Hakka[this][from_s295][msg.sender]>=0 ) && allowance_Hakka[this][from_s295][msg.sender]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPNEQ,IdentifierExpression[p1,GLOBAL],IdentifierExpression[from_s295,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Hakka>]],BinaryExpression[COMPNEQ,IdentifierExpression[p1,GLOBAL],IdentifierExpression[to_s295,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Hakka>]]],BinaryExpression[LOGICOR,BinaryExpression[COMPNEQ,IdentifierExpression[p2,GLOBAL],IdentifierExpression[from_s295,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Hakka>]],BinaryExpression[COMPNEQ,IdentifierExpression[p3,GLOBAL],IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Hakka>]]]],BinaryExpression[COMPNEQ,IdentifierExpression[from_s295,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Hakka>],IdentifierExpression[to_s295,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Hakka>]]],BinaryExpression[COMPLEQ,IdentifierExpression[amount_s295,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Hakka>],ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_Hakka,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Hakka>]]],[IdentifierExpression[from_s295,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Hakka>]]]]],BinaryExpression[COMPLEQ,IdentifierExpression[amount_s295,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Hakka>],ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowance_Hakka,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Hakka>]]],[IdentifierExpression[from_s295,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Hakka>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Hakka>]]]]],BinaryExpression[COMPLT,BinaryExpression[ARITHPLUS,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_Hakka,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Hakka>]]],[IdentifierExpression[to_s295,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Hakka>]]],IdentifierExpression[amount_s295,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Hakka>]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,IdentifierExpression[amount_s295,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Hakka>],IntegerLiteral[0]]],BinaryExpression[COMPLT,IdentifierExpression[amount_s295,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Hakka>],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_Hakka,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Hakka>]]],[IdentifierExpression[to_s295,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Hakka>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_Hakka,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Hakka>]]],[IdentifierExpression[to_s295,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Hakka>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_Hakka,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Hakka>]]],[IdentifierExpression[from_s295,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Hakka>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_Hakka,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Hakka>]]],[IdentifierExpression[from_s295,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Hakka>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowance_Hakka,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Hakka>]]],[IdentifierExpression[from_s295,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Hakka>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Hakka>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowance_Hakka,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Hakka>]]],[IdentifierExpression[from_s295,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Hakka>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Hakka>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]]
[2020-11-24 19:15:19,006 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( ( __ret_0_==true && balanceOf_Hakka[this][from_s295]==( ( old(balanceOf_Hakka[this][from_s295]) ) - amount_s295 ) ) && balanceOf_Hakka[this][to_s295]==( ( old(balanceOf_Hakka[this][to_s295]) ) + amount_s295 ) ) && allowance_Hakka[this][from_s295][msg.sender]==( ( old(allowance_Hakka[this][from_s295][msg.sender]) ) - amount_s295 ) ) && totalSupply_Hakka[this]==( old(totalSupply_Hakka[this]) ) ) && balanceOf_Hakka[this][p1]==( old(balanceOf_Hakka[this][p1]) ) ) && allowance_Hakka[this][p2][p3]==( old(allowance_Hakka[this][p2][p3]) ) ) && nonces_Hakka[this]==( old(nonces_Hakka[this]) ) ) && DOMAIN_SEPARATOR_Hakka[this]==( old(DOMAIN_SEPARATOR_Hakka[this]) ) ) && owner_Ownable[this]==( old(owner_Ownable[this]) ) ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[__ret_0_,<IMPLEMENTATION_OUTPARAM,transferFrom~address~address~uint256_Hakka>],BooleanLiteral[true]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_Hakka,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Hakka>]]],[IdentifierExpression[from_s295,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Hakka>]]],BinaryExpression[ARITHMINUS,UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_Hakka,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Hakka>]]],[IdentifierExpression[from_s295,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Hakka>]]]],IdentifierExpression[amount_s295,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Hakka>]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_Hakka,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Hakka>]]],[IdentifierExpression[to_s295,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Hakka>]]],BinaryExpression[ARITHPLUS,UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_Hakka,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Hakka>]]],[IdentifierExpression[to_s295,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Hakka>]]]],IdentifierExpression[amount_s295,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Hakka>]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowance_Hakka,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Hakka>]]],[IdentifierExpression[from_s295,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Hakka>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Hakka>]]],BinaryExpression[ARITHMINUS,UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowance_Hakka,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Hakka>]]],[IdentifierExpression[from_s295,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Hakka>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Hakka>]]]],IdentifierExpression[amount_s295,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Hakka>]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[totalSupply_Hakka,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Hakka>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[totalSupply_Hakka,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Hakka>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_Hakka,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Hakka>]]],[IdentifierExpression[p1,GLOBAL]]],UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_Hakka,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Hakka>]]],[IdentifierExpression[p1,GLOBAL]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowance_Hakka,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Hakka>]]],[IdentifierExpression[p2,GLOBAL]]],[IdentifierExpression[p3,GLOBAL]]],UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowance_Hakka,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Hakka>]]],[IdentifierExpression[p2,GLOBAL]]],[IdentifierExpression[p3,GLOBAL]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[nonces_Hakka,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Hakka>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[nonces_Hakka,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Hakka>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[DOMAIN_SEPARATOR_Hakka,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Hakka>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[DOMAIN_SEPARATOR_Hakka,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Hakka>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[owner_Ownable,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Hakka>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[owner_Ownable,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Hakka>]]]]]]
[2020-11-24 19:15:19,009 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(Hakka.transferFrom(from, to, value), p1 != from && p1 != to && (p2 != from || p3 != msg.sender) && from != to && value <= balanceOf_Hakka[this][from] && value <= allowance_Hakka[this][from][msg.sender] && balanceOf_Hakka[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_Hakka[this][to] >= 0 && balanceOf_Hakka[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_Hakka[this][from] >= 0 &&  balanceOf_Hakka[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && allowance_Hakka[this][from][msg.sender] >= 0 && allowance_Hakka[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(Hakka.transferFrom(from, to, value), return == true && balanceOf_Hakka[this][from] == old(balanceOf_Hakka[this][from]) - value && balanceOf_Hakka[this][to] == old(balanceOf_Hakka[this][to]) + value && allowance_Hakka[this][from][msg.sender] == old(allowance_Hakka[this][from][msg.sender]) - value && totalSupply_Hakka[this] == old(totalSupply_Hakka[this]) && balanceOf_Hakka[this][p1] == old(balanceOf_Hakka[this][p1]) && allowance_Hakka[this][p2][p3] == old(allowance_Hakka[this][p2][p3]) && nonces_Hakka[this] == old(nonces_Hakka[this]) && DOMAIN_SEPARATOR_Hakka[this] == old(DOMAIN_SEPARATOR_Hakka[this]) && owner_Ownable[this] == old(owner_Ownable[this]))))
[2020-11-24 19:15:19,009 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_transferFrom_Hakka0) ==> ( <>AP(success_transferFrom_Hakka0) ) ) )
Executed UtopiaSpecLang
[2020-11-24 19:15:19,015 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 07:15:19 PropertyContainer
[2020-11-24 19:15:19,015 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-24 19:15:19,015 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-24 19:15:19,015 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-24 19:15:19,015 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-24 19:15:19,016 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hakka_0x0e29e5abbb5fd88e28b2d355774e73bd47de3bcd_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 07:15:18" (1/2) ...
[2020-11-24 19:15:19,016 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-24 19:15:19,017 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-24 19:15:19,024 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 07:15:19" (2/2) ...
[2020-11-24 19:15:19,024 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-24 19:15:19,024 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-24 19:15:19,025 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-24 19:15:19,025 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-24 19:15:19,025 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hakka_0x0e29e5abbb5fd88e28b2d355774e73bd47de3bcd_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 07:15:18" (1/2) ...
[2020-11-24 19:15:19,082 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-24 19:15:19,082 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_Hakka__success
[2020-11-24 19:15:19,082 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_Hakka__success
[2020-11-24 19:15:19,082 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_Hakka
[2020-11-24 19:15:19,082 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_Hakka
[2020-11-24 19:15:19,082 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_Hakka
[2020-11-24 19:15:19,082 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_Hakka
[2020-11-24 19:15:19,082 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_Hakka
[2020-11-24 19:15:19,082 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_Hakka
[2020-11-24 19:15:19,082 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_Hakka
[2020-11-24 19:15:19,083 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_Hakka
[2020-11-24 19:15:19,083 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_Hakka
[2020-11-24 19:15:19,083 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_Hakka
[2020-11-24 19:15:19,083 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_Hakka
[2020-11-24 19:15:19,083 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_Hakka
[2020-11-24 19:15:19,083 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-24 19:15:19,083 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-24 19:15:19,083 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-24 19:15:19,083 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__success
[2020-11-24 19:15:19,083 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_Ownable
[2020-11-24 19:15:19,083 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_Ownable
[2020-11-24 19:15:19,084 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ApproveAndCallFallBack
[2020-11-24 19:15:19,084 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ApproveAndCallFallBack
[2020-11-24 19:15:19,084 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_Hakka
[2020-11-24 19:15:19,084 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-24 19:15:19,084 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-24 19:15:19,084 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_Hakka__fail
[2020-11-24 19:15:19,084 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_Hakka__fail
[2020-11-24 19:15:19,084 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_Hakka__success
[2020-11-24 19:15:19,084 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_Hakka__fail
[2020-11-24 19:15:19,084 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_Hakka__success
[2020-11-24 19:15:19,085 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_Hakka__fail
[2020-11-24 19:15:19,085 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_Hakka__success
[2020-11-24 19:15:19,085 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_Hakka__fail
[2020-11-24 19:15:19,085 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_Hakka__success
[2020-11-24 19:15:19,085 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_Hakka__fail
[2020-11-24 19:15:19,085 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_Hakka__success
[2020-11-24 19:15:19,085 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_Hakka__fail
[2020-11-24 19:15:19,085 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_Hakka__success
[2020-11-24 19:15:19,085 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_Hakka__fail
[2020-11-24 19:15:19,085 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-24 19:15:19,086 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-24 19:15:19,086 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-24 19:15:19,086 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__fail
[2020-11-24 19:15:19,086 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-24 19:15:19,086 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-24 19:15:19,086 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_Hakka__fail
[2020-11-24 19:15:19,086 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_Hakka__success
[2020-11-24 19:15:19,086 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_Hakka__fail
[2020-11-24 19:15:19,086 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_Hakka__success
[2020-11-24 19:15:19,086 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_Hakka__fail
[2020-11-24 19:15:19,086 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_Hakka__success
[2020-11-24 19:15:19,086 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_Hakka__fail
[2020-11-24 19:15:19,087 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_Hakka__success
[2020-11-24 19:15:19,087 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_Hakka__fail
[2020-11-24 19:15:19,087 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_Hakka__success
[2020-11-24 19:15:19,087 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_Hakka__fail
[2020-11-24 19:15:19,087 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_Hakka__success
[2020-11-24 19:15:19,087 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_Hakka__fail
[2020-11-24 19:15:19,087 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_Hakka__success
[2020-11-24 19:15:19,087 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_Hakka__fail
[2020-11-24 19:15:19,087 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_Hakka__success
[2020-11-24 19:15:19,087 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-24 19:15:19,087 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-24 19:15:19,087 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-24 19:15:19,088 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-24 19:15:19,088 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-24 19:15:19,088 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-24 19:15:19,088 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__fail
[2020-11-24 19:15:19,088 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__success
[2020-11-24 19:15:19,088 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_Ownable
[2020-11-24 19:15:19,088 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_Ownable
[2020-11-24 19:15:19,088 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ApproveAndCallFallBack
[2020-11-24 19:15:19,088 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ApproveAndCallFallBack
[2020-11-24 19:15:19,088 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_Hakka
[2020-11-24 19:15:19,088 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-24 19:15:19,089 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-24 19:15:19,089 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-24 19:15:19,268 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 19:15:19,374 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 19:15:19,374 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 19:15:19,375 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 19:15:19,559 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-24 19:15:19,559 INFO  L286             CfgBuilder]: Removed 3 assue(true) statements.
[2020-11-24 19:15:19,561 INFO  L202        PluginConnector]: Adding new model Hakka_0x0e29e5abbb5fd88e28b2d355774e73bd47de3bcd_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 07:15:19 BoogieIcfgContainer
[2020-11-24 19:15:19,561 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 07:15:19" (2/2) ...
[2020-11-24 19:15:19,561 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-24 19:15:19,561 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@3e3f724f and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 07:15:19, skipping insertion in model container
[2020-11-24 19:15:19,562 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-24 19:15:19,562 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-24 19:15:19,562 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-24 19:15:19,563 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-24 19:15:19,563 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hakka_0x0e29e5abbb5fd88e28b2d355774e73bd47de3bcd_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 07:15:18" (1/3) ...
[2020-11-24 19:15:19,564 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@4b0d98fc and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 07:15:19, skipping insertion in model container
[2020-11-24 19:15:19,564 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 07:15:19" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-24 19:15:19,606 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 07:15:19 NWAContainer
[2020-11-24 19:15:19,606 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-24 19:15:19,606 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-24 19:15:19,606 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-24 19:15:19,607 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-24 19:15:19,608 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hakka_0x0e29e5abbb5fd88e28b2d355774e73bd47de3bcd_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 07:15:19" (3/4) ...
[2020-11-24 19:15:19,609 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@4e45b934 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 07:15:19, skipping insertion in model container
[2020-11-24 19:15:19,609 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 07:15:19" (4/4) ...
[2020-11-24 19:15:19,612 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-24 19:15:19,615 INFO  L110   BuchiProductObserver]: Initial RCFG 526 locations, 625 edges
[2020-11-24 19:15:19,616 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-24 19:15:19,625 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-24 19:15:20,426 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-24 19:15:20,428 INFO  L110   BuchiProductObserver]: BuchiProgram size 1206 locations, 2001 edges
[2020-11-24 19:15:20,429 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 07:15:20 BoogieIcfgContainer
[2020-11-24 19:15:20,429 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-24 19:15:20,429 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-24 19:15:20,429 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-24 19:15:20,431 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-24 19:15:20,432 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 07:15:20" (1/1) ...
[2020-11-24 19:15:20,464 INFO  L313           BlockEncoder]: Initial Icfg 1206 locations, 2001 edges
[2020-11-24 19:15:20,464 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-24 19:15:20,464 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-24 19:15:20,464 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-24 19:15:20,465 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-24 19:15:20,470 INFO  L70    emoveInfeasibleEdges]: Removed 30 edges and 9 locations because of local infeasibility
[2020-11-24 19:15:20,480 INFO  L70        RemoveSinkStates]: Removed 2 edges and 1 locations by removing sink states
[2020-11-24 19:15:20,488 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-24 19:15:20,490 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-24 19:15:20,491 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-24 19:15:20,492 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-24 19:15:20,494 INFO  L313           BlockEncoder]: Encoded RCFG 1186 locations, 1955 edges
[2020-11-24 19:15:20,494 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 24.11 07:15:20 BasicIcfg
[2020-11-24 19:15:20,494 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-24 19:15:20,495 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-24 19:15:20,495 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-24 19:15:20,498 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-24 19:15:20,498 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 19:15:20,498 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hakka_0x0e29e5abbb5fd88e28b2d355774e73bd47de3bcd_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 07:15:18" (1/6) ...
[2020-11-24 19:15:20,500 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@204412f8 and model type Hakka_0x0e29e5abbb5fd88e28b2d355774e73bd47de3bcd_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 24.11 07:15:20, skipping insertion in model container
[2020-11-24 19:15:20,500 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 19:15:20,500 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 07:15:19" (2/6) ...
[2020-11-24 19:15:20,500 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@204412f8 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 24.11 07:15:20, skipping insertion in model container
[2020-11-24 19:15:20,500 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 19:15:20,500 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hakka_0x0e29e5abbb5fd88e28b2d355774e73bd47de3bcd_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 07:15:19" (3/6) ...
[2020-11-24 19:15:20,501 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@204412f8 and model type Hakka_0x0e29e5abbb5fd88e28b2d355774e73bd47de3bcd_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 24.11 07:15:20, skipping insertion in model container
[2020-11-24 19:15:20,501 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 19:15:20,501 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 07:15:19" (4/6) ...
[2020-11-24 19:15:20,501 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@204412f8 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 24.11 07:15:20, skipping insertion in model container
[2020-11-24 19:15:20,501 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 19:15:20,501 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 07:15:20" (5/6) ...
[2020-11-24 19:15:20,501 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@204412f8 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 24.11 07:15:20, skipping insertion in model container
[2020-11-24 19:15:20,502 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 19:15:20,502 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 24.11 07:15:20" (6/6) ...
[2020-11-24 19:15:20,503 INFO  L404   chiAutomizerObserver]: Analyzing ICFG Hakka_0x0e29e5abbb5fd88e28b2d355774e73bd47de3bcd_transferfrom-normal.bpl_BEv2
[2020-11-24 19:15:20,541 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-24 19:15:20,542 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-24 19:15:20,542 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-24 19:15:20,542 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-24 19:15:20,542 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-24 19:15:20,542 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-24 19:15:20,542 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-24 19:15:20,542 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-24 19:15:20,542 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-24 19:15:20,560 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1186 states.
[2020-11-24 19:15:20,598 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 19:15:20,598 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 19:15:20,598 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 19:15:20,607 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 19:15:20,607 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
[2020-11-24 19:15:20,607 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-24 19:15:20,607 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1186 states.
[2020-11-24 19:15:20,617 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 19:15:20,617 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 19:15:20,617 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 19:15:20,619 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 19:15:20,619 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L3]                 success_transferFrom_Hakka0 := false;
[L3]                 call_transferFrom_Hakka0 := false;
[L3]     CALL        call main();
[L3]                 havoc p3;
[L3]                 havoc p2;
[L3]                 havoc p1;
[L1537]              assume null == 0;
[L1538]  CALL        call this := FreshRefGenerator__success();
[L681]               havoc newRef;
[L682]               assume Alloc[newRef] == false;
[L683]               Alloc[newRef] := true;
[L684]               assume newRef != null;
[L1538]  RET         call this := FreshRefGenerator__success();
[L1539]              assume now >= 0;
[L1540]              assume DType[this] == Hakka;
[L1541]              assume !revert && gas >= 0;
[L1542]  CALL        call CorralChoice_Hakka(this);
[L1436]              havoc msgsender_MSG;
[L1437]              havoc msgvalue_MSG;
[L1438]              havoc choice;
[L1439]              havoc __ret_0_owner;
[L1440]              havoc newOwner_s56;
[L1441]              havoc __ret_0_name;
[L1442]              havoc __ret_0_symbol;
[L1443]              havoc __ret_0_version;
[L1444]              havoc __ret_0_decimals;
[L1445]              havoc __ret_0_totalSupply;
[L1446]              havoc arg589_s0;
[L1447]              havoc __ret_0_balanceOf;
[L1448]              havoc arg590_s0;
[L1449]              havoc arg591_s0;
[L1450]              havoc __ret_0_allowance;
[L1451]              havoc arg592_s0;
[L1452]              havoc __ret_0_nonces;
[L1453]              havoc __ret_0_DOMAIN_SEPARATOR;
[L1454]              havoc __ret_0_PERMIT_TYPEHASH;
[L1455]              havoc chainId__s193;
[L1456]              havoc to_s210;
[L1457]              havoc amount_s210;
[L1458]              havoc __ret_0_transfer;
[L1459]              havoc from_s295;
[L1460]              havoc to_s295;
[L1461]              havoc amount_s295;
[L1462]              havoc __ret_0_transferFrom;
[L1463]              havoc to_s331;
[L1464]              havoc amount_s331;
[L1465]              havoc from_s408;
[L1466]              havoc amount_s408;
[L1467]              havoc spender_s436;
[L1468]              havoc amount_s436;
[L1469]              havoc __ret_0_approve;
[L1470]              havoc spender_s479;
[L1471]              havoc amount_s479;
[L1472]              havoc data_s479;
[L1473]              havoc __ret_0_approveAndCall;
[L1474]              havoc holder_s586;
[L1475]              havoc spender_s586;
[L1476]              havoc nonce_s586;
[L1477]              havoc expiry_s586;
[L1478]              havoc allowed_s586;
[L1479]              havoc v_s586;
[L1480]              havoc r_s586;
[L1481]              havoc s_s586;
[L1482]              havoc tmpNow;
[L1483]              havoc gas;
[L1484]              assume gas > 4000000 && gas <= 8000000;
[L1485]              tmpNow := now;
[L1486]              havoc now;
[L1487]              assume now > tmpNow;
[L1488]              assume msgsender_MSG != null;
[L1489]  COND TRUE   choice == 6
[L1490]              gas := gas - 21000;
[L1491]  COND FALSE  !(gas >= 0)
[L1542]  RET         call CorralChoice_Hakka(this);

Loop:
[L1542]        assume true;

[2020-11-24 19:15:20,636 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 19:15:20,637 INFO  L82        PathProgramCache]: Analyzing trace with hash 1060866879, now seen corresponding path program 1 times
[2020-11-24 19:15:20,641 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 19:15:20,663 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 19:15:20,724 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 19:15:20,726 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 19:15:20,726 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [5] imperfect sequences [] total 5
[2020-11-24 19:15:20,730 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 19:15:20,742 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 5 interpolants.
[2020-11-24 19:15:20,742 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=9, Invalid=11, Unknown=0, NotChecked=0, Total=20
[2020-11-24 19:15:20,744 INFO  L87              Difference]: Start difference. First operand 1186 states. Second operand 5 states.
[2020-11-24 19:15:20,972 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 19:15:20,972 INFO  L93              Difference]: Finished difference Result 597 states and 655 transitions.
[2020-11-24 19:15:20,972 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-24 19:15:20,974 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 597 states and 655 transitions.
[2020-11-24 19:15:20,979 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 19:15:20,984 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 597 states to 213 states and 230 transitions.
[2020-11-24 19:15:20,985 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 4
[2020-11-24 19:15:20,986 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 149
[2020-11-24 19:15:20,987 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 213 states and 230 transitions.
[2020-11-24 19:15:20,989 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 19:15:20,989 INFO  L728         BuchiCegarLoop]: Abstraction has 213 states and 230 transitions.
[2020-11-24 19:15:21,003 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 213 states and 230 transitions.
[2020-11-24 19:15:21,017 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 213 to 213.
[2020-11-24 19:15:21,018 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 213 states.
[2020-11-24 19:15:21,019 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 213 states to 213 states and 230 transitions.
[2020-11-24 19:15:21,019 INFO  L751         BuchiCegarLoop]: Abstraction has 213 states and 230 transitions.
[2020-11-24 19:15:21,020 INFO  L631         BuchiCegarLoop]: Abstraction has 213 states and 230 transitions.
[2020-11-24 19:15:21,020 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-24 19:15:21,020 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 213 states and 230 transitions.
[2020-11-24 19:15:21,021 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 19:15:21,021 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 19:15:21,021 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 19:15:21,022 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 19:15:21,023 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L3]                 success_transferFrom_Hakka0 := false;
[L3]                 call_transferFrom_Hakka0 := false;
[L3]     CALL        call main();
[L3]                 havoc p3;
[L3]                 havoc p2;
[L3]                 havoc p1;
[L1537]              assume null == 0;
[L1538]  CALL        call this := FreshRefGenerator__success();
[L681]               havoc newRef;
[L682]               assume Alloc[newRef] == false;
[L683]               Alloc[newRef] := true;
[L684]               assume newRef != null;
[L1538]  RET         call this := FreshRefGenerator__success();
[L1539]              assume now >= 0;
[L1540]              assume DType[this] == Hakka;
[L1541]              assume !revert && gas >= 0;
[L1542]  CALL        call CorralChoice_Hakka(this);
[L1436]              havoc msgsender_MSG;
[L1437]              havoc msgvalue_MSG;
[L1438]              havoc choice;
[L1439]              havoc __ret_0_owner;
[L1440]              havoc newOwner_s56;
[L1441]              havoc __ret_0_name;
[L1442]              havoc __ret_0_symbol;
[L1443]              havoc __ret_0_version;
[L1444]              havoc __ret_0_decimals;
[L1445]              havoc __ret_0_totalSupply;
[L1446]              havoc arg589_s0;
[L1447]              havoc __ret_0_balanceOf;
[L1448]              havoc arg590_s0;
[L1449]              havoc arg591_s0;
[L1450]              havoc __ret_0_allowance;
[L1451]              havoc arg592_s0;
[L1452]              havoc __ret_0_nonces;
[L1453]              havoc __ret_0_DOMAIN_SEPARATOR;
[L1454]              havoc __ret_0_PERMIT_TYPEHASH;
[L1455]              havoc chainId__s193;
[L1456]              havoc to_s210;
[L1457]              havoc amount_s210;
[L1458]              havoc __ret_0_transfer;
[L1459]              havoc from_s295;
[L1460]              havoc to_s295;
[L1461]              havoc amount_s295;
[L1462]              havoc __ret_0_transferFrom;
[L1463]              havoc to_s331;
[L1464]              havoc amount_s331;
[L1465]              havoc from_s408;
[L1466]              havoc amount_s408;
[L1467]              havoc spender_s436;
[L1468]              havoc amount_s436;
[L1469]              havoc __ret_0_approve;
[L1470]              havoc spender_s479;
[L1471]              havoc amount_s479;
[L1472]              havoc data_s479;
[L1473]              havoc __ret_0_approveAndCall;
[L1474]              havoc holder_s586;
[L1475]              havoc spender_s586;
[L1476]              havoc nonce_s586;
[L1477]              havoc expiry_s586;
[L1478]              havoc allowed_s586;
[L1479]              havoc v_s586;
[L1480]              havoc r_s586;
[L1481]              havoc s_s586;
[L1482]              havoc tmpNow;
[L1483]              havoc gas;
[L1484]              assume gas > 4000000 && gas <= 8000000;
[L1485]              tmpNow := now;
[L1486]              havoc now;
[L1487]              assume now > tmpNow;
[L1488]              assume msgsender_MSG != null;
[L1489]  COND FALSE  !(choice == 6)
[L1495]  COND FALSE  !(choice == 5)
[L1501]  COND FALSE  !(choice == 4)
[L1507]  COND FALSE  !(choice == 3)
[L1514]  COND TRUE   choice == 2
[L1515]              gas := gas - 21000;
[L1516]  COND TRUE   gas >= 0
[L1517]              assume amount_s295 >= 0 && amount_s295 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1518]              assume msgvalue_MSG == 0;
[L1519]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_Hakka(this, msgsender_MSG, msgvalue_MSG, from_s295, to_s295, amount_s295);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != from_s295 && p1 != to_s295) && (p2 != from_s295 || p3 != msgsender_MSG)) && from_s295 != to_s295) && amount_s295 <= balanceOf_Hakka[this][from_s295]) && amount_s295 <= allowance_Hakka[this][from_s295][msgsender_MSG]) && balanceOf_Hakka[this][to_s295] + amount_s295 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && amount_s295 >= 0) && amount_s295 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_Hakka[this][to_s295] >= 0) && balanceOf_Hakka[this][to_s295] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_Hakka[this][from_s295] >= 0) && balanceOf_Hakka[this][from_s295] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowance_Hakka[this][from_s295][msgsender_MSG] >= 0) && allowance_Hakka[this][from_s295][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_Hakka0 := true;
[L3]                 call_transferFrom_Hakka0 := false;
[L3]                 revert := revert_hold;
[L154]               havoc __exception;
[L155]               revert := false;
[L156]   COND FALSE  !(__exception)
[L183]   CALL        call __ret_0_ := transferFrom~address~address~uint256_Hakka__success(this, msgsender_MSG, msgvalue_MSG, from_s295, to_s295, amount_s295);
[L789]               __var_2 := -1 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L790]   COND FALSE  !(from_s295 != msgsender_MSG && allowance_Hakka[this][from_s295][msgsender_MSG] != -1 % 115792089237316195423570985008687907853269984665640564039457584007913129639936)
[L799]   COND TRUE   !(balanceOf_Hakka[this][from_s295] >= amount_s295)
[L800]               revert := true;
[L183]   RET         call __ret_0_ := transferFrom~address~address~uint256_Hakka__success(this, msgsender_MSG, msgvalue_MSG, from_s295, to_s295, amount_s295);
[L184]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((((__ret_0_ == true && balanceOf_Hakka[this][from_s295] == old(balanceOf_Hakka[this][from_s295]) - amount_s295) && balanceOf_Hakka[this][to_s295] == old(balanceOf_Hakka[this][to_s295]) + amount_s295) && allowance_Hakka[this][from_s295][msgsender_MSG] == old(allowance_Hakka[this][from_s295][msgsender_MSG]) - amount_s295) && totalSupply_Hakka[this] == old(totalSupply_Hakka[this])) && balanceOf_Hakka[this][p1] == old(balanceOf_Hakka[this][p1])) && allowance_Hakka[this][p2][p3] == old(allowance_Hakka[this][p2][p3])) && nonces_Hakka[this] == old(nonces_Hakka[this])) && DOMAIN_SEPARATOR_Hakka[this] == old(DOMAIN_SEPARATOR_Hakka[this])) && owner_Ownable[this] == old(owner_Ownable[this]));
[L3]                 revert := revert_hold;
[L1519]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_Hakka(this, msgsender_MSG, msgvalue_MSG, from_s295, to_s295, amount_s295);
[L1542]  RET         call CorralChoice_Hakka(this);

Loop:
[L1542]        assume true;

[2020-11-24 19:15:21,026 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 19:15:21,026 INFO  L82        PathProgramCache]: Analyzing trace with hash 596493875, now seen corresponding path program 1 times
[2020-11-24 19:15:21,027 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 19:15:21,039 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 19:15:21,058 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 19:15:21,058 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 19:15:21,058 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-24 19:15:21,059 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 19:15:21,059 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-24 19:15:21,060 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-24 19:15:21,060 INFO  L87              Difference]: Start difference. First operand 213 states and 230 transitions. cyclomatic complexity: 18 Second operand 3 states.
[2020-11-24 19:15:21,068 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 19:15:21,068 INFO  L93              Difference]: Finished difference Result 248 states and 266 transitions.
[2020-11-24 19:15:21,068 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-24 19:15:21,069 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 248 states and 266 transitions.
[2020-11-24 19:15:21,071 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 2
[2020-11-24 19:15:21,073 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 248 states to 231 states and 243 transitions.
[2020-11-24 19:15:21,073 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 164
[2020-11-24 19:15:21,073 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 169
[2020-11-24 19:15:21,073 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 231 states and 243 transitions.
[2020-11-24 19:15:21,075 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 19:15:21,075 INFO  L728         BuchiCegarLoop]: Abstraction has 231 states and 243 transitions.
[2020-11-24 19:15:21,075 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 231 states and 243 transitions.
[2020-11-24 19:15:21,081 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 231 to 220.
[2020-11-24 19:15:21,081 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 220 states.
[2020-11-24 19:15:21,081 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 220 states to 220 states and 232 transitions.
[2020-11-24 19:15:21,082 INFO  L751         BuchiCegarLoop]: Abstraction has 220 states and 232 transitions.
[2020-11-24 19:15:21,082 INFO  L631         BuchiCegarLoop]: Abstraction has 220 states and 232 transitions.
[2020-11-24 19:15:21,082 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-24 19:15:21,082 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 220 states and 232 transitions.
[2020-11-24 19:15:21,083 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 19:15:21,083 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 19:15:21,083 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 19:15:21,084 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 19:15:21,084 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L3]                 success_transferFrom_Hakka0 := false;
[L3]                 call_transferFrom_Hakka0 := false;
[L3]     CALL        call main();
[L3]                 havoc p3;
[L3]                 havoc p2;
[L3]                 havoc p1;
[L1537]              assume null == 0;
[L1538]  CALL        call this := FreshRefGenerator__success();
[L681]               havoc newRef;
[L682]               assume Alloc[newRef] == false;
[L683]               Alloc[newRef] := true;
[L684]               assume newRef != null;
[L1538]  RET         call this := FreshRefGenerator__success();
[L1539]              assume now >= 0;
[L1540]              assume DType[this] == Hakka;
[L1541]              assume !revert && gas >= 0;
[L1542]  CALL        call CorralChoice_Hakka(this);
[L1436]              havoc msgsender_MSG;
[L1437]              havoc msgvalue_MSG;
[L1438]              havoc choice;
[L1439]              havoc __ret_0_owner;
[L1440]              havoc newOwner_s56;
[L1441]              havoc __ret_0_name;
[L1442]              havoc __ret_0_symbol;
[L1443]              havoc __ret_0_version;
[L1444]              havoc __ret_0_decimals;
[L1445]              havoc __ret_0_totalSupply;
[L1446]              havoc arg589_s0;
[L1447]              havoc __ret_0_balanceOf;
[L1448]              havoc arg590_s0;
[L1449]              havoc arg591_s0;
[L1450]              havoc __ret_0_allowance;
[L1451]              havoc arg592_s0;
[L1452]              havoc __ret_0_nonces;
[L1453]              havoc __ret_0_DOMAIN_SEPARATOR;
[L1454]              havoc __ret_0_PERMIT_TYPEHASH;
[L1455]              havoc chainId__s193;
[L1456]              havoc to_s210;
[L1457]              havoc amount_s210;
[L1458]              havoc __ret_0_transfer;
[L1459]              havoc from_s295;
[L1460]              havoc to_s295;
[L1461]              havoc amount_s295;
[L1462]              havoc __ret_0_transferFrom;
[L1463]              havoc to_s331;
[L1464]              havoc amount_s331;
[L1465]              havoc from_s408;
[L1466]              havoc amount_s408;
[L1467]              havoc spender_s436;
[L1468]              havoc amount_s436;
[L1469]              havoc __ret_0_approve;
[L1470]              havoc spender_s479;
[L1471]              havoc amount_s479;
[L1472]              havoc data_s479;
[L1473]              havoc __ret_0_approveAndCall;
[L1474]              havoc holder_s586;
[L1475]              havoc spender_s586;
[L1476]              havoc nonce_s586;
[L1477]              havoc expiry_s586;
[L1478]              havoc allowed_s586;
[L1479]              havoc v_s586;
[L1480]              havoc r_s586;
[L1481]              havoc s_s586;
[L1482]              havoc tmpNow;
[L1483]              havoc gas;
[L1484]              assume gas > 4000000 && gas <= 8000000;
[L1485]              tmpNow := now;
[L1486]              havoc now;
[L1487]              assume now > tmpNow;
[L1488]              assume msgsender_MSG != null;
[L1489]  COND FALSE  !(choice == 6)
[L1495]  COND FALSE  !(choice == 5)
[L1501]  COND FALSE  !(choice == 4)
[L1507]  COND FALSE  !(choice == 3)
[L1514]  COND TRUE   choice == 2
[L1515]              gas := gas - 21000;
[L1516]  COND TRUE   gas >= 0
[L1517]              assume amount_s295 >= 0 && amount_s295 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1518]              assume msgvalue_MSG == 0;
[L1519]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_Hakka(this, msgsender_MSG, msgvalue_MSG, from_s295, to_s295, amount_s295);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != from_s295 && p1 != to_s295) && (p2 != from_s295 || p3 != msgsender_MSG)) && from_s295 != to_s295) && amount_s295 <= balanceOf_Hakka[this][from_s295]) && amount_s295 <= allowance_Hakka[this][from_s295][msgsender_MSG]) && balanceOf_Hakka[this][to_s295] + amount_s295 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && amount_s295 >= 0) && amount_s295 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_Hakka[this][to_s295] >= 0) && balanceOf_Hakka[this][to_s295] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_Hakka[this][from_s295] >= 0) && balanceOf_Hakka[this][from_s295] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowance_Hakka[this][from_s295][msgsender_MSG] >= 0) && allowance_Hakka[this][from_s295][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_Hakka0 := true;
[L3]                 call_transferFrom_Hakka0 := false;
[L3]                 revert := revert_hold;
[L154]               havoc __exception;
[L155]               revert := false;
[L156]   COND TRUE   __exception
[L157]               __tmp__Balance := Balance;
[L158]               __tmp__DType := DType;
[L159]               __tmp__Alloc := Alloc;
[L160]               __tmp__balance_ADDR := balance_ADDR;
[L161]               __tmp__M_Ref_int := M_Ref_int;
[L162]               __tmp__sum_balanceOf0 := sum_balanceOf0;
[L163]               __tmp__alloc_allowance_Hakka_lvl0 := alloc_allowance_Hakka_lvl0;
[L164]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L165]               __tmp__sum_allowance1 := sum_allowance1;
[L166]               __tmp__sum_nonces2 := sum_nonces2;
[L167]               __tmp__Length := Length;
[L168]               __tmp__now := now;
[L169]               __tmp__owner_Ownable := owner_Ownable;
[L170]               __tmp__name_Hakka := name_Hakka;
[L171]               __tmp__symbol_Hakka := symbol_Hakka;
[L172]               __tmp__version_Hakka := version_Hakka;
[L173]               __tmp__decimals_Hakka := decimals_Hakka;
[L174]               __tmp__totalSupply_Hakka := totalSupply_Hakka;
[L175]               __tmp__balanceOf_Hakka := balanceOf_Hakka;
[L176]               __tmp__allowance_Hakka := allowance_Hakka;
[L177]               __tmp__nonces_Hakka := nonces_Hakka;
[L178]               __tmp__DOMAIN_SEPARATOR_Hakka := DOMAIN_SEPARATOR_Hakka;
[L179]               __tmp__PERMIT_TYPEHASH_Hakka := PERMIT_TYPEHASH_Hakka;
[L180]   CALL        call __ret_0_ := transferFrom~address~address~uint256_Hakka__fail(this, msgsender_MSG, msgvalue_MSG, from_s295, to_s295, amount_s295);
[L751]               __var_2 := -1 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L752]   COND FALSE  !(from_s295 != msgsender_MSG && __tmp__allowance_Hakka[this][from_s295][msgsender_MSG] != -1 % 115792089237316195423570985008687907853269984665640564039457584007913129639936)
[L761]   COND TRUE   !(__tmp__balanceOf_Hakka[this][from_s295] >= amount_s295)
[L762]               revert := true;
[L180]   RET         call __ret_0_ := transferFrom~address~address~uint256_Hakka__fail(this, msgsender_MSG, msgvalue_MSG, from_s295, to_s295, amount_s295);
[L181]               assume revert || gas < 0;
[L1519]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_Hakka(this, msgsender_MSG, msgvalue_MSG, from_s295, to_s295, amount_s295);
[L1542]  RET         call CorralChoice_Hakka(this);

Loop:
[L1542]        assume true;

[2020-11-24 19:15:21,090 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 19:15:21,091 INFO  L82        PathProgramCache]: Analyzing trace with hash 1605845444, now seen corresponding path program 1 times
[2020-11-24 19:15:21,092 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 19:15:21,105 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 19:15:21,153 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 19:15:21,153 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 19:15:21,153 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [6] imperfect sequences [] total 6
[2020-11-24 19:15:21,154 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 19:15:21,154 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 6 interpolants.
[2020-11-24 19:15:21,154 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=9, Invalid=21, Unknown=0, NotChecked=0, Total=30
[2020-11-24 19:15:21,154 INFO  L87              Difference]: Start difference. First operand 220 states and 232 transitions. cyclomatic complexity: 13 Second operand 6 states.
[2020-11-24 19:15:21,237 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 19:15:21,237 INFO  L93              Difference]: Finished difference Result 235 states and 246 transitions.
[2020-11-24 19:15:21,237 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 7 states. 
[2020-11-24 19:15:21,238 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 235 states and 246 transitions.
[2020-11-24 19:15:21,239 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 2
[2020-11-24 19:15:21,241 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 235 states to 232 states and 243 transitions.
[2020-11-24 19:15:21,241 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 170
[2020-11-24 19:15:21,241 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 170
[2020-11-24 19:15:21,241 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 232 states and 243 transitions.
[2020-11-24 19:15:21,242 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 19:15:21,242 INFO  L728         BuchiCegarLoop]: Abstraction has 232 states and 243 transitions.
[2020-11-24 19:15:21,243 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 232 states and 243 transitions.
[2020-11-24 19:15:21,246 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 232 to 219.
[2020-11-24 19:15:21,246 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 219 states.
[2020-11-24 19:15:21,247 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 219 states to 219 states and 230 transitions.
[2020-11-24 19:15:21,247 INFO  L751         BuchiCegarLoop]: Abstraction has 219 states and 230 transitions.
[2020-11-24 19:15:21,247 INFO  L631         BuchiCegarLoop]: Abstraction has 219 states and 230 transitions.
[2020-11-24 19:15:21,247 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-24 19:15:21,247 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 219 states and 230 transitions.
[2020-11-24 19:15:21,248 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 19:15:21,249 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 19:15:21,249 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 19:15:21,250 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 19:15:21,250 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L3]                 success_transferFrom_Hakka0 := false;
[L3]                 call_transferFrom_Hakka0 := false;
[L3]     CALL        call main();
[L3]                 havoc p3;
[L3]                 havoc p2;
[L3]                 havoc p1;
[L1537]              assume null == 0;
[L1538]  CALL        call this := FreshRefGenerator__success();
[L681]               havoc newRef;
[L682]               assume Alloc[newRef] == false;
[L683]               Alloc[newRef] := true;
[L684]               assume newRef != null;
[L1538]  RET         call this := FreshRefGenerator__success();
[L1539]              assume now >= 0;
[L1540]              assume DType[this] == Hakka;
[L1541]              assume !revert && gas >= 0;
[L1542]  CALL        call CorralChoice_Hakka(this);
[L1436]              havoc msgsender_MSG;
[L1437]              havoc msgvalue_MSG;
[L1438]              havoc choice;
[L1439]              havoc __ret_0_owner;
[L1440]              havoc newOwner_s56;
[L1441]              havoc __ret_0_name;
[L1442]              havoc __ret_0_symbol;
[L1443]              havoc __ret_0_version;
[L1444]              havoc __ret_0_decimals;
[L1445]              havoc __ret_0_totalSupply;
[L1446]              havoc arg589_s0;
[L1447]              havoc __ret_0_balanceOf;
[L1448]              havoc arg590_s0;
[L1449]              havoc arg591_s0;
[L1450]              havoc __ret_0_allowance;
[L1451]              havoc arg592_s0;
[L1452]              havoc __ret_0_nonces;
[L1453]              havoc __ret_0_DOMAIN_SEPARATOR;
[L1454]              havoc __ret_0_PERMIT_TYPEHASH;
[L1455]              havoc chainId__s193;
[L1456]              havoc to_s210;
[L1457]              havoc amount_s210;
[L1458]              havoc __ret_0_transfer;
[L1459]              havoc from_s295;
[L1460]              havoc to_s295;
[L1461]              havoc amount_s295;
[L1462]              havoc __ret_0_transferFrom;
[L1463]              havoc to_s331;
[L1464]              havoc amount_s331;
[L1465]              havoc from_s408;
[L1466]              havoc amount_s408;
[L1467]              havoc spender_s436;
[L1468]              havoc amount_s436;
[L1469]              havoc __ret_0_approve;
[L1470]              havoc spender_s479;
[L1471]              havoc amount_s479;
[L1472]              havoc data_s479;
[L1473]              havoc __ret_0_approveAndCall;
[L1474]              havoc holder_s586;
[L1475]              havoc spender_s586;
[L1476]              havoc nonce_s586;
[L1477]              havoc expiry_s586;
[L1478]              havoc allowed_s586;
[L1479]              havoc v_s586;
[L1480]              havoc r_s586;
[L1481]              havoc s_s586;
[L1482]              havoc tmpNow;
[L1483]              havoc gas;
[L1484]              assume gas > 4000000 && gas <= 8000000;
[L1485]              tmpNow := now;
[L1486]              havoc now;
[L1487]              assume now > tmpNow;
[L1488]              assume msgsender_MSG != null;
[L1489]  COND FALSE  !(choice == 6)
[L1495]  COND FALSE  !(choice == 5)
[L1501]  COND FALSE  !(choice == 4)
[L1507]  COND FALSE  !(choice == 3)
[L1514]  COND TRUE   choice == 2
[L1515]              gas := gas - 21000;
[L1516]  COND TRUE   gas >= 0
[L1517]              assume amount_s295 >= 0 && amount_s295 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1518]              assume msgvalue_MSG == 0;
[L1519]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_Hakka(this, msgsender_MSG, msgvalue_MSG, from_s295, to_s295, amount_s295);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != from_s295 && p1 != to_s295) && (p2 != from_s295 || p3 != msgsender_MSG)) && from_s295 != to_s295) && amount_s295 <= balanceOf_Hakka[this][from_s295]) && amount_s295 <= allowance_Hakka[this][from_s295][msgsender_MSG]) && balanceOf_Hakka[this][to_s295] + amount_s295 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && amount_s295 >= 0) && amount_s295 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_Hakka[this][to_s295] >= 0) && balanceOf_Hakka[this][to_s295] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_Hakka[this][from_s295] >= 0) && balanceOf_Hakka[this][from_s295] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowance_Hakka[this][from_s295][msgsender_MSG] >= 0) && allowance_Hakka[this][from_s295][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_Hakka0 := true;
[L3]                 call_transferFrom_Hakka0 := false;
[L3]                 revert := revert_hold;
[L154]               havoc __exception;
[L155]               revert := false;
[L156]   COND TRUE   __exception
[L157]               __tmp__Balance := Balance;
[L158]               __tmp__DType := DType;
[L159]               __tmp__Alloc := Alloc;
[L160]               __tmp__balance_ADDR := balance_ADDR;
[L161]               __tmp__M_Ref_int := M_Ref_int;
[L162]               __tmp__sum_balanceOf0 := sum_balanceOf0;
[L163]               __tmp__alloc_allowance_Hakka_lvl0 := alloc_allowance_Hakka_lvl0;
[L164]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L165]               __tmp__sum_allowance1 := sum_allowance1;
[L166]               __tmp__sum_nonces2 := sum_nonces2;
[L167]               __tmp__Length := Length;
[L168]               __tmp__now := now;
[L169]               __tmp__owner_Ownable := owner_Ownable;
[L170]               __tmp__name_Hakka := name_Hakka;
[L171]               __tmp__symbol_Hakka := symbol_Hakka;
[L172]               __tmp__version_Hakka := version_Hakka;
[L173]               __tmp__decimals_Hakka := decimals_Hakka;
[L174]               __tmp__totalSupply_Hakka := totalSupply_Hakka;
[L175]               __tmp__balanceOf_Hakka := balanceOf_Hakka;
[L176]               __tmp__allowance_Hakka := allowance_Hakka;
[L177]               __tmp__nonces_Hakka := nonces_Hakka;
[L178]               __tmp__DOMAIN_SEPARATOR_Hakka := DOMAIN_SEPARATOR_Hakka;
[L179]               __tmp__PERMIT_TYPEHASH_Hakka := PERMIT_TYPEHASH_Hakka;
[L180]   CALL        call __ret_0_ := transferFrom~address~address~uint256_Hakka__fail(this, msgsender_MSG, msgvalue_MSG, from_s295, to_s295, amount_s295);
[L751]               __var_2 := -1 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L752]   COND TRUE   from_s295 != msgsender_MSG && __tmp__allowance_Hakka[this][from_s295][msgsender_MSG] != -1 % 115792089237316195423570985008687907853269984665640564039457584007913129639936
[L753]   CALL        call __var_3 := sub~uint256~uint256_Hakka__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__allowance_Hakka[this][from_s295][msgsender_MSG], amount_s295);
[L707]               z_s157 := (x_s157 - y_s157) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L708]   COND FALSE  !(!((x_s157 - y_s157) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 <= x_s157))
[L753]   RET         call __var_3 := sub~uint256~uint256_Hakka__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__allowance_Hakka[this][from_s295][msgsender_MSG], amount_s295);
[L754]   COND TRUE   revert
[L180]   RET         call __ret_0_ := transferFrom~address~address~uint256_Hakka__fail(this, msgsender_MSG, msgvalue_MSG, from_s295, to_s295, amount_s295);
[L181]               assume revert || gas < 0;
[L1519]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_Hakka(this, msgsender_MSG, msgvalue_MSG, from_s295, to_s295, amount_s295);
[L1542]  RET         call CorralChoice_Hakka(this);

Loop:
[L1542]        assume true;

[2020-11-24 19:15:21,252 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 19:15:21,253 INFO  L82        PathProgramCache]: Analyzing trace with hash -1543985873, now seen corresponding path program 1 times
[2020-11-24 19:15:21,253 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 19:15:21,262 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 19:15:21,284 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 19:15:21,284 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 19:15:21,284 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [5] imperfect sequences [] total 5
[2020-11-24 19:15:21,285 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 19:15:21,285 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 5 interpolants.
[2020-11-24 19:15:21,285 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=9, Invalid=11, Unknown=0, NotChecked=0, Total=20
[2020-11-24 19:15:21,285 INFO  L87              Difference]: Start difference. First operand 219 states and 230 transitions. cyclomatic complexity: 12 Second operand 5 states.
[2020-11-24 19:15:21,296 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 19:15:21,297 INFO  L93              Difference]: Finished difference Result 230 states and 238 transitions.
[2020-11-24 19:15:21,297 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-24 19:15:21,297 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 230 states and 238 transitions.
[2020-11-24 19:15:21,299 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 2
[2020-11-24 19:15:21,300 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 230 states to 230 states and 238 transitions.
[2020-11-24 19:15:21,300 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 168
[2020-11-24 19:15:21,300 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 168
[2020-11-24 19:15:21,300 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 230 states and 238 transitions.
[2020-11-24 19:15:21,301 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 19:15:21,301 INFO  L728         BuchiCegarLoop]: Abstraction has 230 states and 238 transitions.
[2020-11-24 19:15:21,301 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 230 states and 238 transitions.
[2020-11-24 19:15:21,303 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 230 to 219.
[2020-11-24 19:15:21,303 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 219 states.
[2020-11-24 19:15:21,304 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 219 states to 219 states and 227 transitions.
[2020-11-24 19:15:21,304 INFO  L751         BuchiCegarLoop]: Abstraction has 219 states and 227 transitions.
[2020-11-24 19:15:21,304 INFO  L631         BuchiCegarLoop]: Abstraction has 219 states and 227 transitions.
[2020-11-24 19:15:21,304 INFO  L445         BuchiCegarLoop]: ======== Iteration 5============
[2020-11-24 19:15:21,304 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 219 states and 227 transitions.
[2020-11-24 19:15:21,305 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 19:15:21,305 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 19:15:21,306 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 19:15:21,307 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 19:15:21,307 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L3]                 success_transferFrom_Hakka0 := false;
[L3]                 call_transferFrom_Hakka0 := false;
[L3]     CALL        call main();
[L3]                 havoc p3;
[L3]                 havoc p2;
[L3]                 havoc p1;
[L1537]              assume null == 0;
[L1538]  CALL        call this := FreshRefGenerator__success();
[L681]               havoc newRef;
[L682]               assume Alloc[newRef] == false;
[L683]               Alloc[newRef] := true;
[L684]               assume newRef != null;
[L1538]  RET         call this := FreshRefGenerator__success();
[L1539]              assume now >= 0;
[L1540]              assume DType[this] == Hakka;
[L1541]              assume !revert && gas >= 0;
[L1542]  CALL        call CorralChoice_Hakka(this);
[L1436]              havoc msgsender_MSG;
[L1437]              havoc msgvalue_MSG;
[L1438]              havoc choice;
[L1439]              havoc __ret_0_owner;
[L1440]              havoc newOwner_s56;
[L1441]              havoc __ret_0_name;
[L1442]              havoc __ret_0_symbol;
[L1443]              havoc __ret_0_version;
[L1444]              havoc __ret_0_decimals;
[L1445]              havoc __ret_0_totalSupply;
[L1446]              havoc arg589_s0;
[L1447]              havoc __ret_0_balanceOf;
[L1448]              havoc arg590_s0;
[L1449]              havoc arg591_s0;
[L1450]              havoc __ret_0_allowance;
[L1451]              havoc arg592_s0;
[L1452]              havoc __ret_0_nonces;
[L1453]              havoc __ret_0_DOMAIN_SEPARATOR;
[L1454]              havoc __ret_0_PERMIT_TYPEHASH;
[L1455]              havoc chainId__s193;
[L1456]              havoc to_s210;
[L1457]              havoc amount_s210;
[L1458]              havoc __ret_0_transfer;
[L1459]              havoc from_s295;
[L1460]              havoc to_s295;
[L1461]              havoc amount_s295;
[L1462]              havoc __ret_0_transferFrom;
[L1463]              havoc to_s331;
[L1464]              havoc amount_s331;
[L1465]              havoc from_s408;
[L1466]              havoc amount_s408;
[L1467]              havoc spender_s436;
[L1468]              havoc amount_s436;
[L1469]              havoc __ret_0_approve;
[L1470]              havoc spender_s479;
[L1471]              havoc amount_s479;
[L1472]              havoc data_s479;
[L1473]              havoc __ret_0_approveAndCall;
[L1474]              havoc holder_s586;
[L1475]              havoc spender_s586;
[L1476]              havoc nonce_s586;
[L1477]              havoc expiry_s586;
[L1478]              havoc allowed_s586;
[L1479]              havoc v_s586;
[L1480]              havoc r_s586;
[L1481]              havoc s_s586;
[L1482]              havoc tmpNow;
[L1483]              havoc gas;
[L1484]              assume gas > 4000000 && gas <= 8000000;
[L1485]              tmpNow := now;
[L1486]              havoc now;
[L1487]              assume now > tmpNow;
[L1488]              assume msgsender_MSG != null;
[L1489]  COND FALSE  !(choice == 6)
[L1495]  COND FALSE  !(choice == 5)
[L1501]  COND FALSE  !(choice == 4)
[L1507]  COND FALSE  !(choice == 3)
[L1514]  COND TRUE   choice == 2
[L1515]              gas := gas - 21000;
[L1516]  COND TRUE   gas >= 0
[L1517]              assume amount_s295 >= 0 && amount_s295 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1518]              assume msgvalue_MSG == 0;
[L1519]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_Hakka(this, msgsender_MSG, msgvalue_MSG, from_s295, to_s295, amount_s295);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != from_s295 && p1 != to_s295) && (p2 != from_s295 || p3 != msgsender_MSG)) && from_s295 != to_s295) && amount_s295 <= balanceOf_Hakka[this][from_s295]) && amount_s295 <= allowance_Hakka[this][from_s295][msgsender_MSG]) && balanceOf_Hakka[this][to_s295] + amount_s295 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && amount_s295 >= 0) && amount_s295 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_Hakka[this][to_s295] >= 0) && balanceOf_Hakka[this][to_s295] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_Hakka[this][from_s295] >= 0) && balanceOf_Hakka[this][from_s295] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowance_Hakka[this][from_s295][msgsender_MSG] >= 0) && allowance_Hakka[this][from_s295][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_Hakka0 := true;
[L3]                 call_transferFrom_Hakka0 := false;
[L3]                 revert := revert_hold;
[L154]               havoc __exception;
[L155]               revert := false;
[L156]   COND TRUE   __exception
[L157]               __tmp__Balance := Balance;
[L158]               __tmp__DType := DType;
[L159]               __tmp__Alloc := Alloc;
[L160]               __tmp__balance_ADDR := balance_ADDR;
[L161]               __tmp__M_Ref_int := M_Ref_int;
[L162]               __tmp__sum_balanceOf0 := sum_balanceOf0;
[L163]               __tmp__alloc_allowance_Hakka_lvl0 := alloc_allowance_Hakka_lvl0;
[L164]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L165]               __tmp__sum_allowance1 := sum_allowance1;
[L166]               __tmp__sum_nonces2 := sum_nonces2;
[L167]               __tmp__Length := Length;
[L168]               __tmp__now := now;
[L169]               __tmp__owner_Ownable := owner_Ownable;
[L170]               __tmp__name_Hakka := name_Hakka;
[L171]               __tmp__symbol_Hakka := symbol_Hakka;
[L172]               __tmp__version_Hakka := version_Hakka;
[L173]               __tmp__decimals_Hakka := decimals_Hakka;
[L174]               __tmp__totalSupply_Hakka := totalSupply_Hakka;
[L175]               __tmp__balanceOf_Hakka := balanceOf_Hakka;
[L176]               __tmp__allowance_Hakka := allowance_Hakka;
[L177]               __tmp__nonces_Hakka := nonces_Hakka;
[L178]               __tmp__DOMAIN_SEPARATOR_Hakka := DOMAIN_SEPARATOR_Hakka;
[L179]               __tmp__PERMIT_TYPEHASH_Hakka := PERMIT_TYPEHASH_Hakka;
[L180]   CALL        call __ret_0_ := transferFrom~address~address~uint256_Hakka__fail(this, msgsender_MSG, msgvalue_MSG, from_s295, to_s295, amount_s295);
[L751]               __var_2 := -1 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L752]   COND TRUE   from_s295 != msgsender_MSG && __tmp__allowance_Hakka[this][from_s295][msgsender_MSG] != -1 % 115792089237316195423570985008687907853269984665640564039457584007913129639936
[L753]   CALL        call __var_3 := sub~uint256~uint256_Hakka__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__allowance_Hakka[this][from_s295][msgsender_MSG], amount_s295);
[L707]               z_s157 := (x_s157 - y_s157) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L708]   COND TRUE   !((x_s157 - y_s157) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 <= x_s157)
[L709]               revert := true;
[L753]   RET         call __var_3 := sub~uint256~uint256_Hakka__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__allowance_Hakka[this][from_s295][msgsender_MSG], amount_s295);
[L754]   COND TRUE   revert
[L180]   RET         call __ret_0_ := transferFrom~address~address~uint256_Hakka__fail(this, msgsender_MSG, msgvalue_MSG, from_s295, to_s295, amount_s295);
[L181]               assume revert || gas < 0;
[L1519]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_Hakka(this, msgsender_MSG, msgvalue_MSG, from_s295, to_s295, amount_s295);
[L1542]  RET         call CorralChoice_Hakka(this);

Loop:
[L1542]        assume true;

[2020-11-24 19:15:21,309 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 19:15:21,309 INFO  L82        PathProgramCache]: Analyzing trace with hash -888704692, now seen corresponding path program 1 times
[2020-11-24 19:15:21,310 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 19:15:21,321 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 19:15:21,381 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 19:15:21,381 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 19:15:21,381 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [7] imperfect sequences [] total 7
[2020-11-24 19:15:21,381 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 19:15:21,382 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 7 interpolants.
[2020-11-24 19:15:21,382 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=11, Invalid=31, Unknown=0, NotChecked=0, Total=42
[2020-11-24 19:15:21,382 INFO  L87              Difference]: Start difference. First operand 219 states and 227 transitions. cyclomatic complexity: 9 Second operand 7 states.
[2020-11-24 19:15:21,473 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 19:15:21,473 INFO  L93              Difference]: Finished difference Result 252 states and 263 transitions.
[2020-11-24 19:15:21,473 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 8 states. 
[2020-11-24 19:15:21,473 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 252 states and 263 transitions.
[2020-11-24 19:15:21,474 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 2
[2020-11-24 19:15:21,475 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 252 states to 248 states and 259 transitions.
[2020-11-24 19:15:21,476 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 184
[2020-11-24 19:15:21,476 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 184
[2020-11-24 19:15:21,476 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 248 states and 259 transitions.
[2020-11-24 19:15:21,477 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 19:15:21,477 INFO  L728         BuchiCegarLoop]: Abstraction has 248 states and 259 transitions.
[2020-11-24 19:15:21,477 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 248 states and 259 transitions.
[2020-11-24 19:15:21,479 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 248 to 217.
[2020-11-24 19:15:21,479 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 217 states.
[2020-11-24 19:15:21,480 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 217 states to 217 states and 224 transitions.
[2020-11-24 19:15:21,480 INFO  L751         BuchiCegarLoop]: Abstraction has 217 states and 224 transitions.
[2020-11-24 19:15:21,480 INFO  L631         BuchiCegarLoop]: Abstraction has 217 states and 224 transitions.
[2020-11-24 19:15:21,480 INFO  L445         BuchiCegarLoop]: ======== Iteration 6============
[2020-11-24 19:15:21,480 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 217 states and 224 transitions.
[2020-11-24 19:15:21,480 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 19:15:21,480 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 19:15:21,480 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 19:15:21,481 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 19:15:21,481 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L3]                 success_transferFrom_Hakka0 := false;
[L3]                 call_transferFrom_Hakka0 := false;
[L3]     CALL        call main();
[L3]                 havoc p3;
[L3]                 havoc p2;
[L3]                 havoc p1;
[L1537]              assume null == 0;
[L1538]  CALL        call this := FreshRefGenerator__success();
[L681]               havoc newRef;
[L682]               assume Alloc[newRef] == false;
[L683]               Alloc[newRef] := true;
[L684]               assume newRef != null;
[L1538]  RET         call this := FreshRefGenerator__success();
[L1539]              assume now >= 0;
[L1540]              assume DType[this] == Hakka;
[L1541]              assume !revert && gas >= 0;
[L1542]  CALL        call CorralChoice_Hakka(this);
[L1436]              havoc msgsender_MSG;
[L1437]              havoc msgvalue_MSG;
[L1438]              havoc choice;
[L1439]              havoc __ret_0_owner;
[L1440]              havoc newOwner_s56;
[L1441]              havoc __ret_0_name;
[L1442]              havoc __ret_0_symbol;
[L1443]              havoc __ret_0_version;
[L1444]              havoc __ret_0_decimals;
[L1445]              havoc __ret_0_totalSupply;
[L1446]              havoc arg589_s0;
[L1447]              havoc __ret_0_balanceOf;
[L1448]              havoc arg590_s0;
[L1449]              havoc arg591_s0;
[L1450]              havoc __ret_0_allowance;
[L1451]              havoc arg592_s0;
[L1452]              havoc __ret_0_nonces;
[L1453]              havoc __ret_0_DOMAIN_SEPARATOR;
[L1454]              havoc __ret_0_PERMIT_TYPEHASH;
[L1455]              havoc chainId__s193;
[L1456]              havoc to_s210;
[L1457]              havoc amount_s210;
[L1458]              havoc __ret_0_transfer;
[L1459]              havoc from_s295;
[L1460]              havoc to_s295;
[L1461]              havoc amount_s295;
[L1462]              havoc __ret_0_transferFrom;
[L1463]              havoc to_s331;
[L1464]              havoc amount_s331;
[L1465]              havoc from_s408;
[L1466]              havoc amount_s408;
[L1467]              havoc spender_s436;
[L1468]              havoc amount_s436;
[L1469]              havoc __ret_0_approve;
[L1470]              havoc spender_s479;
[L1471]              havoc amount_s479;
[L1472]              havoc data_s479;
[L1473]              havoc __ret_0_approveAndCall;
[L1474]              havoc holder_s586;
[L1475]              havoc spender_s586;
[L1476]              havoc nonce_s586;
[L1477]              havoc expiry_s586;
[L1478]              havoc allowed_s586;
[L1479]              havoc v_s586;
[L1480]              havoc r_s586;
[L1481]              havoc s_s586;
[L1482]              havoc tmpNow;
[L1483]              havoc gas;
[L1484]              assume gas > 4000000 && gas <= 8000000;
[L1485]              tmpNow := now;
[L1486]              havoc now;
[L1487]              assume now > tmpNow;
[L1488]              assume msgsender_MSG != null;
[L1489]  COND FALSE  !(choice == 6)
[L1495]  COND FALSE  !(choice == 5)
[L1501]  COND FALSE  !(choice == 4)
[L1507]  COND FALSE  !(choice == 3)
[L1514]  COND TRUE   choice == 2
[L1515]              gas := gas - 21000;
[L1516]  COND TRUE   gas >= 0
[L1517]              assume amount_s295 >= 0 && amount_s295 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1518]              assume msgvalue_MSG == 0;
[L1519]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_Hakka(this, msgsender_MSG, msgvalue_MSG, from_s295, to_s295, amount_s295);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != from_s295 && p1 != to_s295) && (p2 != from_s295 || p3 != msgsender_MSG)) && from_s295 != to_s295) && amount_s295 <= balanceOf_Hakka[this][from_s295]) && amount_s295 <= allowance_Hakka[this][from_s295][msgsender_MSG]) && balanceOf_Hakka[this][to_s295] + amount_s295 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && amount_s295 >= 0) && amount_s295 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_Hakka[this][to_s295] >= 0) && balanceOf_Hakka[this][to_s295] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_Hakka[this][from_s295] >= 0) && balanceOf_Hakka[this][from_s295] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowance_Hakka[this][from_s295][msgsender_MSG] >= 0) && allowance_Hakka[this][from_s295][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_Hakka0 := true;
[L3]                 call_transferFrom_Hakka0 := false;
[L3]                 revert := revert_hold;
[L154]               havoc __exception;
[L155]               revert := false;
[L156]   COND FALSE  !(__exception)
[L183]   CALL        call __ret_0_ := transferFrom~address~address~uint256_Hakka__success(this, msgsender_MSG, msgvalue_MSG, from_s295, to_s295, amount_s295);
[L789]               __var_2 := -1 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L790]   COND FALSE  !(from_s295 != msgsender_MSG && allowance_Hakka[this][from_s295][msgsender_MSG] != -1 % 115792089237316195423570985008687907853269984665640564039457584007913129639936)
[L799]   COND FALSE  !(!(balanceOf_Hakka[this][from_s295] >= amount_s295))
[L803]   CALL        call __var_4 := sub~uint256~uint256_Hakka__success(this, msgsender_MSG, msgvalue_MSG, balanceOf_Hakka[this][from_s295], amount_s295);
[L716]               z_s157 := (x_s157 - y_s157) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L717]   COND FALSE  !(!((x_s157 - y_s157) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 <= x_s157))
[L803]   RET         call __var_4 := sub~uint256~uint256_Hakka__success(this, msgsender_MSG, msgvalue_MSG, balanceOf_Hakka[this][from_s295], amount_s295);
[L804]   COND FALSE  !(revert)
[L807]               sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_Hakka[this][from_s295];
[L808]               balanceOf_Hakka[this][from_s295] := __var_4;
[L809]               sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_Hakka[this][from_s295];
[L810]   CALL        call __var_5 := add~uint256~uint256_Hakka__success(this, msgsender_MSG, msgvalue_MSG, balanceOf_Hakka[this][to_s295], amount_s295);
[L698]               z_s136 := (x_s136 + y_s136) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L699]   COND FALSE  !(!((x_s136 + y_s136) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 >= x_s136))
[L810]   RET         call __var_5 := add~uint256~uint256_Hakka__success(this, msgsender_MSG, msgvalue_MSG, balanceOf_Hakka[this][to_s295], amount_s295);
[L811]   COND FALSE  !(revert)
[L814]               sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_Hakka[this][to_s295];
[L815]               balanceOf_Hakka[this][to_s295] := __var_5;
[L816]               sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_Hakka[this][to_s295];
[L817]               assert { :EventEmitted "Transfer_Hakka" } true;
[L818]               __ret_0_ := true;
[L183]   RET         call __ret_0_ := transferFrom~address~address~uint256_Hakka__success(this, msgsender_MSG, msgvalue_MSG, from_s295, to_s295, amount_s295);
[L184]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((((__ret_0_ == true && balanceOf_Hakka[this][from_s295] == old(balanceOf_Hakka[this][from_s295]) - amount_s295) && balanceOf_Hakka[this][to_s295] == old(balanceOf_Hakka[this][to_s295]) + amount_s295) && allowance_Hakka[this][from_s295][msgsender_MSG] == old(allowance_Hakka[this][from_s295][msgsender_MSG]) - amount_s295) && totalSupply_Hakka[this] == old(totalSupply_Hakka[this])) && balanceOf_Hakka[this][p1] == old(balanceOf_Hakka[this][p1])) && allowance_Hakka[this][p2][p3] == old(allowance_Hakka[this][p2][p3])) && nonces_Hakka[this] == old(nonces_Hakka[this])) && DOMAIN_SEPARATOR_Hakka[this] == old(DOMAIN_SEPARATOR_Hakka[this])) && owner_Ownable[this] == old(owner_Ownable[this]));
[L3]                 revert := revert_hold;
[L1519]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_Hakka(this, msgsender_MSG, msgvalue_MSG, from_s295, to_s295, amount_s295);
[L1542]  RET         call CorralChoice_Hakka(this);

Loop:
[L1542]        assume true;

[2020-11-24 19:15:21,483 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 19:15:21,483 INFO  L82        PathProgramCache]: Analyzing trace with hash 1025604547, now seen corresponding path program 1 times
[2020-11-24 19:15:21,483 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 19:15:21,504 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 19:15:21,523 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 19:15:21,561 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 19:15:21,562 INFO  L82        PathProgramCache]: Analyzing trace with hash 6254, now seen corresponding path program 1 times
[2020-11-24 19:15:21,563 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 19:15:21,564 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 19:15:21,565 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 19:15:21,567 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 19:15:21,567 INFO  L82        PathProgramCache]: Analyzing trace with hash 1728976108, now seen corresponding path program 1 times
[2020-11-24 19:15:21,568 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 19:15:21,595 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 19:15:21,621 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
[2020-11-24 19:15:21,986 WARN  L188               SmtUtils]: Spent 271.00 ms on a formula simplification. DAG size of input: 108 DAG size of output: 107
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #5: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
[2020-11-24 19:15:22,214 WARN  L188               SmtUtils]: Spent 133.00 ms on a formula simplification. DAG size of input: 98 DAG size of output: 93
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #5: 547 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 547 to 1093
[2020-11-24 19:15:22,417 WARN  L188               SmtUtils]: Spent 200.00 ms on a formula simplification. DAG size of input: 87 DAG size of output: 86
[2020-11-24 19:15:22,883 WARN  L188               SmtUtils]: Spent 464.00 ms on a formula simplification. DAG size of input: 190 DAG size of output: 175
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 883 to 1759
Garbage collection #1: 47 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 47 to 89
Garbage collection #2: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #3: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #4: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #5: 673 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 673 to 1327
Garbage collection #6: 1327 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 1327 to 2647
Garbage collection #7: 2647 nodes / 0 free / 0.001s / 0.003s total
Resizing node table from 2647 to 5281
Garbage collection #8: 5281 nodes / 0 free / 0.002s / 0.005s total
Resizing node table from 5281 to 10559
Garbage collection #9: 10559 nodes / 0 free / 0.004s / 0.009s total
Resizing node table from 10559 to 21107
[2020-11-24 19:15:29,015 WARN  L188               SmtUtils]: Spent 5.97 s on a formula simplification. DAG size of input: 236 DAG size of output: 147
[2020-11-24 19:15:30,776 WARN  L188               SmtUtils]: Spent 1.76 s on a formula simplification. DAG size of input: 315 DAG size of output: 274
Garbage collection #1: 101 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 101 to 199
Garbage collection #2: 199 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 199 to 397
Garbage collection #3: 397 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 397 to 787
Garbage collection #4: 787 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 787 to 1571
Garbage collection #5: 1571 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 1571 to 3137
Garbage collection #6: 3137 nodes / 0 free / 0.0s / 0.002s total
Resizing node table from 3137 to 6271
[2020-11-24 19:15:33,738 WARN  L188               SmtUtils]: Spent 2.95 s on a formula simplification. DAG size of input: 269 DAG size of output: 256
[2020-11-24 19:15:36,889 WARN  L188               SmtUtils]: Spent 3.15 s on a formula simplification. DAG size of input: 291 DAG size of output: 276
Garbage collection #1: 101 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 101 to 199
Garbage collection #2: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #3: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #4: 787 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 787 to 1571
Garbage collection #5: 1571 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 1571 to 3137
Garbage collection #6: 3137 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 3137 to 6271
Garbage collection #7: 6271 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 6271 to 12541
Garbage collection #8: 12541 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 12541 to 25073
Garbage collection #1: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #2: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #3: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #4: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #5: 1327 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1327 to 2647
Garbage collection #6: 2647 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2647 to 5281
Garbage collection #7: 5281 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 5281 to 10559
Garbage collection #8: 10559 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 10559 to 21107
[2020-11-24 19:15:44,181 WARN  L188               SmtUtils]: Spent 7.19 s on a formula simplification. DAG size of input: 556 DAG size of output: 216
[2020-11-24 19:15:47,769 WARN  L188               SmtUtils]: Spent 3.59 s on a formula simplification that was a NOOP. DAG size: 355
Garbage collection #1: 137 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 137 to 271
Garbage collection #2: 271 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 271 to 541
Garbage collection #3: 541 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 541 to 1069
Garbage collection #4: 1069 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1069 to 2137
Garbage collection #5: 2137 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2137 to 4273
Garbage collection #6: 4273 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4273 to 8543
Garbage collection #7: 8543 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 8543 to 17077
[2020-11-24 19:15:53,176 WARN  L188               SmtUtils]: Spent 5.37 s on a formula simplification. DAG size of input: 298 DAG size of output: 274
[2020-11-24 19:15:55,973 WARN  L188               SmtUtils]: Spent 2.80 s on a formula simplification that was a NOOP. DAG size: 294
Garbage collection #1: 107 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 107 to 211
Garbage collection #2: 211 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 211 to 421
Garbage collection #3: 421 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 421 to 839
Garbage collection #4: 839 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 839 to 1669
Garbage collection #5: 1669 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1669 to 3331
Garbage collection #6: 3331 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3331 to 6661
Garbage collection #7: 6661 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 6661 to 13313
Garbage collection #8: 13313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13313 to 26597
Garbage collection #1: 71 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 71 to 139
Garbage collection #2: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #3: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #4: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #5: 1093 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1093 to 2179
Garbage collection #6: 2179 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2179 to 4357
Garbage collection #7: 4357 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4357 to 8713
[2020-11-24 19:15:59,141 WARN  L188               SmtUtils]: Spent 3.12 s on a formula simplification. DAG size of input: 270 DAG size of output: 218
[2020-11-24 19:16:01,205 WARN  L188               SmtUtils]: Spent 2.05 s on a formula simplification that was a NOOP. DAG size: 298
Garbage collection #1: 107 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 107 to 211
Garbage collection #2: 211 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 211 to 421
Garbage collection #3: 421 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 421 to 839
Garbage collection #4: 839 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 839 to 1669
Garbage collection #5: 1669 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1669 to 3331
Garbage collection #6: 3331 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3331 to 6661
Garbage collection #7: 6661 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 6661 to 13313
Garbage collection #1: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #2: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #3: 317 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 317 to 631
Garbage collection #4: 631 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 631 to 1259
Garbage collection #5: 1259 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1259 to 2503
Garbage collection #6: 2503 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2503 to 5003
Garbage collection #7: 5003 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 5003 to 9973
Garbage collection #8: 9973 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 9973 to 19937
Garbage collection #9: 19937 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19937 to 39869
Garbage collection #10: 39869 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 39869 to 79699
Garbage collection #11: 79699 nodes / 0 free / 0.002s / 0.002s total
Resizing node table from 79699 to 129671
[2020-11-24 19:16:23,554 WARN  L188               SmtUtils]: Spent 22.21 s on a formula simplification. DAG size of input: 482 DAG size of output: 240
[2020-11-24 19:16:35,174 WARN  L188               SmtUtils]: Spent 11.62 s on a formula simplification. DAG size of input: 322 DAG size of output: 321
Garbage collection #1: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #2: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #3: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #4: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #5: 1759 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1759 to 3517
Garbage collection #6: 3517 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3517 to 7027
Garbage collection #7: 7027 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 7027 to 14051
Garbage collection #8: 14051 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 14051 to 28099
Garbage collection #1: 149 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 149 to 293
Garbage collection #2: 293 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 293 to 577
Garbage collection #3: 577 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 577 to 1153
Garbage collection #4: 1153 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1153 to 2297
Garbage collection #5: 2297 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2297 to 4591
Garbage collection #6: 4591 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4591 to 9181
Garbage collection #7: 9181 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 9181 to 18353
Garbage collection #8: 18353 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 18353 to 36697
Garbage collection #9: 36697 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 36697 to 73387
Garbage collection #10: 73387 nodes / 0 free / 0.002s / 0.003s total
Resizing node table from 73387 to 123379
Garbage collection #11: 123379 nodes / 0 free / 0.003s / 0.006s total
Resizing node table from 123379 to 173359
Garbage collection #12: 173359 nodes / 0 free / 0.004s / 0.01s total
Resizing node table from 173359 to 223339
Garbage collection #13: 223339 nodes / 0 free / 0.005s / 0.015s total
Resizing node table from 223339 to 273323
Garbage collection #14: 273323 nodes / 0 free / 0.005s / 0.02s total
Resizing node table from 273323 to 323273
Garbage collection #15: 323273 nodes / 0 free / 0.006s / 0.026s total
Resizing node table from 323273 to 373273
Garbage collection #16: 373273 nodes / 0 free / 0.007s / 0.033s total
Resizing node table from 373273 to 423259
Garbage collection #17: 423259 nodes / 0 free / 0.008s / 0.041s total
Resizing node table from 423259 to 473257
Garbage collection #18: 473257 nodes / 0 free / 0.009s / 0.05s total
Resizing node table from 473257 to 523219
Garbage collection #19: 523219 nodes / 0 free / 0.01s / 0.06s total
Resizing node table from 523219 to 573197
Garbage collection #20: 573197 nodes / 0 free / 0.012s / 0.072s total
Resizing node table from 573197 to 623171
Garbage collection #21: 623171 nodes / 0 free / 0.012s / 0.084s total
Resizing node table from 623171 to 673157
Garbage collection #22: 673157 nodes / 0 free / 0.013s / 0.097s total
Resizing node table from 673157 to 723157
Garbage collection #23: 723157 nodes / 0 free / 0.014s / 0.111s total
Resizing node table from 723157 to 773153
Garbage collection #24: 773153 nodes / 0 free / 0.015s / 0.126s total
Resizing node table from 773153 to 823153
Garbage collection #25: 823153 nodes / 0 free / 0.016s / 0.142s total
Resizing node table from 823153 to 873139
Garbage collection #26: 873139 nodes / 0 free / 0.018s / 0.16s total
Resizing node table from 873139 to 923137
Garbage collection #27: 923137 nodes / 0 free / 0.019s / 0.179s total
Resizing node table from 923137 to 973129
Garbage collection #28: 973129 nodes / 0 free / 0.02s / 0.199s total
Resizing node table from 973129 to 1023107
Garbage collection #29: 1023107 nodes / 0 free / 0.021s / 0.22s total
Resizing node table from 1023107 to 1073099
Garbage collection #30: 1073099 nodes / 0 free / 0.023s / 0.243s total
Resizing node table from 1073099 to 1123093
Received shutdown request...
Cannot interrupt operation gracefully because timeout expired. Forcing shutdown
