This is Ultimate 0.1.24-f1553f5-m
[2020-11-24 19:30:18,668 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-24 19:30:18,670 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-24 19:30:18,680 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-24 19:30:18,680 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-24 19:30:18,681 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-24 19:30:18,682 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-24 19:30:18,683 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-24 19:30:18,684 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-24 19:30:18,685 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-24 19:30:18,686 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-24 19:30:18,686 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-24 19:30:18,687 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-24 19:30:18,687 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-24 19:30:18,688 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-24 19:30:18,689 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-24 19:30:18,689 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-24 19:30:18,690 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-24 19:30:18,692 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-24 19:30:18,693 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-24 19:30:18,694 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-24 19:30:18,694 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-24 19:30:18,696 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-24 19:30:18,696 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-24 19:30:18,696 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-24 19:30:18,697 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-24 19:30:18,697 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-24 19:30:18,698 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-24 19:30:18,698 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-24 19:30:18,698 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-24 19:30:18,698 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-24 19:30:18,699 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-24 19:30:18,699 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-24 19:30:18,700 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-24 19:30:18,701 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-24 19:30:18,701 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-24 19:30:18,701 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-24 19:30:18,701 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-24 19:30:18,701 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-24 19:30:18,702 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-24 19:30:18,703 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-24 19:30:18,703 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-24 19:30:18,710 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-24 19:30:18,710 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-24 19:30:18,711 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-24 19:30:18,711 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-24 19:30:18,711 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-24 19:30:18,711 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-24 19:30:18,712 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-24 19:30:18,712 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-24 19:30:18,712 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-24 19:30:18,712 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-24 19:30:18,712 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-24 19:30:18,712 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-24 19:30:18,712 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-24 19:30:18,712 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-24 19:30:18,712 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-24 19:30:18,712 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-24 19:30:18,713 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-24 19:30:18,713 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-24 19:30:18,713 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-24 19:30:18,713 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-24 19:30:18,713 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-24 19:30:18,713 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-24 19:30:18,713 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-24 19:30:18,713 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-24 19:30:18,713 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-24 19:30:18,714 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-24 19:30:18,733 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-24 19:30:18,743 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-24 19:30:18,745 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-24 19:30:18,746 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-24 19:30:18,746 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-24 19:30:18,747 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/Hakka_0x0e29e5abbb5fd88e28b2d355774e73bd47de3bcd_transferfrom-self.bpl
[2020-11-24 19:30:18,747 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/Hakka_0x0e29e5abbb5fd88e28b2d355774e73bd47de3bcd_transferfrom-self.bpl'
[2020-11-24 19:30:18,798 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-24 19:30:18,799 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-24 19:30:18,800 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-24 19:30:18,800 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-24 19:30:18,800 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-24 19:30:18,816 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "Hakka_0x0e29e5abbb5fd88e28b2d355774e73bd47de3bcd_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 07:30:18" (1/1) ...
[2020-11-24 19:30:18,817 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "Hakka_0x0e29e5abbb5fd88e28b2d355774e73bd47de3bcd_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 07:30:18" (1/1) ...
[2020-11-24 19:30:18,834 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "Hakka_0x0e29e5abbb5fd88e28b2d355774e73bd47de3bcd_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 07:30:18" (1/1) ...
[2020-11-24 19:30:18,835 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "Hakka_0x0e29e5abbb5fd88e28b2d355774e73bd47de3bcd_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 07:30:18" (1/1) ...
[2020-11-24 19:30:18,848 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "Hakka_0x0e29e5abbb5fd88e28b2d355774e73bd47de3bcd_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 07:30:18" (1/1) ...
[2020-11-24 19:30:18,854 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "Hakka_0x0e29e5abbb5fd88e28b2d355774e73bd47de3bcd_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 07:30:18" (1/1) ...
[2020-11-24 19:30:18,858 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "Hakka_0x0e29e5abbb5fd88e28b2d355774e73bd47de3bcd_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 07:30:18" (1/1) ...
[2020-11-24 19:30:18,863 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-24 19:30:18,864 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-24 19:30:18,864 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-24 19:30:18,866 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-24 19:30:18,870 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "Hakka_0x0e29e5abbb5fd88e28b2d355774e73bd47de3bcd_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 07:30:18" (1/1) ...
[2020-11-24 19:30:18,884 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(Hakka.transferFrom(from, to, value), (p1 != from || p2 != msg.sender) && from == to && value <= balanceOf_Hakka[this][from] && value <= allowance_Hakka[this][from][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_Hakka[this][to] >= 0 && balanceOf_Hakka[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_Hakka[this][from] >= 0 &&  balanceOf_Hakka[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && allowance_Hakka[this][from][msg.sender] >= 0 && allowance_Hakka[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(Hakka.transferFrom(from, to, value), return == true && allowance_Hakka[this][from][msg.sender] == old(allowance_Hakka[this][from][msg.sender]) - value && totalSupply_Hakka[this] == old(totalSupply_Hakka[this]) && balanceOf_Hakka[this] == old(balanceOf_Hakka[this]) && allowance_Hakka[this][p1][p2] == old(allowance_Hakka[this][p1][p2]) && nonces_Hakka[this] == old(nonces_Hakka[this]) && DOMAIN_SEPARATOR_Hakka[this] == old(DOMAIN_SEPARATOR_Hakka[this]) && owner_Ownable[this] == old(owner_Ownable[this]))))
[2020-11-24 19:30:18,889 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(Hakka.transferFrom(from, to, value), (p1 != from || p2 != msg.sender) && from == to && value <= balanceOf_Hakka[this][from] && value <= allowance_Hakka[this][from][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_Hakka[this][to] >= 0 && balanceOf_Hakka[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_Hakka[this][from] >= 0 &&  balanceOf_Hakka[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && allowance_Hakka[this][from][msg.sender] >= 0 && allowance_Hakka[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(Hakka.transferFrom(from, to, value), return == true && allowance_Hakka[this][from][msg.sender] == old(allowance_Hakka[this][from][msg.sender]) - value && totalSupply_Hakka[this] == old(totalSupply_Hakka[this]) && balanceOf_Hakka[this] == old(balanceOf_Hakka[this]) && allowance_Hakka[this][p1][p2] == old(allowance_Hakka[this][p1][p2]) && nonces_Hakka[this] == old(nonces_Hakka[this]) && DOMAIN_SEPARATOR_Hakka[this] == old(DOMAIN_SEPARATOR_Hakka[this]) && owner_Ownable[this] == old(owner_Ownable[this]))))
[2020-11-24 19:30:18,896 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(Hakka.transferFrom(from, to, value), (p1 != from || p2 != msg.sender) && from == to && value <= balanceOf_Hakka[this][from] && value <= allowance_Hakka[this][from][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_Hakka[this][to] >= 0 && balanceOf_Hakka[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_Hakka[this][from] >= 0 &&  balanceOf_Hakka[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && allowance_Hakka[this][from][msg.sender] >= 0 && allowance_Hakka[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(Hakka.transferFrom(from, to, value), return == true && allowance_Hakka[this][from][msg.sender] == old(allowance_Hakka[this][from][msg.sender]) - value && totalSupply_Hakka[this] == old(totalSupply_Hakka[this]) && balanceOf_Hakka[this] == old(balanceOf_Hakka[this]) && allowance_Hakka[this][p1][p2] == old(allowance_Hakka[this][p1][p2]) && nonces_Hakka[this] == old(nonces_Hakka[this]) && DOMAIN_SEPARATOR_Hakka[this] == old(DOMAIN_SEPARATOR_Hakka[this]) && owner_Ownable[this] == old(owner_Ownable[this]))))
[2020-11-24 19:30:18,901 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( ( ( ( ( p1!=from_s295 || p2!=msg.sender ) && from_s295==to_s295 ) && amount_s295<=balanceOf_Hakka[this][from_s295] ) && amount_s295<=allowance_Hakka[this][from_s295][msg.sender] ) && amount_s295>=0 ) && amount_s295<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && balanceOf_Hakka[this][to_s295]>=0 ) && balanceOf_Hakka[this][to_s295]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && balanceOf_Hakka[this][from_s295]>=0 ) && balanceOf_Hakka[this][from_s295]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && allowance_Hakka[this][from_s295][msg.sender]>=0 ) && allowance_Hakka[this][from_s295][msg.sender]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICOR,BinaryExpression[COMPNEQ,IdentifierExpression[p1,GLOBAL],IdentifierExpression[from_s295,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Hakka>]],BinaryExpression[COMPNEQ,IdentifierExpression[p2,GLOBAL],IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Hakka>]]],BinaryExpression[COMPEQ,IdentifierExpression[from_s295,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Hakka>],IdentifierExpression[to_s295,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Hakka>]]],BinaryExpression[COMPLEQ,IdentifierExpression[amount_s295,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Hakka>],ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_Hakka,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Hakka>]]],[IdentifierExpression[from_s295,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Hakka>]]]]],BinaryExpression[COMPLEQ,IdentifierExpression[amount_s295,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Hakka>],ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowance_Hakka,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Hakka>]]],[IdentifierExpression[from_s295,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Hakka>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Hakka>]]]]],BinaryExpression[COMPGEQ,IdentifierExpression[amount_s295,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Hakka>],IntegerLiteral[0]]],BinaryExpression[COMPLT,IdentifierExpression[amount_s295,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Hakka>],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_Hakka,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Hakka>]]],[IdentifierExpression[to_s295,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Hakka>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_Hakka,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Hakka>]]],[IdentifierExpression[to_s295,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Hakka>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_Hakka,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Hakka>]]],[IdentifierExpression[from_s295,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Hakka>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_Hakka,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Hakka>]]],[IdentifierExpression[from_s295,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Hakka>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowance_Hakka,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Hakka>]]],[IdentifierExpression[from_s295,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Hakka>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Hakka>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowance_Hakka,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Hakka>]]],[IdentifierExpression[from_s295,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Hakka>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Hakka>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]]
[2020-11-24 19:30:18,904 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( __ret_0_==true && allowance_Hakka[this][from_s295][msg.sender]==( ( old(allowance_Hakka[this][from_s295][msg.sender]) ) - amount_s295 ) ) && totalSupply_Hakka[this]==( old(totalSupply_Hakka[this]) ) ) && balanceOf_Hakka[this]==( old(balanceOf_Hakka[this]) ) ) && allowance_Hakka[this][p1][p2]==( old(allowance_Hakka[this][p1][p2]) ) ) && nonces_Hakka[this]==( old(nonces_Hakka[this]) ) ) && DOMAIN_SEPARATOR_Hakka[this]==( old(DOMAIN_SEPARATOR_Hakka[this]) ) ) && owner_Ownable[this]==( old(owner_Ownable[this]) ) ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[__ret_0_,<IMPLEMENTATION_OUTPARAM,transferFrom~address~address~uint256_Hakka>],BooleanLiteral[true]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowance_Hakka,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Hakka>]]],[IdentifierExpression[from_s295,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Hakka>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Hakka>]]],BinaryExpression[ARITHMINUS,UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowance_Hakka,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Hakka>]]],[IdentifierExpression[from_s295,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Hakka>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Hakka>]]]],IdentifierExpression[amount_s295,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Hakka>]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[totalSupply_Hakka,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Hakka>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[totalSupply_Hakka,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Hakka>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[balanceOf_Hakka,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Hakka>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[balanceOf_Hakka,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Hakka>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowance_Hakka,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Hakka>]]],[IdentifierExpression[p1,GLOBAL]]],[IdentifierExpression[p2,GLOBAL]]],UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowance_Hakka,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Hakka>]]],[IdentifierExpression[p1,GLOBAL]]],[IdentifierExpression[p2,GLOBAL]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[nonces_Hakka,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Hakka>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[nonces_Hakka,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Hakka>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[DOMAIN_SEPARATOR_Hakka,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Hakka>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[DOMAIN_SEPARATOR_Hakka,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Hakka>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[owner_Ownable,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Hakka>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[owner_Ownable,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Hakka>]]]]]]
[2020-11-24 19:30:18,907 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(Hakka.transferFrom(from, to, value), (p1 != from || p2 != msg.sender) && from == to && value <= balanceOf_Hakka[this][from] && value <= allowance_Hakka[this][from][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_Hakka[this][to] >= 0 && balanceOf_Hakka[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_Hakka[this][from] >= 0 &&  balanceOf_Hakka[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && allowance_Hakka[this][from][msg.sender] >= 0 && allowance_Hakka[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(Hakka.transferFrom(from, to, value), return == true && allowance_Hakka[this][from][msg.sender] == old(allowance_Hakka[this][from][msg.sender]) - value && totalSupply_Hakka[this] == old(totalSupply_Hakka[this]) && balanceOf_Hakka[this] == old(balanceOf_Hakka[this]) && allowance_Hakka[this][p1][p2] == old(allowance_Hakka[this][p1][p2]) && nonces_Hakka[this] == old(nonces_Hakka[this]) && DOMAIN_SEPARATOR_Hakka[this] == old(DOMAIN_SEPARATOR_Hakka[this]) && owner_Ownable[this] == old(owner_Ownable[this]))))
[2020-11-24 19:30:18,907 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_transferFrom_Hakka0) ==> ( <>AP(success_transferFrom_Hakka0) ) ) )
Executed UtopiaSpecLang
[2020-11-24 19:30:18,912 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 07:30:18 PropertyContainer
[2020-11-24 19:30:18,912 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-24 19:30:18,912 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-24 19:30:18,912 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-24 19:30:18,912 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-24 19:30:18,913 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hakka_0x0e29e5abbb5fd88e28b2d355774e73bd47de3bcd_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 07:30:18" (1/2) ...
[2020-11-24 19:30:18,913 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-24 19:30:18,914 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-24 19:30:18,920 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 07:30:18" (2/2) ...
[2020-11-24 19:30:18,920 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-24 19:30:18,921 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-24 19:30:18,921 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-24 19:30:18,921 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-24 19:30:18,921 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hakka_0x0e29e5abbb5fd88e28b2d355774e73bd47de3bcd_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 07:30:18" (1/2) ...
[2020-11-24 19:30:18,973 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-24 19:30:18,973 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_Hakka__success
[2020-11-24 19:30:18,973 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_Hakka__success
[2020-11-24 19:30:18,973 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_Hakka
[2020-11-24 19:30:18,973 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_Hakka
[2020-11-24 19:30:18,974 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_Hakka
[2020-11-24 19:30:18,974 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_Hakka
[2020-11-24 19:30:18,974 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_Hakka
[2020-11-24 19:30:18,974 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_Hakka
[2020-11-24 19:30:18,974 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_Hakka
[2020-11-24 19:30:18,974 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_Hakka
[2020-11-24 19:30:18,974 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_Hakka
[2020-11-24 19:30:18,974 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_Hakka
[2020-11-24 19:30:18,974 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_Hakka
[2020-11-24 19:30:18,974 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_Hakka
[2020-11-24 19:30:18,974 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-24 19:30:18,975 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-24 19:30:18,975 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-24 19:30:18,975 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__success
[2020-11-24 19:30:18,975 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_Ownable
[2020-11-24 19:30:18,975 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_Ownable
[2020-11-24 19:30:18,975 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ApproveAndCallFallBack
[2020-11-24 19:30:18,975 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ApproveAndCallFallBack
[2020-11-24 19:30:18,975 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_Hakka
[2020-11-24 19:30:18,976 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-24 19:30:18,976 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-24 19:30:18,976 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_Hakka__fail
[2020-11-24 19:30:18,976 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_Hakka__fail
[2020-11-24 19:30:18,976 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_Hakka__success
[2020-11-24 19:30:18,976 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_Hakka__fail
[2020-11-24 19:30:18,976 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_Hakka__success
[2020-11-24 19:30:18,976 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_Hakka__fail
[2020-11-24 19:30:18,976 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_Hakka__success
[2020-11-24 19:30:18,976 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_Hakka__fail
[2020-11-24 19:30:18,976 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_Hakka__success
[2020-11-24 19:30:18,976 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_Hakka__fail
[2020-11-24 19:30:18,976 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_Hakka__success
[2020-11-24 19:30:18,977 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_Hakka__fail
[2020-11-24 19:30:18,977 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_Hakka__success
[2020-11-24 19:30:18,977 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_Hakka__fail
[2020-11-24 19:30:18,977 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-24 19:30:18,977 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-24 19:30:18,977 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-24 19:30:18,977 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__fail
[2020-11-24 19:30:18,977 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-24 19:30:18,977 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-24 19:30:18,977 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_Hakka__fail
[2020-11-24 19:30:18,977 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_Hakka__success
[2020-11-24 19:30:18,977 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_Hakka__fail
[2020-11-24 19:30:18,977 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_Hakka__success
[2020-11-24 19:30:18,977 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_Hakka__fail
[2020-11-24 19:30:18,978 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_Hakka__success
[2020-11-24 19:30:18,978 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_Hakka__fail
[2020-11-24 19:30:18,978 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_Hakka__success
[2020-11-24 19:30:18,978 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_Hakka__fail
[2020-11-24 19:30:18,978 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_Hakka__success
[2020-11-24 19:30:18,978 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_Hakka__fail
[2020-11-24 19:30:18,978 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_Hakka__success
[2020-11-24 19:30:18,978 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_Hakka__fail
[2020-11-24 19:30:18,978 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_Hakka__success
[2020-11-24 19:30:18,978 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_Hakka__fail
[2020-11-24 19:30:18,978 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_Hakka__success
[2020-11-24 19:30:18,978 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-24 19:30:18,978 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-24 19:30:18,979 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-24 19:30:18,979 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-24 19:30:18,979 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-24 19:30:18,979 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-24 19:30:18,979 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__fail
[2020-11-24 19:30:18,979 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__success
[2020-11-24 19:30:18,979 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_Ownable
[2020-11-24 19:30:18,979 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_Ownable
[2020-11-24 19:30:18,979 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ApproveAndCallFallBack
[2020-11-24 19:30:18,979 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ApproveAndCallFallBack
[2020-11-24 19:30:18,979 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_Hakka
[2020-11-24 19:30:18,979 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-24 19:30:18,979 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-24 19:30:18,980 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-24 19:30:19,132 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 19:30:19,200 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 19:30:19,200 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 19:30:19,201 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 19:30:19,349 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-24 19:30:19,349 INFO  L286             CfgBuilder]: Removed 3 assue(true) statements.
[2020-11-24 19:30:19,350 INFO  L202        PluginConnector]: Adding new model Hakka_0x0e29e5abbb5fd88e28b2d355774e73bd47de3bcd_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 07:30:19 BoogieIcfgContainer
[2020-11-24 19:30:19,350 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 07:30:18" (2/2) ...
[2020-11-24 19:30:19,350 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-24 19:30:19,351 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@7b495977 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 07:30:19, skipping insertion in model container
[2020-11-24 19:30:19,351 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-24 19:30:19,351 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-24 19:30:19,351 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-24 19:30:19,352 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-24 19:30:19,352 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hakka_0x0e29e5abbb5fd88e28b2d355774e73bd47de3bcd_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 07:30:18" (1/3) ...
[2020-11-24 19:30:19,353 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@11210926 and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 07:30:19, skipping insertion in model container
[2020-11-24 19:30:19,353 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 07:30:18" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-24 19:30:19,388 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 07:30:19 NWAContainer
[2020-11-24 19:30:19,388 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-24 19:30:19,388 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-24 19:30:19,389 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-24 19:30:19,390 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-24 19:30:19,391 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hakka_0x0e29e5abbb5fd88e28b2d355774e73bd47de3bcd_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 07:30:19" (3/4) ...
[2020-11-24 19:30:19,392 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@32ac3ec9 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 07:30:19, skipping insertion in model container
[2020-11-24 19:30:19,392 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 07:30:19" (4/4) ...
[2020-11-24 19:30:19,396 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-24 19:30:19,398 INFO  L110   BuchiProductObserver]: Initial RCFG 525 locations, 624 edges
[2020-11-24 19:30:19,398 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-24 19:30:19,407 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-24 19:30:20,097 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-24 19:30:20,100 INFO  L110   BuchiProductObserver]: BuchiProgram size 1204 locations, 1998 edges
[2020-11-24 19:30:20,100 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 07:30:20 BoogieIcfgContainer
[2020-11-24 19:30:20,100 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-24 19:30:20,100 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-24 19:30:20,101 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-24 19:30:20,102 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-24 19:30:20,103 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 07:30:20" (1/1) ...
[2020-11-24 19:30:20,141 INFO  L313           BlockEncoder]: Initial Icfg 1204 locations, 1998 edges
[2020-11-24 19:30:20,141 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-24 19:30:20,142 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-24 19:30:20,142 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-24 19:30:20,142 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-24 19:30:20,150 INFO  L70    emoveInfeasibleEdges]: Removed 30 edges and 9 locations because of local infeasibility
[2020-11-24 19:30:20,154 INFO  L70        RemoveSinkStates]: Removed 2 edges and 1 locations by removing sink states
[2020-11-24 19:30:20,159 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-24 19:30:20,161 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-24 19:30:20,162 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-24 19:30:20,163 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-24 19:30:20,165 INFO  L313           BlockEncoder]: Encoded RCFG 1184 locations, 1952 edges
[2020-11-24 19:30:20,166 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 24.11 07:30:20 BasicIcfg
[2020-11-24 19:30:20,166 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-24 19:30:20,166 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-24 19:30:20,166 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-24 19:30:20,169 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-24 19:30:20,169 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 19:30:20,169 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hakka_0x0e29e5abbb5fd88e28b2d355774e73bd47de3bcd_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 07:30:18" (1/6) ...
[2020-11-24 19:30:20,171 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@7ecbea33 and model type Hakka_0x0e29e5abbb5fd88e28b2d355774e73bd47de3bcd_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 24.11 07:30:20, skipping insertion in model container
[2020-11-24 19:30:20,171 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 19:30:20,171 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 07:30:18" (2/6) ...
[2020-11-24 19:30:20,172 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@7ecbea33 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 24.11 07:30:20, skipping insertion in model container
[2020-11-24 19:30:20,172 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 19:30:20,172 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hakka_0x0e29e5abbb5fd88e28b2d355774e73bd47de3bcd_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 07:30:19" (3/6) ...
[2020-11-24 19:30:20,172 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@7ecbea33 and model type Hakka_0x0e29e5abbb5fd88e28b2d355774e73bd47de3bcd_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 24.11 07:30:20, skipping insertion in model container
[2020-11-24 19:30:20,172 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 19:30:20,172 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 07:30:19" (4/6) ...
[2020-11-24 19:30:20,172 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@7ecbea33 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 24.11 07:30:20, skipping insertion in model container
[2020-11-24 19:30:20,172 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 19:30:20,173 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 07:30:20" (5/6) ...
[2020-11-24 19:30:20,173 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@7ecbea33 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 24.11 07:30:20, skipping insertion in model container
[2020-11-24 19:30:20,173 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 19:30:20,173 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 24.11 07:30:20" (6/6) ...
[2020-11-24 19:30:20,174 INFO  L404   chiAutomizerObserver]: Analyzing ICFG Hakka_0x0e29e5abbb5fd88e28b2d355774e73bd47de3bcd_transferfrom-self.bpl_BEv2
[2020-11-24 19:30:20,213 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-24 19:30:20,214 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-24 19:30:20,214 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-24 19:30:20,214 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-24 19:30:20,214 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-24 19:30:20,214 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-24 19:30:20,214 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-24 19:30:20,214 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-24 19:30:20,214 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-24 19:30:20,231 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1184 states.
[2020-11-24 19:30:20,277 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 19:30:20,277 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 19:30:20,277 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 19:30:20,286 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 19:30:20,286 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
[2020-11-24 19:30:20,286 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-24 19:30:20,286 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1184 states.
[2020-11-24 19:30:20,296 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 19:30:20,296 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 19:30:20,296 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 19:30:20,298 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 19:30:20,298 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L3]                 success_transferFrom_Hakka0 := false;
[L3]                 call_transferFrom_Hakka0 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L1537]              assume null == 0;
[L1538]  CALL        call this := FreshRefGenerator__success();
[L681]               havoc newRef;
[L682]               assume Alloc[newRef] == false;
[L683]               Alloc[newRef] := true;
[L684]               assume newRef != null;
[L1538]  RET         call this := FreshRefGenerator__success();
[L1539]              assume now >= 0;
[L1540]              assume DType[this] == Hakka;
[L1541]              assume !revert && gas >= 0;
[L1542]  CALL        call CorralChoice_Hakka(this);
[L1436]              havoc msgsender_MSG;
[L1437]              havoc msgvalue_MSG;
[L1438]              havoc choice;
[L1439]              havoc __ret_0_owner;
[L1440]              havoc newOwner_s56;
[L1441]              havoc __ret_0_name;
[L1442]              havoc __ret_0_symbol;
[L1443]              havoc __ret_0_version;
[L1444]              havoc __ret_0_decimals;
[L1445]              havoc __ret_0_totalSupply;
[L1446]              havoc arg589_s0;
[L1447]              havoc __ret_0_balanceOf;
[L1448]              havoc arg590_s0;
[L1449]              havoc arg591_s0;
[L1450]              havoc __ret_0_allowance;
[L1451]              havoc arg592_s0;
[L1452]              havoc __ret_0_nonces;
[L1453]              havoc __ret_0_DOMAIN_SEPARATOR;
[L1454]              havoc __ret_0_PERMIT_TYPEHASH;
[L1455]              havoc chainId__s193;
[L1456]              havoc to_s210;
[L1457]              havoc amount_s210;
[L1458]              havoc __ret_0_transfer;
[L1459]              havoc from_s295;
[L1460]              havoc to_s295;
[L1461]              havoc amount_s295;
[L1462]              havoc __ret_0_transferFrom;
[L1463]              havoc to_s331;
[L1464]              havoc amount_s331;
[L1465]              havoc from_s408;
[L1466]              havoc amount_s408;
[L1467]              havoc spender_s436;
[L1468]              havoc amount_s436;
[L1469]              havoc __ret_0_approve;
[L1470]              havoc spender_s479;
[L1471]              havoc amount_s479;
[L1472]              havoc data_s479;
[L1473]              havoc __ret_0_approveAndCall;
[L1474]              havoc holder_s586;
[L1475]              havoc spender_s586;
[L1476]              havoc nonce_s586;
[L1477]              havoc expiry_s586;
[L1478]              havoc allowed_s586;
[L1479]              havoc v_s586;
[L1480]              havoc r_s586;
[L1481]              havoc s_s586;
[L1482]              havoc tmpNow;
[L1483]              havoc gas;
[L1484]              assume gas > 4000000 && gas <= 8000000;
[L1485]              tmpNow := now;
[L1486]              havoc now;
[L1487]              assume now > tmpNow;
[L1488]              assume msgsender_MSG != null;
[L1489]  COND TRUE   choice == 6
[L1490]              gas := gas - 21000;
[L1491]  COND FALSE  !(gas >= 0)
[L1542]  RET         call CorralChoice_Hakka(this);

Loop:
[L1542]        assume true;

[2020-11-24 19:30:20,315 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 19:30:20,315 INFO  L82        PathProgramCache]: Analyzing trace with hash -309355455, now seen corresponding path program 1 times
[2020-11-24 19:30:20,320 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 19:30:20,341 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 19:30:20,390 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 19:30:20,392 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 19:30:20,392 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-24 19:30:20,396 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 19:30:20,408 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-24 19:30:20,408 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-24 19:30:20,410 INFO  L87              Difference]: Start difference. First operand 1184 states. Second operand 3 states.
[2020-11-24 19:30:20,595 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 19:30:20,595 INFO  L93              Difference]: Finished difference Result 596 states and 654 transitions.
[2020-11-24 19:30:20,596 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-24 19:30:20,597 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 596 states and 654 transitions.
[2020-11-24 19:30:20,602 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 19:30:20,608 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 596 states to 212 states and 229 transitions.
[2020-11-24 19:30:20,609 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 4
[2020-11-24 19:30:20,610 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 148
[2020-11-24 19:30:20,610 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 212 states and 229 transitions.
[2020-11-24 19:30:20,613 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 19:30:20,613 INFO  L728         BuchiCegarLoop]: Abstraction has 212 states and 229 transitions.
[2020-11-24 19:30:20,627 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 212 states and 229 transitions.
[2020-11-24 19:30:20,641 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 212 to 212.
[2020-11-24 19:30:20,641 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 212 states.
[2020-11-24 19:30:20,642 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 212 states to 212 states and 229 transitions.
[2020-11-24 19:30:20,643 INFO  L751         BuchiCegarLoop]: Abstraction has 212 states and 229 transitions.
[2020-11-24 19:30:20,643 INFO  L631         BuchiCegarLoop]: Abstraction has 212 states and 229 transitions.
[2020-11-24 19:30:20,643 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-24 19:30:20,643 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 212 states and 229 transitions.
[2020-11-24 19:30:20,645 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 19:30:20,645 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 19:30:20,645 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 19:30:20,646 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 19:30:20,646 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L3]                 success_transferFrom_Hakka0 := false;
[L3]                 call_transferFrom_Hakka0 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L1537]              assume null == 0;
[L1538]  CALL        call this := FreshRefGenerator__success();
[L681]               havoc newRef;
[L682]               assume Alloc[newRef] == false;
[L683]               Alloc[newRef] := true;
[L684]               assume newRef != null;
[L1538]  RET         call this := FreshRefGenerator__success();
[L1539]              assume now >= 0;
[L1540]              assume DType[this] == Hakka;
[L1541]              assume !revert && gas >= 0;
[L1542]  CALL        call CorralChoice_Hakka(this);
[L1436]              havoc msgsender_MSG;
[L1437]              havoc msgvalue_MSG;
[L1438]              havoc choice;
[L1439]              havoc __ret_0_owner;
[L1440]              havoc newOwner_s56;
[L1441]              havoc __ret_0_name;
[L1442]              havoc __ret_0_symbol;
[L1443]              havoc __ret_0_version;
[L1444]              havoc __ret_0_decimals;
[L1445]              havoc __ret_0_totalSupply;
[L1446]              havoc arg589_s0;
[L1447]              havoc __ret_0_balanceOf;
[L1448]              havoc arg590_s0;
[L1449]              havoc arg591_s0;
[L1450]              havoc __ret_0_allowance;
[L1451]              havoc arg592_s0;
[L1452]              havoc __ret_0_nonces;
[L1453]              havoc __ret_0_DOMAIN_SEPARATOR;
[L1454]              havoc __ret_0_PERMIT_TYPEHASH;
[L1455]              havoc chainId__s193;
[L1456]              havoc to_s210;
[L1457]              havoc amount_s210;
[L1458]              havoc __ret_0_transfer;
[L1459]              havoc from_s295;
[L1460]              havoc to_s295;
[L1461]              havoc amount_s295;
[L1462]              havoc __ret_0_transferFrom;
[L1463]              havoc to_s331;
[L1464]              havoc amount_s331;
[L1465]              havoc from_s408;
[L1466]              havoc amount_s408;
[L1467]              havoc spender_s436;
[L1468]              havoc amount_s436;
[L1469]              havoc __ret_0_approve;
[L1470]              havoc spender_s479;
[L1471]              havoc amount_s479;
[L1472]              havoc data_s479;
[L1473]              havoc __ret_0_approveAndCall;
[L1474]              havoc holder_s586;
[L1475]              havoc spender_s586;
[L1476]              havoc nonce_s586;
[L1477]              havoc expiry_s586;
[L1478]              havoc allowed_s586;
[L1479]              havoc v_s586;
[L1480]              havoc r_s586;
[L1481]              havoc s_s586;
[L1482]              havoc tmpNow;
[L1483]              havoc gas;
[L1484]              assume gas > 4000000 && gas <= 8000000;
[L1485]              tmpNow := now;
[L1486]              havoc now;
[L1487]              assume now > tmpNow;
[L1488]              assume msgsender_MSG != null;
[L1489]  COND FALSE  !(choice == 6)
[L1495]  COND FALSE  !(choice == 5)
[L1501]  COND FALSE  !(choice == 4)
[L1507]  COND FALSE  !(choice == 3)
[L1514]  COND TRUE   choice == 2
[L1515]              gas := gas - 21000;
[L1516]  COND TRUE   gas >= 0
[L1517]              assume amount_s295 >= 0 && amount_s295 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1518]              assume msgvalue_MSG == 0;
[L1519]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_Hakka(this, msgsender_MSG, msgvalue_MSG, from_s295, to_s295, amount_s295);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != from_s295 || p2 != msgsender_MSG) && from_s295 == to_s295) && amount_s295 <= balanceOf_Hakka[this][from_s295]) && amount_s295 <= allowance_Hakka[this][from_s295][msgsender_MSG]) && amount_s295 >= 0) && amount_s295 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_Hakka[this][to_s295] >= 0) && balanceOf_Hakka[this][to_s295] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_Hakka[this][from_s295] >= 0) && balanceOf_Hakka[this][from_s295] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowance_Hakka[this][from_s295][msgsender_MSG] >= 0) && allowance_Hakka[this][from_s295][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_Hakka0 := true;
[L3]                 call_transferFrom_Hakka0 := false;
[L3]                 revert := revert_hold;
[L154]               havoc __exception;
[L155]               revert := false;
[L156]   COND FALSE  !(__exception)
[L183]   CALL        call __ret_0_ := transferFrom~address~address~uint256_Hakka__success(this, msgsender_MSG, msgvalue_MSG, from_s295, to_s295, amount_s295);
[L789]               __var_2 := -1 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L790]   COND FALSE  !(from_s295 != msgsender_MSG && allowance_Hakka[this][from_s295][msgsender_MSG] != -1 % 115792089237316195423570985008687907853269984665640564039457584007913129639936)
[L799]   COND TRUE   !(balanceOf_Hakka[this][from_s295] >= amount_s295)
[L800]               revert := true;
[L183]   RET         call __ret_0_ := transferFrom~address~address~uint256_Hakka__success(this, msgsender_MSG, msgvalue_MSG, from_s295, to_s295, amount_s295);
[L184]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((__ret_0_ == true && allowance_Hakka[this][from_s295][msgsender_MSG] == old(allowance_Hakka[this][from_s295][msgsender_MSG]) - amount_s295) && totalSupply_Hakka[this] == old(totalSupply_Hakka[this])) && balanceOf_Hakka[this] == old(balanceOf_Hakka[this])) && allowance_Hakka[this][p1][p2] == old(allowance_Hakka[this][p1][p2])) && nonces_Hakka[this] == old(nonces_Hakka[this])) && DOMAIN_SEPARATOR_Hakka[this] == old(DOMAIN_SEPARATOR_Hakka[this])) && owner_Ownable[this] == old(owner_Ownable[this]));
[L3]                 revert := revert_hold;
[L1519]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_Hakka(this, msgsender_MSG, msgvalue_MSG, from_s295, to_s295, amount_s295);
[L1542]  RET         call CorralChoice_Hakka(this);

Loop:
[L1542]        assume true;

[2020-11-24 19:30:20,649 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 19:30:20,650 INFO  L82        PathProgramCache]: Analyzing trace with hash -809468185, now seen corresponding path program 1 times
[2020-11-24 19:30:20,651 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 19:30:20,664 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 19:30:20,684 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 19:30:20,684 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 19:30:20,684 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-24 19:30:20,686 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 19:30:20,686 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-24 19:30:20,686 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-24 19:30:20,686 INFO  L87              Difference]: Start difference. First operand 212 states and 229 transitions. cyclomatic complexity: 18 Second operand 3 states.
[2020-11-24 19:30:20,695 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 19:30:20,695 INFO  L93              Difference]: Finished difference Result 247 states and 265 transitions.
[2020-11-24 19:30:20,695 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-24 19:30:20,696 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 247 states and 265 transitions.
[2020-11-24 19:30:20,698 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 2
[2020-11-24 19:30:20,699 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 247 states to 230 states and 242 transitions.
[2020-11-24 19:30:20,700 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 163
[2020-11-24 19:30:20,700 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 168
[2020-11-24 19:30:20,700 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 230 states and 242 transitions.
[2020-11-24 19:30:20,701 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 19:30:20,701 INFO  L728         BuchiCegarLoop]: Abstraction has 230 states and 242 transitions.
[2020-11-24 19:30:20,702 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 230 states and 242 transitions.
[2020-11-24 19:30:20,707 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 230 to 219.
[2020-11-24 19:30:20,707 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 219 states.
[2020-11-24 19:30:20,708 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 219 states to 219 states and 231 transitions.
[2020-11-24 19:30:20,708 INFO  L751         BuchiCegarLoop]: Abstraction has 219 states and 231 transitions.
[2020-11-24 19:30:20,708 INFO  L631         BuchiCegarLoop]: Abstraction has 219 states and 231 transitions.
[2020-11-24 19:30:20,708 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-24 19:30:20,708 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 219 states and 231 transitions.
[2020-11-24 19:30:20,709 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 19:30:20,709 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 19:30:20,709 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 19:30:20,711 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 19:30:20,711 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L3]                 success_transferFrom_Hakka0 := false;
[L3]                 call_transferFrom_Hakka0 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L1537]              assume null == 0;
[L1538]  CALL        call this := FreshRefGenerator__success();
[L681]               havoc newRef;
[L682]               assume Alloc[newRef] == false;
[L683]               Alloc[newRef] := true;
[L684]               assume newRef != null;
[L1538]  RET         call this := FreshRefGenerator__success();
[L1539]              assume now >= 0;
[L1540]              assume DType[this] == Hakka;
[L1541]              assume !revert && gas >= 0;
[L1542]  CALL        call CorralChoice_Hakka(this);
[L1436]              havoc msgsender_MSG;
[L1437]              havoc msgvalue_MSG;
[L1438]              havoc choice;
[L1439]              havoc __ret_0_owner;
[L1440]              havoc newOwner_s56;
[L1441]              havoc __ret_0_name;
[L1442]              havoc __ret_0_symbol;
[L1443]              havoc __ret_0_version;
[L1444]              havoc __ret_0_decimals;
[L1445]              havoc __ret_0_totalSupply;
[L1446]              havoc arg589_s0;
[L1447]              havoc __ret_0_balanceOf;
[L1448]              havoc arg590_s0;
[L1449]              havoc arg591_s0;
[L1450]              havoc __ret_0_allowance;
[L1451]              havoc arg592_s0;
[L1452]              havoc __ret_0_nonces;
[L1453]              havoc __ret_0_DOMAIN_SEPARATOR;
[L1454]              havoc __ret_0_PERMIT_TYPEHASH;
[L1455]              havoc chainId__s193;
[L1456]              havoc to_s210;
[L1457]              havoc amount_s210;
[L1458]              havoc __ret_0_transfer;
[L1459]              havoc from_s295;
[L1460]              havoc to_s295;
[L1461]              havoc amount_s295;
[L1462]              havoc __ret_0_transferFrom;
[L1463]              havoc to_s331;
[L1464]              havoc amount_s331;
[L1465]              havoc from_s408;
[L1466]              havoc amount_s408;
[L1467]              havoc spender_s436;
[L1468]              havoc amount_s436;
[L1469]              havoc __ret_0_approve;
[L1470]              havoc spender_s479;
[L1471]              havoc amount_s479;
[L1472]              havoc data_s479;
[L1473]              havoc __ret_0_approveAndCall;
[L1474]              havoc holder_s586;
[L1475]              havoc spender_s586;
[L1476]              havoc nonce_s586;
[L1477]              havoc expiry_s586;
[L1478]              havoc allowed_s586;
[L1479]              havoc v_s586;
[L1480]              havoc r_s586;
[L1481]              havoc s_s586;
[L1482]              havoc tmpNow;
[L1483]              havoc gas;
[L1484]              assume gas > 4000000 && gas <= 8000000;
[L1485]              tmpNow := now;
[L1486]              havoc now;
[L1487]              assume now > tmpNow;
[L1488]              assume msgsender_MSG != null;
[L1489]  COND FALSE  !(choice == 6)
[L1495]  COND FALSE  !(choice == 5)
[L1501]  COND FALSE  !(choice == 4)
[L1507]  COND FALSE  !(choice == 3)
[L1514]  COND TRUE   choice == 2
[L1515]              gas := gas - 21000;
[L1516]  COND TRUE   gas >= 0
[L1517]              assume amount_s295 >= 0 && amount_s295 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1518]              assume msgvalue_MSG == 0;
[L1519]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_Hakka(this, msgsender_MSG, msgvalue_MSG, from_s295, to_s295, amount_s295);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != from_s295 || p2 != msgsender_MSG) && from_s295 == to_s295) && amount_s295 <= balanceOf_Hakka[this][from_s295]) && amount_s295 <= allowance_Hakka[this][from_s295][msgsender_MSG]) && amount_s295 >= 0) && amount_s295 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_Hakka[this][to_s295] >= 0) && balanceOf_Hakka[this][to_s295] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_Hakka[this][from_s295] >= 0) && balanceOf_Hakka[this][from_s295] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowance_Hakka[this][from_s295][msgsender_MSG] >= 0) && allowance_Hakka[this][from_s295][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_Hakka0 := true;
[L3]                 call_transferFrom_Hakka0 := false;
[L3]                 revert := revert_hold;
[L154]               havoc __exception;
[L155]               revert := false;
[L156]   COND TRUE   __exception
[L157]               __tmp__Balance := Balance;
[L158]               __tmp__DType := DType;
[L159]               __tmp__Alloc := Alloc;
[L160]               __tmp__balance_ADDR := balance_ADDR;
[L161]               __tmp__M_Ref_int := M_Ref_int;
[L162]               __tmp__sum_balanceOf0 := sum_balanceOf0;
[L163]               __tmp__alloc_allowance_Hakka_lvl0 := alloc_allowance_Hakka_lvl0;
[L164]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L165]               __tmp__sum_allowance1 := sum_allowance1;
[L166]               __tmp__sum_nonces2 := sum_nonces2;
[L167]               __tmp__Length := Length;
[L168]               __tmp__now := now;
[L169]               __tmp__owner_Ownable := owner_Ownable;
[L170]               __tmp__name_Hakka := name_Hakka;
[L171]               __tmp__symbol_Hakka := symbol_Hakka;
[L172]               __tmp__version_Hakka := version_Hakka;
[L173]               __tmp__decimals_Hakka := decimals_Hakka;
[L174]               __tmp__totalSupply_Hakka := totalSupply_Hakka;
[L175]               __tmp__balanceOf_Hakka := balanceOf_Hakka;
[L176]               __tmp__allowance_Hakka := allowance_Hakka;
[L177]               __tmp__nonces_Hakka := nonces_Hakka;
[L178]               __tmp__DOMAIN_SEPARATOR_Hakka := DOMAIN_SEPARATOR_Hakka;
[L179]               __tmp__PERMIT_TYPEHASH_Hakka := PERMIT_TYPEHASH_Hakka;
[L180]   CALL        call __ret_0_ := transferFrom~address~address~uint256_Hakka__fail(this, msgsender_MSG, msgvalue_MSG, from_s295, to_s295, amount_s295);
[L751]               __var_2 := -1 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L752]   COND FALSE  !(from_s295 != msgsender_MSG && __tmp__allowance_Hakka[this][from_s295][msgsender_MSG] != -1 % 115792089237316195423570985008687907853269984665640564039457584007913129639936)
[L761]   COND TRUE   !(__tmp__balanceOf_Hakka[this][from_s295] >= amount_s295)
[L762]               revert := true;
[L180]   RET         call __ret_0_ := transferFrom~address~address~uint256_Hakka__fail(this, msgsender_MSG, msgvalue_MSG, from_s295, to_s295, amount_s295);
[L181]               assume revert || gas < 0;
[L1519]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_Hakka(this, msgsender_MSG, msgvalue_MSG, from_s295, to_s295, amount_s295);
[L1542]  RET         call CorralChoice_Hakka(this);

Loop:
[L1542]        assume true;

[2020-11-24 19:30:20,714 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 19:30:20,714 INFO  L82        PathProgramCache]: Analyzing trace with hash 1476538834, now seen corresponding path program 1 times
[2020-11-24 19:30:20,715 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 19:30:20,726 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 19:30:20,775 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 19:30:20,776 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 19:30:20,776 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [6] imperfect sequences [] total 6
[2020-11-24 19:30:20,776 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 19:30:20,776 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 6 interpolants.
[2020-11-24 19:30:20,776 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=9, Invalid=21, Unknown=0, NotChecked=0, Total=30
[2020-11-24 19:30:20,777 INFO  L87              Difference]: Start difference. First operand 219 states and 231 transitions. cyclomatic complexity: 13 Second operand 6 states.
[2020-11-24 19:30:20,864 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 19:30:20,865 INFO  L93              Difference]: Finished difference Result 234 states and 245 transitions.
[2020-11-24 19:30:20,865 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 7 states. 
[2020-11-24 19:30:20,865 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 234 states and 245 transitions.
[2020-11-24 19:30:20,866 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 2
[2020-11-24 19:30:20,868 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 234 states to 231 states and 242 transitions.
[2020-11-24 19:30:20,868 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 169
[2020-11-24 19:30:20,868 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 169
[2020-11-24 19:30:20,868 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 231 states and 242 transitions.
[2020-11-24 19:30:20,869 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 19:30:20,869 INFO  L728         BuchiCegarLoop]: Abstraction has 231 states and 242 transitions.
[2020-11-24 19:30:20,869 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 231 states and 242 transitions.
[2020-11-24 19:30:20,873 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 231 to 218.
[2020-11-24 19:30:20,873 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 218 states.
[2020-11-24 19:30:20,873 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 218 states to 218 states and 229 transitions.
[2020-11-24 19:30:20,873 INFO  L751         BuchiCegarLoop]: Abstraction has 218 states and 229 transitions.
[2020-11-24 19:30:20,874 INFO  L631         BuchiCegarLoop]: Abstraction has 218 states and 229 transitions.
[2020-11-24 19:30:20,874 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-24 19:30:20,874 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 218 states and 229 transitions.
[2020-11-24 19:30:20,875 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 19:30:20,875 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 19:30:20,875 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 19:30:20,876 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 19:30:20,876 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L3]                 success_transferFrom_Hakka0 := false;
[L3]                 call_transferFrom_Hakka0 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L1537]              assume null == 0;
[L1538]  CALL        call this := FreshRefGenerator__success();
[L681]               havoc newRef;
[L682]               assume Alloc[newRef] == false;
[L683]               Alloc[newRef] := true;
[L684]               assume newRef != null;
[L1538]  RET         call this := FreshRefGenerator__success();
[L1539]              assume now >= 0;
[L1540]              assume DType[this] == Hakka;
[L1541]              assume !revert && gas >= 0;
[L1542]  CALL        call CorralChoice_Hakka(this);
[L1436]              havoc msgsender_MSG;
[L1437]              havoc msgvalue_MSG;
[L1438]              havoc choice;
[L1439]              havoc __ret_0_owner;
[L1440]              havoc newOwner_s56;
[L1441]              havoc __ret_0_name;
[L1442]              havoc __ret_0_symbol;
[L1443]              havoc __ret_0_version;
[L1444]              havoc __ret_0_decimals;
[L1445]              havoc __ret_0_totalSupply;
[L1446]              havoc arg589_s0;
[L1447]              havoc __ret_0_balanceOf;
[L1448]              havoc arg590_s0;
[L1449]              havoc arg591_s0;
[L1450]              havoc __ret_0_allowance;
[L1451]              havoc arg592_s0;
[L1452]              havoc __ret_0_nonces;
[L1453]              havoc __ret_0_DOMAIN_SEPARATOR;
[L1454]              havoc __ret_0_PERMIT_TYPEHASH;
[L1455]              havoc chainId__s193;
[L1456]              havoc to_s210;
[L1457]              havoc amount_s210;
[L1458]              havoc __ret_0_transfer;
[L1459]              havoc from_s295;
[L1460]              havoc to_s295;
[L1461]              havoc amount_s295;
[L1462]              havoc __ret_0_transferFrom;
[L1463]              havoc to_s331;
[L1464]              havoc amount_s331;
[L1465]              havoc from_s408;
[L1466]              havoc amount_s408;
[L1467]              havoc spender_s436;
[L1468]              havoc amount_s436;
[L1469]              havoc __ret_0_approve;
[L1470]              havoc spender_s479;
[L1471]              havoc amount_s479;
[L1472]              havoc data_s479;
[L1473]              havoc __ret_0_approveAndCall;
[L1474]              havoc holder_s586;
[L1475]              havoc spender_s586;
[L1476]              havoc nonce_s586;
[L1477]              havoc expiry_s586;
[L1478]              havoc allowed_s586;
[L1479]              havoc v_s586;
[L1480]              havoc r_s586;
[L1481]              havoc s_s586;
[L1482]              havoc tmpNow;
[L1483]              havoc gas;
[L1484]              assume gas > 4000000 && gas <= 8000000;
[L1485]              tmpNow := now;
[L1486]              havoc now;
[L1487]              assume now > tmpNow;
[L1488]              assume msgsender_MSG != null;
[L1489]  COND FALSE  !(choice == 6)
[L1495]  COND FALSE  !(choice == 5)
[L1501]  COND FALSE  !(choice == 4)
[L1507]  COND FALSE  !(choice == 3)
[L1514]  COND TRUE   choice == 2
[L1515]              gas := gas - 21000;
[L1516]  COND TRUE   gas >= 0
[L1517]              assume amount_s295 >= 0 && amount_s295 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1518]              assume msgvalue_MSG == 0;
[L1519]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_Hakka(this, msgsender_MSG, msgvalue_MSG, from_s295, to_s295, amount_s295);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != from_s295 || p2 != msgsender_MSG) && from_s295 == to_s295) && amount_s295 <= balanceOf_Hakka[this][from_s295]) && amount_s295 <= allowance_Hakka[this][from_s295][msgsender_MSG]) && amount_s295 >= 0) && amount_s295 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_Hakka[this][to_s295] >= 0) && balanceOf_Hakka[this][to_s295] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_Hakka[this][from_s295] >= 0) && balanceOf_Hakka[this][from_s295] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowance_Hakka[this][from_s295][msgsender_MSG] >= 0) && allowance_Hakka[this][from_s295][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_Hakka0 := true;
[L3]                 call_transferFrom_Hakka0 := false;
[L3]                 revert := revert_hold;
[L154]               havoc __exception;
[L155]               revert := false;
[L156]   COND TRUE   __exception
[L157]               __tmp__Balance := Balance;
[L158]               __tmp__DType := DType;
[L159]               __tmp__Alloc := Alloc;
[L160]               __tmp__balance_ADDR := balance_ADDR;
[L161]               __tmp__M_Ref_int := M_Ref_int;
[L162]               __tmp__sum_balanceOf0 := sum_balanceOf0;
[L163]               __tmp__alloc_allowance_Hakka_lvl0 := alloc_allowance_Hakka_lvl0;
[L164]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L165]               __tmp__sum_allowance1 := sum_allowance1;
[L166]               __tmp__sum_nonces2 := sum_nonces2;
[L167]               __tmp__Length := Length;
[L168]               __tmp__now := now;
[L169]               __tmp__owner_Ownable := owner_Ownable;
[L170]               __tmp__name_Hakka := name_Hakka;
[L171]               __tmp__symbol_Hakka := symbol_Hakka;
[L172]               __tmp__version_Hakka := version_Hakka;
[L173]               __tmp__decimals_Hakka := decimals_Hakka;
[L174]               __tmp__totalSupply_Hakka := totalSupply_Hakka;
[L175]               __tmp__balanceOf_Hakka := balanceOf_Hakka;
[L176]               __tmp__allowance_Hakka := allowance_Hakka;
[L177]               __tmp__nonces_Hakka := nonces_Hakka;
[L178]               __tmp__DOMAIN_SEPARATOR_Hakka := DOMAIN_SEPARATOR_Hakka;
[L179]               __tmp__PERMIT_TYPEHASH_Hakka := PERMIT_TYPEHASH_Hakka;
[L180]   CALL        call __ret_0_ := transferFrom~address~address~uint256_Hakka__fail(this, msgsender_MSG, msgvalue_MSG, from_s295, to_s295, amount_s295);
[L751]               __var_2 := -1 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L752]   COND TRUE   from_s295 != msgsender_MSG && __tmp__allowance_Hakka[this][from_s295][msgsender_MSG] != -1 % 115792089237316195423570985008687907853269984665640564039457584007913129639936
[L753]   CALL        call __var_3 := sub~uint256~uint256_Hakka__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__allowance_Hakka[this][from_s295][msgsender_MSG], amount_s295);
[L707]               z_s157 := (x_s157 - y_s157) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L708]   COND FALSE  !(!((x_s157 - y_s157) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 <= x_s157))
[L753]   RET         call __var_3 := sub~uint256~uint256_Hakka__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__allowance_Hakka[this][from_s295][msgsender_MSG], amount_s295);
[L754]   COND TRUE   revert
[L180]   RET         call __ret_0_ := transferFrom~address~address~uint256_Hakka__fail(this, msgsender_MSG, msgvalue_MSG, from_s295, to_s295, amount_s295);
[L181]               assume revert || gas < 0;
[L1519]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_Hakka(this, msgsender_MSG, msgvalue_MSG, from_s295, to_s295, amount_s295);
[L1542]  RET         call CorralChoice_Hakka(this);

Loop:
[L1542]        assume true;

[2020-11-24 19:30:20,878 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 19:30:20,879 INFO  L82        PathProgramCache]: Analyzing trace with hash -1141916388, now seen corresponding path program 1 times
[2020-11-24 19:30:20,879 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 19:30:20,888 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 19:30:20,911 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 19:30:20,911 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 19:30:20,911 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [5] imperfect sequences [] total 5
[2020-11-24 19:30:20,912 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 19:30:20,912 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 5 interpolants.
[2020-11-24 19:30:20,912 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=9, Invalid=11, Unknown=0, NotChecked=0, Total=20
[2020-11-24 19:30:20,912 INFO  L87              Difference]: Start difference. First operand 218 states and 229 transitions. cyclomatic complexity: 12 Second operand 5 states.
[2020-11-24 19:30:20,925 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 19:30:20,925 INFO  L93              Difference]: Finished difference Result 229 states and 237 transitions.
[2020-11-24 19:30:20,925 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-24 19:30:20,925 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 229 states and 237 transitions.
[2020-11-24 19:30:20,927 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 2
[2020-11-24 19:30:20,928 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 229 states to 229 states and 237 transitions.
[2020-11-24 19:30:20,928 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 167
[2020-11-24 19:30:20,928 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 167
[2020-11-24 19:30:20,928 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 229 states and 237 transitions.
[2020-11-24 19:30:20,929 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 19:30:20,929 INFO  L728         BuchiCegarLoop]: Abstraction has 229 states and 237 transitions.
[2020-11-24 19:30:20,929 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 229 states and 237 transitions.
[2020-11-24 19:30:20,931 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 229 to 218.
[2020-11-24 19:30:20,931 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 218 states.
[2020-11-24 19:30:20,932 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 218 states to 218 states and 226 transitions.
[2020-11-24 19:30:20,932 INFO  L751         BuchiCegarLoop]: Abstraction has 218 states and 226 transitions.
[2020-11-24 19:30:20,932 INFO  L631         BuchiCegarLoop]: Abstraction has 218 states and 226 transitions.
[2020-11-24 19:30:20,932 INFO  L445         BuchiCegarLoop]: ======== Iteration 5============
[2020-11-24 19:30:20,932 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 218 states and 226 transitions.
[2020-11-24 19:30:20,933 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 19:30:20,933 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 19:30:20,933 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 19:30:20,934 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 19:30:20,934 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L3]                 success_transferFrom_Hakka0 := false;
[L3]                 call_transferFrom_Hakka0 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L1537]              assume null == 0;
[L1538]  CALL        call this := FreshRefGenerator__success();
[L681]               havoc newRef;
[L682]               assume Alloc[newRef] == false;
[L683]               Alloc[newRef] := true;
[L684]               assume newRef != null;
[L1538]  RET         call this := FreshRefGenerator__success();
[L1539]              assume now >= 0;
[L1540]              assume DType[this] == Hakka;
[L1541]              assume !revert && gas >= 0;
[L1542]  CALL        call CorralChoice_Hakka(this);
[L1436]              havoc msgsender_MSG;
[L1437]              havoc msgvalue_MSG;
[L1438]              havoc choice;
[L1439]              havoc __ret_0_owner;
[L1440]              havoc newOwner_s56;
[L1441]              havoc __ret_0_name;
[L1442]              havoc __ret_0_symbol;
[L1443]              havoc __ret_0_version;
[L1444]              havoc __ret_0_decimals;
[L1445]              havoc __ret_0_totalSupply;
[L1446]              havoc arg589_s0;
[L1447]              havoc __ret_0_balanceOf;
[L1448]              havoc arg590_s0;
[L1449]              havoc arg591_s0;
[L1450]              havoc __ret_0_allowance;
[L1451]              havoc arg592_s0;
[L1452]              havoc __ret_0_nonces;
[L1453]              havoc __ret_0_DOMAIN_SEPARATOR;
[L1454]              havoc __ret_0_PERMIT_TYPEHASH;
[L1455]              havoc chainId__s193;
[L1456]              havoc to_s210;
[L1457]              havoc amount_s210;
[L1458]              havoc __ret_0_transfer;
[L1459]              havoc from_s295;
[L1460]              havoc to_s295;
[L1461]              havoc amount_s295;
[L1462]              havoc __ret_0_transferFrom;
[L1463]              havoc to_s331;
[L1464]              havoc amount_s331;
[L1465]              havoc from_s408;
[L1466]              havoc amount_s408;
[L1467]              havoc spender_s436;
[L1468]              havoc amount_s436;
[L1469]              havoc __ret_0_approve;
[L1470]              havoc spender_s479;
[L1471]              havoc amount_s479;
[L1472]              havoc data_s479;
[L1473]              havoc __ret_0_approveAndCall;
[L1474]              havoc holder_s586;
[L1475]              havoc spender_s586;
[L1476]              havoc nonce_s586;
[L1477]              havoc expiry_s586;
[L1478]              havoc allowed_s586;
[L1479]              havoc v_s586;
[L1480]              havoc r_s586;
[L1481]              havoc s_s586;
[L1482]              havoc tmpNow;
[L1483]              havoc gas;
[L1484]              assume gas > 4000000 && gas <= 8000000;
[L1485]              tmpNow := now;
[L1486]              havoc now;
[L1487]              assume now > tmpNow;
[L1488]              assume msgsender_MSG != null;
[L1489]  COND FALSE  !(choice == 6)
[L1495]  COND FALSE  !(choice == 5)
[L1501]  COND FALSE  !(choice == 4)
[L1507]  COND FALSE  !(choice == 3)
[L1514]  COND TRUE   choice == 2
[L1515]              gas := gas - 21000;
[L1516]  COND TRUE   gas >= 0
[L1517]              assume amount_s295 >= 0 && amount_s295 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1518]              assume msgvalue_MSG == 0;
[L1519]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_Hakka(this, msgsender_MSG, msgvalue_MSG, from_s295, to_s295, amount_s295);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != from_s295 || p2 != msgsender_MSG) && from_s295 == to_s295) && amount_s295 <= balanceOf_Hakka[this][from_s295]) && amount_s295 <= allowance_Hakka[this][from_s295][msgsender_MSG]) && amount_s295 >= 0) && amount_s295 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_Hakka[this][to_s295] >= 0) && balanceOf_Hakka[this][to_s295] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_Hakka[this][from_s295] >= 0) && balanceOf_Hakka[this][from_s295] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowance_Hakka[this][from_s295][msgsender_MSG] >= 0) && allowance_Hakka[this][from_s295][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_Hakka0 := true;
[L3]                 call_transferFrom_Hakka0 := false;
[L3]                 revert := revert_hold;
[L154]               havoc __exception;
[L155]               revert := false;
[L156]   COND TRUE   __exception
[L157]               __tmp__Balance := Balance;
[L158]               __tmp__DType := DType;
[L159]               __tmp__Alloc := Alloc;
[L160]               __tmp__balance_ADDR := balance_ADDR;
[L161]               __tmp__M_Ref_int := M_Ref_int;
[L162]               __tmp__sum_balanceOf0 := sum_balanceOf0;
[L163]               __tmp__alloc_allowance_Hakka_lvl0 := alloc_allowance_Hakka_lvl0;
[L164]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L165]               __tmp__sum_allowance1 := sum_allowance1;
[L166]               __tmp__sum_nonces2 := sum_nonces2;
[L167]               __tmp__Length := Length;
[L168]               __tmp__now := now;
[L169]               __tmp__owner_Ownable := owner_Ownable;
[L170]               __tmp__name_Hakka := name_Hakka;
[L171]               __tmp__symbol_Hakka := symbol_Hakka;
[L172]               __tmp__version_Hakka := version_Hakka;
[L173]               __tmp__decimals_Hakka := decimals_Hakka;
[L174]               __tmp__totalSupply_Hakka := totalSupply_Hakka;
[L175]               __tmp__balanceOf_Hakka := balanceOf_Hakka;
[L176]               __tmp__allowance_Hakka := allowance_Hakka;
[L177]               __tmp__nonces_Hakka := nonces_Hakka;
[L178]               __tmp__DOMAIN_SEPARATOR_Hakka := DOMAIN_SEPARATOR_Hakka;
[L179]               __tmp__PERMIT_TYPEHASH_Hakka := PERMIT_TYPEHASH_Hakka;
[L180]   CALL        call __ret_0_ := transferFrom~address~address~uint256_Hakka__fail(this, msgsender_MSG, msgvalue_MSG, from_s295, to_s295, amount_s295);
[L751]               __var_2 := -1 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L752]   COND TRUE   from_s295 != msgsender_MSG && __tmp__allowance_Hakka[this][from_s295][msgsender_MSG] != -1 % 115792089237316195423570985008687907853269984665640564039457584007913129639936
[L753]   CALL        call __var_3 := sub~uint256~uint256_Hakka__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__allowance_Hakka[this][from_s295][msgsender_MSG], amount_s295);
[L707]               z_s157 := (x_s157 - y_s157) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L708]   COND TRUE   !((x_s157 - y_s157) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 <= x_s157)
[L709]               revert := true;
[L753]   RET         call __var_3 := sub~uint256~uint256_Hakka__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__allowance_Hakka[this][from_s295][msgsender_MSG], amount_s295);
[L754]   COND TRUE   revert
[L180]   RET         call __ret_0_ := transferFrom~address~address~uint256_Hakka__fail(this, msgsender_MSG, msgvalue_MSG, from_s295, to_s295, amount_s295);
[L181]               assume revert || gas < 0;
[L1519]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_Hakka(this, msgsender_MSG, msgvalue_MSG, from_s295, to_s295, amount_s295);
[L1542]  RET         call CorralChoice_Hakka(this);

Loop:
[L1542]        assume true;

[2020-11-24 19:30:20,936 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 19:30:20,937 INFO  L82        PathProgramCache]: Analyzing trace with hash -1591049164, now seen corresponding path program 1 times
[2020-11-24 19:30:20,937 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 19:30:20,949 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 19:30:21,013 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 19:30:21,013 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 19:30:21,013 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [7] imperfect sequences [] total 7
[2020-11-24 19:30:21,014 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 19:30:21,014 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 7 interpolants.
[2020-11-24 19:30:21,014 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=11, Invalid=31, Unknown=0, NotChecked=0, Total=42
[2020-11-24 19:30:21,014 INFO  L87              Difference]: Start difference. First operand 218 states and 226 transitions. cyclomatic complexity: 9 Second operand 7 states.
[2020-11-24 19:30:21,148 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 19:30:21,148 INFO  L93              Difference]: Finished difference Result 251 states and 262 transitions.
[2020-11-24 19:30:21,148 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 8 states. 
[2020-11-24 19:30:21,148 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 251 states and 262 transitions.
[2020-11-24 19:30:21,150 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 2
[2020-11-24 19:30:21,151 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 251 states to 247 states and 258 transitions.
[2020-11-24 19:30:21,151 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 183
[2020-11-24 19:30:21,152 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 183
[2020-11-24 19:30:21,152 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 247 states and 258 transitions.
[2020-11-24 19:30:21,153 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 19:30:21,153 INFO  L728         BuchiCegarLoop]: Abstraction has 247 states and 258 transitions.
[2020-11-24 19:30:21,153 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 247 states and 258 transitions.
[2020-11-24 19:30:21,156 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 247 to 216.
[2020-11-24 19:30:21,156 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 216 states.
[2020-11-24 19:30:21,157 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 216 states to 216 states and 223 transitions.
[2020-11-24 19:30:21,157 INFO  L751         BuchiCegarLoop]: Abstraction has 216 states and 223 transitions.
[2020-11-24 19:30:21,157 INFO  L631         BuchiCegarLoop]: Abstraction has 216 states and 223 transitions.
[2020-11-24 19:30:21,157 INFO  L445         BuchiCegarLoop]: ======== Iteration 6============
[2020-11-24 19:30:21,157 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 216 states and 223 transitions.
[2020-11-24 19:30:21,158 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 19:30:21,158 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 19:30:21,158 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 19:30:21,159 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 19:30:21,159 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L3]                 success_transferFrom_Hakka0 := false;
[L3]                 call_transferFrom_Hakka0 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L1537]              assume null == 0;
[L1538]  CALL        call this := FreshRefGenerator__success();
[L681]               havoc newRef;
[L682]               assume Alloc[newRef] == false;
[L683]               Alloc[newRef] := true;
[L684]               assume newRef != null;
[L1538]  RET         call this := FreshRefGenerator__success();
[L1539]              assume now >= 0;
[L1540]              assume DType[this] == Hakka;
[L1541]              assume !revert && gas >= 0;
[L1542]  CALL        call CorralChoice_Hakka(this);
[L1436]              havoc msgsender_MSG;
[L1437]              havoc msgvalue_MSG;
[L1438]              havoc choice;
[L1439]              havoc __ret_0_owner;
[L1440]              havoc newOwner_s56;
[L1441]              havoc __ret_0_name;
[L1442]              havoc __ret_0_symbol;
[L1443]              havoc __ret_0_version;
[L1444]              havoc __ret_0_decimals;
[L1445]              havoc __ret_0_totalSupply;
[L1446]              havoc arg589_s0;
[L1447]              havoc __ret_0_balanceOf;
[L1448]              havoc arg590_s0;
[L1449]              havoc arg591_s0;
[L1450]              havoc __ret_0_allowance;
[L1451]              havoc arg592_s0;
[L1452]              havoc __ret_0_nonces;
[L1453]              havoc __ret_0_DOMAIN_SEPARATOR;
[L1454]              havoc __ret_0_PERMIT_TYPEHASH;
[L1455]              havoc chainId__s193;
[L1456]              havoc to_s210;
[L1457]              havoc amount_s210;
[L1458]              havoc __ret_0_transfer;
[L1459]              havoc from_s295;
[L1460]              havoc to_s295;
[L1461]              havoc amount_s295;
[L1462]              havoc __ret_0_transferFrom;
[L1463]              havoc to_s331;
[L1464]              havoc amount_s331;
[L1465]              havoc from_s408;
[L1466]              havoc amount_s408;
[L1467]              havoc spender_s436;
[L1468]              havoc amount_s436;
[L1469]              havoc __ret_0_approve;
[L1470]              havoc spender_s479;
[L1471]              havoc amount_s479;
[L1472]              havoc data_s479;
[L1473]              havoc __ret_0_approveAndCall;
[L1474]              havoc holder_s586;
[L1475]              havoc spender_s586;
[L1476]              havoc nonce_s586;
[L1477]              havoc expiry_s586;
[L1478]              havoc allowed_s586;
[L1479]              havoc v_s586;
[L1480]              havoc r_s586;
[L1481]              havoc s_s586;
[L1482]              havoc tmpNow;
[L1483]              havoc gas;
[L1484]              assume gas > 4000000 && gas <= 8000000;
[L1485]              tmpNow := now;
[L1486]              havoc now;
[L1487]              assume now > tmpNow;
[L1488]              assume msgsender_MSG != null;
[L1489]  COND FALSE  !(choice == 6)
[L1495]  COND FALSE  !(choice == 5)
[L1501]  COND FALSE  !(choice == 4)
[L1507]  COND FALSE  !(choice == 3)
[L1514]  COND TRUE   choice == 2
[L1515]              gas := gas - 21000;
[L1516]  COND TRUE   gas >= 0
[L1517]              assume amount_s295 >= 0 && amount_s295 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1518]              assume msgvalue_MSG == 0;
[L1519]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_Hakka(this, msgsender_MSG, msgvalue_MSG, from_s295, to_s295, amount_s295);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != from_s295 || p2 != msgsender_MSG) && from_s295 == to_s295) && amount_s295 <= balanceOf_Hakka[this][from_s295]) && amount_s295 <= allowance_Hakka[this][from_s295][msgsender_MSG]) && amount_s295 >= 0) && amount_s295 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_Hakka[this][to_s295] >= 0) && balanceOf_Hakka[this][to_s295] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_Hakka[this][from_s295] >= 0) && balanceOf_Hakka[this][from_s295] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowance_Hakka[this][from_s295][msgsender_MSG] >= 0) && allowance_Hakka[this][from_s295][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_Hakka0 := true;
[L3]                 call_transferFrom_Hakka0 := false;
[L3]                 revert := revert_hold;
[L154]               havoc __exception;
[L155]               revert := false;
[L156]   COND FALSE  !(__exception)
[L183]   CALL        call __ret_0_ := transferFrom~address~address~uint256_Hakka__success(this, msgsender_MSG, msgvalue_MSG, from_s295, to_s295, amount_s295);
[L789]               __var_2 := -1 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L790]   COND FALSE  !(from_s295 != msgsender_MSG && allowance_Hakka[this][from_s295][msgsender_MSG] != -1 % 115792089237316195423570985008687907853269984665640564039457584007913129639936)
[L799]   COND FALSE  !(!(balanceOf_Hakka[this][from_s295] >= amount_s295))
[L803]   CALL        call __var_4 := sub~uint256~uint256_Hakka__success(this, msgsender_MSG, msgvalue_MSG, balanceOf_Hakka[this][from_s295], amount_s295);
[L716]               z_s157 := (x_s157 - y_s157) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L717]   COND FALSE  !(!((x_s157 - y_s157) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 <= x_s157))
[L803]   RET         call __var_4 := sub~uint256~uint256_Hakka__success(this, msgsender_MSG, msgvalue_MSG, balanceOf_Hakka[this][from_s295], amount_s295);
[L804]   COND FALSE  !(revert)
[L807]               sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_Hakka[this][from_s295];
[L808]               balanceOf_Hakka[this][from_s295] := __var_4;
[L809]               sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_Hakka[this][from_s295];
[L810]   CALL        call __var_5 := add~uint256~uint256_Hakka__success(this, msgsender_MSG, msgvalue_MSG, balanceOf_Hakka[this][to_s295], amount_s295);
[L698]               z_s136 := (x_s136 + y_s136) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L699]   COND FALSE  !(!((x_s136 + y_s136) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 >= x_s136))
[L810]   RET         call __var_5 := add~uint256~uint256_Hakka__success(this, msgsender_MSG, msgvalue_MSG, balanceOf_Hakka[this][to_s295], amount_s295);
[L811]   COND FALSE  !(revert)
[L814]               sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_Hakka[this][to_s295];
[L815]               balanceOf_Hakka[this][to_s295] := __var_5;
[L816]               sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_Hakka[this][to_s295];
[L817]               assert { :EventEmitted "Transfer_Hakka" } true;
[L818]               __ret_0_ := true;
[L183]   RET         call __ret_0_ := transferFrom~address~address~uint256_Hakka__success(this, msgsender_MSG, msgvalue_MSG, from_s295, to_s295, amount_s295);
[L184]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((__ret_0_ == true && allowance_Hakka[this][from_s295][msgsender_MSG] == old(allowance_Hakka[this][from_s295][msgsender_MSG]) - amount_s295) && totalSupply_Hakka[this] == old(totalSupply_Hakka[this])) && balanceOf_Hakka[this] == old(balanceOf_Hakka[this])) && allowance_Hakka[this][p1][p2] == old(allowance_Hakka[this][p1][p2])) && nonces_Hakka[this] == old(nonces_Hakka[this])) && DOMAIN_SEPARATOR_Hakka[this] == old(DOMAIN_SEPARATOR_Hakka[this])) && owner_Ownable[this] == old(owner_Ownable[this]));
[L3]                 revert := revert_hold;
[L1519]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_Hakka(this, msgsender_MSG, msgvalue_MSG, from_s295, to_s295, amount_s295);
[L1542]  RET         call CorralChoice_Hakka(this);

Loop:
[L1542]        assume true;

[2020-11-24 19:30:21,162 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 19:30:21,162 INFO  L82        PathProgramCache]: Analyzing trace with hash 1843233513, now seen corresponding path program 1 times
[2020-11-24 19:30:21,162 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 19:30:21,181 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 19:30:21,201 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 19:30:21,246 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 19:30:21,246 INFO  L82        PathProgramCache]: Analyzing trace with hash 6247, now seen corresponding path program 1 times
[2020-11-24 19:30:21,247 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 19:30:21,247 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 19:30:21,248 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 19:30:21,249 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 19:30:21,249 INFO  L82        PathProgramCache]: Analyzing trace with hash 1305670271, now seen corresponding path program 1 times
[2020-11-24 19:30:21,250 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 19:30:21,265 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 19:30:21,285 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
[2020-11-24 19:30:21,666 WARN  L188               SmtUtils]: Spent 275.00 ms on a formula simplification. DAG size of input: 108 DAG size of output: 107
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #5: 547 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 547 to 1093
[2020-11-24 19:30:21,784 WARN  L188               SmtUtils]: Spent 109.00 ms on a formula simplification. DAG size of input: 58 DAG size of output: 57
[2020-11-24 19:30:21,914 WARN  L188               SmtUtils]: Spent 128.00 ms on a formula simplification. DAG size of input: 98 DAG size of output: 93
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #5: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
[2020-11-24 19:30:22,099 WARN  L188               SmtUtils]: Spent 181.00 ms on a formula simplification. DAG size of input: 87 DAG size of output: 86
[2020-11-24 19:30:22,545 WARN  L188               SmtUtils]: Spent 444.00 ms on a formula simplification. DAG size of input: 170 DAG size of output: 153
Garbage collection #1: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #2: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #3: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #4: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #5: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #1: 41 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 41 to 79
Garbage collection #2: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #3: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #4: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #5: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #6: 1237 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1237 to 2473
Garbage collection #7: 2473 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2473 to 4943
Garbage collection #8: 4943 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 4943 to 9883
[2020-11-24 19:30:26,878 WARN  L188               SmtUtils]: Spent 4.10 s on a formula simplification. DAG size of input: 189 DAG size of output: 119
[2020-11-24 19:30:28,457 WARN  L188               SmtUtils]: Spent 1.58 s on a formula simplification. DAG size of input: 287 DAG size of output: 265
Garbage collection #1: 97 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 3019 to 6037
Garbage collection #7: 6037 nodes / 0 free / 0.002s / 0.003s total
Resizing node table from 6037 to 12073
[2020-11-24 19:30:31,141 WARN  L188               SmtUtils]: Spent 2.67 s on a formula simplification. DAG size of input: 257 DAG size of output: 247
[2020-11-24 19:30:33,817 WARN  L188               SmtUtils]: Spent 2.67 s on a formula simplification. DAG size of input: 282 DAG size of output: 267
Garbage collection #1: 97 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 3019 to 6037
Garbage collection #7: 6037 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 6037 to 12073
Garbage collection #8: 12073 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 12073 to 24137
Garbage collection #1: 67 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 67 to 131
Garbage collection #2: 131 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 131 to 257
Garbage collection #3: 257 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 257 to 509
Garbage collection #4: 509 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 509 to 1013
Garbage collection #5: 1013 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1013 to 2017
Garbage collection #6: 2017 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2017 to 4027
Garbage collection #7: 4027 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4027 to 8053
Garbage collection #8: 8053 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 8053 to 16103
[2020-11-24 19:30:35,056 WARN  L188               SmtUtils]: Spent 1.16 s on a formula simplification. DAG size of input: 244 DAG size of output: 169
[2020-11-24 19:30:35,575 WARN  L188               SmtUtils]: Spent 518.00 ms on a formula simplification that was a NOOP. DAG size: 308
Garbage collection #1: 127 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 127 to 251
Garbage collection #2: 251 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 251 to 499
Garbage collection #3: 499 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 499 to 997
Garbage collection #4: 997 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 997 to 1993
Garbage collection #5: 1993 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1993 to 3967
Garbage collection #6: 3967 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3967 to 7933
[2020-11-24 19:30:36,418 WARN  L188               SmtUtils]: Spent 821.00 ms on a formula simplification. DAG size of input: 242 DAG size of output: 233
[2020-11-24 19:30:36,827 WARN  L188               SmtUtils]: Spent 406.00 ms on a formula simplification that was a NOOP. DAG size: 255
Garbage collection #1: 101 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 101 to 199
Garbage collection #2: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #3: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #4: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #5: 1571 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1571 to 3137
Garbage collection #6: 3137 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3137 to 6271
Garbage collection #7: 6271 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 6271 to 12541
Garbage collection #8: 12541 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 12541 to 25073
Garbage collection #1: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #2: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #3: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #4: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #5: 1093 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1093 to 2179
Garbage collection #6: 2179 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2179 to 4357
Garbage collection #7: 4357 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4357 to 8713
[2020-11-24 19:30:42,659 WARN  L188               SmtUtils]: Spent 5.71 s on a formula simplification. DAG size of input: 761 DAG size of output: 196
[2020-11-24 19:30:43,910 WARN  L188               SmtUtils]: Spent 1.24 s on a formula simplification that was a NOOP. DAG size: 273
Garbage collection #1: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #2: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #3: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #4: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #5: 1571 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1571 to 3137
Garbage collection #6: 3137 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3137 to 6271
Garbage collection #7: 6271 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 6271 to 12541
Garbage collection #1: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #2: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #3: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #4: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #5: 1327 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1327 to 2647
Garbage collection #6: 2647 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2647 to 5281
Garbage collection #7: 5281 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 5281 to 10559
Garbage collection #8: 10559 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 10559 to 21107
Garbage collection #9: 21107 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 21107 to 42209
Garbage collection #10: 42209 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 42209 to 84407
Garbage collection #11: 84407 nodes / 0 free / 0.002s / 0.003s total
Resizing node table from 84407 to 134401
[2020-11-24 19:30:54,353 WARN  L188               SmtUtils]: Spent 10.20 s on a formula simplification. DAG size of input: 926 DAG size of output: 192
[2020-11-24 19:30:56,090 WARN  L188               SmtUtils]: Spent 1.74 s on a formula simplification. DAG size of input: 271 DAG size of output: 270
Garbage collection #1: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #2: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #3: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #4: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #5: 1571 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1571 to 3137
Garbage collection #6: 3137 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3137 to 6271
Garbage collection #7: 6271 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 6271 to 12541
Garbage collection #1: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #2: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #3: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #4: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #5: 1759 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1759 to 3517
Garbage collection #6: 3517 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3517 to 7027
Garbage collection #7: 7027 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 7027 to 14051
Garbage collection #8: 14051 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 14051 to 28099
Garbage collection #9: 28099 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 28099 to 56197
Garbage collection #10: 56197 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 56197 to 106189
Garbage collection #11: 106189 nodes / 0 free / 0.002s / 0.003s total
Resizing node table from 106189 to 156157
Garbage collection #12: 156157 nodes / 0 free / 0.002s / 0.005s total
Resizing node table from 156157 to 206153
Garbage collection #13: 206153 nodes / 0 free / 0.004s / 0.009s total
Resizing node table from 206153 to 256147
[2020-11-24 19:31:47,956 WARN  L188               SmtUtils]: Spent 51.48 s on a formula simplification. DAG size of input: 1549 DAG size of output: 294
[2020-11-24 19:31:47,967 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 19:31:47,972 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 24.11 07:31:47 BasicIcfg
[2020-11-24 19:31:47,972 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-24 19:31:47,972 INFO  L168              Benchmark]: Toolchain (without parser) took 89173.83 ms. Allocated memory was 1.0 GB in the beginning and 4.2 GB in the end (delta: 3.2 GB). Free memory was 945.9 MB in the beginning and 3.4 GB in the end (delta: -2.5 GB). Peak memory consumption was 3.6 GB. Max. memory is 15.3 GB.
[2020-11-24 19:31:47,973 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.14 ms. Allocated memory is still 1.0 GB. Free memory is still 956.7 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-24 19:31:47,973 INFO  L168              Benchmark]: Boogie Preprocessor took 63.73 ms. Allocated memory is still 1.0 GB. Free memory was 945.9 MB in the beginning and 940.6 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-24 19:31:47,973 INFO  L168              Benchmark]: UtopiaSpecLang took 48.48 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 935.2 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-24 19:31:47,974 INFO  L168              Benchmark]: Boogie Printer took 8.18 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 929.8 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-24 19:31:47,974 INFO  L168              Benchmark]: RCFGBuilder took 430.04 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 892.2 MB in the end (delta: 37.6 MB). Peak memory consumption was 37.6 MB. Max. memory is 15.3 GB.
[2020-11-24 19:31:47,974 INFO  L168              Benchmark]: UtopiaLTL2Aut took 37.37 ms. Allocated memory is still 1.0 GB. Free memory was 892.2 MB in the beginning and 883.3 MB in the end (delta: 8.9 MB). Peak memory consumption was 8.9 MB. Max. memory is 15.3 GB.
[2020-11-24 19:31:47,974 INFO  L168              Benchmark]: BÃ¼chi Program Product took 711.74 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 57.7 MB). Free memory was 883.3 MB in the beginning and 1.0 GB in the end (delta: -126.8 MB). Peak memory consumption was 164.9 MB. Max. memory is 15.3 GB.
[2020-11-24 19:31:47,975 INFO  L168              Benchmark]: BlockEncodingV2 took 65.32 ms. Allocated memory is still 1.1 GB. Free memory was 1.0 GB in the beginning and 983.8 MB in the end (delta: 26.3 MB). Peak memory consumption was 26.3 MB. Max. memory is 15.3 GB.
[2020-11-24 19:31:47,975 INFO  L168              Benchmark]: BuchiAutomizer took 87805.99 ms. Allocated memory was 1.1 GB in the beginning and 4.2 GB in the end (delta: 3.1 GB). Free memory was 983.8 MB in the beginning and 3.4 GB in the end (delta: -2.5 GB). Peak memory consumption was 3.6 GB. Max. memory is 15.3 GB.
[2020-11-24 19:31:47,978 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    1204 locations, 1998 edges
  - StatisticsResult: Encoded RCFG
    1184 locations, 1952 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.14 ms. Allocated memory is still 1.0 GB. Free memory is still 956.7 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 63.73 ms. Allocated memory is still 1.0 GB. Free memory was 945.9 MB in the beginning and 940.6 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 48.48 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 935.2 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 8.18 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 929.8 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * RCFGBuilder took 430.04 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 892.2 MB in the end (delta: 37.6 MB). Peak memory consumption was 37.6 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 37.37 ms. Allocated memory is still 1.0 GB. Free memory was 892.2 MB in the beginning and 883.3 MB in the end (delta: 8.9 MB). Peak memory consumption was 8.9 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 711.74 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 57.7 MB). Free memory was 883.3 MB in the beginning and 1.0 GB in the end (delta: -126.8 MB). Peak memory consumption was 164.9 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 65.32 ms. Allocated memory is still 1.1 GB. Free memory was 1.0 GB in the beginning and 983.8 MB in the end (delta: 26.3 MB). Peak memory consumption was 26.3 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 87805.99 ms. Allocated memory was 1.1 GB in the beginning and 4.2 GB in the end (delta: 3.1 GB). Free memory was 983.8 MB in the beginning and 3.4 GB in the end (delta: -2.5 GB). Peak memory consumption was 3.6 GB. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    525 locations, 624 edges
  - StatisticsResult: BuchiProgram size
    1204 locations, 1998 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 5 terminating modules (5 trivial, 0 deterministic, 0 nondeterministic) and one nonterminating remainder module.5 modules have a trivial ranking function, the largest among these consists of 7 locations. The remainder module has 216 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 87.7s and 6 iterations.  TraceHistogramMax:1. Analysis of lassos took 87.1s. Construction of modules took 0.2s. BÃ¼chi inclusion checks took 0.2s. Highest rank in rank-based complementation 0. Minimization of det autom 5. Minimization of nondet autom 0. Automata minimization 0.0s AutomataMinimizationTime, 5 MinimizatonAttempts, 66 StatesRemovedByMinimization, 4 NontrivialMinimizations. Non-live state removal took 0.0s Buchi closure took 0.0s. Biggest automaton had 219 states and ocurred in iteration 2.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 1533 SDtfs, 1257 SDslu, 1413 SDs, 0 SdLazy, 709 SolverSat, 486 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 0.2s Time	LassoAnalysisResults: nont1 unkn0 SFLI0 SFLT0 conc0 concLT0 SILN0 SILU5 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - TransactionCounterexample: Violation of LTL property LTL
    Found an infinite, lasso-shaped execution that violates the LTL property LTL.
Stem:
Hakka(115792089237316195423570985008687907853269984665640564039457584007913129639942).transferFrom~address~address~uint256.gas(3979001)({from : 115792089237316195423570985008687907853269984665640564039457584007913129639936, from : 115792089237316195423570985008687907853269984665640564039457584007913129639936, to : 115792089237316195423570985008687907853269984665640564039457584007913129639936, amount : 1});
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != from_s295 || p2 != msgsender_MSG) && from_s295 == to_s295) && amount_s295 <= balanceOf_Hakka[this][from_s295]) && amount_s295 <= allowance_Hakka[this][from_s295][msgsender_MSG]) && amount_s295 >= 0) && amount_s295 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_Hakka[this][to_s295] >= 0) && balanceOf_Hakka[this][to_s295] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_Hakka[this][from_s295] >= 0) && balanceOf_Hakka[this][from_s295] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowance_Hakka[this][from_s295][msgsender_MSG] >= 0) && allowance_Hakka[this][from_s295][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_Hakka0 := true;
[L3]                 call_transferFrom_Hakka0 := false;
[L3]                 revert := revert_hold;
[L154]               havoc __exception;
[L155]               revert := false;
[L156]   COND FALSE  !(__exception)
[L183]   CALL        call __ret_0_ := transferFrom~address~address~uint256_Hakka__success(this, msgsender_MSG, msgvalue_MSG, from_s295, to_s295, amount_s295);
[L789]               __var_2 := -1 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L790]   COND FALSE  !(from_s295 != msgsender_MSG && allowance_Hakka[this][from_s295][msgsender_MSG] != -1 % 115792089237316195423570985008687907853269984665640564039457584007913129639936)
[L799]   COND FALSE  !(!(balanceOf_Hakka[this][from_s295] >= amount_s295))
[L803]   CALL        call __var_4 := sub~uint256~uint256_Hakka__success(this, msgsender_MSG, msgvalue_MSG, balanceOf_Hakka[this][from_s295], amount_s295);
[L716]               z_s157 := (x_s157 - y_s157) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L717]   COND FALSE  !(!((x_s157 - y_s157) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 <= x_s157))
[L803]   RET         call __var_4 := sub~uint256~uint256_Hakka__success(this, msgsender_MSG, msgvalue_MSG, balanceOf_Hakka[this][from_s295], amount_s295);
[L804]   COND FALSE  !(revert)
[L807]               sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_Hakka[this][from_s295];
[L808]               balanceOf_Hakka[this][from_s295] := __var_4;
[L809]               sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_Hakka[this][from_s295];
[L810]   CALL        call __var_5 := add~uint256~uint256_Hakka__success(this, msgsender_MSG, msgvalue_MSG, balanceOf_Hakka[this][to_s295], amount_s295);
[L698]               z_s136 := (x_s136 + y_s136) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L699]   COND FALSE  !(!((x_s136 + y_s136) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 >= x_s136))
[L810]   RET         call __var_5 := add~uint256~uint256_Hakka__success(this, msgsender_MSG, msgvalue_MSG, balanceOf_Hakka[this][to_s295], amount_s295);
[L811]   COND FALSE  !(revert)
[L814]               sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_Hakka[this][to_s295];
[L815]               balanceOf_Hakka[this][to_s295] := __var_5;
[L816]               sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_Hakka[this][to_s295];
[L817]               assert { :EventEmitted "Transfer_Hakka" } true;
[L818]               __ret_0_ := true;
[L183]   RET         call __ret_0_ := transferFrom~address~address~uint256_Hakka__success(this, msgsender_MSG, msgvalue_MSG, from_s295, to_s295, amount_s295);
[L184]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((__ret_0_ == true && allowance_Hakka[this][from_s295][msgsender_MSG] == old(allowance_Hakka[this][from_s295][msgsender_MSG]) - amount_s295) && totalSupply_Hakka[this] == old(totalSupply_Hakka[this])) && balanceOf_Hakka[this] == old(balanceOf_Hakka[this])) && allowance_Hakka[this][p1][p2] == old(allowance_Hakka[this][p1][p2])) && nonces_Hakka[this] == old(nonces_Hakka[this])) && DOMAIN_SEPARATOR_Hakka[this] == old(DOMAIN_SEPARATOR_Hakka[this])) && owner_Ownable[this] == old(owner_Ownable[this]));
[L3]                 revert := revert_hold;
[L1519]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_Hakka(this, msgsender_MSG, msgvalue_MSG, from_s295, to_s295, amount_s295);

Loop:

End of lasso representation.
RESULT: Ultimate could not prove your program: Toolchain returned no result.
Received shutdown request...
