This is Ultimate 0.1.24-f1553f5-m
[2020-11-24 16:11:04,783 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-24 16:11:04,785 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-24 16:11:04,797 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-24 16:11:04,797 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-24 16:11:04,797 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-24 16:11:04,799 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-24 16:11:04,800 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-24 16:11:04,802 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-24 16:11:04,802 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-24 16:11:04,803 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-24 16:11:04,803 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-24 16:11:04,804 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-24 16:11:04,805 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-24 16:11:04,806 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-24 16:11:04,806 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-24 16:11:04,807 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-24 16:11:04,808 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-24 16:11:04,810 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-24 16:11:04,811 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-24 16:11:04,812 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-24 16:11:04,813 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-24 16:11:04,814 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-24 16:11:04,815 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-24 16:11:04,815 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-24 16:11:04,815 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-24 16:11:04,816 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-24 16:11:04,816 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-24 16:11:04,816 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-24 16:11:04,817 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-24 16:11:04,817 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-24 16:11:04,818 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-24 16:11:04,818 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-24 16:11:04,819 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-24 16:11:04,819 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-24 16:11:04,820 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-24 16:11:04,820 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-24 16:11:04,820 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-24 16:11:04,820 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-24 16:11:04,821 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-24 16:11:04,822 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-24 16:11:04,822 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-24 16:11:04,830 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-24 16:11:04,830 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-24 16:11:04,831 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-24 16:11:04,831 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-24 16:11:04,831 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-24 16:11:04,831 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-24 16:11:04,831 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-24 16:11:04,831 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-24 16:11:04,832 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-24 16:11:04,832 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-24 16:11:04,832 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-24 16:11:04,832 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-24 16:11:04,832 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-24 16:11:04,832 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-24 16:11:04,832 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-24 16:11:04,832 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-24 16:11:04,832 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-24 16:11:04,832 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-24 16:11:04,833 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-24 16:11:04,833 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-24 16:11:04,833 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-24 16:11:04,833 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-24 16:11:04,833 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-24 16:11:04,833 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-24 16:11:04,833 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-24 16:11:04,833 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-24 16:11:04,857 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-24 16:11:04,872 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-24 16:11:04,874 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-24 16:11:04,875 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-24 16:11:04,876 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-24 16:11:04,876 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/SimpleToken_0x9135D92e3A34e2A94e4474B74b9DC2d51118eeD5_transfer-self.bpl
[2020-11-24 16:11:04,877 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/SimpleToken_0x9135D92e3A34e2A94e4474B74b9DC2d51118eeD5_transfer-self.bpl'
[2020-11-24 16:11:04,952 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-24 16:11:04,953 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-24 16:11:04,954 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-24 16:11:04,954 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-24 16:11:04,954 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-24 16:11:04,970 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "SimpleToken_0x9135D92e3A34e2A94e4474B74b9DC2d51118eeD5_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 04:11:04" (1/1) ...
[2020-11-24 16:11:04,971 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "SimpleToken_0x9135D92e3A34e2A94e4474B74b9DC2d51118eeD5_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 04:11:04" (1/1) ...
[2020-11-24 16:11:04,994 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "SimpleToken_0x9135D92e3A34e2A94e4474B74b9DC2d51118eeD5_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 04:11:04" (1/1) ...
[2020-11-24 16:11:04,995 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "SimpleToken_0x9135D92e3A34e2A94e4474B74b9DC2d51118eeD5_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 04:11:04" (1/1) ...
[2020-11-24 16:11:05,012 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "SimpleToken_0x9135D92e3A34e2A94e4474B74b9DC2d51118eeD5_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 04:11:04" (1/1) ...
[2020-11-24 16:11:05,021 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "SimpleToken_0x9135D92e3A34e2A94e4474B74b9DC2d51118eeD5_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 04:11:04" (1/1) ...
[2020-11-24 16:11:05,027 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "SimpleToken_0x9135D92e3A34e2A94e4474B74b9DC2d51118eeD5_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 04:11:04" (1/1) ...
[2020-11-24 16:11:05,035 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-24 16:11:05,035 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-24 16:11:05,036 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-24 16:11:05,038 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-24 16:11:05,041 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "SimpleToken_0x9135D92e3A34e2A94e4474B74b9DC2d51118eeD5_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 04:11:04" (1/1) ...
[2020-11-24 16:11:05,056 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(ERC20.transfer(to, value), msg.sender == to && value <= _balances_ERC20[this][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][to] >= 0 && _balances_ERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][msg.sender] >= 0 &&  _balances_ERC20[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(ERC20.transfer(to, value), return == true && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this]) && _balances_ERC20[this] == old(_balances_ERC20[this]) && _allowances_ERC20[this] == old(_allowances_ERC20[this]) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this]) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this]) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]))))
[2020-11-24 16:11:05,061 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(ERC20.transfer(to, value), msg.sender == to && value <= _balances_ERC20[this][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][to] >= 0 && _balances_ERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][msg.sender] >= 0 &&  _balances_ERC20[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(ERC20.transfer(to, value), return == true && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this]) && _balances_ERC20[this] == old(_balances_ERC20[this]) && _allowances_ERC20[this] == old(_allowances_ERC20[this]) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this]) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this]) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]))))
[2020-11-24 16:11:05,069 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(ERC20.transfer(to, value), msg.sender == to && value <= _balances_ERC20[this][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][to] >= 0 && _balances_ERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][msg.sender] >= 0 &&  _balances_ERC20[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(ERC20.transfer(to, value), return == true && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this]) && _balances_ERC20[this] == old(_balances_ERC20[this]) && _allowances_ERC20[this] == old(_allowances_ERC20[this]) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this]) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this]) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]))))
[2020-11-24 16:11:05,075 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( msg.sender==recipient_s391 && amount_s391<=_balances_ERC20[this][msg.sender] ) && amount_s391>=0 ) && amount_s391<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && _balances_ERC20[this][recipient_s391]>=0 ) && _balances_ERC20[this][recipient_s391]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && _balances_ERC20[this][msg.sender]>=0 ) && _balances_ERC20[this][msg.sender]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>],IdentifierExpression[recipient_s391,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]],BinaryExpression[COMPLEQ,IdentifierExpression[amount_s391,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>],ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]]]],BinaryExpression[COMPGEQ,IdentifierExpression[amount_s391,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>],IntegerLiteral[0]]],BinaryExpression[COMPLT,IdentifierExpression[amount_s391,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],[IdentifierExpression[recipient_s391,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],[IdentifierExpression[recipient_s391,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]]
[2020-11-24 16:11:05,077 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( __ret_0_==true && _totalSupply_ERC20[this]==( old(_totalSupply_ERC20[this]) ) ) && _balances_ERC20[this]==( old(_balances_ERC20[this]) ) ) && _allowances_ERC20[this]==( old(_allowances_ERC20[this]) ) ) && _name_ERC20Detailed[this]==( old(_name_ERC20Detailed[this]) ) ) && _symbol_ERC20Detailed[this]==( old(_symbol_ERC20Detailed[this]) ) ) && _decimals_ERC20Detailed[this]==( old(_decimals_ERC20Detailed[this]) ) ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[__ret_0_,<IMPLEMENTATION_OUTPARAM,transfer~address~uint256_ERC20>],BooleanLiteral[true]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_totalSupply_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_totalSupply_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_allowances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_allowances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_name_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_name_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_symbol_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_symbol_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_decimals_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_decimals_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]]]]]
[2020-11-24 16:11:05,081 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(ERC20.transfer(to, value), msg.sender == to && value <= _balances_ERC20[this][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][to] >= 0 && _balances_ERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][msg.sender] >= 0 &&  _balances_ERC20[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(ERC20.transfer(to, value), return == true && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this]) && _balances_ERC20[this] == old(_balances_ERC20[this]) && _allowances_ERC20[this] == old(_allowances_ERC20[this]) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this]) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this]) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]))))
[2020-11-24 16:11:05,081 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_transfer_ERC200) ==> ( <>AP(success_transfer_ERC200) ) ) )
Executed UtopiaSpecLang
[2020-11-24 16:11:05,087 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 04:11:05 PropertyContainer
[2020-11-24 16:11:05,087 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-24 16:11:05,087 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-24 16:11:05,087 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-24 16:11:05,087 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-24 16:11:05,088 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "SimpleToken_0x9135D92e3A34e2A94e4474B74b9DC2d51118eeD5_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 04:11:04" (1/2) ...
[2020-11-24 16:11:05,088 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-24 16:11:05,089 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-24 16:11:05,099 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 04:11:05" (2/2) ...
[2020-11-24 16:11:05,099 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-24 16:11:05,099 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-24 16:11:05,099 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-24 16:11:05,099 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-24 16:11:05,100 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "SimpleToken_0x9135D92e3A34e2A94e4474B74b9DC2d51118eeD5_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 04:11:04" (1/2) ...
[2020-11-24 16:11:05,154 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-24 16:11:05,154 INFO  L130     BoogieDeclarations]: Found specification of procedure _msgSender_Context__success
[2020-11-24 16:11:05,154 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__success
[2020-11-24 16:11:05,154 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__success
[2020-11-24 16:11:05,154 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256~string_SafeMath__success
[2020-11-24 16:11:05,154 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20
[2020-11-24 16:11:05,154 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ERC20
[2020-11-24 16:11:05,155 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20
[2020-11-24 16:11:05,155 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ERC20
[2020-11-24 16:11:05,155 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20
[2020-11-24 16:11:05,155 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20
[2020-11-24 16:11:05,155 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20
[2020-11-24 16:11:05,155 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ERC20
[2020-11-24 16:11:05,155 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20
[2020-11-24 16:11:05,155 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ERC20
[2020-11-24 16:11:05,155 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20
[2020-11-24 16:11:05,155 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20
[2020-11-24 16:11:05,156 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_ERC20__success
[2020-11-24 16:11:05,156 INFO  L130     BoogieDeclarations]: Found specification of procedure _approve~address~address~uint256_ERC20__success
[2020-11-24 16:11:05,156 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-24 16:11:05,156 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-24 16:11:05,156 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-24 16:11:05,156 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_IERC20
[2020-11-24 16:11:05,156 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_IERC20
[2020-11-24 16:11:05,156 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20Detailed
[2020-11-24 16:11:05,156 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20Detailed
[2020-11-24 16:11:05,156 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_Context
[2020-11-24 16:11:05,156 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_Context
[2020-11-24 16:11:05,157 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_SafeMath
[2020-11-24 16:11:05,157 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_SafeMath
[2020-11-24 16:11:05,157 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20
[2020-11-24 16:11:05,157 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20
[2020-11-24 16:11:05,157 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20Burnable
[2020-11-24 16:11:05,157 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20Burnable
[2020-11-24 16:11:05,157 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_SimpleToken
[2020-11-24 16:11:05,157 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-24 16:11:05,157 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-24 16:11:05,157 INFO  L130     BoogieDeclarations]: Found specification of procedure _msgSender_Context__fail
[2020-11-24 16:11:05,157 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__fail
[2020-11-24 16:11:05,157 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-24 16:11:05,157 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256~string_SafeMath__fail
[2020-11-24 16:11:05,158 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20__success
[2020-11-24 16:11:05,158 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20__fail
[2020-11-24 16:11:05,158 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20__success
[2020-11-24 16:11:05,158 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20__fail
[2020-11-24 16:11:05,158 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20__success
[2020-11-24 16:11:05,158 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20__fail
[2020-11-24 16:11:05,158 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20__success
[2020-11-24 16:11:05,158 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20__fail
[2020-11-24 16:11:05,158 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20__success
[2020-11-24 16:11:05,158 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20__fail
[2020-11-24 16:11:05,158 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20__success
[2020-11-24 16:11:05,158 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20__fail
[2020-11-24 16:11:05,158 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_ERC20__fail
[2020-11-24 16:11:05,159 INFO  L130     BoogieDeclarations]: Found specification of procedure _approve~address~address~uint256_ERC20__fail
[2020-11-24 16:11:05,159 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-24 16:11:05,159 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-24 16:11:05,159 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-24 16:11:05,159 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-24 16:11:05,159 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-24 16:11:05,159 INFO  L138     BoogieDeclarations]: Found implementation of procedure _msgSender_Context__fail
[2020-11-24 16:11:05,159 INFO  L138     BoogieDeclarations]: Found implementation of procedure _msgSender_Context__success
[2020-11-24 16:11:05,159 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__fail
[2020-11-24 16:11:05,159 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__success
[2020-11-24 16:11:05,159 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-24 16:11:05,159 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__success
[2020-11-24 16:11:05,159 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256~string_SafeMath__fail
[2020-11-24 16:11:05,160 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256~string_SafeMath__success
[2020-11-24 16:11:05,160 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ERC20__fail
[2020-11-24 16:11:05,160 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ERC20__success
[2020-11-24 16:11:05,160 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ERC20__fail
[2020-11-24 16:11:05,160 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ERC20__success
[2020-11-24 16:11:05,160 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20__fail
[2020-11-24 16:11:05,160 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20__success
[2020-11-24 16:11:05,160 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ERC20__fail
[2020-11-24 16:11:05,160 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ERC20__success
[2020-11-24 16:11:05,160 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ERC20__fail
[2020-11-24 16:11:05,160 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ERC20__success
[2020-11-24 16:11:05,160 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20__fail
[2020-11-24 16:11:05,160 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20__success
[2020-11-24 16:11:05,161 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_ERC20__fail
[2020-11-24 16:11:05,161 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_ERC20__success
[2020-11-24 16:11:05,161 INFO  L138     BoogieDeclarations]: Found implementation of procedure _approve~address~address~uint256_ERC20__fail
[2020-11-24 16:11:05,161 INFO  L138     BoogieDeclarations]: Found implementation of procedure _approve~address~address~uint256_ERC20__success
[2020-11-24 16:11:05,161 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-24 16:11:05,161 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-24 16:11:05,161 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-24 16:11:05,161 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-24 16:11:05,161 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-24 16:11:05,161 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-24 16:11:05,161 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_IERC20
[2020-11-24 16:11:05,161 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_IERC20
[2020-11-24 16:11:05,162 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20Detailed
[2020-11-24 16:11:05,162 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20Detailed
[2020-11-24 16:11:05,162 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_Context
[2020-11-24 16:11:05,162 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_Context
[2020-11-24 16:11:05,162 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_SafeMath
[2020-11-24 16:11:05,162 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_SafeMath
[2020-11-24 16:11:05,162 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20
[2020-11-24 16:11:05,162 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20
[2020-11-24 16:11:05,162 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20Burnable
[2020-11-24 16:11:05,162 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20Burnable
[2020-11-24 16:11:05,162 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_SimpleToken
[2020-11-24 16:11:05,162 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-24 16:11:05,162 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-24 16:11:05,163 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-24 16:11:05,377 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 16:11:05,378 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 16:11:05,378 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 16:11:05,718 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-24 16:11:05,718 INFO  L286             CfgBuilder]: Removed 7 assue(true) statements.
[2020-11-24 16:11:05,720 INFO  L202        PluginConnector]: Adding new model SimpleToken_0x9135D92e3A34e2A94e4474B74b9DC2d51118eeD5_transfer-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 04:11:05 BoogieIcfgContainer
[2020-11-24 16:11:05,720 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 04:11:05" (2/2) ...
[2020-11-24 16:11:05,720 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-24 16:11:05,720 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@29401437 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 04:11:05, skipping insertion in model container
[2020-11-24 16:11:05,720 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-24 16:11:05,721 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-24 16:11:05,721 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-24 16:11:05,722 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-24 16:11:05,722 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "SimpleToken_0x9135D92e3A34e2A94e4474B74b9DC2d51118eeD5_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 04:11:04" (1/3) ...
[2020-11-24 16:11:05,723 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@728df50e and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 04:11:05, skipping insertion in model container
[2020-11-24 16:11:05,723 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 04:11:05" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-24 16:11:05,760 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 04:11:05 NWAContainer
[2020-11-24 16:11:05,761 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-24 16:11:05,761 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-24 16:11:05,761 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-24 16:11:05,762 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-24 16:11:05,762 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "SimpleToken_0x9135D92e3A34e2A94e4474B74b9DC2d51118eeD5_transfer-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 04:11:05" (3/4) ...
[2020-11-24 16:11:05,763 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@1acd81b2 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 04:11:05, skipping insertion in model container
[2020-11-24 16:11:05,763 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 04:11:05" (4/4) ...
[2020-11-24 16:11:05,767 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-24 16:11:05,770 INFO  L110   BuchiProductObserver]: Initial RCFG 890 locations, 1279 edges
[2020-11-24 16:11:05,771 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-24 16:11:05,787 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-24 16:11:06,828 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-24 16:11:06,831 INFO  L110   BuchiProductObserver]: BuchiProgram size 2242 locations, 4195 edges
[2020-11-24 16:11:06,831 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 04:11:06 BoogieIcfgContainer
[2020-11-24 16:11:06,831 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-24 16:11:06,831 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-24 16:11:06,832 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-24 16:11:06,833 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-24 16:11:06,833 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 04:11:06" (1/1) ...
[2020-11-24 16:11:06,891 WARN  L196         IcfgDuplicator]: Creating raw copy for unreachable call because return is reachable in graph view: call __var_1 := sub~uint256~uint256~string_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, a_s189, b_s189, -5451559);
[2020-11-24 16:11:06,892 WARN  L196         IcfgDuplicator]: Creating raw copy for unreachable call because return is reachable in graph view: call __var_1 := sub~uint256~uint256~string_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, a_s189, b_s189, -5451559);
[2020-11-24 16:11:06,902 INFO  L313           BlockEncoder]: Initial Icfg 2242 locations, 4195 edges
[2020-11-24 16:11:06,903 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-24 16:11:06,903 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-24 16:11:06,904 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-24 16:11:06,904 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-24 16:11:06,914 INFO  L70    emoveInfeasibleEdges]: Removed 102 edges and 17 locations because of local infeasibility
[2020-11-24 16:11:06,920 INFO  L70        RemoveSinkStates]: Removed 50 edges and 33 locations by removing sink states
[2020-11-24 16:11:06,928 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-24 16:11:06,931 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-24 16:11:06,934 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-24 16:11:06,934 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-24 16:11:06,944 INFO  L313           BlockEncoder]: Encoded RCFG 2174 locations, 4017 edges
[2020-11-24 16:11:06,944 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 24.11 04:11:06 BasicIcfg
[2020-11-24 16:11:06,945 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-24 16:11:06,945 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-24 16:11:06,945 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-24 16:11:06,949 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-24 16:11:06,949 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 16:11:06,949 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "SimpleToken_0x9135D92e3A34e2A94e4474B74b9DC2d51118eeD5_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 04:11:04" (1/6) ...
[2020-11-24 16:11:06,951 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@278e94bd and model type SimpleToken_0x9135D92e3A34e2A94e4474B74b9DC2d51118eeD5_transfer-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 24.11 04:11:06, skipping insertion in model container
[2020-11-24 16:11:06,951 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 16:11:06,951 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 04:11:05" (2/6) ...
[2020-11-24 16:11:06,952 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@278e94bd and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 24.11 04:11:06, skipping insertion in model container
[2020-11-24 16:11:06,952 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 16:11:06,952 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "SimpleToken_0x9135D92e3A34e2A94e4474B74b9DC2d51118eeD5_transfer-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 04:11:05" (3/6) ...
[2020-11-24 16:11:06,952 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@278e94bd and model type SimpleToken_0x9135D92e3A34e2A94e4474B74b9DC2d51118eeD5_transfer-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 24.11 04:11:06, skipping insertion in model container
[2020-11-24 16:11:06,952 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 16:11:06,952 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 04:11:05" (4/6) ...
[2020-11-24 16:11:06,952 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@278e94bd and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 24.11 04:11:06, skipping insertion in model container
[2020-11-24 16:11:06,953 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 16:11:06,953 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 04:11:06" (5/6) ...
[2020-11-24 16:11:06,953 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@278e94bd and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 24.11 04:11:06, skipping insertion in model container
[2020-11-24 16:11:06,953 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 16:11:06,953 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 24.11 04:11:06" (6/6) ...
[2020-11-24 16:11:06,954 INFO  L404   chiAutomizerObserver]: Analyzing ICFG SimpleToken_0x9135D92e3A34e2A94e4474B74b9DC2d51118eeD5_transfer-self.bpl_BEv2
[2020-11-24 16:11:06,993 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-24 16:11:06,993 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-24 16:11:06,994 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-24 16:11:06,994 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-24 16:11:06,994 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-24 16:11:06,994 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-24 16:11:06,994 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-24 16:11:06,994 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-24 16:11:06,994 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-24 16:11:07,019 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2174 states.
[2020-11-24 16:11:07,070 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 16:11:07,070 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 16:11:07,070 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 16:11:07,079 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 16:11:07,079 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
[2020-11-24 16:11:07,079 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-24 16:11:07,079 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2174 states.
[2020-11-24 16:11:07,092 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 16:11:07,092 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 16:11:07,092 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 16:11:07,094 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 16:11:07,094 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L2]                 success_transfer_ERC200 := false;
[L2]                 call_transfer_ERC200 := false;
[L2]     CALL        call main();
[L2462]              assume null == 0;
[L2463]  CALL        call this := FreshRefGenerator__success();
[L708]               havoc newRef;
[L709]               assume Alloc[newRef] == false;
[L710]               Alloc[newRef] := true;
[L711]               assume newRef != null;
[L2463]  RET         call this := FreshRefGenerator__success();
[L2464]              assume now >= 0;
[L2465]              assume DType[this] == SimpleToken;
[L2466]              assume !revert && gas >= 0;
[L2467]  CALL        call CorralChoice_SimpleToken(this);
[L2374]              havoc msgsender_MSG;
[L2375]              havoc msgvalue_MSG;
[L2376]              havoc choice;
[L2377]              havoc __ret_0_totalSupply;
[L2378]              havoc account_s372;
[L2379]              havoc __ret_0_balanceOf;
[L2380]              havoc recipient_s391;
[L2381]              havoc amount_s391;
[L2382]              havoc __ret_0_transfer;
[L2383]              havoc owner_s407;
[L2384]              havoc spender_s407;
[L2385]              havoc __ret_0_allowance;
[L2386]              havoc spender_s426;
[L2387]              havoc amount_s426;
[L2388]              havoc __ret_0_approve;
[L2389]              havoc sender_s462;
[L2390]              havoc recipient_s462;
[L2391]              havoc amount_s462;
[L2392]              havoc __ret_0_transferFrom;
[L2393]              havoc name_s98;
[L2394]              havoc symbol_s98;
[L2395]              havoc decimals_s98;
[L2396]              havoc __ret_0_name;
[L2397]              havoc __ret_0_symbol;
[L2398]              havoc __ret_0_decimals;
[L2399]              havoc spender_s489;
[L2400]              havoc addedValue_s489;
[L2401]              havoc __ret_0_increaseAllowance;
[L2402]              havoc spender_s517;
[L2403]              havoc subtractedValue_s517;
[L2404]              havoc __ret_0_decreaseAllowance;
[L2405]              havoc amount_s749;
[L2406]              havoc account_s762;
[L2407]              havoc amount_s762;
[L2408]              havoc tmpNow;
[L2409]              havoc gas;
[L2410]              assume gas > 4000000 && gas <= 8000000;
[L2411]              tmpNow := now;
[L2412]              havoc now;
[L2413]              assume now > tmpNow;
[L2414]              assume msgsender_MSG != null;
[L2415]  COND TRUE   choice == 6
[L2416]              gas := gas - 21000;
[L2417]  COND FALSE  !(gas >= 0)
[L2467]  RET         call CorralChoice_SimpleToken(this);

Loop:
[L2467]        assume true;

[2020-11-24 16:11:07,110 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 16:11:07,110 INFO  L82        PathProgramCache]: Analyzing trace with hash 1946305949, now seen corresponding path program 1 times
[2020-11-24 16:11:07,116 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 16:11:07,140 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 16:11:07,204 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 16:11:07,207 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 16:11:07,207 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [5] imperfect sequences [] total 5
[2020-11-24 16:11:07,212 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 16:11:07,224 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 5 interpolants.
[2020-11-24 16:11:07,224 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=9, Invalid=11, Unknown=0, NotChecked=0, Total=20
[2020-11-24 16:11:07,226 INFO  L87              Difference]: Start difference. First operand 2174 states. Second operand 5 states.
[2020-11-24 16:11:07,573 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 16:11:07,573 INFO  L93              Difference]: Finished difference Result 864 states and 1068 transitions.
[2020-11-24 16:11:07,574 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-24 16:11:07,575 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 864 states and 1068 transitions.
[2020-11-24 16:11:07,583 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 16:11:07,590 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 864 states to 254 states and 295 transitions.
[2020-11-24 16:11:07,591 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 4
[2020-11-24 16:11:07,592 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 254
[2020-11-24 16:11:07,593 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 254 states and 295 transitions.
[2020-11-24 16:11:07,598 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 16:11:07,598 INFO  L728         BuchiCegarLoop]: Abstraction has 254 states and 295 transitions.
[2020-11-24 16:11:07,616 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 254 states and 295 transitions.
[2020-11-24 16:11:07,631 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 254 to 254.
[2020-11-24 16:11:07,632 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 254 states.
[2020-11-24 16:11:07,633 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 254 states to 254 states and 295 transitions.
[2020-11-24 16:11:07,634 INFO  L751         BuchiCegarLoop]: Abstraction has 254 states and 295 transitions.
[2020-11-24 16:11:07,634 INFO  L631         BuchiCegarLoop]: Abstraction has 254 states and 295 transitions.
[2020-11-24 16:11:07,634 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-24 16:11:07,634 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 254 states and 295 transitions.
[2020-11-24 16:11:07,636 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 16:11:07,636 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 16:11:07,636 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 16:11:07,637 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 16:11:07,637 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L2]                 success_transfer_ERC200 := false;
[L2]                 call_transfer_ERC200 := false;
[L2]     CALL        call main();
[L2462]              assume null == 0;
[L2463]  CALL        call this := FreshRefGenerator__success();
[L708]               havoc newRef;
[L709]               assume Alloc[newRef] == false;
[L710]               Alloc[newRef] := true;
[L711]               assume newRef != null;
[L2463]  RET         call this := FreshRefGenerator__success();
[L2464]              assume now >= 0;
[L2465]              assume DType[this] == SimpleToken;
[L2466]              assume !revert && gas >= 0;
[L2467]  CALL        call CorralChoice_SimpleToken(this);
[L2374]              havoc msgsender_MSG;
[L2375]              havoc msgvalue_MSG;
[L2376]              havoc choice;
[L2377]              havoc __ret_0_totalSupply;
[L2378]              havoc account_s372;
[L2379]              havoc __ret_0_balanceOf;
[L2380]              havoc recipient_s391;
[L2381]              havoc amount_s391;
[L2382]              havoc __ret_0_transfer;
[L2383]              havoc owner_s407;
[L2384]              havoc spender_s407;
[L2385]              havoc __ret_0_allowance;
[L2386]              havoc spender_s426;
[L2387]              havoc amount_s426;
[L2388]              havoc __ret_0_approve;
[L2389]              havoc sender_s462;
[L2390]              havoc recipient_s462;
[L2391]              havoc amount_s462;
[L2392]              havoc __ret_0_transferFrom;
[L2393]              havoc name_s98;
[L2394]              havoc symbol_s98;
[L2395]              havoc decimals_s98;
[L2396]              havoc __ret_0_name;
[L2397]              havoc __ret_0_symbol;
[L2398]              havoc __ret_0_decimals;
[L2399]              havoc spender_s489;
[L2400]              havoc addedValue_s489;
[L2401]              havoc __ret_0_increaseAllowance;
[L2402]              havoc spender_s517;
[L2403]              havoc subtractedValue_s517;
[L2404]              havoc __ret_0_decreaseAllowance;
[L2405]              havoc amount_s749;
[L2406]              havoc account_s762;
[L2407]              havoc amount_s762;
[L2408]              havoc tmpNow;
[L2409]              havoc gas;
[L2410]              assume gas > 4000000 && gas <= 8000000;
[L2411]              tmpNow := now;
[L2412]              havoc now;
[L2413]              assume now > tmpNow;
[L2414]              assume msgsender_MSG != null;
[L2415]  COND FALSE  !(choice == 6)
[L2421]  COND FALSE  !(choice == 5)
[L2427]  COND TRUE   choice == 4
[L2428]              gas := gas - 21000;
[L2429]  COND TRUE   gas >= 0
[L2430]              assume amount_s391 >= 0 && amount_s391 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2431]              assume msgvalue_MSG == 0;
[L2432]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s391, amount_s391);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == recipient_s391 && amount_s391 <= _balances_ERC20[this][msgsender_MSG]) && amount_s391 >= 0) && amount_s391 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s391] >= 0) && _balances_ERC20[this][recipient_s391] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_ERC200 := true;
[L2]                 call_transfer_ERC200 := false;
[L2]                 revert := revert_hold;
[L180]               havoc __exception;
[L181]               revert := false;
[L182]   COND FALSE  !(__exception)
[L203]   CALL        call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, recipient_s391, amount_s391);
[L866]   COND TRUE   DType[this] == SimpleToken
[L867]   CALL        call __var_2 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L722]               __ret_0_ := msgsender_MSG;
[L867]   RET         call __var_2 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L868]   COND TRUE   revert
[L203]   RET         call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, recipient_s391, amount_s391);
[L204]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !((((((__ret_0_ == true && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _balances_ERC20[this] == old(_balances_ERC20[this])) && _allowances_ERC20[this] == old(_allowances_ERC20[this])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]));
[L2]                 revert := revert_hold;
[L2432]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s391, amount_s391);
[L2467]  RET         call CorralChoice_SimpleToken(this);

Loop:
[L2467]        assume true;

[2020-11-24 16:11:07,640 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 16:11:07,640 INFO  L82        PathProgramCache]: Analyzing trace with hash -676723677, now seen corresponding path program 1 times
[2020-11-24 16:11:07,641 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 16:11:07,652 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 16:11:07,667 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 16:11:07,667 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 16:11:07,667 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-24 16:11:07,669 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 16:11:07,669 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-24 16:11:07,669 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-24 16:11:07,669 INFO  L87              Difference]: Start difference. First operand 254 states and 295 transitions. cyclomatic complexity: 42 Second operand 3 states.
[2020-11-24 16:11:07,680 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 16:11:07,681 INFO  L93              Difference]: Finished difference Result 301 states and 345 transitions.
[2020-11-24 16:11:07,681 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-24 16:11:07,681 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 301 states and 345 transitions.
[2020-11-24 16:11:07,683 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 2
[2020-11-24 16:11:07,685 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 301 states to 277 states and 308 transitions.
[2020-11-24 16:11:07,686 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 277
[2020-11-24 16:11:07,686 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 277
[2020-11-24 16:11:07,686 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 277 states and 308 transitions.
[2020-11-24 16:11:07,687 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 16:11:07,687 INFO  L728         BuchiCegarLoop]: Abstraction has 277 states and 308 transitions.
[2020-11-24 16:11:07,688 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 277 states and 308 transitions.
[2020-11-24 16:11:07,694 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 277 to 266.
[2020-11-24 16:11:07,694 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 266 states.
[2020-11-24 16:11:07,695 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 266 states to 266 states and 297 transitions.
[2020-11-24 16:11:07,695 INFO  L751         BuchiCegarLoop]: Abstraction has 266 states and 297 transitions.
[2020-11-24 16:11:07,695 INFO  L631         BuchiCegarLoop]: Abstraction has 266 states and 297 transitions.
[2020-11-24 16:11:07,695 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-24 16:11:07,695 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 266 states and 297 transitions.
[2020-11-24 16:11:07,696 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 16:11:07,696 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 16:11:07,696 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 16:11:07,697 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 16:11:07,698 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L2]                 success_transfer_ERC200 := false;
[L2]                 call_transfer_ERC200 := false;
[L2]     CALL        call main();
[L2462]              assume null == 0;
[L2463]  CALL        call this := FreshRefGenerator__success();
[L708]               havoc newRef;
[L709]               assume Alloc[newRef] == false;
[L710]               Alloc[newRef] := true;
[L711]               assume newRef != null;
[L2463]  RET         call this := FreshRefGenerator__success();
[L2464]              assume now >= 0;
[L2465]              assume DType[this] == SimpleToken;
[L2466]              assume !revert && gas >= 0;
[L2467]  CALL        call CorralChoice_SimpleToken(this);
[L2374]              havoc msgsender_MSG;
[L2375]              havoc msgvalue_MSG;
[L2376]              havoc choice;
[L2377]              havoc __ret_0_totalSupply;
[L2378]              havoc account_s372;
[L2379]              havoc __ret_0_balanceOf;
[L2380]              havoc recipient_s391;
[L2381]              havoc amount_s391;
[L2382]              havoc __ret_0_transfer;
[L2383]              havoc owner_s407;
[L2384]              havoc spender_s407;
[L2385]              havoc __ret_0_allowance;
[L2386]              havoc spender_s426;
[L2387]              havoc amount_s426;
[L2388]              havoc __ret_0_approve;
[L2389]              havoc sender_s462;
[L2390]              havoc recipient_s462;
[L2391]              havoc amount_s462;
[L2392]              havoc __ret_0_transferFrom;
[L2393]              havoc name_s98;
[L2394]              havoc symbol_s98;
[L2395]              havoc decimals_s98;
[L2396]              havoc __ret_0_name;
[L2397]              havoc __ret_0_symbol;
[L2398]              havoc __ret_0_decimals;
[L2399]              havoc spender_s489;
[L2400]              havoc addedValue_s489;
[L2401]              havoc __ret_0_increaseAllowance;
[L2402]              havoc spender_s517;
[L2403]              havoc subtractedValue_s517;
[L2404]              havoc __ret_0_decreaseAllowance;
[L2405]              havoc amount_s749;
[L2406]              havoc account_s762;
[L2407]              havoc amount_s762;
[L2408]              havoc tmpNow;
[L2409]              havoc gas;
[L2410]              assume gas > 4000000 && gas <= 8000000;
[L2411]              tmpNow := now;
[L2412]              havoc now;
[L2413]              assume now > tmpNow;
[L2414]              assume msgsender_MSG != null;
[L2415]  COND FALSE  !(choice == 6)
[L2421]  COND FALSE  !(choice == 5)
[L2427]  COND TRUE   choice == 4
[L2428]              gas := gas - 21000;
[L2429]  COND TRUE   gas >= 0
[L2430]              assume amount_s391 >= 0 && amount_s391 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2431]              assume msgvalue_MSG == 0;
[L2432]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s391, amount_s391);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == recipient_s391 && amount_s391 <= _balances_ERC20[this][msgsender_MSG]) && amount_s391 >= 0) && amount_s391 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s391] >= 0) && _balances_ERC20[this][recipient_s391] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_ERC200 := true;
[L2]                 call_transfer_ERC200 := false;
[L2]                 revert := revert_hold;
[L180]               havoc __exception;
[L181]               revert := false;
[L182]   COND TRUE   __exception
[L183]               __tmp__Balance := Balance;
[L184]               __tmp__DType := DType;
[L185]               __tmp__Alloc := Alloc;
[L186]               __tmp__balance_ADDR := balance_ADDR;
[L187]               __tmp__M_Ref_int := M_Ref_int;
[L188]               __tmp__sum__balances0 := sum__balances0;
[L189]               __tmp__alloc__allowances_ERC20_lvl0 := alloc__allowances_ERC20_lvl0;
[L190]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L191]               __tmp__sum__allowances1 := sum__allowances1;
[L192]               __tmp__Length := Length;
[L193]               __tmp__now := now;
[L194]               __tmp___name_ERC20Detailed := _name_ERC20Detailed;
[L195]               __tmp___symbol_ERC20Detailed := _symbol_ERC20Detailed;
[L196]               __tmp___decimals_ERC20Detailed := _decimals_ERC20Detailed;
[L197]               __tmp___balances_ERC20 := _balances_ERC20;
[L198]               __tmp___allowances_ERC20 := _allowances_ERC20;
[L199]               __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L200]   CALL        call __ret_0_ := transfer~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, recipient_s391, amount_s391);
[L823]   COND TRUE   __tmp__DType[this] == SimpleToken
[L824]   CALL        call __var_2 := _msgSender_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L716]               __ret_0_ := msgsender_MSG;
[L824]   RET         call __var_2 := _msgSender_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L825]   COND TRUE   revert
[L200]   RET         call __ret_0_ := transfer~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, recipient_s391, amount_s391);
[L201]               assume revert || gas < 0;
[L2432]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s391, amount_s391);
[L2467]  RET         call CorralChoice_SimpleToken(this);

Loop:
[L2467]        assume true;

[2020-11-24 16:11:07,700 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 16:11:07,700 INFO  L82        PathProgramCache]: Analyzing trace with hash -1447722270, now seen corresponding path program 1 times
[2020-11-24 16:11:07,701 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 16:11:07,709 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 16:11:07,728 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 16:11:07,728 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 16:11:07,728 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [5] imperfect sequences [] total 5
[2020-11-24 16:11:07,728 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 16:11:07,728 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 5 interpolants.
[2020-11-24 16:11:07,728 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=9, Invalid=11, Unknown=0, NotChecked=0, Total=20
[2020-11-24 16:11:07,729 INFO  L87              Difference]: Start difference. First operand 266 states and 297 transitions. cyclomatic complexity: 32 Second operand 5 states.
[2020-11-24 16:11:07,749 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 16:11:07,749 INFO  L93              Difference]: Finished difference Result 277 states and 300 transitions.
[2020-11-24 16:11:07,749 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-24 16:11:07,750 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 277 states and 300 transitions.
[2020-11-24 16:11:07,751 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 2
[2020-11-24 16:11:07,753 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 277 states to 277 states and 300 transitions.
[2020-11-24 16:11:07,753 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 277
[2020-11-24 16:11:07,753 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 277
[2020-11-24 16:11:07,753 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 277 states and 300 transitions.
[2020-11-24 16:11:07,754 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 16:11:07,754 INFO  L728         BuchiCegarLoop]: Abstraction has 277 states and 300 transitions.
[2020-11-24 16:11:07,754 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 277 states and 300 transitions.
[2020-11-24 16:11:07,758 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 277 to 266.
[2020-11-24 16:11:07,758 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 266 states.
[2020-11-24 16:11:07,759 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 266 states to 266 states and 289 transitions.
[2020-11-24 16:11:07,759 INFO  L751         BuchiCegarLoop]: Abstraction has 266 states and 289 transitions.
[2020-11-24 16:11:07,759 INFO  L631         BuchiCegarLoop]: Abstraction has 266 states and 289 transitions.
[2020-11-24 16:11:07,759 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-24 16:11:07,759 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 266 states and 289 transitions.
[2020-11-24 16:11:07,760 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 16:11:07,760 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 16:11:07,760 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 16:11:07,762 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 16:11:07,762 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L2]                 success_transfer_ERC200 := false;
[L2]                 call_transfer_ERC200 := false;
[L2]     CALL        call main();
[L2462]              assume null == 0;
[L2463]  CALL        call this := FreshRefGenerator__success();
[L708]               havoc newRef;
[L709]               assume Alloc[newRef] == false;
[L710]               Alloc[newRef] := true;
[L711]               assume newRef != null;
[L2463]  RET         call this := FreshRefGenerator__success();
[L2464]              assume now >= 0;
[L2465]              assume DType[this] == SimpleToken;
[L2466]              assume !revert && gas >= 0;
[L2467]  CALL        call CorralChoice_SimpleToken(this);
[L2374]              havoc msgsender_MSG;
[L2375]              havoc msgvalue_MSG;
[L2376]              havoc choice;
[L2377]              havoc __ret_0_totalSupply;
[L2378]              havoc account_s372;
[L2379]              havoc __ret_0_balanceOf;
[L2380]              havoc recipient_s391;
[L2381]              havoc amount_s391;
[L2382]              havoc __ret_0_transfer;
[L2383]              havoc owner_s407;
[L2384]              havoc spender_s407;
[L2385]              havoc __ret_0_allowance;
[L2386]              havoc spender_s426;
[L2387]              havoc amount_s426;
[L2388]              havoc __ret_0_approve;
[L2389]              havoc sender_s462;
[L2390]              havoc recipient_s462;
[L2391]              havoc amount_s462;
[L2392]              havoc __ret_0_transferFrom;
[L2393]              havoc name_s98;
[L2394]              havoc symbol_s98;
[L2395]              havoc decimals_s98;
[L2396]              havoc __ret_0_name;
[L2397]              havoc __ret_0_symbol;
[L2398]              havoc __ret_0_decimals;
[L2399]              havoc spender_s489;
[L2400]              havoc addedValue_s489;
[L2401]              havoc __ret_0_increaseAllowance;
[L2402]              havoc spender_s517;
[L2403]              havoc subtractedValue_s517;
[L2404]              havoc __ret_0_decreaseAllowance;
[L2405]              havoc amount_s749;
[L2406]              havoc account_s762;
[L2407]              havoc amount_s762;
[L2408]              havoc tmpNow;
[L2409]              havoc gas;
[L2410]              assume gas > 4000000 && gas <= 8000000;
[L2411]              tmpNow := now;
[L2412]              havoc now;
[L2413]              assume now > tmpNow;
[L2414]              assume msgsender_MSG != null;
[L2415]  COND FALSE  !(choice == 6)
[L2421]  COND FALSE  !(choice == 5)
[L2427]  COND TRUE   choice == 4
[L2428]              gas := gas - 21000;
[L2429]  COND TRUE   gas >= 0
[L2430]              assume amount_s391 >= 0 && amount_s391 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2431]              assume msgvalue_MSG == 0;
[L2432]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s391, amount_s391);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == recipient_s391 && amount_s391 <= _balances_ERC20[this][msgsender_MSG]) && amount_s391 >= 0) && amount_s391 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s391] >= 0) && _balances_ERC20[this][recipient_s391] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_ERC200 := true;
[L2]                 call_transfer_ERC200 := false;
[L2]                 revert := revert_hold;
[L180]               havoc __exception;
[L181]               revert := false;
[L182]   COND TRUE   __exception
[L183]               __tmp__Balance := Balance;
[L184]               __tmp__DType := DType;
[L185]               __tmp__Alloc := Alloc;
[L186]               __tmp__balance_ADDR := balance_ADDR;
[L187]               __tmp__M_Ref_int := M_Ref_int;
[L188]               __tmp__sum__balances0 := sum__balances0;
[L189]               __tmp__alloc__allowances_ERC20_lvl0 := alloc__allowances_ERC20_lvl0;
[L190]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L191]               __tmp__sum__allowances1 := sum__allowances1;
[L192]               __tmp__Length := Length;
[L193]               __tmp__now := now;
[L194]               __tmp___name_ERC20Detailed := _name_ERC20Detailed;
[L195]               __tmp___symbol_ERC20Detailed := _symbol_ERC20Detailed;
[L196]               __tmp___decimals_ERC20Detailed := _decimals_ERC20Detailed;
[L197]               __tmp___balances_ERC20 := _balances_ERC20;
[L198]               __tmp___allowances_ERC20 := _allowances_ERC20;
[L199]               __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L200]   CALL        call __ret_0_ := transfer~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, recipient_s391, amount_s391);
[L823]   COND TRUE   __tmp__DType[this] == SimpleToken
[L824]   CALL        call __var_2 := _msgSender_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L716]               __ret_0_ := msgsender_MSG;
[L824]   RET         call __var_2 := _msgSender_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L825]   COND FALSE  !(revert)
[L841]   COND TRUE   __tmp__DType[this] == SimpleToken
[L842]   CALL        call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, __var_2, recipient_s391, amount_s391);
[L1180]              __var_7 := null;
[L1181]  COND TRUE   !(sender_s574 != null)
[L1182]              revert := true;
[L842]   RET         call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, __var_2, recipient_s391, amount_s391);
[L843]   COND TRUE   revert
[L200]   RET         call __ret_0_ := transfer~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, recipient_s391, amount_s391);
[L201]               assume revert || gas < 0;
[L2432]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s391, amount_s391);
[L2467]  RET         call CorralChoice_SimpleToken(this);

Loop:
[L2467]        assume true;

[2020-11-24 16:11:07,764 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 16:11:07,764 INFO  L82        PathProgramCache]: Analyzing trace with hash 521800436, now seen corresponding path program 1 times
[2020-11-24 16:11:07,765 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 16:11:07,773 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 16:11:07,801 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 16:11:07,801 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 16:11:07,801 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [8] imperfect sequences [] total 8
[2020-11-24 16:11:07,802 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 16:11:07,802 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 8 interpolants.
[2020-11-24 16:11:07,802 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=13, Invalid=43, Unknown=0, NotChecked=0, Total=56
[2020-11-24 16:11:07,802 INFO  L87              Difference]: Start difference. First operand 266 states and 289 transitions. cyclomatic complexity: 24 Second operand 8 states.
[2020-11-24 16:11:07,822 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 16:11:07,822 INFO  L93              Difference]: Finished difference Result 280 states and 304 transitions.
[2020-11-24 16:11:07,822 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 8 states. 
[2020-11-24 16:11:07,823 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 280 states and 304 transitions.
[2020-11-24 16:11:07,825 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 16:11:07,826 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 280 states to 265 states and 287 transitions.
[2020-11-24 16:11:07,826 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 265
[2020-11-24 16:11:07,826 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 265
[2020-11-24 16:11:07,826 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 265 states and 287 transitions.
[2020-11-24 16:11:07,827 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 16:11:07,827 INFO  L728         BuchiCegarLoop]: Abstraction has 265 states and 287 transitions.
[2020-11-24 16:11:07,827 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 265 states and 287 transitions.
[2020-11-24 16:11:07,830 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 265 to 265.
[2020-11-24 16:11:07,830 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 265 states.
[2020-11-24 16:11:07,831 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 265 states to 265 states and 287 transitions.
[2020-11-24 16:11:07,831 INFO  L751         BuchiCegarLoop]: Abstraction has 265 states and 287 transitions.
[2020-11-24 16:11:07,831 INFO  L631         BuchiCegarLoop]: Abstraction has 265 states and 287 transitions.
[2020-11-24 16:11:07,831 INFO  L445         BuchiCegarLoop]: ======== Iteration 5============
[2020-11-24 16:11:07,831 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 265 states and 287 transitions.
[2020-11-24 16:11:07,832 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 16:11:07,832 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 16:11:07,832 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 16:11:07,833 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 16:11:07,833 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L2]                 success_transfer_ERC200 := false;
[L2]                 call_transfer_ERC200 := false;
[L2]     CALL        call main();
[L2462]              assume null == 0;
[L2463]  CALL        call this := FreshRefGenerator__success();
[L708]               havoc newRef;
[L709]               assume Alloc[newRef] == false;
[L710]               Alloc[newRef] := true;
[L711]               assume newRef != null;
[L2463]  RET         call this := FreshRefGenerator__success();
[L2464]              assume now >= 0;
[L2465]              assume DType[this] == SimpleToken;
[L2466]              assume !revert && gas >= 0;
[L2467]  CALL        call CorralChoice_SimpleToken(this);
[L2374]              havoc msgsender_MSG;
[L2375]              havoc msgvalue_MSG;
[L2376]              havoc choice;
[L2377]              havoc __ret_0_totalSupply;
[L2378]              havoc account_s372;
[L2379]              havoc __ret_0_balanceOf;
[L2380]              havoc recipient_s391;
[L2381]              havoc amount_s391;
[L2382]              havoc __ret_0_transfer;
[L2383]              havoc owner_s407;
[L2384]              havoc spender_s407;
[L2385]              havoc __ret_0_allowance;
[L2386]              havoc spender_s426;
[L2387]              havoc amount_s426;
[L2388]              havoc __ret_0_approve;
[L2389]              havoc sender_s462;
[L2390]              havoc recipient_s462;
[L2391]              havoc amount_s462;
[L2392]              havoc __ret_0_transferFrom;
[L2393]              havoc name_s98;
[L2394]              havoc symbol_s98;
[L2395]              havoc decimals_s98;
[L2396]              havoc __ret_0_name;
[L2397]              havoc __ret_0_symbol;
[L2398]              havoc __ret_0_decimals;
[L2399]              havoc spender_s489;
[L2400]              havoc addedValue_s489;
[L2401]              havoc __ret_0_increaseAllowance;
[L2402]              havoc spender_s517;
[L2403]              havoc subtractedValue_s517;
[L2404]              havoc __ret_0_decreaseAllowance;
[L2405]              havoc amount_s749;
[L2406]              havoc account_s762;
[L2407]              havoc amount_s762;
[L2408]              havoc tmpNow;
[L2409]              havoc gas;
[L2410]              assume gas > 4000000 && gas <= 8000000;
[L2411]              tmpNow := now;
[L2412]              havoc now;
[L2413]              assume now > tmpNow;
[L2414]              assume msgsender_MSG != null;
[L2415]  COND FALSE  !(choice == 6)
[L2421]  COND FALSE  !(choice == 5)
[L2427]  COND TRUE   choice == 4
[L2428]              gas := gas - 21000;
[L2429]  COND TRUE   gas >= 0
[L2430]              assume amount_s391 >= 0 && amount_s391 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2431]              assume msgvalue_MSG == 0;
[L2432]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s391, amount_s391);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == recipient_s391 && amount_s391 <= _balances_ERC20[this][msgsender_MSG]) && amount_s391 >= 0) && amount_s391 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s391] >= 0) && _balances_ERC20[this][recipient_s391] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_ERC200 := true;
[L2]                 call_transfer_ERC200 := false;
[L2]                 revert := revert_hold;
[L180]               havoc __exception;
[L181]               revert := false;
[L182]   COND TRUE   __exception
[L183]               __tmp__Balance := Balance;
[L184]               __tmp__DType := DType;
[L185]               __tmp__Alloc := Alloc;
[L186]               __tmp__balance_ADDR := balance_ADDR;
[L187]               __tmp__M_Ref_int := M_Ref_int;
[L188]               __tmp__sum__balances0 := sum__balances0;
[L189]               __tmp__alloc__allowances_ERC20_lvl0 := alloc__allowances_ERC20_lvl0;
[L190]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L191]               __tmp__sum__allowances1 := sum__allowances1;
[L192]               __tmp__Length := Length;
[L193]               __tmp__now := now;
[L194]               __tmp___name_ERC20Detailed := _name_ERC20Detailed;
[L195]               __tmp___symbol_ERC20Detailed := _symbol_ERC20Detailed;
[L196]               __tmp___decimals_ERC20Detailed := _decimals_ERC20Detailed;
[L197]               __tmp___balances_ERC20 := _balances_ERC20;
[L198]               __tmp___allowances_ERC20 := _allowances_ERC20;
[L199]               __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L200]   CALL        call __ret_0_ := transfer~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, recipient_s391, amount_s391);
[L823]   COND TRUE   __tmp__DType[this] == SimpleToken
[L824]   CALL        call __var_2 := _msgSender_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L716]               __ret_0_ := msgsender_MSG;
[L824]   RET         call __var_2 := _msgSender_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L825]   COND FALSE  !(revert)
[L841]   COND TRUE   __tmp__DType[this] == SimpleToken
[L842]   CALL        call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, __var_2, recipient_s391, amount_s391);
[L1180]              __var_7 := null;
[L1181]  COND FALSE  !(!(sender_s574 != null))
[L1185]              __var_8 := null;
[L1186]  COND TRUE   !(recipient_s574 != null)
[L1187]              revert := true;
[L842]   RET         call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, __var_2, recipient_s391, amount_s391);
[L843]   COND TRUE   revert
[L200]   RET         call __ret_0_ := transfer~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, recipient_s391, amount_s391);
[L201]               assume revert || gas < 0;
[L2432]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s391, amount_s391);
[L2467]  RET         call CorralChoice_SimpleToken(this);

Loop:
[L2467]        assume true;

[2020-11-24 16:11:07,836 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 16:11:07,836 INFO  L82        PathProgramCache]: Analyzing trace with hash -174417365, now seen corresponding path program 1 times
[2020-11-24 16:11:07,837 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 16:11:07,843 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 16:11:07,863 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 16:11:07,864 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 16:11:07,864 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [7] imperfect sequences [] total 7
[2020-11-24 16:11:07,864 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 16:11:07,864 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 7 interpolants.
[2020-11-24 16:11:07,864 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=11, Invalid=31, Unknown=0, NotChecked=0, Total=42
[2020-11-24 16:11:07,865 INFO  L87              Difference]: Start difference. First operand 265 states and 287 transitions. cyclomatic complexity: 23 Second operand 7 states.
[2020-11-24 16:11:07,879 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 16:11:07,880 INFO  L93              Difference]: Finished difference Result 279 states and 302 transitions.
[2020-11-24 16:11:07,880 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 7 states. 
[2020-11-24 16:11:07,880 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 279 states and 302 transitions.
[2020-11-24 16:11:07,882 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 16:11:07,883 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 279 states to 264 states and 285 transitions.
[2020-11-24 16:11:07,883 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 264
[2020-11-24 16:11:07,883 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 264
[2020-11-24 16:11:07,883 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 264 states and 285 transitions.
[2020-11-24 16:11:07,884 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 16:11:07,884 INFO  L728         BuchiCegarLoop]: Abstraction has 264 states and 285 transitions.
[2020-11-24 16:11:07,884 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 264 states and 285 transitions.
[2020-11-24 16:11:07,887 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 264 to 264.
[2020-11-24 16:11:07,887 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 264 states.
[2020-11-24 16:11:07,888 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 264 states to 264 states and 285 transitions.
[2020-11-24 16:11:07,888 INFO  L751         BuchiCegarLoop]: Abstraction has 264 states and 285 transitions.
[2020-11-24 16:11:07,888 INFO  L631         BuchiCegarLoop]: Abstraction has 264 states and 285 transitions.
[2020-11-24 16:11:07,888 INFO  L445         BuchiCegarLoop]: ======== Iteration 6============
[2020-11-24 16:11:07,888 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 264 states and 285 transitions.
[2020-11-24 16:11:07,889 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 16:11:07,889 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 16:11:07,889 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 16:11:07,890 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 16:11:07,890 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L2]                 success_transfer_ERC200 := false;
[L2]                 call_transfer_ERC200 := false;
[L2]     CALL        call main();
[L2462]              assume null == 0;
[L2463]  CALL        call this := FreshRefGenerator__success();
[L708]               havoc newRef;
[L709]               assume Alloc[newRef] == false;
[L710]               Alloc[newRef] := true;
[L711]               assume newRef != null;
[L2463]  RET         call this := FreshRefGenerator__success();
[L2464]              assume now >= 0;
[L2465]              assume DType[this] == SimpleToken;
[L2466]              assume !revert && gas >= 0;
[L2467]  CALL        call CorralChoice_SimpleToken(this);
[L2374]              havoc msgsender_MSG;
[L2375]              havoc msgvalue_MSG;
[L2376]              havoc choice;
[L2377]              havoc __ret_0_totalSupply;
[L2378]              havoc account_s372;
[L2379]              havoc __ret_0_balanceOf;
[L2380]              havoc recipient_s391;
[L2381]              havoc amount_s391;
[L2382]              havoc __ret_0_transfer;
[L2383]              havoc owner_s407;
[L2384]              havoc spender_s407;
[L2385]              havoc __ret_0_allowance;
[L2386]              havoc spender_s426;
[L2387]              havoc amount_s426;
[L2388]              havoc __ret_0_approve;
[L2389]              havoc sender_s462;
[L2390]              havoc recipient_s462;
[L2391]              havoc amount_s462;
[L2392]              havoc __ret_0_transferFrom;
[L2393]              havoc name_s98;
[L2394]              havoc symbol_s98;
[L2395]              havoc decimals_s98;
[L2396]              havoc __ret_0_name;
[L2397]              havoc __ret_0_symbol;
[L2398]              havoc __ret_0_decimals;
[L2399]              havoc spender_s489;
[L2400]              havoc addedValue_s489;
[L2401]              havoc __ret_0_increaseAllowance;
[L2402]              havoc spender_s517;
[L2403]              havoc subtractedValue_s517;
[L2404]              havoc __ret_0_decreaseAllowance;
[L2405]              havoc amount_s749;
[L2406]              havoc account_s762;
[L2407]              havoc amount_s762;
[L2408]              havoc tmpNow;
[L2409]              havoc gas;
[L2410]              assume gas > 4000000 && gas <= 8000000;
[L2411]              tmpNow := now;
[L2412]              havoc now;
[L2413]              assume now > tmpNow;
[L2414]              assume msgsender_MSG != null;
[L2415]  COND FALSE  !(choice == 6)
[L2421]  COND FALSE  !(choice == 5)
[L2427]  COND TRUE   choice == 4
[L2428]              gas := gas - 21000;
[L2429]  COND TRUE   gas >= 0
[L2430]              assume amount_s391 >= 0 && amount_s391 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2431]              assume msgvalue_MSG == 0;
[L2432]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s391, amount_s391);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == recipient_s391 && amount_s391 <= _balances_ERC20[this][msgsender_MSG]) && amount_s391 >= 0) && amount_s391 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s391] >= 0) && _balances_ERC20[this][recipient_s391] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_ERC200 := true;
[L2]                 call_transfer_ERC200 := false;
[L2]                 revert := revert_hold;
[L180]               havoc __exception;
[L181]               revert := false;
[L182]   COND TRUE   __exception
[L183]               __tmp__Balance := Balance;
[L184]               __tmp__DType := DType;
[L185]               __tmp__Alloc := Alloc;
[L186]               __tmp__balance_ADDR := balance_ADDR;
[L187]               __tmp__M_Ref_int := M_Ref_int;
[L188]               __tmp__sum__balances0 := sum__balances0;
[L189]               __tmp__alloc__allowances_ERC20_lvl0 := alloc__allowances_ERC20_lvl0;
[L190]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L191]               __tmp__sum__allowances1 := sum__allowances1;
[L192]               __tmp__Length := Length;
[L193]               __tmp__now := now;
[L194]               __tmp___name_ERC20Detailed := _name_ERC20Detailed;
[L195]               __tmp___symbol_ERC20Detailed := _symbol_ERC20Detailed;
[L196]               __tmp___decimals_ERC20Detailed := _decimals_ERC20Detailed;
[L197]               __tmp___balances_ERC20 := _balances_ERC20;
[L198]               __tmp___allowances_ERC20 := _allowances_ERC20;
[L199]               __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L200]   CALL        call __ret_0_ := transfer~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, recipient_s391, amount_s391);
[L823]   COND TRUE   __tmp__DType[this] == SimpleToken
[L824]   CALL        call __var_2 := _msgSender_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L716]               __ret_0_ := msgsender_MSG;
[L824]   RET         call __var_2 := _msgSender_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L825]   COND FALSE  !(revert)
[L841]   COND TRUE   __tmp__DType[this] == SimpleToken
[L842]   CALL        call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, __var_2, recipient_s391, amount_s391);
[L1180]              __var_7 := null;
[L1181]  COND FALSE  !(!(sender_s574 != null))
[L1185]              __var_8 := null;
[L1186]  COND FALSE  !(!(recipient_s574 != null))
[L1190]  CALL        call __var_9 := sub~uint256~uint256~string_SafeMath__fail(this, this, 0, __tmp___balances_ERC20[this][sender_s574], amount_s574, -146811486);
[L775]   COND TRUE   !(b_s216 <= a_s216)
[L776]               revert := true;
[L1190]  RET         call __var_9 := sub~uint256~uint256~string_SafeMath__fail(this, this, 0, __tmp___balances_ERC20[this][sender_s574], amount_s574, -146811486);
[L1191]  COND TRUE   revert
[L842]   RET         call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, __var_2, recipient_s391, amount_s391);
[L843]   COND TRUE   revert
[L200]   RET         call __ret_0_ := transfer~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, recipient_s391, amount_s391);
[L201]               assume revert || gas < 0;
[L2432]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s391, amount_s391);
[L2467]  RET         call CorralChoice_SimpleToken(this);

Loop:
[L2467]        assume true;

[2020-11-24 16:11:07,892 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 16:11:07,892 INFO  L82        PathProgramCache]: Analyzing trace with hash 1021560039, now seen corresponding path program 1 times
[2020-11-24 16:11:07,893 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 16:11:07,901 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 16:11:07,950 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 16:11:07,951 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 16:11:07,951 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [10] imperfect sequences [] total 10
[2020-11-24 16:11:07,951 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 16:11:07,951 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 10 interpolants.
[2020-11-24 16:11:07,951 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=18, Invalid=72, Unknown=0, NotChecked=0, Total=90
[2020-11-24 16:11:07,952 INFO  L87              Difference]: Start difference. First operand 264 states and 285 transitions. cyclomatic complexity: 22 Second operand 10 states.
[2020-11-24 16:11:08,114 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 16:11:08,114 INFO  L93              Difference]: Finished difference Result 281 states and 303 transitions.
[2020-11-24 16:11:08,114 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 11 states. 
[2020-11-24 16:11:08,114 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 281 states and 303 transitions.
[2020-11-24 16:11:08,116 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 2
[2020-11-24 16:11:08,117 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 281 states to 266 states and 286 transitions.
[2020-11-24 16:11:08,117 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 266
[2020-11-24 16:11:08,118 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 266
[2020-11-24 16:11:08,118 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 266 states and 286 transitions.
[2020-11-24 16:11:08,118 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 16:11:08,118 INFO  L728         BuchiCegarLoop]: Abstraction has 266 states and 286 transitions.
[2020-11-24 16:11:08,119 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 266 states and 286 transitions.
[2020-11-24 16:11:08,121 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 266 to 259.
[2020-11-24 16:11:08,121 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 259 states.
[2020-11-24 16:11:08,122 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 259 states to 259 states and 279 transitions.
[2020-11-24 16:11:08,122 INFO  L751         BuchiCegarLoop]: Abstraction has 259 states and 279 transitions.
[2020-11-24 16:11:08,122 INFO  L631         BuchiCegarLoop]: Abstraction has 259 states and 279 transitions.
[2020-11-24 16:11:08,122 INFO  L445         BuchiCegarLoop]: ======== Iteration 7============
[2020-11-24 16:11:08,122 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 259 states and 279 transitions.
[2020-11-24 16:11:08,123 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 16:11:08,123 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 16:11:08,124 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 16:11:08,124 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 16:11:08,125 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L2]                 success_transfer_ERC200 := false;
[L2]                 call_transfer_ERC200 := false;
[L2]     CALL        call main();
[L2462]              assume null == 0;
[L2463]  CALL        call this := FreshRefGenerator__success();
[L708]               havoc newRef;
[L709]               assume Alloc[newRef] == false;
[L710]               Alloc[newRef] := true;
[L711]               assume newRef != null;
[L2463]  RET         call this := FreshRefGenerator__success();
[L2464]              assume now >= 0;
[L2465]              assume DType[this] == SimpleToken;
[L2466]              assume !revert && gas >= 0;
[L2467]  CALL        call CorralChoice_SimpleToken(this);
[L2374]              havoc msgsender_MSG;
[L2375]              havoc msgvalue_MSG;
[L2376]              havoc choice;
[L2377]              havoc __ret_0_totalSupply;
[L2378]              havoc account_s372;
[L2379]              havoc __ret_0_balanceOf;
[L2380]              havoc recipient_s391;
[L2381]              havoc amount_s391;
[L2382]              havoc __ret_0_transfer;
[L2383]              havoc owner_s407;
[L2384]              havoc spender_s407;
[L2385]              havoc __ret_0_allowance;
[L2386]              havoc spender_s426;
[L2387]              havoc amount_s426;
[L2388]              havoc __ret_0_approve;
[L2389]              havoc sender_s462;
[L2390]              havoc recipient_s462;
[L2391]              havoc amount_s462;
[L2392]              havoc __ret_0_transferFrom;
[L2393]              havoc name_s98;
[L2394]              havoc symbol_s98;
[L2395]              havoc decimals_s98;
[L2396]              havoc __ret_0_name;
[L2397]              havoc __ret_0_symbol;
[L2398]              havoc __ret_0_decimals;
[L2399]              havoc spender_s489;
[L2400]              havoc addedValue_s489;
[L2401]              havoc __ret_0_increaseAllowance;
[L2402]              havoc spender_s517;
[L2403]              havoc subtractedValue_s517;
[L2404]              havoc __ret_0_decreaseAllowance;
[L2405]              havoc amount_s749;
[L2406]              havoc account_s762;
[L2407]              havoc amount_s762;
[L2408]              havoc tmpNow;
[L2409]              havoc gas;
[L2410]              assume gas > 4000000 && gas <= 8000000;
[L2411]              tmpNow := now;
[L2412]              havoc now;
[L2413]              assume now > tmpNow;
[L2414]              assume msgsender_MSG != null;
[L2415]  COND FALSE  !(choice == 6)
[L2421]  COND FALSE  !(choice == 5)
[L2427]  COND TRUE   choice == 4
[L2428]              gas := gas - 21000;
[L2429]  COND TRUE   gas >= 0
[L2430]              assume amount_s391 >= 0 && amount_s391 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2431]              assume msgvalue_MSG == 0;
[L2432]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s391, amount_s391);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == recipient_s391 && amount_s391 <= _balances_ERC20[this][msgsender_MSG]) && amount_s391 >= 0) && amount_s391 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s391] >= 0) && _balances_ERC20[this][recipient_s391] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_ERC200 := true;
[L2]                 call_transfer_ERC200 := false;
[L2]                 revert := revert_hold;
[L180]               havoc __exception;
[L181]               revert := false;
[L182]   COND FALSE  !(__exception)
[L203]   CALL        call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, recipient_s391, amount_s391);
[L866]   COND TRUE   DType[this] == SimpleToken
[L867]   CALL        call __var_2 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L722]               __ret_0_ := msgsender_MSG;
[L867]   RET         call __var_2 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L868]   COND FALSE  !(revert)
[L884]   COND TRUE   DType[this] == SimpleToken
[L885]   CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, __var_2, recipient_s391, amount_s391);
[L1212]              __var_7 := null;
[L1213]  COND FALSE  !(!(sender_s574 != null))
[L1217]              __var_8 := null;
[L1218]  COND FALSE  !(!(recipient_s574 != null))
[L1222]  CALL        call __var_9 := sub~uint256~uint256~string_SafeMath__success(this, this, 0, _balances_ERC20[this][sender_s574], amount_s574, -146811486);
[L787]   COND FALSE  !(!(b_s216 <= a_s216))
[L791]               c_s216 := (a_s216 - b_s216) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L792]               __ret_0_ := c_s216;
[L1222]  RET         call __var_9 := sub~uint256~uint256~string_SafeMath__success(this, this, 0, _balances_ERC20[this][sender_s574], amount_s574, -146811486);
[L1223]  COND FALSE  !(revert)
[L1226]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][sender_s574];
[L1227]              _balances_ERC20[this][sender_s574] := __var_9;
[L1228]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][sender_s574];
[L1229]  CALL        call __var_10 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][recipient_s574], amount_s574);
[L741]               c_s173 := (a_s173 + b_s173) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L742]   COND FALSE  !(!(c_s173 >= a_s173))
[L746]               __ret_0_ := c_s173;
[L1229]  RET         call __var_10 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][recipient_s574], amount_s574);
[L1230]  COND FALSE  !(revert)
[L1233]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][recipient_s574];
[L1234]              _balances_ERC20[this][recipient_s574] := __var_10;
[L1235]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][recipient_s574];
[L1236]              assert { :EventEmitted "Transfer_ERC20" } true;
[L885]   RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, __var_2, recipient_s391, amount_s391);
[L886]   COND FALSE  !(revert)
[L902]               __ret_0_ := true;
[L203]   RET         call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, recipient_s391, amount_s391);
[L204]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !((((((__ret_0_ == true && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _balances_ERC20[this] == old(_balances_ERC20[this])) && _allowances_ERC20[this] == old(_allowances_ERC20[this])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]));
[L2]                 revert := revert_hold;
[L2432]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s391, amount_s391);
[L2467]  RET         call CorralChoice_SimpleToken(this);

Loop:
[L2467]        assume true;

[2020-11-24 16:11:08,126 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 16:11:08,127 INFO  L82        PathProgramCache]: Analyzing trace with hash 2016462014, now seen corresponding path program 1 times
[2020-11-24 16:11:08,127 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 16:11:08,161 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 16:11:08,616 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 16:11:08,616 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 16:11:08,616 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [22] imperfect sequences [] total 22
[2020-11-24 16:11:08,617 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 16:11:08,617 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 22 interpolants.
[2020-11-24 16:11:08,617 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=57, Invalid=405, Unknown=0, NotChecked=0, Total=462
[2020-11-24 16:11:08,617 INFO  L87              Difference]: Start difference. First operand 259 states and 279 transitions. cyclomatic complexity: 21 Second operand 22 states.
[2020-11-24 16:11:09,276 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 16:11:09,276 INFO  L93              Difference]: Finished difference Result 264 states and 283 transitions.
[2020-11-24 16:11:09,276 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 22 states. 
[2020-11-24 16:11:09,276 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 264 states and 283 transitions.
[2020-11-24 16:11:09,277 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 16:11:09,278 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 264 states to 184 states and 195 transitions.
[2020-11-24 16:11:09,278 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 184
[2020-11-24 16:11:09,278 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 184
[2020-11-24 16:11:09,278 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 184 states and 195 transitions.
[2020-11-24 16:11:09,278 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 16:11:09,278 INFO  L728         BuchiCegarLoop]: Abstraction has 184 states and 195 transitions.
[2020-11-24 16:11:09,279 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 184 states and 195 transitions.
[2020-11-24 16:11:09,280 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 184 to 184.
[2020-11-24 16:11:09,280 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 184 states.
[2020-11-24 16:11:09,280 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 184 states to 184 states and 195 transitions.
[2020-11-24 16:11:09,280 INFO  L751         BuchiCegarLoop]: Abstraction has 184 states and 195 transitions.
[2020-11-24 16:11:09,280 INFO  L631         BuchiCegarLoop]: Abstraction has 184 states and 195 transitions.
[2020-11-24 16:11:09,280 INFO  L445         BuchiCegarLoop]: ======== Iteration 8============
[2020-11-24 16:11:09,280 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 184 states and 195 transitions.
[2020-11-24 16:11:09,281 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 16:11:09,281 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 16:11:09,281 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 16:11:09,282 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 16:11:09,282 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L2]                 success_transfer_ERC200 := false;
[L2]                 call_transfer_ERC200 := false;
[L2]     CALL        call main();
[L2462]              assume null == 0;
[L2463]  CALL        call this := FreshRefGenerator__success();
[L708]               havoc newRef;
[L709]               assume Alloc[newRef] == false;
[L710]               Alloc[newRef] := true;
[L711]               assume newRef != null;
[L2463]  RET         call this := FreshRefGenerator__success();
[L2464]              assume now >= 0;
[L2465]              assume DType[this] == SimpleToken;
[L2466]              assume !revert && gas >= 0;
[L2467]  CALL        call CorralChoice_SimpleToken(this);
[L2374]              havoc msgsender_MSG;
[L2375]              havoc msgvalue_MSG;
[L2376]              havoc choice;
[L2377]              havoc __ret_0_totalSupply;
[L2378]              havoc account_s372;
[L2379]              havoc __ret_0_balanceOf;
[L2380]              havoc recipient_s391;
[L2381]              havoc amount_s391;
[L2382]              havoc __ret_0_transfer;
[L2383]              havoc owner_s407;
[L2384]              havoc spender_s407;
[L2385]              havoc __ret_0_allowance;
[L2386]              havoc spender_s426;
[L2387]              havoc amount_s426;
[L2388]              havoc __ret_0_approve;
[L2389]              havoc sender_s462;
[L2390]              havoc recipient_s462;
[L2391]              havoc amount_s462;
[L2392]              havoc __ret_0_transferFrom;
[L2393]              havoc name_s98;
[L2394]              havoc symbol_s98;
[L2395]              havoc decimals_s98;
[L2396]              havoc __ret_0_name;
[L2397]              havoc __ret_0_symbol;
[L2398]              havoc __ret_0_decimals;
[L2399]              havoc spender_s489;
[L2400]              havoc addedValue_s489;
[L2401]              havoc __ret_0_increaseAllowance;
[L2402]              havoc spender_s517;
[L2403]              havoc subtractedValue_s517;
[L2404]              havoc __ret_0_decreaseAllowance;
[L2405]              havoc amount_s749;
[L2406]              havoc account_s762;
[L2407]              havoc amount_s762;
[L2408]              havoc tmpNow;
[L2409]              havoc gas;
[L2410]              assume gas > 4000000 && gas <= 8000000;
[L2411]              tmpNow := now;
[L2412]              havoc now;
[L2413]              assume now > tmpNow;
[L2414]              assume msgsender_MSG != null;
[L2415]  COND FALSE  !(choice == 6)
[L2421]  COND FALSE  !(choice == 5)
[L2427]  COND TRUE   choice == 4
[L2428]              gas := gas - 21000;
[L2429]  COND TRUE   gas >= 0
[L2430]              assume amount_s391 >= 0 && amount_s391 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2431]              assume msgvalue_MSG == 0;
[L2432]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s391, amount_s391);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == recipient_s391 && amount_s391 <= _balances_ERC20[this][msgsender_MSG]) && amount_s391 >= 0) && amount_s391 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s391] >= 0) && _balances_ERC20[this][recipient_s391] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_ERC200 := true;
[L2]                 call_transfer_ERC200 := false;
[L2]                 revert := revert_hold;
[L180]               havoc __exception;
[L181]               revert := false;
[L182]   COND TRUE   __exception
[L183]               __tmp__Balance := Balance;
[L184]               __tmp__DType := DType;
[L185]               __tmp__Alloc := Alloc;
[L186]               __tmp__balance_ADDR := balance_ADDR;
[L187]               __tmp__M_Ref_int := M_Ref_int;
[L188]               __tmp__sum__balances0 := sum__balances0;
[L189]               __tmp__alloc__allowances_ERC20_lvl0 := alloc__allowances_ERC20_lvl0;
[L190]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L191]               __tmp__sum__allowances1 := sum__allowances1;
[L192]               __tmp__Length := Length;
[L193]               __tmp__now := now;
[L194]               __tmp___name_ERC20Detailed := _name_ERC20Detailed;
[L195]               __tmp___symbol_ERC20Detailed := _symbol_ERC20Detailed;
[L196]               __tmp___decimals_ERC20Detailed := _decimals_ERC20Detailed;
[L197]               __tmp___balances_ERC20 := _balances_ERC20;
[L198]               __tmp___allowances_ERC20 := _allowances_ERC20;
[L199]               __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L200]   CALL        call __ret_0_ := transfer~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, recipient_s391, amount_s391);
[L823]   COND TRUE   __tmp__DType[this] == SimpleToken
[L824]   CALL        call __var_2 := _msgSender_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L716]               __ret_0_ := msgsender_MSG;
[L824]   RET         call __var_2 := _msgSender_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L825]   COND FALSE  !(revert)
[L841]   COND TRUE   __tmp__DType[this] == SimpleToken
[L842]   CALL        call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, __var_2, recipient_s391, amount_s391);
[L1180]              __var_7 := null;
[L1181]  COND FALSE  !(!(sender_s574 != null))
[L1185]              __var_8 := null;
[L1186]  COND FALSE  !(!(recipient_s574 != null))
[L1190]  CALL        call __var_9 := sub~uint256~uint256~string_SafeMath__fail(this, this, 0, __tmp___balances_ERC20[this][sender_s574], amount_s574, -146811486);
[L775]   COND FALSE  !(!(b_s216 <= a_s216))
[L779]               c_s216 := (a_s216 - b_s216) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L780]               __ret_0_ := c_s216;
[L1190]  RET         call __var_9 := sub~uint256~uint256~string_SafeMath__fail(this, this, 0, __tmp___balances_ERC20[this][sender_s574], amount_s574, -146811486);
[L1191]  COND FALSE  !(revert)
[L1194]              __tmp__sum__balances0[this] := __tmp__sum__balances0[this] - __tmp___balances_ERC20[this][sender_s574];
[L1195]              __tmp___balances_ERC20[this][sender_s574] := __var_9;
[L1196]              __tmp__sum__balances0[this] := __tmp__sum__balances0[this] + __tmp___balances_ERC20[this][sender_s574];
[L1197]  CALL        call __var_10 := add~uint256~uint256_SafeMath__fail(this, this, 0, __tmp___balances_ERC20[this][recipient_s574], amount_s574);
[L729]               c_s173 := (a_s173 + b_s173) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L730]   COND TRUE   !(c_s173 >= a_s173)
[L731]               revert := true;
[L1197]  RET         call __var_10 := add~uint256~uint256_SafeMath__fail(this, this, 0, __tmp___balances_ERC20[this][recipient_s574], amount_s574);
[L1198]  COND TRUE   revert
[L842]   RET         call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, __var_2, recipient_s391, amount_s391);
[L843]   COND TRUE   revert
[L200]   RET         call __ret_0_ := transfer~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, recipient_s391, amount_s391);
[L201]               assume revert || gas < 0;
[L2432]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s391, amount_s391);
[L2467]  RET         call CorralChoice_SimpleToken(this);

Loop:
[L2467]        assume true;

[2020-11-24 16:11:09,283 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 16:11:09,283 INFO  L82        PathProgramCache]: Analyzing trace with hash -603624569, now seen corresponding path program 1 times
[2020-11-24 16:11:09,284 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 16:11:09,290 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 16:11:09,352 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 16:11:09,352 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 16:11:09,353 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [18] imperfect sequences [] total 18
[2020-11-24 16:11:09,353 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 16:11:09,353 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 18 interpolants.
[2020-11-24 16:11:09,353 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=37, Invalid=269, Unknown=0, NotChecked=0, Total=306
[2020-11-24 16:11:09,353 INFO  L87              Difference]: Start difference. First operand 184 states and 195 transitions. cyclomatic complexity: 12 Second operand 18 states.
[2020-11-24 16:11:09,455 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 16:11:09,455 INFO  L93              Difference]: Finished difference Result 190 states and 200 transitions.
[2020-11-24 16:11:09,455 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 20 states. 
[2020-11-24 16:11:09,455 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 190 states and 200 transitions.
[2020-11-24 16:11:09,456 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 16:11:09,457 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 190 states to 171 states and 179 transitions.
[2020-11-24 16:11:09,457 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 171
[2020-11-24 16:11:09,457 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 171
[2020-11-24 16:11:09,457 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 171 states and 179 transitions.
[2020-11-24 16:11:09,457 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 16:11:09,457 INFO  L728         BuchiCegarLoop]: Abstraction has 171 states and 179 transitions.
[2020-11-24 16:11:09,458 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 171 states and 179 transitions.
[2020-11-24 16:11:09,459 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 171 to 171.
[2020-11-24 16:11:09,459 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 171 states.
[2020-11-24 16:11:09,459 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 171 states to 171 states and 179 transitions.
[2020-11-24 16:11:09,459 INFO  L751         BuchiCegarLoop]: Abstraction has 171 states and 179 transitions.
[2020-11-24 16:11:09,459 INFO  L631         BuchiCegarLoop]: Abstraction has 171 states and 179 transitions.
[2020-11-24 16:11:09,459 INFO  L445         BuchiCegarLoop]: ======== Iteration 9============
[2020-11-24 16:11:09,459 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 171 states and 179 transitions.
[2020-11-24 16:11:09,460 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 16:11:09,460 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 16:11:09,460 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 16:11:09,461 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 16:11:09,461 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L2]                 success_transfer_ERC200 := false;
[L2]                 call_transfer_ERC200 := false;
[L2]     CALL        call main();
[L2462]              assume null == 0;
[L2463]  CALL        call this := FreshRefGenerator__success();
[L708]               havoc newRef;
[L709]               assume Alloc[newRef] == false;
[L710]               Alloc[newRef] := true;
[L711]               assume newRef != null;
[L2463]  RET         call this := FreshRefGenerator__success();
[L2464]              assume now >= 0;
[L2465]              assume DType[this] == SimpleToken;
[L2466]              assume !revert && gas >= 0;
[L2467]  CALL        call CorralChoice_SimpleToken(this);
[L2374]              havoc msgsender_MSG;
[L2375]              havoc msgvalue_MSG;
[L2376]              havoc choice;
[L2377]              havoc __ret_0_totalSupply;
[L2378]              havoc account_s372;
[L2379]              havoc __ret_0_balanceOf;
[L2380]              havoc recipient_s391;
[L2381]              havoc amount_s391;
[L2382]              havoc __ret_0_transfer;
[L2383]              havoc owner_s407;
[L2384]              havoc spender_s407;
[L2385]              havoc __ret_0_allowance;
[L2386]              havoc spender_s426;
[L2387]              havoc amount_s426;
[L2388]              havoc __ret_0_approve;
[L2389]              havoc sender_s462;
[L2390]              havoc recipient_s462;
[L2391]              havoc amount_s462;
[L2392]              havoc __ret_0_transferFrom;
[L2393]              havoc name_s98;
[L2394]              havoc symbol_s98;
[L2395]              havoc decimals_s98;
[L2396]              havoc __ret_0_name;
[L2397]              havoc __ret_0_symbol;
[L2398]              havoc __ret_0_decimals;
[L2399]              havoc spender_s489;
[L2400]              havoc addedValue_s489;
[L2401]              havoc __ret_0_increaseAllowance;
[L2402]              havoc spender_s517;
[L2403]              havoc subtractedValue_s517;
[L2404]              havoc __ret_0_decreaseAllowance;
[L2405]              havoc amount_s749;
[L2406]              havoc account_s762;
[L2407]              havoc amount_s762;
[L2408]              havoc tmpNow;
[L2409]              havoc gas;
[L2410]              assume gas > 4000000 && gas <= 8000000;
[L2411]              tmpNow := now;
[L2412]              havoc now;
[L2413]              assume now > tmpNow;
[L2414]              assume msgsender_MSG != null;
[L2415]  COND FALSE  !(choice == 6)
[L2421]  COND FALSE  !(choice == 5)
[L2427]  COND TRUE   choice == 4
[L2428]              gas := gas - 21000;
[L2429]  COND TRUE   gas >= 0
[L2430]              assume amount_s391 >= 0 && amount_s391 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2431]              assume msgvalue_MSG == 0;
[L2432]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s391, amount_s391);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == recipient_s391 && amount_s391 <= _balances_ERC20[this][msgsender_MSG]) && amount_s391 >= 0) && amount_s391 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s391] >= 0) && _balances_ERC20[this][recipient_s391] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_ERC200 := true;
[L2]                 call_transfer_ERC200 := false;
[L2]                 revert := revert_hold;
[L180]               havoc __exception;
[L181]               revert := false;
[L182]   COND TRUE   __exception
[L183]               __tmp__Balance := Balance;
[L184]               __tmp__DType := DType;
[L185]               __tmp__Alloc := Alloc;
[L186]               __tmp__balance_ADDR := balance_ADDR;
[L187]               __tmp__M_Ref_int := M_Ref_int;
[L188]               __tmp__sum__balances0 := sum__balances0;
[L189]               __tmp__alloc__allowances_ERC20_lvl0 := alloc__allowances_ERC20_lvl0;
[L190]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L191]               __tmp__sum__allowances1 := sum__allowances1;
[L192]               __tmp__Length := Length;
[L193]               __tmp__now := now;
[L194]               __tmp___name_ERC20Detailed := _name_ERC20Detailed;
[L195]               __tmp___symbol_ERC20Detailed := _symbol_ERC20Detailed;
[L196]               __tmp___decimals_ERC20Detailed := _decimals_ERC20Detailed;
[L197]               __tmp___balances_ERC20 := _balances_ERC20;
[L198]               __tmp___allowances_ERC20 := _allowances_ERC20;
[L199]               __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L200]   CALL        call __ret_0_ := transfer~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, recipient_s391, amount_s391);
[L823]   COND TRUE   __tmp__DType[this] == SimpleToken
[L824]   CALL        call __var_2 := _msgSender_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L716]               __ret_0_ := msgsender_MSG;
[L824]   RET         call __var_2 := _msgSender_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L825]   COND FALSE  !(revert)
[L841]   COND TRUE   __tmp__DType[this] == SimpleToken
[L842]   CALL        call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, __var_2, recipient_s391, amount_s391);
[L1180]              __var_7 := null;
[L1181]  COND FALSE  !(!(sender_s574 != null))
[L1185]              __var_8 := null;
[L1186]  COND FALSE  !(!(recipient_s574 != null))
[L1190]  CALL        call __var_9 := sub~uint256~uint256~string_SafeMath__fail(this, this, 0, __tmp___balances_ERC20[this][sender_s574], amount_s574, -146811486);
[L775]   COND FALSE  !(!(b_s216 <= a_s216))
[L779]               c_s216 := (a_s216 - b_s216) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L780]               __ret_0_ := c_s216;
[L1190]  RET         call __var_9 := sub~uint256~uint256~string_SafeMath__fail(this, this, 0, __tmp___balances_ERC20[this][sender_s574], amount_s574, -146811486);
[L1191]  COND FALSE  !(revert)
[L1194]              __tmp__sum__balances0[this] := __tmp__sum__balances0[this] - __tmp___balances_ERC20[this][sender_s574];
[L1195]              __tmp___balances_ERC20[this][sender_s574] := __var_9;
[L1196]              __tmp__sum__balances0[this] := __tmp__sum__balances0[this] + __tmp___balances_ERC20[this][sender_s574];
[L1197]  CALL        call __var_10 := add~uint256~uint256_SafeMath__fail(this, this, 0, __tmp___balances_ERC20[this][recipient_s574], amount_s574);
[L729]               c_s173 := (a_s173 + b_s173) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L730]   COND FALSE  !(!(c_s173 >= a_s173))
[L734]               __ret_0_ := c_s173;
[L1197]  RET         call __var_10 := add~uint256~uint256_SafeMath__fail(this, this, 0, __tmp___balances_ERC20[this][recipient_s574], amount_s574);
[L1198]  COND FALSE  !(revert)
[L1201]              __tmp__sum__balances0[this] := __tmp__sum__balances0[this] - __tmp___balances_ERC20[this][recipient_s574];
[L1202]              __tmp___balances_ERC20[this][recipient_s574] := __var_10;
[L1203]              __tmp__sum__balances0[this] := __tmp__sum__balances0[this] + __tmp___balances_ERC20[this][recipient_s574];
[L842]   RET         call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, __var_2, recipient_s391, amount_s391);
[L843]   COND FALSE  !(revert)
[L859]               __ret_0_ := true;
[L200]   RET         call __ret_0_ := transfer~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, recipient_s391, amount_s391);
[L201]               assume revert || gas < 0;
[L2432]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s391, amount_s391);
[L2467]  RET         call CorralChoice_SimpleToken(this);

Loop:
[L2467]        assume true;

[2020-11-24 16:11:09,462 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 16:11:09,462 INFO  L82        PathProgramCache]: Analyzing trace with hash -1334013835, now seen corresponding path program 1 times
[2020-11-24 16:11:09,463 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 16:11:09,468 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 16:11:09,481 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 16:11:09,482 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 16:11:09,482 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [5] imperfect sequences [] total 5
[2020-11-24 16:11:09,482 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 16:11:09,482 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 5 interpolants.
[2020-11-24 16:11:09,482 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=7, Invalid=13, Unknown=0, NotChecked=0, Total=20
[2020-11-24 16:11:09,482 INFO  L87              Difference]: Start difference. First operand 171 states and 179 transitions. cyclomatic complexity: 9 Second operand 5 states.
[2020-11-24 16:11:09,495 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 16:11:09,495 INFO  L93              Difference]: Finished difference Result 164 states and 171 transitions.
[2020-11-24 16:11:09,495 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 5 states. 
[2020-11-24 16:11:09,495 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 164 states and 171 transitions.
[2020-11-24 16:11:09,496 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-24 16:11:09,496 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 164 states to 0 states and 0 transitions.
[2020-11-24 16:11:09,496 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 0
[2020-11-24 16:11:09,496 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 0
[2020-11-24 16:11:09,496 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 0 states and 0 transitions.
[2020-11-24 16:11:09,496 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 16:11:09,496 INFO  L728         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-24 16:11:09,496 INFO  L751         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-24 16:11:09,496 INFO  L631         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-24 16:11:09,496 INFO  L445         BuchiCegarLoop]: ======== Iteration 10============
[2020-11-24 16:11:09,497 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 0 states and 0 transitions.
[2020-11-24 16:11:09,497 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-24 16:11:09,497 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is true
[2020-11-24 16:11:09,500 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 24.11 04:11:09 BasicIcfg
[2020-11-24 16:11:09,500 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-24 16:11:09,500 INFO  L168              Benchmark]: Toolchain (without parser) took 4547.64 ms. Allocated memory was 1.0 GB in the beginning and 1.4 GB in the end (delta: 344.5 MB). Free memory was 940.6 MB in the beginning and 845.4 MB in the end (delta: 95.1 MB). Peak memory consumption was 439.6 MB. Max. memory is 15.3 GB.
[2020-11-24 16:11:09,501 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.17 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-24 16:11:09,501 INFO  L168              Benchmark]: Boogie Preprocessor took 81.49 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 935.2 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-24 16:11:09,502 INFO  L168              Benchmark]: UtopiaSpecLang took 51.48 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 929.8 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-24 16:11:09,502 INFO  L168              Benchmark]: Boogie Printer took 11.80 ms. Allocated memory is still 1.0 GB. Free memory is still 929.8 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-24 16:11:09,502 INFO  L168              Benchmark]: RCFGBuilder took 621.31 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 854.7 MB in the end (delta: 75.2 MB). Peak memory consumption was 75.2 MB. Max. memory is 15.3 GB.
[2020-11-24 16:11:09,502 INFO  L168              Benchmark]: UtopiaLTL2Aut took 40.10 ms. Allocated memory is still 1.0 GB. Free memory was 854.7 MB in the beginning and 851.1 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
[2020-11-24 16:11:09,502 INFO  L168              Benchmark]: BÃ¼chi Program Product took 1070.34 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 54.5 MB). Free memory was 851.1 MB in the beginning and 811.7 MB in the end (delta: 39.4 MB). Peak memory consumption was 135.6 MB. Max. memory is 15.3 GB.
[2020-11-24 16:11:09,503 INFO  L168              Benchmark]: BlockEncodingV2 took 113.28 ms. Allocated memory is still 1.1 GB. Free memory was 811.7 MB in the beginning and 774.5 MB in the end (delta: 37.3 MB). Peak memory consumption was 37.3 MB. Max. memory is 15.3 GB.
[2020-11-24 16:11:09,503 INFO  L168              Benchmark]: BuchiAutomizer took 2554.58 ms. Allocated memory was 1.1 GB in the beginning and 1.4 GB in the end (delta: 289.9 MB). Free memory was 774.5 MB in the beginning and 845.4 MB in the end (delta: -71.0 MB). Peak memory consumption was 219.0 MB. Max. memory is 15.3 GB.
[2020-11-24 16:11:09,505 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    2242 locations, 4195 edges
  - StatisticsResult: Encoded RCFG
    2174 locations, 4017 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.17 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 81.49 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 935.2 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 51.48 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 929.8 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 11.80 ms. Allocated memory is still 1.0 GB. Free memory is still 929.8 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * RCFGBuilder took 621.31 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 854.7 MB in the end (delta: 75.2 MB). Peak memory consumption was 75.2 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 40.10 ms. Allocated memory is still 1.0 GB. Free memory was 854.7 MB in the beginning and 851.1 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 1070.34 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 54.5 MB). Free memory was 851.1 MB in the beginning and 811.7 MB in the end (delta: 39.4 MB). Peak memory consumption was 135.6 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 113.28 ms. Allocated memory is still 1.1 GB. Free memory was 811.7 MB in the beginning and 774.5 MB in the end (delta: 37.3 MB). Peak memory consumption was 37.3 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 2554.58 ms. Allocated memory was 1.1 GB in the beginning and 1.4 GB in the end (delta: 289.9 MB). Free memory was 774.5 MB in the beginning and 845.4 MB in the end (delta: -71.0 MB). Peak memory consumption was 219.0 MB. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    890 locations, 1279 edges
  - StatisticsResult: BuchiProgram size
    2242 locations, 4195 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 9 terminating modules (9 trivial, 0 deterministic, 0 nondeterministic). 9 modules have a trivial ranking function, the largest among these consists of 22 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 2.5s and 10 iterations.  TraceHistogramMax:1. Analysis of lassos took 0.8s. Construction of modules took 0.7s. BÃ¼chi inclusion checks took 0.6s. Highest rank in rank-based complementation 0. Minimization of det autom 9. Minimization of nondet autom 0. Automata minimization 0.0s AutomataMinimizationTime, 8 MinimizatonAttempts, 29 StatesRemovedByMinimization, 3 NontrivialMinimizations. Non-live state removal took 0.0s Buchi closure took 0.0s. Biggest automaton had 266 states and ocurred in iteration 2.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 2982 SDtfs, 2314 SDslu, 8479 SDs, 0 SdLazy, 4417 SolverSat, 811 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 0.7s Time	LassoAnalysisResults: nont0 unkn0 SFLI0 SFLT0 conc0 concLT0 SILN0 SILU9 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - AllSpecificationsHoldResult: All specifications hold
    Buchi Automizer proved that the LTL property ! ( ( []( (call_transfer_ERC200) ==> ( <>(success_transfer_ERC200) ) ) )) holds
RESULT: Ultimate proved your program to be correct!
Received shutdown request...
