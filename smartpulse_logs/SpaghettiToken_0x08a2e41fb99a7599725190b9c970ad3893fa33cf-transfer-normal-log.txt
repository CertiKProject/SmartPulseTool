This is Ultimate 0.1.24-f1553f5-m
[2020-11-24 16:12:01,663 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-24 16:12:01,665 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-24 16:12:01,678 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-24 16:12:01,678 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-24 16:12:01,679 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-24 16:12:01,680 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-24 16:12:01,682 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-24 16:12:01,683 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-24 16:12:01,684 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-24 16:12:01,685 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-24 16:12:01,685 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-24 16:12:01,686 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-24 16:12:01,687 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-24 16:12:01,688 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-24 16:12:01,688 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-24 16:12:01,689 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-24 16:12:01,690 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-24 16:12:01,692 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-24 16:12:01,693 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-24 16:12:01,694 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-24 16:12:01,694 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-24 16:12:01,696 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-24 16:12:01,696 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-24 16:12:01,696 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-24 16:12:01,697 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-24 16:12:01,697 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-24 16:12:01,698 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-24 16:12:01,698 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-24 16:12:01,698 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-24 16:12:01,699 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-24 16:12:01,699 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-24 16:12:01,700 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-24 16:12:01,700 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-24 16:12:01,701 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-24 16:12:01,701 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-24 16:12:01,702 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-24 16:12:01,702 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-24 16:12:01,702 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-24 16:12:01,703 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-24 16:12:01,703 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-24 16:12:01,704 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-24 16:12:01,711 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-24 16:12:01,712 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-24 16:12:01,713 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-24 16:12:01,713 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-24 16:12:01,713 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-24 16:12:01,713 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-24 16:12:01,713 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-24 16:12:01,714 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-24 16:12:01,714 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-24 16:12:01,714 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-24 16:12:01,714 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-24 16:12:01,714 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-24 16:12:01,714 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-24 16:12:01,714 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-24 16:12:01,714 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-24 16:12:01,714 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-24 16:12:01,714 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-24 16:12:01,715 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-24 16:12:01,715 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-24 16:12:01,715 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-24 16:12:01,715 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-24 16:12:01,715 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-24 16:12:01,715 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-24 16:12:01,715 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-24 16:12:01,715 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-24 16:12:01,715 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-24 16:12:01,739 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-24 16:12:01,752 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-24 16:12:01,755 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-24 16:12:01,756 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-24 16:12:01,756 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-24 16:12:01,757 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/SpaghettiToken_0x08a2e41fb99a7599725190b9c970ad3893fa33cf_transfer-normal.bpl
[2020-11-24 16:12:01,757 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/SpaghettiToken_0x08a2e41fb99a7599725190b9c970ad3893fa33cf_transfer-normal.bpl'
[2020-11-24 16:12:01,817 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-24 16:12:01,818 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-24 16:12:01,819 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-24 16:12:01,819 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-24 16:12:01,819 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-24 16:12:01,835 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "SpaghettiToken_0x08a2e41fb99a7599725190b9c970ad3893fa33cf_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 04:12:01" (1/1) ...
[2020-11-24 16:12:01,836 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "SpaghettiToken_0x08a2e41fb99a7599725190b9c970ad3893fa33cf_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 04:12:01" (1/1) ...
[2020-11-24 16:12:01,856 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "SpaghettiToken_0x08a2e41fb99a7599725190b9c970ad3893fa33cf_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 04:12:01" (1/1) ...
[2020-11-24 16:12:01,857 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "SpaghettiToken_0x08a2e41fb99a7599725190b9c970ad3893fa33cf_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 04:12:01" (1/1) ...
[2020-11-24 16:12:01,875 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "SpaghettiToken_0x08a2e41fb99a7599725190b9c970ad3893fa33cf_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 04:12:01" (1/1) ...
[2020-11-24 16:12:01,884 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "SpaghettiToken_0x08a2e41fb99a7599725190b9c970ad3893fa33cf_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 04:12:01" (1/1) ...
[2020-11-24 16:12:01,887 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "SpaghettiToken_0x08a2e41fb99a7599725190b9c970ad3893fa33cf_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 04:12:01" (1/1) ...
[2020-11-24 16:12:01,893 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-24 16:12:01,893 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-24 16:12:01,894 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-24 16:12:01,896 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-24 16:12:01,900 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "SpaghettiToken_0x08a2e41fb99a7599725190b9c970ad3893fa33cf_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 04:12:01" (1/1) ...
[2020-11-24 16:12:01,914 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(SpaghettiToken.transfer(to, value), p1 != msg.sender && p1 != to && msg.sender != to && value <= balanceOf_SpaghettiToken[this][msg.sender] && balanceOf_SpaghettiToken[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_SpaghettiToken[this][to] >= 0 && balanceOf_SpaghettiToken[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_SpaghettiToken[this][msg.sender] >= 0 &&  balanceOf_SpaghettiToken[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(SpaghettiToken.transfer(to, value), return == true && balanceOf_SpaghettiToken[this][msg.sender] == old(balanceOf_SpaghettiToken[this][msg.sender]) - value && balanceOf_SpaghettiToken[this][to] == old(balanceOf_SpaghettiToken[this][to]) + value && totalSupply_SpaghettiToken[this] == old(totalSupply_SpaghettiToken[this]) && allowance_SpaghettiToken[this] == old(allowance_SpaghettiToken[this]) && balanceOf_SpaghettiToken[this][p1] == old(balanceOf_SpaghettiToken[this][p1]) && symbol_SpaghettiToken[this] == old(symbol_SpaghettiToken[this]) && decimals_SpaghettiToken[this] == old(decimals_SpaghettiToken[this]) && name_SpaghettiToken[this] == old(name_SpaghettiToken[this]))))
[2020-11-24 16:12:01,920 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(SpaghettiToken.transfer(to, value), p1 != msg.sender && p1 != to && msg.sender != to && value <= balanceOf_SpaghettiToken[this][msg.sender] && balanceOf_SpaghettiToken[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_SpaghettiToken[this][to] >= 0 && balanceOf_SpaghettiToken[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_SpaghettiToken[this][msg.sender] >= 0 &&  balanceOf_SpaghettiToken[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(SpaghettiToken.transfer(to, value), return == true && balanceOf_SpaghettiToken[this][msg.sender] == old(balanceOf_SpaghettiToken[this][msg.sender]) - value && balanceOf_SpaghettiToken[this][to] == old(balanceOf_SpaghettiToken[this][to]) + value && totalSupply_SpaghettiToken[this] == old(totalSupply_SpaghettiToken[this]) && allowance_SpaghettiToken[this] == old(allowance_SpaghettiToken[this]) && balanceOf_SpaghettiToken[this][p1] == old(balanceOf_SpaghettiToken[this][p1]) && symbol_SpaghettiToken[this] == old(symbol_SpaghettiToken[this]) && decimals_SpaghettiToken[this] == old(decimals_SpaghettiToken[this]) && name_SpaghettiToken[this] == old(name_SpaghettiToken[this]))))
[2020-11-24 16:12:01,927 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(SpaghettiToken.transfer(to, value), p1 != msg.sender && p1 != to && msg.sender != to && value <= balanceOf_SpaghettiToken[this][msg.sender] && balanceOf_SpaghettiToken[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_SpaghettiToken[this][to] >= 0 && balanceOf_SpaghettiToken[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_SpaghettiToken[this][msg.sender] >= 0 &&  balanceOf_SpaghettiToken[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(SpaghettiToken.transfer(to, value), return == true && balanceOf_SpaghettiToken[this][msg.sender] == old(balanceOf_SpaghettiToken[this][msg.sender]) - value && balanceOf_SpaghettiToken[this][to] == old(balanceOf_SpaghettiToken[this][to]) + value && totalSupply_SpaghettiToken[this] == old(totalSupply_SpaghettiToken[this]) && allowance_SpaghettiToken[this] == old(allowance_SpaghettiToken[this]) && balanceOf_SpaghettiToken[this][p1] == old(balanceOf_SpaghettiToken[this][p1]) && symbol_SpaghettiToken[this] == old(symbol_SpaghettiToken[this]) && decimals_SpaghettiToken[this] == old(decimals_SpaghettiToken[this]) && name_SpaghettiToken[this] == old(name_SpaghettiToken[this]))))
[2020-11-24 16:12:01,933 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( ( ( p1!=msg.sender && p1!=dst_s194 ) && msg.sender!=dst_s194 ) && wad_s194<=balanceOf_SpaghettiToken[this][msg.sender] ) && ( balanceOf_SpaghettiToken[this][dst_s194] + wad_s194 )<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && wad_s194>=0 ) && wad_s194<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && balanceOf_SpaghettiToken[this][dst_s194]>=0 ) && balanceOf_SpaghettiToken[this][dst_s194]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && balanceOf_SpaghettiToken[this][msg.sender]>=0 ) && balanceOf_SpaghettiToken[this][msg.sender]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPNEQ,IdentifierExpression[p1,GLOBAL],IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_SpaghettiToken>]],BinaryExpression[COMPNEQ,IdentifierExpression[p1,GLOBAL],IdentifierExpression[dst_s194,<IMPLEMENTATION_INPARAM,transfer~address~uint256_SpaghettiToken>]]],BinaryExpression[COMPNEQ,IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_SpaghettiToken>],IdentifierExpression[dst_s194,<IMPLEMENTATION_INPARAM,transfer~address~uint256_SpaghettiToken>]]],BinaryExpression[COMPLEQ,IdentifierExpression[wad_s194,<IMPLEMENTATION_INPARAM,transfer~address~uint256_SpaghettiToken>],ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_SpaghettiToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_SpaghettiToken>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_SpaghettiToken>]]]]],BinaryExpression[COMPLT,BinaryExpression[ARITHPLUS,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_SpaghettiToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_SpaghettiToken>]]],[IdentifierExpression[dst_s194,<IMPLEMENTATION_INPARAM,transfer~address~uint256_SpaghettiToken>]]],IdentifierExpression[wad_s194,<IMPLEMENTATION_INPARAM,transfer~address~uint256_SpaghettiToken>]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,IdentifierExpression[wad_s194,<IMPLEMENTATION_INPARAM,transfer~address~uint256_SpaghettiToken>],IntegerLiteral[0]]],BinaryExpression[COMPLT,IdentifierExpression[wad_s194,<IMPLEMENTATION_INPARAM,transfer~address~uint256_SpaghettiToken>],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_SpaghettiToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_SpaghettiToken>]]],[IdentifierExpression[dst_s194,<IMPLEMENTATION_INPARAM,transfer~address~uint256_SpaghettiToken>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_SpaghettiToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_SpaghettiToken>]]],[IdentifierExpression[dst_s194,<IMPLEMENTATION_INPARAM,transfer~address~uint256_SpaghettiToken>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_SpaghettiToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_SpaghettiToken>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_SpaghettiToken>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_SpaghettiToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_SpaghettiToken>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_SpaghettiToken>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]]
[2020-11-24 16:12:01,936 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( __ret_0_==true && balanceOf_SpaghettiToken[this][msg.sender]==( ( old(balanceOf_SpaghettiToken[this][msg.sender]) ) - wad_s194 ) ) && balanceOf_SpaghettiToken[this][dst_s194]==( ( old(balanceOf_SpaghettiToken[this][dst_s194]) ) + wad_s194 ) ) && totalSupply_SpaghettiToken[this]==( old(totalSupply_SpaghettiToken[this]) ) ) && allowance_SpaghettiToken[this]==( old(allowance_SpaghettiToken[this]) ) ) && balanceOf_SpaghettiToken[this][p1]==( old(balanceOf_SpaghettiToken[this][p1]) ) ) && symbol_SpaghettiToken[this]==( old(symbol_SpaghettiToken[this]) ) ) && decimals_SpaghettiToken[this]==( old(decimals_SpaghettiToken[this]) ) ) && name_SpaghettiToken[this]==( old(name_SpaghettiToken[this]) ) ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[__ret_0_,<IMPLEMENTATION_OUTPARAM,transfer~address~uint256_SpaghettiToken>],BooleanLiteral[true]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_SpaghettiToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_SpaghettiToken>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_SpaghettiToken>]]],BinaryExpression[ARITHMINUS,UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_SpaghettiToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_SpaghettiToken>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_SpaghettiToken>]]]],IdentifierExpression[wad_s194,<IMPLEMENTATION_INPARAM,transfer~address~uint256_SpaghettiToken>]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_SpaghettiToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_SpaghettiToken>]]],[IdentifierExpression[dst_s194,<IMPLEMENTATION_INPARAM,transfer~address~uint256_SpaghettiToken>]]],BinaryExpression[ARITHPLUS,UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_SpaghettiToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_SpaghettiToken>]]],[IdentifierExpression[dst_s194,<IMPLEMENTATION_INPARAM,transfer~address~uint256_SpaghettiToken>]]]],IdentifierExpression[wad_s194,<IMPLEMENTATION_INPARAM,transfer~address~uint256_SpaghettiToken>]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[totalSupply_SpaghettiToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_SpaghettiToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[totalSupply_SpaghettiToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_SpaghettiToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[allowance_SpaghettiToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_SpaghettiToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[allowance_SpaghettiToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_SpaghettiToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_SpaghettiToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_SpaghettiToken>]]],[IdentifierExpression[p1,GLOBAL]]],UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_SpaghettiToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_SpaghettiToken>]]],[IdentifierExpression[p1,GLOBAL]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[symbol_SpaghettiToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_SpaghettiToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[symbol_SpaghettiToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_SpaghettiToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[decimals_SpaghettiToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_SpaghettiToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[decimals_SpaghettiToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_SpaghettiToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[name_SpaghettiToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_SpaghettiToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[name_SpaghettiToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_SpaghettiToken>]]]]]]
[2020-11-24 16:12:01,939 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(SpaghettiToken.transfer(to, value), p1 != msg.sender && p1 != to && msg.sender != to && value <= balanceOf_SpaghettiToken[this][msg.sender] && balanceOf_SpaghettiToken[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_SpaghettiToken[this][to] >= 0 && balanceOf_SpaghettiToken[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_SpaghettiToken[this][msg.sender] >= 0 &&  balanceOf_SpaghettiToken[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(SpaghettiToken.transfer(to, value), return == true && balanceOf_SpaghettiToken[this][msg.sender] == old(balanceOf_SpaghettiToken[this][msg.sender]) - value && balanceOf_SpaghettiToken[this][to] == old(balanceOf_SpaghettiToken[this][to]) + value && totalSupply_SpaghettiToken[this] == old(totalSupply_SpaghettiToken[this]) && allowance_SpaghettiToken[this] == old(allowance_SpaghettiToken[this]) && balanceOf_SpaghettiToken[this][p1] == old(balanceOf_SpaghettiToken[this][p1]) && symbol_SpaghettiToken[this] == old(symbol_SpaghettiToken[this]) && decimals_SpaghettiToken[this] == old(decimals_SpaghettiToken[this]) && name_SpaghettiToken[this] == old(name_SpaghettiToken[this]))))
[2020-11-24 16:12:01,939 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_transfer_SpaghettiToken0) ==> ( <>AP(success_transfer_SpaghettiToken0) ) ) )
Executed UtopiaSpecLang
[2020-11-24 16:12:01,945 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 04:12:01 PropertyContainer
[2020-11-24 16:12:01,945 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-24 16:12:01,945 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-24 16:12:01,945 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-24 16:12:01,945 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-24 16:12:01,946 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "SpaghettiToken_0x08a2e41fb99a7599725190b9c970ad3893fa33cf_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 04:12:01" (1/2) ...
[2020-11-24 16:12:01,946 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-24 16:12:01,946 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-24 16:12:01,954 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 04:12:01" (2/2) ...
[2020-11-24 16:12:01,954 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-24 16:12:01,955 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-24 16:12:01,955 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-24 16:12:01,955 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-24 16:12:01,955 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "SpaghettiToken_0x08a2e41fb99a7599725190b9c970ad3893fa33cf_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 04:12:01" (1/2) ...
[2020-11-24 16:12:02,008 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-24 16:12:02,008 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_DSMath__success
[2020-11-24 16:12:02,008 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_DSMath__success
[2020-11-24 16:12:02,008 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address_SpaghettiToken
[2020-11-24 16:12:02,008 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address_SpaghettiToken
[2020-11-24 16:12:02,009 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_SpaghettiToken
[2020-11-24 16:12:02,009 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_SpaghettiToken
[2020-11-24 16:12:02,009 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_SpaghettiToken
[2020-11-24 16:12:02,009 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_SpaghettiToken
[2020-11-24 16:12:02,009 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_SpaghettiToken
[2020-11-24 16:12:02,009 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_SpaghettiToken
[2020-11-24 16:12:02,009 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_SpaghettiToken__success
[2020-11-24 16:12:02,009 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_SpaghettiToken
[2020-11-24 16:12:02,009 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_SpaghettiToken
[2020-11-24 16:12:02,009 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_SpaghettiToken
[2020-11-24 16:12:02,009 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_SpaghettiToken
[2020-11-24 16:12:02,010 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_SpaghettiToken
[2020-11-24 16:12:02,010 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_SpaghettiToken
[2020-11-24 16:12:02,010 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-24 16:12:02,010 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-24 16:12:02,010 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-24 16:12:02,010 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_DSMath
[2020-11-24 16:12:02,010 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_DSMath
[2020-11-24 16:12:02,010 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_SpaghettiToken
[2020-11-24 16:12:02,010 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-24 16:12:02,010 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-24 16:12:02,010 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_DSMath__fail
[2020-11-24 16:12:02,011 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_DSMath__fail
[2020-11-24 16:12:02,011 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address_SpaghettiToken__success
[2020-11-24 16:12:02,011 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address_SpaghettiToken__fail
[2020-11-24 16:12:02,011 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_SpaghettiToken__success
[2020-11-24 16:12:02,011 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_SpaghettiToken__fail
[2020-11-24 16:12:02,011 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_SpaghettiToken__success
[2020-11-24 16:12:02,011 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_SpaghettiToken__fail
[2020-11-24 16:12:02,011 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_SpaghettiToken__success
[2020-11-24 16:12:02,011 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_SpaghettiToken__fail
[2020-11-24 16:12:02,011 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_SpaghettiToken__fail
[2020-11-24 16:12:02,011 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_SpaghettiToken__success
[2020-11-24 16:12:02,011 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_SpaghettiToken__fail
[2020-11-24 16:12:02,012 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_SpaghettiToken__success
[2020-11-24 16:12:02,012 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_SpaghettiToken__fail
[2020-11-24 16:12:02,012 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_SpaghettiToken__success
[2020-11-24 16:12:02,012 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_SpaghettiToken__fail
[2020-11-24 16:12:02,012 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-24 16:12:02,012 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-24 16:12:02,012 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-24 16:12:02,012 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-24 16:12:02,012 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-24 16:12:02,012 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_DSMath__fail
[2020-11-24 16:12:02,012 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_DSMath__success
[2020-11-24 16:12:02,012 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_DSMath__fail
[2020-11-24 16:12:02,012 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_DSMath__success
[2020-11-24 16:12:02,012 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address_SpaghettiToken__fail
[2020-11-24 16:12:02,013 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address_SpaghettiToken__success
[2020-11-24 16:12:02,013 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_SpaghettiToken__fail
[2020-11-24 16:12:02,013 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_SpaghettiToken__success
[2020-11-24 16:12:02,013 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_SpaghettiToken__fail
[2020-11-24 16:12:02,013 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_SpaghettiToken__success
[2020-11-24 16:12:02,013 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_SpaghettiToken__fail
[2020-11-24 16:12:02,013 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_SpaghettiToken__success
[2020-11-24 16:12:02,013 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_SpaghettiToken__fail
[2020-11-24 16:12:02,013 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_SpaghettiToken__success
[2020-11-24 16:12:02,013 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_SpaghettiToken__fail
[2020-11-24 16:12:02,013 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_SpaghettiToken__success
[2020-11-24 16:12:02,013 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_SpaghettiToken__fail
[2020-11-24 16:12:02,013 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_SpaghettiToken__success
[2020-11-24 16:12:02,013 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_SpaghettiToken__fail
[2020-11-24 16:12:02,014 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_SpaghettiToken__success
[2020-11-24 16:12:02,014 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-24 16:12:02,014 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-24 16:12:02,014 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-24 16:12:02,014 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-24 16:12:02,014 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-24 16:12:02,014 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-24 16:12:02,014 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_DSMath
[2020-11-24 16:12:02,014 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_DSMath
[2020-11-24 16:12:02,014 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_SpaghettiToken
[2020-11-24 16:12:02,014 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-24 16:12:02,014 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-24 16:12:02,014 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-24 16:12:02,185 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 16:12:02,349 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 16:12:02,349 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 16:12:02,350 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 16:12:02,455 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-24 16:12:02,455 INFO  L286             CfgBuilder]: Removed 2 assue(true) statements.
[2020-11-24 16:12:02,457 INFO  L202        PluginConnector]: Adding new model SpaghettiToken_0x08a2e41fb99a7599725190b9c970ad3893fa33cf_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 04:12:02 BoogieIcfgContainer
[2020-11-24 16:12:02,457 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 04:12:01" (2/2) ...
[2020-11-24 16:12:02,457 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-24 16:12:02,457 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@6f77f279 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 04:12:02, skipping insertion in model container
[2020-11-24 16:12:02,457 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-24 16:12:02,458 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-24 16:12:02,458 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-24 16:12:02,459 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-24 16:12:02,459 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "SpaghettiToken_0x08a2e41fb99a7599725190b9c970ad3893fa33cf_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 04:12:01" (1/3) ...
[2020-11-24 16:12:02,460 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@723241ec and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 04:12:02, skipping insertion in model container
[2020-11-24 16:12:02,460 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 04:12:01" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-24 16:12:02,496 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 04:12:02 NWAContainer
[2020-11-24 16:12:02,496 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-24 16:12:02,496 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-24 16:12:02,496 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-24 16:12:02,497 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-24 16:12:02,498 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "SpaghettiToken_0x08a2e41fb99a7599725190b9c970ad3893fa33cf_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 04:12:02" (3/4) ...
[2020-11-24 16:12:02,499 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@7ef377f7 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 04:12:02, skipping insertion in model container
[2020-11-24 16:12:02,499 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 04:12:02" (4/4) ...
[2020-11-24 16:12:02,502 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-24 16:12:02,504 INFO  L110   BuchiProductObserver]: Initial RCFG 528 locations, 669 edges
[2020-11-24 16:12:02,504 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-24 16:12:02,514 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-24 16:12:03,358 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-24 16:12:03,361 INFO  L110   BuchiProductObserver]: BuchiProgram size 1252 locations, 2156 edges
[2020-11-24 16:12:03,361 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 04:12:03 BoogieIcfgContainer
[2020-11-24 16:12:03,361 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-24 16:12:03,362 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-24 16:12:03,362 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-24 16:12:03,363 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-24 16:12:03,365 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 04:12:03" (1/1) ...
[2020-11-24 16:12:03,413 INFO  L313           BlockEncoder]: Initial Icfg 1252 locations, 2156 edges
[2020-11-24 16:12:03,413 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-24 16:12:03,413 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-24 16:12:03,414 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-24 16:12:03,414 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-24 16:12:03,422 INFO  L70    emoveInfeasibleEdges]: Removed 57 edges and 7 locations because of local infeasibility
[2020-11-24 16:12:03,427 INFO  L70        RemoveSinkStates]: Removed 32 edges and 21 locations by removing sink states
[2020-11-24 16:12:03,432 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-24 16:12:03,434 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-24 16:12:03,436 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-24 16:12:03,436 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-24 16:12:03,439 INFO  L313           BlockEncoder]: Encoded RCFG 1214 locations, 2053 edges
[2020-11-24 16:12:03,439 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 24.11 04:12:03 BasicIcfg
[2020-11-24 16:12:03,439 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-24 16:12:03,440 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-24 16:12:03,440 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-24 16:12:03,442 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-24 16:12:03,442 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 16:12:03,442 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "SpaghettiToken_0x08a2e41fb99a7599725190b9c970ad3893fa33cf_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 04:12:01" (1/6) ...
[2020-11-24 16:12:03,444 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@14a9b9f6 and model type SpaghettiToken_0x08a2e41fb99a7599725190b9c970ad3893fa33cf_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 24.11 04:12:03, skipping insertion in model container
[2020-11-24 16:12:03,444 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 16:12:03,444 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 04:12:01" (2/6) ...
[2020-11-24 16:12:03,445 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@14a9b9f6 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 24.11 04:12:03, skipping insertion in model container
[2020-11-24 16:12:03,445 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 16:12:03,445 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "SpaghettiToken_0x08a2e41fb99a7599725190b9c970ad3893fa33cf_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 04:12:02" (3/6) ...
[2020-11-24 16:12:03,445 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@14a9b9f6 and model type SpaghettiToken_0x08a2e41fb99a7599725190b9c970ad3893fa33cf_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 24.11 04:12:03, skipping insertion in model container
[2020-11-24 16:12:03,445 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 16:12:03,445 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 04:12:02" (4/6) ...
[2020-11-24 16:12:03,445 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@14a9b9f6 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 24.11 04:12:03, skipping insertion in model container
[2020-11-24 16:12:03,446 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 16:12:03,446 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 04:12:03" (5/6) ...
[2020-11-24 16:12:03,446 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@14a9b9f6 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 24.11 04:12:03, skipping insertion in model container
[2020-11-24 16:12:03,446 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 16:12:03,446 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 24.11 04:12:03" (6/6) ...
[2020-11-24 16:12:03,447 INFO  L404   chiAutomizerObserver]: Analyzing ICFG SpaghettiToken_0x08a2e41fb99a7599725190b9c970ad3893fa33cf_transfer-normal.bpl_BEv2
[2020-11-24 16:12:03,485 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-24 16:12:03,486 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-24 16:12:03,486 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-24 16:12:03,486 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-24 16:12:03,486 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-24 16:12:03,486 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-24 16:12:03,486 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-24 16:12:03,486 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-24 16:12:03,486 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-24 16:12:03,503 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1214 states.
[2020-11-24 16:12:03,542 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 16:12:03,542 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 16:12:03,542 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 16:12:03,550 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 16:12:03,550 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
[2020-11-24 16:12:03,550 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-24 16:12:03,550 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1214 states.
[2020-11-24 16:12:03,560 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 16:12:03,560 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 16:12:03,560 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 16:12:03,562 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 16:12:03,562 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L3]                 success_transfer_SpaghettiToken0 := false;
[L3]                 call_transfer_SpaghettiToken0 := false;
[L3]     CALL        call main();
[L3]                 havoc p1;
[L1461]              assume null == 0;
[L1462]  CALL        call this := FreshRefGenerator__success();
[L640]               havoc newRef;
[L641]               assume Alloc[newRef] == false;
[L642]               Alloc[newRef] := true;
[L643]               assume newRef != null;
[L1462]  RET         call this := FreshRefGenerator__success();
[L1463]              assume now >= 0;
[L1464]              assume DType[this] == SpaghettiToken;
[L1465]              assume !revert && gas >= 0;
[L1466]  CALL        call CorralChoice_SpaghettiToken(this);
[L1376]              havoc msgsender_MSG;
[L1377]              havoc msgvalue_MSG;
[L1378]              havoc choice;
[L1379]              havoc __ret_0_totalSupply;
[L1380]              havoc arg329_s0;
[L1381]              havoc __ret_0_balanceOf;
[L1382]              havoc arg330_s0;
[L1383]              havoc arg331_s0;
[L1384]              havoc __ret_0_allowance;
[L1385]              havoc __ret_0_symbol;
[L1386]              havoc __ret_0_decimals;
[L1387]              havoc __ret_0_name;
[L1388]              havoc chef_s113;
[L1389]              havoc guy_s149;
[L1390]              havoc __ret_0_approve;
[L1391]              havoc guy_s177;
[L1392]              havoc wad_s177;
[L1393]              havoc dst_s194;
[L1394]              havoc wad_s194;
[L1395]              havoc __ret_0_transfer;
[L1396]              havoc src_s309;
[L1397]              havoc dst_s309;
[L1398]              havoc wad_s309;
[L1399]              havoc __ret_0_transferFrom;
[L1400]              havoc tmpNow;
[L1401]              havoc gas;
[L1402]              assume gas > 4000000 && gas <= 8000000;
[L1403]              tmpNow := now;
[L1404]              havoc now;
[L1405]              assume now > tmpNow;
[L1406]              assume msgsender_MSG != null;
[L1407]  COND TRUE   choice == 7
[L1408]              gas := gas - 21000;
[L1409]  COND FALSE  !(gas >= 0)
[L1466]  RET         call CorralChoice_SpaghettiToken(this);

Loop:
[L1466]        assume true;

[2020-11-24 16:12:03,577 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 16:12:03,578 INFO  L82        PathProgramCache]: Analyzing trace with hash 1429419070, now seen corresponding path program 1 times
[2020-11-24 16:12:03,583 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 16:12:03,602 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 16:12:03,648 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 16:12:03,650 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 16:12:03,650 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-24 16:12:03,654 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 16:12:03,666 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-24 16:12:03,666 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-24 16:12:03,668 INFO  L87              Difference]: Start difference. First operand 1214 states. Second operand 3 states.
[2020-11-24 16:12:03,861 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 16:12:03,861 INFO  L93              Difference]: Finished difference Result 696 states and 787 transitions.
[2020-11-24 16:12:03,862 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-24 16:12:03,863 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 696 states and 787 transitions.
[2020-11-24 16:12:03,869 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 16:12:03,875 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 696 states to 247 states and 278 transitions.
[2020-11-24 16:12:03,876 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 4
[2020-11-24 16:12:03,876 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 119
[2020-11-24 16:12:03,877 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 247 states and 278 transitions.
[2020-11-24 16:12:03,879 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 16:12:03,879 INFO  L728         BuchiCegarLoop]: Abstraction has 247 states and 278 transitions.
[2020-11-24 16:12:03,893 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 247 states and 278 transitions.
[2020-11-24 16:12:03,908 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 247 to 247.
[2020-11-24 16:12:03,908 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 247 states.
[2020-11-24 16:12:03,909 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 247 states to 247 states and 278 transitions.
[2020-11-24 16:12:03,910 INFO  L751         BuchiCegarLoop]: Abstraction has 247 states and 278 transitions.
[2020-11-24 16:12:03,910 INFO  L631         BuchiCegarLoop]: Abstraction has 247 states and 278 transitions.
[2020-11-24 16:12:03,910 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-24 16:12:03,910 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 247 states and 278 transitions.
[2020-11-24 16:12:03,912 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 16:12:03,912 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 16:12:03,912 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 16:12:03,913 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 16:12:03,913 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L3]                 success_transfer_SpaghettiToken0 := false;
[L3]                 call_transfer_SpaghettiToken0 := false;
[L3]     CALL        call main();
[L3]                 havoc p1;
[L1461]              assume null == 0;
[L1462]  CALL        call this := FreshRefGenerator__success();
[L640]               havoc newRef;
[L641]               assume Alloc[newRef] == false;
[L642]               Alloc[newRef] := true;
[L643]               assume newRef != null;
[L1462]  RET         call this := FreshRefGenerator__success();
[L1463]              assume now >= 0;
[L1464]              assume DType[this] == SpaghettiToken;
[L1465]              assume !revert && gas >= 0;
[L1466]  CALL        call CorralChoice_SpaghettiToken(this);
[L1376]              havoc msgsender_MSG;
[L1377]              havoc msgvalue_MSG;
[L1378]              havoc choice;
[L1379]              havoc __ret_0_totalSupply;
[L1380]              havoc arg329_s0;
[L1381]              havoc __ret_0_balanceOf;
[L1382]              havoc arg330_s0;
[L1383]              havoc arg331_s0;
[L1384]              havoc __ret_0_allowance;
[L1385]              havoc __ret_0_symbol;
[L1386]              havoc __ret_0_decimals;
[L1387]              havoc __ret_0_name;
[L1388]              havoc chef_s113;
[L1389]              havoc guy_s149;
[L1390]              havoc __ret_0_approve;
[L1391]              havoc guy_s177;
[L1392]              havoc wad_s177;
[L1393]              havoc dst_s194;
[L1394]              havoc wad_s194;
[L1395]              havoc __ret_0_transfer;
[L1396]              havoc src_s309;
[L1397]              havoc dst_s309;
[L1398]              havoc wad_s309;
[L1399]              havoc __ret_0_transferFrom;
[L1400]              havoc tmpNow;
[L1401]              havoc gas;
[L1402]              assume gas > 4000000 && gas <= 8000000;
[L1403]              tmpNow := now;
[L1404]              havoc now;
[L1405]              assume now > tmpNow;
[L1406]              assume msgsender_MSG != null;
[L1407]  COND FALSE  !(choice == 7)
[L1413]  COND FALSE  !(choice == 6)
[L1419]  COND FALSE  !(choice == 5)
[L1425]  COND FALSE  !(choice == 4)
[L1431]  COND FALSE  !(choice == 3)
[L1438]  COND TRUE   choice == 2
[L1439]              gas := gas - 21000;
[L1440]  COND TRUE   gas >= 0
[L1441]              assume wad_s194 >= 0 && wad_s194 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1442]              assume msgvalue_MSG == 0;
[L1443]  CALL        call __ret_0_transfer := transfer~address~uint256_SpaghettiToken(this, msgsender_MSG, msgvalue_MSG, dst_s194, wad_s194);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != dst_s194) && msgsender_MSG != dst_s194) && wad_s194 <= balanceOf_SpaghettiToken[this][msgsender_MSG]) && balanceOf_SpaghettiToken[this][dst_s194] + wad_s194 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && wad_s194 >= 0) && wad_s194 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_SpaghettiToken[this][dst_s194] >= 0) && balanceOf_SpaghettiToken[this][dst_s194] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_SpaghettiToken[this][msgsender_MSG] >= 0) && balanceOf_SpaghettiToken[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_SpaghettiToken0 := true;
[L3]                 call_transfer_SpaghettiToken0 := false;
[L3]                 revert := revert_hold;
[L180]               havoc __exception;
[L181]               revert := false;
[L182]   COND FALSE  !(__exception)
[L203]   CALL        call __ret_0_ := transfer~address~uint256_SpaghettiToken__success(this, msgsender_MSG, msgvalue_MSG, dst_s194, wad_s194);
[L741]   CALL        call __var_3 := transferFrom~address~address~uint256_SpaghettiToken__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, dst_s194, wad_s194);
[L827]               __var_4 := -1 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L828]   COND TRUE   src_s309 != msgsender_MSG && allowance_SpaghettiToken[this][src_s309][msgsender_MSG] != -1 % 115792089237316195423570985008687907853269984665640564039457584007913129639936
[L829]   COND TRUE   !(allowance_SpaghettiToken[this][src_s309][msgsender_MSG] >= wad_s309)
[L830]               revert := true;
[L741]   RET         call __var_3 := transferFrom~address~address~uint256_SpaghettiToken__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, dst_s194, wad_s194);
[L742]   COND TRUE   revert
[L203]   RET         call __ret_0_ := transfer~address~uint256_SpaghettiToken__success(this, msgsender_MSG, msgvalue_MSG, dst_s194, wad_s194);
[L204]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !((((((((__ret_0_ == true && balanceOf_SpaghettiToken[this][msgsender_MSG] == old(balanceOf_SpaghettiToken[this][msgsender_MSG]) - wad_s194) && balanceOf_SpaghettiToken[this][dst_s194] == old(balanceOf_SpaghettiToken[this][dst_s194]) + wad_s194) && totalSupply_SpaghettiToken[this] == old(totalSupply_SpaghettiToken[this])) && allowance_SpaghettiToken[this] == old(allowance_SpaghettiToken[this])) && balanceOf_SpaghettiToken[this][p1] == old(balanceOf_SpaghettiToken[this][p1])) && symbol_SpaghettiToken[this] == old(symbol_SpaghettiToken[this])) && decimals_SpaghettiToken[this] == old(decimals_SpaghettiToken[this])) && name_SpaghettiToken[this] == old(name_SpaghettiToken[this]));
[L3]                 revert := revert_hold;
[L1443]  RET         call __ret_0_transfer := transfer~address~uint256_SpaghettiToken(this, msgsender_MSG, msgvalue_MSG, dst_s194, wad_s194);
[L1466]  RET         call CorralChoice_SpaghettiToken(this);

Loop:
[L1466]        assume true;

[2020-11-24 16:12:03,916 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 16:12:03,916 INFO  L82        PathProgramCache]: Analyzing trace with hash 1041511343, now seen corresponding path program 1 times
[2020-11-24 16:12:03,917 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 16:12:03,929 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 16:12:03,952 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 16:12:03,952 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 16:12:03,952 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-24 16:12:03,953 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 16:12:03,953 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-24 16:12:03,954 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-24 16:12:03,954 INFO  L87              Difference]: Start difference. First operand 247 states and 278 transitions. cyclomatic complexity: 32 Second operand 3 states.
[2020-11-24 16:12:03,963 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 16:12:03,963 INFO  L93              Difference]: Finished difference Result 276 states and 315 transitions.
[2020-11-24 16:12:03,963 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-24 16:12:03,964 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 276 states and 315 transitions.
[2020-11-24 16:12:03,966 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 16:12:03,967 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 276 states to 237 states and 264 transitions.
[2020-11-24 16:12:03,968 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 118
[2020-11-24 16:12:03,968 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 118
[2020-11-24 16:12:03,968 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 237 states and 264 transitions.
[2020-11-24 16:12:03,969 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 16:12:03,969 INFO  L728         BuchiCegarLoop]: Abstraction has 237 states and 264 transitions.
[2020-11-24 16:12:03,970 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 237 states and 264 transitions.
[2020-11-24 16:12:03,975 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 237 to 237.
[2020-11-24 16:12:03,975 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 237 states.
[2020-11-24 16:12:03,976 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 237 states to 237 states and 264 transitions.
[2020-11-24 16:12:03,976 INFO  L751         BuchiCegarLoop]: Abstraction has 237 states and 264 transitions.
[2020-11-24 16:12:03,976 INFO  L631         BuchiCegarLoop]: Abstraction has 237 states and 264 transitions.
[2020-11-24 16:12:03,976 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-24 16:12:03,976 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 237 states and 264 transitions.
[2020-11-24 16:12:03,977 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 16:12:03,977 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 16:12:03,977 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 16:12:03,978 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 16:12:03,979 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L3]                 success_transfer_SpaghettiToken0 := false;
[L3]                 call_transfer_SpaghettiToken0 := false;
[L3]     CALL        call main();
[L3]                 havoc p1;
[L1461]              assume null == 0;
[L1462]  CALL        call this := FreshRefGenerator__success();
[L640]               havoc newRef;
[L641]               assume Alloc[newRef] == false;
[L642]               Alloc[newRef] := true;
[L643]               assume newRef != null;
[L1462]  RET         call this := FreshRefGenerator__success();
[L1463]              assume now >= 0;
[L1464]              assume DType[this] == SpaghettiToken;
[L1465]              assume !revert && gas >= 0;
[L1466]  CALL        call CorralChoice_SpaghettiToken(this);
[L1376]              havoc msgsender_MSG;
[L1377]              havoc msgvalue_MSG;
[L1378]              havoc choice;
[L1379]              havoc __ret_0_totalSupply;
[L1380]              havoc arg329_s0;
[L1381]              havoc __ret_0_balanceOf;
[L1382]              havoc arg330_s0;
[L1383]              havoc arg331_s0;
[L1384]              havoc __ret_0_allowance;
[L1385]              havoc __ret_0_symbol;
[L1386]              havoc __ret_0_decimals;
[L1387]              havoc __ret_0_name;
[L1388]              havoc chef_s113;
[L1389]              havoc guy_s149;
[L1390]              havoc __ret_0_approve;
[L1391]              havoc guy_s177;
[L1392]              havoc wad_s177;
[L1393]              havoc dst_s194;
[L1394]              havoc wad_s194;
[L1395]              havoc __ret_0_transfer;
[L1396]              havoc src_s309;
[L1397]              havoc dst_s309;
[L1398]              havoc wad_s309;
[L1399]              havoc __ret_0_transferFrom;
[L1400]              havoc tmpNow;
[L1401]              havoc gas;
[L1402]              assume gas > 4000000 && gas <= 8000000;
[L1403]              tmpNow := now;
[L1404]              havoc now;
[L1405]              assume now > tmpNow;
[L1406]              assume msgsender_MSG != null;
[L1407]  COND FALSE  !(choice == 7)
[L1413]  COND FALSE  !(choice == 6)
[L1419]  COND FALSE  !(choice == 5)
[L1425]  COND FALSE  !(choice == 4)
[L1431]  COND FALSE  !(choice == 3)
[L1438]  COND TRUE   choice == 2
[L1439]              gas := gas - 21000;
[L1440]  COND TRUE   gas >= 0
[L1441]              assume wad_s194 >= 0 && wad_s194 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1442]              assume msgvalue_MSG == 0;
[L1443]  CALL        call __ret_0_transfer := transfer~address~uint256_SpaghettiToken(this, msgsender_MSG, msgvalue_MSG, dst_s194, wad_s194);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != dst_s194) && msgsender_MSG != dst_s194) && wad_s194 <= balanceOf_SpaghettiToken[this][msgsender_MSG]) && balanceOf_SpaghettiToken[this][dst_s194] + wad_s194 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && wad_s194 >= 0) && wad_s194 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_SpaghettiToken[this][dst_s194] >= 0) && balanceOf_SpaghettiToken[this][dst_s194] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_SpaghettiToken[this][msgsender_MSG] >= 0) && balanceOf_SpaghettiToken[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_SpaghettiToken0 := true;
[L3]                 call_transfer_SpaghettiToken0 := false;
[L3]                 revert := revert_hold;
[L180]               havoc __exception;
[L181]               revert := false;
[L182]   COND FALSE  !(__exception)
[L203]   CALL        call __ret_0_ := transfer~address~uint256_SpaghettiToken__success(this, msgsender_MSG, msgvalue_MSG, dst_s194, wad_s194);
[L741]   CALL        call __var_3 := transferFrom~address~address~uint256_SpaghettiToken__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, dst_s194, wad_s194);
[L827]               __var_4 := -1 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L828]   COND FALSE  !(src_s309 != msgsender_MSG && allowance_SpaghettiToken[this][src_s309][msgsender_MSG] != -1 % 115792089237316195423570985008687907853269984665640564039457584007913129639936)
[L845]   COND TRUE   !(balanceOf_SpaghettiToken[this][src_s309] >= wad_s309)
[L846]               revert := true;
[L741]   RET         call __var_3 := transferFrom~address~address~uint256_SpaghettiToken__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, dst_s194, wad_s194);
[L742]   COND TRUE   revert
[L203]   RET         call __ret_0_ := transfer~address~uint256_SpaghettiToken__success(this, msgsender_MSG, msgvalue_MSG, dst_s194, wad_s194);
[L204]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !((((((((__ret_0_ == true && balanceOf_SpaghettiToken[this][msgsender_MSG] == old(balanceOf_SpaghettiToken[this][msgsender_MSG]) - wad_s194) && balanceOf_SpaghettiToken[this][dst_s194] == old(balanceOf_SpaghettiToken[this][dst_s194]) + wad_s194) && totalSupply_SpaghettiToken[this] == old(totalSupply_SpaghettiToken[this])) && allowance_SpaghettiToken[this] == old(allowance_SpaghettiToken[this])) && balanceOf_SpaghettiToken[this][p1] == old(balanceOf_SpaghettiToken[this][p1])) && symbol_SpaghettiToken[this] == old(symbol_SpaghettiToken[this])) && decimals_SpaghettiToken[this] == old(decimals_SpaghettiToken[this])) && name_SpaghettiToken[this] == old(name_SpaghettiToken[this]));
[L3]                 revert := revert_hold;
[L1443]  RET         call __ret_0_transfer := transfer~address~uint256_SpaghettiToken(this, msgsender_MSG, msgvalue_MSG, dst_s194, wad_s194);
[L1466]  RET         call CorralChoice_SpaghettiToken(this);

Loop:
[L1466]        assume true;

[2020-11-24 16:12:03,980 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 16:12:03,981 INFO  L82        PathProgramCache]: Analyzing trace with hash -1743482055, now seen corresponding path program 1 times
[2020-11-24 16:12:03,981 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 16:12:03,992 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 16:12:04,006 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 16:12:04,007 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 16:12:04,007 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-24 16:12:04,007 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 16:12:04,007 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-24 16:12:04,007 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-24 16:12:04,008 INFO  L87              Difference]: Start difference. First operand 237 states and 264 transitions. cyclomatic complexity: 28 Second operand 3 states.
[2020-11-24 16:12:04,020 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 16:12:04,020 INFO  L93              Difference]: Finished difference Result 294 states and 325 transitions.
[2020-11-24 16:12:04,020 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-24 16:12:04,020 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 294 states and 325 transitions.
[2020-11-24 16:12:04,022 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 2
[2020-11-24 16:12:04,024 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 294 states to 267 states and 288 transitions.
[2020-11-24 16:12:04,024 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 138
[2020-11-24 16:12:04,024 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 152
[2020-11-24 16:12:04,024 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 267 states and 288 transitions.
[2020-11-24 16:12:04,025 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 16:12:04,025 INFO  L728         BuchiCegarLoop]: Abstraction has 267 states and 288 transitions.
[2020-11-24 16:12:04,025 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 267 states and 288 transitions.
[2020-11-24 16:12:04,029 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 267 to 256.
[2020-11-24 16:12:04,029 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 256 states.
[2020-11-24 16:12:04,030 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 256 states to 256 states and 277 transitions.
[2020-11-24 16:12:04,030 INFO  L751         BuchiCegarLoop]: Abstraction has 256 states and 277 transitions.
[2020-11-24 16:12:04,030 INFO  L631         BuchiCegarLoop]: Abstraction has 256 states and 277 transitions.
[2020-11-24 16:12:04,030 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-24 16:12:04,030 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 256 states and 277 transitions.
[2020-11-24 16:12:04,031 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 16:12:04,031 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 16:12:04,031 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 16:12:04,032 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 16:12:04,032 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L3]                 success_transfer_SpaghettiToken0 := false;
[L3]                 call_transfer_SpaghettiToken0 := false;
[L3]     CALL        call main();
[L3]                 havoc p1;
[L1461]              assume null == 0;
[L1462]  CALL        call this := FreshRefGenerator__success();
[L640]               havoc newRef;
[L641]               assume Alloc[newRef] == false;
[L642]               Alloc[newRef] := true;
[L643]               assume newRef != null;
[L1462]  RET         call this := FreshRefGenerator__success();
[L1463]              assume now >= 0;
[L1464]              assume DType[this] == SpaghettiToken;
[L1465]              assume !revert && gas >= 0;
[L1466]  CALL        call CorralChoice_SpaghettiToken(this);
[L1376]              havoc msgsender_MSG;
[L1377]              havoc msgvalue_MSG;
[L1378]              havoc choice;
[L1379]              havoc __ret_0_totalSupply;
[L1380]              havoc arg329_s0;
[L1381]              havoc __ret_0_balanceOf;
[L1382]              havoc arg330_s0;
[L1383]              havoc arg331_s0;
[L1384]              havoc __ret_0_allowance;
[L1385]              havoc __ret_0_symbol;
[L1386]              havoc __ret_0_decimals;
[L1387]              havoc __ret_0_name;
[L1388]              havoc chef_s113;
[L1389]              havoc guy_s149;
[L1390]              havoc __ret_0_approve;
[L1391]              havoc guy_s177;
[L1392]              havoc wad_s177;
[L1393]              havoc dst_s194;
[L1394]              havoc wad_s194;
[L1395]              havoc __ret_0_transfer;
[L1396]              havoc src_s309;
[L1397]              havoc dst_s309;
[L1398]              havoc wad_s309;
[L1399]              havoc __ret_0_transferFrom;
[L1400]              havoc tmpNow;
[L1401]              havoc gas;
[L1402]              assume gas > 4000000 && gas <= 8000000;
[L1403]              tmpNow := now;
[L1404]              havoc now;
[L1405]              assume now > tmpNow;
[L1406]              assume msgsender_MSG != null;
[L1407]  COND FALSE  !(choice == 7)
[L1413]  COND FALSE  !(choice == 6)
[L1419]  COND FALSE  !(choice == 5)
[L1425]  COND FALSE  !(choice == 4)
[L1431]  COND FALSE  !(choice == 3)
[L1438]  COND TRUE   choice == 2
[L1439]              gas := gas - 21000;
[L1440]  COND TRUE   gas >= 0
[L1441]              assume wad_s194 >= 0 && wad_s194 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1442]              assume msgvalue_MSG == 0;
[L1443]  CALL        call __ret_0_transfer := transfer~address~uint256_SpaghettiToken(this, msgsender_MSG, msgvalue_MSG, dst_s194, wad_s194);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != dst_s194) && msgsender_MSG != dst_s194) && wad_s194 <= balanceOf_SpaghettiToken[this][msgsender_MSG]) && balanceOf_SpaghettiToken[this][dst_s194] + wad_s194 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && wad_s194 >= 0) && wad_s194 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_SpaghettiToken[this][dst_s194] >= 0) && balanceOf_SpaghettiToken[this][dst_s194] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_SpaghettiToken[this][msgsender_MSG] >= 0) && balanceOf_SpaghettiToken[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_SpaghettiToken0 := true;
[L3]                 call_transfer_SpaghettiToken0 := false;
[L3]                 revert := revert_hold;
[L180]               havoc __exception;
[L181]               revert := false;
[L182]   COND TRUE   __exception
[L183]               __tmp__Balance := Balance;
[L184]               __tmp__DType := DType;
[L185]               __tmp__Alloc := Alloc;
[L186]               __tmp__balance_ADDR := balance_ADDR;
[L187]               __tmp__M_Ref_int := M_Ref_int;
[L188]               __tmp__sum_balanceOf0 := sum_balanceOf0;
[L189]               __tmp__alloc_allowance_SpaghettiToken_lvl0 := alloc_allowance_SpaghettiToken_lvl0;
[L190]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L191]               __tmp__sum_allowance1 := sum_allowance1;
[L192]               __tmp__Length := Length;
[L193]               __tmp__now := now;
[L194]               __tmp__totalSupply_SpaghettiToken := totalSupply_SpaghettiToken;
[L195]               __tmp__balanceOf_SpaghettiToken := balanceOf_SpaghettiToken;
[L196]               __tmp__allowance_SpaghettiToken := allowance_SpaghettiToken;
[L197]               __tmp__symbol_SpaghettiToken := symbol_SpaghettiToken;
[L198]               __tmp__decimals_SpaghettiToken := decimals_SpaghettiToken;
[L199]               __tmp__name_SpaghettiToken := name_SpaghettiToken;
[L200]   CALL        call __ret_0_ := transfer~address~uint256_SpaghettiToken__fail(this, msgsender_MSG, msgvalue_MSG, dst_s194, wad_s194);
[L730]   CALL        call __var_3 := transferFrom~address~address~uint256_SpaghettiToken__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, dst_s194, wad_s194);
[L757]               __var_4 := -1 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L758]   COND FALSE  !(src_s309 != msgsender_MSG && __tmp__allowance_SpaghettiToken[this][src_s309][msgsender_MSG] != -1 % 115792089237316195423570985008687907853269984665640564039457584007913129639936)
[L775]   COND TRUE   !(__tmp__balanceOf_SpaghettiToken[this][src_s309] >= wad_s309)
[L776]               revert := true;
[L730]   RET         call __var_3 := transferFrom~address~address~uint256_SpaghettiToken__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, dst_s194, wad_s194);
[L731]   COND TRUE   revert
[L200]   RET         call __ret_0_ := transfer~address~uint256_SpaghettiToken__fail(this, msgsender_MSG, msgvalue_MSG, dst_s194, wad_s194);
[L201]               assume revert || gas < 0;
[L1443]  RET         call __ret_0_transfer := transfer~address~uint256_SpaghettiToken(this, msgsender_MSG, msgvalue_MSG, dst_s194, wad_s194);
[L1466]  RET         call CorralChoice_SpaghettiToken(this);

Loop:
[L1466]        assume true;

[2020-11-24 16:12:04,034 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 16:12:04,035 INFO  L82        PathProgramCache]: Analyzing trace with hash 1682780702, now seen corresponding path program 1 times
[2020-11-24 16:12:04,035 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 16:12:04,044 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 16:12:04,084 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 16:12:04,084 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 16:12:04,084 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [7] imperfect sequences [] total 7
[2020-11-24 16:12:04,085 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 16:12:04,085 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 7 interpolants.
[2020-11-24 16:12:04,085 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=11, Invalid=31, Unknown=0, NotChecked=0, Total=42
[2020-11-24 16:12:04,085 INFO  L87              Difference]: Start difference. First operand 256 states and 277 transitions. cyclomatic complexity: 22 Second operand 7 states.
[2020-11-24 16:12:04,214 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 16:12:04,214 INFO  L93              Difference]: Finished difference Result 279 states and 299 transitions.
[2020-11-24 16:12:04,214 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 8 states. 
[2020-11-24 16:12:04,215 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 279 states and 299 transitions.
[2020-11-24 16:12:04,216 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 2
[2020-11-24 16:12:04,218 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 279 states to 272 states and 292 transitions.
[2020-11-24 16:12:04,218 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 157
[2020-11-24 16:12:04,218 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 157
[2020-11-24 16:12:04,218 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 272 states and 292 transitions.
[2020-11-24 16:12:04,219 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 16:12:04,219 INFO  L728         BuchiCegarLoop]: Abstraction has 272 states and 292 transitions.
[2020-11-24 16:12:04,219 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 272 states and 292 transitions.
[2020-11-24 16:12:04,222 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 272 to 255.
[2020-11-24 16:12:04,222 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 255 states.
[2020-11-24 16:12:04,223 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 255 states to 255 states and 275 transitions.
[2020-11-24 16:12:04,223 INFO  L751         BuchiCegarLoop]: Abstraction has 255 states and 275 transitions.
[2020-11-24 16:12:04,223 INFO  L631         BuchiCegarLoop]: Abstraction has 255 states and 275 transitions.
[2020-11-24 16:12:04,223 INFO  L445         BuchiCegarLoop]: ======== Iteration 5============
[2020-11-24 16:12:04,224 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 255 states and 275 transitions.
[2020-11-24 16:12:04,224 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 16:12:04,225 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 16:12:04,225 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 16:12:04,225 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 16:12:04,225 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L3]                 success_transfer_SpaghettiToken0 := false;
[L3]                 call_transfer_SpaghettiToken0 := false;
[L3]     CALL        call main();
[L3]                 havoc p1;
[L1461]              assume null == 0;
[L1462]  CALL        call this := FreshRefGenerator__success();
[L640]               havoc newRef;
[L641]               assume Alloc[newRef] == false;
[L642]               Alloc[newRef] := true;
[L643]               assume newRef != null;
[L1462]  RET         call this := FreshRefGenerator__success();
[L1463]              assume now >= 0;
[L1464]              assume DType[this] == SpaghettiToken;
[L1465]              assume !revert && gas >= 0;
[L1466]  CALL        call CorralChoice_SpaghettiToken(this);
[L1376]              havoc msgsender_MSG;
[L1377]              havoc msgvalue_MSG;
[L1378]              havoc choice;
[L1379]              havoc __ret_0_totalSupply;
[L1380]              havoc arg329_s0;
[L1381]              havoc __ret_0_balanceOf;
[L1382]              havoc arg330_s0;
[L1383]              havoc arg331_s0;
[L1384]              havoc __ret_0_allowance;
[L1385]              havoc __ret_0_symbol;
[L1386]              havoc __ret_0_decimals;
[L1387]              havoc __ret_0_name;
[L1388]              havoc chef_s113;
[L1389]              havoc guy_s149;
[L1390]              havoc __ret_0_approve;
[L1391]              havoc guy_s177;
[L1392]              havoc wad_s177;
[L1393]              havoc dst_s194;
[L1394]              havoc wad_s194;
[L1395]              havoc __ret_0_transfer;
[L1396]              havoc src_s309;
[L1397]              havoc dst_s309;
[L1398]              havoc wad_s309;
[L1399]              havoc __ret_0_transferFrom;
[L1400]              havoc tmpNow;
[L1401]              havoc gas;
[L1402]              assume gas > 4000000 && gas <= 8000000;
[L1403]              tmpNow := now;
[L1404]              havoc now;
[L1405]              assume now > tmpNow;
[L1406]              assume msgsender_MSG != null;
[L1407]  COND FALSE  !(choice == 7)
[L1413]  COND FALSE  !(choice == 6)
[L1419]  COND FALSE  !(choice == 5)
[L1425]  COND FALSE  !(choice == 4)
[L1431]  COND FALSE  !(choice == 3)
[L1438]  COND TRUE   choice == 2
[L1439]              gas := gas - 21000;
[L1440]  COND TRUE   gas >= 0
[L1441]              assume wad_s194 >= 0 && wad_s194 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1442]              assume msgvalue_MSG == 0;
[L1443]  CALL        call __ret_0_transfer := transfer~address~uint256_SpaghettiToken(this, msgsender_MSG, msgvalue_MSG, dst_s194, wad_s194);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != dst_s194) && msgsender_MSG != dst_s194) && wad_s194 <= balanceOf_SpaghettiToken[this][msgsender_MSG]) && balanceOf_SpaghettiToken[this][dst_s194] + wad_s194 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && wad_s194 >= 0) && wad_s194 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_SpaghettiToken[this][dst_s194] >= 0) && balanceOf_SpaghettiToken[this][dst_s194] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_SpaghettiToken[this][msgsender_MSG] >= 0) && balanceOf_SpaghettiToken[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_SpaghettiToken0 := true;
[L3]                 call_transfer_SpaghettiToken0 := false;
[L3]                 revert := revert_hold;
[L180]               havoc __exception;
[L181]               revert := false;
[L182]   COND TRUE   __exception
[L183]               __tmp__Balance := Balance;
[L184]               __tmp__DType := DType;
[L185]               __tmp__Alloc := Alloc;
[L186]               __tmp__balance_ADDR := balance_ADDR;
[L187]               __tmp__M_Ref_int := M_Ref_int;
[L188]               __tmp__sum_balanceOf0 := sum_balanceOf0;
[L189]               __tmp__alloc_allowance_SpaghettiToken_lvl0 := alloc_allowance_SpaghettiToken_lvl0;
[L190]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L191]               __tmp__sum_allowance1 := sum_allowance1;
[L192]               __tmp__Length := Length;
[L193]               __tmp__now := now;
[L194]               __tmp__totalSupply_SpaghettiToken := totalSupply_SpaghettiToken;
[L195]               __tmp__balanceOf_SpaghettiToken := balanceOf_SpaghettiToken;
[L196]               __tmp__allowance_SpaghettiToken := allowance_SpaghettiToken;
[L197]               __tmp__symbol_SpaghettiToken := symbol_SpaghettiToken;
[L198]               __tmp__decimals_SpaghettiToken := decimals_SpaghettiToken;
[L199]               __tmp__name_SpaghettiToken := name_SpaghettiToken;
[L200]   CALL        call __ret_0_ := transfer~address~uint256_SpaghettiToken__fail(this, msgsender_MSG, msgvalue_MSG, dst_s194, wad_s194);
[L730]   CALL        call __var_3 := transferFrom~address~address~uint256_SpaghettiToken__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, dst_s194, wad_s194);
[L757]               __var_4 := -1 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L758]   COND TRUE   src_s309 != msgsender_MSG && __tmp__allowance_SpaghettiToken[this][src_s309][msgsender_MSG] != -1 % 115792089237316195423570985008687907853269984665640564039457584007913129639936
[L759]   COND TRUE   !(__tmp__allowance_SpaghettiToken[this][src_s309][msgsender_MSG] >= wad_s309)
[L760]               revert := true;
[L730]   RET         call __var_3 := transferFrom~address~address~uint256_SpaghettiToken__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, dst_s194, wad_s194);
[L731]   COND TRUE   revert
[L200]   RET         call __ret_0_ := transfer~address~uint256_SpaghettiToken__fail(this, msgsender_MSG, msgvalue_MSG, dst_s194, wad_s194);
[L201]               assume revert || gas < 0;
[L1443]  RET         call __ret_0_transfer := transfer~address~uint256_SpaghettiToken(this, msgsender_MSG, msgvalue_MSG, dst_s194, wad_s194);
[L1466]  RET         call CorralChoice_SpaghettiToken(this);

Loop:
[L1466]        assume true;

[2020-11-24 16:12:04,228 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 16:12:04,228 INFO  L82        PathProgramCache]: Analyzing trace with hash -1796343105, now seen corresponding path program 1 times
[2020-11-24 16:12:04,228 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 16:12:04,236 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 16:12:04,252 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 16:12:04,252 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 16:12:04,252 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-24 16:12:04,252 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 16:12:04,253 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-24 16:12:04,253 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-24 16:12:04,253 INFO  L87              Difference]: Start difference. First operand 255 states and 275 transitions. cyclomatic complexity: 21 Second operand 3 states.
[2020-11-24 16:12:04,259 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 16:12:04,260 INFO  L93              Difference]: Finished difference Result 292 states and 322 transitions.
[2020-11-24 16:12:04,260 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-24 16:12:04,260 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 292 states and 322 transitions.
[2020-11-24 16:12:04,262 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 16:12:04,263 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 292 states to 243 states and 258 transitions.
[2020-11-24 16:12:04,263 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 137
[2020-11-24 16:12:04,263 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 137
[2020-11-24 16:12:04,263 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 243 states and 258 transitions.
[2020-11-24 16:12:04,264 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 16:12:04,264 INFO  L728         BuchiCegarLoop]: Abstraction has 243 states and 258 transitions.
[2020-11-24 16:12:04,264 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 243 states and 258 transitions.
[2020-11-24 16:12:04,267 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 243 to 243.
[2020-11-24 16:12:04,267 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 243 states.
[2020-11-24 16:12:04,267 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 243 states to 243 states and 258 transitions.
[2020-11-24 16:12:04,267 INFO  L751         BuchiCegarLoop]: Abstraction has 243 states and 258 transitions.
[2020-11-24 16:12:04,267 INFO  L631         BuchiCegarLoop]: Abstraction has 243 states and 258 transitions.
[2020-11-24 16:12:04,268 INFO  L445         BuchiCegarLoop]: ======== Iteration 6============
[2020-11-24 16:12:04,268 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 243 states and 258 transitions.
[2020-11-24 16:12:04,268 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 16:12:04,269 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 16:12:04,269 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 16:12:04,269 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 16:12:04,269 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L3]                 success_transfer_SpaghettiToken0 := false;
[L3]                 call_transfer_SpaghettiToken0 := false;
[L3]     CALL        call main();
[L3]                 havoc p1;
[L1461]              assume null == 0;
[L1462]  CALL        call this := FreshRefGenerator__success();
[L640]               havoc newRef;
[L641]               assume Alloc[newRef] == false;
[L642]               Alloc[newRef] := true;
[L643]               assume newRef != null;
[L1462]  RET         call this := FreshRefGenerator__success();
[L1463]              assume now >= 0;
[L1464]              assume DType[this] == SpaghettiToken;
[L1465]              assume !revert && gas >= 0;
[L1466]  CALL        call CorralChoice_SpaghettiToken(this);
[L1376]              havoc msgsender_MSG;
[L1377]              havoc msgvalue_MSG;
[L1378]              havoc choice;
[L1379]              havoc __ret_0_totalSupply;
[L1380]              havoc arg329_s0;
[L1381]              havoc __ret_0_balanceOf;
[L1382]              havoc arg330_s0;
[L1383]              havoc arg331_s0;
[L1384]              havoc __ret_0_allowance;
[L1385]              havoc __ret_0_symbol;
[L1386]              havoc __ret_0_decimals;
[L1387]              havoc __ret_0_name;
[L1388]              havoc chef_s113;
[L1389]              havoc guy_s149;
[L1390]              havoc __ret_0_approve;
[L1391]              havoc guy_s177;
[L1392]              havoc wad_s177;
[L1393]              havoc dst_s194;
[L1394]              havoc wad_s194;
[L1395]              havoc __ret_0_transfer;
[L1396]              havoc src_s309;
[L1397]              havoc dst_s309;
[L1398]              havoc wad_s309;
[L1399]              havoc __ret_0_transferFrom;
[L1400]              havoc tmpNow;
[L1401]              havoc gas;
[L1402]              assume gas > 4000000 && gas <= 8000000;
[L1403]              tmpNow := now;
[L1404]              havoc now;
[L1405]              assume now > tmpNow;
[L1406]              assume msgsender_MSG != null;
[L1407]  COND FALSE  !(choice == 7)
[L1413]  COND FALSE  !(choice == 6)
[L1419]  COND FALSE  !(choice == 5)
[L1425]  COND FALSE  !(choice == 4)
[L1431]  COND FALSE  !(choice == 3)
[L1438]  COND TRUE   choice == 2
[L1439]              gas := gas - 21000;
[L1440]  COND TRUE   gas >= 0
[L1441]              assume wad_s194 >= 0 && wad_s194 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1442]              assume msgvalue_MSG == 0;
[L1443]  CALL        call __ret_0_transfer := transfer~address~uint256_SpaghettiToken(this, msgsender_MSG, msgvalue_MSG, dst_s194, wad_s194);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != dst_s194) && msgsender_MSG != dst_s194) && wad_s194 <= balanceOf_SpaghettiToken[this][msgsender_MSG]) && balanceOf_SpaghettiToken[this][dst_s194] + wad_s194 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && wad_s194 >= 0) && wad_s194 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_SpaghettiToken[this][dst_s194] >= 0) && balanceOf_SpaghettiToken[this][dst_s194] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_SpaghettiToken[this][msgsender_MSG] >= 0) && balanceOf_SpaghettiToken[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_SpaghettiToken0 := true;
[L3]                 call_transfer_SpaghettiToken0 := false;
[L3]                 revert := revert_hold;
[L180]               havoc __exception;
[L181]               revert := false;
[L182]   COND TRUE   __exception
[L183]               __tmp__Balance := Balance;
[L184]               __tmp__DType := DType;
[L185]               __tmp__Alloc := Alloc;
[L186]               __tmp__balance_ADDR := balance_ADDR;
[L187]               __tmp__M_Ref_int := M_Ref_int;
[L188]               __tmp__sum_balanceOf0 := sum_balanceOf0;
[L189]               __tmp__alloc_allowance_SpaghettiToken_lvl0 := alloc_allowance_SpaghettiToken_lvl0;
[L190]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L191]               __tmp__sum_allowance1 := sum_allowance1;
[L192]               __tmp__Length := Length;
[L193]               __tmp__now := now;
[L194]               __tmp__totalSupply_SpaghettiToken := totalSupply_SpaghettiToken;
[L195]               __tmp__balanceOf_SpaghettiToken := balanceOf_SpaghettiToken;
[L196]               __tmp__allowance_SpaghettiToken := allowance_SpaghettiToken;
[L197]               __tmp__symbol_SpaghettiToken := symbol_SpaghettiToken;
[L198]               __tmp__decimals_SpaghettiToken := decimals_SpaghettiToken;
[L199]               __tmp__name_SpaghettiToken := name_SpaghettiToken;
[L200]   CALL        call __ret_0_ := transfer~address~uint256_SpaghettiToken__fail(this, msgsender_MSG, msgvalue_MSG, dst_s194, wad_s194);
[L730]   CALL        call __var_3 := transferFrom~address~address~uint256_SpaghettiToken__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, dst_s194, wad_s194);
[L757]               __var_4 := -1 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L758]   COND FALSE  !(src_s309 != msgsender_MSG && __tmp__allowance_SpaghettiToken[this][src_s309][msgsender_MSG] != -1 % 115792089237316195423570985008687907853269984665640564039457584007913129639936)
[L775]   COND FALSE  !(!(__tmp__balanceOf_SpaghettiToken[this][src_s309] >= wad_s309))
[L779]   COND TRUE   __tmp__DType[this] == SpaghettiToken
[L780]   CALL        call __var_6 := sub~uint256~uint256_DSMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balanceOf_SpaghettiToken[this][src_s309], wad_s309);
[L666]               z_s45 := (x_s45 - y_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L667]   COND FALSE  !(!((x_s45 - y_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 <= x_s45))
[L780]   RET         call __var_6 := sub~uint256~uint256_DSMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balanceOf_SpaghettiToken[this][src_s309], wad_s309);
[L781]   COND TRUE   revert
[L730]   RET         call __var_3 := transferFrom~address~address~uint256_SpaghettiToken__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, dst_s194, wad_s194);
[L731]   COND TRUE   revert
[L200]   RET         call __ret_0_ := transfer~address~uint256_SpaghettiToken__fail(this, msgsender_MSG, msgvalue_MSG, dst_s194, wad_s194);
[L201]               assume revert || gas < 0;
[L1443]  RET         call __ret_0_transfer := transfer~address~uint256_SpaghettiToken(this, msgsender_MSG, msgvalue_MSG, dst_s194, wad_s194);
[L1466]  RET         call CorralChoice_SpaghettiToken(this);

Loop:
[L1466]        assume true;

[2020-11-24 16:12:04,271 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 16:12:04,271 INFO  L82        PathProgramCache]: Analyzing trace with hash -1602704174, now seen corresponding path program 1 times
[2020-11-24 16:12:04,272 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 16:12:04,280 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 16:12:04,300 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 16:12:04,300 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 16:12:04,300 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [5] imperfect sequences [] total 5
[2020-11-24 16:12:04,301 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 16:12:04,301 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 5 interpolants.
[2020-11-24 16:12:04,301 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=9, Invalid=11, Unknown=0, NotChecked=0, Total=20
[2020-11-24 16:12:04,301 INFO  L87              Difference]: Start difference. First operand 243 states and 258 transitions. cyclomatic complexity: 16 Second operand 5 states.
[2020-11-24 16:12:04,315 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 16:12:04,315 INFO  L93              Difference]: Finished difference Result 254 states and 263 transitions.
[2020-11-24 16:12:04,316 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-24 16:12:04,316 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 254 states and 263 transitions.
[2020-11-24 16:12:04,317 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 2
[2020-11-24 16:12:04,319 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 254 states to 254 states and 263 transitions.
[2020-11-24 16:12:04,319 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 148
[2020-11-24 16:12:04,319 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 148
[2020-11-24 16:12:04,319 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 254 states and 263 transitions.
[2020-11-24 16:12:04,319 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 16:12:04,319 INFO  L728         BuchiCegarLoop]: Abstraction has 254 states and 263 transitions.
[2020-11-24 16:12:04,320 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 254 states and 263 transitions.
[2020-11-24 16:12:04,323 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 254 to 243.
[2020-11-24 16:12:04,323 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 243 states.
[2020-11-24 16:12:04,325 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 243 states to 243 states and 252 transitions.
[2020-11-24 16:12:04,325 INFO  L751         BuchiCegarLoop]: Abstraction has 243 states and 252 transitions.
[2020-11-24 16:12:04,325 INFO  L631         BuchiCegarLoop]: Abstraction has 243 states and 252 transitions.
[2020-11-24 16:12:04,325 INFO  L445         BuchiCegarLoop]: ======== Iteration 7============
[2020-11-24 16:12:04,325 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 243 states and 252 transitions.
[2020-11-24 16:12:04,327 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 16:12:04,327 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 16:12:04,327 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 16:12:04,329 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 16:12:04,329 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L3]                 success_transfer_SpaghettiToken0 := false;
[L3]                 call_transfer_SpaghettiToken0 := false;
[L3]     CALL        call main();
[L3]                 havoc p1;
[L1461]              assume null == 0;
[L1462]  CALL        call this := FreshRefGenerator__success();
[L640]               havoc newRef;
[L641]               assume Alloc[newRef] == false;
[L642]               Alloc[newRef] := true;
[L643]               assume newRef != null;
[L1462]  RET         call this := FreshRefGenerator__success();
[L1463]              assume now >= 0;
[L1464]              assume DType[this] == SpaghettiToken;
[L1465]              assume !revert && gas >= 0;
[L1466]  CALL        call CorralChoice_SpaghettiToken(this);
[L1376]              havoc msgsender_MSG;
[L1377]              havoc msgvalue_MSG;
[L1378]              havoc choice;
[L1379]              havoc __ret_0_totalSupply;
[L1380]              havoc arg329_s0;
[L1381]              havoc __ret_0_balanceOf;
[L1382]              havoc arg330_s0;
[L1383]              havoc arg331_s0;
[L1384]              havoc __ret_0_allowance;
[L1385]              havoc __ret_0_symbol;
[L1386]              havoc __ret_0_decimals;
[L1387]              havoc __ret_0_name;
[L1388]              havoc chef_s113;
[L1389]              havoc guy_s149;
[L1390]              havoc __ret_0_approve;
[L1391]              havoc guy_s177;
[L1392]              havoc wad_s177;
[L1393]              havoc dst_s194;
[L1394]              havoc wad_s194;
[L1395]              havoc __ret_0_transfer;
[L1396]              havoc src_s309;
[L1397]              havoc dst_s309;
[L1398]              havoc wad_s309;
[L1399]              havoc __ret_0_transferFrom;
[L1400]              havoc tmpNow;
[L1401]              havoc gas;
[L1402]              assume gas > 4000000 && gas <= 8000000;
[L1403]              tmpNow := now;
[L1404]              havoc now;
[L1405]              assume now > tmpNow;
[L1406]              assume msgsender_MSG != null;
[L1407]  COND FALSE  !(choice == 7)
[L1413]  COND FALSE  !(choice == 6)
[L1419]  COND FALSE  !(choice == 5)
[L1425]  COND FALSE  !(choice == 4)
[L1431]  COND FALSE  !(choice == 3)
[L1438]  COND TRUE   choice == 2
[L1439]              gas := gas - 21000;
[L1440]  COND TRUE   gas >= 0
[L1441]              assume wad_s194 >= 0 && wad_s194 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1442]              assume msgvalue_MSG == 0;
[L1443]  CALL        call __ret_0_transfer := transfer~address~uint256_SpaghettiToken(this, msgsender_MSG, msgvalue_MSG, dst_s194, wad_s194);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != dst_s194) && msgsender_MSG != dst_s194) && wad_s194 <= balanceOf_SpaghettiToken[this][msgsender_MSG]) && balanceOf_SpaghettiToken[this][dst_s194] + wad_s194 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && wad_s194 >= 0) && wad_s194 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_SpaghettiToken[this][dst_s194] >= 0) && balanceOf_SpaghettiToken[this][dst_s194] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_SpaghettiToken[this][msgsender_MSG] >= 0) && balanceOf_SpaghettiToken[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_SpaghettiToken0 := true;
[L3]                 call_transfer_SpaghettiToken0 := false;
[L3]                 revert := revert_hold;
[L180]               havoc __exception;
[L181]               revert := false;
[L182]   COND TRUE   __exception
[L183]               __tmp__Balance := Balance;
[L184]               __tmp__DType := DType;
[L185]               __tmp__Alloc := Alloc;
[L186]               __tmp__balance_ADDR := balance_ADDR;
[L187]               __tmp__M_Ref_int := M_Ref_int;
[L188]               __tmp__sum_balanceOf0 := sum_balanceOf0;
[L189]               __tmp__alloc_allowance_SpaghettiToken_lvl0 := alloc_allowance_SpaghettiToken_lvl0;
[L190]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L191]               __tmp__sum_allowance1 := sum_allowance1;
[L192]               __tmp__Length := Length;
[L193]               __tmp__now := now;
[L194]               __tmp__totalSupply_SpaghettiToken := totalSupply_SpaghettiToken;
[L195]               __tmp__balanceOf_SpaghettiToken := balanceOf_SpaghettiToken;
[L196]               __tmp__allowance_SpaghettiToken := allowance_SpaghettiToken;
[L197]               __tmp__symbol_SpaghettiToken := symbol_SpaghettiToken;
[L198]               __tmp__decimals_SpaghettiToken := decimals_SpaghettiToken;
[L199]               __tmp__name_SpaghettiToken := name_SpaghettiToken;
[L200]   CALL        call __ret_0_ := transfer~address~uint256_SpaghettiToken__fail(this, msgsender_MSG, msgvalue_MSG, dst_s194, wad_s194);
[L730]   CALL        call __var_3 := transferFrom~address~address~uint256_SpaghettiToken__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, dst_s194, wad_s194);
[L757]               __var_4 := -1 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L758]   COND FALSE  !(src_s309 != msgsender_MSG && __tmp__allowance_SpaghettiToken[this][src_s309][msgsender_MSG] != -1 % 115792089237316195423570985008687907853269984665640564039457584007913129639936)
[L775]   COND FALSE  !(!(__tmp__balanceOf_SpaghettiToken[this][src_s309] >= wad_s309))
[L779]   COND TRUE   __tmp__DType[this] == SpaghettiToken
[L780]   CALL        call __var_6 := sub~uint256~uint256_DSMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balanceOf_SpaghettiToken[this][src_s309], wad_s309);
[L666]               z_s45 := (x_s45 - y_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L667]   COND TRUE   !((x_s45 - y_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 <= x_s45)
[L668]               revert := true;
[L780]   RET         call __var_6 := sub~uint256~uint256_DSMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balanceOf_SpaghettiToken[this][src_s309], wad_s309);
[L781]   COND TRUE   revert
[L730]   RET         call __var_3 := transferFrom~address~address~uint256_SpaghettiToken__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, dst_s194, wad_s194);
[L731]   COND TRUE   revert
[L200]   RET         call __ret_0_ := transfer~address~uint256_SpaghettiToken__fail(this, msgsender_MSG, msgvalue_MSG, dst_s194, wad_s194);
[L201]               assume revert || gas < 0;
[L1443]  RET         call __ret_0_transfer := transfer~address~uint256_SpaghettiToken(this, msgsender_MSG, msgvalue_MSG, dst_s194, wad_s194);
[L1466]  RET         call CorralChoice_SpaghettiToken(this);

Loop:
[L1466]        assume true;

[2020-11-24 16:12:04,332 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 16:12:04,332 INFO  L82        PathProgramCache]: Analyzing trace with hash -252130486, now seen corresponding path program 1 times
[2020-11-24 16:12:04,333 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 16:12:04,344 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 16:12:04,384 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 16:12:04,385 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 16:12:04,385 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [7] imperfect sequences [] total 7
[2020-11-24 16:12:04,385 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 16:12:04,385 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 7 interpolants.
[2020-11-24 16:12:04,385 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=11, Invalid=31, Unknown=0, NotChecked=0, Total=42
[2020-11-24 16:12:04,385 INFO  L87              Difference]: Start difference. First operand 243 states and 252 transitions. cyclomatic complexity: 10 Second operand 7 states.
[2020-11-24 16:12:04,418 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 16:12:04,418 INFO  L93              Difference]: Finished difference Result 249 states and 257 transitions.
[2020-11-24 16:12:04,419 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 7 states. 
[2020-11-24 16:12:04,419 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 249 states and 257 transitions.
[2020-11-24 16:12:04,420 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 16:12:04,421 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 249 states to 241 states and 249 transitions.
[2020-11-24 16:12:04,421 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 135
[2020-11-24 16:12:04,422 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 135
[2020-11-24 16:12:04,422 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 241 states and 249 transitions.
[2020-11-24 16:12:04,422 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 16:12:04,422 INFO  L728         BuchiCegarLoop]: Abstraction has 241 states and 249 transitions.
[2020-11-24 16:12:04,422 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 241 states and 249 transitions.
[2020-11-24 16:12:04,425 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 241 to 241.
[2020-11-24 16:12:04,425 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 241 states.
[2020-11-24 16:12:04,425 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 241 states to 241 states and 249 transitions.
[2020-11-24 16:12:04,425 INFO  L751         BuchiCegarLoop]: Abstraction has 241 states and 249 transitions.
[2020-11-24 16:12:04,426 INFO  L631         BuchiCegarLoop]: Abstraction has 241 states and 249 transitions.
[2020-11-24 16:12:04,426 INFO  L445         BuchiCegarLoop]: ======== Iteration 8============
[2020-11-24 16:12:04,426 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 241 states and 249 transitions.
[2020-11-24 16:12:04,427 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 16:12:04,427 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 16:12:04,427 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 16:12:04,428 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 16:12:04,428 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L3]                 success_transfer_SpaghettiToken0 := false;
[L3]                 call_transfer_SpaghettiToken0 := false;
[L3]     CALL        call main();
[L3]                 havoc p1;
[L1461]              assume null == 0;
[L1462]  CALL        call this := FreshRefGenerator__success();
[L640]               havoc newRef;
[L641]               assume Alloc[newRef] == false;
[L642]               Alloc[newRef] := true;
[L643]               assume newRef != null;
[L1462]  RET         call this := FreshRefGenerator__success();
[L1463]              assume now >= 0;
[L1464]              assume DType[this] == SpaghettiToken;
[L1465]              assume !revert && gas >= 0;
[L1466]  CALL        call CorralChoice_SpaghettiToken(this);
[L1376]              havoc msgsender_MSG;
[L1377]              havoc msgvalue_MSG;
[L1378]              havoc choice;
[L1379]              havoc __ret_0_totalSupply;
[L1380]              havoc arg329_s0;
[L1381]              havoc __ret_0_balanceOf;
[L1382]              havoc arg330_s0;
[L1383]              havoc arg331_s0;
[L1384]              havoc __ret_0_allowance;
[L1385]              havoc __ret_0_symbol;
[L1386]              havoc __ret_0_decimals;
[L1387]              havoc __ret_0_name;
[L1388]              havoc chef_s113;
[L1389]              havoc guy_s149;
[L1390]              havoc __ret_0_approve;
[L1391]              havoc guy_s177;
[L1392]              havoc wad_s177;
[L1393]              havoc dst_s194;
[L1394]              havoc wad_s194;
[L1395]              havoc __ret_0_transfer;
[L1396]              havoc src_s309;
[L1397]              havoc dst_s309;
[L1398]              havoc wad_s309;
[L1399]              havoc __ret_0_transferFrom;
[L1400]              havoc tmpNow;
[L1401]              havoc gas;
[L1402]              assume gas > 4000000 && gas <= 8000000;
[L1403]              tmpNow := now;
[L1404]              havoc now;
[L1405]              assume now > tmpNow;
[L1406]              assume msgsender_MSG != null;
[L1407]  COND FALSE  !(choice == 7)
[L1413]  COND FALSE  !(choice == 6)
[L1419]  COND FALSE  !(choice == 5)
[L1425]  COND FALSE  !(choice == 4)
[L1431]  COND FALSE  !(choice == 3)
[L1438]  COND TRUE   choice == 2
[L1439]              gas := gas - 21000;
[L1440]  COND TRUE   gas >= 0
[L1441]              assume wad_s194 >= 0 && wad_s194 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1442]              assume msgvalue_MSG == 0;
[L1443]  CALL        call __ret_0_transfer := transfer~address~uint256_SpaghettiToken(this, msgsender_MSG, msgvalue_MSG, dst_s194, wad_s194);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != dst_s194) && msgsender_MSG != dst_s194) && wad_s194 <= balanceOf_SpaghettiToken[this][msgsender_MSG]) && balanceOf_SpaghettiToken[this][dst_s194] + wad_s194 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && wad_s194 >= 0) && wad_s194 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_SpaghettiToken[this][dst_s194] >= 0) && balanceOf_SpaghettiToken[this][dst_s194] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_SpaghettiToken[this][msgsender_MSG] >= 0) && balanceOf_SpaghettiToken[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_SpaghettiToken0 := true;
[L3]                 call_transfer_SpaghettiToken0 := false;
[L3]                 revert := revert_hold;
[L180]               havoc __exception;
[L181]               revert := false;
[L182]   COND TRUE   __exception
[L183]               __tmp__Balance := Balance;
[L184]               __tmp__DType := DType;
[L185]               __tmp__Alloc := Alloc;
[L186]               __tmp__balance_ADDR := balance_ADDR;
[L187]               __tmp__M_Ref_int := M_Ref_int;
[L188]               __tmp__sum_balanceOf0 := sum_balanceOf0;
[L189]               __tmp__alloc_allowance_SpaghettiToken_lvl0 := alloc_allowance_SpaghettiToken_lvl0;
[L190]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L191]               __tmp__sum_allowance1 := sum_allowance1;
[L192]               __tmp__Length := Length;
[L193]               __tmp__now := now;
[L194]               __tmp__totalSupply_SpaghettiToken := totalSupply_SpaghettiToken;
[L195]               __tmp__balanceOf_SpaghettiToken := balanceOf_SpaghettiToken;
[L196]               __tmp__allowance_SpaghettiToken := allowance_SpaghettiToken;
[L197]               __tmp__symbol_SpaghettiToken := symbol_SpaghettiToken;
[L198]               __tmp__decimals_SpaghettiToken := decimals_SpaghettiToken;
[L199]               __tmp__name_SpaghettiToken := name_SpaghettiToken;
[L200]   CALL        call __ret_0_ := transfer~address~uint256_SpaghettiToken__fail(this, msgsender_MSG, msgvalue_MSG, dst_s194, wad_s194);
[L730]   CALL        call __var_3 := transferFrom~address~address~uint256_SpaghettiToken__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, dst_s194, wad_s194);
[L757]               __var_4 := -1 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L758]   COND FALSE  !(src_s309 != msgsender_MSG && __tmp__allowance_SpaghettiToken[this][src_s309][msgsender_MSG] != -1 % 115792089237316195423570985008687907853269984665640564039457584007913129639936)
[L775]   COND FALSE  !(!(__tmp__balanceOf_SpaghettiToken[this][src_s309] >= wad_s309))
[L779]   COND TRUE   __tmp__DType[this] == SpaghettiToken
[L780]   CALL        call __var_6 := sub~uint256~uint256_DSMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balanceOf_SpaghettiToken[this][src_s309], wad_s309);
[L666]               z_s45 := (x_s45 - y_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L667]   COND FALSE  !(!((x_s45 - y_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 <= x_s45))
[L780]   RET         call __var_6 := sub~uint256~uint256_DSMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balanceOf_SpaghettiToken[this][src_s309], wad_s309);
[L781]   COND FALSE  !(revert)
[L787]               __tmp__sum_balanceOf0[this] := __tmp__sum_balanceOf0[this] - __tmp__balanceOf_SpaghettiToken[this][src_s309];
[L788]               __tmp__balanceOf_SpaghettiToken[this][src_s309] := __var_6;
[L789]               __tmp__sum_balanceOf0[this] := __tmp__sum_balanceOf0[this] + __tmp__balanceOf_SpaghettiToken[this][src_s309];
[L790]               one_s309 := wad_s309 / 100 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L791]   COND TRUE   __tmp__DType[this] == SpaghettiToken
[L792]   CALL        call ninetynine_s309 := sub~uint256~uint256_DSMath__fail(this, msgsender_MSG, msgvalue_MSG, wad_s309, one_s309);
[L666]               z_s45 := (x_s45 - y_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L667]   COND FALSE  !(!((x_s45 - y_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 <= x_s45))
[L792]   RET         call ninetynine_s309 := sub~uint256~uint256_DSMath__fail(this, msgsender_MSG, msgvalue_MSG, wad_s309, one_s309);
[L793]   COND FALSE  !(revert)
[L799]               ninetynine_s309 := ninetynine_s309;
[L800]   COND TRUE   __tmp__DType[this] == SpaghettiToken
[L801]   CALL        call __var_7 := add~uint256~uint256_DSMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balanceOf_SpaghettiToken[this][dst_s309], ninetynine_s309);
[L648]               z_s23 := (x_s23 + y_s23) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L649]   COND TRUE   !((x_s23 + y_s23) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 >= x_s23)
[L650]               revert := true;
[L801]   RET         call __var_7 := add~uint256~uint256_DSMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balanceOf_SpaghettiToken[this][dst_s309], ninetynine_s309);
[L802]   COND TRUE   revert
[L730]   RET         call __var_3 := transferFrom~address~address~uint256_SpaghettiToken__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, dst_s194, wad_s194);
[L731]   COND TRUE   revert
[L200]   RET         call __ret_0_ := transfer~address~uint256_SpaghettiToken__fail(this, msgsender_MSG, msgvalue_MSG, dst_s194, wad_s194);
[L201]               assume revert || gas < 0;
[L1443]  RET         call __ret_0_transfer := transfer~address~uint256_SpaghettiToken(this, msgsender_MSG, msgvalue_MSG, dst_s194, wad_s194);
[L1466]  RET         call CorralChoice_SpaghettiToken(this);

Loop:
[L1466]        assume true;

[2020-11-24 16:12:04,430 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 16:12:04,430 INFO  L82        PathProgramCache]: Analyzing trace with hash 1015587644, now seen corresponding path program 1 times
[2020-11-24 16:12:04,430 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 16:12:04,446 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 16:12:04,569 INFO  L134       CoverageAnalysis]: Checked inductivity of 4 backedges. 3 proven. 0 refuted. 0 times theorem prover too weak. 1 trivial. 0 not checked.
[2020-11-24 16:12:04,569 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 16:12:04,569 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [12] imperfect sequences [] total 12
[2020-11-24 16:12:04,570 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 16:12:04,570 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 12 interpolants.
[2020-11-24 16:12:04,570 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=23, Invalid=109, Unknown=0, NotChecked=0, Total=132
[2020-11-24 16:12:04,570 INFO  L87              Difference]: Start difference. First operand 241 states and 249 transitions. cyclomatic complexity: 9 Second operand 12 states.
[2020-11-24 16:12:04,891 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 16:12:04,891 INFO  L93              Difference]: Finished difference Result 256 states and 263 transitions.
[2020-11-24 16:12:04,892 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 13 states. 
[2020-11-24 16:12:04,892 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 256 states and 263 transitions.
[2020-11-24 16:12:04,894 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 2
[2020-11-24 16:12:04,895 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 256 states to 245 states and 252 transitions.
[2020-11-24 16:12:04,895 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 139
[2020-11-24 16:12:04,895 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 139
[2020-11-24 16:12:04,895 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 245 states and 252 transitions.
[2020-11-24 16:12:04,896 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 16:12:04,896 INFO  L728         BuchiCegarLoop]: Abstraction has 245 states and 252 transitions.
[2020-11-24 16:12:04,896 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 245 states and 252 transitions.
[2020-11-24 16:12:04,899 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 245 to 236.
[2020-11-24 16:12:04,900 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 236 states.
[2020-11-24 16:12:04,900 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 236 states to 236 states and 243 transitions.
[2020-11-24 16:12:04,900 INFO  L751         BuchiCegarLoop]: Abstraction has 236 states and 243 transitions.
[2020-11-24 16:12:04,901 INFO  L631         BuchiCegarLoop]: Abstraction has 236 states and 243 transitions.
[2020-11-24 16:12:04,901 INFO  L445         BuchiCegarLoop]: ======== Iteration 9============
[2020-11-24 16:12:04,901 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 236 states and 243 transitions.
[2020-11-24 16:12:04,902 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 16:12:04,902 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 16:12:04,902 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 16:12:04,903 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 16:12:04,903 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L3]                 success_transfer_SpaghettiToken0 := false;
[L3]                 call_transfer_SpaghettiToken0 := false;
[L3]     CALL        call main();
[L3]                 havoc p1;
[L1461]              assume null == 0;
[L1462]  CALL        call this := FreshRefGenerator__success();
[L640]               havoc newRef;
[L641]               assume Alloc[newRef] == false;
[L642]               Alloc[newRef] := true;
[L643]               assume newRef != null;
[L1462]  RET         call this := FreshRefGenerator__success();
[L1463]              assume now >= 0;
[L1464]              assume DType[this] == SpaghettiToken;
[L1465]              assume !revert && gas >= 0;
[L1466]  CALL        call CorralChoice_SpaghettiToken(this);
[L1376]              havoc msgsender_MSG;
[L1377]              havoc msgvalue_MSG;
[L1378]              havoc choice;
[L1379]              havoc __ret_0_totalSupply;
[L1380]              havoc arg329_s0;
[L1381]              havoc __ret_0_balanceOf;
[L1382]              havoc arg330_s0;
[L1383]              havoc arg331_s0;
[L1384]              havoc __ret_0_allowance;
[L1385]              havoc __ret_0_symbol;
[L1386]              havoc __ret_0_decimals;
[L1387]              havoc __ret_0_name;
[L1388]              havoc chef_s113;
[L1389]              havoc guy_s149;
[L1390]              havoc __ret_0_approve;
[L1391]              havoc guy_s177;
[L1392]              havoc wad_s177;
[L1393]              havoc dst_s194;
[L1394]              havoc wad_s194;
[L1395]              havoc __ret_0_transfer;
[L1396]              havoc src_s309;
[L1397]              havoc dst_s309;
[L1398]              havoc wad_s309;
[L1399]              havoc __ret_0_transferFrom;
[L1400]              havoc tmpNow;
[L1401]              havoc gas;
[L1402]              assume gas > 4000000 && gas <= 8000000;
[L1403]              tmpNow := now;
[L1404]              havoc now;
[L1405]              assume now > tmpNow;
[L1406]              assume msgsender_MSG != null;
[L1407]  COND FALSE  !(choice == 7)
[L1413]  COND FALSE  !(choice == 6)
[L1419]  COND FALSE  !(choice == 5)
[L1425]  COND FALSE  !(choice == 4)
[L1431]  COND FALSE  !(choice == 3)
[L1438]  COND TRUE   choice == 2
[L1439]              gas := gas - 21000;
[L1440]  COND TRUE   gas >= 0
[L1441]              assume wad_s194 >= 0 && wad_s194 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1442]              assume msgvalue_MSG == 0;
[L1443]  CALL        call __ret_0_transfer := transfer~address~uint256_SpaghettiToken(this, msgsender_MSG, msgvalue_MSG, dst_s194, wad_s194);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != dst_s194) && msgsender_MSG != dst_s194) && wad_s194 <= balanceOf_SpaghettiToken[this][msgsender_MSG]) && balanceOf_SpaghettiToken[this][dst_s194] + wad_s194 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && wad_s194 >= 0) && wad_s194 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_SpaghettiToken[this][dst_s194] >= 0) && balanceOf_SpaghettiToken[this][dst_s194] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_SpaghettiToken[this][msgsender_MSG] >= 0) && balanceOf_SpaghettiToken[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_SpaghettiToken0 := true;
[L3]                 call_transfer_SpaghettiToken0 := false;
[L3]                 revert := revert_hold;
[L180]               havoc __exception;
[L181]               revert := false;
[L182]   COND TRUE   __exception
[L183]               __tmp__Balance := Balance;
[L184]               __tmp__DType := DType;
[L185]               __tmp__Alloc := Alloc;
[L186]               __tmp__balance_ADDR := balance_ADDR;
[L187]               __tmp__M_Ref_int := M_Ref_int;
[L188]               __tmp__sum_balanceOf0 := sum_balanceOf0;
[L189]               __tmp__alloc_allowance_SpaghettiToken_lvl0 := alloc_allowance_SpaghettiToken_lvl0;
[L190]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L191]               __tmp__sum_allowance1 := sum_allowance1;
[L192]               __tmp__Length := Length;
[L193]               __tmp__now := now;
[L194]               __tmp__totalSupply_SpaghettiToken := totalSupply_SpaghettiToken;
[L195]               __tmp__balanceOf_SpaghettiToken := balanceOf_SpaghettiToken;
[L196]               __tmp__allowance_SpaghettiToken := allowance_SpaghettiToken;
[L197]               __tmp__symbol_SpaghettiToken := symbol_SpaghettiToken;
[L198]               __tmp__decimals_SpaghettiToken := decimals_SpaghettiToken;
[L199]               __tmp__name_SpaghettiToken := name_SpaghettiToken;
[L200]   CALL        call __ret_0_ := transfer~address~uint256_SpaghettiToken__fail(this, msgsender_MSG, msgvalue_MSG, dst_s194, wad_s194);
[L730]   CALL        call __var_3 := transferFrom~address~address~uint256_SpaghettiToken__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, dst_s194, wad_s194);
[L757]               __var_4 := -1 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L758]   COND FALSE  !(src_s309 != msgsender_MSG && __tmp__allowance_SpaghettiToken[this][src_s309][msgsender_MSG] != -1 % 115792089237316195423570985008687907853269984665640564039457584007913129639936)
[L775]   COND FALSE  !(!(__tmp__balanceOf_SpaghettiToken[this][src_s309] >= wad_s309))
[L779]   COND TRUE   __tmp__DType[this] == SpaghettiToken
[L780]   CALL        call __var_6 := sub~uint256~uint256_DSMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balanceOf_SpaghettiToken[this][src_s309], wad_s309);
[L666]               z_s45 := (x_s45 - y_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L667]   COND FALSE  !(!((x_s45 - y_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 <= x_s45))
[L780]   RET         call __var_6 := sub~uint256~uint256_DSMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balanceOf_SpaghettiToken[this][src_s309], wad_s309);
[L781]   COND FALSE  !(revert)
[L787]               __tmp__sum_balanceOf0[this] := __tmp__sum_balanceOf0[this] - __tmp__balanceOf_SpaghettiToken[this][src_s309];
[L788]               __tmp__balanceOf_SpaghettiToken[this][src_s309] := __var_6;
[L789]               __tmp__sum_balanceOf0[this] := __tmp__sum_balanceOf0[this] + __tmp__balanceOf_SpaghettiToken[this][src_s309];
[L790]               one_s309 := wad_s309 / 100 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L791]   COND TRUE   __tmp__DType[this] == SpaghettiToken
[L792]   CALL        call ninetynine_s309 := sub~uint256~uint256_DSMath__fail(this, msgsender_MSG, msgvalue_MSG, wad_s309, one_s309);
[L666]               z_s45 := (x_s45 - y_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L667]   COND TRUE   !((x_s45 - y_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 <= x_s45)
[L668]               revert := true;
[L792]   RET         call ninetynine_s309 := sub~uint256~uint256_DSMath__fail(this, msgsender_MSG, msgvalue_MSG, wad_s309, one_s309);
[L793]   COND TRUE   revert
[L730]   RET         call __var_3 := transferFrom~address~address~uint256_SpaghettiToken__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, dst_s194, wad_s194);
[L731]   COND TRUE   revert
[L200]   RET         call __ret_0_ := transfer~address~uint256_SpaghettiToken__fail(this, msgsender_MSG, msgvalue_MSG, dst_s194, wad_s194);
[L201]               assume revert || gas < 0;
[L1443]  RET         call __ret_0_transfer := transfer~address~uint256_SpaghettiToken(this, msgsender_MSG, msgvalue_MSG, dst_s194, wad_s194);
[L1466]  RET         call CorralChoice_SpaghettiToken(this);

Loop:
[L1466]        assume true;

[2020-11-24 16:12:04,905 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 16:12:04,905 INFO  L82        PathProgramCache]: Analyzing trace with hash 762458234, now seen corresponding path program 1 times
[2020-11-24 16:12:04,906 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 16:12:04,919 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 16:12:04,975 INFO  L134       CoverageAnalysis]: Checked inductivity of 4 backedges. 2 proven. 0 refuted. 0 times theorem prover too weak. 2 trivial. 0 not checked.
[2020-11-24 16:12:04,975 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 16:12:04,975 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [7] imperfect sequences [] total 7
[2020-11-24 16:12:04,976 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 16:12:04,976 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 7 interpolants.
[2020-11-24 16:12:04,976 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=11, Invalid=31, Unknown=0, NotChecked=0, Total=42
[2020-11-24 16:12:04,976 INFO  L87              Difference]: Start difference. First operand 236 states and 243 transitions. cyclomatic complexity: 8 Second operand 7 states.
[2020-11-24 16:12:05,013 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 16:12:05,013 INFO  L93              Difference]: Finished difference Result 242 states and 248 transitions.
[2020-11-24 16:12:05,013 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 7 states. 
[2020-11-24 16:12:05,013 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 242 states and 248 transitions.
[2020-11-24 16:12:05,015 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 16:12:05,016 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 242 states to 234 states and 240 transitions.
[2020-11-24 16:12:05,016 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 128
[2020-11-24 16:12:05,016 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 128
[2020-11-24 16:12:05,016 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 234 states and 240 transitions.
[2020-11-24 16:12:05,017 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 16:12:05,017 INFO  L728         BuchiCegarLoop]: Abstraction has 234 states and 240 transitions.
[2020-11-24 16:12:05,017 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 234 states and 240 transitions.
[2020-11-24 16:12:05,020 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 234 to 234.
[2020-11-24 16:12:05,020 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 234 states.
[2020-11-24 16:12:05,021 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 234 states to 234 states and 240 transitions.
[2020-11-24 16:12:05,021 INFO  L751         BuchiCegarLoop]: Abstraction has 234 states and 240 transitions.
[2020-11-24 16:12:05,021 INFO  L631         BuchiCegarLoop]: Abstraction has 234 states and 240 transitions.
[2020-11-24 16:12:05,021 INFO  L445         BuchiCegarLoop]: ======== Iteration 10============
[2020-11-24 16:12:05,021 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 234 states and 240 transitions.
[2020-11-24 16:12:05,022 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 16:12:05,022 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 16:12:05,022 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 16:12:05,023 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 16:12:05,023 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L3]                 success_transfer_SpaghettiToken0 := false;
[L3]                 call_transfer_SpaghettiToken0 := false;
[L3]     CALL        call main();
[L3]                 havoc p1;
[L1461]              assume null == 0;
[L1462]  CALL        call this := FreshRefGenerator__success();
[L640]               havoc newRef;
[L641]               assume Alloc[newRef] == false;
[L642]               Alloc[newRef] := true;
[L643]               assume newRef != null;
[L1462]  RET         call this := FreshRefGenerator__success();
[L1463]              assume now >= 0;
[L1464]              assume DType[this] == SpaghettiToken;
[L1465]              assume !revert && gas >= 0;
[L1466]  CALL        call CorralChoice_SpaghettiToken(this);
[L1376]              havoc msgsender_MSG;
[L1377]              havoc msgvalue_MSG;
[L1378]              havoc choice;
[L1379]              havoc __ret_0_totalSupply;
[L1380]              havoc arg329_s0;
[L1381]              havoc __ret_0_balanceOf;
[L1382]              havoc arg330_s0;
[L1383]              havoc arg331_s0;
[L1384]              havoc __ret_0_allowance;
[L1385]              havoc __ret_0_symbol;
[L1386]              havoc __ret_0_decimals;
[L1387]              havoc __ret_0_name;
[L1388]              havoc chef_s113;
[L1389]              havoc guy_s149;
[L1390]              havoc __ret_0_approve;
[L1391]              havoc guy_s177;
[L1392]              havoc wad_s177;
[L1393]              havoc dst_s194;
[L1394]              havoc wad_s194;
[L1395]              havoc __ret_0_transfer;
[L1396]              havoc src_s309;
[L1397]              havoc dst_s309;
[L1398]              havoc wad_s309;
[L1399]              havoc __ret_0_transferFrom;
[L1400]              havoc tmpNow;
[L1401]              havoc gas;
[L1402]              assume gas > 4000000 && gas <= 8000000;
[L1403]              tmpNow := now;
[L1404]              havoc now;
[L1405]              assume now > tmpNow;
[L1406]              assume msgsender_MSG != null;
[L1407]  COND FALSE  !(choice == 7)
[L1413]  COND FALSE  !(choice == 6)
[L1419]  COND FALSE  !(choice == 5)
[L1425]  COND FALSE  !(choice == 4)
[L1431]  COND FALSE  !(choice == 3)
[L1438]  COND TRUE   choice == 2
[L1439]              gas := gas - 21000;
[L1440]  COND TRUE   gas >= 0
[L1441]              assume wad_s194 >= 0 && wad_s194 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1442]              assume msgvalue_MSG == 0;
[L1443]  CALL        call __ret_0_transfer := transfer~address~uint256_SpaghettiToken(this, msgsender_MSG, msgvalue_MSG, dst_s194, wad_s194);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != dst_s194) && msgsender_MSG != dst_s194) && wad_s194 <= balanceOf_SpaghettiToken[this][msgsender_MSG]) && balanceOf_SpaghettiToken[this][dst_s194] + wad_s194 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && wad_s194 >= 0) && wad_s194 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_SpaghettiToken[this][dst_s194] >= 0) && balanceOf_SpaghettiToken[this][dst_s194] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_SpaghettiToken[this][msgsender_MSG] >= 0) && balanceOf_SpaghettiToken[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_SpaghettiToken0 := true;
[L3]                 call_transfer_SpaghettiToken0 := false;
[L3]                 revert := revert_hold;
[L180]               havoc __exception;
[L181]               revert := false;
[L182]   COND FALSE  !(__exception)
[L203]   CALL        call __ret_0_ := transfer~address~uint256_SpaghettiToken__success(this, msgsender_MSG, msgvalue_MSG, dst_s194, wad_s194);
[L741]   CALL        call __var_3 := transferFrom~address~address~uint256_SpaghettiToken__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, dst_s194, wad_s194);
[L827]               __var_4 := -1 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L828]   COND FALSE  !(src_s309 != msgsender_MSG && allowance_SpaghettiToken[this][src_s309][msgsender_MSG] != -1 % 115792089237316195423570985008687907853269984665640564039457584007913129639936)
[L845]   COND FALSE  !(!(balanceOf_SpaghettiToken[this][src_s309] >= wad_s309))
[L849]   COND TRUE   DType[this] == SpaghettiToken
[L850]   CALL        call __var_6 := sub~uint256~uint256_DSMath__success(this, msgsender_MSG, msgvalue_MSG, balanceOf_SpaghettiToken[this][src_s309], wad_s309);
[L675]               z_s45 := (x_s45 - y_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L676]   COND FALSE  !(!((x_s45 - y_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 <= x_s45))
[L850]   RET         call __var_6 := sub~uint256~uint256_DSMath__success(this, msgsender_MSG, msgvalue_MSG, balanceOf_SpaghettiToken[this][src_s309], wad_s309);
[L851]   COND FALSE  !(revert)
[L857]               sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_SpaghettiToken[this][src_s309];
[L858]               balanceOf_SpaghettiToken[this][src_s309] := __var_6;
[L859]               sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_SpaghettiToken[this][src_s309];
[L860]               one_s309 := wad_s309 / 100 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L861]   COND TRUE   DType[this] == SpaghettiToken
[L862]   CALL        call ninetynine_s309 := sub~uint256~uint256_DSMath__success(this, msgsender_MSG, msgvalue_MSG, wad_s309, one_s309);
[L675]               z_s45 := (x_s45 - y_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L676]   COND FALSE  !(!((x_s45 - y_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 <= x_s45))
[L862]   RET         call ninetynine_s309 := sub~uint256~uint256_DSMath__success(this, msgsender_MSG, msgvalue_MSG, wad_s309, one_s309);
[L863]   COND FALSE  !(revert)
[L869]               ninetynine_s309 := ninetynine_s309;
[L870]   COND TRUE   DType[this] == SpaghettiToken
[L871]   CALL        call __var_7 := add~uint256~uint256_DSMath__success(this, msgsender_MSG, msgvalue_MSG, balanceOf_SpaghettiToken[this][dst_s309], ninetynine_s309);
[L657]               z_s23 := (x_s23 + y_s23) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L658]   COND FALSE  !(!((x_s23 + y_s23) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 >= x_s23))
[L871]   RET         call __var_7 := add~uint256~uint256_DSMath__success(this, msgsender_MSG, msgvalue_MSG, balanceOf_SpaghettiToken[this][dst_s309], ninetynine_s309);
[L872]   COND FALSE  !(revert)
[L878]               sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_SpaghettiToken[this][dst_s309];
[L879]               balanceOf_SpaghettiToken[this][dst_s309] := __var_7;
[L880]               sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_SpaghettiToken[this][dst_s309];
[L881]   CALL        call burn~uint256_SpaghettiToken__success(this, msgsender_MSG, msgvalue_MSG, one_s309);
[L907]   COND TRUE   DType[this] == SpaghettiToken
[L908]   CALL        call __var_8 := sub~uint256~uint256_DSMath__success(this, msgsender_MSG, msgvalue_MSG, totalSupply_SpaghettiToken[this], wad_s326);
[L675]               z_s45 := (x_s45 - y_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L676]   COND FALSE  !(!((x_s45 - y_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 <= x_s45))
[L908]   RET         call __var_8 := sub~uint256~uint256_DSMath__success(this, msgsender_MSG, msgvalue_MSG, totalSupply_SpaghettiToken[this], wad_s326);
[L909]   COND FALSE  !(revert)
[L915]               totalSupply_SpaghettiToken[this] := __var_8;
[L916]               assert { :EventEmitted "Burn_SpaghettiToken" } true;
[L881]   RET         call burn~uint256_SpaghettiToken__success(this, msgsender_MSG, msgvalue_MSG, one_s309);
[L882]   COND FALSE  !(revert)
[L885]               assert { :EventEmitted "Transfer_SpaghettiToken" } true;
[L886]               __ret_0_ := true;
[L741]   RET         call __var_3 := transferFrom~address~address~uint256_SpaghettiToken__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, dst_s194, wad_s194);
[L742]   COND FALSE  !(revert)
[L745]               __ret_0_ := __var_3;
[L203]   RET         call __ret_0_ := transfer~address~uint256_SpaghettiToken__success(this, msgsender_MSG, msgvalue_MSG, dst_s194, wad_s194);
[L204]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !((((((((__ret_0_ == true && balanceOf_SpaghettiToken[this][msgsender_MSG] == old(balanceOf_SpaghettiToken[this][msgsender_MSG]) - wad_s194) && balanceOf_SpaghettiToken[this][dst_s194] == old(balanceOf_SpaghettiToken[this][dst_s194]) + wad_s194) && totalSupply_SpaghettiToken[this] == old(totalSupply_SpaghettiToken[this])) && allowance_SpaghettiToken[this] == old(allowance_SpaghettiToken[this])) && balanceOf_SpaghettiToken[this][p1] == old(balanceOf_SpaghettiToken[this][p1])) && symbol_SpaghettiToken[this] == old(symbol_SpaghettiToken[this])) && decimals_SpaghettiToken[this] == old(decimals_SpaghettiToken[this])) && name_SpaghettiToken[this] == old(name_SpaghettiToken[this]));
[L3]                 revert := revert_hold;
[L1443]  RET         call __ret_0_transfer := transfer~address~uint256_SpaghettiToken(this, msgsender_MSG, msgvalue_MSG, dst_s194, wad_s194);
[L1466]  RET         call CorralChoice_SpaghettiToken(this);

Loop:
[L1466]        assume true;

[2020-11-24 16:12:05,026 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 16:12:05,026 INFO  L82        PathProgramCache]: Analyzing trace with hash 1322152820, now seen corresponding path program 1 times
[2020-11-24 16:12:05,027 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 16:12:05,083 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 16:12:05,119 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 16:12:05,168 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 16:12:05,168 INFO  L82        PathProgramCache]: Analyzing trace with hash 5282, now seen corresponding path program 1 times
[2020-11-24 16:12:05,169 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 16:12:05,169 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 16:12:05,170 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 16:12:05,171 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 16:12:05,171 INFO  L82        PathProgramCache]: Analyzing trace with hash -1962930289, now seen corresponding path program 1 times
[2020-11-24 16:12:05,171 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 16:12:05,200 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 16:12:05,232 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #4: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #4: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
[2020-11-24 16:12:05,900 WARN  L188               SmtUtils]: Spent 508.00 ms on a formula simplification. DAG size of input: 170 DAG size of output: 164
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #5: 317 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 317 to 631
[2020-11-24 16:12:06,073 WARN  L188               SmtUtils]: Spent 153.00 ms on a formula simplification. DAG size of input: 80 DAG size of output: 79
[2020-11-24 16:12:06,260 WARN  L188               SmtUtils]: Spent 186.00 ms on a formula simplification. DAG size of input: 123 DAG size of output: 111
Garbage collection #1: 41 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 41 to 79
Garbage collection #2: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #3: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #4: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
[2020-11-24 16:12:06,461 WARN  L188               SmtUtils]: Spent 141.00 ms on a formula simplification. DAG size of input: 108 DAG size of output: 103
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #5: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
[2020-11-24 16:12:06,613 WARN  L188               SmtUtils]: Spent 119.00 ms on a formula simplification. DAG size of input: 108 DAG size of output: 103
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 277 to 547
Garbage collection #5: 547 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 547 to 1093
[2020-11-24 16:12:06,960 WARN  L188               SmtUtils]: Spent 297.00 ms on a formula simplification. DAG size of input: 175 DAG size of output: 161
Garbage collection #1: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #2: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #3: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #4: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #5: 787 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 787 to 1571
Garbage collection #6: 1571 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 1571 to 3137
Garbage collection #1: 41 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 41 to 79
Garbage collection #2: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #3: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #4: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #5: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #6: 1237 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1237 to 2473
Garbage collection #7: 2473 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 2473 to 4943
[2020-11-24 16:12:07,684 WARN  L188               SmtUtils]: Spent 698.00 ms on a formula simplification. DAG size of input: 122 DAG size of output: 115
[2020-11-24 16:12:08,278 WARN  L188               SmtUtils]: Spent 592.00 ms on a formula simplification. DAG size of input: 254 DAG size of output: 225
Garbage collection #1: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #2: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #3: 317 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 317 to 631
Garbage collection #4: 631 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 631 to 1259
Garbage collection #5: 1259 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1259 to 2503
[2020-11-24 16:12:08,515 WARN  L188               SmtUtils]: Spent 234.00 ms on a formula simplification that was a NOOP. DAG size: 207
[2020-11-24 16:12:08,998 WARN  L188               SmtUtils]: Spent 481.00 ms on a formula simplification. DAG size of input: 244 DAG size of output: 226
Garbage collection #1: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #2: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #3: 317 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 317 to 631
Garbage collection #4: 631 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 631 to 1259
Garbage collection #5: 1259 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1259 to 2503
Garbage collection #6: 2503 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 2503 to 5003
Garbage collection #1: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #2: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #3: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #4: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #5: 787 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 787 to 1571
[2020-11-24 16:12:09,359 WARN  L188               SmtUtils]: Spent 275.00 ms on a formula simplification that was a NOOP. DAG size: 272
Garbage collection #1: 107 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 107 to 211
Garbage collection #2: 211 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 211 to 421
Garbage collection #3: 421 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 421 to 839
Garbage collection #4: 839 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 839 to 1669
Garbage collection #5: 1669 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 1669 to 3331
Garbage collection #6: 3331 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 3331 to 6661
[2020-11-24 16:12:09,507 WARN  L188               SmtUtils]: Spent 143.00 ms on a formula simplification that was a NOOP. DAG size: 216
[2020-11-24 16:12:09,899 WARN  L188               SmtUtils]: Spent 390.00 ms on a formula simplification. DAG size of input: 235 DAG size of output: 233
Garbage collection #1: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #2: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #3: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #4: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #5: 1327 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1327 to 2647
Garbage collection #6: 2647 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2647 to 5281
Garbage collection #1: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #2: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #3: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #4: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #5: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
[2020-11-24 16:12:10,012 WARN  L188               SmtUtils]: Spent 106.00 ms on a formula simplification that was a NOOP. DAG size: 161
[2020-11-24 16:12:10,200 WARN  L188               SmtUtils]: Spent 177.00 ms on a formula simplification that was a NOOP. DAG size: 224
Garbage collection #1: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #2: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #3: 317 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 317 to 631
Garbage collection #4: 631 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 631 to 1259
Garbage collection #5: 1259 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1259 to 2503
Garbage collection #6: 2503 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2503 to 5003
Garbage collection #1: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #2: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #3: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #4: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #5: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
[2020-11-24 16:12:10,315 WARN  L188               SmtUtils]: Spent 110.00 ms on a formula simplification that was a NOOP. DAG size: 161
[2020-11-24 16:12:10,656 WARN  L188               SmtUtils]: Spent 340.00 ms on a formula simplification. DAG size of input: 226 DAG size of output: 225
Garbage collection #1: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #2: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #3: 317 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 317 to 631
Garbage collection #4: 631 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 631 to 1259
Garbage collection #5: 1259 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1259 to 2503
Garbage collection #6: 2503 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2503 to 5003
Garbage collection #1: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #2: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #3: 317 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 317 to 631
Garbage collection #4: 631 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 631 to 1259
Garbage collection #5: 1259 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1259 to 2503
Garbage collection #6: 2503 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2503 to 5003
[2020-11-24 16:12:10,808 WARN  L188               SmtUtils]: Spent 149.00 ms on a formula simplification that was a NOOP. DAG size: 221
[2020-11-24 16:12:10,825 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 16:12:10,830 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 24.11 04:12:10 BasicIcfg
[2020-11-24 16:12:10,830 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-24 16:12:10,830 INFO  L168              Benchmark]: Toolchain (without parser) took 9012.50 ms. Allocated memory was 1.0 GB in the beginning and 1.7 GB in the end (delta: 630.7 MB). Free memory was 940.6 MB in the beginning and 1.1 GB in the end (delta: -115.9 MB). Peak memory consumption was 743.3 MB. Max. memory is 15.3 GB.
[2020-11-24 16:12:10,830 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.16 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-24 16:12:10,831 INFO  L168              Benchmark]: Boogie Preprocessor took 74.57 ms. Allocated memory is still 1.0 GB. Free memory is still 940.6 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-24 16:12:10,831 INFO  L168              Benchmark]: UtopiaSpecLang took 51.44 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 935.2 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-24 16:12:10,831 INFO  L168              Benchmark]: Boogie Printer took 9.40 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 929.8 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-24 16:12:10,831 INFO  L168              Benchmark]: RCFGBuilder took 502.91 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 892.3 MB in the end (delta: 37.6 MB). Peak memory consumption was 37.6 MB. Max. memory is 15.3 GB.
[2020-11-24 16:12:10,831 INFO  L168              Benchmark]: UtopiaLTL2Aut took 38.40 ms. Allocated memory is still 1.0 GB. Free memory was 892.3 MB in the beginning and 883.3 MB in the end (delta: 8.9 MB). Peak memory consumption was 8.9 MB. Max. memory is 15.3 GB.
[2020-11-24 16:12:10,832 INFO  L168              Benchmark]: BÃ¼chi Program Product took 865.17 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 65.5 MB). Free memory was 883.3 MB in the beginning and 1.0 GB in the end (delta: -127.2 MB). Peak memory consumption was 165.1 MB. Max. memory is 15.3 GB.
[2020-11-24 16:12:10,832 INFO  L168              Benchmark]: BlockEncodingV2 took 77.53 ms. Allocated memory is still 1.1 GB. Free memory was 1.0 GB in the beginning and 983.6 MB in the end (delta: 26.9 MB). Peak memory consumption was 26.9 MB. Max. memory is 15.3 GB.
[2020-11-24 16:12:10,832 INFO  L168              Benchmark]: BuchiAutomizer took 7390.15 ms. Allocated memory was 1.1 GB in the beginning and 1.7 GB in the end (delta: 565.2 MB). Free memory was 983.6 MB in the beginning and 1.1 GB in the end (delta: -72.9 MB). Peak memory consumption was 720.8 MB. Max. memory is 15.3 GB.
[2020-11-24 16:12:10,835 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    1252 locations, 2156 edges
  - StatisticsResult: Encoded RCFG
    1214 locations, 2053 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.16 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 74.57 ms. Allocated memory is still 1.0 GB. Free memory is still 940.6 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 51.44 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 935.2 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 9.40 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 929.8 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * RCFGBuilder took 502.91 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 892.3 MB in the end (delta: 37.6 MB). Peak memory consumption was 37.6 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 38.40 ms. Allocated memory is still 1.0 GB. Free memory was 892.3 MB in the beginning and 883.3 MB in the end (delta: 8.9 MB). Peak memory consumption was 8.9 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 865.17 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 65.5 MB). Free memory was 883.3 MB in the beginning and 1.0 GB in the end (delta: -127.2 MB). Peak memory consumption was 165.1 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 77.53 ms. Allocated memory is still 1.1 GB. Free memory was 1.0 GB in the beginning and 983.6 MB in the end (delta: 26.9 MB). Peak memory consumption was 26.9 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 7390.15 ms. Allocated memory was 1.1 GB in the beginning and 1.7 GB in the end (delta: 565.2 MB). Free memory was 983.6 MB in the beginning and 1.1 GB in the end (delta: -72.9 MB). Peak memory consumption was 720.8 MB. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    528 locations, 669 edges
  - StatisticsResult: BuchiProgram size
    1252 locations, 2156 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 9 terminating modules (9 trivial, 0 deterministic, 0 nondeterministic) and one nonterminating remainder module.9 modules have a trivial ranking function, the largest among these consists of 12 locations. The remainder module has 234 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 7.3s and 10 iterations.  TraceHistogramMax:3. Analysis of lassos took 6.3s. Construction of modules took 0.4s. BÃ¼chi inclusion checks took 0.3s. Highest rank in rank-based complementation 0. Minimization of det autom 9. Minimization of nondet autom 0. Automata minimization 0.0s AutomataMinimizationTime, 9 MinimizatonAttempts, 48 StatesRemovedByMinimization, 4 NontrivialMinimizations. Non-live state removal took 0.0s Buchi closure took 0.0s. Biggest automaton had 256 states and ocurred in iteration 3.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 2795 SDtfs, 1542 SDslu, 4735 SDs, 0 SdLazy, 1725 SolverSat, 547 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 0.4s Time	LassoAnalysisResults: nont1 unkn0 SFLI0 SFLT0 conc0 concLT0 SILN0 SILU9 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - TransactionCounterexample: Violation of LTL property LTL
    Found an infinite, lasso-shaped execution that violates the LTL property LTL.
Stem:
SpaghettiToken(115792089237316195423570985008687907853269984665640564039457584007913129639940).transfer~address~uint256.gas(3979001)({from : 115792089237316195423570985008687907853269984665640564039457584007913129639936, dst : 115792089237316195423570985008687907853269984665640564039457584007913129639941, wad : 100});
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != dst_s194) && msgsender_MSG != dst_s194) && wad_s194 <= balanceOf_SpaghettiToken[this][msgsender_MSG]) && balanceOf_SpaghettiToken[this][dst_s194] + wad_s194 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && wad_s194 >= 0) && wad_s194 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_SpaghettiToken[this][dst_s194] >= 0) && balanceOf_SpaghettiToken[this][dst_s194] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_SpaghettiToken[this][msgsender_MSG] >= 0) && balanceOf_SpaghettiToken[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_SpaghettiToken0 := true;
[L3]                 call_transfer_SpaghettiToken0 := false;
[L3]                 revert := revert_hold;
[L180]               havoc __exception;
[L181]               revert := false;
[L182]   COND FALSE  !(__exception)
[L203]   CALL        call __ret_0_ := transfer~address~uint256_SpaghettiToken__success(this, msgsender_MSG, msgvalue_MSG, dst_s194, wad_s194);
[L741]   CALL        call __var_3 := transferFrom~address~address~uint256_SpaghettiToken__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, dst_s194, wad_s194);
[L827]               __var_4 := -1 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L828]   COND FALSE  !(src_s309 != msgsender_MSG && allowance_SpaghettiToken[this][src_s309][msgsender_MSG] != -1 % 115792089237316195423570985008687907853269984665640564039457584007913129639936)
[L845]   COND FALSE  !(!(balanceOf_SpaghettiToken[this][src_s309] >= wad_s309))
[L849]   COND TRUE   DType[this] == SpaghettiToken
[L850]   CALL        call __var_6 := sub~uint256~uint256_DSMath__success(this, msgsender_MSG, msgvalue_MSG, balanceOf_SpaghettiToken[this][src_s309], wad_s309);
[L675]               z_s45 := (x_s45 - y_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L676]   COND FALSE  !(!((x_s45 - y_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 <= x_s45))
[L850]   RET         call __var_6 := sub~uint256~uint256_DSMath__success(this, msgsender_MSG, msgvalue_MSG, balanceOf_SpaghettiToken[this][src_s309], wad_s309);
[L851]   COND FALSE  !(revert)
[L857]               sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_SpaghettiToken[this][src_s309];
[L858]               balanceOf_SpaghettiToken[this][src_s309] := __var_6;
[L859]               sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_SpaghettiToken[this][src_s309];
[L860]               one_s309 := wad_s309 / 100 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L861]   COND TRUE   DType[this] == SpaghettiToken
[L862]   CALL        call ninetynine_s309 := sub~uint256~uint256_DSMath__success(this, msgsender_MSG, msgvalue_MSG, wad_s309, one_s309);
[L675]               z_s45 := (x_s45 - y_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L676]   COND FALSE  !(!((x_s45 - y_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 <= x_s45))
[L862]   RET         call ninetynine_s309 := sub~uint256~uint256_DSMath__success(this, msgsender_MSG, msgvalue_MSG, wad_s309, one_s309);
[L863]   COND FALSE  !(revert)
[L869]               ninetynine_s309 := ninetynine_s309;
[L870]   COND TRUE   DType[this] == SpaghettiToken
[L871]   CALL        call __var_7 := add~uint256~uint256_DSMath__success(this, msgsender_MSG, msgvalue_MSG, balanceOf_SpaghettiToken[this][dst_s309], ninetynine_s309);
[L657]               z_s23 := (x_s23 + y_s23) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L658]   COND FALSE  !(!((x_s23 + y_s23) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 >= x_s23))
[L871]   RET         call __var_7 := add~uint256~uint256_DSMath__success(this, msgsender_MSG, msgvalue_MSG, balanceOf_SpaghettiToken[this][dst_s309], ninetynine_s309);
[L872]   COND FALSE  !(revert)
[L878]               sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_SpaghettiToken[this][dst_s309];
[L879]               balanceOf_SpaghettiToken[this][dst_s309] := __var_7;
[L880]               sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_SpaghettiToken[this][dst_s309];
[L881]   CALL        call burn~uint256_SpaghettiToken__success(this, msgsender_MSG, msgvalue_MSG, one_s309);
[L907]   COND TRUE   DType[this] == SpaghettiToken
[L908]   CALL        call __var_8 := sub~uint256~uint256_DSMath__success(this, msgsender_MSG, msgvalue_MSG, totalSupply_SpaghettiToken[this], wad_s326);
[L675]               z_s45 := (x_s45 - y_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L676]   COND FALSE  !(!((x_s45 - y_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 <= x_s45))
[L908]   RET         call __var_8 := sub~uint256~uint256_DSMath__success(this, msgsender_MSG, msgvalue_MSG, totalSupply_SpaghettiToken[this], wad_s326);
[L909]   COND FALSE  !(revert)
[L915]               totalSupply_SpaghettiToken[this] := __var_8;
[L916]               assert { :EventEmitted "Burn_SpaghettiToken" } true;
[L881]   RET         call burn~uint256_SpaghettiToken__success(this, msgsender_MSG, msgvalue_MSG, one_s309);
[L882]   COND FALSE  !(revert)
[L885]               assert { :EventEmitted "Transfer_SpaghettiToken" } true;
[L886]               __ret_0_ := true;
[L741]   RET         call __var_3 := transferFrom~address~address~uint256_SpaghettiToken__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, dst_s194, wad_s194);
[L742]   COND FALSE  !(revert)
[L745]               __ret_0_ := __var_3;
[L203]   RET         call __ret_0_ := transfer~address~uint256_SpaghettiToken__success(this, msgsender_MSG, msgvalue_MSG, dst_s194, wad_s194);
[L204]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !((((((((__ret_0_ == true && balanceOf_SpaghettiToken[this][msgsender_MSG] == old(balanceOf_SpaghettiToken[this][msgsender_MSG]) - wad_s194) && balanceOf_SpaghettiToken[this][dst_s194] == old(balanceOf_SpaghettiToken[this][dst_s194]) + wad_s194) && totalSupply_SpaghettiToken[this] == old(totalSupply_SpaghettiToken[this])) && allowance_SpaghettiToken[this] == old(allowance_SpaghettiToken[this])) && balanceOf_SpaghettiToken[this][p1] == old(balanceOf_SpaghettiToken[this][p1])) && symbol_SpaghettiToken[this] == old(symbol_SpaghettiToken[this])) && decimals_SpaghettiToken[this] == old(decimals_SpaghettiToken[this])) && name_SpaghettiToken[this] == old(name_SpaghettiToken[this]));
[L3]                 revert := revert_hold;
[L1443]  RET         call __ret_0_transfer := transfer~address~uint256_SpaghettiToken(this, msgsender_MSG, msgvalue_MSG, dst_s194, wad_s194);

Loop:

End of lasso representation.
RESULT: Ultimate could not prove your program: Toolchain returned no result.
Received shutdown request...
