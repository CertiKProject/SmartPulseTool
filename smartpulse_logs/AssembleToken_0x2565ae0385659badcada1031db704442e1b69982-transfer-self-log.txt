This is Ultimate 0.1.24-f1553f5-m
[2020-11-24 15:36:24,383 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-24 15:36:24,385 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-24 15:36:24,396 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-24 15:36:24,396 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-24 15:36:24,397 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-24 15:36:24,398 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-24 15:36:24,399 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-24 15:36:24,401 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-24 15:36:24,401 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-24 15:36:24,402 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-24 15:36:24,402 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-24 15:36:24,403 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-24 15:36:24,404 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-24 15:36:24,405 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-24 15:36:24,405 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-24 15:36:24,406 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-24 15:36:24,407 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-24 15:36:24,409 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-24 15:36:24,410 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-24 15:36:24,411 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-24 15:36:24,412 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-24 15:36:24,413 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-24 15:36:24,414 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-24 15:36:24,414 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-24 15:36:24,414 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-24 15:36:24,415 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-24 15:36:24,415 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-24 15:36:24,415 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-24 15:36:24,416 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-24 15:36:24,416 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-24 15:36:24,417 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-24 15:36:24,417 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-24 15:36:24,418 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-24 15:36:24,418 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-24 15:36:24,419 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-24 15:36:24,419 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-24 15:36:24,419 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-24 15:36:24,419 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-24 15:36:24,420 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-24 15:36:24,421 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-24 15:36:24,421 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-24 15:36:24,429 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-24 15:36:24,429 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-24 15:36:24,430 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-24 15:36:24,430 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-24 15:36:24,430 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-24 15:36:24,430 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-24 15:36:24,430 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-24 15:36:24,430 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-24 15:36:24,430 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-24 15:36:24,431 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-24 15:36:24,431 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-24 15:36:24,431 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-24 15:36:24,431 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-24 15:36:24,431 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-24 15:36:24,431 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-24 15:36:24,431 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-24 15:36:24,431 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-24 15:36:24,431 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-24 15:36:24,431 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-24 15:36:24,432 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-24 15:36:24,432 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-24 15:36:24,432 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-24 15:36:24,432 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-24 15:36:24,432 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-24 15:36:24,432 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-24 15:36:24,432 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-24 15:36:24,455 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-24 15:36:24,467 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-24 15:36:24,470 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-24 15:36:24,471 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-24 15:36:24,471 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-24 15:36:24,472 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/AssembleToken_0x2565ae0385659badcada1031db704442e1b69982_transfer-self.bpl
[2020-11-24 15:36:24,472 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/AssembleToken_0x2565ae0385659badcada1031db704442e1b69982_transfer-self.bpl'
[2020-11-24 15:36:24,539 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-24 15:36:24,540 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-24 15:36:24,541 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-24 15:36:24,541 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-24 15:36:24,541 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-24 15:36:24,559 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "AssembleToken_0x2565ae0385659badcada1031db704442e1b69982_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 03:36:24" (1/1) ...
[2020-11-24 15:36:24,560 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "AssembleToken_0x2565ae0385659badcada1031db704442e1b69982_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 03:36:24" (1/1) ...
[2020-11-24 15:36:24,589 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "AssembleToken_0x2565ae0385659badcada1031db704442e1b69982_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 03:36:24" (1/1) ...
[2020-11-24 15:36:24,589 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "AssembleToken_0x2565ae0385659badcada1031db704442e1b69982_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 03:36:24" (1/1) ...
[2020-11-24 15:36:24,609 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "AssembleToken_0x2565ae0385659badcada1031db704442e1b69982_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 03:36:24" (1/1) ...
[2020-11-24 15:36:24,615 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "AssembleToken_0x2565ae0385659badcada1031db704442e1b69982_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 03:36:24" (1/1) ...
[2020-11-24 15:36:24,621 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "AssembleToken_0x2565ae0385659badcada1031db704442e1b69982_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 03:36:24" (1/1) ...
[2020-11-24 15:36:24,628 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-24 15:36:24,629 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-24 15:36:24,629 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-24 15:36:24,632 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-24 15:36:24,635 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "AssembleToken_0x2565ae0385659badcada1031db704442e1b69982_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 03:36:24" (1/1) ...
[2020-11-24 15:36:24,661 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(AssembleToken.transfer(to, value), msg.sender == to && value <= balances_AssembleToken[this][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_AssembleToken[this][to] >= 0 && balances_AssembleToken[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_AssembleToken[this][msg.sender] >= 0 &&  balances_AssembleToken[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(AssembleToken.transfer(to, value), return == true && totalTokenSupply_AssembleToken[this] == old(totalTokenSupply_AssembleToken[this]) && balances_AssembleToken[this] == old(balances_AssembleToken[this]) && approvals_AssembleToken[this] == old(approvals_AssembleToken[this]) && name_AssembleToken[this] == old(name_AssembleToken[this]) && decimals_AssembleToken[this] == old(decimals_AssembleToken[this]) && symbol_AssembleToken[this] == old(symbol_AssembleToken[this]) && tokenIssuedSale_AssembleToken[this] == old(tokenIssuedSale_AssembleToken[this]) && tokenIssuedSP_AssembleToken[this] == old(tokenIssuedSP_AssembleToken[this]) && tokenIssuedEco_AssembleToken[this] == old(tokenIssuedEco_AssembleToken[this]) && tokenIssuedMkt_AssembleToken[this] == old(tokenIssuedMkt_AssembleToken[this]) && tokenIssuedDev_AssembleToken[this] == old(tokenIssuedDev_AssembleToken[this]) && tokenIssuedRsv_AssembleToken[this] == old(tokenIssuedRsv_AssembleToken[this]) && tokenIssuedTeam_AssembleToken[this] == old(tokenIssuedTeam_AssembleToken[this]) && tokenIssuedAdv_AssembleToken[this] == old(tokenIssuedAdv_AssembleToken[this]) && burnTokenSupply_AssembleToken[this] == old(burnTokenSupply_AssembleToken[this]) && tmVestingTimer_AssembleToken[this] == old(tmVestingTimer_AssembleToken[this]) && tmVestingBalances_AssembleToken[this] == old(tmVestingBalances_AssembleToken[this]) && advVestingTimer_AssembleToken[this] == old(advVestingTimer_AssembleToken[this]) && advVestingBalances_AssembleToken[this] == old(advVestingBalances_AssembleToken[this]) && tokenLock_AssembleToken[this] == old(tokenLock_AssembleToken[this]) && saleTime_AssembleToken[this] == old(saleTime_AssembleToken[this]) && endSaleTime_AssembleToken[this] == old(endSaleTime_AssembleToken[this]) && owner_OwnerHelper[this] == old(owner_OwnerHelper[this]))))
[2020-11-24 15:36:24,667 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(AssembleToken.transfer(to, value), msg.sender == to && value <= balances_AssembleToken[this][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_AssembleToken[this][to] >= 0 && balances_AssembleToken[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_AssembleToken[this][msg.sender] >= 0 &&  balances_AssembleToken[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(AssembleToken.transfer(to, value), return == true && totalTokenSupply_AssembleToken[this] == old(totalTokenSupply_AssembleToken[this]) && balances_AssembleToken[this] == old(balances_AssembleToken[this]) && approvals_AssembleToken[this] == old(approvals_AssembleToken[this]) && name_AssembleToken[this] == old(name_AssembleToken[this]) && decimals_AssembleToken[this] == old(decimals_AssembleToken[this]) && symbol_AssembleToken[this] == old(symbol_AssembleToken[this]) && tokenIssuedSale_AssembleToken[this] == old(tokenIssuedSale_AssembleToken[this]) && tokenIssuedSP_AssembleToken[this] == old(tokenIssuedSP_AssembleToken[this]) && tokenIssuedEco_AssembleToken[this] == old(tokenIssuedEco_AssembleToken[this]) && tokenIssuedMkt_AssembleToken[this] == old(tokenIssuedMkt_AssembleToken[this]) && tokenIssuedDev_AssembleToken[this] == old(tokenIssuedDev_AssembleToken[this]) && tokenIssuedRsv_AssembleToken[this] == old(tokenIssuedRsv_AssembleToken[this]) && tokenIssuedTeam_AssembleToken[this] == old(tokenIssuedTeam_AssembleToken[this]) && tokenIssuedAdv_AssembleToken[this] == old(tokenIssuedAdv_AssembleToken[this]) && burnTokenSupply_AssembleToken[this] == old(burnTokenSupply_AssembleToken[this]) && tmVestingTimer_AssembleToken[this] == old(tmVestingTimer_AssembleToken[this]) && tmVestingBalances_AssembleToken[this] == old(tmVestingBalances_AssembleToken[this]) && advVestingTimer_AssembleToken[this] == old(advVestingTimer_AssembleToken[this]) && advVestingBalances_AssembleToken[this] == old(advVestingBalances_AssembleToken[this]) && tokenLock_AssembleToken[this] == old(tokenLock_AssembleToken[this]) && saleTime_AssembleToken[this] == old(saleTime_AssembleToken[this]) && endSaleTime_AssembleToken[this] == old(endSaleTime_AssembleToken[this]) && owner_OwnerHelper[this] == old(owner_OwnerHelper[this]))))
[2020-11-24 15:36:24,676 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(AssembleToken.transfer(to, value), msg.sender == to && value <= balances_AssembleToken[this][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_AssembleToken[this][to] >= 0 && balances_AssembleToken[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_AssembleToken[this][msg.sender] >= 0 &&  balances_AssembleToken[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(AssembleToken.transfer(to, value), return == true && totalTokenSupply_AssembleToken[this] == old(totalTokenSupply_AssembleToken[this]) && balances_AssembleToken[this] == old(balances_AssembleToken[this]) && approvals_AssembleToken[this] == old(approvals_AssembleToken[this]) && name_AssembleToken[this] == old(name_AssembleToken[this]) && decimals_AssembleToken[this] == old(decimals_AssembleToken[this]) && symbol_AssembleToken[this] == old(symbol_AssembleToken[this]) && tokenIssuedSale_AssembleToken[this] == old(tokenIssuedSale_AssembleToken[this]) && tokenIssuedSP_AssembleToken[this] == old(tokenIssuedSP_AssembleToken[this]) && tokenIssuedEco_AssembleToken[this] == old(tokenIssuedEco_AssembleToken[this]) && tokenIssuedMkt_AssembleToken[this] == old(tokenIssuedMkt_AssembleToken[this]) && tokenIssuedDev_AssembleToken[this] == old(tokenIssuedDev_AssembleToken[this]) && tokenIssuedRsv_AssembleToken[this] == old(tokenIssuedRsv_AssembleToken[this]) && tokenIssuedTeam_AssembleToken[this] == old(tokenIssuedTeam_AssembleToken[this]) && tokenIssuedAdv_AssembleToken[this] == old(tokenIssuedAdv_AssembleToken[this]) && burnTokenSupply_AssembleToken[this] == old(burnTokenSupply_AssembleToken[this]) && tmVestingTimer_AssembleToken[this] == old(tmVestingTimer_AssembleToken[this]) && tmVestingBalances_AssembleToken[this] == old(tmVestingBalances_AssembleToken[this]) && advVestingTimer_AssembleToken[this] == old(advVestingTimer_AssembleToken[this]) && advVestingBalances_AssembleToken[this] == old(advVestingBalances_AssembleToken[this]) && tokenLock_AssembleToken[this] == old(tokenLock_AssembleToken[this]) && saleTime_AssembleToken[this] == old(saleTime_AssembleToken[this]) && endSaleTime_AssembleToken[this] == old(endSaleTime_AssembleToken[this]) && owner_OwnerHelper[this] == old(owner_OwnerHelper[this]))))
[2020-11-24 15:36:24,682 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( msg.sender==_to_s632 && _value_s632<=balances_AssembleToken[this][msg.sender] ) && _value_s632>=0 ) && _value_s632<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && balances_AssembleToken[this][_to_s632]>=0 ) && balances_AssembleToken[this][_to_s632]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && balances_AssembleToken[this][msg.sender]>=0 ) && balances_AssembleToken[this][msg.sender]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_AssembleToken>],IdentifierExpression[_to_s632,<IMPLEMENTATION_INPARAM,transfer~address~uint256_AssembleToken>]],BinaryExpression[COMPLEQ,IdentifierExpression[_value_s632,<IMPLEMENTATION_INPARAM,transfer~address~uint256_AssembleToken>],ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_AssembleToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_AssembleToken>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_AssembleToken>]]]]],BinaryExpression[COMPGEQ,IdentifierExpression[_value_s632,<IMPLEMENTATION_INPARAM,transfer~address~uint256_AssembleToken>],IntegerLiteral[0]]],BinaryExpression[COMPLT,IdentifierExpression[_value_s632,<IMPLEMENTATION_INPARAM,transfer~address~uint256_AssembleToken>],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_AssembleToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_AssembleToken>]]],[IdentifierExpression[_to_s632,<IMPLEMENTATION_INPARAM,transfer~address~uint256_AssembleToken>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_AssembleToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_AssembleToken>]]],[IdentifierExpression[_to_s632,<IMPLEMENTATION_INPARAM,transfer~address~uint256_AssembleToken>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_AssembleToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_AssembleToken>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_AssembleToken>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_AssembleToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_AssembleToken>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_AssembleToken>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]]
[2020-11-24 15:36:24,687 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( __ret_0_==true && totalTokenSupply_AssembleToken[this]==( old(totalTokenSupply_AssembleToken[this]) ) ) && balances_AssembleToken[this]==( old(balances_AssembleToken[this]) ) ) && approvals_AssembleToken[this]==( old(approvals_AssembleToken[this]) ) ) && name_AssembleToken[this]==( old(name_AssembleToken[this]) ) ) && decimals_AssembleToken[this]==( old(decimals_AssembleToken[this]) ) ) && symbol_AssembleToken[this]==( old(symbol_AssembleToken[this]) ) ) && tokenIssuedSale_AssembleToken[this]==( old(tokenIssuedSale_AssembleToken[this]) ) ) && tokenIssuedSP_AssembleToken[this]==( old(tokenIssuedSP_AssembleToken[this]) ) ) && tokenIssuedEco_AssembleToken[this]==( old(tokenIssuedEco_AssembleToken[this]) ) ) && tokenIssuedMkt_AssembleToken[this]==( old(tokenIssuedMkt_AssembleToken[this]) ) ) && tokenIssuedDev_AssembleToken[this]==( old(tokenIssuedDev_AssembleToken[this]) ) ) && tokenIssuedRsv_AssembleToken[this]==( old(tokenIssuedRsv_AssembleToken[this]) ) ) && tokenIssuedTeam_AssembleToken[this]==( old(tokenIssuedTeam_AssembleToken[this]) ) ) && tokenIssuedAdv_AssembleToken[this]==( old(tokenIssuedAdv_AssembleToken[this]) ) ) && burnTokenSupply_AssembleToken[this]==( old(burnTokenSupply_AssembleToken[this]) ) ) && tmVestingTimer_AssembleToken[this]==( old(tmVestingTimer_AssembleToken[this]) ) ) && tmVestingBalances_AssembleToken[this]==( old(tmVestingBalances_AssembleToken[this]) ) ) && advVestingTimer_AssembleToken[this]==( old(advVestingTimer_AssembleToken[this]) ) ) && advVestingBalances_AssembleToken[this]==( old(advVestingBalances_AssembleToken[this]) ) ) && tokenLock_AssembleToken[this]==( old(tokenLock_AssembleToken[this]) ) ) && saleTime_AssembleToken[this]==( old(saleTime_AssembleToken[this]) ) ) && endSaleTime_AssembleToken[this]==( old(endSaleTime_AssembleToken[this]) ) ) && owner_OwnerHelper[this]==( old(owner_OwnerHelper[this]) ) ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[__ret_0_,<IMPLEMENTATION_OUTPARAM,transfer~address~uint256_AssembleToken>],BooleanLiteral[true]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[totalTokenSupply_AssembleToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_AssembleToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[totalTokenSupply_AssembleToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_AssembleToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[balances_AssembleToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_AssembleToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[balances_AssembleToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_AssembleToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[approvals_AssembleToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_AssembleToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[approvals_AssembleToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_AssembleToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[name_AssembleToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_AssembleToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[name_AssembleToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_AssembleToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[decimals_AssembleToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_AssembleToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[decimals_AssembleToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_AssembleToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[symbol_AssembleToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_AssembleToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[symbol_AssembleToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_AssembleToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[tokenIssuedSale_AssembleToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_AssembleToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[tokenIssuedSale_AssembleToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_AssembleToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[tokenIssuedSP_AssembleToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_AssembleToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[tokenIssuedSP_AssembleToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_AssembleToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[tokenIssuedEco_AssembleToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_AssembleToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[tokenIssuedEco_AssembleToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_AssembleToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[tokenIssuedMkt_AssembleToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_AssembleToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[tokenIssuedMkt_AssembleToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_AssembleToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[tokenIssuedDev_AssembleToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_AssembleToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[tokenIssuedDev_AssembleToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_AssembleToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[tokenIssuedRsv_AssembleToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_AssembleToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[tokenIssuedRsv_AssembleToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_AssembleToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[tokenIssuedTeam_AssembleToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_AssembleToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[tokenIssuedTeam_AssembleToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_AssembleToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[tokenIssuedAdv_AssembleToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_AssembleToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[tokenIssuedAdv_AssembleToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_AssembleToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[burnTokenSupply_AssembleToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_AssembleToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[burnTokenSupply_AssembleToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_AssembleToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[tmVestingTimer_AssembleToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_AssembleToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[tmVestingTimer_AssembleToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_AssembleToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[tmVestingBalances_AssembleToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_AssembleToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[tmVestingBalances_AssembleToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_AssembleToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[advVestingTimer_AssembleToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_AssembleToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[advVestingTimer_AssembleToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_AssembleToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[advVestingBalances_AssembleToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_AssembleToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[advVestingBalances_AssembleToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_AssembleToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[tokenLock_AssembleToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_AssembleToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[tokenLock_AssembleToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_AssembleToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[saleTime_AssembleToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_AssembleToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[saleTime_AssembleToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_AssembleToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[endSaleTime_AssembleToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_AssembleToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[endSaleTime_AssembleToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_AssembleToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[owner_OwnerHelper,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_AssembleToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[owner_OwnerHelper,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_AssembleToken>]]]]]]
[2020-11-24 15:36:24,690 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(AssembleToken.transfer(to, value), msg.sender == to && value <= balances_AssembleToken[this][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_AssembleToken[this][to] >= 0 && balances_AssembleToken[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_AssembleToken[this][msg.sender] >= 0 &&  balances_AssembleToken[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(AssembleToken.transfer(to, value), return == true && totalTokenSupply_AssembleToken[this] == old(totalTokenSupply_AssembleToken[this]) && balances_AssembleToken[this] == old(balances_AssembleToken[this]) && approvals_AssembleToken[this] == old(approvals_AssembleToken[this]) && name_AssembleToken[this] == old(name_AssembleToken[this]) && decimals_AssembleToken[this] == old(decimals_AssembleToken[this]) && symbol_AssembleToken[this] == old(symbol_AssembleToken[this]) && tokenIssuedSale_AssembleToken[this] == old(tokenIssuedSale_AssembleToken[this]) && tokenIssuedSP_AssembleToken[this] == old(tokenIssuedSP_AssembleToken[this]) && tokenIssuedEco_AssembleToken[this] == old(tokenIssuedEco_AssembleToken[this]) && tokenIssuedMkt_AssembleToken[this] == old(tokenIssuedMkt_AssembleToken[this]) && tokenIssuedDev_AssembleToken[this] == old(tokenIssuedDev_AssembleToken[this]) && tokenIssuedRsv_AssembleToken[this] == old(tokenIssuedRsv_AssembleToken[this]) && tokenIssuedTeam_AssembleToken[this] == old(tokenIssuedTeam_AssembleToken[this]) && tokenIssuedAdv_AssembleToken[this] == old(tokenIssuedAdv_AssembleToken[this]) && burnTokenSupply_AssembleToken[this] == old(burnTokenSupply_AssembleToken[this]) && tmVestingTimer_AssembleToken[this] == old(tmVestingTimer_AssembleToken[this]) && tmVestingBalances_AssembleToken[this] == old(tmVestingBalances_AssembleToken[this]) && advVestingTimer_AssembleToken[this] == old(advVestingTimer_AssembleToken[this]) && advVestingBalances_AssembleToken[this] == old(advVestingBalances_AssembleToken[this]) && tokenLock_AssembleToken[this] == old(tokenLock_AssembleToken[this]) && saleTime_AssembleToken[this] == old(saleTime_AssembleToken[this]) && endSaleTime_AssembleToken[this] == old(endSaleTime_AssembleToken[this]) && owner_OwnerHelper[this] == old(owner_OwnerHelper[this]))))
[2020-11-24 15:36:24,690 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_transfer_AssembleToken0) ==> ( <>AP(success_transfer_AssembleToken0) ) ) )
Executed UtopiaSpecLang
[2020-11-24 15:36:24,697 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 03:36:24 PropertyContainer
[2020-11-24 15:36:24,697 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-24 15:36:24,698 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-24 15:36:24,698 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-24 15:36:24,698 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-24 15:36:24,699 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "AssembleToken_0x2565ae0385659badcada1031db704442e1b69982_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 03:36:24" (1/2) ...
[2020-11-24 15:36:24,699 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-24 15:36:24,699 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-24 15:36:24,709 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 03:36:24" (2/2) ...
[2020-11-24 15:36:24,709 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-24 15:36:24,710 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-24 15:36:24,710 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-24 15:36:24,710 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-24 15:36:24,711 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "AssembleToken_0x2565ae0385659badcada1031db704442e1b69982_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 03:36:24" (1/2) ...
[2020-11-24 15:36:24,769 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-24 15:36:24,770 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__success
[2020-11-24 15:36:24,770 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__success
[2020-11-24 15:36:24,770 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_AssembleToken
[2020-11-24 15:36:24,770 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_AssembleToken
[2020-11-24 15:36:24,770 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_AssembleToken
[2020-11-24 15:36:24,770 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_AssembleToken
[2020-11-24 15:36:24,770 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_AssembleToken
[2020-11-24 15:36:24,770 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_AssembleToken
[2020-11-24 15:36:24,770 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_AssembleToken
[2020-11-24 15:36:24,770 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_AssembleToken
[2020-11-24 15:36:24,771 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_AssembleToken
[2020-11-24 15:36:24,771 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_AssembleToken
[2020-11-24 15:36:24,771 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_AssembleToken
[2020-11-24 15:36:24,771 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_AssembleToken
[2020-11-24 15:36:24,771 INFO  L130     BoogieDeclarations]: Found specification of procedure isTransferable_AssembleToken__success
[2020-11-24 15:36:24,771 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-24 15:36:24,771 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-24 15:36:24,771 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-24 15:36:24,771 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__success
[2020-11-24 15:36:24,771 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_SafeMath
[2020-11-24 15:36:24,772 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_SafeMath
[2020-11-24 15:36:24,772 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_OwnerHelper
[2020-11-24 15:36:24,772 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_OwnerHelper
[2020-11-24 15:36:24,772 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20Interface
[2020-11-24 15:36:24,772 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20Interface
[2020-11-24 15:36:24,772 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_AssembleToken
[2020-11-24 15:36:24,772 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-24 15:36:24,772 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-24 15:36:24,772 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-24 15:36:24,773 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__fail
[2020-11-24 15:36:24,773 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_AssembleToken__success
[2020-11-24 15:36:24,773 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_AssembleToken__fail
[2020-11-24 15:36:24,773 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_AssembleToken__success
[2020-11-24 15:36:24,773 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_AssembleToken__fail
[2020-11-24 15:36:24,773 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_AssembleToken__success
[2020-11-24 15:36:24,773 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_AssembleToken__fail
[2020-11-24 15:36:24,773 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_AssembleToken__success
[2020-11-24 15:36:24,773 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_AssembleToken__fail
[2020-11-24 15:36:24,773 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_AssembleToken__success
[2020-11-24 15:36:24,774 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_AssembleToken__fail
[2020-11-24 15:36:24,774 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_AssembleToken__success
[2020-11-24 15:36:24,774 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_AssembleToken__fail
[2020-11-24 15:36:24,774 INFO  L130     BoogieDeclarations]: Found specification of procedure isTransferable_AssembleToken__fail
[2020-11-24 15:36:24,774 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-24 15:36:24,774 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-24 15:36:24,774 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-24 15:36:24,774 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__fail
[2020-11-24 15:36:24,774 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-24 15:36:24,774 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-24 15:36:24,774 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-24 15:36:24,774 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__success
[2020-11-24 15:36:24,775 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__fail
[2020-11-24 15:36:24,775 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__success
[2020-11-24 15:36:24,775 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_AssembleToken__fail
[2020-11-24 15:36:24,775 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_AssembleToken__success
[2020-11-24 15:36:24,775 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_AssembleToken__fail
[2020-11-24 15:36:24,775 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_AssembleToken__success
[2020-11-24 15:36:24,775 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_AssembleToken__fail
[2020-11-24 15:36:24,775 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_AssembleToken__success
[2020-11-24 15:36:24,775 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_AssembleToken__fail
[2020-11-24 15:36:24,775 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_AssembleToken__success
[2020-11-24 15:36:24,775 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_AssembleToken__fail
[2020-11-24 15:36:24,775 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_AssembleToken__success
[2020-11-24 15:36:24,776 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_AssembleToken__fail
[2020-11-24 15:36:24,776 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_AssembleToken__success
[2020-11-24 15:36:24,776 INFO  L138     BoogieDeclarations]: Found implementation of procedure isTransferable_AssembleToken__fail
[2020-11-24 15:36:24,776 INFO  L138     BoogieDeclarations]: Found implementation of procedure isTransferable_AssembleToken__success
[2020-11-24 15:36:24,776 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-24 15:36:24,776 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-24 15:36:24,776 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-24 15:36:24,776 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-24 15:36:24,776 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-24 15:36:24,776 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-24 15:36:24,776 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__fail
[2020-11-24 15:36:24,777 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__success
[2020-11-24 15:36:24,777 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_SafeMath
[2020-11-24 15:36:24,777 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_SafeMath
[2020-11-24 15:36:24,777 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_OwnerHelper
[2020-11-24 15:36:24,777 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_OwnerHelper
[2020-11-24 15:36:24,777 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20Interface
[2020-11-24 15:36:24,777 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20Interface
[2020-11-24 15:36:24,777 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_AssembleToken
[2020-11-24 15:36:24,777 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-24 15:36:24,777 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-24 15:36:24,777 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-24 15:36:25,165 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 15:36:25,166 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 15:36:25,166 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 15:36:25,270 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-24 15:36:25,270 INFO  L286             CfgBuilder]: Removed 4 assue(true) statements.
[2020-11-24 15:36:25,272 INFO  L202        PluginConnector]: Adding new model AssembleToken_0x2565ae0385659badcada1031db704442e1b69982_transfer-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 03:36:25 BoogieIcfgContainer
[2020-11-24 15:36:25,272 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 03:36:24" (2/2) ...
[2020-11-24 15:36:25,272 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-24 15:36:25,272 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@5cffbb87 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 03:36:25, skipping insertion in model container
[2020-11-24 15:36:25,272 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-24 15:36:25,273 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-24 15:36:25,273 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-24 15:36:25,274 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-24 15:36:25,274 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "AssembleToken_0x2565ae0385659badcada1031db704442e1b69982_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 03:36:24" (1/3) ...
[2020-11-24 15:36:25,275 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@9ff13ba and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 03:36:25, skipping insertion in model container
[2020-11-24 15:36:25,275 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 03:36:24" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-24 15:36:25,311 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 03:36:25 NWAContainer
[2020-11-24 15:36:25,311 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-24 15:36:25,311 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-24 15:36:25,311 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-24 15:36:25,312 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-24 15:36:25,313 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "AssembleToken_0x2565ae0385659badcada1031db704442e1b69982_transfer-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 03:36:25" (3/4) ...
[2020-11-24 15:36:25,314 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@72e50b1c and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 03:36:25, skipping insertion in model container
[2020-11-24 15:36:25,314 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 03:36:25" (4/4) ...
[2020-11-24 15:36:25,317 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-24 15:36:25,320 INFO  L110   BuchiProductObserver]: Initial RCFG 906 locations, 1039 edges
[2020-11-24 15:36:25,321 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-24 15:36:25,333 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-24 15:36:26,266 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-24 15:36:26,269 INFO  L110   BuchiProductObserver]: BuchiProgram size 2004 locations, 3276 edges
[2020-11-24 15:36:26,270 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 03:36:26 BoogieIcfgContainer
[2020-11-24 15:36:26,270 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-24 15:36:26,270 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-24 15:36:26,270 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-24 15:36:26,272 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-24 15:36:26,272 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 03:36:26" (1/1) ...
[2020-11-24 15:36:26,326 INFO  L313           BlockEncoder]: Initial Icfg 2004 locations, 3276 edges
[2020-11-24 15:36:26,326 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-24 15:36:26,327 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-24 15:36:26,327 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-24 15:36:26,327 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-24 15:36:26,336 INFO  L70    emoveInfeasibleEdges]: Removed 39 edges and 11 locations because of local infeasibility
[2020-11-24 15:36:26,341 INFO  L70        RemoveSinkStates]: Removed 2 edges and 1 locations by removing sink states
[2020-11-24 15:36:26,348 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-24 15:36:26,350 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-24 15:36:26,352 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-24 15:36:26,352 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-24 15:36:26,354 INFO  L313           BlockEncoder]: Encoded RCFG 1978 locations, 3215 edges
[2020-11-24 15:36:26,355 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 24.11 03:36:26 BasicIcfg
[2020-11-24 15:36:26,355 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-24 15:36:26,355 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-24 15:36:26,355 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-24 15:36:26,357 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-24 15:36:26,357 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 15:36:26,357 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "AssembleToken_0x2565ae0385659badcada1031db704442e1b69982_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 03:36:24" (1/6) ...
[2020-11-24 15:36:26,359 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@634c75d1 and model type AssembleToken_0x2565ae0385659badcada1031db704442e1b69982_transfer-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 24.11 03:36:26, skipping insertion in model container
[2020-11-24 15:36:26,359 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 15:36:26,359 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 03:36:24" (2/6) ...
[2020-11-24 15:36:26,359 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@634c75d1 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 24.11 03:36:26, skipping insertion in model container
[2020-11-24 15:36:26,359 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 15:36:26,359 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "AssembleToken_0x2565ae0385659badcada1031db704442e1b69982_transfer-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 03:36:25" (3/6) ...
[2020-11-24 15:36:26,359 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@634c75d1 and model type AssembleToken_0x2565ae0385659badcada1031db704442e1b69982_transfer-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 24.11 03:36:26, skipping insertion in model container
[2020-11-24 15:36:26,360 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 15:36:26,360 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 03:36:25" (4/6) ...
[2020-11-24 15:36:26,360 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@634c75d1 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 24.11 03:36:26, skipping insertion in model container
[2020-11-24 15:36:26,360 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 15:36:26,360 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 03:36:26" (5/6) ...
[2020-11-24 15:36:26,360 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@634c75d1 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 24.11 03:36:26, skipping insertion in model container
[2020-11-24 15:36:26,360 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 15:36:26,360 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 24.11 03:36:26" (6/6) ...
[2020-11-24 15:36:26,361 INFO  L404   chiAutomizerObserver]: Analyzing ICFG AssembleToken_0x2565ae0385659badcada1031db704442e1b69982_transfer-self.bpl_BEv2
[2020-11-24 15:36:26,390 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-24 15:36:26,391 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-24 15:36:26,391 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-24 15:36:26,391 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-24 15:36:26,391 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-24 15:36:26,391 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-24 15:36:26,391 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-24 15:36:26,391 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-24 15:36:26,391 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-24 15:36:26,407 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1978 states.
[2020-11-24 15:36:26,445 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 15:36:26,445 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 15:36:26,445 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 15:36:26,458 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 15:36:26,458 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
[2020-11-24 15:36:26,459 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-24 15:36:26,459 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1978 states.
[2020-11-24 15:36:26,472 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 15:36:26,472 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 15:36:26,472 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 15:36:26,473 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 15:36:26,474 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L2]                 success_transfer_AssembleToken0 := false;
[L2]                 call_transfer_AssembleToken0 := false;
[L2]     CALL        call main();
[L2677]              assume null == 0;
[L2678]  CALL        call this := FreshRefGenerator__success();
[L1331]              havoc newRef;
[L1332]              assume Alloc[newRef] == false;
[L1333]              Alloc[newRef] := true;
[L1334]              assume newRef != null;
[L2678]  RET         call this := FreshRefGenerator__success();
[L2679]              assume now >= 0;
[L2680]              assume DType[this] == AssembleToken;
[L2681]              assume !revert && gas >= 0;
[L2682]  CALL        call CorralChoice_AssembleToken(this);
[L2539]              havoc msgsender_MSG;
[L2540]              havoc msgvalue_MSG;
[L2541]              havoc choice;
[L2542]              havoc __ret_0_owner;
[L2543]              havoc _to_s157;
[L2544]              havoc __ret_0_totalSupply;
[L2545]              havoc _who_s573;
[L2546]              havoc __ret_0_balanceOf;
[L2547]              havoc _to_s632;
[L2548]              havoc _value_s632;
[L2549]              havoc __ret_0_transfer;
[L2550]              havoc _spender_s676;
[L2551]              havoc _value_s676;
[L2552]              havoc __ret_0_approve;
[L2553]              havoc _owner_s692;
[L2554]              havoc _spender_s692;
[L2555]              havoc __ret_0_allowance;
[L2556]              havoc _from_s777;
[L2557]              havoc _to_s777;
[L2558]              havoc _value_s777;
[L2559]              havoc __ret_0_transferFrom;
[L2560]              havoc __ret_0_name;
[L2561]              havoc __ret_0_decimals;
[L2562]              havoc __ret_0_symbol;
[L2563]              havoc __ret_0_maxTotalSupply;
[L2564]              havoc __ret_0_maxSaleSupply;
[L2565]              havoc __ret_0_maxSPSupply;
[L2566]              havoc __ret_0_maxEcoSupply;
[L2567]              havoc __ret_0_maxMktSupply;
[L2568]              havoc __ret_0_maxDevSupply;
[L2569]              havoc __ret_0_maxReserveSupply;
[L2570]              havoc __ret_0_maxTeamSupply;
[L2571]              havoc __ret_0_maxAdvisorSupply;
[L2572]              havoc __ret_0_seedSaleSupply;
[L2573]              havoc __ret_0_privateSaleSupply;
[L2574]              havoc __ret_0_publicSaleSupply;
[L2575]              havoc __ret_0_teamVestingSupply;
[L2576]              havoc __ret_0_teamVestingLockDate;
[L2577]              havoc __ret_0_teamVestingTime;
[L2578]              havoc __ret_0_advisorVestingSupply;
[L2579]              havoc __ret_0_advisorVestingLockDate;
[L2580]              havoc __ret_0_advisorVestingTime;
[L2581]              havoc __ret_0_totalTokenSupply;
[L2582]              havoc __ret_0_tokenIssuedSale;
[L2583]              havoc __ret_0_tokenIssuedSP;
[L2584]              havoc __ret_0_tokenIssuedEco;
[L2585]              havoc __ret_0_tokenIssuedMkt;
[L2586]              havoc __ret_0_tokenIssuedDev;
[L2587]              havoc __ret_0_tokenIssuedRsv;
[L2588]              havoc __ret_0_tokenIssuedTeam;
[L2589]              havoc __ret_0_tokenIssuedAdv;
[L2590]              havoc __ret_0_burnTokenSupply;
[L2591]              havoc arg1677_s0;
[L2592]              havoc __ret_0_balances;
[L2593]              havoc arg1678_s0;
[L2594]              havoc arg1679_s0;
[L2595]              havoc __ret_0_approvals;
[L2596]              havoc arg1680_s0;
[L2597]              havoc __ret_0_tmVestingTimer;
[L2598]              havoc arg1681_s0;
[L2599]              havoc __ret_0_tmVestingBalances;
[L2600]              havoc arg1682_s0;
[L2601]              havoc __ret_0_advVestingTimer;
[L2602]              havoc arg1683_s0;
[L2603]              havoc __ret_0_advVestingBalances;
[L2604]              havoc __ret_0_tokenLock;
[L2605]              havoc __ret_0_saleTime;
[L2606]              havoc __ret_0_endSaleTime;
[L2607]              havoc _to_s831;
[L2608]              havoc _to_s885;
[L2609]              havoc _to_s939;
[L2610]              havoc _to_s993;
[L2611]              havoc _to_s1047;
[L2612]              havoc _to_s1138;
[L2613]              havoc _time_s1138;
[L2614]              havoc _to_s1229;
[L2615]              havoc _time_s1229;
[L2616]              havoc _to_s1277;
[L2617]              havoc _to_s1325;
[L2618]              havoc _to_s1375;
[L2619]              havoc _contract_s1607;
[L2620]              havoc _decimals_s1607;
[L2621]              havoc _value_s1607;
[L2622]              havoc _value_s1663;
[L2623]              havoc tmpNow;
[L2624]              havoc gas;
[L2625]              assume gas > 4000000 && gas <= 8000000;
[L2626]              tmpNow := now;
[L2627]              havoc now;
[L2628]              assume now > tmpNow;
[L2629]              assume msgsender_MSG != null;
[L2630]  COND TRUE   choice == 6
[L2631]              gas := gas - 21000;
[L2632]  COND FALSE  !(gas >= 0)
[L2682]  RET         call CorralChoice_AssembleToken(this);

Loop:
[L2682]        assume true;

[2020-11-24 15:36:26,490 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 15:36:26,491 INFO  L82        PathProgramCache]: Analyzing trace with hash 1197329202, now seen corresponding path program 1 times
[2020-11-24 15:36:26,495 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 15:36:26,521 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 15:36:26,586 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 15:36:26,588 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 15:36:26,588 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-24 15:36:26,592 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 15:36:26,603 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-24 15:36:26,604 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-24 15:36:26,605 INFO  L87              Difference]: Start difference. First operand 1978 states. Second operand 3 states.
[2020-11-24 15:36:26,857 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 15:36:26,858 INFO  L93              Difference]: Finished difference Result 967 states and 1051 transitions.
[2020-11-24 15:36:26,858 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-24 15:36:26,859 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 967 states and 1051 transitions.
[2020-11-24 15:36:26,866 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 15:36:26,872 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 967 states to 286 states and 301 transitions.
[2020-11-24 15:36:26,873 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 4
[2020-11-24 15:36:26,874 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 286
[2020-11-24 15:36:26,875 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 286 states and 301 transitions.
[2020-11-24 15:36:26,876 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 15:36:26,876 INFO  L728         BuchiCegarLoop]: Abstraction has 286 states and 301 transitions.
[2020-11-24 15:36:26,891 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 286 states and 301 transitions.
[2020-11-24 15:36:26,906 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 286 to 286.
[2020-11-24 15:36:26,907 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 286 states.
[2020-11-24 15:36:26,907 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 286 states to 286 states and 301 transitions.
[2020-11-24 15:36:26,908 INFO  L751         BuchiCegarLoop]: Abstraction has 286 states and 301 transitions.
[2020-11-24 15:36:26,909 INFO  L631         BuchiCegarLoop]: Abstraction has 286 states and 301 transitions.
[2020-11-24 15:36:26,909 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-24 15:36:26,909 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 286 states and 301 transitions.
[2020-11-24 15:36:26,910 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 15:36:26,910 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 15:36:26,910 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 15:36:26,912 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 15:36:26,912 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L2]                 success_transfer_AssembleToken0 := false;
[L2]                 call_transfer_AssembleToken0 := false;
[L2]     CALL        call main();
[L2677]              assume null == 0;
[L2678]  CALL        call this := FreshRefGenerator__success();
[L1331]              havoc newRef;
[L1332]              assume Alloc[newRef] == false;
[L1333]              Alloc[newRef] := true;
[L1334]              assume newRef != null;
[L2678]  RET         call this := FreshRefGenerator__success();
[L2679]              assume now >= 0;
[L2680]              assume DType[this] == AssembleToken;
[L2681]              assume !revert && gas >= 0;
[L2682]  CALL        call CorralChoice_AssembleToken(this);
[L2539]              havoc msgsender_MSG;
[L2540]              havoc msgvalue_MSG;
[L2541]              havoc choice;
[L2542]              havoc __ret_0_owner;
[L2543]              havoc _to_s157;
[L2544]              havoc __ret_0_totalSupply;
[L2545]              havoc _who_s573;
[L2546]              havoc __ret_0_balanceOf;
[L2547]              havoc _to_s632;
[L2548]              havoc _value_s632;
[L2549]              havoc __ret_0_transfer;
[L2550]              havoc _spender_s676;
[L2551]              havoc _value_s676;
[L2552]              havoc __ret_0_approve;
[L2553]              havoc _owner_s692;
[L2554]              havoc _spender_s692;
[L2555]              havoc __ret_0_allowance;
[L2556]              havoc _from_s777;
[L2557]              havoc _to_s777;
[L2558]              havoc _value_s777;
[L2559]              havoc __ret_0_transferFrom;
[L2560]              havoc __ret_0_name;
[L2561]              havoc __ret_0_decimals;
[L2562]              havoc __ret_0_symbol;
[L2563]              havoc __ret_0_maxTotalSupply;
[L2564]              havoc __ret_0_maxSaleSupply;
[L2565]              havoc __ret_0_maxSPSupply;
[L2566]              havoc __ret_0_maxEcoSupply;
[L2567]              havoc __ret_0_maxMktSupply;
[L2568]              havoc __ret_0_maxDevSupply;
[L2569]              havoc __ret_0_maxReserveSupply;
[L2570]              havoc __ret_0_maxTeamSupply;
[L2571]              havoc __ret_0_maxAdvisorSupply;
[L2572]              havoc __ret_0_seedSaleSupply;
[L2573]              havoc __ret_0_privateSaleSupply;
[L2574]              havoc __ret_0_publicSaleSupply;
[L2575]              havoc __ret_0_teamVestingSupply;
[L2576]              havoc __ret_0_teamVestingLockDate;
[L2577]              havoc __ret_0_teamVestingTime;
[L2578]              havoc __ret_0_advisorVestingSupply;
[L2579]              havoc __ret_0_advisorVestingLockDate;
[L2580]              havoc __ret_0_advisorVestingTime;
[L2581]              havoc __ret_0_totalTokenSupply;
[L2582]              havoc __ret_0_tokenIssuedSale;
[L2583]              havoc __ret_0_tokenIssuedSP;
[L2584]              havoc __ret_0_tokenIssuedEco;
[L2585]              havoc __ret_0_tokenIssuedMkt;
[L2586]              havoc __ret_0_tokenIssuedDev;
[L2587]              havoc __ret_0_tokenIssuedRsv;
[L2588]              havoc __ret_0_tokenIssuedTeam;
[L2589]              havoc __ret_0_tokenIssuedAdv;
[L2590]              havoc __ret_0_burnTokenSupply;
[L2591]              havoc arg1677_s0;
[L2592]              havoc __ret_0_balances;
[L2593]              havoc arg1678_s0;
[L2594]              havoc arg1679_s0;
[L2595]              havoc __ret_0_approvals;
[L2596]              havoc arg1680_s0;
[L2597]              havoc __ret_0_tmVestingTimer;
[L2598]              havoc arg1681_s0;
[L2599]              havoc __ret_0_tmVestingBalances;
[L2600]              havoc arg1682_s0;
[L2601]              havoc __ret_0_advVestingTimer;
[L2602]              havoc arg1683_s0;
[L2603]              havoc __ret_0_advVestingBalances;
[L2604]              havoc __ret_0_tokenLock;
[L2605]              havoc __ret_0_saleTime;
[L2606]              havoc __ret_0_endSaleTime;
[L2607]              havoc _to_s831;
[L2608]              havoc _to_s885;
[L2609]              havoc _to_s939;
[L2610]              havoc _to_s993;
[L2611]              havoc _to_s1047;
[L2612]              havoc _to_s1138;
[L2613]              havoc _time_s1138;
[L2614]              havoc _to_s1229;
[L2615]              havoc _time_s1229;
[L2616]              havoc _to_s1277;
[L2617]              havoc _to_s1325;
[L2618]              havoc _to_s1375;
[L2619]              havoc _contract_s1607;
[L2620]              havoc _decimals_s1607;
[L2621]              havoc _value_s1607;
[L2622]              havoc _value_s1663;
[L2623]              havoc tmpNow;
[L2624]              havoc gas;
[L2625]              assume gas > 4000000 && gas <= 8000000;
[L2626]              tmpNow := now;
[L2627]              havoc now;
[L2628]              assume now > tmpNow;
[L2629]              assume msgsender_MSG != null;
[L2630]  COND FALSE  !(choice == 6)
[L2636]  COND FALSE  !(choice == 5)
[L2642]  COND TRUE   choice == 4
[L2643]              gas := gas - 21000;
[L2644]  COND TRUE   gas >= 0
[L2645]              assume _value_s632 >= 0 && _value_s632 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2646]              assume msgvalue_MSG == 0;
[L2647]  CALL        call __ret_0_transfer := transfer~address~uint256_AssembleToken(this, msgsender_MSG, msgvalue_MSG, _to_s632, _value_s632);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == _to_s632 && _value_s632 <= balances_AssembleToken[this][msgsender_MSG]) && _value_s632 >= 0) && _value_s632 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_AssembleToken[this][_to_s632] >= 0) && balances_AssembleToken[this][_to_s632] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_AssembleToken[this][msgsender_MSG] >= 0) && balances_AssembleToken[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_AssembleToken0 := true;
[L2]                 call_transfer_AssembleToken0 := false;
[L2]                 revert := revert_hold;
[L425]               havoc __exception;
[L426]               revert := false;
[L427]   COND FALSE  !(__exception)
[L490]   CALL        call __ret_0_ := transfer~address~uint256_AssembleToken__success(this, msgsender_MSG, msgvalue_MSG, _to_s632, _value_s632);
[L1431]  CALL        call __var_1 := isTransferable_AssembleToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1629]  COND TRUE   tokenLock_AssembleToken[this] == false
[L1630]              __ret_0_ := true;
[L1431]  RET         call __var_1 := isTransferable_AssembleToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1432]  COND TRUE   revert
[L490]   RET         call __ret_0_ := transfer~address~uint256_AssembleToken__success(this, msgsender_MSG, msgvalue_MSG, _to_s632, _value_s632);
[L491]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !(((((((((((((((((((((((__ret_0_ == true && totalTokenSupply_AssembleToken[this] == old(totalTokenSupply_AssembleToken[this])) && balances_AssembleToken[this] == old(balances_AssembleToken[this])) && approvals_AssembleToken[this] == old(approvals_AssembleToken[this])) && name_AssembleToken[this] == old(name_AssembleToken[this])) && decimals_AssembleToken[this] == old(decimals_AssembleToken[this])) && symbol_AssembleToken[this] == old(symbol_AssembleToken[this])) && tokenIssuedSale_AssembleToken[this] == old(tokenIssuedSale_AssembleToken[this])) && tokenIssuedSP_AssembleToken[this] == old(tokenIssuedSP_AssembleToken[this])) && tokenIssuedEco_AssembleToken[this] == old(tokenIssuedEco_AssembleToken[this])) && tokenIssuedMkt_AssembleToken[this] == old(tokenIssuedMkt_AssembleToken[this])) && tokenIssuedDev_AssembleToken[this] == old(tokenIssuedDev_AssembleToken[this])) && tokenIssuedRsv_AssembleToken[this] == old(tokenIssuedRsv_AssembleToken[this])) && tokenIssuedTeam_AssembleToken[this] == old(tokenIssuedTeam_AssembleToken[this])) && tokenIssuedAdv_AssembleToken[this] == old(tokenIssuedAdv_AssembleToken[this])) && burnTokenSupply_AssembleToken[this] == old(burnTokenSupply_AssembleToken[this])) && tmVestingTimer_AssembleToken[this] == old(tmVestingTimer_AssembleToken[this])) && tmVestingBalances_AssembleToken[this] == old(tmVestingBalances_AssembleToken[this])) && advVestingTimer_AssembleToken[this] == old(advVestingTimer_AssembleToken[this])) && advVestingBalances_AssembleToken[this] == old(advVestingBalances_AssembleToken[this])) && tokenLock_AssembleToken[this] == old(tokenLock_AssembleToken[this])) && saleTime_AssembleToken[this] == old(saleTime_AssembleToken[this])) && endSaleTime_AssembleToken[this] == old(endSaleTime_AssembleToken[this])) && owner_OwnerHelper[this] == old(owner_OwnerHelper[this]));
[L2]                 revert := revert_hold;
[L2647]  RET         call __ret_0_transfer := transfer~address~uint256_AssembleToken(this, msgsender_MSG, msgvalue_MSG, _to_s632, _value_s632);
[L2682]  RET         call CorralChoice_AssembleToken(this);

Loop:
[L2682]        assume true;

[2020-11-24 15:36:26,916 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 15:36:26,916 INFO  L82        PathProgramCache]: Analyzing trace with hash 1646494479, now seen corresponding path program 1 times
[2020-11-24 15:36:26,917 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 15:36:26,937 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 15:36:26,966 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 15:36:26,966 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 15:36:26,966 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-24 15:36:26,968 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 15:36:26,968 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-24 15:36:26,968 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-24 15:36:26,968 INFO  L87              Difference]: Start difference. First operand 286 states and 301 transitions. cyclomatic complexity: 16 Second operand 3 states.
[2020-11-24 15:36:26,976 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 15:36:26,976 INFO  L93              Difference]: Finished difference Result 301 states and 315 transitions.
[2020-11-24 15:36:26,976 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-24 15:36:26,977 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 301 states and 315 transitions.
[2020-11-24 15:36:26,979 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 2
[2020-11-24 15:36:26,980 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 301 states to 295 states and 305 transitions.
[2020-11-24 15:36:26,980 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 295
[2020-11-24 15:36:26,981 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 295
[2020-11-24 15:36:26,981 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 295 states and 305 transitions.
[2020-11-24 15:36:26,982 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 15:36:26,982 INFO  L728         BuchiCegarLoop]: Abstraction has 295 states and 305 transitions.
[2020-11-24 15:36:26,982 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 295 states and 305 transitions.
[2020-11-24 15:36:26,987 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 295 to 284.
[2020-11-24 15:36:26,987 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 284 states.
[2020-11-24 15:36:26,988 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 284 states to 284 states and 294 transitions.
[2020-11-24 15:36:26,988 INFO  L751         BuchiCegarLoop]: Abstraction has 284 states and 294 transitions.
[2020-11-24 15:36:26,988 INFO  L631         BuchiCegarLoop]: Abstraction has 284 states and 294 transitions.
[2020-11-24 15:36:26,988 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-24 15:36:26,988 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 284 states and 294 transitions.
[2020-11-24 15:36:26,989 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 15:36:26,989 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 15:36:26,989 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 15:36:26,991 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 15:36:26,991 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L2]                 success_transfer_AssembleToken0 := false;
[L2]                 call_transfer_AssembleToken0 := false;
[L2]     CALL        call main();
[L2677]              assume null == 0;
[L2678]  CALL        call this := FreshRefGenerator__success();
[L1331]              havoc newRef;
[L1332]              assume Alloc[newRef] == false;
[L1333]              Alloc[newRef] := true;
[L1334]              assume newRef != null;
[L2678]  RET         call this := FreshRefGenerator__success();
[L2679]              assume now >= 0;
[L2680]              assume DType[this] == AssembleToken;
[L2681]              assume !revert && gas >= 0;
[L2682]  CALL        call CorralChoice_AssembleToken(this);
[L2539]              havoc msgsender_MSG;
[L2540]              havoc msgvalue_MSG;
[L2541]              havoc choice;
[L2542]              havoc __ret_0_owner;
[L2543]              havoc _to_s157;
[L2544]              havoc __ret_0_totalSupply;
[L2545]              havoc _who_s573;
[L2546]              havoc __ret_0_balanceOf;
[L2547]              havoc _to_s632;
[L2548]              havoc _value_s632;
[L2549]              havoc __ret_0_transfer;
[L2550]              havoc _spender_s676;
[L2551]              havoc _value_s676;
[L2552]              havoc __ret_0_approve;
[L2553]              havoc _owner_s692;
[L2554]              havoc _spender_s692;
[L2555]              havoc __ret_0_allowance;
[L2556]              havoc _from_s777;
[L2557]              havoc _to_s777;
[L2558]              havoc _value_s777;
[L2559]              havoc __ret_0_transferFrom;
[L2560]              havoc __ret_0_name;
[L2561]              havoc __ret_0_decimals;
[L2562]              havoc __ret_0_symbol;
[L2563]              havoc __ret_0_maxTotalSupply;
[L2564]              havoc __ret_0_maxSaleSupply;
[L2565]              havoc __ret_0_maxSPSupply;
[L2566]              havoc __ret_0_maxEcoSupply;
[L2567]              havoc __ret_0_maxMktSupply;
[L2568]              havoc __ret_0_maxDevSupply;
[L2569]              havoc __ret_0_maxReserveSupply;
[L2570]              havoc __ret_0_maxTeamSupply;
[L2571]              havoc __ret_0_maxAdvisorSupply;
[L2572]              havoc __ret_0_seedSaleSupply;
[L2573]              havoc __ret_0_privateSaleSupply;
[L2574]              havoc __ret_0_publicSaleSupply;
[L2575]              havoc __ret_0_teamVestingSupply;
[L2576]              havoc __ret_0_teamVestingLockDate;
[L2577]              havoc __ret_0_teamVestingTime;
[L2578]              havoc __ret_0_advisorVestingSupply;
[L2579]              havoc __ret_0_advisorVestingLockDate;
[L2580]              havoc __ret_0_advisorVestingTime;
[L2581]              havoc __ret_0_totalTokenSupply;
[L2582]              havoc __ret_0_tokenIssuedSale;
[L2583]              havoc __ret_0_tokenIssuedSP;
[L2584]              havoc __ret_0_tokenIssuedEco;
[L2585]              havoc __ret_0_tokenIssuedMkt;
[L2586]              havoc __ret_0_tokenIssuedDev;
[L2587]              havoc __ret_0_tokenIssuedRsv;
[L2588]              havoc __ret_0_tokenIssuedTeam;
[L2589]              havoc __ret_0_tokenIssuedAdv;
[L2590]              havoc __ret_0_burnTokenSupply;
[L2591]              havoc arg1677_s0;
[L2592]              havoc __ret_0_balances;
[L2593]              havoc arg1678_s0;
[L2594]              havoc arg1679_s0;
[L2595]              havoc __ret_0_approvals;
[L2596]              havoc arg1680_s0;
[L2597]              havoc __ret_0_tmVestingTimer;
[L2598]              havoc arg1681_s0;
[L2599]              havoc __ret_0_tmVestingBalances;
[L2600]              havoc arg1682_s0;
[L2601]              havoc __ret_0_advVestingTimer;
[L2602]              havoc arg1683_s0;
[L2603]              havoc __ret_0_advVestingBalances;
[L2604]              havoc __ret_0_tokenLock;
[L2605]              havoc __ret_0_saleTime;
[L2606]              havoc __ret_0_endSaleTime;
[L2607]              havoc _to_s831;
[L2608]              havoc _to_s885;
[L2609]              havoc _to_s939;
[L2610]              havoc _to_s993;
[L2611]              havoc _to_s1047;
[L2612]              havoc _to_s1138;
[L2613]              havoc _time_s1138;
[L2614]              havoc _to_s1229;
[L2615]              havoc _time_s1229;
[L2616]              havoc _to_s1277;
[L2617]              havoc _to_s1325;
[L2618]              havoc _to_s1375;
[L2619]              havoc _contract_s1607;
[L2620]              havoc _decimals_s1607;
[L2621]              havoc _value_s1607;
[L2622]              havoc _value_s1663;
[L2623]              havoc tmpNow;
[L2624]              havoc gas;
[L2625]              assume gas > 4000000 && gas <= 8000000;
[L2626]              tmpNow := now;
[L2627]              havoc now;
[L2628]              assume now > tmpNow;
[L2629]              assume msgsender_MSG != null;
[L2630]  COND FALSE  !(choice == 6)
[L2636]  COND FALSE  !(choice == 5)
[L2642]  COND TRUE   choice == 4
[L2643]              gas := gas - 21000;
[L2644]  COND TRUE   gas >= 0
[L2645]              assume _value_s632 >= 0 && _value_s632 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2646]              assume msgvalue_MSG == 0;
[L2647]  CALL        call __ret_0_transfer := transfer~address~uint256_AssembleToken(this, msgsender_MSG, msgvalue_MSG, _to_s632, _value_s632);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == _to_s632 && _value_s632 <= balances_AssembleToken[this][msgsender_MSG]) && _value_s632 >= 0) && _value_s632 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_AssembleToken[this][_to_s632] >= 0) && balances_AssembleToken[this][_to_s632] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_AssembleToken[this][msgsender_MSG] >= 0) && balances_AssembleToken[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_AssembleToken0 := true;
[L2]                 call_transfer_AssembleToken0 := false;
[L2]                 revert := revert_hold;
[L425]               havoc __exception;
[L426]               revert := false;
[L427]   COND FALSE  !(__exception)
[L490]   CALL        call __ret_0_ := transfer~address~uint256_AssembleToken__success(this, msgsender_MSG, msgvalue_MSG, _to_s632, _value_s632);
[L1431]  CALL        call __var_1 := isTransferable_AssembleToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1629]  COND TRUE   tokenLock_AssembleToken[this] == false
[L1630]              __ret_0_ := true;
[L1431]  RET         call __var_1 := isTransferable_AssembleToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1432]  COND FALSE  !(revert)
[L1435]  COND FALSE  !(!(__var_1 == true))
[L1439]  COND FALSE  !(!(balances_AssembleToken[this][msgsender_MSG] >= _value_s632))
[L1443]  CALL        call __var_2 := sub~uint256~uint256_SafeMath__success(this, this, 0, balances_AssembleToken[this][msgsender_MSG], _value_s632);
[L1345]              assert b_s69 <= a_s69;
[L1346]              __ret_0_ := (a_s69 - b_s69) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1443]  RET         call __var_2 := sub~uint256~uint256_SafeMath__success(this, this, 0, balances_AssembleToken[this][msgsender_MSG], _value_s632);
[L1444]  COND FALSE  !(revert)
[L1447]              sum_balances0[this] := sum_balances0[this] - balances_AssembleToken[this][msgsender_MSG];
[L1448]              balances_AssembleToken[this][msgsender_MSG] := __var_2;
[L1449]              sum_balances0[this] := sum_balances0[this] + balances_AssembleToken[this][msgsender_MSG];
[L1450]  CALL        call __var_3 := add~uint256~uint256_SafeMath__success(this, this, 0, balances_AssembleToken[this][_to_s632], _value_s632);
[L1361]              c_s93 := (a_s93 + b_s93) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1362]              assert c_s93 >= a_s93;
[L1363]              __ret_0_ := c_s93;
[L1450]  RET         call __var_3 := add~uint256~uint256_SafeMath__success(this, this, 0, balances_AssembleToken[this][_to_s632], _value_s632);
[L1451]  COND FALSE  !(revert)
[L1454]              sum_balances0[this] := sum_balances0[this] - balances_AssembleToken[this][_to_s632];
[L1455]              balances_AssembleToken[this][_to_s632] := __var_3;
[L1456]              sum_balances0[this] := sum_balances0[this] + balances_AssembleToken[this][_to_s632];
[L1457]              assert { :EventEmitted "Transfer_AssembleToken" } true;
[L1458]              __ret_0_ := true;
[L490]   RET         call __ret_0_ := transfer~address~uint256_AssembleToken__success(this, msgsender_MSG, msgvalue_MSG, _to_s632, _value_s632);
[L491]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !(((((((((((((((((((((((__ret_0_ == true && totalTokenSupply_AssembleToken[this] == old(totalTokenSupply_AssembleToken[this])) && balances_AssembleToken[this] == old(balances_AssembleToken[this])) && approvals_AssembleToken[this] == old(approvals_AssembleToken[this])) && name_AssembleToken[this] == old(name_AssembleToken[this])) && decimals_AssembleToken[this] == old(decimals_AssembleToken[this])) && symbol_AssembleToken[this] == old(symbol_AssembleToken[this])) && tokenIssuedSale_AssembleToken[this] == old(tokenIssuedSale_AssembleToken[this])) && tokenIssuedSP_AssembleToken[this] == old(tokenIssuedSP_AssembleToken[this])) && tokenIssuedEco_AssembleToken[this] == old(tokenIssuedEco_AssembleToken[this])) && tokenIssuedMkt_AssembleToken[this] == old(tokenIssuedMkt_AssembleToken[this])) && tokenIssuedDev_AssembleToken[this] == old(tokenIssuedDev_AssembleToken[this])) && tokenIssuedRsv_AssembleToken[this] == old(tokenIssuedRsv_AssembleToken[this])) && tokenIssuedTeam_AssembleToken[this] == old(tokenIssuedTeam_AssembleToken[this])) && tokenIssuedAdv_AssembleToken[this] == old(tokenIssuedAdv_AssembleToken[this])) && burnTokenSupply_AssembleToken[this] == old(burnTokenSupply_AssembleToken[this])) && tmVestingTimer_AssembleToken[this] == old(tmVestingTimer_AssembleToken[this])) && tmVestingBalances_AssembleToken[this] == old(tmVestingBalances_AssembleToken[this])) && advVestingTimer_AssembleToken[this] == old(advVestingTimer_AssembleToken[this])) && advVestingBalances_AssembleToken[this] == old(advVestingBalances_AssembleToken[this])) && tokenLock_AssembleToken[this] == old(tokenLock_AssembleToken[this])) && saleTime_AssembleToken[this] == old(saleTime_AssembleToken[this])) && endSaleTime_AssembleToken[this] == old(endSaleTime_AssembleToken[this])) && owner_OwnerHelper[this] == old(owner_OwnerHelper[this]));
[L2]                 revert := revert_hold;
[L2647]  RET         call __ret_0_transfer := transfer~address~uint256_AssembleToken(this, msgsender_MSG, msgvalue_MSG, _to_s632, _value_s632);
[L2682]  RET         call CorralChoice_AssembleToken(this);

Loop:
[L2682]        assume true;

[2020-11-24 15:36:26,994 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 15:36:26,995 INFO  L82        PathProgramCache]: Analyzing trace with hash 69531421, now seen corresponding path program 1 times
[2020-11-24 15:36:26,995 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 15:36:27,046 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 15:36:27,244 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 15:36:27,244 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 15:36:27,246 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [13] imperfect sequences [] total 13
[2020-11-24 15:36:27,247 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 15:36:27,248 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 13 interpolants.
[2020-11-24 15:36:27,248 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=27, Invalid=129, Unknown=0, NotChecked=0, Total=156
[2020-11-24 15:36:27,249 INFO  L87              Difference]: Start difference. First operand 284 states and 294 transitions. cyclomatic complexity: 11 Second operand 13 states.
[2020-11-24 15:36:27,676 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 15:36:27,676 INFO  L93              Difference]: Finished difference Result 283 states and 292 transitions.
[2020-11-24 15:36:27,676 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 13 states. 
[2020-11-24 15:36:27,676 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 283 states and 292 transitions.
[2020-11-24 15:36:27,678 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 15:36:27,679 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 283 states to 236 states and 243 transitions.
[2020-11-24 15:36:27,679 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 236
[2020-11-24 15:36:27,679 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 236
[2020-11-24 15:36:27,679 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 236 states and 243 transitions.
[2020-11-24 15:36:27,679 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 15:36:27,680 INFO  L728         BuchiCegarLoop]: Abstraction has 236 states and 243 transitions.
[2020-11-24 15:36:27,680 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 236 states and 243 transitions.
[2020-11-24 15:36:27,683 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 236 to 236.
[2020-11-24 15:36:27,683 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 236 states.
[2020-11-24 15:36:27,684 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 236 states to 236 states and 243 transitions.
[2020-11-24 15:36:27,684 INFO  L751         BuchiCegarLoop]: Abstraction has 236 states and 243 transitions.
[2020-11-24 15:36:27,684 INFO  L631         BuchiCegarLoop]: Abstraction has 236 states and 243 transitions.
[2020-11-24 15:36:27,684 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-24 15:36:27,684 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 236 states and 243 transitions.
[2020-11-24 15:36:27,685 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 15:36:27,685 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 15:36:27,685 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 15:36:27,686 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 15:36:27,686 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L2]                 success_transfer_AssembleToken0 := false;
[L2]                 call_transfer_AssembleToken0 := false;
[L2]     CALL        call main();
[L2677]              assume null == 0;
[L2678]  CALL        call this := FreshRefGenerator__success();
[L1331]              havoc newRef;
[L1332]              assume Alloc[newRef] == false;
[L1333]              Alloc[newRef] := true;
[L1334]              assume newRef != null;
[L2678]  RET         call this := FreshRefGenerator__success();
[L2679]              assume now >= 0;
[L2680]              assume DType[this] == AssembleToken;
[L2681]              assume !revert && gas >= 0;
[L2682]  CALL        call CorralChoice_AssembleToken(this);
[L2539]              havoc msgsender_MSG;
[L2540]              havoc msgvalue_MSG;
[L2541]              havoc choice;
[L2542]              havoc __ret_0_owner;
[L2543]              havoc _to_s157;
[L2544]              havoc __ret_0_totalSupply;
[L2545]              havoc _who_s573;
[L2546]              havoc __ret_0_balanceOf;
[L2547]              havoc _to_s632;
[L2548]              havoc _value_s632;
[L2549]              havoc __ret_0_transfer;
[L2550]              havoc _spender_s676;
[L2551]              havoc _value_s676;
[L2552]              havoc __ret_0_approve;
[L2553]              havoc _owner_s692;
[L2554]              havoc _spender_s692;
[L2555]              havoc __ret_0_allowance;
[L2556]              havoc _from_s777;
[L2557]              havoc _to_s777;
[L2558]              havoc _value_s777;
[L2559]              havoc __ret_0_transferFrom;
[L2560]              havoc __ret_0_name;
[L2561]              havoc __ret_0_decimals;
[L2562]              havoc __ret_0_symbol;
[L2563]              havoc __ret_0_maxTotalSupply;
[L2564]              havoc __ret_0_maxSaleSupply;
[L2565]              havoc __ret_0_maxSPSupply;
[L2566]              havoc __ret_0_maxEcoSupply;
[L2567]              havoc __ret_0_maxMktSupply;
[L2568]              havoc __ret_0_maxDevSupply;
[L2569]              havoc __ret_0_maxReserveSupply;
[L2570]              havoc __ret_0_maxTeamSupply;
[L2571]              havoc __ret_0_maxAdvisorSupply;
[L2572]              havoc __ret_0_seedSaleSupply;
[L2573]              havoc __ret_0_privateSaleSupply;
[L2574]              havoc __ret_0_publicSaleSupply;
[L2575]              havoc __ret_0_teamVestingSupply;
[L2576]              havoc __ret_0_teamVestingLockDate;
[L2577]              havoc __ret_0_teamVestingTime;
[L2578]              havoc __ret_0_advisorVestingSupply;
[L2579]              havoc __ret_0_advisorVestingLockDate;
[L2580]              havoc __ret_0_advisorVestingTime;
[L2581]              havoc __ret_0_totalTokenSupply;
[L2582]              havoc __ret_0_tokenIssuedSale;
[L2583]              havoc __ret_0_tokenIssuedSP;
[L2584]              havoc __ret_0_tokenIssuedEco;
[L2585]              havoc __ret_0_tokenIssuedMkt;
[L2586]              havoc __ret_0_tokenIssuedDev;
[L2587]              havoc __ret_0_tokenIssuedRsv;
[L2588]              havoc __ret_0_tokenIssuedTeam;
[L2589]              havoc __ret_0_tokenIssuedAdv;
[L2590]              havoc __ret_0_burnTokenSupply;
[L2591]              havoc arg1677_s0;
[L2592]              havoc __ret_0_balances;
[L2593]              havoc arg1678_s0;
[L2594]              havoc arg1679_s0;
[L2595]              havoc __ret_0_approvals;
[L2596]              havoc arg1680_s0;
[L2597]              havoc __ret_0_tmVestingTimer;
[L2598]              havoc arg1681_s0;
[L2599]              havoc __ret_0_tmVestingBalances;
[L2600]              havoc arg1682_s0;
[L2601]              havoc __ret_0_advVestingTimer;
[L2602]              havoc arg1683_s0;
[L2603]              havoc __ret_0_advVestingBalances;
[L2604]              havoc __ret_0_tokenLock;
[L2605]              havoc __ret_0_saleTime;
[L2606]              havoc __ret_0_endSaleTime;
[L2607]              havoc _to_s831;
[L2608]              havoc _to_s885;
[L2609]              havoc _to_s939;
[L2610]              havoc _to_s993;
[L2611]              havoc _to_s1047;
[L2612]              havoc _to_s1138;
[L2613]              havoc _time_s1138;
[L2614]              havoc _to_s1229;
[L2615]              havoc _time_s1229;
[L2616]              havoc _to_s1277;
[L2617]              havoc _to_s1325;
[L2618]              havoc _to_s1375;
[L2619]              havoc _contract_s1607;
[L2620]              havoc _decimals_s1607;
[L2621]              havoc _value_s1607;
[L2622]              havoc _value_s1663;
[L2623]              havoc tmpNow;
[L2624]              havoc gas;
[L2625]              assume gas > 4000000 && gas <= 8000000;
[L2626]              tmpNow := now;
[L2627]              havoc now;
[L2628]              assume now > tmpNow;
[L2629]              assume msgsender_MSG != null;
[L2630]  COND FALSE  !(choice == 6)
[L2636]  COND FALSE  !(choice == 5)
[L2642]  COND TRUE   choice == 4
[L2643]              gas := gas - 21000;
[L2644]  COND TRUE   gas >= 0
[L2645]              assume _value_s632 >= 0 && _value_s632 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2646]              assume msgvalue_MSG == 0;
[L2647]  CALL        call __ret_0_transfer := transfer~address~uint256_AssembleToken(this, msgsender_MSG, msgvalue_MSG, _to_s632, _value_s632);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == _to_s632 && _value_s632 <= balances_AssembleToken[this][msgsender_MSG]) && _value_s632 >= 0) && _value_s632 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_AssembleToken[this][_to_s632] >= 0) && balances_AssembleToken[this][_to_s632] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_AssembleToken[this][msgsender_MSG] >= 0) && balances_AssembleToken[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_AssembleToken0 := true;
[L2]                 call_transfer_AssembleToken0 := false;
[L2]                 revert := revert_hold;
[L425]               havoc __exception;
[L426]               revert := false;
[L427]   COND TRUE   __exception
[L428]               __tmp__Balance := Balance;
[L429]               __tmp__DType := DType;
[L430]               __tmp__Alloc := Alloc;
[L431]               __tmp__balance_ADDR := balance_ADDR;
[L432]               __tmp__M_Ref_int := M_Ref_int;
[L433]               __tmp__sum_balances0 := sum_balances0;
[L434]               __tmp__alloc_approvals_AssembleToken_lvl0 := alloc_approvals_AssembleToken_lvl0;
[L435]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L436]               __tmp__sum_approvals1 := sum_approvals1;
[L437]               __tmp__M_int_int := M_int_int;
[L438]               __tmp__sum_tmVestingTimer2 := sum_tmVestingTimer2;
[L439]               __tmp__sum_tmVestingBalances3 := sum_tmVestingBalances3;
[L440]               __tmp__sum_advVestingTimer4 := sum_advVestingTimer4;
[L441]               __tmp__sum_advVestingBalances5 := sum_advVestingBalances5;
[L442]               __tmp__Length := Length;
[L443]               __tmp__now := now;
[L444]               __tmp__owner_OwnerHelper := owner_OwnerHelper;
[L445]               __tmp__name_AssembleToken := name_AssembleToken;
[L446]               __tmp__decimals_AssembleToken := decimals_AssembleToken;
[L447]               __tmp__symbol_AssembleToken := symbol_AssembleToken;
[L448]               __tmp__E18_AssembleToken := E18_AssembleToken;
[L449]               __tmp__month_AssembleToken := month_AssembleToken;
[L450]               __tmp__maxTotalSupply_AssembleToken := maxTotalSupply_AssembleToken;
[L451]               __tmp__maxSaleSupply_AssembleToken := maxSaleSupply_AssembleToken;
[L452]               __tmp__maxSPSupply_AssembleToken := maxSPSupply_AssembleToken;
[L453]               __tmp__maxEcoSupply_AssembleToken := maxEcoSupply_AssembleToken;
[L454]               __tmp__maxMktSupply_AssembleToken := maxMktSupply_AssembleToken;
[L455]               __tmp__maxDevSupply_AssembleToken := maxDevSupply_AssembleToken;
[L456]               __tmp__maxReserveSupply_AssembleToken := maxReserveSupply_AssembleToken;
[L457]               __tmp__maxTeamSupply_AssembleToken := maxTeamSupply_AssembleToken;
[L458]               __tmp__maxAdvisorSupply_AssembleToken := maxAdvisorSupply_AssembleToken;
[L459]               __tmp__seedSaleSupply_AssembleToken := seedSaleSupply_AssembleToken;
[L460]               __tmp__privateSaleSupply_AssembleToken := privateSaleSupply_AssembleToken;
[L461]               __tmp__publicSaleSupply_AssembleToken := publicSaleSupply_AssembleToken;
[L462]               __tmp__teamVestingSupply_AssembleToken := teamVestingSupply_AssembleToken;
[L463]               __tmp__teamVestingLockDate_AssembleToken := teamVestingLockDate_AssembleToken;
[L464]               __tmp__teamVestingTime_AssembleToken := teamVestingTime_AssembleToken;
[L465]               __tmp__advisorVestingSupply_AssembleToken := advisorVestingSupply_AssembleToken;
[L466]               __tmp__advisorVestingLockDate_AssembleToken := advisorVestingLockDate_AssembleToken;
[L467]               __tmp__advisorVestingTime_AssembleToken := advisorVestingTime_AssembleToken;
[L468]               __tmp__totalTokenSupply_AssembleToken := totalTokenSupply_AssembleToken;
[L469]               __tmp__tokenIssuedSale_AssembleToken := tokenIssuedSale_AssembleToken;
[L470]               __tmp__tokenIssuedSP_AssembleToken := tokenIssuedSP_AssembleToken;
[L471]               __tmp__tokenIssuedEco_AssembleToken := tokenIssuedEco_AssembleToken;
[L472]               __tmp__tokenIssuedMkt_AssembleToken := tokenIssuedMkt_AssembleToken;
[L473]               __tmp__tokenIssuedDev_AssembleToken := tokenIssuedDev_AssembleToken;
[L474]               __tmp__tokenIssuedRsv_AssembleToken := tokenIssuedRsv_AssembleToken;
[L475]               __tmp__tokenIssuedTeam_AssembleToken := tokenIssuedTeam_AssembleToken;
[L476]               __tmp__tokenIssuedAdv_AssembleToken := tokenIssuedAdv_AssembleToken;
[L477]               __tmp__burnTokenSupply_AssembleToken := burnTokenSupply_AssembleToken;
[L478]               __tmp__balances_AssembleToken := balances_AssembleToken;
[L479]               __tmp__approvals_AssembleToken := approvals_AssembleToken;
[L480]               __tmp__tmVestingTimer_AssembleToken := tmVestingTimer_AssembleToken;
[L481]               __tmp__tmVestingBalances_AssembleToken := tmVestingBalances_AssembleToken;
[L482]               __tmp__advVestingTimer_AssembleToken := advVestingTimer_AssembleToken;
[L483]               __tmp__advVestingBalances_AssembleToken := advVestingBalances_AssembleToken;
[L484]               __tmp__tokenLock_AssembleToken := tokenLock_AssembleToken;
[L485]               __tmp__saleTime_AssembleToken := saleTime_AssembleToken;
[L486]               __tmp__endSaleTime_AssembleToken := endSaleTime_AssembleToken;
[L487]   CALL        call __ret_0_ := transfer~address~uint256_AssembleToken__fail(this, msgsender_MSG, msgvalue_MSG, _to_s632, _value_s632);
[L1396]  CALL        call __var_1 := isTransferable_AssembleToken__fail(this, msgsender_MSG, msgvalue_MSG);
[L1616]  COND TRUE   __tmp__tokenLock_AssembleToken[this] == false
[L1617]              __ret_0_ := true;
[L1396]  RET         call __var_1 := isTransferable_AssembleToken__fail(this, msgsender_MSG, msgvalue_MSG);
[L1397]  COND TRUE   revert
[L487]   RET         call __ret_0_ := transfer~address~uint256_AssembleToken__fail(this, msgsender_MSG, msgvalue_MSG, _to_s632, _value_s632);
[L488]               assume revert || gas < 0;
[L2647]  RET         call __ret_0_transfer := transfer~address~uint256_AssembleToken(this, msgsender_MSG, msgvalue_MSG, _to_s632, _value_s632);
[L2682]  RET         call CorralChoice_AssembleToken(this);

Loop:
[L2682]        assume true;

[2020-11-24 15:36:27,689 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 15:36:27,689 INFO  L82        PathProgramCache]: Analyzing trace with hash 283650832, now seen corresponding path program 1 times
[2020-11-24 15:36:27,690 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 15:36:27,709 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 15:36:27,764 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 15:36:27,764 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 15:36:27,764 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [5] imperfect sequences [] total 5
[2020-11-24 15:36:27,765 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 15:36:27,765 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 5 interpolants.
[2020-11-24 15:36:27,766 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=9, Invalid=11, Unknown=0, NotChecked=0, Total=20
[2020-11-24 15:36:27,766 INFO  L87              Difference]: Start difference. First operand 236 states and 243 transitions. cyclomatic complexity: 8 Second operand 5 states.
[2020-11-24 15:36:27,785 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 15:36:27,786 INFO  L93              Difference]: Finished difference Result 247 states and 251 transitions.
[2020-11-24 15:36:27,786 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-24 15:36:27,786 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 247 states and 251 transitions.
[2020-11-24 15:36:27,788 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 2
[2020-11-24 15:36:27,789 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 247 states to 247 states and 251 transitions.
[2020-11-24 15:36:27,789 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 247
[2020-11-24 15:36:27,789 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 247
[2020-11-24 15:36:27,789 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 247 states and 251 transitions.
[2020-11-24 15:36:27,790 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 15:36:27,790 INFO  L728         BuchiCegarLoop]: Abstraction has 247 states and 251 transitions.
[2020-11-24 15:36:27,790 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 247 states and 251 transitions.
[2020-11-24 15:36:27,793 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 247 to 236.
[2020-11-24 15:36:27,793 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 236 states.
[2020-11-24 15:36:27,793 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 236 states to 236 states and 240 transitions.
[2020-11-24 15:36:27,794 INFO  L751         BuchiCegarLoop]: Abstraction has 236 states and 240 transitions.
[2020-11-24 15:36:27,794 INFO  L631         BuchiCegarLoop]: Abstraction has 236 states and 240 transitions.
[2020-11-24 15:36:27,794 INFO  L445         BuchiCegarLoop]: ======== Iteration 5============
[2020-11-24 15:36:27,794 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 236 states and 240 transitions.
[2020-11-24 15:36:27,795 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 15:36:27,795 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 15:36:27,795 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 15:36:27,797 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 15:36:27,797 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L2]                 success_transfer_AssembleToken0 := false;
[L2]                 call_transfer_AssembleToken0 := false;
[L2]     CALL        call main();
[L2677]              assume null == 0;
[L2678]  CALL        call this := FreshRefGenerator__success();
[L1331]              havoc newRef;
[L1332]              assume Alloc[newRef] == false;
[L1333]              Alloc[newRef] := true;
[L1334]              assume newRef != null;
[L2678]  RET         call this := FreshRefGenerator__success();
[L2679]              assume now >= 0;
[L2680]              assume DType[this] == AssembleToken;
[L2681]              assume !revert && gas >= 0;
[L2682]  CALL        call CorralChoice_AssembleToken(this);
[L2539]              havoc msgsender_MSG;
[L2540]              havoc msgvalue_MSG;
[L2541]              havoc choice;
[L2542]              havoc __ret_0_owner;
[L2543]              havoc _to_s157;
[L2544]              havoc __ret_0_totalSupply;
[L2545]              havoc _who_s573;
[L2546]              havoc __ret_0_balanceOf;
[L2547]              havoc _to_s632;
[L2548]              havoc _value_s632;
[L2549]              havoc __ret_0_transfer;
[L2550]              havoc _spender_s676;
[L2551]              havoc _value_s676;
[L2552]              havoc __ret_0_approve;
[L2553]              havoc _owner_s692;
[L2554]              havoc _spender_s692;
[L2555]              havoc __ret_0_allowance;
[L2556]              havoc _from_s777;
[L2557]              havoc _to_s777;
[L2558]              havoc _value_s777;
[L2559]              havoc __ret_0_transferFrom;
[L2560]              havoc __ret_0_name;
[L2561]              havoc __ret_0_decimals;
[L2562]              havoc __ret_0_symbol;
[L2563]              havoc __ret_0_maxTotalSupply;
[L2564]              havoc __ret_0_maxSaleSupply;
[L2565]              havoc __ret_0_maxSPSupply;
[L2566]              havoc __ret_0_maxEcoSupply;
[L2567]              havoc __ret_0_maxMktSupply;
[L2568]              havoc __ret_0_maxDevSupply;
[L2569]              havoc __ret_0_maxReserveSupply;
[L2570]              havoc __ret_0_maxTeamSupply;
[L2571]              havoc __ret_0_maxAdvisorSupply;
[L2572]              havoc __ret_0_seedSaleSupply;
[L2573]              havoc __ret_0_privateSaleSupply;
[L2574]              havoc __ret_0_publicSaleSupply;
[L2575]              havoc __ret_0_teamVestingSupply;
[L2576]              havoc __ret_0_teamVestingLockDate;
[L2577]              havoc __ret_0_teamVestingTime;
[L2578]              havoc __ret_0_advisorVestingSupply;
[L2579]              havoc __ret_0_advisorVestingLockDate;
[L2580]              havoc __ret_0_advisorVestingTime;
[L2581]              havoc __ret_0_totalTokenSupply;
[L2582]              havoc __ret_0_tokenIssuedSale;
[L2583]              havoc __ret_0_tokenIssuedSP;
[L2584]              havoc __ret_0_tokenIssuedEco;
[L2585]              havoc __ret_0_tokenIssuedMkt;
[L2586]              havoc __ret_0_tokenIssuedDev;
[L2587]              havoc __ret_0_tokenIssuedRsv;
[L2588]              havoc __ret_0_tokenIssuedTeam;
[L2589]              havoc __ret_0_tokenIssuedAdv;
[L2590]              havoc __ret_0_burnTokenSupply;
[L2591]              havoc arg1677_s0;
[L2592]              havoc __ret_0_balances;
[L2593]              havoc arg1678_s0;
[L2594]              havoc arg1679_s0;
[L2595]              havoc __ret_0_approvals;
[L2596]              havoc arg1680_s0;
[L2597]              havoc __ret_0_tmVestingTimer;
[L2598]              havoc arg1681_s0;
[L2599]              havoc __ret_0_tmVestingBalances;
[L2600]              havoc arg1682_s0;
[L2601]              havoc __ret_0_advVestingTimer;
[L2602]              havoc arg1683_s0;
[L2603]              havoc __ret_0_advVestingBalances;
[L2604]              havoc __ret_0_tokenLock;
[L2605]              havoc __ret_0_saleTime;
[L2606]              havoc __ret_0_endSaleTime;
[L2607]              havoc _to_s831;
[L2608]              havoc _to_s885;
[L2609]              havoc _to_s939;
[L2610]              havoc _to_s993;
[L2611]              havoc _to_s1047;
[L2612]              havoc _to_s1138;
[L2613]              havoc _time_s1138;
[L2614]              havoc _to_s1229;
[L2615]              havoc _time_s1229;
[L2616]              havoc _to_s1277;
[L2617]              havoc _to_s1325;
[L2618]              havoc _to_s1375;
[L2619]              havoc _contract_s1607;
[L2620]              havoc _decimals_s1607;
[L2621]              havoc _value_s1607;
[L2622]              havoc _value_s1663;
[L2623]              havoc tmpNow;
[L2624]              havoc gas;
[L2625]              assume gas > 4000000 && gas <= 8000000;
[L2626]              tmpNow := now;
[L2627]              havoc now;
[L2628]              assume now > tmpNow;
[L2629]              assume msgsender_MSG != null;
[L2630]  COND FALSE  !(choice == 6)
[L2636]  COND FALSE  !(choice == 5)
[L2642]  COND TRUE   choice == 4
[L2643]              gas := gas - 21000;
[L2644]  COND TRUE   gas >= 0
[L2645]              assume _value_s632 >= 0 && _value_s632 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2646]              assume msgvalue_MSG == 0;
[L2647]  CALL        call __ret_0_transfer := transfer~address~uint256_AssembleToken(this, msgsender_MSG, msgvalue_MSG, _to_s632, _value_s632);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == _to_s632 && _value_s632 <= balances_AssembleToken[this][msgsender_MSG]) && _value_s632 >= 0) && _value_s632 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_AssembleToken[this][_to_s632] >= 0) && balances_AssembleToken[this][_to_s632] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_AssembleToken[this][msgsender_MSG] >= 0) && balances_AssembleToken[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_AssembleToken0 := true;
[L2]                 call_transfer_AssembleToken0 := false;
[L2]                 revert := revert_hold;
[L425]               havoc __exception;
[L426]               revert := false;
[L427]   COND TRUE   __exception
[L428]               __tmp__Balance := Balance;
[L429]               __tmp__DType := DType;
[L430]               __tmp__Alloc := Alloc;
[L431]               __tmp__balance_ADDR := balance_ADDR;
[L432]               __tmp__M_Ref_int := M_Ref_int;
[L433]               __tmp__sum_balances0 := sum_balances0;
[L434]               __tmp__alloc_approvals_AssembleToken_lvl0 := alloc_approvals_AssembleToken_lvl0;
[L435]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L436]               __tmp__sum_approvals1 := sum_approvals1;
[L437]               __tmp__M_int_int := M_int_int;
[L438]               __tmp__sum_tmVestingTimer2 := sum_tmVestingTimer2;
[L439]               __tmp__sum_tmVestingBalances3 := sum_tmVestingBalances3;
[L440]               __tmp__sum_advVestingTimer4 := sum_advVestingTimer4;
[L441]               __tmp__sum_advVestingBalances5 := sum_advVestingBalances5;
[L442]               __tmp__Length := Length;
[L443]               __tmp__now := now;
[L444]               __tmp__owner_OwnerHelper := owner_OwnerHelper;
[L445]               __tmp__name_AssembleToken := name_AssembleToken;
[L446]               __tmp__decimals_AssembleToken := decimals_AssembleToken;
[L447]               __tmp__symbol_AssembleToken := symbol_AssembleToken;
[L448]               __tmp__E18_AssembleToken := E18_AssembleToken;
[L449]               __tmp__month_AssembleToken := month_AssembleToken;
[L450]               __tmp__maxTotalSupply_AssembleToken := maxTotalSupply_AssembleToken;
[L451]               __tmp__maxSaleSupply_AssembleToken := maxSaleSupply_AssembleToken;
[L452]               __tmp__maxSPSupply_AssembleToken := maxSPSupply_AssembleToken;
[L453]               __tmp__maxEcoSupply_AssembleToken := maxEcoSupply_AssembleToken;
[L454]               __tmp__maxMktSupply_AssembleToken := maxMktSupply_AssembleToken;
[L455]               __tmp__maxDevSupply_AssembleToken := maxDevSupply_AssembleToken;
[L456]               __tmp__maxReserveSupply_AssembleToken := maxReserveSupply_AssembleToken;
[L457]               __tmp__maxTeamSupply_AssembleToken := maxTeamSupply_AssembleToken;
[L458]               __tmp__maxAdvisorSupply_AssembleToken := maxAdvisorSupply_AssembleToken;
[L459]               __tmp__seedSaleSupply_AssembleToken := seedSaleSupply_AssembleToken;
[L460]               __tmp__privateSaleSupply_AssembleToken := privateSaleSupply_AssembleToken;
[L461]               __tmp__publicSaleSupply_AssembleToken := publicSaleSupply_AssembleToken;
[L462]               __tmp__teamVestingSupply_AssembleToken := teamVestingSupply_AssembleToken;
[L463]               __tmp__teamVestingLockDate_AssembleToken := teamVestingLockDate_AssembleToken;
[L464]               __tmp__teamVestingTime_AssembleToken := teamVestingTime_AssembleToken;
[L465]               __tmp__advisorVestingSupply_AssembleToken := advisorVestingSupply_AssembleToken;
[L466]               __tmp__advisorVestingLockDate_AssembleToken := advisorVestingLockDate_AssembleToken;
[L467]               __tmp__advisorVestingTime_AssembleToken := advisorVestingTime_AssembleToken;
[L468]               __tmp__totalTokenSupply_AssembleToken := totalTokenSupply_AssembleToken;
[L469]               __tmp__tokenIssuedSale_AssembleToken := tokenIssuedSale_AssembleToken;
[L470]               __tmp__tokenIssuedSP_AssembleToken := tokenIssuedSP_AssembleToken;
[L471]               __tmp__tokenIssuedEco_AssembleToken := tokenIssuedEco_AssembleToken;
[L472]               __tmp__tokenIssuedMkt_AssembleToken := tokenIssuedMkt_AssembleToken;
[L473]               __tmp__tokenIssuedDev_AssembleToken := tokenIssuedDev_AssembleToken;
[L474]               __tmp__tokenIssuedRsv_AssembleToken := tokenIssuedRsv_AssembleToken;
[L475]               __tmp__tokenIssuedTeam_AssembleToken := tokenIssuedTeam_AssembleToken;
[L476]               __tmp__tokenIssuedAdv_AssembleToken := tokenIssuedAdv_AssembleToken;
[L477]               __tmp__burnTokenSupply_AssembleToken := burnTokenSupply_AssembleToken;
[L478]               __tmp__balances_AssembleToken := balances_AssembleToken;
[L479]               __tmp__approvals_AssembleToken := approvals_AssembleToken;
[L480]               __tmp__tmVestingTimer_AssembleToken := tmVestingTimer_AssembleToken;
[L481]               __tmp__tmVestingBalances_AssembleToken := tmVestingBalances_AssembleToken;
[L482]               __tmp__advVestingTimer_AssembleToken := advVestingTimer_AssembleToken;
[L483]               __tmp__advVestingBalances_AssembleToken := advVestingBalances_AssembleToken;
[L484]               __tmp__tokenLock_AssembleToken := tokenLock_AssembleToken;
[L485]               __tmp__saleTime_AssembleToken := saleTime_AssembleToken;
[L486]               __tmp__endSaleTime_AssembleToken := endSaleTime_AssembleToken;
[L487]   CALL        call __ret_0_ := transfer~address~uint256_AssembleToken__fail(this, msgsender_MSG, msgvalue_MSG, _to_s632, _value_s632);
[L1396]  CALL        call __var_1 := isTransferable_AssembleToken__fail(this, msgsender_MSG, msgvalue_MSG);
[L1616]  COND TRUE   __tmp__tokenLock_AssembleToken[this] == false
[L1617]              __ret_0_ := true;
[L1396]  RET         call __var_1 := isTransferable_AssembleToken__fail(this, msgsender_MSG, msgvalue_MSG);
[L1397]  COND FALSE  !(revert)
[L1400]  COND TRUE   !(__var_1 == true)
[L1401]              revert := true;
[L487]   RET         call __ret_0_ := transfer~address~uint256_AssembleToken__fail(this, msgsender_MSG, msgvalue_MSG, _to_s632, _value_s632);
[L488]               assume revert || gas < 0;
[L2647]  RET         call __ret_0_transfer := transfer~address~uint256_AssembleToken(this, msgsender_MSG, msgvalue_MSG, _to_s632, _value_s632);
[L2682]  RET         call CorralChoice_AssembleToken(this);

Loop:
[L2682]        assume true;

[2020-11-24 15:36:27,800 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 15:36:27,800 INFO  L82        PathProgramCache]: Analyzing trace with hash 2062597059, now seen corresponding path program 1 times
[2020-11-24 15:36:27,801 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 15:36:27,814 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 15:36:27,862 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 15:36:27,862 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 15:36:27,863 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-24 15:36:27,863 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 15:36:27,863 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-24 15:36:27,863 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-24 15:36:27,863 INFO  L87              Difference]: Start difference. First operand 236 states and 240 transitions. cyclomatic complexity: 5 Second operand 4 states.
[2020-11-24 15:36:27,867 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 15:36:27,867 INFO  L93              Difference]: Finished difference Result 243 states and 247 transitions.
[2020-11-24 15:36:27,867 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-24 15:36:27,868 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 243 states and 247 transitions.
[2020-11-24 15:36:27,879 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 15:36:27,880 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 243 states to 243 states and 247 transitions.
[2020-11-24 15:36:27,880 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 243
[2020-11-24 15:36:27,881 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 243
[2020-11-24 15:36:27,881 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 243 states and 247 transitions.
[2020-11-24 15:36:27,881 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 15:36:27,881 INFO  L728         BuchiCegarLoop]: Abstraction has 243 states and 247 transitions.
[2020-11-24 15:36:27,882 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 243 states and 247 transitions.
[2020-11-24 15:36:27,884 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 243 to 241.
[2020-11-24 15:36:27,884 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 241 states.
[2020-11-24 15:36:27,885 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 241 states to 241 states and 245 transitions.
[2020-11-24 15:36:27,885 INFO  L751         BuchiCegarLoop]: Abstraction has 241 states and 245 transitions.
[2020-11-24 15:36:27,885 INFO  L631         BuchiCegarLoop]: Abstraction has 241 states and 245 transitions.
[2020-11-24 15:36:27,885 INFO  L445         BuchiCegarLoop]: ======== Iteration 6============
[2020-11-24 15:36:27,885 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 241 states and 245 transitions.
[2020-11-24 15:36:27,886 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 15:36:27,886 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 15:36:27,886 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 15:36:27,888 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 15:36:27,888 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L2]                 success_transfer_AssembleToken0 := false;
[L2]                 call_transfer_AssembleToken0 := false;
[L2]     CALL        call main();
[L2677]              assume null == 0;
[L2678]  CALL        call this := FreshRefGenerator__success();
[L1331]              havoc newRef;
[L1332]              assume Alloc[newRef] == false;
[L1333]              Alloc[newRef] := true;
[L1334]              assume newRef != null;
[L2678]  RET         call this := FreshRefGenerator__success();
[L2679]              assume now >= 0;
[L2680]              assume DType[this] == AssembleToken;
[L2681]              assume !revert && gas >= 0;
[L2682]  CALL        call CorralChoice_AssembleToken(this);
[L2539]              havoc msgsender_MSG;
[L2540]              havoc msgvalue_MSG;
[L2541]              havoc choice;
[L2542]              havoc __ret_0_owner;
[L2543]              havoc _to_s157;
[L2544]              havoc __ret_0_totalSupply;
[L2545]              havoc _who_s573;
[L2546]              havoc __ret_0_balanceOf;
[L2547]              havoc _to_s632;
[L2548]              havoc _value_s632;
[L2549]              havoc __ret_0_transfer;
[L2550]              havoc _spender_s676;
[L2551]              havoc _value_s676;
[L2552]              havoc __ret_0_approve;
[L2553]              havoc _owner_s692;
[L2554]              havoc _spender_s692;
[L2555]              havoc __ret_0_allowance;
[L2556]              havoc _from_s777;
[L2557]              havoc _to_s777;
[L2558]              havoc _value_s777;
[L2559]              havoc __ret_0_transferFrom;
[L2560]              havoc __ret_0_name;
[L2561]              havoc __ret_0_decimals;
[L2562]              havoc __ret_0_symbol;
[L2563]              havoc __ret_0_maxTotalSupply;
[L2564]              havoc __ret_0_maxSaleSupply;
[L2565]              havoc __ret_0_maxSPSupply;
[L2566]              havoc __ret_0_maxEcoSupply;
[L2567]              havoc __ret_0_maxMktSupply;
[L2568]              havoc __ret_0_maxDevSupply;
[L2569]              havoc __ret_0_maxReserveSupply;
[L2570]              havoc __ret_0_maxTeamSupply;
[L2571]              havoc __ret_0_maxAdvisorSupply;
[L2572]              havoc __ret_0_seedSaleSupply;
[L2573]              havoc __ret_0_privateSaleSupply;
[L2574]              havoc __ret_0_publicSaleSupply;
[L2575]              havoc __ret_0_teamVestingSupply;
[L2576]              havoc __ret_0_teamVestingLockDate;
[L2577]              havoc __ret_0_teamVestingTime;
[L2578]              havoc __ret_0_advisorVestingSupply;
[L2579]              havoc __ret_0_advisorVestingLockDate;
[L2580]              havoc __ret_0_advisorVestingTime;
[L2581]              havoc __ret_0_totalTokenSupply;
[L2582]              havoc __ret_0_tokenIssuedSale;
[L2583]              havoc __ret_0_tokenIssuedSP;
[L2584]              havoc __ret_0_tokenIssuedEco;
[L2585]              havoc __ret_0_tokenIssuedMkt;
[L2586]              havoc __ret_0_tokenIssuedDev;
[L2587]              havoc __ret_0_tokenIssuedRsv;
[L2588]              havoc __ret_0_tokenIssuedTeam;
[L2589]              havoc __ret_0_tokenIssuedAdv;
[L2590]              havoc __ret_0_burnTokenSupply;
[L2591]              havoc arg1677_s0;
[L2592]              havoc __ret_0_balances;
[L2593]              havoc arg1678_s0;
[L2594]              havoc arg1679_s0;
[L2595]              havoc __ret_0_approvals;
[L2596]              havoc arg1680_s0;
[L2597]              havoc __ret_0_tmVestingTimer;
[L2598]              havoc arg1681_s0;
[L2599]              havoc __ret_0_tmVestingBalances;
[L2600]              havoc arg1682_s0;
[L2601]              havoc __ret_0_advVestingTimer;
[L2602]              havoc arg1683_s0;
[L2603]              havoc __ret_0_advVestingBalances;
[L2604]              havoc __ret_0_tokenLock;
[L2605]              havoc __ret_0_saleTime;
[L2606]              havoc __ret_0_endSaleTime;
[L2607]              havoc _to_s831;
[L2608]              havoc _to_s885;
[L2609]              havoc _to_s939;
[L2610]              havoc _to_s993;
[L2611]              havoc _to_s1047;
[L2612]              havoc _to_s1138;
[L2613]              havoc _time_s1138;
[L2614]              havoc _to_s1229;
[L2615]              havoc _time_s1229;
[L2616]              havoc _to_s1277;
[L2617]              havoc _to_s1325;
[L2618]              havoc _to_s1375;
[L2619]              havoc _contract_s1607;
[L2620]              havoc _decimals_s1607;
[L2621]              havoc _value_s1607;
[L2622]              havoc _value_s1663;
[L2623]              havoc tmpNow;
[L2624]              havoc gas;
[L2625]              assume gas > 4000000 && gas <= 8000000;
[L2626]              tmpNow := now;
[L2627]              havoc now;
[L2628]              assume now > tmpNow;
[L2629]              assume msgsender_MSG != null;
[L2630]  COND FALSE  !(choice == 6)
[L2636]  COND FALSE  !(choice == 5)
[L2642]  COND TRUE   choice == 4
[L2643]              gas := gas - 21000;
[L2644]  COND TRUE   gas >= 0
[L2645]              assume _value_s632 >= 0 && _value_s632 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2646]              assume msgvalue_MSG == 0;
[L2647]  CALL        call __ret_0_transfer := transfer~address~uint256_AssembleToken(this, msgsender_MSG, msgvalue_MSG, _to_s632, _value_s632);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == _to_s632 && _value_s632 <= balances_AssembleToken[this][msgsender_MSG]) && _value_s632 >= 0) && _value_s632 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_AssembleToken[this][_to_s632] >= 0) && balances_AssembleToken[this][_to_s632] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_AssembleToken[this][msgsender_MSG] >= 0) && balances_AssembleToken[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_AssembleToken0 := true;
[L2]                 call_transfer_AssembleToken0 := false;
[L2]                 revert := revert_hold;
[L425]               havoc __exception;
[L426]               revert := false;
[L427]   COND TRUE   __exception
[L428]               __tmp__Balance := Balance;
[L429]               __tmp__DType := DType;
[L430]               __tmp__Alloc := Alloc;
[L431]               __tmp__balance_ADDR := balance_ADDR;
[L432]               __tmp__M_Ref_int := M_Ref_int;
[L433]               __tmp__sum_balances0 := sum_balances0;
[L434]               __tmp__alloc_approvals_AssembleToken_lvl0 := alloc_approvals_AssembleToken_lvl0;
[L435]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L436]               __tmp__sum_approvals1 := sum_approvals1;
[L437]               __tmp__M_int_int := M_int_int;
[L438]               __tmp__sum_tmVestingTimer2 := sum_tmVestingTimer2;
[L439]               __tmp__sum_tmVestingBalances3 := sum_tmVestingBalances3;
[L440]               __tmp__sum_advVestingTimer4 := sum_advVestingTimer4;
[L441]               __tmp__sum_advVestingBalances5 := sum_advVestingBalances5;
[L442]               __tmp__Length := Length;
[L443]               __tmp__now := now;
[L444]               __tmp__owner_OwnerHelper := owner_OwnerHelper;
[L445]               __tmp__name_AssembleToken := name_AssembleToken;
[L446]               __tmp__decimals_AssembleToken := decimals_AssembleToken;
[L447]               __tmp__symbol_AssembleToken := symbol_AssembleToken;
[L448]               __tmp__E18_AssembleToken := E18_AssembleToken;
[L449]               __tmp__month_AssembleToken := month_AssembleToken;
[L450]               __tmp__maxTotalSupply_AssembleToken := maxTotalSupply_AssembleToken;
[L451]               __tmp__maxSaleSupply_AssembleToken := maxSaleSupply_AssembleToken;
[L452]               __tmp__maxSPSupply_AssembleToken := maxSPSupply_AssembleToken;
[L453]               __tmp__maxEcoSupply_AssembleToken := maxEcoSupply_AssembleToken;
[L454]               __tmp__maxMktSupply_AssembleToken := maxMktSupply_AssembleToken;
[L455]               __tmp__maxDevSupply_AssembleToken := maxDevSupply_AssembleToken;
[L456]               __tmp__maxReserveSupply_AssembleToken := maxReserveSupply_AssembleToken;
[L457]               __tmp__maxTeamSupply_AssembleToken := maxTeamSupply_AssembleToken;
[L458]               __tmp__maxAdvisorSupply_AssembleToken := maxAdvisorSupply_AssembleToken;
[L459]               __tmp__seedSaleSupply_AssembleToken := seedSaleSupply_AssembleToken;
[L460]               __tmp__privateSaleSupply_AssembleToken := privateSaleSupply_AssembleToken;
[L461]               __tmp__publicSaleSupply_AssembleToken := publicSaleSupply_AssembleToken;
[L462]               __tmp__teamVestingSupply_AssembleToken := teamVestingSupply_AssembleToken;
[L463]               __tmp__teamVestingLockDate_AssembleToken := teamVestingLockDate_AssembleToken;
[L464]               __tmp__teamVestingTime_AssembleToken := teamVestingTime_AssembleToken;
[L465]               __tmp__advisorVestingSupply_AssembleToken := advisorVestingSupply_AssembleToken;
[L466]               __tmp__advisorVestingLockDate_AssembleToken := advisorVestingLockDate_AssembleToken;
[L467]               __tmp__advisorVestingTime_AssembleToken := advisorVestingTime_AssembleToken;
[L468]               __tmp__totalTokenSupply_AssembleToken := totalTokenSupply_AssembleToken;
[L469]               __tmp__tokenIssuedSale_AssembleToken := tokenIssuedSale_AssembleToken;
[L470]               __tmp__tokenIssuedSP_AssembleToken := tokenIssuedSP_AssembleToken;
[L471]               __tmp__tokenIssuedEco_AssembleToken := tokenIssuedEco_AssembleToken;
[L472]               __tmp__tokenIssuedMkt_AssembleToken := tokenIssuedMkt_AssembleToken;
[L473]               __tmp__tokenIssuedDev_AssembleToken := tokenIssuedDev_AssembleToken;
[L474]               __tmp__tokenIssuedRsv_AssembleToken := tokenIssuedRsv_AssembleToken;
[L475]               __tmp__tokenIssuedTeam_AssembleToken := tokenIssuedTeam_AssembleToken;
[L476]               __tmp__tokenIssuedAdv_AssembleToken := tokenIssuedAdv_AssembleToken;
[L477]               __tmp__burnTokenSupply_AssembleToken := burnTokenSupply_AssembleToken;
[L478]               __tmp__balances_AssembleToken := balances_AssembleToken;
[L479]               __tmp__approvals_AssembleToken := approvals_AssembleToken;
[L480]               __tmp__tmVestingTimer_AssembleToken := tmVestingTimer_AssembleToken;
[L481]               __tmp__tmVestingBalances_AssembleToken := tmVestingBalances_AssembleToken;
[L482]               __tmp__advVestingTimer_AssembleToken := advVestingTimer_AssembleToken;
[L483]               __tmp__advVestingBalances_AssembleToken := advVestingBalances_AssembleToken;
[L484]               __tmp__tokenLock_AssembleToken := tokenLock_AssembleToken;
[L485]               __tmp__saleTime_AssembleToken := saleTime_AssembleToken;
[L486]               __tmp__endSaleTime_AssembleToken := endSaleTime_AssembleToken;
[L487]   CALL        call __ret_0_ := transfer~address~uint256_AssembleToken__fail(this, msgsender_MSG, msgvalue_MSG, _to_s632, _value_s632);
[L1396]  CALL        call __var_1 := isTransferable_AssembleToken__fail(this, msgsender_MSG, msgvalue_MSG);
[L1616]  COND TRUE   __tmp__tokenLock_AssembleToken[this] == false
[L1617]              __ret_0_ := true;
[L1396]  RET         call __var_1 := isTransferable_AssembleToken__fail(this, msgsender_MSG, msgvalue_MSG);
[L1397]  COND FALSE  !(revert)
[L1400]  COND FALSE  !(!(__var_1 == true))
[L1404]  COND TRUE   !(__tmp__balances_AssembleToken[this][msgsender_MSG] >= _value_s632)
[L1405]              revert := true;
[L487]   RET         call __ret_0_ := transfer~address~uint256_AssembleToken__fail(this, msgsender_MSG, msgvalue_MSG, _to_s632, _value_s632);
[L488]               assume revert || gas < 0;
[L2647]  RET         call __ret_0_transfer := transfer~address~uint256_AssembleToken(this, msgsender_MSG, msgvalue_MSG, _to_s632, _value_s632);
[L2682]  RET         call CorralChoice_AssembleToken(this);

Loop:
[L2682]        assume true;

[2020-11-24 15:36:27,892 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 15:36:27,893 INFO  L82        PathProgramCache]: Analyzing trace with hash 568576364, now seen corresponding path program 1 times
[2020-11-24 15:36:27,893 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 15:36:27,905 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 15:36:27,956 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 15:36:27,956 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 15:36:27,957 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [6] imperfect sequences [] total 6
[2020-11-24 15:36:27,957 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 15:36:27,957 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 6 interpolants.
[2020-11-24 15:36:27,957 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=9, Invalid=21, Unknown=0, NotChecked=0, Total=30
[2020-11-24 15:36:27,957 INFO  L87              Difference]: Start difference. First operand 241 states and 245 transitions. cyclomatic complexity: 5 Second operand 6 states.
[2020-11-24 15:36:27,991 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 15:36:27,991 INFO  L93              Difference]: Finished difference Result 249 states and 252 transitions.
[2020-11-24 15:36:27,991 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 7 states. 
[2020-11-24 15:36:27,991 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 249 states and 252 transitions.
[2020-11-24 15:36:27,992 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 15:36:27,993 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 249 states to 246 states and 249 transitions.
[2020-11-24 15:36:27,994 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 246
[2020-11-24 15:36:27,994 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 246
[2020-11-24 15:36:27,994 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 246 states and 249 transitions.
[2020-11-24 15:36:27,994 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 15:36:27,994 INFO  L728         BuchiCegarLoop]: Abstraction has 246 states and 249 transitions.
[2020-11-24 15:36:27,995 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 246 states and 249 transitions.
[2020-11-24 15:36:27,997 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 246 to 240.
[2020-11-24 15:36:27,997 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 240 states.
[2020-11-24 15:36:27,997 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 240 states to 240 states and 243 transitions.
[2020-11-24 15:36:27,997 INFO  L751         BuchiCegarLoop]: Abstraction has 240 states and 243 transitions.
[2020-11-24 15:36:27,997 INFO  L631         BuchiCegarLoop]: Abstraction has 240 states and 243 transitions.
[2020-11-24 15:36:27,997 INFO  L445         BuchiCegarLoop]: ======== Iteration 7============
[2020-11-24 15:36:27,998 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 240 states and 243 transitions.
[2020-11-24 15:36:27,998 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 15:36:27,999 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 15:36:27,999 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 15:36:28,000 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 15:36:28,000 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L2]                 success_transfer_AssembleToken0 := false;
[L2]                 call_transfer_AssembleToken0 := false;
[L2]     CALL        call main();
[L2677]              assume null == 0;
[L2678]  CALL        call this := FreshRefGenerator__success();
[L1331]              havoc newRef;
[L1332]              assume Alloc[newRef] == false;
[L1333]              Alloc[newRef] := true;
[L1334]              assume newRef != null;
[L2678]  RET         call this := FreshRefGenerator__success();
[L2679]              assume now >= 0;
[L2680]              assume DType[this] == AssembleToken;
[L2681]              assume !revert && gas >= 0;
[L2682]  CALL        call CorralChoice_AssembleToken(this);
[L2539]              havoc msgsender_MSG;
[L2540]              havoc msgvalue_MSG;
[L2541]              havoc choice;
[L2542]              havoc __ret_0_owner;
[L2543]              havoc _to_s157;
[L2544]              havoc __ret_0_totalSupply;
[L2545]              havoc _who_s573;
[L2546]              havoc __ret_0_balanceOf;
[L2547]              havoc _to_s632;
[L2548]              havoc _value_s632;
[L2549]              havoc __ret_0_transfer;
[L2550]              havoc _spender_s676;
[L2551]              havoc _value_s676;
[L2552]              havoc __ret_0_approve;
[L2553]              havoc _owner_s692;
[L2554]              havoc _spender_s692;
[L2555]              havoc __ret_0_allowance;
[L2556]              havoc _from_s777;
[L2557]              havoc _to_s777;
[L2558]              havoc _value_s777;
[L2559]              havoc __ret_0_transferFrom;
[L2560]              havoc __ret_0_name;
[L2561]              havoc __ret_0_decimals;
[L2562]              havoc __ret_0_symbol;
[L2563]              havoc __ret_0_maxTotalSupply;
[L2564]              havoc __ret_0_maxSaleSupply;
[L2565]              havoc __ret_0_maxSPSupply;
[L2566]              havoc __ret_0_maxEcoSupply;
[L2567]              havoc __ret_0_maxMktSupply;
[L2568]              havoc __ret_0_maxDevSupply;
[L2569]              havoc __ret_0_maxReserveSupply;
[L2570]              havoc __ret_0_maxTeamSupply;
[L2571]              havoc __ret_0_maxAdvisorSupply;
[L2572]              havoc __ret_0_seedSaleSupply;
[L2573]              havoc __ret_0_privateSaleSupply;
[L2574]              havoc __ret_0_publicSaleSupply;
[L2575]              havoc __ret_0_teamVestingSupply;
[L2576]              havoc __ret_0_teamVestingLockDate;
[L2577]              havoc __ret_0_teamVestingTime;
[L2578]              havoc __ret_0_advisorVestingSupply;
[L2579]              havoc __ret_0_advisorVestingLockDate;
[L2580]              havoc __ret_0_advisorVestingTime;
[L2581]              havoc __ret_0_totalTokenSupply;
[L2582]              havoc __ret_0_tokenIssuedSale;
[L2583]              havoc __ret_0_tokenIssuedSP;
[L2584]              havoc __ret_0_tokenIssuedEco;
[L2585]              havoc __ret_0_tokenIssuedMkt;
[L2586]              havoc __ret_0_tokenIssuedDev;
[L2587]              havoc __ret_0_tokenIssuedRsv;
[L2588]              havoc __ret_0_tokenIssuedTeam;
[L2589]              havoc __ret_0_tokenIssuedAdv;
[L2590]              havoc __ret_0_burnTokenSupply;
[L2591]              havoc arg1677_s0;
[L2592]              havoc __ret_0_balances;
[L2593]              havoc arg1678_s0;
[L2594]              havoc arg1679_s0;
[L2595]              havoc __ret_0_approvals;
[L2596]              havoc arg1680_s0;
[L2597]              havoc __ret_0_tmVestingTimer;
[L2598]              havoc arg1681_s0;
[L2599]              havoc __ret_0_tmVestingBalances;
[L2600]              havoc arg1682_s0;
[L2601]              havoc __ret_0_advVestingTimer;
[L2602]              havoc arg1683_s0;
[L2603]              havoc __ret_0_advVestingBalances;
[L2604]              havoc __ret_0_tokenLock;
[L2605]              havoc __ret_0_saleTime;
[L2606]              havoc __ret_0_endSaleTime;
[L2607]              havoc _to_s831;
[L2608]              havoc _to_s885;
[L2609]              havoc _to_s939;
[L2610]              havoc _to_s993;
[L2611]              havoc _to_s1047;
[L2612]              havoc _to_s1138;
[L2613]              havoc _time_s1138;
[L2614]              havoc _to_s1229;
[L2615]              havoc _time_s1229;
[L2616]              havoc _to_s1277;
[L2617]              havoc _to_s1325;
[L2618]              havoc _to_s1375;
[L2619]              havoc _contract_s1607;
[L2620]              havoc _decimals_s1607;
[L2621]              havoc _value_s1607;
[L2622]              havoc _value_s1663;
[L2623]              havoc tmpNow;
[L2624]              havoc gas;
[L2625]              assume gas > 4000000 && gas <= 8000000;
[L2626]              tmpNow := now;
[L2627]              havoc now;
[L2628]              assume now > tmpNow;
[L2629]              assume msgsender_MSG != null;
[L2630]  COND FALSE  !(choice == 6)
[L2636]  COND FALSE  !(choice == 5)
[L2642]  COND TRUE   choice == 4
[L2643]              gas := gas - 21000;
[L2644]  COND TRUE   gas >= 0
[L2645]              assume _value_s632 >= 0 && _value_s632 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2646]              assume msgvalue_MSG == 0;
[L2647]  CALL        call __ret_0_transfer := transfer~address~uint256_AssembleToken(this, msgsender_MSG, msgvalue_MSG, _to_s632, _value_s632);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == _to_s632 && _value_s632 <= balances_AssembleToken[this][msgsender_MSG]) && _value_s632 >= 0) && _value_s632 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_AssembleToken[this][_to_s632] >= 0) && balances_AssembleToken[this][_to_s632] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_AssembleToken[this][msgsender_MSG] >= 0) && balances_AssembleToken[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_AssembleToken0 := true;
[L2]                 call_transfer_AssembleToken0 := false;
[L2]                 revert := revert_hold;
[L425]               havoc __exception;
[L426]               revert := false;
[L427]   COND TRUE   __exception
[L428]               __tmp__Balance := Balance;
[L429]               __tmp__DType := DType;
[L430]               __tmp__Alloc := Alloc;
[L431]               __tmp__balance_ADDR := balance_ADDR;
[L432]               __tmp__M_Ref_int := M_Ref_int;
[L433]               __tmp__sum_balances0 := sum_balances0;
[L434]               __tmp__alloc_approvals_AssembleToken_lvl0 := alloc_approvals_AssembleToken_lvl0;
[L435]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L436]               __tmp__sum_approvals1 := sum_approvals1;
[L437]               __tmp__M_int_int := M_int_int;
[L438]               __tmp__sum_tmVestingTimer2 := sum_tmVestingTimer2;
[L439]               __tmp__sum_tmVestingBalances3 := sum_tmVestingBalances3;
[L440]               __tmp__sum_advVestingTimer4 := sum_advVestingTimer4;
[L441]               __tmp__sum_advVestingBalances5 := sum_advVestingBalances5;
[L442]               __tmp__Length := Length;
[L443]               __tmp__now := now;
[L444]               __tmp__owner_OwnerHelper := owner_OwnerHelper;
[L445]               __tmp__name_AssembleToken := name_AssembleToken;
[L446]               __tmp__decimals_AssembleToken := decimals_AssembleToken;
[L447]               __tmp__symbol_AssembleToken := symbol_AssembleToken;
[L448]               __tmp__E18_AssembleToken := E18_AssembleToken;
[L449]               __tmp__month_AssembleToken := month_AssembleToken;
[L450]               __tmp__maxTotalSupply_AssembleToken := maxTotalSupply_AssembleToken;
[L451]               __tmp__maxSaleSupply_AssembleToken := maxSaleSupply_AssembleToken;
[L452]               __tmp__maxSPSupply_AssembleToken := maxSPSupply_AssembleToken;
[L453]               __tmp__maxEcoSupply_AssembleToken := maxEcoSupply_AssembleToken;
[L454]               __tmp__maxMktSupply_AssembleToken := maxMktSupply_AssembleToken;
[L455]               __tmp__maxDevSupply_AssembleToken := maxDevSupply_AssembleToken;
[L456]               __tmp__maxReserveSupply_AssembleToken := maxReserveSupply_AssembleToken;
[L457]               __tmp__maxTeamSupply_AssembleToken := maxTeamSupply_AssembleToken;
[L458]               __tmp__maxAdvisorSupply_AssembleToken := maxAdvisorSupply_AssembleToken;
[L459]               __tmp__seedSaleSupply_AssembleToken := seedSaleSupply_AssembleToken;
[L460]               __tmp__privateSaleSupply_AssembleToken := privateSaleSupply_AssembleToken;
[L461]               __tmp__publicSaleSupply_AssembleToken := publicSaleSupply_AssembleToken;
[L462]               __tmp__teamVestingSupply_AssembleToken := teamVestingSupply_AssembleToken;
[L463]               __tmp__teamVestingLockDate_AssembleToken := teamVestingLockDate_AssembleToken;
[L464]               __tmp__teamVestingTime_AssembleToken := teamVestingTime_AssembleToken;
[L465]               __tmp__advisorVestingSupply_AssembleToken := advisorVestingSupply_AssembleToken;
[L466]               __tmp__advisorVestingLockDate_AssembleToken := advisorVestingLockDate_AssembleToken;
[L467]               __tmp__advisorVestingTime_AssembleToken := advisorVestingTime_AssembleToken;
[L468]               __tmp__totalTokenSupply_AssembleToken := totalTokenSupply_AssembleToken;
[L469]               __tmp__tokenIssuedSale_AssembleToken := tokenIssuedSale_AssembleToken;
[L470]               __tmp__tokenIssuedSP_AssembleToken := tokenIssuedSP_AssembleToken;
[L471]               __tmp__tokenIssuedEco_AssembleToken := tokenIssuedEco_AssembleToken;
[L472]               __tmp__tokenIssuedMkt_AssembleToken := tokenIssuedMkt_AssembleToken;
[L473]               __tmp__tokenIssuedDev_AssembleToken := tokenIssuedDev_AssembleToken;
[L474]               __tmp__tokenIssuedRsv_AssembleToken := tokenIssuedRsv_AssembleToken;
[L475]               __tmp__tokenIssuedTeam_AssembleToken := tokenIssuedTeam_AssembleToken;
[L476]               __tmp__tokenIssuedAdv_AssembleToken := tokenIssuedAdv_AssembleToken;
[L477]               __tmp__burnTokenSupply_AssembleToken := burnTokenSupply_AssembleToken;
[L478]               __tmp__balances_AssembleToken := balances_AssembleToken;
[L479]               __tmp__approvals_AssembleToken := approvals_AssembleToken;
[L480]               __tmp__tmVestingTimer_AssembleToken := tmVestingTimer_AssembleToken;
[L481]               __tmp__tmVestingBalances_AssembleToken := tmVestingBalances_AssembleToken;
[L482]               __tmp__advVestingTimer_AssembleToken := advVestingTimer_AssembleToken;
[L483]               __tmp__advVestingBalances_AssembleToken := advVestingBalances_AssembleToken;
[L484]               __tmp__tokenLock_AssembleToken := tokenLock_AssembleToken;
[L485]               __tmp__saleTime_AssembleToken := saleTime_AssembleToken;
[L486]               __tmp__endSaleTime_AssembleToken := endSaleTime_AssembleToken;
[L487]   CALL        call __ret_0_ := transfer~address~uint256_AssembleToken__fail(this, msgsender_MSG, msgvalue_MSG, _to_s632, _value_s632);
[L1396]  CALL        call __var_1 := isTransferable_AssembleToken__fail(this, msgsender_MSG, msgvalue_MSG);
[L1616]  COND FALSE  !(__tmp__tokenLock_AssembleToken[this] == false)
[L1619]  COND FALSE  !(msgsender_MSG == __tmp__owner_OwnerHelper[this])
[L1623]              __ret_0_ := false;
[L1396]  RET         call __var_1 := isTransferable_AssembleToken__fail(this, msgsender_MSG, msgvalue_MSG);
[L1397]  COND FALSE  !(revert)
[L1400]  COND TRUE   !(__var_1 == true)
[L1401]              revert := true;
[L487]   RET         call __ret_0_ := transfer~address~uint256_AssembleToken__fail(this, msgsender_MSG, msgvalue_MSG, _to_s632, _value_s632);
[L488]               assume revert || gas < 0;
[L2647]  RET         call __ret_0_transfer := transfer~address~uint256_AssembleToken(this, msgsender_MSG, msgvalue_MSG, _to_s632, _value_s632);
[L2682]  RET         call CorralChoice_AssembleToken(this);

Loop:
[L2682]        assume true;

[2020-11-24 15:36:28,002 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 15:36:28,002 INFO  L82        PathProgramCache]: Analyzing trace with hash -827516648, now seen corresponding path program 1 times
[2020-11-24 15:36:28,003 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 15:36:28,014 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 15:36:28,027 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 15:36:28,096 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 15:36:28,097 INFO  L82        PathProgramCache]: Analyzing trace with hash 8784, now seen corresponding path program 1 times
[2020-11-24 15:36:28,097 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 15:36:28,098 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 15:36:28,098 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 15:36:28,099 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 15:36:28,100 INFO  L82        PathProgramCache]: Analyzing trace with hash 116796441, now seen corresponding path program 1 times
[2020-11-24 15:36:28,100 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 15:36:28,111 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 15:36:28,123 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
[2020-11-24 15:36:28,406 WARN  L188               SmtUtils]: Spent 183.00 ms on a formula simplification. DAG size of input: 256 DAG size of output: 247
Garbage collection #1: 97 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 3019 to 6037
Garbage collection #1: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #2: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #3: 317 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 317 to 631
Garbage collection #4: 631 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 631 to 1259
Garbage collection #5: 1259 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1259 to 2503
Garbage collection #6: 2503 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2503 to 5003
Garbage collection #7: 5003 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 5003 to 9973
Garbage collection #8: 9973 nodes / 0 free / 0.003s / 0.004s total
Resizing node table from 9973 to 19937
[2020-11-24 15:36:28,572 WARN  L188               SmtUtils]: Spent 139.00 ms on a formula simplification. DAG size of input: 210 DAG size of output: 206
[2020-11-24 15:36:28,900 WARN  L188               SmtUtils]: Spent 325.00 ms on a formula simplification that was a NOOP. DAG size: 546
Garbage collection #1: 211 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 211 to 421
Garbage collection #2: 421 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 421 to 839
Garbage collection #3: 839 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 839 to 1669
Garbage collection #4: 1669 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1669 to 3331
Garbage collection #5: 3331 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3331 to 6661
Garbage collection #6: 6661 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 6661 to 13313
Garbage collection #7: 13313 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 13313 to 26597
[2020-11-24 15:36:29,287 WARN  L188               SmtUtils]: Spent 361.00 ms on a formula simplification that was a NOOP. DAG size: 420
[2020-11-24 15:36:30,179 WARN  L188               SmtUtils]: Spent 888.00 ms on a formula simplification. DAG size of input: 450 DAG size of output: 441
Garbage collection #1: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #2: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #3: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #4: 1237 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1237 to 2473
Garbage collection #5: 2473 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2473 to 4943
Garbage collection #6: 4943 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4943 to 9883
Garbage collection #7: 9883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 9883 to 19763
Garbage collection #8: 19763 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19763 to 39521
Garbage collection #1: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #2: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #3: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #4: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #5: 1327 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1327 to 2647
Garbage collection #6: 2647 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2647 to 5281
Garbage collection #7: 5281 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 5281 to 10559
[2020-11-24 15:36:30,334 WARN  L188               SmtUtils]: Spent 128.00 ms on a formula simplification. DAG size of input: 232 DAG size of output: 228
[2020-11-24 15:36:30,651 WARN  L188               SmtUtils]: Spent 314.00 ms on a formula simplification that was a NOOP. DAG size: 569
Garbage collection #1: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #2: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #3: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #4: 1759 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1759 to 3517
Garbage collection #5: 3517 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3517 to 7027
Garbage collection #6: 7027 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 7027 to 14051
Garbage collection #7: 14051 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 14051 to 28099
[2020-11-24 15:36:30,878 WARN  L188               SmtUtils]: Spent 215.00 ms on a formula simplification that was a NOOP. DAG size: 434
[2020-11-24 15:36:31,272 WARN  L188               SmtUtils]: Spent 392.00 ms on a formula simplification. DAG size of input: 454 DAG size of output: 451
Garbage collection #1: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #2: 317 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 317 to 631
Garbage collection #3: 631 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 631 to 1259
Garbage collection #4: 1259 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1259 to 2503
Garbage collection #5: 2503 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2503 to 5003
Garbage collection #6: 5003 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 5003 to 9973
Garbage collection #7: 9973 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 9973 to 19937
Garbage collection #1: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #2: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #3: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #4: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #5: 1327 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1327 to 2647
Garbage collection #6: 2647 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2647 to 5281
[2020-11-24 15:36:31,467 WARN  L188               SmtUtils]: Spent 112.00 ms on a formula simplification that was a NOOP. DAG size: 435
Garbage collection #1: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #2: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #3: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #4: 1237 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1237 to 2473
Garbage collection #5: 2473 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2473 to 4943
Garbage collection #6: 4943 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4943 to 9883
Garbage collection #7: 9883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 9883 to 19763
Garbage collection #1: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #2: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #3: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #4: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #5: 1327 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1327 to 2647
Garbage collection #6: 2647 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2647 to 5281
[2020-11-24 15:36:31,758 WARN  L188               SmtUtils]: Spent 235.00 ms on a formula simplification. DAG size of input: 437 DAG size of output: 436
Garbage collection #1: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #2: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #3: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #4: 1237 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1237 to 2473
Garbage collection #5: 2473 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2473 to 4943
Garbage collection #6: 4943 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4943 to 9883
Garbage collection #7: 9883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 9883 to 19763
Garbage collection #1: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #2: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #3: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #4: 1237 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1237 to 2473
Garbage collection #5: 2473 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2473 to 4943
Garbage collection #6: 4943 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 4943 to 9883
Garbage collection #7: 9883 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 9883 to 19763
[2020-11-24 15:36:31,877 WARN  L188               SmtUtils]: Spent 115.00 ms on a formula simplification that was a NOOP. DAG size: 432
[2020-11-24 15:36:31,889 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 15:36:31,894 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 24.11 03:36:31 BasicIcfg
[2020-11-24 15:36:31,894 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-24 15:36:31,894 INFO  L168              Benchmark]: Toolchain (without parser) took 7354.53 ms. Allocated memory was 1.0 GB in the beginning and 1.7 GB in the end (delta: 664.3 MB). Free memory was 940.6 MB in the beginning and 843.9 MB in the end (delta: 96.7 MB). Peak memory consumption was 840.0 MB. Max. memory is 15.3 GB.
[2020-11-24 15:36:31,895 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.16 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-24 15:36:31,895 INFO  L168              Benchmark]: Boogie Preprocessor took 87.58 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 935.2 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-24 15:36:31,895 INFO  L168              Benchmark]: UtopiaSpecLang took 69.04 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 924.5 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
[2020-11-24 15:36:31,895 INFO  L168              Benchmark]: Boogie Printer took 11.70 ms. Allocated memory is still 1.0 GB. Free memory is still 924.5 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-24 15:36:31,895 INFO  L168              Benchmark]: RCFGBuilder took 562.66 ms. Allocated memory is still 1.0 GB. Free memory was 924.5 MB in the beginning and 865.4 MB in the end (delta: 59.1 MB). Peak memory consumption was 59.1 MB. Max. memory is 15.3 GB.
[2020-11-24 15:36:31,896 INFO  L168              Benchmark]: UtopiaLTL2Aut took 38.41 ms. Allocated memory is still 1.0 GB. Free memory was 865.4 MB in the beginning and 856.5 MB in the end (delta: 8.9 MB). Peak memory consumption was 8.9 MB. Max. memory is 15.3 GB.
[2020-11-24 15:36:31,896 INFO  L168              Benchmark]: BÃ¼chi Program Product took 958.67 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 56.6 MB). Free memory was 856.5 MB in the beginning and 887.1 MB in the end (delta: -30.6 MB). Peak memory consumption was 141.6 MB. Max. memory is 15.3 GB.
[2020-11-24 15:36:31,896 INFO  L168              Benchmark]: BlockEncodingV2 took 84.81 ms. Allocated memory is still 1.1 GB. Free memory was 887.1 MB in the beginning and 840.0 MB in the end (delta: 47.0 MB). Peak memory consumption was 47.0 MB. Max. memory is 15.3 GB.
[2020-11-24 15:36:31,897 INFO  L168              Benchmark]: BuchiAutomizer took 5538.76 ms. Allocated memory was 1.1 GB in the beginning and 1.7 GB in the end (delta: 607.6 MB). Free memory was 836.6 MB in the beginning and 843.9 MB in the end (delta: -7.3 MB). Peak memory consumption was 679.4 MB. Max. memory is 15.3 GB.
[2020-11-24 15:36:31,899 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    2004 locations, 3276 edges
  - StatisticsResult: Encoded RCFG
    1978 locations, 3215 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.16 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 87.58 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 935.2 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 69.04 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 924.5 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 11.70 ms. Allocated memory is still 1.0 GB. Free memory is still 924.5 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * RCFGBuilder took 562.66 ms. Allocated memory is still 1.0 GB. Free memory was 924.5 MB in the beginning and 865.4 MB in the end (delta: 59.1 MB). Peak memory consumption was 59.1 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 38.41 ms. Allocated memory is still 1.0 GB. Free memory was 865.4 MB in the beginning and 856.5 MB in the end (delta: 8.9 MB). Peak memory consumption was 8.9 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 958.67 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 56.6 MB). Free memory was 856.5 MB in the beginning and 887.1 MB in the end (delta: -30.6 MB). Peak memory consumption was 141.6 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 84.81 ms. Allocated memory is still 1.1 GB. Free memory was 887.1 MB in the beginning and 840.0 MB in the end (delta: 47.0 MB). Peak memory consumption was 47.0 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 5538.76 ms. Allocated memory was 1.1 GB in the beginning and 1.7 GB in the end (delta: 607.6 MB). Free memory was 836.6 MB in the beginning and 843.9 MB in the end (delta: -7.3 MB). Peak memory consumption was 679.4 MB. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    906 locations, 1039 edges
  - StatisticsResult: BuchiProgram size
    2004 locations, 3276 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 6 terminating modules (6 trivial, 0 deterministic, 0 nondeterministic) and one nonterminating remainder module.6 modules have a trivial ranking function, the largest among these consists of 13 locations. The remainder module has 240 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 5.5s and 7 iterations.  TraceHistogramMax:1. Analysis of lassos took 4.5s. Construction of modules took 0.3s. BÃ¼chi inclusion checks took 0.3s. Highest rank in rank-based complementation 0. Minimization of det autom 6. Minimization of nondet autom 0. Automata minimization 0.0s AutomataMinimizationTime, 6 MinimizatonAttempts, 30 StatesRemovedByMinimization, 4 NontrivialMinimizations. Non-live state removal took 0.0s Buchi closure took 0.0s. Biggest automaton had 286 states and ocurred in iteration 1.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 2341 SDtfs, 1843 SDslu, 3205 SDs, 0 SdLazy, 1060 SolverSat, 802 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 0.3s Time	LassoAnalysisResults: nont1 unkn0 SFLI0 SFLT0 conc0 concLT0 SILN0 SILU6 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - TransactionCounterexample: Violation of LTL property LTL
    Found an infinite, lasso-shaped execution that violates the LTL property LTL.
Stem:
AssembleToken(5).transfer~address~uint256.gas(3979001)({from : 4, _to : 4, _value : 0});
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == _to_s632 && _value_s632 <= balances_AssembleToken[this][msgsender_MSG]) && _value_s632 >= 0) && _value_s632 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_AssembleToken[this][_to_s632] >= 0) && balances_AssembleToken[this][_to_s632] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_AssembleToken[this][msgsender_MSG] >= 0) && balances_AssembleToken[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_AssembleToken0 := true;
[L2]                 call_transfer_AssembleToken0 := false;
[L2]                 revert := revert_hold;
[L425]               havoc __exception;
[L426]               revert := false;
[L427]   COND TRUE   __exception
[L428]               __tmp__Balance := Balance;
[L429]               __tmp__DType := DType;
[L430]               __tmp__Alloc := Alloc;
[L431]               __tmp__balance_ADDR := balance_ADDR;
[L432]               __tmp__M_Ref_int := M_Ref_int;
[L433]               __tmp__sum_balances0 := sum_balances0;
[L434]               __tmp__alloc_approvals_AssembleToken_lvl0 := alloc_approvals_AssembleToken_lvl0;
[L435]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L436]               __tmp__sum_approvals1 := sum_approvals1;
[L437]               __tmp__M_int_int := M_int_int;
[L438]               __tmp__sum_tmVestingTimer2 := sum_tmVestingTimer2;
[L439]               __tmp__sum_tmVestingBalances3 := sum_tmVestingBalances3;
[L440]               __tmp__sum_advVestingTimer4 := sum_advVestingTimer4;
[L441]               __tmp__sum_advVestingBalances5 := sum_advVestingBalances5;
[L442]               __tmp__Length := Length;
[L443]               __tmp__now := now;
[L444]               __tmp__owner_OwnerHelper := owner_OwnerHelper;
[L445]               __tmp__name_AssembleToken := name_AssembleToken;
[L446]               __tmp__decimals_AssembleToken := decimals_AssembleToken;
[L447]               __tmp__symbol_AssembleToken := symbol_AssembleToken;
[L448]               __tmp__E18_AssembleToken := E18_AssembleToken;
[L449]               __tmp__month_AssembleToken := month_AssembleToken;
[L450]               __tmp__maxTotalSupply_AssembleToken := maxTotalSupply_AssembleToken;
[L451]               __tmp__maxSaleSupply_AssembleToken := maxSaleSupply_AssembleToken;
[L452]               __tmp__maxSPSupply_AssembleToken := maxSPSupply_AssembleToken;
[L453]               __tmp__maxEcoSupply_AssembleToken := maxEcoSupply_AssembleToken;
[L454]               __tmp__maxMktSupply_AssembleToken := maxMktSupply_AssembleToken;
[L455]               __tmp__maxDevSupply_AssembleToken := maxDevSupply_AssembleToken;
[L456]               __tmp__maxReserveSupply_AssembleToken := maxReserveSupply_AssembleToken;
[L457]               __tmp__maxTeamSupply_AssembleToken := maxTeamSupply_AssembleToken;
[L458]               __tmp__maxAdvisorSupply_AssembleToken := maxAdvisorSupply_AssembleToken;
[L459]               __tmp__seedSaleSupply_AssembleToken := seedSaleSupply_AssembleToken;
[L460]               __tmp__privateSaleSupply_AssembleToken := privateSaleSupply_AssembleToken;
[L461]               __tmp__publicSaleSupply_AssembleToken := publicSaleSupply_AssembleToken;
[L462]               __tmp__teamVestingSupply_AssembleToken := teamVestingSupply_AssembleToken;
[L463]               __tmp__teamVestingLockDate_AssembleToken := teamVestingLockDate_AssembleToken;
[L464]               __tmp__teamVestingTime_AssembleToken := teamVestingTime_AssembleToken;
[L465]               __tmp__advisorVestingSupply_AssembleToken := advisorVestingSupply_AssembleToken;
[L466]               __tmp__advisorVestingLockDate_AssembleToken := advisorVestingLockDate_AssembleToken;
[L467]               __tmp__advisorVestingTime_AssembleToken := advisorVestingTime_AssembleToken;
[L468]               __tmp__totalTokenSupply_AssembleToken := totalTokenSupply_AssembleToken;
[L469]               __tmp__tokenIssuedSale_AssembleToken := tokenIssuedSale_AssembleToken;
[L470]               __tmp__tokenIssuedSP_AssembleToken := tokenIssuedSP_AssembleToken;
[L471]               __tmp__tokenIssuedEco_AssembleToken := tokenIssuedEco_AssembleToken;
[L472]               __tmp__tokenIssuedMkt_AssembleToken := tokenIssuedMkt_AssembleToken;
[L473]               __tmp__tokenIssuedDev_AssembleToken := tokenIssuedDev_AssembleToken;
[L474]               __tmp__tokenIssuedRsv_AssembleToken := tokenIssuedRsv_AssembleToken;
[L475]               __tmp__tokenIssuedTeam_AssembleToken := tokenIssuedTeam_AssembleToken;
[L476]               __tmp__tokenIssuedAdv_AssembleToken := tokenIssuedAdv_AssembleToken;
[L477]               __tmp__burnTokenSupply_AssembleToken := burnTokenSupply_AssembleToken;
[L478]               __tmp__balances_AssembleToken := balances_AssembleToken;
[L479]               __tmp__approvals_AssembleToken := approvals_AssembleToken;
[L480]               __tmp__tmVestingTimer_AssembleToken := tmVestingTimer_AssembleToken;
[L481]               __tmp__tmVestingBalances_AssembleToken := tmVestingBalances_AssembleToken;
[L482]               __tmp__advVestingTimer_AssembleToken := advVestingTimer_AssembleToken;
[L483]               __tmp__advVestingBalances_AssembleToken := advVestingBalances_AssembleToken;
[L484]               __tmp__tokenLock_AssembleToken := tokenLock_AssembleToken;
[L485]               __tmp__saleTime_AssembleToken := saleTime_AssembleToken;
[L486]               __tmp__endSaleTime_AssembleToken := endSaleTime_AssembleToken;
[L487]   CALL        call __ret_0_ := transfer~address~uint256_AssembleToken__fail(this, msgsender_MSG, msgvalue_MSG, _to_s632, _value_s632);
[L1396]  CALL        call __var_1 := isTransferable_AssembleToken__fail(this, msgsender_MSG, msgvalue_MSG);
[L1616]  COND FALSE  !(__tmp__tokenLock_AssembleToken[this] == false)
[L1619]  COND FALSE  !(msgsender_MSG == __tmp__owner_OwnerHelper[this])
[L1623]              __ret_0_ := false;
[L1396]  RET         call __var_1 := isTransferable_AssembleToken__fail(this, msgsender_MSG, msgvalue_MSG);
[L1397]  COND FALSE  !(revert)
[L1400]  COND TRUE   !(__var_1 == true)
[L1401]              revert := true;
[L487]   RET         call __ret_0_ := transfer~address~uint256_AssembleToken__fail(this, msgsender_MSG, msgvalue_MSG, _to_s632, _value_s632);
[L488]               assume revert || gas < 0;
[L2647]  RET         call __ret_0_transfer := transfer~address~uint256_AssembleToken(this, msgsender_MSG, msgvalue_MSG, _to_s632, _value_s632);

Loop:

End of lasso representation.
RESULT: Ultimate could not prove your program: Toolchain returned no result.
Received shutdown request...
