This is Ultimate 0.1.24-f1553f5-m
[2020-11-24 15:41:28,861 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-24 15:41:28,863 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-24 15:41:28,874 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-24 15:41:28,874 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-24 15:41:28,875 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-24 15:41:28,876 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-24 15:41:28,877 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-24 15:41:28,878 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-24 15:41:28,879 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-24 15:41:28,880 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-24 15:41:28,880 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-24 15:41:28,881 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-24 15:41:28,881 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-24 15:41:28,882 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-24 15:41:28,883 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-24 15:41:28,884 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-24 15:41:28,885 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-24 15:41:28,886 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-24 15:41:28,888 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-24 15:41:28,888 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-24 15:41:28,889 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-24 15:41:28,891 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-24 15:41:28,891 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-24 15:41:28,891 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-24 15:41:28,891 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-24 15:41:28,892 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-24 15:41:28,892 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-24 15:41:28,893 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-24 15:41:28,893 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-24 15:41:28,893 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-24 15:41:28,894 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-24 15:41:28,894 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-24 15:41:28,895 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-24 15:41:28,896 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-24 15:41:28,896 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-24 15:41:28,896 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-24 15:41:28,896 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-24 15:41:28,897 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-24 15:41:28,897 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-24 15:41:28,898 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-24 15:41:28,898 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-24 15:41:28,908 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-24 15:41:28,908 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-24 15:41:28,910 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-24 15:41:28,910 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-24 15:41:28,910 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-24 15:41:28,910 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-24 15:41:28,910 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-24 15:41:28,911 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-24 15:41:28,911 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-24 15:41:28,911 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-24 15:41:28,911 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-24 15:41:28,911 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-24 15:41:28,911 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-24 15:41:28,912 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-24 15:41:28,912 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-24 15:41:28,912 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-24 15:41:28,912 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-24 15:41:28,912 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-24 15:41:28,912 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-24 15:41:28,913 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-24 15:41:28,913 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-24 15:41:28,913 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-24 15:41:28,913 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-24 15:41:28,913 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-24 15:41:28,913 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-24 15:41:28,914 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-24 15:41:28,943 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-24 15:41:28,955 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-24 15:41:28,957 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-24 15:41:28,958 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-24 15:41:28,959 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-24 15:41:28,959 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/BLY_0xf8aD7dFe656188A23e89da09506Adf7ad9290D5d_transfer-self-fail.bpl
[2020-11-24 15:41:28,959 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/BLY_0xf8aD7dFe656188A23e89da09506Adf7ad9290D5d_transfer-self-fail.bpl'
[2020-11-24 15:41:29,039 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-24 15:41:29,041 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-24 15:41:29,041 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-24 15:41:29,041 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-24 15:41:29,041 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-24 15:41:29,058 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "BLY_0xf8aD7dFe656188A23e89da09506Adf7ad9290D5d_transfer-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 03:41:29" (1/1) ...
[2020-11-24 15:41:29,060 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "BLY_0xf8aD7dFe656188A23e89da09506Adf7ad9290D5d_transfer-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 03:41:29" (1/1) ...
[2020-11-24 15:41:29,099 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "BLY_0xf8aD7dFe656188A23e89da09506Adf7ad9290D5d_transfer-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 03:41:29" (1/1) ...
[2020-11-24 15:41:29,100 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "BLY_0xf8aD7dFe656188A23e89da09506Adf7ad9290D5d_transfer-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 03:41:29" (1/1) ...
[2020-11-24 15:41:29,124 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "BLY_0xf8aD7dFe656188A23e89da09506Adf7ad9290D5d_transfer-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 03:41:29" (1/1) ...
[2020-11-24 15:41:29,135 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "BLY_0xf8aD7dFe656188A23e89da09506Adf7ad9290D5d_transfer-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 03:41:29" (1/1) ...
[2020-11-24 15:41:29,143 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "BLY_0xf8aD7dFe656188A23e89da09506Adf7ad9290D5d_transfer-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 03:41:29" (1/1) ...
[2020-11-24 15:41:29,153 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-24 15:41:29,153 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-24 15:41:29,154 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-24 15:41:29,156 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-24 15:41:29,160 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "BLY_0xf8aD7dFe656188A23e89da09506Adf7ad9290D5d_transfer-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 03:41:29" (1/1) ...
[2020-11-24 15:41:29,180 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(BLY.transfer(to, value), msg.sender == to && value > _balances_HxERC20[this][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_HxERC20[this][to] >= 0 && _balances_HxERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_HxERC20[this][msg.sender] >= 0 &&  _balances_HxERC20[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(reverted(BLY.transfer)))
[2020-11-24 15:41:29,186 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(BLY.transfer(to, value), msg.sender == to && value > _balances_HxERC20[this][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_HxERC20[this][to] >= 0 && _balances_HxERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_HxERC20[this][msg.sender] >= 0 &&  _balances_HxERC20[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(reverted(BLY.transfer)))
[2020-11-24 15:41:29,193 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(BLY.transfer(to, value), msg.sender == to && value > _balances_HxERC20[this][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_HxERC20[this][to] >= 0 && _balances_HxERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_HxERC20[this][msg.sender] >= 0 &&  _balances_HxERC20[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(reverted(BLY.transfer)))
[2020-11-24 15:41:29,200 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( msg.sender==to_s1288 && value_s1288>_balances_HxERC20[this][msg.sender] ) && value_s1288>=0 ) && value_s1288<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && _balances_HxERC20[this][to_s1288]>=0 ) && _balances_HxERC20[this][to_s1288]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && _balances_HxERC20[this][msg.sender]>=0 ) && _balances_HxERC20[this][msg.sender]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_BLY>],IdentifierExpression[to_s1288,<IMPLEMENTATION_INPARAM,transfer~address~uint256_BLY>]],BinaryExpression[COMPGT,IdentifierExpression[value_s1288,<IMPLEMENTATION_INPARAM,transfer~address~uint256_BLY>],ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_HxERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_BLY>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_BLY>]]]]],BinaryExpression[COMPGEQ,IdentifierExpression[value_s1288,<IMPLEMENTATION_INPARAM,transfer~address~uint256_BLY>],IntegerLiteral[0]]],BinaryExpression[COMPLT,IdentifierExpression[value_s1288,<IMPLEMENTATION_INPARAM,transfer~address~uint256_BLY>],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_HxERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_BLY>]]],[IdentifierExpression[to_s1288,<IMPLEMENTATION_INPARAM,transfer~address~uint256_BLY>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_HxERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_BLY>]]],[IdentifierExpression[to_s1288,<IMPLEMENTATION_INPARAM,transfer~address~uint256_BLY>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_HxERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_BLY>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_BLY>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_HxERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_BLY>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_BLY>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]]
[2020-11-24 15:41:29,205 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(BLY.transfer(to, value), msg.sender == to && value > _balances_HxERC20[this][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_HxERC20[this][to] >= 0 && _balances_HxERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_HxERC20[this][msg.sender] >= 0 &&  _balances_HxERC20[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(reverted(BLY.transfer)))
[2020-11-24 15:41:29,205 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_transfer_BLY0) ==> ( <>AP(fail_transfer_BLY0) ) ) )
Executed UtopiaSpecLang
[2020-11-24 15:41:29,214 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 03:41:29 PropertyContainer
[2020-11-24 15:41:29,214 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-24 15:41:29,214 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-24 15:41:29,214 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-24 15:41:29,214 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-24 15:41:29,215 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "BLY_0xf8aD7dFe656188A23e89da09506Adf7ad9290D5d_transfer-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 03:41:29" (1/2) ...
[2020-11-24 15:41:29,215 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-24 15:41:29,216 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-24 15:41:29,230 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 03:41:29" (2/2) ...
[2020-11-24 15:41:29,230 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-24 15:41:29,231 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-24 15:41:29,231 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-24 15:41:29,231 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-24 15:41:29,231 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "BLY_0xf8aD7dFe656188A23e89da09506Adf7ad9290D5d_transfer-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 03:41:29" (1/2) ...
[2020-11-24 15:41:29,284 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-24 15:41:29,284 INFO  L130     BoogieDeclarations]: Found specification of procedure Roles.Role_ctor__success
[2020-11-24 15:41:29,284 INFO  L130     BoogieDeclarations]: Found specification of procedure BLY.LockInfo_ctor__success
[2020-11-24 15:41:29,284 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_HxSafeMath__success
[2020-11-24 15:41:29,284 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_HxSafeMath__success
[2020-11-24 15:41:29,285 INFO  L130     BoogieDeclarations]: Found specification of procedure add~Role~address_Roles__success
[2020-11-24 15:41:29,285 INFO  L130     BoogieDeclarations]: Found specification of procedure has~Role~address_Roles__success
[2020-11-24 15:41:29,285 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_IERC20
[2020-11-24 15:41:29,285 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_IERC20
[2020-11-24 15:41:29,285 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_IERC20
[2020-11-24 15:41:29,285 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_HxERC20
[2020-11-24 15:41:29,285 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_HxERC20
[2020-11-24 15:41:29,285 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_HxERC20
[2020-11-24 15:41:29,285 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_HxERC20
[2020-11-24 15:41:29,285 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_HxERC20
[2020-11-24 15:41:29,285 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_HxERC20
[2020-11-24 15:41:29,285 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_HxERC20
[2020-11-24 15:41:29,286 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_HxERC20
[2020-11-24 15:41:29,286 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_HxERC20
[2020-11-24 15:41:29,286 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_HxERC20
[2020-11-24 15:41:29,286 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_HxERC20
[2020-11-24 15:41:29,286 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_HxERC20
[2020-11-24 15:41:29,286 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_HxERC20__success
[2020-11-24 15:41:29,286 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20Pausable
[2020-11-24 15:41:29,286 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20Pausable
[2020-11-24 15:41:29,286 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20Pausable
[2020-11-24 15:41:29,286 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20Pausable
[2020-11-24 15:41:29,286 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_BLY
[2020-11-24 15:41:29,287 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_BLY
[2020-11-24 15:41:29,287 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_BLY
[2020-11-24 15:41:29,287 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_BLY
[2020-11-24 15:41:29,287 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_BLY
[2020-11-24 15:41:29,287 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_BLY
[2020-11-24 15:41:29,287 INFO  L130     BoogieDeclarations]: Found specification of procedure _unlock~address~uint256_BLY__success
[2020-11-24 15:41:29,287 INFO  L130     BoogieDeclarations]: Found specification of procedure _autoUnlock~address_BLY__success
[2020-11-24 15:41:29,287 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-24 15:41:29,287 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-24 15:41:29,287 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-24 15:41:29,287 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__success
[2020-11-24 15:41:29,287 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyNewOwner_pre__success
[2020-11-24 15:41:29,288 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyPauser_pre__success
[2020-11-24 15:41:29,288 INFO  L130     BoogieDeclarations]: Found specification of procedure whenNotPaused_pre__success
[2020-11-24 15:41:29,288 INFO  L130     BoogieDeclarations]: Found specification of procedure whenPaused_pre__success
[2020-11-24 15:41:29,288 INFO  L130     BoogieDeclarations]: Found specification of procedure notFrozen_pre__success
[2020-11-24 15:41:29,288 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_HxSafeMath
[2020-11-24 15:41:29,288 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_HxSafeMath
[2020-11-24 15:41:29,288 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_Roles
[2020-11-24 15:41:29,288 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_Roles
[2020-11-24 15:41:29,288 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_HxOwnable
[2020-11-24 15:41:29,288 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_HxOwnable
[2020-11-24 15:41:29,288 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_PauserRole
[2020-11-24 15:41:29,288 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_PauserRole
[2020-11-24 15:41:29,289 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_Pausable
[2020-11-24 15:41:29,289 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_Pausable
[2020-11-24 15:41:29,289 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_IERC20
[2020-11-24 15:41:29,289 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_IERC20
[2020-11-24 15:41:29,289 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_HxERC20
[2020-11-24 15:41:29,289 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_HxERC20
[2020-11-24 15:41:29,289 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20Pausable
[2020-11-24 15:41:29,289 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20Pausable
[2020-11-24 15:41:29,289 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20Detailed
[2020-11-24 15:41:29,289 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20Detailed
[2020-11-24 15:41:29,290 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_BLY
[2020-11-24 15:41:29,290 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-24 15:41:29,290 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-24 15:41:29,290 INFO  L130     BoogieDeclarations]: Found specification of procedure Roles.Role_ctor__fail
[2020-11-24 15:41:29,290 INFO  L130     BoogieDeclarations]: Found specification of procedure BLY.LockInfo_ctor__fail
[2020-11-24 15:41:29,290 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_HxSafeMath__fail
[2020-11-24 15:41:29,290 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_HxSafeMath__fail
[2020-11-24 15:41:29,290 INFO  L130     BoogieDeclarations]: Found specification of procedure add~Role~address_Roles__fail
[2020-11-24 15:41:29,290 INFO  L130     BoogieDeclarations]: Found specification of procedure has~Role~address_Roles__fail
[2020-11-24 15:41:29,290 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_HxERC20__success
[2020-11-24 15:41:29,291 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_HxERC20__fail
[2020-11-24 15:41:29,291 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_HxERC20__success
[2020-11-24 15:41:29,291 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_HxERC20__fail
[2020-11-24 15:41:29,291 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_HxERC20__success
[2020-11-24 15:41:29,291 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_HxERC20__fail
[2020-11-24 15:41:29,291 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_HxERC20__success
[2020-11-24 15:41:29,291 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_HxERC20__fail
[2020-11-24 15:41:29,291 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_HxERC20__success
[2020-11-24 15:41:29,291 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_HxERC20__fail
[2020-11-24 15:41:29,292 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_HxERC20__success
[2020-11-24 15:41:29,292 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_HxERC20__fail
[2020-11-24 15:41:29,292 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_HxERC20__fail
[2020-11-24 15:41:29,292 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20Pausable__success
[2020-11-24 15:41:29,292 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20Pausable__fail
[2020-11-24 15:41:29,292 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20Pausable__success
[2020-11-24 15:41:29,292 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20Pausable__fail
[2020-11-24 15:41:29,292 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_BLY__success
[2020-11-24 15:41:29,292 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_BLY__fail
[2020-11-24 15:41:29,292 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_BLY__success
[2020-11-24 15:41:29,293 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_BLY__fail
[2020-11-24 15:41:29,293 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_BLY__success
[2020-11-24 15:41:29,293 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_BLY__fail
[2020-11-24 15:41:29,293 INFO  L130     BoogieDeclarations]: Found specification of procedure _unlock~address~uint256_BLY__fail
[2020-11-24 15:41:29,293 INFO  L130     BoogieDeclarations]: Found specification of procedure _autoUnlock~address_BLY__fail
[2020-11-24 15:41:29,293 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-24 15:41:29,293 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-24 15:41:29,293 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-24 15:41:29,293 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__fail
[2020-11-24 15:41:29,293 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyNewOwner_pre__fail
[2020-11-24 15:41:29,294 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyPauser_pre__fail
[2020-11-24 15:41:29,294 INFO  L130     BoogieDeclarations]: Found specification of procedure whenNotPaused_pre__fail
[2020-11-24 15:41:29,294 INFO  L130     BoogieDeclarations]: Found specification of procedure whenPaused_pre__fail
[2020-11-24 15:41:29,294 INFO  L130     BoogieDeclarations]: Found specification of procedure notFrozen_pre__fail
[2020-11-24 15:41:29,294 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-24 15:41:29,294 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-24 15:41:29,294 INFO  L138     BoogieDeclarations]: Found implementation of procedure Roles.Role_ctor__fail
[2020-11-24 15:41:29,294 INFO  L138     BoogieDeclarations]: Found implementation of procedure Roles.Role_ctor__success
[2020-11-24 15:41:29,294 INFO  L138     BoogieDeclarations]: Found implementation of procedure BLY.LockInfo_ctor__fail
[2020-11-24 15:41:29,294 INFO  L138     BoogieDeclarations]: Found implementation of procedure BLY.LockInfo_ctor__success
[2020-11-24 15:41:29,295 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_HxSafeMath__fail
[2020-11-24 15:41:29,295 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_HxSafeMath__success
[2020-11-24 15:41:29,295 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_HxSafeMath__fail
[2020-11-24 15:41:29,295 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_HxSafeMath__success
[2020-11-24 15:41:29,295 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~Role~address_Roles__fail
[2020-11-24 15:41:29,295 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~Role~address_Roles__success
[2020-11-24 15:41:29,295 INFO  L138     BoogieDeclarations]: Found implementation of procedure has~Role~address_Roles__fail
[2020-11-24 15:41:29,295 INFO  L138     BoogieDeclarations]: Found implementation of procedure has~Role~address_Roles__success
[2020-11-24 15:41:29,295 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_HxERC20__fail
[2020-11-24 15:41:29,295 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_HxERC20__success
[2020-11-24 15:41:29,296 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_HxERC20__fail
[2020-11-24 15:41:29,296 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_HxERC20__success
[2020-11-24 15:41:29,296 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_HxERC20__fail
[2020-11-24 15:41:29,296 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_HxERC20__success
[2020-11-24 15:41:29,296 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_HxERC20__fail
[2020-11-24 15:41:29,296 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_HxERC20__success
[2020-11-24 15:41:29,296 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_HxERC20__fail
[2020-11-24 15:41:29,296 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_HxERC20__success
[2020-11-24 15:41:29,296 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_HxERC20__fail
[2020-11-24 15:41:29,297 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_HxERC20__success
[2020-11-24 15:41:29,297 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_HxERC20__fail
[2020-11-24 15:41:29,297 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_HxERC20__success
[2020-11-24 15:41:29,297 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20Pausable__fail
[2020-11-24 15:41:29,297 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20Pausable__success
[2020-11-24 15:41:29,297 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20Pausable__fail
[2020-11-24 15:41:29,297 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20Pausable__success
[2020-11-24 15:41:29,297 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_BLY__fail
[2020-11-24 15:41:29,297 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_BLY__success
[2020-11-24 15:41:29,298 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_BLY__fail
[2020-11-24 15:41:29,298 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_BLY__success
[2020-11-24 15:41:29,298 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_BLY__fail
[2020-11-24 15:41:29,298 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_BLY__success
[2020-11-24 15:41:29,298 INFO  L138     BoogieDeclarations]: Found implementation of procedure _unlock~address~uint256_BLY__fail
[2020-11-24 15:41:29,298 INFO  L138     BoogieDeclarations]: Found implementation of procedure _unlock~address~uint256_BLY__success
[2020-11-24 15:41:29,298 INFO  L138     BoogieDeclarations]: Found implementation of procedure _autoUnlock~address_BLY__fail
[2020-11-24 15:41:29,298 INFO  L138     BoogieDeclarations]: Found implementation of procedure _autoUnlock~address_BLY__success
[2020-11-24 15:41:29,298 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-24 15:41:29,298 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-24 15:41:29,299 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-24 15:41:29,299 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-24 15:41:29,299 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-24 15:41:29,299 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-24 15:41:29,299 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__fail
[2020-11-24 15:41:29,299 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__success
[2020-11-24 15:41:29,299 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyNewOwner_pre__fail
[2020-11-24 15:41:29,299 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyNewOwner_pre__success
[2020-11-24 15:41:29,299 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyPauser_pre__fail
[2020-11-24 15:41:29,299 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyPauser_pre__success
[2020-11-24 15:41:29,299 INFO  L138     BoogieDeclarations]: Found implementation of procedure whenNotPaused_pre__fail
[2020-11-24 15:41:29,300 INFO  L138     BoogieDeclarations]: Found implementation of procedure whenNotPaused_pre__success
[2020-11-24 15:41:29,300 INFO  L138     BoogieDeclarations]: Found implementation of procedure whenPaused_pre__fail
[2020-11-24 15:41:29,300 INFO  L138     BoogieDeclarations]: Found implementation of procedure whenPaused_pre__success
[2020-11-24 15:41:29,300 INFO  L138     BoogieDeclarations]: Found implementation of procedure notFrozen_pre__fail
[2020-11-24 15:41:29,300 INFO  L138     BoogieDeclarations]: Found implementation of procedure notFrozen_pre__success
[2020-11-24 15:41:29,300 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_HxSafeMath
[2020-11-24 15:41:29,300 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_HxSafeMath
[2020-11-24 15:41:29,300 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_Roles
[2020-11-24 15:41:29,300 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_Roles
[2020-11-24 15:41:29,300 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_HxOwnable
[2020-11-24 15:41:29,301 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_HxOwnable
[2020-11-24 15:41:29,301 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_PauserRole
[2020-11-24 15:41:29,301 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_PauserRole
[2020-11-24 15:41:29,301 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_Pausable
[2020-11-24 15:41:29,301 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_Pausable
[2020-11-24 15:41:29,301 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_IERC20
[2020-11-24 15:41:29,301 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_IERC20
[2020-11-24 15:41:29,301 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_HxERC20
[2020-11-24 15:41:29,301 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_HxERC20
[2020-11-24 15:41:29,301 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20Pausable
[2020-11-24 15:41:29,301 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20Pausable
[2020-11-24 15:41:29,302 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20Detailed
[2020-11-24 15:41:29,302 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20Detailed
[2020-11-24 15:41:29,302 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_BLY
[2020-11-24 15:41:29,302 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-24 15:41:29,302 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-24 15:41:29,302 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-24 15:41:29,870 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 15:41:29,870 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 15:41:30,079 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-24 15:41:30,080 INFO  L286             CfgBuilder]: Removed 10 assue(true) statements.
[2020-11-24 15:41:30,081 INFO  L202        PluginConnector]: Adding new model BLY_0xf8aD7dFe656188A23e89da09506Adf7ad9290D5d_transfer-self-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 03:41:30 BoogieIcfgContainer
[2020-11-24 15:41:30,081 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 03:41:29" (2/2) ...
[2020-11-24 15:41:30,082 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-24 15:41:30,082 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@e32028c and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 03:41:30, skipping insertion in model container
[2020-11-24 15:41:30,082 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-24 15:41:30,082 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-24 15:41:30,082 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-24 15:41:30,083 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-24 15:41:30,084 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "BLY_0xf8aD7dFe656188A23e89da09506Adf7ad9290D5d_transfer-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 03:41:29" (1/3) ...
[2020-11-24 15:41:30,084 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@5fe35979 and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 03:41:30, skipping insertion in model container
[2020-11-24 15:41:30,084 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 03:41:29" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-24 15:41:30,121 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 03:41:30 NWAContainer
[2020-11-24 15:41:30,121 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-24 15:41:30,121 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-24 15:41:30,121 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-24 15:41:30,122 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-24 15:41:30,123 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "BLY_0xf8aD7dFe656188A23e89da09506Adf7ad9290D5d_transfer-self-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 03:41:30" (3/4) ...
[2020-11-24 15:41:30,124 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@f26c7f and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 03:41:30, skipping insertion in model container
[2020-11-24 15:41:30,124 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 03:41:30" (4/4) ...
[2020-11-24 15:41:30,127 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-24 15:41:30,131 INFO  L110   BuchiProductObserver]: Initial RCFG 1613 locations, 2110 edges
[2020-11-24 15:41:30,131 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-24 15:41:30,141 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-24 15:41:31,729 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-24 15:41:31,734 INFO  L110   BuchiProductObserver]: BuchiProgram size 3838 locations, 6774 edges
[2020-11-24 15:41:31,734 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 03:41:31 BoogieIcfgContainer
[2020-11-24 15:41:31,734 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-24 15:41:31,734 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-24 15:41:31,734 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-24 15:41:31,736 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-24 15:41:31,736 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 03:41:31" (1/1) ...
[2020-11-24 15:41:31,837 INFO  L313           BlockEncoder]: Initial Icfg 3838 locations, 6774 edges
[2020-11-24 15:41:31,838 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-24 15:41:31,838 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-24 15:41:31,838 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-24 15:41:31,839 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-24 15:41:31,849 INFO  L70    emoveInfeasibleEdges]: Removed 123 edges and 24 locations because of local infeasibility
[2020-11-24 15:41:31,857 INFO  L70        RemoveSinkStates]: Removed 182 edges and 98 locations by removing sink states
[2020-11-24 15:41:31,869 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-24 15:41:31,872 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-24 15:41:31,875 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-24 15:41:31,875 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-24 15:41:31,879 INFO  L313           BlockEncoder]: Encoded RCFG 3688 locations, 6428 edges
[2020-11-24 15:41:31,880 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 24.11 03:41:31 BasicIcfg
[2020-11-24 15:41:31,880 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-24 15:41:31,880 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-24 15:41:31,880 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-24 15:41:31,882 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-24 15:41:31,882 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 15:41:31,883 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "BLY_0xf8aD7dFe656188A23e89da09506Adf7ad9290D5d_transfer-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 03:41:29" (1/6) ...
[2020-11-24 15:41:31,884 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@494f6322 and model type BLY_0xf8aD7dFe656188A23e89da09506Adf7ad9290D5d_transfer-self-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 24.11 03:41:31, skipping insertion in model container
[2020-11-24 15:41:31,884 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 15:41:31,885 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 03:41:29" (2/6) ...
[2020-11-24 15:41:31,885 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@494f6322 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 24.11 03:41:31, skipping insertion in model container
[2020-11-24 15:41:31,885 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 15:41:31,885 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "BLY_0xf8aD7dFe656188A23e89da09506Adf7ad9290D5d_transfer-self-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 03:41:30" (3/6) ...
[2020-11-24 15:41:31,885 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@494f6322 and model type BLY_0xf8aD7dFe656188A23e89da09506Adf7ad9290D5d_transfer-self-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 24.11 03:41:31, skipping insertion in model container
[2020-11-24 15:41:31,885 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 15:41:31,885 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 03:41:30" (4/6) ...
[2020-11-24 15:41:31,885 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@494f6322 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 24.11 03:41:31, skipping insertion in model container
[2020-11-24 15:41:31,885 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 15:41:31,886 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 03:41:31" (5/6) ...
[2020-11-24 15:41:31,886 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@494f6322 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 24.11 03:41:31, skipping insertion in model container
[2020-11-24 15:41:31,886 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 15:41:31,886 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 24.11 03:41:31" (6/6) ...
[2020-11-24 15:41:31,887 INFO  L404   chiAutomizerObserver]: Analyzing ICFG BLY_0xf8aD7dFe656188A23e89da09506Adf7ad9290D5d_transfer-self-fail.bpl_BEv2
[2020-11-24 15:41:31,922 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-24 15:41:31,922 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-24 15:41:31,922 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-24 15:41:31,922 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-24 15:41:31,923 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-24 15:41:31,923 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-24 15:41:31,923 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-24 15:41:31,923 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-24 15:41:31,923 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-24 15:41:31,956 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3688 states.
[2020-11-24 15:41:32,003 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 15:41:32,003 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 15:41:32,004 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 15:41:32,012 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 15:41:32,013 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
[2020-11-24 15:41:32,013 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-24 15:41:32,013 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3688 states.
[2020-11-24 15:41:32,033 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 15:41:32,033 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 15:41:32,033 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 15:41:32,036 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 15:41:32,036 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L2]                 fail_transfer_BLY0 := false;
[L2]                 call_transfer_BLY0 := false;
[L2]     CALL        call main();
[L4387]              assume null == 0;
[L4388]  CALL        call this := FreshRefGenerator__success();
[L1636]              havoc newRef;
[L1637]              assume Alloc[newRef] == false;
[L1638]              Alloc[newRef] := true;
[L1639]              assume newRef != null;
[L4388]  RET         call this := FreshRefGenerator__success();
[L4389]              assume now >= 0;
[L4390]              assume DType[this] == BLY;
[L4391]              assume !revert && gas >= 0;
[L4392]  CALL        call CorralChoice_BLY(this);
[L4269]              havoc msgsender_MSG;
[L4270]              havoc msgvalue_MSG;
[L4271]              havoc choice;
[L4272]              havoc __ret_0_owner;
[L4273]              havoc __ret_0_newOwner;
[L4274]              havoc account_s293;
[L4275]              havoc __ret_0_isOwner;
[L4276]              havoc _newOwner_s313;
[L4277]              havoc __ret_0_acceptOwnership;
[L4278]              havoc account_s390;
[L4279]              havoc __ret_0_isPauser;
[L4280]              havoc account_s402;
[L4281]              havoc account_s414;
[L4282]              havoc __ret_0_paused;
[L4283]              havoc to_s1288;
[L4284]              havoc value_s1288;
[L4285]              havoc __ret_0_transfer;
[L4286]              havoc spender_s711;
[L4287]              havoc value_s711;
[L4288]              havoc __ret_0_approve;
[L4289]              havoc from_s1322;
[L4290]              havoc to_s1322;
[L4291]              havoc value_s1322;
[L4292]              havoc __ret_0_transferFrom;
[L4293]              havoc __ret_0_totalSupply;
[L4294]              havoc owner_s1254;
[L4295]              havoc __ret_0_balanceOf;
[L4296]              havoc owner_s656;
[L4297]              havoc spender_s656;
[L4298]              havoc __ret_0_allowance;
[L4299]              havoc spender_s809;
[L4300]              havoc addedValue_s809;
[L4301]              havoc __ret_0_increaseAllowance;
[L4302]              havoc spender_s858;
[L4303]              havoc subtractedValue_s858;
[L4304]              havoc __ret_0_decreaseAllowance;
[L4305]              havoc name_s1105;
[L4306]              havoc symbol_s1105;
[L4307]              havoc decimals_s1105;
[L4308]              havoc __ret_0_name;
[L4309]              havoc __ret_0_symbol;
[L4310]              havoc __ret_0_decimals;
[L4311]              havoc __ret_0_implementation;
[L4312]              havoc arg1675_s0;
[L4313]              havoc arg1676_s0;
[L4314]              havoc __ret_0_timelockList;
[L4315]              havoc arg1677_s0;
[L4316]              havoc __ret_0_frozenAccount;
[L4317]              havoc holder_s1351;
[L4318]              havoc __ret_0_freezeAccount;
[L4319]              havoc holder_s1379;
[L4320]              havoc __ret_0_unfreezeAccount;
[L4321]              havoc holder_s1410;
[L4322]              havoc value_s1410;
[L4323]              havoc releaseTime_s1410;
[L4324]              havoc __ret_0_lock;
[L4325]              havoc holder_s1439;
[L4326]              havoc value_s1439;
[L4327]              havoc releaseTime_s1439;
[L4328]              havoc __ret_0_transferWithLock;
[L4329]              havoc holder_s1468;
[L4330]              havoc idx_s1468;
[L4331]              havoc __ret_0_unlock;
[L4332]              havoc _newImplementation_s1486;
[L4333]              havoc tmpNow;
[L4334]              havoc gas;
[L4335]              assume gas > 4000000 && gas <= 8000000;
[L4336]              tmpNow := now;
[L4337]              havoc now;
[L4338]              assume now > tmpNow;
[L4339]              assume msgsender_MSG != null;
[L4340]  COND TRUE   choice == 6
[L4341]              gas := gas - 21000;
[L4342]  COND FALSE  !(gas >= 0)
[L4392]  RET         call CorralChoice_BLY(this);

Loop:
[L4392]        assume true;

[2020-11-24 15:41:32,053 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 15:41:32,054 INFO  L82        PathProgramCache]: Analyzing trace with hash -589207399, now seen corresponding path program 1 times
[2020-11-24 15:41:32,060 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 15:41:32,086 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 15:41:32,154 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 15:41:32,156 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 15:41:32,156 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [5] imperfect sequences [] total 5
[2020-11-24 15:41:32,160 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 15:41:32,389 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 5 interpolants.
[2020-11-24 15:41:32,390 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=9, Invalid=11, Unknown=0, NotChecked=0, Total=20
[2020-11-24 15:41:32,392 INFO  L87              Difference]: Start difference. First operand 3688 states. Second operand 5 states.
[2020-11-24 15:41:32,700 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 15:41:32,700 INFO  L93              Difference]: Finished difference Result 1369 states and 1646 transitions.
[2020-11-24 15:41:32,700 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-24 15:41:32,701 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 1369 states and 1646 transitions.
[2020-11-24 15:41:32,710 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 15:41:32,715 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 1369 states to 337 states and 395 transitions.
[2020-11-24 15:41:32,716 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 3
[2020-11-24 15:41:32,717 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 141
[2020-11-24 15:41:32,717 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 337 states and 395 transitions.
[2020-11-24 15:41:32,720 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 15:41:32,720 INFO  L728         BuchiCegarLoop]: Abstraction has 337 states and 395 transitions.
[2020-11-24 15:41:32,734 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 337 states and 395 transitions.
[2020-11-24 15:41:32,752 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 337 to 337.
[2020-11-24 15:41:32,752 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 337 states.
[2020-11-24 15:41:32,754 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 337 states to 337 states and 395 transitions.
[2020-11-24 15:41:32,754 INFO  L751         BuchiCegarLoop]: Abstraction has 337 states and 395 transitions.
[2020-11-24 15:41:32,754 INFO  L631         BuchiCegarLoop]: Abstraction has 337 states and 395 transitions.
[2020-11-24 15:41:32,754 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-24 15:41:32,755 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 337 states and 395 transitions.
[2020-11-24 15:41:32,756 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 15:41:32,756 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 15:41:32,756 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 15:41:32,757 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 15:41:32,757 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L2]                 fail_transfer_BLY0 := false;
[L2]                 call_transfer_BLY0 := false;
[L2]     CALL        call main();
[L4387]              assume null == 0;
[L4388]  CALL        call this := FreshRefGenerator__success();
[L1636]              havoc newRef;
[L1637]              assume Alloc[newRef] == false;
[L1638]              Alloc[newRef] := true;
[L1639]              assume newRef != null;
[L4388]  RET         call this := FreshRefGenerator__success();
[L4389]              assume now >= 0;
[L4390]              assume DType[this] == BLY;
[L4391]              assume !revert && gas >= 0;
[L4392]  CALL        call CorralChoice_BLY(this);
[L4269]              havoc msgsender_MSG;
[L4270]              havoc msgvalue_MSG;
[L4271]              havoc choice;
[L4272]              havoc __ret_0_owner;
[L4273]              havoc __ret_0_newOwner;
[L4274]              havoc account_s293;
[L4275]              havoc __ret_0_isOwner;
[L4276]              havoc _newOwner_s313;
[L4277]              havoc __ret_0_acceptOwnership;
[L4278]              havoc account_s390;
[L4279]              havoc __ret_0_isPauser;
[L4280]              havoc account_s402;
[L4281]              havoc account_s414;
[L4282]              havoc __ret_0_paused;
[L4283]              havoc to_s1288;
[L4284]              havoc value_s1288;
[L4285]              havoc __ret_0_transfer;
[L4286]              havoc spender_s711;
[L4287]              havoc value_s711;
[L4288]              havoc __ret_0_approve;
[L4289]              havoc from_s1322;
[L4290]              havoc to_s1322;
[L4291]              havoc value_s1322;
[L4292]              havoc __ret_0_transferFrom;
[L4293]              havoc __ret_0_totalSupply;
[L4294]              havoc owner_s1254;
[L4295]              havoc __ret_0_balanceOf;
[L4296]              havoc owner_s656;
[L4297]              havoc spender_s656;
[L4298]              havoc __ret_0_allowance;
[L4299]              havoc spender_s809;
[L4300]              havoc addedValue_s809;
[L4301]              havoc __ret_0_increaseAllowance;
[L4302]              havoc spender_s858;
[L4303]              havoc subtractedValue_s858;
[L4304]              havoc __ret_0_decreaseAllowance;
[L4305]              havoc name_s1105;
[L4306]              havoc symbol_s1105;
[L4307]              havoc decimals_s1105;
[L4308]              havoc __ret_0_name;
[L4309]              havoc __ret_0_symbol;
[L4310]              havoc __ret_0_decimals;
[L4311]              havoc __ret_0_implementation;
[L4312]              havoc arg1675_s0;
[L4313]              havoc arg1676_s0;
[L4314]              havoc __ret_0_timelockList;
[L4315]              havoc arg1677_s0;
[L4316]              havoc __ret_0_frozenAccount;
[L4317]              havoc holder_s1351;
[L4318]              havoc __ret_0_freezeAccount;
[L4319]              havoc holder_s1379;
[L4320]              havoc __ret_0_unfreezeAccount;
[L4321]              havoc holder_s1410;
[L4322]              havoc value_s1410;
[L4323]              havoc releaseTime_s1410;
[L4324]              havoc __ret_0_lock;
[L4325]              havoc holder_s1439;
[L4326]              havoc value_s1439;
[L4327]              havoc releaseTime_s1439;
[L4328]              havoc __ret_0_transferWithLock;
[L4329]              havoc holder_s1468;
[L4330]              havoc idx_s1468;
[L4331]              havoc __ret_0_unlock;
[L4332]              havoc _newImplementation_s1486;
[L4333]              havoc tmpNow;
[L4334]              havoc gas;
[L4335]              assume gas > 4000000 && gas <= 8000000;
[L4336]              tmpNow := now;
[L4337]              havoc now;
[L4338]              assume now > tmpNow;
[L4339]              assume msgsender_MSG != null;
[L4340]  COND TRUE   choice == 6
[L4341]              gas := gas - 21000;
[L4342]  COND TRUE   gas >= 0
[L4343]              assume value_s1288 >= 0 && value_s1288 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4344]              assume msgvalue_MSG == 0;
[L4345]  CALL        call __ret_0_transfer := transfer~address~uint256_BLY(this, msgsender_MSG, msgvalue_MSG, to_s1288, value_s1288);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == to_s1288 && value_s1288 > _balances_HxERC20[this][msgsender_MSG]) && value_s1288 >= 0) && value_s1288 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_HxERC20[this][to_s1288] >= 0) && _balances_HxERC20[this][to_s1288] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_HxERC20[this][msgsender_MSG] >= 0) && _balances_HxERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_BLY0 := true;
[L2]                 call_transfer_BLY0 := false;
[L2]                 revert := revert_hold;
[L871]               havoc __exception;
[L872]               revert := false;
[L873]   COND FALSE  !(__exception)
[L909]   CALL        call __ret_0_ := transfer~address~uint256_BLY__success(this, msgsender_MSG, msgvalue_MSG, to_s1288, value_s1288);
[L2292]  CALL        call notFrozen_pre__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG);
[L3578]  COND FALSE  !(!!frozenAccount_BLY[this][_holder_s1185])
[L2292]  RET         call notFrozen_pre__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG);
[L2293]  COND TRUE   revert
[L909]   RET         call __ret_0_ := transfer~address~uint256_BLY__success(this, msgsender_MSG, msgvalue_MSG, to_s1288, value_s1288);
[L910]               assume !revert && gas >= 0;
[L4345]  RET         call __ret_0_transfer := transfer~address~uint256_BLY(this, msgsender_MSG, msgvalue_MSG, to_s1288, value_s1288);
[L4392]  RET         call CorralChoice_BLY(this);

Loop:
[L4392]        assume true;

[2020-11-24 15:41:32,759 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 15:41:32,759 INFO  L82        PathProgramCache]: Analyzing trace with hash 523900267, now seen corresponding path program 1 times
[2020-11-24 15:41:32,761 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 15:41:32,772 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 15:41:32,789 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 15:41:32,790 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 15:41:32,790 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [5] imperfect sequences [] total 5
[2020-11-24 15:41:32,791 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 15:41:32,791 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 5 interpolants.
[2020-11-24 15:41:32,791 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=9, Invalid=11, Unknown=0, NotChecked=0, Total=20
[2020-11-24 15:41:32,791 INFO  L87              Difference]: Start difference. First operand 337 states and 395 transitions. cyclomatic complexity: 60 Second operand 5 states.
[2020-11-24 15:41:32,814 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 15:41:32,814 INFO  L93              Difference]: Finished difference Result 387 states and 441 transitions.
[2020-11-24 15:41:32,814 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-24 15:41:32,814 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 387 states and 441 transitions.
[2020-11-24 15:41:32,816 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 15:41:32,818 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 387 states to 387 states and 441 transitions.
[2020-11-24 15:41:32,818 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 165
[2020-11-24 15:41:32,818 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 165
[2020-11-24 15:41:32,818 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 387 states and 441 transitions.
[2020-11-24 15:41:32,819 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 15:41:32,819 INFO  L728         BuchiCegarLoop]: Abstraction has 387 states and 441 transitions.
[2020-11-24 15:41:32,819 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 387 states and 441 transitions.
[2020-11-24 15:41:32,825 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 387 to 383.
[2020-11-24 15:41:32,825 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 383 states.
[2020-11-24 15:41:32,825 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 383 states to 383 states and 437 transitions.
[2020-11-24 15:41:32,825 INFO  L751         BuchiCegarLoop]: Abstraction has 383 states and 437 transitions.
[2020-11-24 15:41:32,825 INFO  L631         BuchiCegarLoop]: Abstraction has 383 states and 437 transitions.
[2020-11-24 15:41:32,825 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-24 15:41:32,825 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 383 states and 437 transitions.
[2020-11-24 15:41:32,826 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 15:41:32,827 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 15:41:32,827 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 15:41:32,828 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 15:41:32,828 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L2]                 fail_transfer_BLY0 := false;
[L2]                 call_transfer_BLY0 := false;
[L2]     CALL        call main();
[L4387]              assume null == 0;
[L4388]  CALL        call this := FreshRefGenerator__success();
[L1636]              havoc newRef;
[L1637]              assume Alloc[newRef] == false;
[L1638]              Alloc[newRef] := true;
[L1639]              assume newRef != null;
[L4388]  RET         call this := FreshRefGenerator__success();
[L4389]              assume now >= 0;
[L4390]              assume DType[this] == BLY;
[L4391]              assume !revert && gas >= 0;
[L4392]  CALL        call CorralChoice_BLY(this);
[L4269]              havoc msgsender_MSG;
[L4270]              havoc msgvalue_MSG;
[L4271]              havoc choice;
[L4272]              havoc __ret_0_owner;
[L4273]              havoc __ret_0_newOwner;
[L4274]              havoc account_s293;
[L4275]              havoc __ret_0_isOwner;
[L4276]              havoc _newOwner_s313;
[L4277]              havoc __ret_0_acceptOwnership;
[L4278]              havoc account_s390;
[L4279]              havoc __ret_0_isPauser;
[L4280]              havoc account_s402;
[L4281]              havoc account_s414;
[L4282]              havoc __ret_0_paused;
[L4283]              havoc to_s1288;
[L4284]              havoc value_s1288;
[L4285]              havoc __ret_0_transfer;
[L4286]              havoc spender_s711;
[L4287]              havoc value_s711;
[L4288]              havoc __ret_0_approve;
[L4289]              havoc from_s1322;
[L4290]              havoc to_s1322;
[L4291]              havoc value_s1322;
[L4292]              havoc __ret_0_transferFrom;
[L4293]              havoc __ret_0_totalSupply;
[L4294]              havoc owner_s1254;
[L4295]              havoc __ret_0_balanceOf;
[L4296]              havoc owner_s656;
[L4297]              havoc spender_s656;
[L4298]              havoc __ret_0_allowance;
[L4299]              havoc spender_s809;
[L4300]              havoc addedValue_s809;
[L4301]              havoc __ret_0_increaseAllowance;
[L4302]              havoc spender_s858;
[L4303]              havoc subtractedValue_s858;
[L4304]              havoc __ret_0_decreaseAllowance;
[L4305]              havoc name_s1105;
[L4306]              havoc symbol_s1105;
[L4307]              havoc decimals_s1105;
[L4308]              havoc __ret_0_name;
[L4309]              havoc __ret_0_symbol;
[L4310]              havoc __ret_0_decimals;
[L4311]              havoc __ret_0_implementation;
[L4312]              havoc arg1675_s0;
[L4313]              havoc arg1676_s0;
[L4314]              havoc __ret_0_timelockList;
[L4315]              havoc arg1677_s0;
[L4316]              havoc __ret_0_frozenAccount;
[L4317]              havoc holder_s1351;
[L4318]              havoc __ret_0_freezeAccount;
[L4319]              havoc holder_s1379;
[L4320]              havoc __ret_0_unfreezeAccount;
[L4321]              havoc holder_s1410;
[L4322]              havoc value_s1410;
[L4323]              havoc releaseTime_s1410;
[L4324]              havoc __ret_0_lock;
[L4325]              havoc holder_s1439;
[L4326]              havoc value_s1439;
[L4327]              havoc releaseTime_s1439;
[L4328]              havoc __ret_0_transferWithLock;
[L4329]              havoc holder_s1468;
[L4330]              havoc idx_s1468;
[L4331]              havoc __ret_0_unlock;
[L4332]              havoc _newImplementation_s1486;
[L4333]              havoc tmpNow;
[L4334]              havoc gas;
[L4335]              assume gas > 4000000 && gas <= 8000000;
[L4336]              tmpNow := now;
[L4337]              havoc now;
[L4338]              assume now > tmpNow;
[L4339]              assume msgsender_MSG != null;
[L4340]  COND TRUE   choice == 6
[L4341]              gas := gas - 21000;
[L4342]  COND TRUE   gas >= 0
[L4343]              assume value_s1288 >= 0 && value_s1288 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4344]              assume msgvalue_MSG == 0;
[L4345]  CALL        call __ret_0_transfer := transfer~address~uint256_BLY(this, msgsender_MSG, msgvalue_MSG, to_s1288, value_s1288);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == to_s1288 && value_s1288 > _balances_HxERC20[this][msgsender_MSG]) && value_s1288 >= 0) && value_s1288 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_HxERC20[this][to_s1288] >= 0) && _balances_HxERC20[this][to_s1288] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_HxERC20[this][msgsender_MSG] >= 0) && _balances_HxERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_BLY0 := true;
[L2]                 call_transfer_BLY0 := false;
[L2]                 revert := revert_hold;
[L871]               havoc __exception;
[L872]               revert := false;
[L873]   COND FALSE  !(__exception)
[L909]   CALL        call __ret_0_ := transfer~address~uint256_BLY__success(this, msgsender_MSG, msgvalue_MSG, to_s1288, value_s1288);
[L2292]  CALL        call notFrozen_pre__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG);
[L3578]  COND TRUE   !!frozenAccount_BLY[this][_holder_s1185]
[L3579]              revert := true;
[L2292]  RET         call notFrozen_pre__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG);
[L2293]  COND TRUE   revert
[L909]   RET         call __ret_0_ := transfer~address~uint256_BLY__success(this, msgsender_MSG, msgvalue_MSG, to_s1288, value_s1288);
[L910]               assume !revert && gas >= 0;
[L4345]  RET         call __ret_0_transfer := transfer~address~uint256_BLY(this, msgsender_MSG, msgvalue_MSG, to_s1288, value_s1288);
[L4392]  RET         call CorralChoice_BLY(this);

Loop:
[L4392]        assume true;

[2020-11-24 15:41:32,829 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 15:41:32,830 INFO  L82        PathProgramCache]: Analyzing trace with hash -1605922083, now seen corresponding path program 1 times
[2020-11-24 15:41:32,831 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 15:41:32,839 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 15:41:32,853 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 15:41:32,854 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 15:41:32,854 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-24 15:41:32,854 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 15:41:32,854 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-24 15:41:32,854 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-24 15:41:32,854 INFO  L87              Difference]: Start difference. First operand 383 states and 437 transitions. cyclomatic complexity: 56 Second operand 3 states.
[2020-11-24 15:41:32,862 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 15:41:32,862 INFO  L93              Difference]: Finished difference Result 387 states and 426 transitions.
[2020-11-24 15:41:32,862 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-24 15:41:32,862 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 387 states and 426 transitions.
[2020-11-24 15:41:32,864 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 15:41:32,865 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 387 states to 332 states and 362 transitions.
[2020-11-24 15:41:32,865 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 140
[2020-11-24 15:41:32,866 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 140
[2020-11-24 15:41:32,866 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 332 states and 362 transitions.
[2020-11-24 15:41:32,866 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 15:41:32,866 INFO  L728         BuchiCegarLoop]: Abstraction has 332 states and 362 transitions.
[2020-11-24 15:41:32,867 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 332 states and 362 transitions.
[2020-11-24 15:41:32,869 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 332 to 332.
[2020-11-24 15:41:32,869 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 332 states.
[2020-11-24 15:41:32,870 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 332 states to 332 states and 362 transitions.
[2020-11-24 15:41:32,870 INFO  L751         BuchiCegarLoop]: Abstraction has 332 states and 362 transitions.
[2020-11-24 15:41:32,870 INFO  L631         BuchiCegarLoop]: Abstraction has 332 states and 362 transitions.
[2020-11-24 15:41:32,870 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-24 15:41:32,870 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 332 states and 362 transitions.
[2020-11-24 15:41:32,871 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 15:41:32,871 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 15:41:32,871 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 15:41:32,872 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 15:41:32,872 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L2]                 fail_transfer_BLY0 := false;
[L2]                 call_transfer_BLY0 := false;
[L2]     CALL        call main();
[L4387]              assume null == 0;
[L4388]  CALL        call this := FreshRefGenerator__success();
[L1636]              havoc newRef;
[L1637]              assume Alloc[newRef] == false;
[L1638]              Alloc[newRef] := true;
[L1639]              assume newRef != null;
[L4388]  RET         call this := FreshRefGenerator__success();
[L4389]              assume now >= 0;
[L4390]              assume DType[this] == BLY;
[L4391]              assume !revert && gas >= 0;
[L4392]  CALL        call CorralChoice_BLY(this);
[L4269]              havoc msgsender_MSG;
[L4270]              havoc msgvalue_MSG;
[L4271]              havoc choice;
[L4272]              havoc __ret_0_owner;
[L4273]              havoc __ret_0_newOwner;
[L4274]              havoc account_s293;
[L4275]              havoc __ret_0_isOwner;
[L4276]              havoc _newOwner_s313;
[L4277]              havoc __ret_0_acceptOwnership;
[L4278]              havoc account_s390;
[L4279]              havoc __ret_0_isPauser;
[L4280]              havoc account_s402;
[L4281]              havoc account_s414;
[L4282]              havoc __ret_0_paused;
[L4283]              havoc to_s1288;
[L4284]              havoc value_s1288;
[L4285]              havoc __ret_0_transfer;
[L4286]              havoc spender_s711;
[L4287]              havoc value_s711;
[L4288]              havoc __ret_0_approve;
[L4289]              havoc from_s1322;
[L4290]              havoc to_s1322;
[L4291]              havoc value_s1322;
[L4292]              havoc __ret_0_transferFrom;
[L4293]              havoc __ret_0_totalSupply;
[L4294]              havoc owner_s1254;
[L4295]              havoc __ret_0_balanceOf;
[L4296]              havoc owner_s656;
[L4297]              havoc spender_s656;
[L4298]              havoc __ret_0_allowance;
[L4299]              havoc spender_s809;
[L4300]              havoc addedValue_s809;
[L4301]              havoc __ret_0_increaseAllowance;
[L4302]              havoc spender_s858;
[L4303]              havoc subtractedValue_s858;
[L4304]              havoc __ret_0_decreaseAllowance;
[L4305]              havoc name_s1105;
[L4306]              havoc symbol_s1105;
[L4307]              havoc decimals_s1105;
[L4308]              havoc __ret_0_name;
[L4309]              havoc __ret_0_symbol;
[L4310]              havoc __ret_0_decimals;
[L4311]              havoc __ret_0_implementation;
[L4312]              havoc arg1675_s0;
[L4313]              havoc arg1676_s0;
[L4314]              havoc __ret_0_timelockList;
[L4315]              havoc arg1677_s0;
[L4316]              havoc __ret_0_frozenAccount;
[L4317]              havoc holder_s1351;
[L4318]              havoc __ret_0_freezeAccount;
[L4319]              havoc holder_s1379;
[L4320]              havoc __ret_0_unfreezeAccount;
[L4321]              havoc holder_s1410;
[L4322]              havoc value_s1410;
[L4323]              havoc releaseTime_s1410;
[L4324]              havoc __ret_0_lock;
[L4325]              havoc holder_s1439;
[L4326]              havoc value_s1439;
[L4327]              havoc releaseTime_s1439;
[L4328]              havoc __ret_0_transferWithLock;
[L4329]              havoc holder_s1468;
[L4330]              havoc idx_s1468;
[L4331]              havoc __ret_0_unlock;
[L4332]              havoc _newImplementation_s1486;
[L4333]              havoc tmpNow;
[L4334]              havoc gas;
[L4335]              assume gas > 4000000 && gas <= 8000000;
[L4336]              tmpNow := now;
[L4337]              havoc now;
[L4338]              assume now > tmpNow;
[L4339]              assume msgsender_MSG != null;
[L4340]  COND TRUE   choice == 6
[L4341]              gas := gas - 21000;
[L4342]  COND TRUE   gas >= 0
[L4343]              assume value_s1288 >= 0 && value_s1288 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4344]              assume msgvalue_MSG == 0;
[L4345]  CALL        call __ret_0_transfer := transfer~address~uint256_BLY(this, msgsender_MSG, msgvalue_MSG, to_s1288, value_s1288);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == to_s1288 && value_s1288 > _balances_HxERC20[this][msgsender_MSG]) && value_s1288 >= 0) && value_s1288 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_HxERC20[this][to_s1288] >= 0) && _balances_HxERC20[this][to_s1288] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_HxERC20[this][msgsender_MSG] >= 0) && _balances_HxERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_BLY0 := true;
[L2]                 call_transfer_BLY0 := false;
[L2]                 revert := revert_hold;
[L871]               havoc __exception;
[L872]               revert := false;
[L873]   COND FALSE  !(__exception)
[L909]   CALL        call __ret_0_ := transfer~address~uint256_BLY__success(this, msgsender_MSG, msgvalue_MSG, to_s1288, value_s1288);
[L2292]  CALL        call notFrozen_pre__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG);
[L3578]  COND FALSE  !(!!frozenAccount_BLY[this][_holder_s1185])
[L2292]  RET         call notFrozen_pre__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG);
[L2293]  COND FALSE  !(revert)
[L2296]  COND FALSE  !(alloc_timelockList_BLY_lvl0[timelockList_BLY[this]][msgsender_MSG] == false)
[L2307]  COND FALSE  !(Length[M_Ref_Ref[timelockList_BLY[this]][msgsender_MSG]] > 0)
[L2313]  COND TRUE   DType[this] == BLY
[L2314]  CALL        call __var_20 := transfer~address~uint256_ERC20Pausable__success(this, msgsender_MSG, msgvalue_MSG, to_s1288, value_s1288);
[L2038]  CALL        call whenNotPaused_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L3554]  COND FALSE  !(!!_paused_Pausable[this])
[L2038]  RET         call whenNotPaused_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L2039]  COND FALSE  !(revert)
[L2042]  COND TRUE   DType[this] == BLY
[L2043]  CALL        call __var_9 := transfer~address~uint256_HxERC20__success(this, msgsender_MSG, msgvalue_MSG, to_s1053, value_s1053);
[L1838]  COND FALSE  !(DType[this] == BLY)
[L1843]  COND FALSE  !(DType[this] == ERC20Pausable)
[L1848]  COND TRUE   DType[this] == HxERC20
[L1849]  CALL        call _transfer~address~address~uint256_HxERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s675, value_s675);
[L1987]              __var_6 := null;
[L1988]  COND FALSE  !(!(to_s904 != null))
[L1992]  CALL        call __var_7 := sub~uint256~uint256_HxSafeMath__success(this, this, 0, _balances_HxERC20[this][from_s904], value_s904);
[L1679]  COND FALSE  !(!(b_s82 <= a_s82))
[L1683]              c_s82 := (a_s82 - b_s82) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1684]              __ret_0_ := c_s82;
[L1992]  RET         call __var_7 := sub~uint256~uint256_HxSafeMath__success(this, this, 0, _balances_HxERC20[this][from_s904], value_s904);
[L1993]  COND FALSE  !(revert)
[L1996]              sum__balances0[this] := sum__balances0[this] - _balances_HxERC20[this][from_s904];
[L1997]              _balances_HxERC20[this][from_s904] := __var_7;
[L1998]              sum__balances0[this] := sum__balances0[this] + _balances_HxERC20[this][from_s904];
[L1999]  CALL        call __var_8 := add~uint256~uint256_HxSafeMath__success(this, this, 0, _balances_HxERC20[this][to_s904], value_s904);
[L1703]              c_s106 := (a_s106 + b_s106) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1704]  COND FALSE  !(!(c_s106 >= a_s106))
[L1708]              __ret_0_ := c_s106;
[L1999]  RET         call __var_8 := add~uint256~uint256_HxSafeMath__success(this, this, 0, _balances_HxERC20[this][to_s904], value_s904);
[L2000]  COND FALSE  !(revert)
[L2003]              sum__balances0[this] := sum__balances0[this] - _balances_HxERC20[this][to_s904];
[L2004]              _balances_HxERC20[this][to_s904] := __var_8;
[L2005]              sum__balances0[this] := sum__balances0[this] + _balances_HxERC20[this][to_s904];
[L2006]              assert { :EventEmitted "Transfer_HxERC20" } true;
[L1849]  RET         call _transfer~address~address~uint256_HxERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s675, value_s675);
[L1850]  COND FALSE  !(revert)
[L1856]              __ret_0_ := true;
[L2043]  RET         call __var_9 := transfer~address~uint256_HxERC20__success(this, msgsender_MSG, msgvalue_MSG, to_s1053, value_s1053);
[L2044]  COND FALSE  !(revert)
[L2055]              __ret_0_ := __var_9;
[L2314]  RET         call __var_20 := transfer~address~uint256_ERC20Pausable__success(this, msgsender_MSG, msgvalue_MSG, to_s1288, value_s1288);
[L2315]  COND FALSE  !(revert)
[L2321]              __ret_0_ := __var_20;
[L909]   RET         call __ret_0_ := transfer~address~uint256_BLY__success(this, msgsender_MSG, msgvalue_MSG, to_s1288, value_s1288);
[L910]               assume !revert && gas >= 0;
[L4345]  RET         call __ret_0_transfer := transfer~address~uint256_BLY(this, msgsender_MSG, msgvalue_MSG, to_s1288, value_s1288);
[L4392]  RET         call CorralChoice_BLY(this);

Loop:
[L4392]        assume true;

[2020-11-24 15:41:32,874 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 15:41:32,874 INFO  L82        PathProgramCache]: Analyzing trace with hash 1948838151, now seen corresponding path program 1 times
[2020-11-24 15:41:32,875 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 15:41:32,883 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 15:41:32,918 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 15:41:32,918 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 15:41:32,918 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [5] imperfect sequences [] total 5
[2020-11-24 15:41:32,919 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 15:41:32,919 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 5 interpolants.
[2020-11-24 15:41:32,919 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=7, Invalid=13, Unknown=0, NotChecked=0, Total=20
[2020-11-24 15:41:32,919 INFO  L87              Difference]: Start difference. First operand 332 states and 362 transitions. cyclomatic complexity: 32 Second operand 5 states.
[2020-11-24 15:41:32,932 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 15:41:32,932 INFO  L93              Difference]: Finished difference Result 342 states and 372 transitions.
[2020-11-24 15:41:32,932 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 5 states. 
[2020-11-24 15:41:32,932 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 342 states and 372 transitions.
[2020-11-24 15:41:32,933 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 15:41:32,935 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 342 states to 327 states and 355 transitions.
[2020-11-24 15:41:32,935 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 138
[2020-11-24 15:41:32,935 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 138
[2020-11-24 15:41:32,935 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 327 states and 355 transitions.
[2020-11-24 15:41:32,935 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 15:41:32,935 INFO  L728         BuchiCegarLoop]: Abstraction has 327 states and 355 transitions.
[2020-11-24 15:41:32,936 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 327 states and 355 transitions.
[2020-11-24 15:41:32,938 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 327 to 327.
[2020-11-24 15:41:32,938 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 327 states.
[2020-11-24 15:41:32,938 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 327 states to 327 states and 355 transitions.
[2020-11-24 15:41:32,938 INFO  L751         BuchiCegarLoop]: Abstraction has 327 states and 355 transitions.
[2020-11-24 15:41:32,939 INFO  L631         BuchiCegarLoop]: Abstraction has 327 states and 355 transitions.
[2020-11-24 15:41:32,939 INFO  L445         BuchiCegarLoop]: ======== Iteration 5============
[2020-11-24 15:41:32,939 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 327 states and 355 transitions.
[2020-11-24 15:41:32,939 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 15:41:32,939 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 15:41:32,939 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 15:41:32,940 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 15:41:32,941 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L2]                 fail_transfer_BLY0 := false;
[L2]                 call_transfer_BLY0 := false;
[L2]     CALL        call main();
[L4387]              assume null == 0;
[L4388]  CALL        call this := FreshRefGenerator__success();
[L1636]              havoc newRef;
[L1637]              assume Alloc[newRef] == false;
[L1638]              Alloc[newRef] := true;
[L1639]              assume newRef != null;
[L4388]  RET         call this := FreshRefGenerator__success();
[L4389]              assume now >= 0;
[L4390]              assume DType[this] == BLY;
[L4391]              assume !revert && gas >= 0;
[L4392]  CALL        call CorralChoice_BLY(this);
[L4269]              havoc msgsender_MSG;
[L4270]              havoc msgvalue_MSG;
[L4271]              havoc choice;
[L4272]              havoc __ret_0_owner;
[L4273]              havoc __ret_0_newOwner;
[L4274]              havoc account_s293;
[L4275]              havoc __ret_0_isOwner;
[L4276]              havoc _newOwner_s313;
[L4277]              havoc __ret_0_acceptOwnership;
[L4278]              havoc account_s390;
[L4279]              havoc __ret_0_isPauser;
[L4280]              havoc account_s402;
[L4281]              havoc account_s414;
[L4282]              havoc __ret_0_paused;
[L4283]              havoc to_s1288;
[L4284]              havoc value_s1288;
[L4285]              havoc __ret_0_transfer;
[L4286]              havoc spender_s711;
[L4287]              havoc value_s711;
[L4288]              havoc __ret_0_approve;
[L4289]              havoc from_s1322;
[L4290]              havoc to_s1322;
[L4291]              havoc value_s1322;
[L4292]              havoc __ret_0_transferFrom;
[L4293]              havoc __ret_0_totalSupply;
[L4294]              havoc owner_s1254;
[L4295]              havoc __ret_0_balanceOf;
[L4296]              havoc owner_s656;
[L4297]              havoc spender_s656;
[L4298]              havoc __ret_0_allowance;
[L4299]              havoc spender_s809;
[L4300]              havoc addedValue_s809;
[L4301]              havoc __ret_0_increaseAllowance;
[L4302]              havoc spender_s858;
[L4303]              havoc subtractedValue_s858;
[L4304]              havoc __ret_0_decreaseAllowance;
[L4305]              havoc name_s1105;
[L4306]              havoc symbol_s1105;
[L4307]              havoc decimals_s1105;
[L4308]              havoc __ret_0_name;
[L4309]              havoc __ret_0_symbol;
[L4310]              havoc __ret_0_decimals;
[L4311]              havoc __ret_0_implementation;
[L4312]              havoc arg1675_s0;
[L4313]              havoc arg1676_s0;
[L4314]              havoc __ret_0_timelockList;
[L4315]              havoc arg1677_s0;
[L4316]              havoc __ret_0_frozenAccount;
[L4317]              havoc holder_s1351;
[L4318]              havoc __ret_0_freezeAccount;
[L4319]              havoc holder_s1379;
[L4320]              havoc __ret_0_unfreezeAccount;
[L4321]              havoc holder_s1410;
[L4322]              havoc value_s1410;
[L4323]              havoc releaseTime_s1410;
[L4324]              havoc __ret_0_lock;
[L4325]              havoc holder_s1439;
[L4326]              havoc value_s1439;
[L4327]              havoc releaseTime_s1439;
[L4328]              havoc __ret_0_transferWithLock;
[L4329]              havoc holder_s1468;
[L4330]              havoc idx_s1468;
[L4331]              havoc __ret_0_unlock;
[L4332]              havoc _newImplementation_s1486;
[L4333]              havoc tmpNow;
[L4334]              havoc gas;
[L4335]              assume gas > 4000000 && gas <= 8000000;
[L4336]              tmpNow := now;
[L4337]              havoc now;
[L4338]              assume now > tmpNow;
[L4339]              assume msgsender_MSG != null;
[L4340]  COND TRUE   choice == 6
[L4341]              gas := gas - 21000;
[L4342]  COND TRUE   gas >= 0
[L4343]              assume value_s1288 >= 0 && value_s1288 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4344]              assume msgvalue_MSG == 0;
[L4345]  CALL        call __ret_0_transfer := transfer~address~uint256_BLY(this, msgsender_MSG, msgvalue_MSG, to_s1288, value_s1288);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == to_s1288 && value_s1288 > _balances_HxERC20[this][msgsender_MSG]) && value_s1288 >= 0) && value_s1288 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_HxERC20[this][to_s1288] >= 0) && _balances_HxERC20[this][to_s1288] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_HxERC20[this][msgsender_MSG] >= 0) && _balances_HxERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_BLY0 := true;
[L2]                 call_transfer_BLY0 := false;
[L2]                 revert := revert_hold;
[L871]               havoc __exception;
[L872]               revert := false;
[L873]   COND FALSE  !(__exception)
[L909]   CALL        call __ret_0_ := transfer~address~uint256_BLY__success(this, msgsender_MSG, msgvalue_MSG, to_s1288, value_s1288);
[L2292]  CALL        call notFrozen_pre__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG);
[L3578]  COND FALSE  !(!!frozenAccount_BLY[this][_holder_s1185])
[L2292]  RET         call notFrozen_pre__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG);
[L2293]  COND FALSE  !(revert)
[L2296]  COND FALSE  !(alloc_timelockList_BLY_lvl0[timelockList_BLY[this]][msgsender_MSG] == false)
[L2307]  COND FALSE  !(Length[M_Ref_Ref[timelockList_BLY[this]][msgsender_MSG]] > 0)
[L2313]  COND TRUE   DType[this] == BLY
[L2314]  CALL        call __var_20 := transfer~address~uint256_ERC20Pausable__success(this, msgsender_MSG, msgvalue_MSG, to_s1288, value_s1288);
[L2038]  CALL        call whenNotPaused_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L3554]  COND FALSE  !(!!_paused_Pausable[this])
[L2038]  RET         call whenNotPaused_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L2039]  COND FALSE  !(revert)
[L2042]  COND TRUE   DType[this] == BLY
[L2043]  CALL        call __var_9 := transfer~address~uint256_HxERC20__success(this, msgsender_MSG, msgvalue_MSG, to_s1053, value_s1053);
[L1838]  COND FALSE  !(DType[this] == BLY)
[L1843]  COND TRUE   DType[this] == ERC20Pausable
[L1844]  CALL        call _transfer~address~address~uint256_HxERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s675, value_s675);
[L1987]              __var_6 := null;
[L1988]  COND FALSE  !(!(to_s904 != null))
[L1992]  CALL        call __var_7 := sub~uint256~uint256_HxSafeMath__success(this, this, 0, _balances_HxERC20[this][from_s904], value_s904);
[L1679]  COND FALSE  !(!(b_s82 <= a_s82))
[L1683]              c_s82 := (a_s82 - b_s82) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1684]              __ret_0_ := c_s82;
[L1992]  RET         call __var_7 := sub~uint256~uint256_HxSafeMath__success(this, this, 0, _balances_HxERC20[this][from_s904], value_s904);
[L1993]  COND FALSE  !(revert)
[L1996]              sum__balances0[this] := sum__balances0[this] - _balances_HxERC20[this][from_s904];
[L1997]              _balances_HxERC20[this][from_s904] := __var_7;
[L1998]              sum__balances0[this] := sum__balances0[this] + _balances_HxERC20[this][from_s904];
[L1999]  CALL        call __var_8 := add~uint256~uint256_HxSafeMath__success(this, this, 0, _balances_HxERC20[this][to_s904], value_s904);
[L1703]              c_s106 := (a_s106 + b_s106) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1704]  COND FALSE  !(!(c_s106 >= a_s106))
[L1708]              __ret_0_ := c_s106;
[L1999]  RET         call __var_8 := add~uint256~uint256_HxSafeMath__success(this, this, 0, _balances_HxERC20[this][to_s904], value_s904);
[L2000]  COND FALSE  !(revert)
[L2003]              sum__balances0[this] := sum__balances0[this] - _balances_HxERC20[this][to_s904];
[L2004]              _balances_HxERC20[this][to_s904] := __var_8;
[L2005]              sum__balances0[this] := sum__balances0[this] + _balances_HxERC20[this][to_s904];
[L2006]              assert { :EventEmitted "Transfer_HxERC20" } true;
[L1844]  RET         call _transfer~address~address~uint256_HxERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s675, value_s675);
[L1845]  COND FALSE  !(revert)
[L1856]              __ret_0_ := true;
[L2043]  RET         call __var_9 := transfer~address~uint256_HxERC20__success(this, msgsender_MSG, msgvalue_MSG, to_s1053, value_s1053);
[L2044]  COND FALSE  !(revert)
[L2055]              __ret_0_ := __var_9;
[L2314]  RET         call __var_20 := transfer~address~uint256_ERC20Pausable__success(this, msgsender_MSG, msgvalue_MSG, to_s1288, value_s1288);
[L2315]  COND FALSE  !(revert)
[L2321]              __ret_0_ := __var_20;
[L909]   RET         call __ret_0_ := transfer~address~uint256_BLY__success(this, msgsender_MSG, msgvalue_MSG, to_s1288, value_s1288);
[L910]               assume !revert && gas >= 0;
[L4345]  RET         call __ret_0_transfer := transfer~address~uint256_BLY(this, msgsender_MSG, msgvalue_MSG, to_s1288, value_s1288);
[L4392]  RET         call CorralChoice_BLY(this);

Loop:
[L4392]        assume true;

[2020-11-24 15:41:32,943 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 15:41:32,943 INFO  L82        PathProgramCache]: Analyzing trace with hash 1515669857, now seen corresponding path program 1 times
[2020-11-24 15:41:32,943 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 15:41:32,951 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 15:41:32,978 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 15:41:32,978 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 15:41:32,979 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [5] imperfect sequences [] total 5
[2020-11-24 15:41:32,979 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 15:41:32,979 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 5 interpolants.
[2020-11-24 15:41:32,979 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=7, Invalid=13, Unknown=0, NotChecked=0, Total=20
[2020-11-24 15:41:32,979 INFO  L87              Difference]: Start difference. First operand 327 states and 355 transitions. cyclomatic complexity: 30 Second operand 5 states.
[2020-11-24 15:41:32,991 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 15:41:32,991 INFO  L93              Difference]: Finished difference Result 337 states and 364 transitions.
[2020-11-24 15:41:32,991 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 5 states. 
[2020-11-24 15:41:32,992 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 337 states and 364 transitions.
[2020-11-24 15:41:32,993 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 15:41:32,994 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 337 states to 317 states and 341 transitions.
[2020-11-24 15:41:32,994 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 134
[2020-11-24 15:41:32,994 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 134
[2020-11-24 15:41:32,994 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 317 states and 341 transitions.
[2020-11-24 15:41:32,994 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 15:41:32,994 INFO  L728         BuchiCegarLoop]: Abstraction has 317 states and 341 transitions.
[2020-11-24 15:41:32,995 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 317 states and 341 transitions.
[2020-11-24 15:41:32,997 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 317 to 317.
[2020-11-24 15:41:32,997 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 317 states.
[2020-11-24 15:41:32,998 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 317 states to 317 states and 341 transitions.
[2020-11-24 15:41:32,998 INFO  L751         BuchiCegarLoop]: Abstraction has 317 states and 341 transitions.
[2020-11-24 15:41:32,998 INFO  L631         BuchiCegarLoop]: Abstraction has 317 states and 341 transitions.
[2020-11-24 15:41:32,998 INFO  L445         BuchiCegarLoop]: ======== Iteration 6============
[2020-11-24 15:41:32,998 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 317 states and 341 transitions.
[2020-11-24 15:41:32,999 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 15:41:32,999 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 15:41:32,999 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 15:41:33,000 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 15:41:33,000 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L2]                 fail_transfer_BLY0 := false;
[L2]                 call_transfer_BLY0 := false;
[L2]     CALL        call main();
[L4387]              assume null == 0;
[L4388]  CALL        call this := FreshRefGenerator__success();
[L1636]              havoc newRef;
[L1637]              assume Alloc[newRef] == false;
[L1638]              Alloc[newRef] := true;
[L1639]              assume newRef != null;
[L4388]  RET         call this := FreshRefGenerator__success();
[L4389]              assume now >= 0;
[L4390]              assume DType[this] == BLY;
[L4391]              assume !revert && gas >= 0;
[L4392]  CALL        call CorralChoice_BLY(this);
[L4269]              havoc msgsender_MSG;
[L4270]              havoc msgvalue_MSG;
[L4271]              havoc choice;
[L4272]              havoc __ret_0_owner;
[L4273]              havoc __ret_0_newOwner;
[L4274]              havoc account_s293;
[L4275]              havoc __ret_0_isOwner;
[L4276]              havoc _newOwner_s313;
[L4277]              havoc __ret_0_acceptOwnership;
[L4278]              havoc account_s390;
[L4279]              havoc __ret_0_isPauser;
[L4280]              havoc account_s402;
[L4281]              havoc account_s414;
[L4282]              havoc __ret_0_paused;
[L4283]              havoc to_s1288;
[L4284]              havoc value_s1288;
[L4285]              havoc __ret_0_transfer;
[L4286]              havoc spender_s711;
[L4287]              havoc value_s711;
[L4288]              havoc __ret_0_approve;
[L4289]              havoc from_s1322;
[L4290]              havoc to_s1322;
[L4291]              havoc value_s1322;
[L4292]              havoc __ret_0_transferFrom;
[L4293]              havoc __ret_0_totalSupply;
[L4294]              havoc owner_s1254;
[L4295]              havoc __ret_0_balanceOf;
[L4296]              havoc owner_s656;
[L4297]              havoc spender_s656;
[L4298]              havoc __ret_0_allowance;
[L4299]              havoc spender_s809;
[L4300]              havoc addedValue_s809;
[L4301]              havoc __ret_0_increaseAllowance;
[L4302]              havoc spender_s858;
[L4303]              havoc subtractedValue_s858;
[L4304]              havoc __ret_0_decreaseAllowance;
[L4305]              havoc name_s1105;
[L4306]              havoc symbol_s1105;
[L4307]              havoc decimals_s1105;
[L4308]              havoc __ret_0_name;
[L4309]              havoc __ret_0_symbol;
[L4310]              havoc __ret_0_decimals;
[L4311]              havoc __ret_0_implementation;
[L4312]              havoc arg1675_s0;
[L4313]              havoc arg1676_s0;
[L4314]              havoc __ret_0_timelockList;
[L4315]              havoc arg1677_s0;
[L4316]              havoc __ret_0_frozenAccount;
[L4317]              havoc holder_s1351;
[L4318]              havoc __ret_0_freezeAccount;
[L4319]              havoc holder_s1379;
[L4320]              havoc __ret_0_unfreezeAccount;
[L4321]              havoc holder_s1410;
[L4322]              havoc value_s1410;
[L4323]              havoc releaseTime_s1410;
[L4324]              havoc __ret_0_lock;
[L4325]              havoc holder_s1439;
[L4326]              havoc value_s1439;
[L4327]              havoc releaseTime_s1439;
[L4328]              havoc __ret_0_transferWithLock;
[L4329]              havoc holder_s1468;
[L4330]              havoc idx_s1468;
[L4331]              havoc __ret_0_unlock;
[L4332]              havoc _newImplementation_s1486;
[L4333]              havoc tmpNow;
[L4334]              havoc gas;
[L4335]              assume gas > 4000000 && gas <= 8000000;
[L4336]              tmpNow := now;
[L4337]              havoc now;
[L4338]              assume now > tmpNow;
[L4339]              assume msgsender_MSG != null;
[L4340]  COND TRUE   choice == 6
[L4341]              gas := gas - 21000;
[L4342]  COND TRUE   gas >= 0
[L4343]              assume value_s1288 >= 0 && value_s1288 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4344]              assume msgvalue_MSG == 0;
[L4345]  CALL        call __ret_0_transfer := transfer~address~uint256_BLY(this, msgsender_MSG, msgvalue_MSG, to_s1288, value_s1288);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == to_s1288 && value_s1288 > _balances_HxERC20[this][msgsender_MSG]) && value_s1288 >= 0) && value_s1288 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_HxERC20[this][to_s1288] >= 0) && _balances_HxERC20[this][to_s1288] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_HxERC20[this][msgsender_MSG] >= 0) && _balances_HxERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_BLY0 := true;
[L2]                 call_transfer_BLY0 := false;
[L2]                 revert := revert_hold;
[L871]               havoc __exception;
[L872]               revert := false;
[L873]   COND FALSE  !(__exception)
[L909]   CALL        call __ret_0_ := transfer~address~uint256_BLY__success(this, msgsender_MSG, msgvalue_MSG, to_s1288, value_s1288);
[L2292]  CALL        call notFrozen_pre__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG);
[L3578]  COND FALSE  !(!!frozenAccount_BLY[this][_holder_s1185])
[L2292]  RET         call notFrozen_pre__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG);
[L2293]  COND FALSE  !(revert)
[L2296]  COND FALSE  !(alloc_timelockList_BLY_lvl0[timelockList_BLY[this]][msgsender_MSG] == false)
[L2307]  COND FALSE  !(Length[M_Ref_Ref[timelockList_BLY[this]][msgsender_MSG]] > 0)
[L2313]  COND TRUE   DType[this] == BLY
[L2314]  CALL        call __var_20 := transfer~address~uint256_ERC20Pausable__success(this, msgsender_MSG, msgvalue_MSG, to_s1288, value_s1288);
[L2038]  CALL        call whenNotPaused_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L3554]  COND FALSE  !(!!_paused_Pausable[this])
[L2038]  RET         call whenNotPaused_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L2039]  COND FALSE  !(revert)
[L2042]  COND TRUE   DType[this] == BLY
[L2043]  CALL        call __var_9 := transfer~address~uint256_HxERC20__success(this, msgsender_MSG, msgvalue_MSG, to_s1053, value_s1053);
[L1838]  COND TRUE   DType[this] == BLY
[L1839]  CALL        call _transfer~address~address~uint256_HxERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s675, value_s675);
[L1987]              __var_6 := null;
[L1988]  COND FALSE  !(!(to_s904 != null))
[L1992]  CALL        call __var_7 := sub~uint256~uint256_HxSafeMath__success(this, this, 0, _balances_HxERC20[this][from_s904], value_s904);
[L1679]  COND FALSE  !(!(b_s82 <= a_s82))
[L1683]              c_s82 := (a_s82 - b_s82) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1684]              __ret_0_ := c_s82;
[L1992]  RET         call __var_7 := sub~uint256~uint256_HxSafeMath__success(this, this, 0, _balances_HxERC20[this][from_s904], value_s904);
[L1993]  COND FALSE  !(revert)
[L1996]              sum__balances0[this] := sum__balances0[this] - _balances_HxERC20[this][from_s904];
[L1997]              _balances_HxERC20[this][from_s904] := __var_7;
[L1998]              sum__balances0[this] := sum__balances0[this] + _balances_HxERC20[this][from_s904];
[L1999]  CALL        call __var_8 := add~uint256~uint256_HxSafeMath__success(this, this, 0, _balances_HxERC20[this][to_s904], value_s904);
[L1703]              c_s106 := (a_s106 + b_s106) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1704]  COND FALSE  !(!(c_s106 >= a_s106))
[L1708]              __ret_0_ := c_s106;
[L1999]  RET         call __var_8 := add~uint256~uint256_HxSafeMath__success(this, this, 0, _balances_HxERC20[this][to_s904], value_s904);
[L2000]  COND FALSE  !(revert)
[L2003]              sum__balances0[this] := sum__balances0[this] - _balances_HxERC20[this][to_s904];
[L2004]              _balances_HxERC20[this][to_s904] := __var_8;
[L2005]              sum__balances0[this] := sum__balances0[this] + _balances_HxERC20[this][to_s904];
[L2006]              assert { :EventEmitted "Transfer_HxERC20" } true;
[L1839]  RET         call _transfer~address~address~uint256_HxERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s675, value_s675);
[L1840]  COND FALSE  !(revert)
[L1856]              __ret_0_ := true;
[L2043]  RET         call __var_9 := transfer~address~uint256_HxERC20__success(this, msgsender_MSG, msgvalue_MSG, to_s1053, value_s1053);
[L2044]  COND FALSE  !(revert)
[L2055]              __ret_0_ := __var_9;
[L2314]  RET         call __var_20 := transfer~address~uint256_ERC20Pausable__success(this, msgsender_MSG, msgvalue_MSG, to_s1288, value_s1288);
[L2315]  COND FALSE  !(revert)
[L2321]              __ret_0_ := __var_20;
[L909]   RET         call __ret_0_ := transfer~address~uint256_BLY__success(this, msgsender_MSG, msgvalue_MSG, to_s1288, value_s1288);
[L910]               assume !revert && gas >= 0;
[L4345]  RET         call __ret_0_transfer := transfer~address~uint256_BLY(this, msgsender_MSG, msgvalue_MSG, to_s1288, value_s1288);
[L4392]  RET         call CorralChoice_BLY(this);

Loop:
[L4392]        assume true;

[2020-11-24 15:41:33,002 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 15:41:33,002 INFO  L82        PathProgramCache]: Analyzing trace with hash -225178075, now seen corresponding path program 1 times
[2020-11-24 15:41:33,003 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 15:41:33,016 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 15:41:33,086 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 15:41:33,086 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 15:41:33,086 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [10] imperfect sequences [] total 10
[2020-11-24 15:41:33,087 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 15:41:33,087 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 10 interpolants.
[2020-11-24 15:41:33,087 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=19, Invalid=71, Unknown=0, NotChecked=0, Total=90
[2020-11-24 15:41:33,087 INFO  L87              Difference]: Start difference. First operand 317 states and 341 transitions. cyclomatic complexity: 26 Second operand 10 states.
[2020-11-24 15:41:33,204 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 15:41:33,204 INFO  L93              Difference]: Finished difference Result 343 states and 373 transitions.
[2020-11-24 15:41:33,204 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 10 states. 
[2020-11-24 15:41:33,204 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 343 states and 373 transitions.
[2020-11-24 15:41:33,206 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 15:41:33,207 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 343 states to 331 states and 358 transitions.
[2020-11-24 15:41:33,207 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 134
[2020-11-24 15:41:33,207 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 134
[2020-11-24 15:41:33,208 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 331 states and 358 transitions.
[2020-11-24 15:41:33,208 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 15:41:33,208 INFO  L728         BuchiCegarLoop]: Abstraction has 331 states and 358 transitions.
[2020-11-24 15:41:33,208 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 331 states and 358 transitions.
[2020-11-24 15:41:33,212 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 331 to 330.
[2020-11-24 15:41:33,212 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 330 states.
[2020-11-24 15:41:33,212 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 330 states to 330 states and 356 transitions.
[2020-11-24 15:41:33,213 INFO  L751         BuchiCegarLoop]: Abstraction has 330 states and 356 transitions.
[2020-11-24 15:41:33,213 INFO  L631         BuchiCegarLoop]: Abstraction has 330 states and 356 transitions.
[2020-11-24 15:41:33,213 INFO  L445         BuchiCegarLoop]: ======== Iteration 7============
[2020-11-24 15:41:33,213 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 330 states and 356 transitions.
[2020-11-24 15:41:33,214 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 15:41:33,214 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 15:41:33,214 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 15:41:33,215 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 15:41:33,215 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L2]                 fail_transfer_BLY0 := false;
[L2]                 call_transfer_BLY0 := false;
[L2]     CALL        call main();
[L4387]              assume null == 0;
[L4388]  CALL        call this := FreshRefGenerator__success();
[L1636]              havoc newRef;
[L1637]              assume Alloc[newRef] == false;
[L1638]              Alloc[newRef] := true;
[L1639]              assume newRef != null;
[L4388]  RET         call this := FreshRefGenerator__success();
[L4389]              assume now >= 0;
[L4390]              assume DType[this] == BLY;
[L4391]              assume !revert && gas >= 0;
[L4392]  CALL        call CorralChoice_BLY(this);
[L4269]              havoc msgsender_MSG;
[L4270]              havoc msgvalue_MSG;
[L4271]              havoc choice;
[L4272]              havoc __ret_0_owner;
[L4273]              havoc __ret_0_newOwner;
[L4274]              havoc account_s293;
[L4275]              havoc __ret_0_isOwner;
[L4276]              havoc _newOwner_s313;
[L4277]              havoc __ret_0_acceptOwnership;
[L4278]              havoc account_s390;
[L4279]              havoc __ret_0_isPauser;
[L4280]              havoc account_s402;
[L4281]              havoc account_s414;
[L4282]              havoc __ret_0_paused;
[L4283]              havoc to_s1288;
[L4284]              havoc value_s1288;
[L4285]              havoc __ret_0_transfer;
[L4286]              havoc spender_s711;
[L4287]              havoc value_s711;
[L4288]              havoc __ret_0_approve;
[L4289]              havoc from_s1322;
[L4290]              havoc to_s1322;
[L4291]              havoc value_s1322;
[L4292]              havoc __ret_0_transferFrom;
[L4293]              havoc __ret_0_totalSupply;
[L4294]              havoc owner_s1254;
[L4295]              havoc __ret_0_balanceOf;
[L4296]              havoc owner_s656;
[L4297]              havoc spender_s656;
[L4298]              havoc __ret_0_allowance;
[L4299]              havoc spender_s809;
[L4300]              havoc addedValue_s809;
[L4301]              havoc __ret_0_increaseAllowance;
[L4302]              havoc spender_s858;
[L4303]              havoc subtractedValue_s858;
[L4304]              havoc __ret_0_decreaseAllowance;
[L4305]              havoc name_s1105;
[L4306]              havoc symbol_s1105;
[L4307]              havoc decimals_s1105;
[L4308]              havoc __ret_0_name;
[L4309]              havoc __ret_0_symbol;
[L4310]              havoc __ret_0_decimals;
[L4311]              havoc __ret_0_implementation;
[L4312]              havoc arg1675_s0;
[L4313]              havoc arg1676_s0;
[L4314]              havoc __ret_0_timelockList;
[L4315]              havoc arg1677_s0;
[L4316]              havoc __ret_0_frozenAccount;
[L4317]              havoc holder_s1351;
[L4318]              havoc __ret_0_freezeAccount;
[L4319]              havoc holder_s1379;
[L4320]              havoc __ret_0_unfreezeAccount;
[L4321]              havoc holder_s1410;
[L4322]              havoc value_s1410;
[L4323]              havoc releaseTime_s1410;
[L4324]              havoc __ret_0_lock;
[L4325]              havoc holder_s1439;
[L4326]              havoc value_s1439;
[L4327]              havoc releaseTime_s1439;
[L4328]              havoc __ret_0_transferWithLock;
[L4329]              havoc holder_s1468;
[L4330]              havoc idx_s1468;
[L4331]              havoc __ret_0_unlock;
[L4332]              havoc _newImplementation_s1486;
[L4333]              havoc tmpNow;
[L4334]              havoc gas;
[L4335]              assume gas > 4000000 && gas <= 8000000;
[L4336]              tmpNow := now;
[L4337]              havoc now;
[L4338]              assume now > tmpNow;
[L4339]              assume msgsender_MSG != null;
[L4340]  COND TRUE   choice == 6
[L4341]              gas := gas - 21000;
[L4342]  COND TRUE   gas >= 0
[L4343]              assume value_s1288 >= 0 && value_s1288 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4344]              assume msgvalue_MSG == 0;
[L4345]  CALL        call __ret_0_transfer := transfer~address~uint256_BLY(this, msgsender_MSG, msgvalue_MSG, to_s1288, value_s1288);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == to_s1288 && value_s1288 > _balances_HxERC20[this][msgsender_MSG]) && value_s1288 >= 0) && value_s1288 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_HxERC20[this][to_s1288] >= 0) && _balances_HxERC20[this][to_s1288] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_HxERC20[this][msgsender_MSG] >= 0) && _balances_HxERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_BLY0 := true;
[L2]                 call_transfer_BLY0 := false;
[L2]                 revert := revert_hold;
[L871]               havoc __exception;
[L872]               revert := false;
[L873]   COND FALSE  !(__exception)
[L909]   CALL        call __ret_0_ := transfer~address~uint256_BLY__success(this, msgsender_MSG, msgvalue_MSG, to_s1288, value_s1288);
[L2292]  CALL        call notFrozen_pre__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG);
[L3578]  COND FALSE  !(!!frozenAccount_BLY[this][_holder_s1185])
[L2292]  RET         call notFrozen_pre__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG);
[L2293]  COND FALSE  !(revert)
[L2296]  COND FALSE  !(alloc_timelockList_BLY_lvl0[timelockList_BLY[this]][msgsender_MSG] == false)
[L2307]  COND TRUE   Length[M_Ref_Ref[timelockList_BLY[this]][msgsender_MSG]] > 0
[L2308]  CALL        call __var_19 := _autoUnlock~address_BLY__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG);
[L2653]  COND FALSE  !(alloc_timelockList_BLY_lvl0[timelockList_BLY[this]][holder_s1645] == false)
[L2664]              idx_s1645 := 0;
[L2665]  COND TRUE   idx_s1645 < Length[M_Ref_Ref[timelockList_BLY[this]][holder_s1645]]
[L2667]  COND FALSE  !(alloc_timelockList_BLY_lvl0[timelockList_BLY[this]][holder_s1645] == false)
[L2678]  COND TRUE   _releaseTime_BLY.LockInfo[M_int_Ref[M_Ref_Ref[timelockList_BLY[this]][holder_s1645]][idx_s1645]] <= now
[L2679]  CALL        call __var_36 := _unlock~address~uint256_BLY__success(this, msgsender_MSG, msgvalue_MSG, holder_s1645, idx_s1645);
[L2512]  COND FALSE  !(alloc_timelockList_BLY_lvl0[timelockList_BLY[this]][holder_s1600] == false)
[L2523]              lockinfo_s1600 := M_int_Ref[M_Ref_Ref[timelockList_BLY[this]][holder_s1600]][idx_s1600];
[L2524]              releaseAmount_s1600 := _amount_BLY.LockInfo[lockinfo_s1600];
[L2525]  COND FALSE  !(alloc_timelockList_BLY_lvl0[timelockList_BLY[this]][holder_s1600] == false)
[L2536]  COND FALSE  !(alloc_timelockList_BLY_lvl0[timelockList_BLY[this]][holder_s1600] == false)
[L2547]  COND FALSE  !(alloc_timelockList_BLY_lvl0[timelockList_BLY[this]][holder_s1600] == false)
[L2558]  CALL        call __var_29 := sub~uint256~uint256_HxSafeMath__success(this, this, 0, Length[M_Ref_Ref[timelockList_BLY[this]][holder_s1600]], 1);
[L1679]  COND FALSE  !(!(b_s82 <= a_s82))
[L1683]              c_s82 := (a_s82 - b_s82) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1684]              __ret_0_ := c_s82;
[L2558]  RET         call __var_29 := sub~uint256~uint256_HxSafeMath__success(this, this, 0, Length[M_Ref_Ref[timelockList_BLY[this]][holder_s1600]], 1);
[L2559]  COND FALSE  !(revert)
[L2562]  COND FALSE  !(alloc_timelockList_BLY_lvl0[timelockList_BLY[this]][holder_s1600] == false)
[L2573]              M_int_Ref[M_Ref_Ref[timelockList_BLY[this]][holder_s1600]][idx_s1600] := M_int_Ref[M_Ref_Ref[timelockList_BLY[this]][holder_s1600]][__var_29];
[L2574]  COND FALSE  !(alloc_timelockList_BLY_lvl0[timelockList_BLY[this]][holder_s1600] == false)
[L2585]              Length[M_Ref_Ref[timelockList_BLY[this]][holder_s1600]] := (Length[M_Ref_Ref[timelockList_BLY[this]][holder_s1600]] - 1) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2586]              assert { :EventEmitted "Unlock_BLY" } true;
[L2587]  CALL        call __var_33 := add~uint256~uint256_HxSafeMath__success(this, this, 0, _balances_HxERC20[this][holder_s1600], releaseAmount_s1600);
[L1703]              c_s106 := (a_s106 + b_s106) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1704]  COND FALSE  !(!(c_s106 >= a_s106))
[L1708]              __ret_0_ := c_s106;
[L2587]  RET         call __var_33 := add~uint256~uint256_HxSafeMath__success(this, this, 0, _balances_HxERC20[this][holder_s1600], releaseAmount_s1600);
[L2588]  COND FALSE  !(revert)
[L2591]              sum__balances0[this] := sum__balances0[this] - _balances_HxERC20[this][holder_s1600];
[L2592]              _balances_HxERC20[this][holder_s1600] := __var_33;
[L2593]              sum__balances0[this] := sum__balances0[this] + _balances_HxERC20[this][holder_s1600];
[L2594]              __ret_0_ := true;
[L2679]  RET         call __var_36 := _unlock~address~uint256_BLY__success(this, msgsender_MSG, msgvalue_MSG, holder_s1645, idx_s1645);
[L2680]  COND FALSE  !(revert)
[L2683]  COND FALSE  !(__var_36)
[L2687]              idx_s1645 := (idx_s1645 + 1) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2688]  COND TRUE   gas < 0
[L2308]  RET         call __var_19 := _autoUnlock~address_BLY__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG);
[L2309]  COND FALSE  !(revert)
[L2313]  COND TRUE   DType[this] == BLY
[L2314]  CALL        call __var_20 := transfer~address~uint256_ERC20Pausable__success(this, msgsender_MSG, msgvalue_MSG, to_s1288, value_s1288);
[L2038]  CALL        call whenNotPaused_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L3554]  COND FALSE  !(!!_paused_Pausable[this])
[L2038]  RET         call whenNotPaused_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L2039]  COND FALSE  !(revert)
[L2042]  COND TRUE   DType[this] == BLY
[L2043]  CALL        call __var_9 := transfer~address~uint256_HxERC20__success(this, msgsender_MSG, msgvalue_MSG, to_s1053, value_s1053);
[L1838]  COND TRUE   DType[this] == BLY
[L1839]  CALL        call _transfer~address~address~uint256_HxERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s675, value_s675);
[L1987]              __var_6 := null;
[L1988]  COND FALSE  !(!(to_s904 != null))
[L1992]  CALL        call __var_7 := sub~uint256~uint256_HxSafeMath__success(this, this, 0, _balances_HxERC20[this][from_s904], value_s904);
[L1679]  COND FALSE  !(!(b_s82 <= a_s82))
[L1683]              c_s82 := (a_s82 - b_s82) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1684]              __ret_0_ := c_s82;
[L1992]  RET         call __var_7 := sub~uint256~uint256_HxSafeMath__success(this, this, 0, _balances_HxERC20[this][from_s904], value_s904);
[L1993]  COND FALSE  !(revert)
[L1996]              sum__balances0[this] := sum__balances0[this] - _balances_HxERC20[this][from_s904];
[L1997]              _balances_HxERC20[this][from_s904] := __var_7;
[L1998]              sum__balances0[this] := sum__balances0[this] + _balances_HxERC20[this][from_s904];
[L1999]  CALL        call __var_8 := add~uint256~uint256_HxSafeMath__success(this, this, 0, _balances_HxERC20[this][to_s904], value_s904);
[L1703]              c_s106 := (a_s106 + b_s106) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1704]  COND FALSE  !(!(c_s106 >= a_s106))
[L1708]              __ret_0_ := c_s106;
[L1999]  RET         call __var_8 := add~uint256~uint256_HxSafeMath__success(this, this, 0, _balances_HxERC20[this][to_s904], value_s904);
[L2000]  COND FALSE  !(revert)
[L2003]              sum__balances0[this] := sum__balances0[this] - _balances_HxERC20[this][to_s904];
[L2004]              _balances_HxERC20[this][to_s904] := __var_8;
[L2005]              sum__balances0[this] := sum__balances0[this] + _balances_HxERC20[this][to_s904];
[L2006]              assert { :EventEmitted "Transfer_HxERC20" } true;
[L1839]  RET         call _transfer~address~address~uint256_HxERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s675, value_s675);
[L1840]  COND FALSE  !(revert)
[L1856]              __ret_0_ := true;
[L2043]  RET         call __var_9 := transfer~address~uint256_HxERC20__success(this, msgsender_MSG, msgvalue_MSG, to_s1053, value_s1053);
[L2044]  COND FALSE  !(revert)
[L2055]              __ret_0_ := __var_9;
[L2314]  RET         call __var_20 := transfer~address~uint256_ERC20Pausable__success(this, msgsender_MSG, msgvalue_MSG, to_s1288, value_s1288);
[L2315]  COND FALSE  !(revert)
[L2321]              __ret_0_ := __var_20;
[L909]   RET         call __ret_0_ := transfer~address~uint256_BLY__success(this, msgsender_MSG, msgvalue_MSG, to_s1288, value_s1288);
[L910]               assume !revert && gas >= 0;
[L4345]  RET         call __ret_0_transfer := transfer~address~uint256_BLY(this, msgsender_MSG, msgvalue_MSG, to_s1288, value_s1288);
[L4392]  RET         call CorralChoice_BLY(this);

Loop:
[L4392]        assume true;

[2020-11-24 15:41:33,218 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 15:41:33,218 INFO  L82        PathProgramCache]: Analyzing trace with hash -35618201, now seen corresponding path program 1 times
[2020-11-24 15:41:33,219 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 15:41:33,233 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 15:41:33,287 INFO  L134       CoverageAnalysis]: Checked inductivity of 10 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 10 trivial. 0 not checked.
[2020-11-24 15:41:33,288 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 15:41:33,288 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-24 15:41:33,288 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 15:41:33,288 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-24 15:41:33,288 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-24 15:41:33,288 INFO  L87              Difference]: Start difference. First operand 330 states and 356 transitions. cyclomatic complexity: 29 Second operand 4 states.
[2020-11-24 15:41:33,306 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 15:41:33,306 INFO  L93              Difference]: Finished difference Result 330 states and 355 transitions.
[2020-11-24 15:41:33,306 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-24 15:41:33,306 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 330 states and 355 transitions.
[2020-11-24 15:41:33,307 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 15:41:33,308 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 330 states to 330 states and 355 transitions.
[2020-11-24 15:41:33,308 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 134
[2020-11-24 15:41:33,308 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 134
[2020-11-24 15:41:33,308 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 330 states and 355 transitions.
[2020-11-24 15:41:33,309 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 15:41:33,309 INFO  L728         BuchiCegarLoop]: Abstraction has 330 states and 355 transitions.
[2020-11-24 15:41:33,309 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 330 states and 355 transitions.
[2020-11-24 15:41:33,311 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 330 to 330.
[2020-11-24 15:41:33,311 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 330 states.
[2020-11-24 15:41:33,312 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 330 states to 330 states and 355 transitions.
[2020-11-24 15:41:33,312 INFO  L751         BuchiCegarLoop]: Abstraction has 330 states and 355 transitions.
[2020-11-24 15:41:33,312 INFO  L631         BuchiCegarLoop]: Abstraction has 330 states and 355 transitions.
[2020-11-24 15:41:33,312 INFO  L445         BuchiCegarLoop]: ======== Iteration 8============
[2020-11-24 15:41:33,312 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 330 states and 355 transitions.
[2020-11-24 15:41:33,312 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 15:41:33,312 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 15:41:33,313 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 15:41:33,313 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 15:41:33,313 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L2]                 fail_transfer_BLY0 := false;
[L2]                 call_transfer_BLY0 := false;
[L2]     CALL        call main();
[L4387]              assume null == 0;
[L4388]  CALL        call this := FreshRefGenerator__success();
[L1636]              havoc newRef;
[L1637]              assume Alloc[newRef] == false;
[L1638]              Alloc[newRef] := true;
[L1639]              assume newRef != null;
[L4388]  RET         call this := FreshRefGenerator__success();
[L4389]              assume now >= 0;
[L4390]              assume DType[this] == BLY;
[L4391]              assume !revert && gas >= 0;
[L4392]  CALL        call CorralChoice_BLY(this);
[L4269]              havoc msgsender_MSG;
[L4270]              havoc msgvalue_MSG;
[L4271]              havoc choice;
[L4272]              havoc __ret_0_owner;
[L4273]              havoc __ret_0_newOwner;
[L4274]              havoc account_s293;
[L4275]              havoc __ret_0_isOwner;
[L4276]              havoc _newOwner_s313;
[L4277]              havoc __ret_0_acceptOwnership;
[L4278]              havoc account_s390;
[L4279]              havoc __ret_0_isPauser;
[L4280]              havoc account_s402;
[L4281]              havoc account_s414;
[L4282]              havoc __ret_0_paused;
[L4283]              havoc to_s1288;
[L4284]              havoc value_s1288;
[L4285]              havoc __ret_0_transfer;
[L4286]              havoc spender_s711;
[L4287]              havoc value_s711;
[L4288]              havoc __ret_0_approve;
[L4289]              havoc from_s1322;
[L4290]              havoc to_s1322;
[L4291]              havoc value_s1322;
[L4292]              havoc __ret_0_transferFrom;
[L4293]              havoc __ret_0_totalSupply;
[L4294]              havoc owner_s1254;
[L4295]              havoc __ret_0_balanceOf;
[L4296]              havoc owner_s656;
[L4297]              havoc spender_s656;
[L4298]              havoc __ret_0_allowance;
[L4299]              havoc spender_s809;
[L4300]              havoc addedValue_s809;
[L4301]              havoc __ret_0_increaseAllowance;
[L4302]              havoc spender_s858;
[L4303]              havoc subtractedValue_s858;
[L4304]              havoc __ret_0_decreaseAllowance;
[L4305]              havoc name_s1105;
[L4306]              havoc symbol_s1105;
[L4307]              havoc decimals_s1105;
[L4308]              havoc __ret_0_name;
[L4309]              havoc __ret_0_symbol;
[L4310]              havoc __ret_0_decimals;
[L4311]              havoc __ret_0_implementation;
[L4312]              havoc arg1675_s0;
[L4313]              havoc arg1676_s0;
[L4314]              havoc __ret_0_timelockList;
[L4315]              havoc arg1677_s0;
[L4316]              havoc __ret_0_frozenAccount;
[L4317]              havoc holder_s1351;
[L4318]              havoc __ret_0_freezeAccount;
[L4319]              havoc holder_s1379;
[L4320]              havoc __ret_0_unfreezeAccount;
[L4321]              havoc holder_s1410;
[L4322]              havoc value_s1410;
[L4323]              havoc releaseTime_s1410;
[L4324]              havoc __ret_0_lock;
[L4325]              havoc holder_s1439;
[L4326]              havoc value_s1439;
[L4327]              havoc releaseTime_s1439;
[L4328]              havoc __ret_0_transferWithLock;
[L4329]              havoc holder_s1468;
[L4330]              havoc idx_s1468;
[L4331]              havoc __ret_0_unlock;
[L4332]              havoc _newImplementation_s1486;
[L4333]              havoc tmpNow;
[L4334]              havoc gas;
[L4335]              assume gas > 4000000 && gas <= 8000000;
[L4336]              tmpNow := now;
[L4337]              havoc now;
[L4338]              assume now > tmpNow;
[L4339]              assume msgsender_MSG != null;
[L4340]  COND TRUE   choice == 6
[L4341]              gas := gas - 21000;
[L4342]  COND TRUE   gas >= 0
[L4343]              assume value_s1288 >= 0 && value_s1288 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4344]              assume msgvalue_MSG == 0;
[L4345]  CALL        call __ret_0_transfer := transfer~address~uint256_BLY(this, msgsender_MSG, msgvalue_MSG, to_s1288, value_s1288);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == to_s1288 && value_s1288 > _balances_HxERC20[this][msgsender_MSG]) && value_s1288 >= 0) && value_s1288 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_HxERC20[this][to_s1288] >= 0) && _balances_HxERC20[this][to_s1288] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_HxERC20[this][msgsender_MSG] >= 0) && _balances_HxERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_BLY0 := true;
[L2]                 call_transfer_BLY0 := false;
[L2]                 revert := revert_hold;
[L871]               havoc __exception;
[L872]               revert := false;
[L873]   COND FALSE  !(__exception)
[L909]   CALL        call __ret_0_ := transfer~address~uint256_BLY__success(this, msgsender_MSG, msgvalue_MSG, to_s1288, value_s1288);
[L2292]  CALL        call notFrozen_pre__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG);
[L3578]  COND FALSE  !(!!frozenAccount_BLY[this][_holder_s1185])
[L2292]  RET         call notFrozen_pre__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG);
[L2293]  COND FALSE  !(revert)
[L2296]  COND FALSE  !(alloc_timelockList_BLY_lvl0[timelockList_BLY[this]][msgsender_MSG] == false)
[L2307]  COND TRUE   Length[M_Ref_Ref[timelockList_BLY[this]][msgsender_MSG]] > 0
[L2308]  CALL        call __var_19 := _autoUnlock~address_BLY__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG);
[L2653]  COND FALSE  !(alloc_timelockList_BLY_lvl0[timelockList_BLY[this]][holder_s1645] == false)
[L2664]              idx_s1645 := 0;
[L2665]  COND TRUE   idx_s1645 < Length[M_Ref_Ref[timelockList_BLY[this]][holder_s1645]]
[L2667]  COND FALSE  !(alloc_timelockList_BLY_lvl0[timelockList_BLY[this]][holder_s1645] == false)
[L2678]  COND TRUE   _releaseTime_BLY.LockInfo[M_int_Ref[M_Ref_Ref[timelockList_BLY[this]][holder_s1645]][idx_s1645]] <= now
[L2679]  CALL        call __var_36 := _unlock~address~uint256_BLY__success(this, msgsender_MSG, msgvalue_MSG, holder_s1645, idx_s1645);
[L2512]  COND FALSE  !(alloc_timelockList_BLY_lvl0[timelockList_BLY[this]][holder_s1600] == false)
[L2523]              lockinfo_s1600 := M_int_Ref[M_Ref_Ref[timelockList_BLY[this]][holder_s1600]][idx_s1600];
[L2524]              releaseAmount_s1600 := _amount_BLY.LockInfo[lockinfo_s1600];
[L2525]  COND FALSE  !(alloc_timelockList_BLY_lvl0[timelockList_BLY[this]][holder_s1600] == false)
[L2536]  COND FALSE  !(alloc_timelockList_BLY_lvl0[timelockList_BLY[this]][holder_s1600] == false)
[L2547]  COND FALSE  !(alloc_timelockList_BLY_lvl0[timelockList_BLY[this]][holder_s1600] == false)
[L2558]  CALL        call __var_29 := sub~uint256~uint256_HxSafeMath__success(this, this, 0, Length[M_Ref_Ref[timelockList_BLY[this]][holder_s1600]], 1);
[L1679]  COND FALSE  !(!(b_s82 <= a_s82))
[L1683]              c_s82 := (a_s82 - b_s82) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1684]              __ret_0_ := c_s82;
[L2558]  RET         call __var_29 := sub~uint256~uint256_HxSafeMath__success(this, this, 0, Length[M_Ref_Ref[timelockList_BLY[this]][holder_s1600]], 1);
[L2559]  COND FALSE  !(revert)
[L2562]  COND FALSE  !(alloc_timelockList_BLY_lvl0[timelockList_BLY[this]][holder_s1600] == false)
[L2573]              M_int_Ref[M_Ref_Ref[timelockList_BLY[this]][holder_s1600]][idx_s1600] := M_int_Ref[M_Ref_Ref[timelockList_BLY[this]][holder_s1600]][__var_29];
[L2574]  COND FALSE  !(alloc_timelockList_BLY_lvl0[timelockList_BLY[this]][holder_s1600] == false)
[L2585]              Length[M_Ref_Ref[timelockList_BLY[this]][holder_s1600]] := (Length[M_Ref_Ref[timelockList_BLY[this]][holder_s1600]] - 1) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2586]              assert { :EventEmitted "Unlock_BLY" } true;
[L2587]  CALL        call __var_33 := add~uint256~uint256_HxSafeMath__success(this, this, 0, _balances_HxERC20[this][holder_s1600], releaseAmount_s1600);
[L1703]              c_s106 := (a_s106 + b_s106) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1704]  COND FALSE  !(!(c_s106 >= a_s106))
[L1708]              __ret_0_ := c_s106;
[L2587]  RET         call __var_33 := add~uint256~uint256_HxSafeMath__success(this, this, 0, _balances_HxERC20[this][holder_s1600], releaseAmount_s1600);
[L2588]  COND FALSE  !(revert)
[L2591]              sum__balances0[this] := sum__balances0[this] - _balances_HxERC20[this][holder_s1600];
[L2592]              _balances_HxERC20[this][holder_s1600] := __var_33;
[L2593]              sum__balances0[this] := sum__balances0[this] + _balances_HxERC20[this][holder_s1600];
[L2594]              __ret_0_ := true;
[L2679]  RET         call __var_36 := _unlock~address~uint256_BLY__success(this, msgsender_MSG, msgvalue_MSG, holder_s1645, idx_s1645);
[L2680]  COND FALSE  !(revert)
[L2683]  COND FALSE  !(__var_36)
[L2687]              idx_s1645 := (idx_s1645 + 1) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2688]  COND FALSE  !(gas < 0)
[L2665]  COND FALSE  !(idx_s1645 < Length[M_Ref_Ref[timelockList_BLY[this]][holder_s1645]])
[L2692]              __ret_0_ := true;
[L2308]  RET         call __var_19 := _autoUnlock~address_BLY__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG);
[L2309]  COND FALSE  !(revert)
[L2313]  COND TRUE   DType[this] == BLY
[L2314]  CALL        call __var_20 := transfer~address~uint256_ERC20Pausable__success(this, msgsender_MSG, msgvalue_MSG, to_s1288, value_s1288);
[L2038]  CALL        call whenNotPaused_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L3554]  COND FALSE  !(!!_paused_Pausable[this])
[L2038]  RET         call whenNotPaused_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L2039]  COND FALSE  !(revert)
[L2042]  COND TRUE   DType[this] == BLY
[L2043]  CALL        call __var_9 := transfer~address~uint256_HxERC20__success(this, msgsender_MSG, msgvalue_MSG, to_s1053, value_s1053);
[L1838]  COND TRUE   DType[this] == BLY
[L1839]  CALL        call _transfer~address~address~uint256_HxERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s675, value_s675);
[L1987]              __var_6 := null;
[L1988]  COND FALSE  !(!(to_s904 != null))
[L1992]  CALL        call __var_7 := sub~uint256~uint256_HxSafeMath__success(this, this, 0, _balances_HxERC20[this][from_s904], value_s904);
[L1679]  COND FALSE  !(!(b_s82 <= a_s82))
[L1683]              c_s82 := (a_s82 - b_s82) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1684]              __ret_0_ := c_s82;
[L1992]  RET         call __var_7 := sub~uint256~uint256_HxSafeMath__success(this, this, 0, _balances_HxERC20[this][from_s904], value_s904);
[L1993]  COND FALSE  !(revert)
[L1996]              sum__balances0[this] := sum__balances0[this] - _balances_HxERC20[this][from_s904];
[L1997]              _balances_HxERC20[this][from_s904] := __var_7;
[L1998]              sum__balances0[this] := sum__balances0[this] + _balances_HxERC20[this][from_s904];
[L1999]  CALL        call __var_8 := add~uint256~uint256_HxSafeMath__success(this, this, 0, _balances_HxERC20[this][to_s904], value_s904);
[L1703]              c_s106 := (a_s106 + b_s106) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1704]  COND FALSE  !(!(c_s106 >= a_s106))
[L1708]              __ret_0_ := c_s106;
[L1999]  RET         call __var_8 := add~uint256~uint256_HxSafeMath__success(this, this, 0, _balances_HxERC20[this][to_s904], value_s904);
[L2000]  COND FALSE  !(revert)
[L2003]              sum__balances0[this] := sum__balances0[this] - _balances_HxERC20[this][to_s904];
[L2004]              _balances_HxERC20[this][to_s904] := __var_8;
[L2005]              sum__balances0[this] := sum__balances0[this] + _balances_HxERC20[this][to_s904];
[L2006]              assert { :EventEmitted "Transfer_HxERC20" } true;
[L1839]  RET         call _transfer~address~address~uint256_HxERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s675, value_s675);
[L1840]  COND FALSE  !(revert)
[L1856]              __ret_0_ := true;
[L2043]  RET         call __var_9 := transfer~address~uint256_HxERC20__success(this, msgsender_MSG, msgvalue_MSG, to_s1053, value_s1053);
[L2044]  COND FALSE  !(revert)
[L2055]              __ret_0_ := __var_9;
[L2314]  RET         call __var_20 := transfer~address~uint256_ERC20Pausable__success(this, msgsender_MSG, msgvalue_MSG, to_s1288, value_s1288);
[L2315]  COND FALSE  !(revert)
[L2321]              __ret_0_ := __var_20;
[L909]   RET         call __ret_0_ := transfer~address~uint256_BLY__success(this, msgsender_MSG, msgvalue_MSG, to_s1288, value_s1288);
[L910]               assume !revert && gas >= 0;
[L4345]  RET         call __ret_0_transfer := transfer~address~uint256_BLY(this, msgsender_MSG, msgvalue_MSG, to_s1288, value_s1288);
[L4392]  RET         call CorralChoice_BLY(this);

Loop:
[L4392]        assume true;

[2020-11-24 15:41:33,316 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 15:41:33,316 INFO  L82        PathProgramCache]: Analyzing trace with hash -1699799615, now seen corresponding path program 1 times
[2020-11-24 15:41:33,317 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 15:41:33,325 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 15:41:33,348 INFO  L134       CoverageAnalysis]: Checked inductivity of 11 backedges. 1 proven. 0 refuted. 0 times theorem prover too weak. 10 trivial. 0 not checked.
[2020-11-24 15:41:33,349 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 15:41:33,349 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-24 15:41:33,349 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 15:41:33,349 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-24 15:41:33,349 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-24 15:41:33,349 INFO  L87              Difference]: Start difference. First operand 330 states and 355 transitions. cyclomatic complexity: 28 Second operand 4 states.
[2020-11-24 15:41:33,352 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 15:41:33,352 INFO  L93              Difference]: Finished difference Result 331 states and 356 transitions.
[2020-11-24 15:41:33,352 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-24 15:41:33,352 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 331 states and 356 transitions.
[2020-11-24 15:41:33,353 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 15:41:33,354 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 331 states to 331 states and 356 transitions.
[2020-11-24 15:41:33,354 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 134
[2020-11-24 15:41:33,355 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 134
[2020-11-24 15:41:33,355 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 331 states and 356 transitions.
[2020-11-24 15:41:33,355 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 15:41:33,355 INFO  L728         BuchiCegarLoop]: Abstraction has 331 states and 356 transitions.
[2020-11-24 15:41:33,355 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 331 states and 356 transitions.
[2020-11-24 15:41:33,357 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 331 to 330.
[2020-11-24 15:41:33,358 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 330 states.
[2020-11-24 15:41:33,358 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 330 states to 330 states and 354 transitions.
[2020-11-24 15:41:33,358 INFO  L751         BuchiCegarLoop]: Abstraction has 330 states and 354 transitions.
[2020-11-24 15:41:33,358 INFO  L631         BuchiCegarLoop]: Abstraction has 330 states and 354 transitions.
[2020-11-24 15:41:33,358 INFO  L445         BuchiCegarLoop]: ======== Iteration 9============
[2020-11-24 15:41:33,358 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 330 states and 354 transitions.
[2020-11-24 15:41:33,359 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 15:41:33,359 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 15:41:33,359 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 15:41:33,360 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 15:41:33,360 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L2]                 fail_transfer_BLY0 := false;
[L2]                 call_transfer_BLY0 := false;
[L2]     CALL        call main();
[L4387]              assume null == 0;
[L4388]  CALL        call this := FreshRefGenerator__success();
[L1636]              havoc newRef;
[L1637]              assume Alloc[newRef] == false;
[L1638]              Alloc[newRef] := true;
[L1639]              assume newRef != null;
[L4388]  RET         call this := FreshRefGenerator__success();
[L4389]              assume now >= 0;
[L4390]              assume DType[this] == BLY;
[L4391]              assume !revert && gas >= 0;
[L4392]  CALL        call CorralChoice_BLY(this);
[L4269]              havoc msgsender_MSG;
[L4270]              havoc msgvalue_MSG;
[L4271]              havoc choice;
[L4272]              havoc __ret_0_owner;
[L4273]              havoc __ret_0_newOwner;
[L4274]              havoc account_s293;
[L4275]              havoc __ret_0_isOwner;
[L4276]              havoc _newOwner_s313;
[L4277]              havoc __ret_0_acceptOwnership;
[L4278]              havoc account_s390;
[L4279]              havoc __ret_0_isPauser;
[L4280]              havoc account_s402;
[L4281]              havoc account_s414;
[L4282]              havoc __ret_0_paused;
[L4283]              havoc to_s1288;
[L4284]              havoc value_s1288;
[L4285]              havoc __ret_0_transfer;
[L4286]              havoc spender_s711;
[L4287]              havoc value_s711;
[L4288]              havoc __ret_0_approve;
[L4289]              havoc from_s1322;
[L4290]              havoc to_s1322;
[L4291]              havoc value_s1322;
[L4292]              havoc __ret_0_transferFrom;
[L4293]              havoc __ret_0_totalSupply;
[L4294]              havoc owner_s1254;
[L4295]              havoc __ret_0_balanceOf;
[L4296]              havoc owner_s656;
[L4297]              havoc spender_s656;
[L4298]              havoc __ret_0_allowance;
[L4299]              havoc spender_s809;
[L4300]              havoc addedValue_s809;
[L4301]              havoc __ret_0_increaseAllowance;
[L4302]              havoc spender_s858;
[L4303]              havoc subtractedValue_s858;
[L4304]              havoc __ret_0_decreaseAllowance;
[L4305]              havoc name_s1105;
[L4306]              havoc symbol_s1105;
[L4307]              havoc decimals_s1105;
[L4308]              havoc __ret_0_name;
[L4309]              havoc __ret_0_symbol;
[L4310]              havoc __ret_0_decimals;
[L4311]              havoc __ret_0_implementation;
[L4312]              havoc arg1675_s0;
[L4313]              havoc arg1676_s0;
[L4314]              havoc __ret_0_timelockList;
[L4315]              havoc arg1677_s0;
[L4316]              havoc __ret_0_frozenAccount;
[L4317]              havoc holder_s1351;
[L4318]              havoc __ret_0_freezeAccount;
[L4319]              havoc holder_s1379;
[L4320]              havoc __ret_0_unfreezeAccount;
[L4321]              havoc holder_s1410;
[L4322]              havoc value_s1410;
[L4323]              havoc releaseTime_s1410;
[L4324]              havoc __ret_0_lock;
[L4325]              havoc holder_s1439;
[L4326]              havoc value_s1439;
[L4327]              havoc releaseTime_s1439;
[L4328]              havoc __ret_0_transferWithLock;
[L4329]              havoc holder_s1468;
[L4330]              havoc idx_s1468;
[L4331]              havoc __ret_0_unlock;
[L4332]              havoc _newImplementation_s1486;
[L4333]              havoc tmpNow;
[L4334]              havoc gas;
[L4335]              assume gas > 4000000 && gas <= 8000000;
[L4336]              tmpNow := now;
[L4337]              havoc now;
[L4338]              assume now > tmpNow;
[L4339]              assume msgsender_MSG != null;
[L4340]  COND TRUE   choice == 6
[L4341]              gas := gas - 21000;
[L4342]  COND TRUE   gas >= 0
[L4343]              assume value_s1288 >= 0 && value_s1288 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4344]              assume msgvalue_MSG == 0;
[L4345]  CALL        call __ret_0_transfer := transfer~address~uint256_BLY(this, msgsender_MSG, msgvalue_MSG, to_s1288, value_s1288);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == to_s1288 && value_s1288 > _balances_HxERC20[this][msgsender_MSG]) && value_s1288 >= 0) && value_s1288 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_HxERC20[this][to_s1288] >= 0) && _balances_HxERC20[this][to_s1288] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_HxERC20[this][msgsender_MSG] >= 0) && _balances_HxERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_BLY0 := true;
[L2]                 call_transfer_BLY0 := false;
[L2]                 revert := revert_hold;
[L871]               havoc __exception;
[L872]               revert := false;
[L873]   COND FALSE  !(__exception)
[L909]   CALL        call __ret_0_ := transfer~address~uint256_BLY__success(this, msgsender_MSG, msgvalue_MSG, to_s1288, value_s1288);
[L2292]  CALL        call notFrozen_pre__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG);
[L3578]  COND FALSE  !(!!frozenAccount_BLY[this][_holder_s1185])
[L2292]  RET         call notFrozen_pre__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG);
[L2293]  COND FALSE  !(revert)
[L2296]  COND FALSE  !(alloc_timelockList_BLY_lvl0[timelockList_BLY[this]][msgsender_MSG] == false)
[L2307]  COND TRUE   Length[M_Ref_Ref[timelockList_BLY[this]][msgsender_MSG]] > 0
[L2308]  CALL        call __var_19 := _autoUnlock~address_BLY__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG);
[L2653]  COND FALSE  !(alloc_timelockList_BLY_lvl0[timelockList_BLY[this]][holder_s1645] == false)
[L2664]              idx_s1645 := 0;
[L2665]  COND TRUE   idx_s1645 < Length[M_Ref_Ref[timelockList_BLY[this]][holder_s1645]]
[L2667]  COND FALSE  !(alloc_timelockList_BLY_lvl0[timelockList_BLY[this]][holder_s1645] == false)
[L2678]  COND TRUE   _releaseTime_BLY.LockInfo[M_int_Ref[M_Ref_Ref[timelockList_BLY[this]][holder_s1645]][idx_s1645]] <= now
[L2679]  CALL        call __var_36 := _unlock~address~uint256_BLY__success(this, msgsender_MSG, msgvalue_MSG, holder_s1645, idx_s1645);
[L2512]  COND FALSE  !(alloc_timelockList_BLY_lvl0[timelockList_BLY[this]][holder_s1600] == false)
[L2523]              lockinfo_s1600 := M_int_Ref[M_Ref_Ref[timelockList_BLY[this]][holder_s1600]][idx_s1600];
[L2524]              releaseAmount_s1600 := _amount_BLY.LockInfo[lockinfo_s1600];
[L2525]  COND FALSE  !(alloc_timelockList_BLY_lvl0[timelockList_BLY[this]][holder_s1600] == false)
[L2536]  COND FALSE  !(alloc_timelockList_BLY_lvl0[timelockList_BLY[this]][holder_s1600] == false)
[L2547]  COND FALSE  !(alloc_timelockList_BLY_lvl0[timelockList_BLY[this]][holder_s1600] == false)
[L2558]  CALL        call __var_29 := sub~uint256~uint256_HxSafeMath__success(this, this, 0, Length[M_Ref_Ref[timelockList_BLY[this]][holder_s1600]], 1);
[L1679]  COND FALSE  !(!(b_s82 <= a_s82))
[L1683]              c_s82 := (a_s82 - b_s82) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1684]              __ret_0_ := c_s82;
[L2558]  RET         call __var_29 := sub~uint256~uint256_HxSafeMath__success(this, this, 0, Length[M_Ref_Ref[timelockList_BLY[this]][holder_s1600]], 1);
[L2559]  COND FALSE  !(revert)
[L2562]  COND FALSE  !(alloc_timelockList_BLY_lvl0[timelockList_BLY[this]][holder_s1600] == false)
[L2573]              M_int_Ref[M_Ref_Ref[timelockList_BLY[this]][holder_s1600]][idx_s1600] := M_int_Ref[M_Ref_Ref[timelockList_BLY[this]][holder_s1600]][__var_29];
[L2574]  COND FALSE  !(alloc_timelockList_BLY_lvl0[timelockList_BLY[this]][holder_s1600] == false)
[L2585]              Length[M_Ref_Ref[timelockList_BLY[this]][holder_s1600]] := (Length[M_Ref_Ref[timelockList_BLY[this]][holder_s1600]] - 1) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2586]              assert { :EventEmitted "Unlock_BLY" } true;
[L2587]  CALL        call __var_33 := add~uint256~uint256_HxSafeMath__success(this, this, 0, _balances_HxERC20[this][holder_s1600], releaseAmount_s1600);
[L1703]              c_s106 := (a_s106 + b_s106) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1704]  COND FALSE  !(!(c_s106 >= a_s106))
[L1708]              __ret_0_ := c_s106;
[L2587]  RET         call __var_33 := add~uint256~uint256_HxSafeMath__success(this, this, 0, _balances_HxERC20[this][holder_s1600], releaseAmount_s1600);
[L2588]  COND FALSE  !(revert)
[L2591]              sum__balances0[this] := sum__balances0[this] - _balances_HxERC20[this][holder_s1600];
[L2592]              _balances_HxERC20[this][holder_s1600] := __var_33;
[L2593]              sum__balances0[this] := sum__balances0[this] + _balances_HxERC20[this][holder_s1600];
[L2594]              __ret_0_ := true;
[L2679]  RET         call __var_36 := _unlock~address~uint256_BLY__success(this, msgsender_MSG, msgvalue_MSG, holder_s1645, idx_s1645);
[L2680]  COND FALSE  !(revert)
[L2683]  COND TRUE   __var_36
[L2684]              idx_s1645 := (idx_s1645 - 1) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2687]              idx_s1645 := (idx_s1645 + 1) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2688]  COND FALSE  !(gas < 0)
[L2665]  COND FALSE  !(idx_s1645 < Length[M_Ref_Ref[timelockList_BLY[this]][holder_s1645]])
[L2692]              __ret_0_ := true;
[L2308]  RET         call __var_19 := _autoUnlock~address_BLY__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG);
[L2309]  COND FALSE  !(revert)
[L2313]  COND TRUE   DType[this] == BLY
[L2314]  CALL        call __var_20 := transfer~address~uint256_ERC20Pausable__success(this, msgsender_MSG, msgvalue_MSG, to_s1288, value_s1288);
[L2038]  CALL        call whenNotPaused_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L3554]  COND FALSE  !(!!_paused_Pausable[this])
[L2038]  RET         call whenNotPaused_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L2039]  COND FALSE  !(revert)
[L2042]  COND TRUE   DType[this] == BLY
[L2043]  CALL        call __var_9 := transfer~address~uint256_HxERC20__success(this, msgsender_MSG, msgvalue_MSG, to_s1053, value_s1053);
[L1838]  COND TRUE   DType[this] == BLY
[L1839]  CALL        call _transfer~address~address~uint256_HxERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s675, value_s675);
[L1987]              __var_6 := null;
[L1988]  COND FALSE  !(!(to_s904 != null))
[L1992]  CALL        call __var_7 := sub~uint256~uint256_HxSafeMath__success(this, this, 0, _balances_HxERC20[this][from_s904], value_s904);
[L1679]  COND FALSE  !(!(b_s82 <= a_s82))
[L1683]              c_s82 := (a_s82 - b_s82) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1684]              __ret_0_ := c_s82;
[L1992]  RET         call __var_7 := sub~uint256~uint256_HxSafeMath__success(this, this, 0, _balances_HxERC20[this][from_s904], value_s904);
[L1993]  COND FALSE  !(revert)
[L1996]              sum__balances0[this] := sum__balances0[this] - _balances_HxERC20[this][from_s904];
[L1997]              _balances_HxERC20[this][from_s904] := __var_7;
[L1998]              sum__balances0[this] := sum__balances0[this] + _balances_HxERC20[this][from_s904];
[L1999]  CALL        call __var_8 := add~uint256~uint256_HxSafeMath__success(this, this, 0, _balances_HxERC20[this][to_s904], value_s904);
[L1703]              c_s106 := (a_s106 + b_s106) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1704]  COND FALSE  !(!(c_s106 >= a_s106))
[L1708]              __ret_0_ := c_s106;
[L1999]  RET         call __var_8 := add~uint256~uint256_HxSafeMath__success(this, this, 0, _balances_HxERC20[this][to_s904], value_s904);
[L2000]  COND FALSE  !(revert)
[L2003]              sum__balances0[this] := sum__balances0[this] - _balances_HxERC20[this][to_s904];
[L2004]              _balances_HxERC20[this][to_s904] := __var_8;
[L2005]              sum__balances0[this] := sum__balances0[this] + _balances_HxERC20[this][to_s904];
[L2006]              assert { :EventEmitted "Transfer_HxERC20" } true;
[L1839]  RET         call _transfer~address~address~uint256_HxERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s675, value_s675);
[L1840]  COND FALSE  !(revert)
[L1856]              __ret_0_ := true;
[L2043]  RET         call __var_9 := transfer~address~uint256_HxERC20__success(this, msgsender_MSG, msgvalue_MSG, to_s1053, value_s1053);
[L2044]  COND FALSE  !(revert)
[L2055]              __ret_0_ := __var_9;
[L2314]  RET         call __var_20 := transfer~address~uint256_ERC20Pausable__success(this, msgsender_MSG, msgvalue_MSG, to_s1288, value_s1288);
[L2315]  COND FALSE  !(revert)
[L2321]              __ret_0_ := __var_20;
[L909]   RET         call __ret_0_ := transfer~address~uint256_BLY__success(this, msgsender_MSG, msgvalue_MSG, to_s1288, value_s1288);
[L910]               assume !revert && gas >= 0;
[L4345]  RET         call __ret_0_transfer := transfer~address~uint256_BLY(this, msgsender_MSG, msgvalue_MSG, to_s1288, value_s1288);
[L4392]  RET         call CorralChoice_BLY(this);

Loop:
[L4392]        assume true;

[2020-11-24 15:41:33,362 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 15:41:33,362 INFO  L82        PathProgramCache]: Analyzing trace with hash -625033954, now seen corresponding path program 1 times
[2020-11-24 15:41:33,363 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 15:41:33,392 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 15:41:33,413 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 15:41:33,478 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 15:41:33,478 INFO  L82        PathProgramCache]: Analyzing trace with hash 18656, now seen corresponding path program 1 times
[2020-11-24 15:41:33,479 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 15:41:33,480 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 15:41:33,480 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 15:41:33,481 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 15:41:33,481 INFO  L82        PathProgramCache]: Analyzing trace with hash 2098802531, now seen corresponding path program 1 times
[2020-11-24 15:41:33,482 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 15:41:33,498 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 15:41:33,516 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
[2020-11-24 15:41:33,750 WARN  L188               SmtUtils]: Spent 142.00 ms on a formula simplification. DAG size of input: 112 DAG size of output: 111
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #5: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 277 to 547
Garbage collection #5: 547 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 547 to 1093
[2020-11-24 15:41:34,093 WARN  L188               SmtUtils]: Spent 183.00 ms on a formula simplification. DAG size of input: 130 DAG size of output: 127
Garbage collection #1: 41 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 41 to 79
Garbage collection #2: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #3: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #4: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #5: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 163 to 317
[2020-11-24 15:41:34,309 WARN  L188               SmtUtils]: Spent 172.00 ms on a formula simplification. DAG size of input: 120 DAG size of output: 115
Garbage collection #1: 41 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 41 to 79
Garbage collection #2: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #3: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #4: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #5: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
[2020-11-24 15:41:34,547 WARN  L188               SmtUtils]: Spent 137.00 ms on a formula simplification. DAG size of input: 105 DAG size of output: 104
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #5: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 199 to 397
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
[2020-11-24 15:41:35,098 WARN  L188               SmtUtils]: Spent 267.00 ms on a formula simplification. DAG size of input: 191 DAG size of output: 179
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #1: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #2: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #3: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #4: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #5: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
[2020-11-24 15:41:35,317 WARN  L188               SmtUtils]: Spent 148.00 ms on a formula simplification. DAG size of input: 146 DAG size of output: 141
Garbage collection #1: 47 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 47 to 89
Garbage collection #2: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #3: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #4: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #5: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
[2020-11-24 15:41:35,591 WARN  L188               SmtUtils]: Spent 211.00 ms on a formula simplification. DAG size of input: 159 DAG size of output: 149
Garbage collection #1: 47 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 47 to 89
Garbage collection #2: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #3: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #4: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #5: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #5: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #6: 1093 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1093 to 2179
[2020-11-24 15:41:36,434 WARN  L188               SmtUtils]: Spent 740.00 ms on a formula simplification. DAG size of input: 328 DAG size of output: 323
Garbage collection #1: 127 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 127 to 251
Garbage collection #2: 251 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 251 to 499
Garbage collection #3: 499 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 499 to 997
Garbage collection #4: 997 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 997 to 1993
Garbage collection #5: 1993 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 1993 to 3967
Garbage collection #6: 3967 nodes / 0 free / 0.001s / 0.003s total
Resizing node table from 3967 to 7933
[2020-11-24 15:41:36,917 WARN  L188               SmtUtils]: Spent 476.00 ms on a formula simplification that was a NOOP. DAG size: 304
[2020-11-24 15:41:37,893 WARN  L188               SmtUtils]: Spent 972.00 ms on a formula simplification. DAG size of input: 325 DAG size of output: 320
Garbage collection #1: 127 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 127 to 251
Garbage collection #2: 251 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 251 to 499
Garbage collection #3: 499 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 499 to 997
Garbage collection #4: 997 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 997 to 1993
Garbage collection #5: 1993 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1993 to 3967
Garbage collection #6: 3967 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3967 to 7933
Garbage collection #7: 7933 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 7933 to 15859
Garbage collection #1: 67 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 67 to 131
Garbage collection #2: 131 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 131 to 257
Garbage collection #3: 257 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 257 to 509
Garbage collection #4: 509 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 509 to 1013
Garbage collection #5: 1013 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 1013 to 2017
Garbage collection #6: 2017 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 2017 to 4027
Garbage collection #7: 4027 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 4027 to 8053
[2020-11-24 15:41:38,128 WARN  L188               SmtUtils]: Spent 219.00 ms on a formula simplification that was a NOOP. DAG size: 216
[2020-11-24 15:41:38,622 WARN  L188               SmtUtils]: Spent 492.00 ms on a formula simplification that was a NOOP. DAG size: 408
Garbage collection #1: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #2: 317 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 317 to 631
Garbage collection #3: 631 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 631 to 1259
Garbage collection #4: 1259 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1259 to 2503
Garbage collection #5: 2503 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2503 to 5003
Garbage collection #6: 5003 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 5003 to 9973
Garbage collection #7: 9973 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 9973 to 19937
[2020-11-24 15:41:39,099 WARN  L188               SmtUtils]: Spent 467.00 ms on a formula simplification that was a NOOP. DAG size: 319
[2020-11-24 15:41:39,745 WARN  L188               SmtUtils]: Spent 644.00 ms on a formula simplification. DAG size of input: 338 DAG size of output: 333
Garbage collection #1: 127 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 127 to 251
Garbage collection #2: 251 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 251 to 499
Garbage collection #3: 499 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 499 to 997
Garbage collection #4: 997 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 997 to 1993
Garbage collection #5: 1993 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1993 to 3967
Garbage collection #6: 3967 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3967 to 7933
Garbage collection #1: 71 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 71 to 139
Garbage collection #2: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #3: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #4: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #5: 1093 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1093 to 2179
Garbage collection #6: 2179 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2179 to 4357
[2020-11-24 15:41:39,856 WARN  L188               SmtUtils]: Spent 103.00 ms on a formula simplification that was a NOOP. DAG size: 216
[2020-11-24 15:41:40,073 WARN  L188               SmtUtils]: Spent 176.00 ms on a formula simplification that was a NOOP. DAG size: 310
Garbage collection #1: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #2: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #3: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #4: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #5: 1759 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1759 to 3517
Garbage collection #6: 3517 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3517 to 7027
Garbage collection #1: 67 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 67 to 131
Garbage collection #2: 131 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 131 to 257
Garbage collection #3: 257 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 257 to 509
Garbage collection #4: 509 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 509 to 1013
Garbage collection #5: 1013 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1013 to 2017
Garbage collection #6: 2017 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 2017 to 4027
[2020-11-24 15:41:40,188 WARN  L188               SmtUtils]: Spent 109.00 ms on a formula simplification that was a NOOP. DAG size: 216
[2020-11-24 15:41:40,581 WARN  L188               SmtUtils]: Spent 391.00 ms on a formula simplification. DAG size of input: 312 DAG size of output: 311
Garbage collection #1: 127 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 127 to 251
Garbage collection #2: 251 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 251 to 499
Garbage collection #3: 499 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 499 to 997
Garbage collection #4: 997 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 997 to 1993
Garbage collection #5: 1993 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1993 to 3967
Garbage collection #6: 3967 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3967 to 7933
Garbage collection #1: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #2: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #3: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #4: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #5: 1759 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1759 to 3517
Garbage collection #6: 3517 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3517 to 7027
[2020-11-24 15:41:40,800 WARN  L188               SmtUtils]: Spent 214.00 ms on a formula simplification that was a NOOP. DAG size: 307
[2020-11-24 15:41:40,816 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 15:41:40,823 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 24.11 03:41:40 BasicIcfg
[2020-11-24 15:41:40,823 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-24 15:41:40,823 INFO  L168              Benchmark]: Toolchain (without parser) took 11783.10 ms. Allocated memory was 1.0 GB in the beginning and 2.0 GB in the end (delta: 969.4 MB). Free memory was 940.6 MB in the beginning and 1.9 GB in the end (delta: -910.7 MB). Peak memory consumption was 967.1 MB. Max. memory is 15.3 GB.
[2020-11-24 15:41:40,824 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.14 ms. Allocated memory is still 1.0 GB. Free memory is still 956.7 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-24 15:41:40,824 INFO  L168              Benchmark]: Boogie Preprocessor took 112.07 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 924.4 MB in the end (delta: 16.1 MB). Peak memory consumption was 16.1 MB. Max. memory is 15.3 GB.
[2020-11-24 15:41:40,824 INFO  L168              Benchmark]: UtopiaSpecLang took 60.56 ms. Allocated memory is still 1.0 GB. Free memory was 924.4 MB in the beginning and 919.0 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-24 15:41:40,825 INFO  L168              Benchmark]: Boogie Printer took 16.05 ms. Allocated memory is still 1.0 GB. Free memory is still 919.0 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-24 15:41:40,825 INFO  L168              Benchmark]: RCFGBuilder took 851.41 ms. Allocated memory is still 1.0 GB. Free memory was 919.0 MB in the beginning and 768.7 MB in the end (delta: 150.3 MB). Peak memory consumption was 150.3 MB. Max. memory is 15.3 GB.
[2020-11-24 15:41:40,825 INFO  L168              Benchmark]: UtopiaLTL2Aut took 38.80 ms. Allocated memory is still 1.0 GB. Free memory was 768.7 MB in the beginning and 765.1 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
[2020-11-24 15:41:40,826 INFO  L168              Benchmark]: BÃ¼chi Program Product took 1612.90 ms. Allocated memory was 1.0 GB in the beginning and 1.2 GB in the end (delta: 191.9 MB). Free memory was 765.1 MB in the beginning and 814.2 MB in the end (delta: -49.1 MB). Peak memory consumption was 142.8 MB. Max. memory is 15.3 GB.
[2020-11-24 15:41:40,826 INFO  L168              Benchmark]: BlockEncodingV2 took 145.60 ms. Allocated memory is still 1.2 GB. Free memory was 814.2 MB in the beginning and 764.8 MB in the end (delta: 49.4 MB). Peak memory consumption was 49.4 MB. Max. memory is 15.3 GB.
[2020-11-24 15:41:40,827 INFO  L168              Benchmark]: BuchiAutomizer took 8942.60 ms. Allocated memory was 1.2 GB in the beginning and 2.0 GB in the end (delta: 777.5 MB). Free memory was 764.8 MB in the beginning and 1.9 GB in the end (delta: -1.1 GB). Peak memory consumption was 599.5 MB. Max. memory is 15.3 GB.
[2020-11-24 15:41:40,830 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    3838 locations, 6774 edges
  - StatisticsResult: Encoded RCFG
    3688 locations, 6428 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.14 ms. Allocated memory is still 1.0 GB. Free memory is still 956.7 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 112.07 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 924.4 MB in the end (delta: 16.1 MB). Peak memory consumption was 16.1 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 60.56 ms. Allocated memory is still 1.0 GB. Free memory was 924.4 MB in the beginning and 919.0 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 16.05 ms. Allocated memory is still 1.0 GB. Free memory is still 919.0 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * RCFGBuilder took 851.41 ms. Allocated memory is still 1.0 GB. Free memory was 919.0 MB in the beginning and 768.7 MB in the end (delta: 150.3 MB). Peak memory consumption was 150.3 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 38.80 ms. Allocated memory is still 1.0 GB. Free memory was 768.7 MB in the beginning and 765.1 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 1612.90 ms. Allocated memory was 1.0 GB in the beginning and 1.2 GB in the end (delta: 191.9 MB). Free memory was 765.1 MB in the beginning and 814.2 MB in the end (delta: -49.1 MB). Peak memory consumption was 142.8 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 145.60 ms. Allocated memory is still 1.2 GB. Free memory was 814.2 MB in the beginning and 764.8 MB in the end (delta: 49.4 MB). Peak memory consumption was 49.4 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 8942.60 ms. Allocated memory was 1.2 GB in the beginning and 2.0 GB in the end (delta: 777.5 MB). Free memory was 764.8 MB in the beginning and 1.9 GB in the end (delta: -1.1 GB). Peak memory consumption was 599.5 MB. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    1613 locations, 2110 edges
  - StatisticsResult: BuchiProgram size
    3838 locations, 6774 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 8 terminating modules (8 trivial, 0 deterministic, 0 nondeterministic) and one nonterminating remainder module.8 modules have a trivial ranking function, the largest among these consists of 10 locations. The remainder module has 330 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 8.8s and 9 iterations.  TraceHistogramMax:2. Analysis of lassos took 7.9s. Construction of modules took 0.2s. BÃ¼chi inclusion checks took 0.4s. Highest rank in rank-based complementation 0. Minimization of det autom 8. Minimization of nondet autom 0. Automata minimization 0.0s AutomataMinimizationTime, 8 MinimizatonAttempts, 6 StatesRemovedByMinimization, 3 NontrivialMinimizations. Non-live state removal took 0.0s Buchi closure took 0.0s. Biggest automaton had 383 states and ocurred in iteration 2.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 4144 SDtfs, 2621 SDslu, 5850 SDs, 0 SdLazy, 2382 SolverSat, 1078 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 0.2s Time	LassoAnalysisResults: nont1 unkn0 SFLI0 SFLT0 conc0 concLT0 SILN0 SILU8 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - TransactionCounterexample: Violation of LTL property LTL
    Found an infinite, lasso-shaped execution that violates the LTL property LTL.
Stem:
BLY(231584178474632390847141970017375815706539969331281128078915168015826259279881).transfer~address~uint256.gas(3979001)({from : 231584178474632390847141970017375815706539969331281128078915168015826259279889, to : 231584178474632390847141970017375815706539969331281128078915168015826259279889, value : 1});
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == to_s1288 && value_s1288 > _balances_HxERC20[this][msgsender_MSG]) && value_s1288 >= 0) && value_s1288 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_HxERC20[this][to_s1288] >= 0) && _balances_HxERC20[this][to_s1288] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_HxERC20[this][msgsender_MSG] >= 0) && _balances_HxERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_BLY0 := true;
[L2]                 call_transfer_BLY0 := false;
[L2]                 revert := revert_hold;
[L871]               havoc __exception;
[L872]               revert := false;
[L873]   COND FALSE  !(__exception)
[L909]   CALL        call __ret_0_ := transfer~address~uint256_BLY__success(this, msgsender_MSG, msgvalue_MSG, to_s1288, value_s1288);
[L2292]  CALL        call notFrozen_pre__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG);
[L3578]  COND FALSE  !(!!frozenAccount_BLY[this][_holder_s1185])
[L2292]  RET         call notFrozen_pre__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG);
[L2293]  COND FALSE  !(revert)
[L2296]  COND FALSE  !(alloc_timelockList_BLY_lvl0[timelockList_BLY[this]][msgsender_MSG] == false)
[L2307]  COND TRUE   Length[M_Ref_Ref[timelockList_BLY[this]][msgsender_MSG]] > 0
[L2308]  CALL        call __var_19 := _autoUnlock~address_BLY__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG);
[L2653]  COND FALSE  !(alloc_timelockList_BLY_lvl0[timelockList_BLY[this]][holder_s1645] == false)
[L2664]              idx_s1645 := 0;
[L2665]  COND TRUE   idx_s1645 < Length[M_Ref_Ref[timelockList_BLY[this]][holder_s1645]]
[L2667]  COND FALSE  !(alloc_timelockList_BLY_lvl0[timelockList_BLY[this]][holder_s1645] == false)
[L2678]  COND TRUE   _releaseTime_BLY.LockInfo[M_int_Ref[M_Ref_Ref[timelockList_BLY[this]][holder_s1645]][idx_s1645]] <= now
[L2679]  CALL        call __var_36 := _unlock~address~uint256_BLY__success(this, msgsender_MSG, msgvalue_MSG, holder_s1645, idx_s1645);
[L2512]  COND FALSE  !(alloc_timelockList_BLY_lvl0[timelockList_BLY[this]][holder_s1600] == false)
[L2523]              lockinfo_s1600 := M_int_Ref[M_Ref_Ref[timelockList_BLY[this]][holder_s1600]][idx_s1600];
[L2524]              releaseAmount_s1600 := _amount_BLY.LockInfo[lockinfo_s1600];
[L2525]  COND FALSE  !(alloc_timelockList_BLY_lvl0[timelockList_BLY[this]][holder_s1600] == false)
[L2536]  COND FALSE  !(alloc_timelockList_BLY_lvl0[timelockList_BLY[this]][holder_s1600] == false)
[L2547]  COND FALSE  !(alloc_timelockList_BLY_lvl0[timelockList_BLY[this]][holder_s1600] == false)
[L2558]  CALL        call __var_29 := sub~uint256~uint256_HxSafeMath__success(this, this, 0, Length[M_Ref_Ref[timelockList_BLY[this]][holder_s1600]], 1);
[L1679]  COND FALSE  !(!(b_s82 <= a_s82))
[L1683]              c_s82 := (a_s82 - b_s82) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1684]              __ret_0_ := c_s82;
[L2558]  RET         call __var_29 := sub~uint256~uint256_HxSafeMath__success(this, this, 0, Length[M_Ref_Ref[timelockList_BLY[this]][holder_s1600]], 1);
[L2559]  COND FALSE  !(revert)
[L2562]  COND FALSE  !(alloc_timelockList_BLY_lvl0[timelockList_BLY[this]][holder_s1600] == false)
[L2573]              M_int_Ref[M_Ref_Ref[timelockList_BLY[this]][holder_s1600]][idx_s1600] := M_int_Ref[M_Ref_Ref[timelockList_BLY[this]][holder_s1600]][__var_29];
[L2574]  COND FALSE  !(alloc_timelockList_BLY_lvl0[timelockList_BLY[this]][holder_s1600] == false)
[L2585]              Length[M_Ref_Ref[timelockList_BLY[this]][holder_s1600]] := (Length[M_Ref_Ref[timelockList_BLY[this]][holder_s1600]] - 1) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2586]              assert { :EventEmitted "Unlock_BLY" } true;
[L2587]  CALL        call __var_33 := add~uint256~uint256_HxSafeMath__success(this, this, 0, _balances_HxERC20[this][holder_s1600], releaseAmount_s1600);
[L1703]              c_s106 := (a_s106 + b_s106) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1704]  COND FALSE  !(!(c_s106 >= a_s106))
[L1708]              __ret_0_ := c_s106;
[L2587]  RET         call __var_33 := add~uint256~uint256_HxSafeMath__success(this, this, 0, _balances_HxERC20[this][holder_s1600], releaseAmount_s1600);
[L2588]  COND FALSE  !(revert)
[L2591]              sum__balances0[this] := sum__balances0[this] - _balances_HxERC20[this][holder_s1600];
[L2592]              _balances_HxERC20[this][holder_s1600] := __var_33;
[L2593]              sum__balances0[this] := sum__balances0[this] + _balances_HxERC20[this][holder_s1600];
[L2594]              __ret_0_ := true;
[L2679]  RET         call __var_36 := _unlock~address~uint256_BLY__success(this, msgsender_MSG, msgvalue_MSG, holder_s1645, idx_s1645);
[L2680]  COND FALSE  !(revert)
[L2683]  COND TRUE   __var_36
[L2684]              idx_s1645 := (idx_s1645 - 1) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2687]              idx_s1645 := (idx_s1645 + 1) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2688]  COND FALSE  !(gas < 0)
[L2665]  COND FALSE  !(idx_s1645 < Length[M_Ref_Ref[timelockList_BLY[this]][holder_s1645]])
[L2692]              __ret_0_ := true;
[L2308]  RET         call __var_19 := _autoUnlock~address_BLY__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG);
[L2309]  COND FALSE  !(revert)
[L2313]  COND TRUE   DType[this] == BLY
[L2314]  CALL        call __var_20 := transfer~address~uint256_ERC20Pausable__success(this, msgsender_MSG, msgvalue_MSG, to_s1288, value_s1288);
[L2038]  CALL        call whenNotPaused_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L3554]  COND FALSE  !(!!_paused_Pausable[this])
[L2038]  RET         call whenNotPaused_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L2039]  COND FALSE  !(revert)
[L2042]  COND TRUE   DType[this] == BLY
[L2043]  CALL        call __var_9 := transfer~address~uint256_HxERC20__success(this, msgsender_MSG, msgvalue_MSG, to_s1053, value_s1053);
[L1838]  COND TRUE   DType[this] == BLY
[L1839]  CALL        call _transfer~address~address~uint256_HxERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s675, value_s675);
[L1987]              __var_6 := null;
[L1988]  COND FALSE  !(!(to_s904 != null))
[L1992]  CALL        call __var_7 := sub~uint256~uint256_HxSafeMath__success(this, this, 0, _balances_HxERC20[this][from_s904], value_s904);
[L1679]  COND FALSE  !(!(b_s82 <= a_s82))
[L1683]              c_s82 := (a_s82 - b_s82) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1684]              __ret_0_ := c_s82;
[L1992]  RET         call __var_7 := sub~uint256~uint256_HxSafeMath__success(this, this, 0, _balances_HxERC20[this][from_s904], value_s904);
[L1993]  COND FALSE  !(revert)
[L1996]              sum__balances0[this] := sum__balances0[this] - _balances_HxERC20[this][from_s904];
[L1997]              _balances_HxERC20[this][from_s904] := __var_7;
[L1998]              sum__balances0[this] := sum__balances0[this] + _balances_HxERC20[this][from_s904];
[L1999]  CALL        call __var_8 := add~uint256~uint256_HxSafeMath__success(this, this, 0, _balances_HxERC20[this][to_s904], value_s904);
[L1703]              c_s106 := (a_s106 + b_s106) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1704]  COND FALSE  !(!(c_s106 >= a_s106))
[L1708]              __ret_0_ := c_s106;
[L1999]  RET         call __var_8 := add~uint256~uint256_HxSafeMath__success(this, this, 0, _balances_HxERC20[this][to_s904], value_s904);
[L2000]  COND FALSE  !(revert)
[L2003]              sum__balances0[this] := sum__balances0[this] - _balances_HxERC20[this][to_s904];
[L2004]              _balances_HxERC20[this][to_s904] := __var_8;
[L2005]              sum__balances0[this] := sum__balances0[this] + _balances_HxERC20[this][to_s904];
[L2006]              assert { :EventEmitted "Transfer_HxERC20" } true;
[L1839]  RET         call _transfer~address~address~uint256_HxERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s675, value_s675);
[L1840]  COND FALSE  !(revert)
[L1856]              __ret_0_ := true;
[L2043]  RET         call __var_9 := transfer~address~uint256_HxERC20__success(this, msgsender_MSG, msgvalue_MSG, to_s1053, value_s1053);
[L2044]  COND FALSE  !(revert)
[L2055]              __ret_0_ := __var_9;
[L2314]  RET         call __var_20 := transfer~address~uint256_ERC20Pausable__success(this, msgsender_MSG, msgvalue_MSG, to_s1288, value_s1288);
[L2315]  COND FALSE  !(revert)
[L2321]              __ret_0_ := __var_20;
[L909]   RET         call __ret_0_ := transfer~address~uint256_BLY__success(this, msgsender_MSG, msgvalue_MSG, to_s1288, value_s1288);
[L910]               assume !revert && gas >= 0;
[L4345]  RET         call __ret_0_transfer := transfer~address~uint256_BLY(this, msgsender_MSG, msgvalue_MSG, to_s1288, value_s1288);

Loop:

End of lasso representation.
RESULT: Ultimate could not prove your program: Toolchain returned no result.
Received shutdown request...
