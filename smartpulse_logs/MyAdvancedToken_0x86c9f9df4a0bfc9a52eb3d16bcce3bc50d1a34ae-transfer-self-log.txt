This is Ultimate 0.1.24-f1553f5-m
[2020-11-24 15:47:53,918 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-24 15:47:53,919 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-24 15:47:53,929 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-24 15:47:53,929 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-24 15:47:53,930 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-24 15:47:53,931 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-24 15:47:53,932 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-24 15:47:53,934 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-24 15:47:53,934 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-24 15:47:53,935 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-24 15:47:53,935 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-24 15:47:53,936 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-24 15:47:53,937 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-24 15:47:53,937 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-24 15:47:53,938 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-24 15:47:53,938 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-24 15:47:53,940 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-24 15:47:53,941 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-24 15:47:53,942 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-24 15:47:53,943 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-24 15:47:53,944 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-24 15:47:53,945 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-24 15:47:53,946 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-24 15:47:53,946 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-24 15:47:53,946 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-24 15:47:53,946 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-24 15:47:53,947 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-24 15:47:53,947 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-24 15:47:53,947 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-24 15:47:53,948 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-24 15:47:53,948 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-24 15:47:53,949 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-24 15:47:53,949 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-24 15:47:53,950 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-24 15:47:53,950 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-24 15:47:53,951 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-24 15:47:53,951 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-24 15:47:53,951 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-24 15:47:53,952 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-24 15:47:53,952 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-24 15:47:53,952 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-24 15:47:53,960 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-24 15:47:53,960 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-24 15:47:53,961 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-24 15:47:53,961 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-24 15:47:53,961 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-24 15:47:53,961 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-24 15:47:53,961 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-24 15:47:53,961 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-24 15:47:53,961 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-24 15:47:53,961 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-24 15:47:53,962 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-24 15:47:53,962 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-24 15:47:53,962 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-24 15:47:53,962 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-24 15:47:53,962 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-24 15:47:53,962 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-24 15:47:53,962 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-24 15:47:53,962 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-24 15:47:53,962 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-24 15:47:53,962 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-24 15:47:53,963 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-24 15:47:53,963 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-24 15:47:53,963 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-24 15:47:53,963 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-24 15:47:53,963 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-24 15:47:53,963 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-24 15:47:53,987 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-24 15:47:54,003 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-24 15:47:54,008 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-24 15:47:54,011 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-24 15:47:54,012 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-24 15:47:54,013 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/MyAdvancedToken_0x86c9f9df4a0bfc9a52eb3d16bcce3bc50d1a34ae_transfer-self.bpl
[2020-11-24 15:47:54,013 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/MyAdvancedToken_0x86c9f9df4a0bfc9a52eb3d16bcce3bc50d1a34ae_transfer-self.bpl'
[2020-11-24 15:47:54,079 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-24 15:47:54,080 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-24 15:47:54,080 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-24 15:47:54,080 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-24 15:47:54,080 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-24 15:47:54,096 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "MyAdvancedToken_0x86c9f9df4a0bfc9a52eb3d16bcce3bc50d1a34ae_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 03:47:54" (1/1) ...
[2020-11-24 15:47:54,098 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "MyAdvancedToken_0x86c9f9df4a0bfc9a52eb3d16bcce3bc50d1a34ae_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 03:47:54" (1/1) ...
[2020-11-24 15:47:54,121 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "MyAdvancedToken_0x86c9f9df4a0bfc9a52eb3d16bcce3bc50d1a34ae_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 03:47:54" (1/1) ...
[2020-11-24 15:47:54,121 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "MyAdvancedToken_0x86c9f9df4a0bfc9a52eb3d16bcce3bc50d1a34ae_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 03:47:54" (1/1) ...
[2020-11-24 15:47:54,136 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "MyAdvancedToken_0x86c9f9df4a0bfc9a52eb3d16bcce3bc50d1a34ae_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 03:47:54" (1/1) ...
[2020-11-24 15:47:54,142 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "MyAdvancedToken_0x86c9f9df4a0bfc9a52eb3d16bcce3bc50d1a34ae_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 03:47:54" (1/1) ...
[2020-11-24 15:47:54,146 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "MyAdvancedToken_0x86c9f9df4a0bfc9a52eb3d16bcce3bc50d1a34ae_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 03:47:54" (1/1) ...
[2020-11-24 15:47:54,152 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-24 15:47:54,153 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-24 15:47:54,153 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-24 15:47:54,155 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-24 15:47:54,159 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "MyAdvancedToken_0x86c9f9df4a0bfc9a52eb3d16bcce3bc50d1a34ae_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 03:47:54" (1/1) ...
[2020-11-24 15:47:54,173 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(TokenERC20.transfer(to, value), msg.sender == to && value <= balanceOf_TokenERC20[this][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_TokenERC20[this][to] >= 0 && balanceOf_TokenERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_TokenERC20[this][msg.sender] >= 0 &&  balanceOf_TokenERC20[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(TokenERC20.transfer(to, value), return == true && totalSupply_TokenERC20[this] == old(totalSupply_TokenERC20[this]) && balanceOf_TokenERC20[this] == old(balanceOf_TokenERC20[this]) && allowance_TokenERC20[this] == old(allowance_TokenERC20[this]) && sellPrice_MyAdvancedToken[this] == old(sellPrice_MyAdvancedToken[this]) && buyPrice_MyAdvancedToken[this] == old(buyPrice_MyAdvancedToken[this]) && frozenAccount_MyAdvancedToken[this] == old(frozenAccount_MyAdvancedToken[this]) && name_TokenERC20[this] == old(name_TokenERC20[this]) && symbol_TokenERC20[this] == old(symbol_TokenERC20[this]) && decimals_TokenERC20[this] == old(decimals_TokenERC20[this]) && owner_owned[this] == old(owner_owned[this]))))
[2020-11-24 15:47:54,178 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(TokenERC20.transfer(to, value), msg.sender == to && value <= balanceOf_TokenERC20[this][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_TokenERC20[this][to] >= 0 && balanceOf_TokenERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_TokenERC20[this][msg.sender] >= 0 &&  balanceOf_TokenERC20[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(TokenERC20.transfer(to, value), return == true && totalSupply_TokenERC20[this] == old(totalSupply_TokenERC20[this]) && balanceOf_TokenERC20[this] == old(balanceOf_TokenERC20[this]) && allowance_TokenERC20[this] == old(allowance_TokenERC20[this]) && sellPrice_MyAdvancedToken[this] == old(sellPrice_MyAdvancedToken[this]) && buyPrice_MyAdvancedToken[this] == old(buyPrice_MyAdvancedToken[this]) && frozenAccount_MyAdvancedToken[this] == old(frozenAccount_MyAdvancedToken[this]) && name_TokenERC20[this] == old(name_TokenERC20[this]) && symbol_TokenERC20[this] == old(symbol_TokenERC20[this]) && decimals_TokenERC20[this] == old(decimals_TokenERC20[this]) && owner_owned[this] == old(owner_owned[this]))))
[2020-11-24 15:47:54,186 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(TokenERC20.transfer(to, value), msg.sender == to && value <= balanceOf_TokenERC20[this][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_TokenERC20[this][to] >= 0 && balanceOf_TokenERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_TokenERC20[this][msg.sender] >= 0 &&  balanceOf_TokenERC20[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(TokenERC20.transfer(to, value), return == true && totalSupply_TokenERC20[this] == old(totalSupply_TokenERC20[this]) && balanceOf_TokenERC20[this] == old(balanceOf_TokenERC20[this]) && allowance_TokenERC20[this] == old(allowance_TokenERC20[this]) && sellPrice_MyAdvancedToken[this] == old(sellPrice_MyAdvancedToken[this]) && buyPrice_MyAdvancedToken[this] == old(buyPrice_MyAdvancedToken[this]) && frozenAccount_MyAdvancedToken[this] == old(frozenAccount_MyAdvancedToken[this]) && name_TokenERC20[this] == old(name_TokenERC20[this]) && symbol_TokenERC20[this] == old(symbol_TokenERC20[this]) && decimals_TokenERC20[this] == old(decimals_TokenERC20[this]) && owner_owned[this] == old(owner_owned[this]))))
[2020-11-24 15:47:54,191 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( msg.sender==_to_s221 && _value_s221<=balanceOf_TokenERC20[this][msg.sender] ) && _value_s221>=0 ) && _value_s221<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && balanceOf_TokenERC20[this][_to_s221]>=0 ) && balanceOf_TokenERC20[this][_to_s221]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && balanceOf_TokenERC20[this][msg.sender]>=0 ) && balanceOf_TokenERC20[this][msg.sender]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>],IdentifierExpression[_to_s221,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]],BinaryExpression[COMPLEQ,IdentifierExpression[_value_s221,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>],ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]]]],BinaryExpression[COMPGEQ,IdentifierExpression[_value_s221,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>],IntegerLiteral[0]]],BinaryExpression[COMPLT,IdentifierExpression[_value_s221,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]],[IdentifierExpression[_to_s221,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]],[IdentifierExpression[_to_s221,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]]
[2020-11-24 15:47:54,194 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( ( ( success_s221==true && totalSupply_TokenERC20[this]==( old(totalSupply_TokenERC20[this]) ) ) && balanceOf_TokenERC20[this]==( old(balanceOf_TokenERC20[this]) ) ) && allowance_TokenERC20[this]==( old(allowance_TokenERC20[this]) ) ) && sellPrice_MyAdvancedToken[this]==( old(sellPrice_MyAdvancedToken[this]) ) ) && buyPrice_MyAdvancedToken[this]==( old(buyPrice_MyAdvancedToken[this]) ) ) && frozenAccount_MyAdvancedToken[this]==( old(frozenAccount_MyAdvancedToken[this]) ) ) && name_TokenERC20[this]==( old(name_TokenERC20[this]) ) ) && symbol_TokenERC20[this]==( old(symbol_TokenERC20[this]) ) ) && decimals_TokenERC20[this]==( old(decimals_TokenERC20[this]) ) ) && owner_owned[this]==( old(owner_owned[this]) ) ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[success_s221,<IMPLEMENTATION_OUTPARAM,transfer~address~uint256_TokenERC20>],BooleanLiteral[true]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[totalSupply_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[totalSupply_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[balanceOf_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[balanceOf_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[allowance_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[allowance_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[sellPrice_MyAdvancedToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[sellPrice_MyAdvancedToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[buyPrice_MyAdvancedToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[buyPrice_MyAdvancedToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[frozenAccount_MyAdvancedToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[frozenAccount_MyAdvancedToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[name_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[name_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[symbol_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[symbol_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[decimals_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[decimals_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[owner_owned,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[owner_owned,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]]]]]
[2020-11-24 15:47:54,198 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(TokenERC20.transfer(to, value), msg.sender == to && value <= balanceOf_TokenERC20[this][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_TokenERC20[this][to] >= 0 && balanceOf_TokenERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_TokenERC20[this][msg.sender] >= 0 &&  balanceOf_TokenERC20[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(TokenERC20.transfer(to, value), return == true && totalSupply_TokenERC20[this] == old(totalSupply_TokenERC20[this]) && balanceOf_TokenERC20[this] == old(balanceOf_TokenERC20[this]) && allowance_TokenERC20[this] == old(allowance_TokenERC20[this]) && sellPrice_MyAdvancedToken[this] == old(sellPrice_MyAdvancedToken[this]) && buyPrice_MyAdvancedToken[this] == old(buyPrice_MyAdvancedToken[this]) && frozenAccount_MyAdvancedToken[this] == old(frozenAccount_MyAdvancedToken[this]) && name_TokenERC20[this] == old(name_TokenERC20[this]) && symbol_TokenERC20[this] == old(symbol_TokenERC20[this]) && decimals_TokenERC20[this] == old(decimals_TokenERC20[this]) && owner_owned[this] == old(owner_owned[this]))))
[2020-11-24 15:47:54,198 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_transfer_TokenERC200) ==> ( <>AP(success_transfer_TokenERC200) ) ) )
Executed UtopiaSpecLang
[2020-11-24 15:47:54,204 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 03:47:54 PropertyContainer
[2020-11-24 15:47:54,205 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-24 15:47:54,205 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-24 15:47:54,205 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-24 15:47:54,205 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-24 15:47:54,206 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "MyAdvancedToken_0x86c9f9df4a0bfc9a52eb3d16bcce3bc50d1a34ae_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 03:47:54" (1/2) ...
[2020-11-24 15:47:54,206 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-24 15:47:54,206 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-24 15:47:54,215 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 03:47:54" (2/2) ...
[2020-11-24 15:47:54,216 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-24 15:47:54,216 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-24 15:47:54,216 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-24 15:47:54,216 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-24 15:47:54,217 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "MyAdvancedToken_0x86c9f9df4a0bfc9a52eb3d16bcce3bc50d1a34ae_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 03:47:54" (1/2) ...
[2020-11-24 15:47:54,271 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-24 15:47:54,271 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_TokenERC20__success
[2020-11-24 15:47:54,272 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_TokenERC20
[2020-11-24 15:47:54,272 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_TokenERC20
[2020-11-24 15:47:54,272 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_TokenERC20
[2020-11-24 15:47:54,272 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_TokenERC20
[2020-11-24 15:47:54,272 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_TokenERC20
[2020-11-24 15:47:54,272 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_TokenERC20
[2020-11-24 15:47:54,272 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_TokenERC20
[2020-11-24 15:47:54,272 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_TokenERC20
[2020-11-24 15:47:54,272 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_TokenERC20
[2020-11-24 15:47:54,272 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_TokenERC20
[2020-11-24 15:47:54,272 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_TokenERC20
[2020-11-24 15:47:54,273 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_TokenERC20
[2020-11-24 15:47:54,273 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_MyAdvancedToken__success
[2020-11-24 15:47:54,273 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-24 15:47:54,273 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-24 15:47:54,273 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-24 15:47:54,273 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__success
[2020-11-24 15:47:54,273 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_owned
[2020-11-24 15:47:54,273 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_owned
[2020-11-24 15:47:54,273 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_tokenRecipient
[2020-11-24 15:47:54,273 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_tokenRecipient
[2020-11-24 15:47:54,273 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_TokenERC20
[2020-11-24 15:47:54,274 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_TokenERC20
[2020-11-24 15:47:54,274 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_MyAdvancedToken
[2020-11-24 15:47:54,274 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-24 15:47:54,274 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-24 15:47:54,274 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_TokenERC20__fail
[2020-11-24 15:47:54,274 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_TokenERC20__success
[2020-11-24 15:47:54,274 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_TokenERC20__fail
[2020-11-24 15:47:54,274 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_TokenERC20__success
[2020-11-24 15:47:54,274 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_TokenERC20__fail
[2020-11-24 15:47:54,274 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_TokenERC20__success
[2020-11-24 15:47:54,275 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_TokenERC20__fail
[2020-11-24 15:47:54,275 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_TokenERC20__success
[2020-11-24 15:47:54,275 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_TokenERC20__fail
[2020-11-24 15:47:54,275 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_TokenERC20__success
[2020-11-24 15:47:54,275 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_TokenERC20__fail
[2020-11-24 15:47:54,275 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_TokenERC20__success
[2020-11-24 15:47:54,275 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_TokenERC20__fail
[2020-11-24 15:47:54,275 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_MyAdvancedToken__fail
[2020-11-24 15:47:54,275 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-24 15:47:54,275 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-24 15:47:54,275 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-24 15:47:54,275 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__fail
[2020-11-24 15:47:54,275 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-24 15:47:54,276 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-24 15:47:54,276 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_TokenERC20__fail
[2020-11-24 15:47:54,276 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_TokenERC20__success
[2020-11-24 15:47:54,276 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_TokenERC20__fail
[2020-11-24 15:47:54,276 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_TokenERC20__success
[2020-11-24 15:47:54,276 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_TokenERC20__fail
[2020-11-24 15:47:54,276 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_TokenERC20__success
[2020-11-24 15:47:54,276 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_TokenERC20__fail
[2020-11-24 15:47:54,276 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_TokenERC20__success
[2020-11-24 15:47:54,276 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_TokenERC20__fail
[2020-11-24 15:47:54,276 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_TokenERC20__success
[2020-11-24 15:47:54,276 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_TokenERC20__fail
[2020-11-24 15:47:54,277 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_TokenERC20__success
[2020-11-24 15:47:54,277 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_TokenERC20__fail
[2020-11-24 15:47:54,277 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_TokenERC20__success
[2020-11-24 15:47:54,277 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_MyAdvancedToken__fail
[2020-11-24 15:47:54,277 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_MyAdvancedToken__success
[2020-11-24 15:47:54,277 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-24 15:47:54,277 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-24 15:47:54,277 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-24 15:47:54,277 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-24 15:47:54,277 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-24 15:47:54,277 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-24 15:47:54,277 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__fail
[2020-11-24 15:47:54,277 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__success
[2020-11-24 15:47:54,277 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_owned
[2020-11-24 15:47:54,278 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_owned
[2020-11-24 15:47:54,278 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_tokenRecipient
[2020-11-24 15:47:54,278 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_tokenRecipient
[2020-11-24 15:47:54,278 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_TokenERC20
[2020-11-24 15:47:54,278 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_TokenERC20
[2020-11-24 15:47:54,278 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_MyAdvancedToken
[2020-11-24 15:47:54,278 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-24 15:47:54,278 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-24 15:47:54,278 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-24 15:47:54,754 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 15:47:54,754 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 15:47:54,754 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 15:47:54,784 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-24 15:47:54,785 INFO  L286             CfgBuilder]: Removed 4 assue(true) statements.
[2020-11-24 15:47:54,786 INFO  L202        PluginConnector]: Adding new model MyAdvancedToken_0x86c9f9df4a0bfc9a52eb3d16bcce3bc50d1a34ae_transfer-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 03:47:54 BoogieIcfgContainer
[2020-11-24 15:47:54,786 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 03:47:54" (2/2) ...
[2020-11-24 15:47:54,786 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-24 15:47:54,787 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@57976d21 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 03:47:54, skipping insertion in model container
[2020-11-24 15:47:54,787 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-24 15:47:54,787 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-24 15:47:54,787 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-24 15:47:54,789 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-24 15:47:54,790 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "MyAdvancedToken_0x86c9f9df4a0bfc9a52eb3d16bcce3bc50d1a34ae_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 03:47:54" (1/3) ...
[2020-11-24 15:47:54,790 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@3c0c93ee and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 03:47:54, skipping insertion in model container
[2020-11-24 15:47:54,790 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 03:47:54" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-24 15:47:54,830 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 03:47:54 NWAContainer
[2020-11-24 15:47:54,830 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-24 15:47:54,831 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-24 15:47:54,831 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-24 15:47:54,832 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-24 15:47:54,834 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "MyAdvancedToken_0x86c9f9df4a0bfc9a52eb3d16bcce3bc50d1a34ae_transfer-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 03:47:54" (3/4) ...
[2020-11-24 15:47:54,835 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@36ec6ca and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 03:47:54, skipping insertion in model container
[2020-11-24 15:47:54,836 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 03:47:54" (4/4) ...
[2020-11-24 15:47:54,839 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-24 15:47:54,842 INFO  L110   BuchiProductObserver]: Initial RCFG 668 locations, 835 edges
[2020-11-24 15:47:54,842 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-24 15:47:54,852 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-24 15:47:55,774 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-24 15:47:55,777 INFO  L110   BuchiProductObserver]: BuchiProgram size 1544 locations, 2693 edges
[2020-11-24 15:47:55,777 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 03:47:55 BoogieIcfgContainer
[2020-11-24 15:47:55,777 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-24 15:47:55,778 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-24 15:47:55,778 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-24 15:47:55,779 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-24 15:47:55,780 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 03:47:55" (1/1) ...
[2020-11-24 15:47:55,828 INFO  L313           BlockEncoder]: Initial Icfg 1544 locations, 2693 edges
[2020-11-24 15:47:55,828 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-24 15:47:55,829 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-24 15:47:55,829 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-24 15:47:55,830 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-24 15:47:55,837 INFO  L70    emoveInfeasibleEdges]: Removed 51 edges and 11 locations because of local infeasibility
[2020-11-24 15:47:55,842 INFO  L70        RemoveSinkStates]: Removed 14 edges and 9 locations by removing sink states
[2020-11-24 15:47:55,848 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-24 15:47:55,850 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-24 15:47:55,851 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-24 15:47:55,852 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-24 15:47:55,855 INFO  L313           BlockEncoder]: Encoded RCFG 1510 locations, 2608 edges
[2020-11-24 15:47:55,855 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 24.11 03:47:55 BasicIcfg
[2020-11-24 15:47:55,855 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-24 15:47:55,855 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-24 15:47:55,856 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-24 15:47:55,858 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-24 15:47:55,858 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 15:47:55,858 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "MyAdvancedToken_0x86c9f9df4a0bfc9a52eb3d16bcce3bc50d1a34ae_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 03:47:54" (1/6) ...
[2020-11-24 15:47:55,860 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@7d535099 and model type MyAdvancedToken_0x86c9f9df4a0bfc9a52eb3d16bcce3bc50d1a34ae_transfer-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 24.11 03:47:55, skipping insertion in model container
[2020-11-24 15:47:55,860 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 15:47:55,860 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 03:47:54" (2/6) ...
[2020-11-24 15:47:55,861 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@7d535099 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 24.11 03:47:55, skipping insertion in model container
[2020-11-24 15:47:55,861 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 15:47:55,861 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "MyAdvancedToken_0x86c9f9df4a0bfc9a52eb3d16bcce3bc50d1a34ae_transfer-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 03:47:54" (3/6) ...
[2020-11-24 15:47:55,861 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@7d535099 and model type MyAdvancedToken_0x86c9f9df4a0bfc9a52eb3d16bcce3bc50d1a34ae_transfer-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 24.11 03:47:55, skipping insertion in model container
[2020-11-24 15:47:55,861 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 15:47:55,861 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 03:47:54" (4/6) ...
[2020-11-24 15:47:55,862 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@7d535099 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 24.11 03:47:55, skipping insertion in model container
[2020-11-24 15:47:55,862 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 15:47:55,862 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 03:47:55" (5/6) ...
[2020-11-24 15:47:55,862 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@7d535099 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 24.11 03:47:55, skipping insertion in model container
[2020-11-24 15:47:55,862 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 15:47:55,862 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 24.11 03:47:55" (6/6) ...
[2020-11-24 15:47:55,863 INFO  L404   chiAutomizerObserver]: Analyzing ICFG MyAdvancedToken_0x86c9f9df4a0bfc9a52eb3d16bcce3bc50d1a34ae_transfer-self.bpl_BEv2
[2020-11-24 15:47:55,901 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-24 15:47:55,901 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-24 15:47:55,901 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-24 15:47:55,902 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-24 15:47:55,902 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-24 15:47:55,902 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-24 15:47:55,902 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-24 15:47:55,902 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-24 15:47:55,902 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-24 15:47:55,921 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1510 states.
[2020-11-24 15:47:55,958 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 15:47:55,958 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 15:47:55,959 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 15:47:55,967 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 15:47:55,967 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
[2020-11-24 15:47:55,967 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-24 15:47:55,967 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1510 states.
[2020-11-24 15:47:55,977 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 15:47:55,977 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 15:47:55,978 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 15:47:55,979 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 15:47:55,979 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L2]                 success_transfer_TokenERC200 := false;
[L2]                 call_transfer_TokenERC200 := false;
[L2]     CALL        call main();
[L1940]              assume null == 0;
[L1941]  CALL        call this := FreshRefGenerator__success();
[L747]               havoc newRef;
[L748]               assume Alloc[newRef] == false;
[L749]               Alloc[newRef] := true;
[L750]               assume newRef != null;
[L1941]  RET         call this := FreshRefGenerator__success();
[L1942]              assume now >= 0;
[L1943]              assume DType[this] == MyAdvancedToken;
[L1944]              assume !revert && gas >= 0;
[L1945]  CALL        call CorralChoice_MyAdvancedToken(this);
[L1833]              havoc msgsender_MSG;
[L1834]              havoc msgvalue_MSG;
[L1835]              havoc choice;
[L1836]              havoc __ret_0_owner;
[L1837]              havoc newOwner_s35;
[L1838]              havoc __ret_0_name;
[L1839]              havoc __ret_0_symbol;
[L1840]              havoc __ret_0_decimals;
[L1841]              havoc __ret_0_totalSupply;
[L1842]              havoc arg662_s0;
[L1843]              havoc __ret_0_balanceOf;
[L1844]              havoc arg663_s0;
[L1845]              havoc arg664_s0;
[L1846]              havoc __ret_0_allowance;
[L1847]              havoc initialSupply_s124;
[L1848]              havoc tokenName_s124;
[L1849]              havoc tokenSymbol_s124;
[L1850]              havoc _to_s221;
[L1851]              havoc _value_s221;
[L1852]              havoc success_s221;
[L1853]              havoc _from_s261;
[L1854]              havoc _to_s261;
[L1855]              havoc _value_s261;
[L1856]              havoc success_s261;
[L1857]              havoc _spender_s289;
[L1858]              havoc _value_s289;
[L1859]              havoc success_s289;
[L1860]              havoc _spender_s327;
[L1861]              havoc _value_s327;
[L1862]              havoc _extraData_s327;
[L1863]              havoc success_s327;
[L1864]              havoc _value_s363;
[L1865]              havoc success_s363;
[L1866]              havoc _from_s418;
[L1867]              havoc _value_s418;
[L1868]              havoc success_s418;
[L1869]              havoc __ret_0_sellPrice;
[L1870]              havoc __ret_0_buyPrice;
[L1871]              havoc arg665_s0;
[L1872]              havoc __ret_0_frozenAccount;
[L1873]              havoc initialSupply_s452;
[L1874]              havoc tokenName_s452;
[L1875]              havoc tokenSymbol_s452;
[L1876]              havoc target_s560;
[L1877]              havoc mintedAmount_s560;
[L1878]              havoc target_s581;
[L1879]              havoc freeze_s581;
[L1880]              havoc newSellPrice_s599;
[L1881]              havoc newBuyPrice_s599;
[L1882]              havoc amount_s659;
[L1883]              havoc tmpNow;
[L1884]              havoc gas;
[L1885]              assume gas > 4000000 && gas <= 8000000;
[L1886]              tmpNow := now;
[L1887]              havoc now;
[L1888]              assume now > tmpNow;
[L1889]              assume msgsender_MSG != null;
[L1890]  COND TRUE   choice == 6
[L1891]              gas := gas - 21000;
[L1892]  COND FALSE  !(gas >= 0)
[L1945]  RET         call CorralChoice_MyAdvancedToken(this);

Loop:
[L1945]        assume true;

[2020-11-24 15:47:55,996 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 15:47:55,996 INFO  L82        PathProgramCache]: Analyzing trace with hash -1856211275, now seen corresponding path program 1 times
[2020-11-24 15:47:56,001 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 15:47:56,024 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 15:47:56,087 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 15:47:56,090 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 15:47:56,090 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [5] imperfect sequences [] total 5
[2020-11-24 15:47:56,095 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 15:47:56,107 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 5 interpolants.
[2020-11-24 15:47:56,107 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=9, Invalid=11, Unknown=0, NotChecked=0, Total=20
[2020-11-24 15:47:56,109 INFO  L87              Difference]: Start difference. First operand 1510 states. Second operand 5 states.
[2020-11-24 15:47:56,387 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 15:47:56,388 INFO  L93              Difference]: Finished difference Result 666 states and 746 transitions.
[2020-11-24 15:47:56,388 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-24 15:47:56,389 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 666 states and 746 transitions.
[2020-11-24 15:47:56,396 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 15:47:56,401 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 666 states to 235 states and 258 transitions.
[2020-11-24 15:47:56,402 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 4
[2020-11-24 15:47:56,403 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 235
[2020-11-24 15:47:56,403 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 235 states and 258 transitions.
[2020-11-24 15:47:56,405 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 15:47:56,405 INFO  L728         BuchiCegarLoop]: Abstraction has 235 states and 258 transitions.
[2020-11-24 15:47:56,419 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 235 states and 258 transitions.
[2020-11-24 15:47:56,434 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 235 to 235.
[2020-11-24 15:47:56,434 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 235 states.
[2020-11-24 15:47:56,435 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 235 states to 235 states and 258 transitions.
[2020-11-24 15:47:56,436 INFO  L751         BuchiCegarLoop]: Abstraction has 235 states and 258 transitions.
[2020-11-24 15:47:56,436 INFO  L631         BuchiCegarLoop]: Abstraction has 235 states and 258 transitions.
[2020-11-24 15:47:56,436 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-24 15:47:56,436 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 235 states and 258 transitions.
[2020-11-24 15:47:56,438 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 15:47:56,438 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 15:47:56,438 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 15:47:56,439 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 15:47:56,439 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L2]                 success_transfer_TokenERC200 := false;
[L2]                 call_transfer_TokenERC200 := false;
[L2]     CALL        call main();
[L1940]              assume null == 0;
[L1941]  CALL        call this := FreshRefGenerator__success();
[L747]               havoc newRef;
[L748]               assume Alloc[newRef] == false;
[L749]               Alloc[newRef] := true;
[L750]               assume newRef != null;
[L1941]  RET         call this := FreshRefGenerator__success();
[L1942]              assume now >= 0;
[L1943]              assume DType[this] == MyAdvancedToken;
[L1944]              assume !revert && gas >= 0;
[L1945]  CALL        call CorralChoice_MyAdvancedToken(this);
[L1833]              havoc msgsender_MSG;
[L1834]              havoc msgvalue_MSG;
[L1835]              havoc choice;
[L1836]              havoc __ret_0_owner;
[L1837]              havoc newOwner_s35;
[L1838]              havoc __ret_0_name;
[L1839]              havoc __ret_0_symbol;
[L1840]              havoc __ret_0_decimals;
[L1841]              havoc __ret_0_totalSupply;
[L1842]              havoc arg662_s0;
[L1843]              havoc __ret_0_balanceOf;
[L1844]              havoc arg663_s0;
[L1845]              havoc arg664_s0;
[L1846]              havoc __ret_0_allowance;
[L1847]              havoc initialSupply_s124;
[L1848]              havoc tokenName_s124;
[L1849]              havoc tokenSymbol_s124;
[L1850]              havoc _to_s221;
[L1851]              havoc _value_s221;
[L1852]              havoc success_s221;
[L1853]              havoc _from_s261;
[L1854]              havoc _to_s261;
[L1855]              havoc _value_s261;
[L1856]              havoc success_s261;
[L1857]              havoc _spender_s289;
[L1858]              havoc _value_s289;
[L1859]              havoc success_s289;
[L1860]              havoc _spender_s327;
[L1861]              havoc _value_s327;
[L1862]              havoc _extraData_s327;
[L1863]              havoc success_s327;
[L1864]              havoc _value_s363;
[L1865]              havoc success_s363;
[L1866]              havoc _from_s418;
[L1867]              havoc _value_s418;
[L1868]              havoc success_s418;
[L1869]              havoc __ret_0_sellPrice;
[L1870]              havoc __ret_0_buyPrice;
[L1871]              havoc arg665_s0;
[L1872]              havoc __ret_0_frozenAccount;
[L1873]              havoc initialSupply_s452;
[L1874]              havoc tokenName_s452;
[L1875]              havoc tokenSymbol_s452;
[L1876]              havoc target_s560;
[L1877]              havoc mintedAmount_s560;
[L1878]              havoc target_s581;
[L1879]              havoc freeze_s581;
[L1880]              havoc newSellPrice_s599;
[L1881]              havoc newBuyPrice_s599;
[L1882]              havoc amount_s659;
[L1883]              havoc tmpNow;
[L1884]              havoc gas;
[L1885]              assume gas > 4000000 && gas <= 8000000;
[L1886]              tmpNow := now;
[L1887]              havoc now;
[L1888]              assume now > tmpNow;
[L1889]              assume msgsender_MSG != null;
[L1890]  COND FALSE  !(choice == 6)
[L1896]  COND FALSE  !(choice == 5)
[L1902]  COND FALSE  !(choice == 4)
[L1908]  COND TRUE   choice == 3
[L1909]              gas := gas - 21000;
[L1910]  COND TRUE   gas >= 0
[L1911]              assume _value_s221 >= 0 && _value_s221 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1912]              assume msgvalue_MSG == 0;
[L1913]  CALL        call success_s221 := transfer~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, _to_s221, _value_s221);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == _to_s221 && _value_s221 <= balanceOf_TokenERC20[this][msgsender_MSG]) && _value_s221 >= 0) && _value_s221 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_TokenERC20[this][_to_s221] >= 0) && balanceOf_TokenERC20[this][_to_s221] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_TokenERC20[this][msgsender_MSG] >= 0) && balanceOf_TokenERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_TokenERC200 := true;
[L2]                 call_transfer_TokenERC200 := false;
[L2]                 revert := revert_hold;
[L84]                havoc __exception;
[L85]                revert := false;
[L86]    COND FALSE  !(__exception)
[L113]   CALL        call success_s221 := transfer~address~uint256_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, _to_s221, _value_s221);
[L828]   COND TRUE   DType[this] == MyAdvancedToken
[L829]   CALL        call _transfer~address~address~uint256_MyAdvancedToken__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, _to_s221, _value_s221);
[L987]               __var_2 := null;
[L988]   COND TRUE   !(_to_s522 != null)
[L989]               revert := true;
[L829]   RET         call _transfer~address~address~uint256_MyAdvancedToken__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, _to_s221, _value_s221);
[L830]   COND TRUE   revert
[L113]   RET         call success_s221 := transfer~address~uint256_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, _to_s221, _value_s221);
[L114]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !((((((((((success_s221 == true && totalSupply_TokenERC20[this] == old(totalSupply_TokenERC20[this])) && balanceOf_TokenERC20[this] == old(balanceOf_TokenERC20[this])) && allowance_TokenERC20[this] == old(allowance_TokenERC20[this])) && sellPrice_MyAdvancedToken[this] == old(sellPrice_MyAdvancedToken[this])) && buyPrice_MyAdvancedToken[this] == old(buyPrice_MyAdvancedToken[this])) && frozenAccount_MyAdvancedToken[this] == old(frozenAccount_MyAdvancedToken[this])) && name_TokenERC20[this] == old(name_TokenERC20[this])) && symbol_TokenERC20[this] == old(symbol_TokenERC20[this])) && decimals_TokenERC20[this] == old(decimals_TokenERC20[this])) && owner_owned[this] == old(owner_owned[this]));
[L2]                 revert := revert_hold;
[L1913]  RET         call success_s221 := transfer~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, _to_s221, _value_s221);
[L1945]  RET         call CorralChoice_MyAdvancedToken(this);

Loop:
[L1945]        assume true;

[2020-11-24 15:47:56,442 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 15:47:56,443 INFO  L82        PathProgramCache]: Analyzing trace with hash -318454091, now seen corresponding path program 1 times
[2020-11-24 15:47:56,443 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 15:47:56,455 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 15:47:56,489 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 15:47:56,489 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 15:47:56,489 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [7] imperfect sequences [] total 7
[2020-11-24 15:47:56,491 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 15:47:56,491 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 7 interpolants.
[2020-11-24 15:47:56,491 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=11, Invalid=31, Unknown=0, NotChecked=0, Total=42
[2020-11-24 15:47:56,491 INFO  L87              Difference]: Start difference. First operand 235 states and 258 transitions. cyclomatic complexity: 24 Second operand 7 states.
[2020-11-24 15:47:56,511 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 15:47:56,511 INFO  L93              Difference]: Finished difference Result 250 states and 273 transitions.
[2020-11-24 15:47:56,511 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 7 states. 
[2020-11-24 15:47:56,512 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 250 states and 273 transitions.
[2020-11-24 15:47:56,514 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 15:47:56,516 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 250 states to 234 states and 256 transitions.
[2020-11-24 15:47:56,516 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 234
[2020-11-24 15:47:56,516 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 234
[2020-11-24 15:47:56,516 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 234 states and 256 transitions.
[2020-11-24 15:47:56,517 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 15:47:56,517 INFO  L728         BuchiCegarLoop]: Abstraction has 234 states and 256 transitions.
[2020-11-24 15:47:56,517 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 234 states and 256 transitions.
[2020-11-24 15:47:56,522 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 234 to 234.
[2020-11-24 15:47:56,522 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 234 states.
[2020-11-24 15:47:56,523 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 234 states to 234 states and 256 transitions.
[2020-11-24 15:47:56,523 INFO  L751         BuchiCegarLoop]: Abstraction has 234 states and 256 transitions.
[2020-11-24 15:47:56,523 INFO  L631         BuchiCegarLoop]: Abstraction has 234 states and 256 transitions.
[2020-11-24 15:47:56,523 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-24 15:47:56,523 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 234 states and 256 transitions.
[2020-11-24 15:47:56,524 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 15:47:56,524 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 15:47:56,524 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 15:47:56,526 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 15:47:56,526 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L2]                 success_transfer_TokenERC200 := false;
[L2]                 call_transfer_TokenERC200 := false;
[L2]     CALL        call main();
[L1940]              assume null == 0;
[L1941]  CALL        call this := FreshRefGenerator__success();
[L747]               havoc newRef;
[L748]               assume Alloc[newRef] == false;
[L749]               Alloc[newRef] := true;
[L750]               assume newRef != null;
[L1941]  RET         call this := FreshRefGenerator__success();
[L1942]              assume now >= 0;
[L1943]              assume DType[this] == MyAdvancedToken;
[L1944]              assume !revert && gas >= 0;
[L1945]  CALL        call CorralChoice_MyAdvancedToken(this);
[L1833]              havoc msgsender_MSG;
[L1834]              havoc msgvalue_MSG;
[L1835]              havoc choice;
[L1836]              havoc __ret_0_owner;
[L1837]              havoc newOwner_s35;
[L1838]              havoc __ret_0_name;
[L1839]              havoc __ret_0_symbol;
[L1840]              havoc __ret_0_decimals;
[L1841]              havoc __ret_0_totalSupply;
[L1842]              havoc arg662_s0;
[L1843]              havoc __ret_0_balanceOf;
[L1844]              havoc arg663_s0;
[L1845]              havoc arg664_s0;
[L1846]              havoc __ret_0_allowance;
[L1847]              havoc initialSupply_s124;
[L1848]              havoc tokenName_s124;
[L1849]              havoc tokenSymbol_s124;
[L1850]              havoc _to_s221;
[L1851]              havoc _value_s221;
[L1852]              havoc success_s221;
[L1853]              havoc _from_s261;
[L1854]              havoc _to_s261;
[L1855]              havoc _value_s261;
[L1856]              havoc success_s261;
[L1857]              havoc _spender_s289;
[L1858]              havoc _value_s289;
[L1859]              havoc success_s289;
[L1860]              havoc _spender_s327;
[L1861]              havoc _value_s327;
[L1862]              havoc _extraData_s327;
[L1863]              havoc success_s327;
[L1864]              havoc _value_s363;
[L1865]              havoc success_s363;
[L1866]              havoc _from_s418;
[L1867]              havoc _value_s418;
[L1868]              havoc success_s418;
[L1869]              havoc __ret_0_sellPrice;
[L1870]              havoc __ret_0_buyPrice;
[L1871]              havoc arg665_s0;
[L1872]              havoc __ret_0_frozenAccount;
[L1873]              havoc initialSupply_s452;
[L1874]              havoc tokenName_s452;
[L1875]              havoc tokenSymbol_s452;
[L1876]              havoc target_s560;
[L1877]              havoc mintedAmount_s560;
[L1878]              havoc target_s581;
[L1879]              havoc freeze_s581;
[L1880]              havoc newSellPrice_s599;
[L1881]              havoc newBuyPrice_s599;
[L1882]              havoc amount_s659;
[L1883]              havoc tmpNow;
[L1884]              havoc gas;
[L1885]              assume gas > 4000000 && gas <= 8000000;
[L1886]              tmpNow := now;
[L1887]              havoc now;
[L1888]              assume now > tmpNow;
[L1889]              assume msgsender_MSG != null;
[L1890]  COND FALSE  !(choice == 6)
[L1896]  COND FALSE  !(choice == 5)
[L1902]  COND FALSE  !(choice == 4)
[L1908]  COND TRUE   choice == 3
[L1909]              gas := gas - 21000;
[L1910]  COND TRUE   gas >= 0
[L1911]              assume _value_s221 >= 0 && _value_s221 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1912]              assume msgvalue_MSG == 0;
[L1913]  CALL        call success_s221 := transfer~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, _to_s221, _value_s221);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == _to_s221 && _value_s221 <= balanceOf_TokenERC20[this][msgsender_MSG]) && _value_s221 >= 0) && _value_s221 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_TokenERC20[this][_to_s221] >= 0) && balanceOf_TokenERC20[this][_to_s221] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_TokenERC20[this][msgsender_MSG] >= 0) && balanceOf_TokenERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_TokenERC200 := true;
[L2]                 call_transfer_TokenERC200 := false;
[L2]                 revert := revert_hold;
[L84]                havoc __exception;
[L85]                revert := false;
[L86]    COND FALSE  !(__exception)
[L113]   CALL        call success_s221 := transfer~address~uint256_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, _to_s221, _value_s221);
[L828]   COND TRUE   DType[this] == MyAdvancedToken
[L829]   CALL        call _transfer~address~address~uint256_MyAdvancedToken__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, _to_s221, _value_s221);
[L987]               __var_2 := null;
[L988]   COND FALSE  !(!(_to_s522 != null))
[L992]   COND TRUE   !(balanceOf_TokenERC20[this][_from_s522] >= _value_s522)
[L993]               revert := true;
[L829]   RET         call _transfer~address~address~uint256_MyAdvancedToken__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, _to_s221, _value_s221);
[L830]   COND TRUE   revert
[L113]   RET         call success_s221 := transfer~address~uint256_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, _to_s221, _value_s221);
[L114]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !((((((((((success_s221 == true && totalSupply_TokenERC20[this] == old(totalSupply_TokenERC20[this])) && balanceOf_TokenERC20[this] == old(balanceOf_TokenERC20[this])) && allowance_TokenERC20[this] == old(allowance_TokenERC20[this])) && sellPrice_MyAdvancedToken[this] == old(sellPrice_MyAdvancedToken[this])) && buyPrice_MyAdvancedToken[this] == old(buyPrice_MyAdvancedToken[this])) && frozenAccount_MyAdvancedToken[this] == old(frozenAccount_MyAdvancedToken[this])) && name_TokenERC20[this] == old(name_TokenERC20[this])) && symbol_TokenERC20[this] == old(symbol_TokenERC20[this])) && decimals_TokenERC20[this] == old(decimals_TokenERC20[this])) && owner_owned[this] == old(owner_owned[this]));
[L2]                 revert := revert_hold;
[L1913]  RET         call success_s221 := transfer~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, _to_s221, _value_s221);
[L1945]  RET         call CorralChoice_MyAdvancedToken(this);

Loop:
[L1945]        assume true;

[2020-11-24 15:47:56,528 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 15:47:56,528 INFO  L82        PathProgramCache]: Analyzing trace with hash -864734537, now seen corresponding path program 1 times
[2020-11-24 15:47:56,529 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 15:47:56,538 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 15:47:56,555 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 15:47:56,555 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 15:47:56,555 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-24 15:47:56,555 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 15:47:56,556 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-24 15:47:56,556 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-24 15:47:56,556 INFO  L87              Difference]: Start difference. First operand 234 states and 256 transitions. cyclomatic complexity: 23 Second operand 3 states.
[2020-11-24 15:47:56,563 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 15:47:56,563 INFO  L93              Difference]: Finished difference Result 265 states and 286 transitions.
[2020-11-24 15:47:56,563 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-24 15:47:56,563 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 265 states and 286 transitions.
[2020-11-24 15:47:56,565 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 2
[2020-11-24 15:47:56,566 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 265 states to 246 states and 259 transitions.
[2020-11-24 15:47:56,566 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 246
[2020-11-24 15:47:56,567 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 246
[2020-11-24 15:47:56,567 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 246 states and 259 transitions.
[2020-11-24 15:47:56,567 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 15:47:56,567 INFO  L728         BuchiCegarLoop]: Abstraction has 246 states and 259 transitions.
[2020-11-24 15:47:56,568 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 246 states and 259 transitions.
[2020-11-24 15:47:56,572 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 246 to 235.
[2020-11-24 15:47:56,572 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 235 states.
[2020-11-24 15:47:56,572 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 235 states to 235 states and 248 transitions.
[2020-11-24 15:47:56,572 INFO  L751         BuchiCegarLoop]: Abstraction has 235 states and 248 transitions.
[2020-11-24 15:47:56,573 INFO  L631         BuchiCegarLoop]: Abstraction has 235 states and 248 transitions.
[2020-11-24 15:47:56,573 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-24 15:47:56,573 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 235 states and 248 transitions.
[2020-11-24 15:47:56,574 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 15:47:56,574 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 15:47:56,574 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 15:47:56,575 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 15:47:56,575 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L2]                 success_transfer_TokenERC200 := false;
[L2]                 call_transfer_TokenERC200 := false;
[L2]     CALL        call main();
[L1940]              assume null == 0;
[L1941]  CALL        call this := FreshRefGenerator__success();
[L747]               havoc newRef;
[L748]               assume Alloc[newRef] == false;
[L749]               Alloc[newRef] := true;
[L750]               assume newRef != null;
[L1941]  RET         call this := FreshRefGenerator__success();
[L1942]              assume now >= 0;
[L1943]              assume DType[this] == MyAdvancedToken;
[L1944]              assume !revert && gas >= 0;
[L1945]  CALL        call CorralChoice_MyAdvancedToken(this);
[L1833]              havoc msgsender_MSG;
[L1834]              havoc msgvalue_MSG;
[L1835]              havoc choice;
[L1836]              havoc __ret_0_owner;
[L1837]              havoc newOwner_s35;
[L1838]              havoc __ret_0_name;
[L1839]              havoc __ret_0_symbol;
[L1840]              havoc __ret_0_decimals;
[L1841]              havoc __ret_0_totalSupply;
[L1842]              havoc arg662_s0;
[L1843]              havoc __ret_0_balanceOf;
[L1844]              havoc arg663_s0;
[L1845]              havoc arg664_s0;
[L1846]              havoc __ret_0_allowance;
[L1847]              havoc initialSupply_s124;
[L1848]              havoc tokenName_s124;
[L1849]              havoc tokenSymbol_s124;
[L1850]              havoc _to_s221;
[L1851]              havoc _value_s221;
[L1852]              havoc success_s221;
[L1853]              havoc _from_s261;
[L1854]              havoc _to_s261;
[L1855]              havoc _value_s261;
[L1856]              havoc success_s261;
[L1857]              havoc _spender_s289;
[L1858]              havoc _value_s289;
[L1859]              havoc success_s289;
[L1860]              havoc _spender_s327;
[L1861]              havoc _value_s327;
[L1862]              havoc _extraData_s327;
[L1863]              havoc success_s327;
[L1864]              havoc _value_s363;
[L1865]              havoc success_s363;
[L1866]              havoc _from_s418;
[L1867]              havoc _value_s418;
[L1868]              havoc success_s418;
[L1869]              havoc __ret_0_sellPrice;
[L1870]              havoc __ret_0_buyPrice;
[L1871]              havoc arg665_s0;
[L1872]              havoc __ret_0_frozenAccount;
[L1873]              havoc initialSupply_s452;
[L1874]              havoc tokenName_s452;
[L1875]              havoc tokenSymbol_s452;
[L1876]              havoc target_s560;
[L1877]              havoc mintedAmount_s560;
[L1878]              havoc target_s581;
[L1879]              havoc freeze_s581;
[L1880]              havoc newSellPrice_s599;
[L1881]              havoc newBuyPrice_s599;
[L1882]              havoc amount_s659;
[L1883]              havoc tmpNow;
[L1884]              havoc gas;
[L1885]              assume gas > 4000000 && gas <= 8000000;
[L1886]              tmpNow := now;
[L1887]              havoc now;
[L1888]              assume now > tmpNow;
[L1889]              assume msgsender_MSG != null;
[L1890]  COND FALSE  !(choice == 6)
[L1896]  COND FALSE  !(choice == 5)
[L1902]  COND FALSE  !(choice == 4)
[L1908]  COND TRUE   choice == 3
[L1909]              gas := gas - 21000;
[L1910]  COND TRUE   gas >= 0
[L1911]              assume _value_s221 >= 0 && _value_s221 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1912]              assume msgvalue_MSG == 0;
[L1913]  CALL        call success_s221 := transfer~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, _to_s221, _value_s221);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == _to_s221 && _value_s221 <= balanceOf_TokenERC20[this][msgsender_MSG]) && _value_s221 >= 0) && _value_s221 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_TokenERC20[this][_to_s221] >= 0) && balanceOf_TokenERC20[this][_to_s221] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_TokenERC20[this][msgsender_MSG] >= 0) && balanceOf_TokenERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_TokenERC200 := true;
[L2]                 call_transfer_TokenERC200 := false;
[L2]                 revert := revert_hold;
[L84]                havoc __exception;
[L85]                revert := false;
[L86]    COND FALSE  !(__exception)
[L113]   CALL        call success_s221 := transfer~address~uint256_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, _to_s221, _value_s221);
[L828]   COND TRUE   DType[this] == MyAdvancedToken
[L829]   CALL        call _transfer~address~address~uint256_MyAdvancedToken__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, _to_s221, _value_s221);
[L987]               __var_2 := null;
[L988]   COND FALSE  !(!(_to_s522 != null))
[L992]   COND FALSE  !(!(balanceOf_TokenERC20[this][_from_s522] >= _value_s522))
[L996]   COND FALSE  !(!((balanceOf_TokenERC20[this][_to_s522] + _value_s522) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 >= balanceOf_TokenERC20[this][_to_s522]))
[L1000]  COND FALSE  !(!!frozenAccount_MyAdvancedToken[this][_from_s522])
[L1004]  COND FALSE  !(!!frozenAccount_MyAdvancedToken[this][_to_s522])
[L1008]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_TokenERC20[this][_from_s522];
[L1009]              balanceOf_TokenERC20[this][_from_s522] := (balanceOf_TokenERC20[this][_from_s522] - _value_s522) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1010]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_TokenERC20[this][_from_s522];
[L1011]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_TokenERC20[this][_to_s522];
[L1012]              balanceOf_TokenERC20[this][_to_s522] := (balanceOf_TokenERC20[this][_to_s522] + _value_s522) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1013]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_TokenERC20[this][_to_s522];
[L1014]              assert { :EventEmitted "Transfer_MyAdvancedToken" } true;
[L829]   RET         call _transfer~address~address~uint256_MyAdvancedToken__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, _to_s221, _value_s221);
[L830]   COND FALSE  !(revert)
[L841]               success_s221 := true;
[L113]   RET         call success_s221 := transfer~address~uint256_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, _to_s221, _value_s221);
[L114]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !((((((((((success_s221 == true && totalSupply_TokenERC20[this] == old(totalSupply_TokenERC20[this])) && balanceOf_TokenERC20[this] == old(balanceOf_TokenERC20[this])) && allowance_TokenERC20[this] == old(allowance_TokenERC20[this])) && sellPrice_MyAdvancedToken[this] == old(sellPrice_MyAdvancedToken[this])) && buyPrice_MyAdvancedToken[this] == old(buyPrice_MyAdvancedToken[this])) && frozenAccount_MyAdvancedToken[this] == old(frozenAccount_MyAdvancedToken[this])) && name_TokenERC20[this] == old(name_TokenERC20[this])) && symbol_TokenERC20[this] == old(symbol_TokenERC20[this])) && decimals_TokenERC20[this] == old(decimals_TokenERC20[this])) && owner_owned[this] == old(owner_owned[this]));
[L2]                 revert := revert_hold;
[L1913]  RET         call success_s221 := transfer~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, _to_s221, _value_s221);
[L1945]  RET         call CorralChoice_MyAdvancedToken(this);

Loop:
[L1945]        assume true;

[2020-11-24 15:47:56,577 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 15:47:56,578 INFO  L82        PathProgramCache]: Analyzing trace with hash 1322104158, now seen corresponding path program 1 times
[2020-11-24 15:47:56,578 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 15:47:56,611 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 15:47:56,776 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 15:47:56,776 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 15:47:56,776 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [11] imperfect sequences [] total 11
[2020-11-24 15:47:56,777 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 15:47:56,777 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 11 interpolants.
[2020-11-24 15:47:56,777 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=23, Invalid=87, Unknown=0, NotChecked=0, Total=110
[2020-11-24 15:47:56,777 INFO  L87              Difference]: Start difference. First operand 235 states and 248 transitions. cyclomatic complexity: 14 Second operand 11 states.
[2020-11-24 15:47:57,012 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 15:47:57,013 INFO  L93              Difference]: Finished difference Result 256 states and 268 transitions.
[2020-11-24 15:47:57,013 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 12 states. 
[2020-11-24 15:47:57,013 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 256 states and 268 transitions.
[2020-11-24 15:47:57,015 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 2
[2020-11-24 15:47:57,016 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 256 states to 223 states and 235 transitions.
[2020-11-24 15:47:57,016 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 223
[2020-11-24 15:47:57,016 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 223
[2020-11-24 15:47:57,016 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 223 states and 235 transitions.
[2020-11-24 15:47:57,016 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 15:47:57,017 INFO  L728         BuchiCegarLoop]: Abstraction has 223 states and 235 transitions.
[2020-11-24 15:47:57,017 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 223 states and 235 transitions.
[2020-11-24 15:47:57,019 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 223 to 216.
[2020-11-24 15:47:57,020 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 216 states.
[2020-11-24 15:47:57,020 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 216 states to 216 states and 228 transitions.
[2020-11-24 15:47:57,020 INFO  L751         BuchiCegarLoop]: Abstraction has 216 states and 228 transitions.
[2020-11-24 15:47:57,021 INFO  L631         BuchiCegarLoop]: Abstraction has 216 states and 228 transitions.
[2020-11-24 15:47:57,021 INFO  L445         BuchiCegarLoop]: ======== Iteration 5============
[2020-11-24 15:47:57,021 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 216 states and 228 transitions.
[2020-11-24 15:47:57,022 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 15:47:57,022 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 15:47:57,022 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 15:47:57,023 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 15:47:57,023 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L2]                 success_transfer_TokenERC200 := false;
[L2]                 call_transfer_TokenERC200 := false;
[L2]     CALL        call main();
[L1940]              assume null == 0;
[L1941]  CALL        call this := FreshRefGenerator__success();
[L747]               havoc newRef;
[L748]               assume Alloc[newRef] == false;
[L749]               Alloc[newRef] := true;
[L750]               assume newRef != null;
[L1941]  RET         call this := FreshRefGenerator__success();
[L1942]              assume now >= 0;
[L1943]              assume DType[this] == MyAdvancedToken;
[L1944]              assume !revert && gas >= 0;
[L1945]  CALL        call CorralChoice_MyAdvancedToken(this);
[L1833]              havoc msgsender_MSG;
[L1834]              havoc msgvalue_MSG;
[L1835]              havoc choice;
[L1836]              havoc __ret_0_owner;
[L1837]              havoc newOwner_s35;
[L1838]              havoc __ret_0_name;
[L1839]              havoc __ret_0_symbol;
[L1840]              havoc __ret_0_decimals;
[L1841]              havoc __ret_0_totalSupply;
[L1842]              havoc arg662_s0;
[L1843]              havoc __ret_0_balanceOf;
[L1844]              havoc arg663_s0;
[L1845]              havoc arg664_s0;
[L1846]              havoc __ret_0_allowance;
[L1847]              havoc initialSupply_s124;
[L1848]              havoc tokenName_s124;
[L1849]              havoc tokenSymbol_s124;
[L1850]              havoc _to_s221;
[L1851]              havoc _value_s221;
[L1852]              havoc success_s221;
[L1853]              havoc _from_s261;
[L1854]              havoc _to_s261;
[L1855]              havoc _value_s261;
[L1856]              havoc success_s261;
[L1857]              havoc _spender_s289;
[L1858]              havoc _value_s289;
[L1859]              havoc success_s289;
[L1860]              havoc _spender_s327;
[L1861]              havoc _value_s327;
[L1862]              havoc _extraData_s327;
[L1863]              havoc success_s327;
[L1864]              havoc _value_s363;
[L1865]              havoc success_s363;
[L1866]              havoc _from_s418;
[L1867]              havoc _value_s418;
[L1868]              havoc success_s418;
[L1869]              havoc __ret_0_sellPrice;
[L1870]              havoc __ret_0_buyPrice;
[L1871]              havoc arg665_s0;
[L1872]              havoc __ret_0_frozenAccount;
[L1873]              havoc initialSupply_s452;
[L1874]              havoc tokenName_s452;
[L1875]              havoc tokenSymbol_s452;
[L1876]              havoc target_s560;
[L1877]              havoc mintedAmount_s560;
[L1878]              havoc target_s581;
[L1879]              havoc freeze_s581;
[L1880]              havoc newSellPrice_s599;
[L1881]              havoc newBuyPrice_s599;
[L1882]              havoc amount_s659;
[L1883]              havoc tmpNow;
[L1884]              havoc gas;
[L1885]              assume gas > 4000000 && gas <= 8000000;
[L1886]              tmpNow := now;
[L1887]              havoc now;
[L1888]              assume now > tmpNow;
[L1889]              assume msgsender_MSG != null;
[L1890]  COND FALSE  !(choice == 6)
[L1896]  COND FALSE  !(choice == 5)
[L1902]  COND FALSE  !(choice == 4)
[L1908]  COND TRUE   choice == 3
[L1909]              gas := gas - 21000;
[L1910]  COND TRUE   gas >= 0
[L1911]              assume _value_s221 >= 0 && _value_s221 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1912]              assume msgvalue_MSG == 0;
[L1913]  CALL        call success_s221 := transfer~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, _to_s221, _value_s221);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == _to_s221 && _value_s221 <= balanceOf_TokenERC20[this][msgsender_MSG]) && _value_s221 >= 0) && _value_s221 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_TokenERC20[this][_to_s221] >= 0) && balanceOf_TokenERC20[this][_to_s221] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_TokenERC20[this][msgsender_MSG] >= 0) && balanceOf_TokenERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_TokenERC200 := true;
[L2]                 call_transfer_TokenERC200 := false;
[L2]                 revert := revert_hold;
[L84]                havoc __exception;
[L85]                revert := false;
[L86]    COND FALSE  !(__exception)
[L113]   CALL        call success_s221 := transfer~address~uint256_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, _to_s221, _value_s221);
[L828]   COND FALSE  !(DType[this] == MyAdvancedToken)
[L833]   COND TRUE   DType[this] == TokenERC20
[L834]   CALL        call _transfer~address~address~uint256_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, _to_s221, _value_s221);
[L783]               __var_1 := null;
[L784]   COND FALSE  !(!(_to_s202 != null))
[L788]   COND FALSE  !(!(balanceOf_TokenERC20[this][_from_s202] >= _value_s202))
[L792]   COND FALSE  !(!((balanceOf_TokenERC20[this][_to_s202] + _value_s202) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 > balanceOf_TokenERC20[this][_to_s202]))
[L796]               previousBalances_s202 := (balanceOf_TokenERC20[this][_from_s202] + balanceOf_TokenERC20[this][_to_s202]) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L797]               sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_TokenERC20[this][_from_s202];
[L798]               balanceOf_TokenERC20[this][_from_s202] := (balanceOf_TokenERC20[this][_from_s202] - _value_s202) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L799]               sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_TokenERC20[this][_from_s202];
[L800]               sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_TokenERC20[this][_to_s202];
[L801]               balanceOf_TokenERC20[this][_to_s202] := (balanceOf_TokenERC20[this][_to_s202] + _value_s202) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L802]               sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_TokenERC20[this][_to_s202];
[L803]               assert { :EventEmitted "Transfer_TokenERC20" } true;
[L804]               assert (balanceOf_TokenERC20[this][_from_s202] + balanceOf_TokenERC20[this][_to_s202]) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 == previousBalances_s202;
[L834]   RET         call _transfer~address~address~uint256_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, _to_s221, _value_s221);
[L835]   COND FALSE  !(revert)
[L841]               success_s221 := true;
[L113]   RET         call success_s221 := transfer~address~uint256_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, _to_s221, _value_s221);
[L114]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !((((((((((success_s221 == true && totalSupply_TokenERC20[this] == old(totalSupply_TokenERC20[this])) && balanceOf_TokenERC20[this] == old(balanceOf_TokenERC20[this])) && allowance_TokenERC20[this] == old(allowance_TokenERC20[this])) && sellPrice_MyAdvancedToken[this] == old(sellPrice_MyAdvancedToken[this])) && buyPrice_MyAdvancedToken[this] == old(buyPrice_MyAdvancedToken[this])) && frozenAccount_MyAdvancedToken[this] == old(frozenAccount_MyAdvancedToken[this])) && name_TokenERC20[this] == old(name_TokenERC20[this])) && symbol_TokenERC20[this] == old(symbol_TokenERC20[this])) && decimals_TokenERC20[this] == old(decimals_TokenERC20[this])) && owner_owned[this] == old(owner_owned[this]));
[L2]                 revert := revert_hold;
[L1913]  RET         call success_s221 := transfer~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, _to_s221, _value_s221);
[L1945]  RET         call CorralChoice_MyAdvancedToken(this);

Loop:
[L1945]        assume true;

[2020-11-24 15:47:57,025 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 15:47:57,025 INFO  L82        PathProgramCache]: Analyzing trace with hash 339466308, now seen corresponding path program 1 times
[2020-11-24 15:47:57,026 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 15:47:57,033 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 15:47:57,059 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 15:47:57,059 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 15:47:57,059 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [6] imperfect sequences [] total 6
[2020-11-24 15:47:57,060 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 15:47:57,060 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 6 interpolants.
[2020-11-24 15:47:57,061 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=9, Invalid=21, Unknown=0, NotChecked=0, Total=30
[2020-11-24 15:47:57,061 INFO  L87              Difference]: Start difference. First operand 216 states and 228 transitions. cyclomatic complexity: 13 Second operand 6 states.
[2020-11-24 15:47:57,074 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 15:47:57,074 INFO  L93              Difference]: Finished difference Result 221 states and 232 transitions.
[2020-11-24 15:47:57,074 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 6 states. 
[2020-11-24 15:47:57,074 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 221 states and 232 transitions.
[2020-11-24 15:47:57,076 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 15:47:57,077 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 221 states to 184 states and 195 transitions.
[2020-11-24 15:47:57,077 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 184
[2020-11-24 15:47:57,077 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 184
[2020-11-24 15:47:57,077 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 184 states and 195 transitions.
[2020-11-24 15:47:57,077 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 15:47:57,077 INFO  L728         BuchiCegarLoop]: Abstraction has 184 states and 195 transitions.
[2020-11-24 15:47:57,078 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 184 states and 195 transitions.
[2020-11-24 15:47:57,080 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 184 to 184.
[2020-11-24 15:47:57,080 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 184 states.
[2020-11-24 15:47:57,080 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 184 states to 184 states and 195 transitions.
[2020-11-24 15:47:57,081 INFO  L751         BuchiCegarLoop]: Abstraction has 184 states and 195 transitions.
[2020-11-24 15:47:57,081 INFO  L631         BuchiCegarLoop]: Abstraction has 184 states and 195 transitions.
[2020-11-24 15:47:57,081 INFO  L445         BuchiCegarLoop]: ======== Iteration 6============
[2020-11-24 15:47:57,081 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 184 states and 195 transitions.
[2020-11-24 15:47:57,082 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 15:47:57,082 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 15:47:57,082 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 15:47:57,083 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 15:47:57,083 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L2]                 success_transfer_TokenERC200 := false;
[L2]                 call_transfer_TokenERC200 := false;
[L2]     CALL        call main();
[L1940]              assume null == 0;
[L1941]  CALL        call this := FreshRefGenerator__success();
[L747]               havoc newRef;
[L748]               assume Alloc[newRef] == false;
[L749]               Alloc[newRef] := true;
[L750]               assume newRef != null;
[L1941]  RET         call this := FreshRefGenerator__success();
[L1942]              assume now >= 0;
[L1943]              assume DType[this] == MyAdvancedToken;
[L1944]              assume !revert && gas >= 0;
[L1945]  CALL        call CorralChoice_MyAdvancedToken(this);
[L1833]              havoc msgsender_MSG;
[L1834]              havoc msgvalue_MSG;
[L1835]              havoc choice;
[L1836]              havoc __ret_0_owner;
[L1837]              havoc newOwner_s35;
[L1838]              havoc __ret_0_name;
[L1839]              havoc __ret_0_symbol;
[L1840]              havoc __ret_0_decimals;
[L1841]              havoc __ret_0_totalSupply;
[L1842]              havoc arg662_s0;
[L1843]              havoc __ret_0_balanceOf;
[L1844]              havoc arg663_s0;
[L1845]              havoc arg664_s0;
[L1846]              havoc __ret_0_allowance;
[L1847]              havoc initialSupply_s124;
[L1848]              havoc tokenName_s124;
[L1849]              havoc tokenSymbol_s124;
[L1850]              havoc _to_s221;
[L1851]              havoc _value_s221;
[L1852]              havoc success_s221;
[L1853]              havoc _from_s261;
[L1854]              havoc _to_s261;
[L1855]              havoc _value_s261;
[L1856]              havoc success_s261;
[L1857]              havoc _spender_s289;
[L1858]              havoc _value_s289;
[L1859]              havoc success_s289;
[L1860]              havoc _spender_s327;
[L1861]              havoc _value_s327;
[L1862]              havoc _extraData_s327;
[L1863]              havoc success_s327;
[L1864]              havoc _value_s363;
[L1865]              havoc success_s363;
[L1866]              havoc _from_s418;
[L1867]              havoc _value_s418;
[L1868]              havoc success_s418;
[L1869]              havoc __ret_0_sellPrice;
[L1870]              havoc __ret_0_buyPrice;
[L1871]              havoc arg665_s0;
[L1872]              havoc __ret_0_frozenAccount;
[L1873]              havoc initialSupply_s452;
[L1874]              havoc tokenName_s452;
[L1875]              havoc tokenSymbol_s452;
[L1876]              havoc target_s560;
[L1877]              havoc mintedAmount_s560;
[L1878]              havoc target_s581;
[L1879]              havoc freeze_s581;
[L1880]              havoc newSellPrice_s599;
[L1881]              havoc newBuyPrice_s599;
[L1882]              havoc amount_s659;
[L1883]              havoc tmpNow;
[L1884]              havoc gas;
[L1885]              assume gas > 4000000 && gas <= 8000000;
[L1886]              tmpNow := now;
[L1887]              havoc now;
[L1888]              assume now > tmpNow;
[L1889]              assume msgsender_MSG != null;
[L1890]  COND FALSE  !(choice == 6)
[L1896]  COND FALSE  !(choice == 5)
[L1902]  COND FALSE  !(choice == 4)
[L1908]  COND TRUE   choice == 3
[L1909]              gas := gas - 21000;
[L1910]  COND TRUE   gas >= 0
[L1911]              assume _value_s221 >= 0 && _value_s221 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1912]              assume msgvalue_MSG == 0;
[L1913]  CALL        call success_s221 := transfer~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, _to_s221, _value_s221);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == _to_s221 && _value_s221 <= balanceOf_TokenERC20[this][msgsender_MSG]) && _value_s221 >= 0) && _value_s221 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_TokenERC20[this][_to_s221] >= 0) && balanceOf_TokenERC20[this][_to_s221] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_TokenERC20[this][msgsender_MSG] >= 0) && balanceOf_TokenERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_TokenERC200 := true;
[L2]                 call_transfer_TokenERC200 := false;
[L2]                 revert := revert_hold;
[L84]                havoc __exception;
[L85]                revert := false;
[L86]    COND TRUE   __exception
[L87]                __tmp__Balance := Balance;
[L88]                __tmp__DType := DType;
[L89]                __tmp__Alloc := Alloc;
[L90]                __tmp__balance_ADDR := balance_ADDR;
[L91]                __tmp__M_Ref_int := M_Ref_int;
[L92]                __tmp__sum_balanceOf0 := sum_balanceOf0;
[L93]                __tmp__alloc_allowance_TokenERC20_lvl0 := alloc_allowance_TokenERC20_lvl0;
[L94]                __tmp__M_Ref_Ref := M_Ref_Ref;
[L95]                __tmp__sum_allowance1 := sum_allowance1;
[L96]                __tmp__M_Ref_bool := M_Ref_bool;
[L97]                __tmp__sum_frozenAccount2 := sum_frozenAccount2;
[L98]                __tmp__Length := Length;
[L99]                __tmp__now := now;
[L100]               __tmp__owner_owned := owner_owned;
[L101]               __tmp__name_TokenERC20 := name_TokenERC20;
[L102]               __tmp__symbol_TokenERC20 := symbol_TokenERC20;
[L103]               __tmp__decimals_TokenERC20 := decimals_TokenERC20;
[L104]               __tmp__totalSupply_TokenERC20 := totalSupply_TokenERC20;
[L105]               __tmp__balanceOf_TokenERC20 := balanceOf_TokenERC20;
[L106]               __tmp__allowance_TokenERC20 := allowance_TokenERC20;
[L107]               __tmp__sellPrice_MyAdvancedToken := sellPrice_MyAdvancedToken;
[L108]               __tmp__buyPrice_MyAdvancedToken := buyPrice_MyAdvancedToken;
[L109]               __tmp__frozenAccount_MyAdvancedToken := frozenAccount_MyAdvancedToken;
[L110]   CALL        call success_s221 := transfer~address~uint256_TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, _to_s221, _value_s221);
[L809]   COND TRUE   __tmp__DType[this] == MyAdvancedToken
[L810]   CALL        call _transfer~address~address~uint256_MyAdvancedToken__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, _to_s221, _value_s221);
[L955]               __var_2 := null;
[L956]   COND TRUE   !(_to_s522 != null)
[L957]               revert := true;
[L810]   RET         call _transfer~address~address~uint256_MyAdvancedToken__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, _to_s221, _value_s221);
[L811]   COND TRUE   revert
[L110]   RET         call success_s221 := transfer~address~uint256_TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, _to_s221, _value_s221);
[L111]               assume revert || gas < 0;
[L1913]  RET         call success_s221 := transfer~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, _to_s221, _value_s221);
[L1945]  RET         call CorralChoice_MyAdvancedToken(this);

Loop:
[L1945]        assume true;

[2020-11-24 15:47:57,085 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 15:47:57,085 INFO  L82        PathProgramCache]: Analyzing trace with hash -1296836856, now seen corresponding path program 1 times
[2020-11-24 15:47:57,086 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 15:47:57,094 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 15:47:57,129 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 15:47:57,130 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 15:47:57,130 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [7] imperfect sequences [] total 7
[2020-11-24 15:47:57,130 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 15:47:57,130 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 7 interpolants.
[2020-11-24 15:47:57,130 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=11, Invalid=31, Unknown=0, NotChecked=0, Total=42
[2020-11-24 15:47:57,131 INFO  L87              Difference]: Start difference. First operand 184 states and 195 transitions. cyclomatic complexity: 12 Second operand 7 states.
[2020-11-24 15:47:57,144 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 15:47:57,144 INFO  L93              Difference]: Finished difference Result 194 states and 204 transitions.
[2020-11-24 15:47:57,145 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 7 states. 
[2020-11-24 15:47:57,145 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 194 states and 204 transitions.
[2020-11-24 15:47:57,146 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 15:47:57,147 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 194 states to 183 states and 193 transitions.
[2020-11-24 15:47:57,147 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 183
[2020-11-24 15:47:57,147 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 183
[2020-11-24 15:47:57,147 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 183 states and 193 transitions.
[2020-11-24 15:47:57,148 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 15:47:57,148 INFO  L728         BuchiCegarLoop]: Abstraction has 183 states and 193 transitions.
[2020-11-24 15:47:57,148 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 183 states and 193 transitions.
[2020-11-24 15:47:57,150 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 183 to 183.
[2020-11-24 15:47:57,150 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 183 states.
[2020-11-24 15:47:57,151 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 183 states to 183 states and 193 transitions.
[2020-11-24 15:47:57,151 INFO  L751         BuchiCegarLoop]: Abstraction has 183 states and 193 transitions.
[2020-11-24 15:47:57,151 INFO  L631         BuchiCegarLoop]: Abstraction has 183 states and 193 transitions.
[2020-11-24 15:47:57,151 INFO  L445         BuchiCegarLoop]: ======== Iteration 7============
[2020-11-24 15:47:57,151 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 183 states and 193 transitions.
[2020-11-24 15:47:57,152 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 15:47:57,152 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 15:47:57,152 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 15:47:57,153 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 15:47:57,153 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L2]                 success_transfer_TokenERC200 := false;
[L2]                 call_transfer_TokenERC200 := false;
[L2]     CALL        call main();
[L1940]              assume null == 0;
[L1941]  CALL        call this := FreshRefGenerator__success();
[L747]               havoc newRef;
[L748]               assume Alloc[newRef] == false;
[L749]               Alloc[newRef] := true;
[L750]               assume newRef != null;
[L1941]  RET         call this := FreshRefGenerator__success();
[L1942]              assume now >= 0;
[L1943]              assume DType[this] == MyAdvancedToken;
[L1944]              assume !revert && gas >= 0;
[L1945]  CALL        call CorralChoice_MyAdvancedToken(this);
[L1833]              havoc msgsender_MSG;
[L1834]              havoc msgvalue_MSG;
[L1835]              havoc choice;
[L1836]              havoc __ret_0_owner;
[L1837]              havoc newOwner_s35;
[L1838]              havoc __ret_0_name;
[L1839]              havoc __ret_0_symbol;
[L1840]              havoc __ret_0_decimals;
[L1841]              havoc __ret_0_totalSupply;
[L1842]              havoc arg662_s0;
[L1843]              havoc __ret_0_balanceOf;
[L1844]              havoc arg663_s0;
[L1845]              havoc arg664_s0;
[L1846]              havoc __ret_0_allowance;
[L1847]              havoc initialSupply_s124;
[L1848]              havoc tokenName_s124;
[L1849]              havoc tokenSymbol_s124;
[L1850]              havoc _to_s221;
[L1851]              havoc _value_s221;
[L1852]              havoc success_s221;
[L1853]              havoc _from_s261;
[L1854]              havoc _to_s261;
[L1855]              havoc _value_s261;
[L1856]              havoc success_s261;
[L1857]              havoc _spender_s289;
[L1858]              havoc _value_s289;
[L1859]              havoc success_s289;
[L1860]              havoc _spender_s327;
[L1861]              havoc _value_s327;
[L1862]              havoc _extraData_s327;
[L1863]              havoc success_s327;
[L1864]              havoc _value_s363;
[L1865]              havoc success_s363;
[L1866]              havoc _from_s418;
[L1867]              havoc _value_s418;
[L1868]              havoc success_s418;
[L1869]              havoc __ret_0_sellPrice;
[L1870]              havoc __ret_0_buyPrice;
[L1871]              havoc arg665_s0;
[L1872]              havoc __ret_0_frozenAccount;
[L1873]              havoc initialSupply_s452;
[L1874]              havoc tokenName_s452;
[L1875]              havoc tokenSymbol_s452;
[L1876]              havoc target_s560;
[L1877]              havoc mintedAmount_s560;
[L1878]              havoc target_s581;
[L1879]              havoc freeze_s581;
[L1880]              havoc newSellPrice_s599;
[L1881]              havoc newBuyPrice_s599;
[L1882]              havoc amount_s659;
[L1883]              havoc tmpNow;
[L1884]              havoc gas;
[L1885]              assume gas > 4000000 && gas <= 8000000;
[L1886]              tmpNow := now;
[L1887]              havoc now;
[L1888]              assume now > tmpNow;
[L1889]              assume msgsender_MSG != null;
[L1890]  COND FALSE  !(choice == 6)
[L1896]  COND FALSE  !(choice == 5)
[L1902]  COND FALSE  !(choice == 4)
[L1908]  COND TRUE   choice == 3
[L1909]              gas := gas - 21000;
[L1910]  COND TRUE   gas >= 0
[L1911]              assume _value_s221 >= 0 && _value_s221 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1912]              assume msgvalue_MSG == 0;
[L1913]  CALL        call success_s221 := transfer~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, _to_s221, _value_s221);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == _to_s221 && _value_s221 <= balanceOf_TokenERC20[this][msgsender_MSG]) && _value_s221 >= 0) && _value_s221 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_TokenERC20[this][_to_s221] >= 0) && balanceOf_TokenERC20[this][_to_s221] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_TokenERC20[this][msgsender_MSG] >= 0) && balanceOf_TokenERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_TokenERC200 := true;
[L2]                 call_transfer_TokenERC200 := false;
[L2]                 revert := revert_hold;
[L84]                havoc __exception;
[L85]                revert := false;
[L86]    COND TRUE   __exception
[L87]                __tmp__Balance := Balance;
[L88]                __tmp__DType := DType;
[L89]                __tmp__Alloc := Alloc;
[L90]                __tmp__balance_ADDR := balance_ADDR;
[L91]                __tmp__M_Ref_int := M_Ref_int;
[L92]                __tmp__sum_balanceOf0 := sum_balanceOf0;
[L93]                __tmp__alloc_allowance_TokenERC20_lvl0 := alloc_allowance_TokenERC20_lvl0;
[L94]                __tmp__M_Ref_Ref := M_Ref_Ref;
[L95]                __tmp__sum_allowance1 := sum_allowance1;
[L96]                __tmp__M_Ref_bool := M_Ref_bool;
[L97]                __tmp__sum_frozenAccount2 := sum_frozenAccount2;
[L98]                __tmp__Length := Length;
[L99]                __tmp__now := now;
[L100]               __tmp__owner_owned := owner_owned;
[L101]               __tmp__name_TokenERC20 := name_TokenERC20;
[L102]               __tmp__symbol_TokenERC20 := symbol_TokenERC20;
[L103]               __tmp__decimals_TokenERC20 := decimals_TokenERC20;
[L104]               __tmp__totalSupply_TokenERC20 := totalSupply_TokenERC20;
[L105]               __tmp__balanceOf_TokenERC20 := balanceOf_TokenERC20;
[L106]               __tmp__allowance_TokenERC20 := allowance_TokenERC20;
[L107]               __tmp__sellPrice_MyAdvancedToken := sellPrice_MyAdvancedToken;
[L108]               __tmp__buyPrice_MyAdvancedToken := buyPrice_MyAdvancedToken;
[L109]               __tmp__frozenAccount_MyAdvancedToken := frozenAccount_MyAdvancedToken;
[L110]   CALL        call success_s221 := transfer~address~uint256_TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, _to_s221, _value_s221);
[L809]   COND TRUE   __tmp__DType[this] == MyAdvancedToken
[L810]   CALL        call _transfer~address~address~uint256_MyAdvancedToken__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, _to_s221, _value_s221);
[L955]               __var_2 := null;
[L956]   COND FALSE  !(!(_to_s522 != null))
[L960]   COND TRUE   !(__tmp__balanceOf_TokenERC20[this][_from_s522] >= _value_s522)
[L961]               revert := true;
[L810]   RET         call _transfer~address~address~uint256_MyAdvancedToken__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, _to_s221, _value_s221);
[L811]   COND TRUE   revert
[L110]   RET         call success_s221 := transfer~address~uint256_TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, _to_s221, _value_s221);
[L111]               assume revert || gas < 0;
[L1913]  RET         call success_s221 := transfer~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, _to_s221, _value_s221);
[L1945]  RET         call CorralChoice_MyAdvancedToken(this);

Loop:
[L1945]        assume true;

[2020-11-24 15:47:57,155 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 15:47:57,156 INFO  L82        PathProgramCache]: Analyzing trace with hash -1189003836, now seen corresponding path program 1 times
[2020-11-24 15:47:57,156 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 15:47:57,165 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 15:47:57,211 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 15:47:57,212 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 15:47:57,212 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [7] imperfect sequences [] total 7
[2020-11-24 15:47:57,212 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 15:47:57,212 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 7 interpolants.
[2020-11-24 15:47:57,213 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=11, Invalid=31, Unknown=0, NotChecked=0, Total=42
[2020-11-24 15:47:57,213 INFO  L87              Difference]: Start difference. First operand 183 states and 193 transitions. cyclomatic complexity: 11 Second operand 7 states.
[2020-11-24 15:47:57,269 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 15:47:57,269 INFO  L93              Difference]: Finished difference Result 195 states and 204 transitions.
[2020-11-24 15:47:57,269 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 8 states. 
[2020-11-24 15:47:57,270 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 195 states and 204 transitions.
[2020-11-24 15:47:57,271 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 15:47:57,272 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 195 states to 188 states and 197 transitions.
[2020-11-24 15:47:57,272 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 188
[2020-11-24 15:47:57,272 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 188
[2020-11-24 15:47:57,272 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 188 states and 197 transitions.
[2020-11-24 15:47:57,273 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 15:47:57,273 INFO  L728         BuchiCegarLoop]: Abstraction has 188 states and 197 transitions.
[2020-11-24 15:47:57,273 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 188 states and 197 transitions.
[2020-11-24 15:47:57,275 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 188 to 182.
[2020-11-24 15:47:57,275 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 182 states.
[2020-11-24 15:47:57,275 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 182 states to 182 states and 191 transitions.
[2020-11-24 15:47:57,275 INFO  L751         BuchiCegarLoop]: Abstraction has 182 states and 191 transitions.
[2020-11-24 15:47:57,275 INFO  L631         BuchiCegarLoop]: Abstraction has 182 states and 191 transitions.
[2020-11-24 15:47:57,275 INFO  L445         BuchiCegarLoop]: ======== Iteration 8============
[2020-11-24 15:47:57,275 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 182 states and 191 transitions.
[2020-11-24 15:47:57,276 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 15:47:57,276 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 15:47:57,276 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 15:47:57,277 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 15:47:57,277 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L2]                 success_transfer_TokenERC200 := false;
[L2]                 call_transfer_TokenERC200 := false;
[L2]     CALL        call main();
[L1940]              assume null == 0;
[L1941]  CALL        call this := FreshRefGenerator__success();
[L747]               havoc newRef;
[L748]               assume Alloc[newRef] == false;
[L749]               Alloc[newRef] := true;
[L750]               assume newRef != null;
[L1941]  RET         call this := FreshRefGenerator__success();
[L1942]              assume now >= 0;
[L1943]              assume DType[this] == MyAdvancedToken;
[L1944]              assume !revert && gas >= 0;
[L1945]  CALL        call CorralChoice_MyAdvancedToken(this);
[L1833]              havoc msgsender_MSG;
[L1834]              havoc msgvalue_MSG;
[L1835]              havoc choice;
[L1836]              havoc __ret_0_owner;
[L1837]              havoc newOwner_s35;
[L1838]              havoc __ret_0_name;
[L1839]              havoc __ret_0_symbol;
[L1840]              havoc __ret_0_decimals;
[L1841]              havoc __ret_0_totalSupply;
[L1842]              havoc arg662_s0;
[L1843]              havoc __ret_0_balanceOf;
[L1844]              havoc arg663_s0;
[L1845]              havoc arg664_s0;
[L1846]              havoc __ret_0_allowance;
[L1847]              havoc initialSupply_s124;
[L1848]              havoc tokenName_s124;
[L1849]              havoc tokenSymbol_s124;
[L1850]              havoc _to_s221;
[L1851]              havoc _value_s221;
[L1852]              havoc success_s221;
[L1853]              havoc _from_s261;
[L1854]              havoc _to_s261;
[L1855]              havoc _value_s261;
[L1856]              havoc success_s261;
[L1857]              havoc _spender_s289;
[L1858]              havoc _value_s289;
[L1859]              havoc success_s289;
[L1860]              havoc _spender_s327;
[L1861]              havoc _value_s327;
[L1862]              havoc _extraData_s327;
[L1863]              havoc success_s327;
[L1864]              havoc _value_s363;
[L1865]              havoc success_s363;
[L1866]              havoc _from_s418;
[L1867]              havoc _value_s418;
[L1868]              havoc success_s418;
[L1869]              havoc __ret_0_sellPrice;
[L1870]              havoc __ret_0_buyPrice;
[L1871]              havoc arg665_s0;
[L1872]              havoc __ret_0_frozenAccount;
[L1873]              havoc initialSupply_s452;
[L1874]              havoc tokenName_s452;
[L1875]              havoc tokenSymbol_s452;
[L1876]              havoc target_s560;
[L1877]              havoc mintedAmount_s560;
[L1878]              havoc target_s581;
[L1879]              havoc freeze_s581;
[L1880]              havoc newSellPrice_s599;
[L1881]              havoc newBuyPrice_s599;
[L1882]              havoc amount_s659;
[L1883]              havoc tmpNow;
[L1884]              havoc gas;
[L1885]              assume gas > 4000000 && gas <= 8000000;
[L1886]              tmpNow := now;
[L1887]              havoc now;
[L1888]              assume now > tmpNow;
[L1889]              assume msgsender_MSG != null;
[L1890]  COND FALSE  !(choice == 6)
[L1896]  COND FALSE  !(choice == 5)
[L1902]  COND FALSE  !(choice == 4)
[L1908]  COND TRUE   choice == 3
[L1909]              gas := gas - 21000;
[L1910]  COND TRUE   gas >= 0
[L1911]              assume _value_s221 >= 0 && _value_s221 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1912]              assume msgvalue_MSG == 0;
[L1913]  CALL        call success_s221 := transfer~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, _to_s221, _value_s221);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == _to_s221 && _value_s221 <= balanceOf_TokenERC20[this][msgsender_MSG]) && _value_s221 >= 0) && _value_s221 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_TokenERC20[this][_to_s221] >= 0) && balanceOf_TokenERC20[this][_to_s221] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_TokenERC20[this][msgsender_MSG] >= 0) && balanceOf_TokenERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_TokenERC200 := true;
[L2]                 call_transfer_TokenERC200 := false;
[L2]                 revert := revert_hold;
[L84]                havoc __exception;
[L85]                revert := false;
[L86]    COND TRUE   __exception
[L87]                __tmp__Balance := Balance;
[L88]                __tmp__DType := DType;
[L89]                __tmp__Alloc := Alloc;
[L90]                __tmp__balance_ADDR := balance_ADDR;
[L91]                __tmp__M_Ref_int := M_Ref_int;
[L92]                __tmp__sum_balanceOf0 := sum_balanceOf0;
[L93]                __tmp__alloc_allowance_TokenERC20_lvl0 := alloc_allowance_TokenERC20_lvl0;
[L94]                __tmp__M_Ref_Ref := M_Ref_Ref;
[L95]                __tmp__sum_allowance1 := sum_allowance1;
[L96]                __tmp__M_Ref_bool := M_Ref_bool;
[L97]                __tmp__sum_frozenAccount2 := sum_frozenAccount2;
[L98]                __tmp__Length := Length;
[L99]                __tmp__now := now;
[L100]               __tmp__owner_owned := owner_owned;
[L101]               __tmp__name_TokenERC20 := name_TokenERC20;
[L102]               __tmp__symbol_TokenERC20 := symbol_TokenERC20;
[L103]               __tmp__decimals_TokenERC20 := decimals_TokenERC20;
[L104]               __tmp__totalSupply_TokenERC20 := totalSupply_TokenERC20;
[L105]               __tmp__balanceOf_TokenERC20 := balanceOf_TokenERC20;
[L106]               __tmp__allowance_TokenERC20 := allowance_TokenERC20;
[L107]               __tmp__sellPrice_MyAdvancedToken := sellPrice_MyAdvancedToken;
[L108]               __tmp__buyPrice_MyAdvancedToken := buyPrice_MyAdvancedToken;
[L109]               __tmp__frozenAccount_MyAdvancedToken := frozenAccount_MyAdvancedToken;
[L110]   CALL        call success_s221 := transfer~address~uint256_TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, _to_s221, _value_s221);
[L809]   COND FALSE  !(__tmp__DType[this] == MyAdvancedToken)
[L814]   COND TRUE   __tmp__DType[this] == TokenERC20
[L815]   CALL        call _transfer~address~address~uint256_TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, _to_s221, _value_s221);
[L757]               __var_1 := null;
[L758]   COND TRUE   !(_to_s202 != null)
[L759]               revert := true;
[L815]   RET         call _transfer~address~address~uint256_TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, _to_s221, _value_s221);
[L816]   COND TRUE   revert
[L110]   RET         call success_s221 := transfer~address~uint256_TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, _to_s221, _value_s221);
[L111]               assume revert || gas < 0;
[L1913]  RET         call success_s221 := transfer~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, _to_s221, _value_s221);
[L1945]  RET         call CorralChoice_MyAdvancedToken(this);

Loop:
[L1945]        assume true;

[2020-11-24 15:47:57,279 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 15:47:57,279 INFO  L82        PathProgramCache]: Analyzing trace with hash -1672077449, now seen corresponding path program 1 times
[2020-11-24 15:47:57,279 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 15:47:57,285 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 15:47:57,306 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 15:47:57,306 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 15:47:57,306 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [7] imperfect sequences [] total 7
[2020-11-24 15:47:57,307 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 15:47:57,307 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 7 interpolants.
[2020-11-24 15:47:57,307 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=11, Invalid=31, Unknown=0, NotChecked=0, Total=42
[2020-11-24 15:47:57,307 INFO  L87              Difference]: Start difference. First operand 182 states and 191 transitions. cyclomatic complexity: 10 Second operand 7 states.
[2020-11-24 15:47:57,317 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 15:47:57,317 INFO  L93              Difference]: Finished difference Result 192 states and 200 transitions.
[2020-11-24 15:47:57,317 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 7 states. 
[2020-11-24 15:47:57,317 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 192 states and 200 transitions.
[2020-11-24 15:47:57,318 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 15:47:57,319 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 192 states to 181 states and 189 transitions.
[2020-11-24 15:47:57,319 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 181
[2020-11-24 15:47:57,319 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 181
[2020-11-24 15:47:57,319 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 181 states and 189 transitions.
[2020-11-24 15:47:57,319 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 15:47:57,319 INFO  L728         BuchiCegarLoop]: Abstraction has 181 states and 189 transitions.
[2020-11-24 15:47:57,320 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 181 states and 189 transitions.
[2020-11-24 15:47:57,321 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 181 to 181.
[2020-11-24 15:47:57,321 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 181 states.
[2020-11-24 15:47:57,322 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 181 states to 181 states and 189 transitions.
[2020-11-24 15:47:57,322 INFO  L751         BuchiCegarLoop]: Abstraction has 181 states and 189 transitions.
[2020-11-24 15:47:57,322 INFO  L631         BuchiCegarLoop]: Abstraction has 181 states and 189 transitions.
[2020-11-24 15:47:57,322 INFO  L445         BuchiCegarLoop]: ======== Iteration 9============
[2020-11-24 15:47:57,322 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 181 states and 189 transitions.
[2020-11-24 15:47:57,322 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 15:47:57,323 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 15:47:57,323 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 15:47:57,323 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 15:47:57,323 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L2]                 success_transfer_TokenERC200 := false;
[L2]                 call_transfer_TokenERC200 := false;
[L2]     CALL        call main();
[L1940]              assume null == 0;
[L1941]  CALL        call this := FreshRefGenerator__success();
[L747]               havoc newRef;
[L748]               assume Alloc[newRef] == false;
[L749]               Alloc[newRef] := true;
[L750]               assume newRef != null;
[L1941]  RET         call this := FreshRefGenerator__success();
[L1942]              assume now >= 0;
[L1943]              assume DType[this] == MyAdvancedToken;
[L1944]              assume !revert && gas >= 0;
[L1945]  CALL        call CorralChoice_MyAdvancedToken(this);
[L1833]              havoc msgsender_MSG;
[L1834]              havoc msgvalue_MSG;
[L1835]              havoc choice;
[L1836]              havoc __ret_0_owner;
[L1837]              havoc newOwner_s35;
[L1838]              havoc __ret_0_name;
[L1839]              havoc __ret_0_symbol;
[L1840]              havoc __ret_0_decimals;
[L1841]              havoc __ret_0_totalSupply;
[L1842]              havoc arg662_s0;
[L1843]              havoc __ret_0_balanceOf;
[L1844]              havoc arg663_s0;
[L1845]              havoc arg664_s0;
[L1846]              havoc __ret_0_allowance;
[L1847]              havoc initialSupply_s124;
[L1848]              havoc tokenName_s124;
[L1849]              havoc tokenSymbol_s124;
[L1850]              havoc _to_s221;
[L1851]              havoc _value_s221;
[L1852]              havoc success_s221;
[L1853]              havoc _from_s261;
[L1854]              havoc _to_s261;
[L1855]              havoc _value_s261;
[L1856]              havoc success_s261;
[L1857]              havoc _spender_s289;
[L1858]              havoc _value_s289;
[L1859]              havoc success_s289;
[L1860]              havoc _spender_s327;
[L1861]              havoc _value_s327;
[L1862]              havoc _extraData_s327;
[L1863]              havoc success_s327;
[L1864]              havoc _value_s363;
[L1865]              havoc success_s363;
[L1866]              havoc _from_s418;
[L1867]              havoc _value_s418;
[L1868]              havoc success_s418;
[L1869]              havoc __ret_0_sellPrice;
[L1870]              havoc __ret_0_buyPrice;
[L1871]              havoc arg665_s0;
[L1872]              havoc __ret_0_frozenAccount;
[L1873]              havoc initialSupply_s452;
[L1874]              havoc tokenName_s452;
[L1875]              havoc tokenSymbol_s452;
[L1876]              havoc target_s560;
[L1877]              havoc mintedAmount_s560;
[L1878]              havoc target_s581;
[L1879]              havoc freeze_s581;
[L1880]              havoc newSellPrice_s599;
[L1881]              havoc newBuyPrice_s599;
[L1882]              havoc amount_s659;
[L1883]              havoc tmpNow;
[L1884]              havoc gas;
[L1885]              assume gas > 4000000 && gas <= 8000000;
[L1886]              tmpNow := now;
[L1887]              havoc now;
[L1888]              assume now > tmpNow;
[L1889]              assume msgsender_MSG != null;
[L1890]  COND FALSE  !(choice == 6)
[L1896]  COND FALSE  !(choice == 5)
[L1902]  COND FALSE  !(choice == 4)
[L1908]  COND TRUE   choice == 3
[L1909]              gas := gas - 21000;
[L1910]  COND TRUE   gas >= 0
[L1911]              assume _value_s221 >= 0 && _value_s221 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1912]              assume msgvalue_MSG == 0;
[L1913]  CALL        call success_s221 := transfer~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, _to_s221, _value_s221);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == _to_s221 && _value_s221 <= balanceOf_TokenERC20[this][msgsender_MSG]) && _value_s221 >= 0) && _value_s221 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_TokenERC20[this][_to_s221] >= 0) && balanceOf_TokenERC20[this][_to_s221] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_TokenERC20[this][msgsender_MSG] >= 0) && balanceOf_TokenERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_TokenERC200 := true;
[L2]                 call_transfer_TokenERC200 := false;
[L2]                 revert := revert_hold;
[L84]                havoc __exception;
[L85]                revert := false;
[L86]    COND TRUE   __exception
[L87]                __tmp__Balance := Balance;
[L88]                __tmp__DType := DType;
[L89]                __tmp__Alloc := Alloc;
[L90]                __tmp__balance_ADDR := balance_ADDR;
[L91]                __tmp__M_Ref_int := M_Ref_int;
[L92]                __tmp__sum_balanceOf0 := sum_balanceOf0;
[L93]                __tmp__alloc_allowance_TokenERC20_lvl0 := alloc_allowance_TokenERC20_lvl0;
[L94]                __tmp__M_Ref_Ref := M_Ref_Ref;
[L95]                __tmp__sum_allowance1 := sum_allowance1;
[L96]                __tmp__M_Ref_bool := M_Ref_bool;
[L97]                __tmp__sum_frozenAccount2 := sum_frozenAccount2;
[L98]                __tmp__Length := Length;
[L99]                __tmp__now := now;
[L100]               __tmp__owner_owned := owner_owned;
[L101]               __tmp__name_TokenERC20 := name_TokenERC20;
[L102]               __tmp__symbol_TokenERC20 := symbol_TokenERC20;
[L103]               __tmp__decimals_TokenERC20 := decimals_TokenERC20;
[L104]               __tmp__totalSupply_TokenERC20 := totalSupply_TokenERC20;
[L105]               __tmp__balanceOf_TokenERC20 := balanceOf_TokenERC20;
[L106]               __tmp__allowance_TokenERC20 := allowance_TokenERC20;
[L107]               __tmp__sellPrice_MyAdvancedToken := sellPrice_MyAdvancedToken;
[L108]               __tmp__buyPrice_MyAdvancedToken := buyPrice_MyAdvancedToken;
[L109]               __tmp__frozenAccount_MyAdvancedToken := frozenAccount_MyAdvancedToken;
[L110]   CALL        call success_s221 := transfer~address~uint256_TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, _to_s221, _value_s221);
[L809]   COND TRUE   __tmp__DType[this] == MyAdvancedToken
[L810]   CALL        call _transfer~address~address~uint256_MyAdvancedToken__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, _to_s221, _value_s221);
[L955]               __var_2 := null;
[L956]   COND FALSE  !(!(_to_s522 != null))
[L960]   COND FALSE  !(!(__tmp__balanceOf_TokenERC20[this][_from_s522] >= _value_s522))
[L964]   COND TRUE   !((__tmp__balanceOf_TokenERC20[this][_to_s522] + _value_s522) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 >= __tmp__balanceOf_TokenERC20[this][_to_s522])
[L965]               revert := true;
[L810]   RET         call _transfer~address~address~uint256_MyAdvancedToken__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, _to_s221, _value_s221);
[L811]   COND TRUE   revert
[L110]   RET         call success_s221 := transfer~address~uint256_TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, _to_s221, _value_s221);
[L111]               assume revert || gas < 0;
[L1913]  RET         call success_s221 := transfer~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, _to_s221, _value_s221);
[L1945]  RET         call CorralChoice_MyAdvancedToken(this);

Loop:
[L1945]        assume true;

[2020-11-24 15:47:57,325 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 15:47:57,325 INFO  L82        PathProgramCache]: Analyzing trace with hash -731231883, now seen corresponding path program 1 times
[2020-11-24 15:47:57,326 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 15:47:57,332 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 15:47:57,340 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 15:47:57,386 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 15:47:57,386 INFO  L82        PathProgramCache]: Analyzing trace with hash 8837, now seen corresponding path program 1 times
[2020-11-24 15:47:57,386 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 15:47:57,387 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 15:47:57,387 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 15:47:57,388 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 15:47:57,388 INFO  L82        PathProgramCache]: Analyzing trace with hash -1193343087, now seen corresponding path program 1 times
[2020-11-24 15:47:57,389 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 15:47:57,394 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 15:47:57,400 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
[2020-11-24 15:47:57,594 WARN  L188               SmtUtils]: Spent 114.00 ms on a formula simplification. DAG size of input: 154 DAG size of output: 145
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 883 to 1759
Garbage collection #1: 47 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 47 to 89
Garbage collection #2: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #3: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #4: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #5: 673 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 673 to 1327
Garbage collection #6: 1327 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 1327 to 2647
[2020-11-24 15:47:57,826 WARN  L188               SmtUtils]: Spent 113.00 ms on a formula simplification that was a NOOP. DAG size: 266
Garbage collection #1: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #2: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #3: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #4: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #5: 1571 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 1571 to 3137
Garbage collection #6: 3137 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 3137 to 6271
[2020-11-24 15:47:58,045 WARN  L188               SmtUtils]: Spent 209.00 ms on a formula simplification that was a NOOP. DAG size: 212
[2020-11-24 15:47:58,597 WARN  L188               SmtUtils]: Spent 549.00 ms on a formula simplification. DAG size of input: 244 DAG size of output: 230
Garbage collection #1: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #2: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #3: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #4: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #5: 1327 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1327 to 2647
Garbage collection #6: 2647 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2647 to 5281
Garbage collection #7: 5281 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 5281 to 10559
Garbage collection #1: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #2: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #3: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #4: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #5: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #6: 1571 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 1571 to 3137
Garbage collection #7: 3137 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 3137 to 6271
[2020-11-24 15:47:58,837 WARN  L188               SmtUtils]: Spent 140.00 ms on a formula simplification that was a NOOP. DAG size: 285
Garbage collection #1: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #2: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #3: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #4: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #5: 1759 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1759 to 3517
Garbage collection #6: 3517 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3517 to 7027
[2020-11-24 15:47:59,076 WARN  L188               SmtUtils]: Spent 144.00 ms on a formula simplification. DAG size of input: 241 DAG size of output: 236
Garbage collection #1: 97 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3019 to 6037
Garbage collection #1: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #2: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #3: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #4: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #5: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #1: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #2: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #3: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #4: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #5: 1327 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1327 to 2647
Garbage collection #6: 2647 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2647 to 5281
Garbage collection #1: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #2: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #3: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #4: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #5: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
[2020-11-24 15:47:59,296 WARN  L188               SmtUtils]: Spent 101.00 ms on a formula simplification. DAG size of input: 224 DAG size of output: 223
Garbage collection #1: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #2: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #3: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #4: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #5: 1327 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1327 to 2647
Garbage collection #6: 2647 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2647 to 5281
Garbage collection #1: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #2: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #3: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #4: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #5: 1327 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1327 to 2647
Garbage collection #6: 2647 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 2647 to 5281
[2020-11-24 15:47:59,359 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 15:47:59,363 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 24.11 03:47:59 BasicIcfg
[2020-11-24 15:47:59,363 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-24 15:47:59,363 INFO  L168              Benchmark]: Toolchain (without parser) took 5284.49 ms. Allocated memory was 1.0 GB in the beginning and 1.5 GB in the end (delta: 433.6 MB). Free memory was 940.6 MB in the beginning and 843.9 MB in the end (delta: 96.6 MB). Peak memory consumption was 531.4 MB. Max. memory is 15.3 GB.
[2020-11-24 15:47:59,364 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.35 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-24 15:47:59,364 INFO  L168              Benchmark]: Boogie Preprocessor took 72.32 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 935.2 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-24 15:47:59,365 INFO  L168              Benchmark]: UtopiaSpecLang took 52.24 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 929.8 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-24 15:47:59,365 INFO  L168              Benchmark]: Boogie Printer took 10.74 ms. Allocated memory is still 1.0 GB. Free memory is still 929.8 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-24 15:47:59,365 INFO  L168              Benchmark]: RCFGBuilder took 571.10 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 876.1 MB in the end (delta: 53.7 MB). Peak memory consumption was 53.7 MB. Max. memory is 15.3 GB.
[2020-11-24 15:47:59,365 INFO  L168              Benchmark]: UtopiaLTL2Aut took 43.30 ms. Allocated memory is still 1.0 GB. Free memory was 876.1 MB in the beginning and 872.5 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
[2020-11-24 15:47:59,366 INFO  L168              Benchmark]: BÃ¼chi Program Product took 946.74 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 54.0 MB). Free memory was 872.5 MB in the beginning and 923.4 MB in the end (delta: -50.8 MB). Peak memory consumption was 156.4 MB. Max. memory is 15.3 GB.
[2020-11-24 15:47:59,366 INFO  L168              Benchmark]: BlockEncodingV2 took 77.44 ms. Allocated memory is still 1.1 GB. Free memory was 923.4 MB in the beginning and 889.1 MB in the end (delta: 34.3 MB). Peak memory consumption was 34.3 MB. Max. memory is 15.3 GB.
[2020-11-24 15:47:59,367 INFO  L168              Benchmark]: BuchiAutomizer took 3507.69 ms. Allocated memory was 1.1 GB in the beginning and 1.5 GB in the end (delta: 379.6 MB). Free memory was 889.1 MB in the beginning and 843.9 MB in the end (delta: 45.1 MB). Peak memory consumption was 425.8 MB. Max. memory is 15.3 GB.
[2020-11-24 15:47:59,370 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    1544 locations, 2693 edges
  - StatisticsResult: Encoded RCFG
    1510 locations, 2608 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.35 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 72.32 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 935.2 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 52.24 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 929.8 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 10.74 ms. Allocated memory is still 1.0 GB. Free memory is still 929.8 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * RCFGBuilder took 571.10 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 876.1 MB in the end (delta: 53.7 MB). Peak memory consumption was 53.7 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 43.30 ms. Allocated memory is still 1.0 GB. Free memory was 876.1 MB in the beginning and 872.5 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 946.74 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 54.0 MB). Free memory was 872.5 MB in the beginning and 923.4 MB in the end (delta: -50.8 MB). Peak memory consumption was 156.4 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 77.44 ms. Allocated memory is still 1.1 GB. Free memory was 923.4 MB in the beginning and 889.1 MB in the end (delta: 34.3 MB). Peak memory consumption was 34.3 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 3507.69 ms. Allocated memory was 1.1 GB in the beginning and 1.5 GB in the end (delta: 379.6 MB). Free memory was 889.1 MB in the beginning and 843.9 MB in the end (delta: 45.1 MB). Peak memory consumption was 425.8 MB. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    668 locations, 835 edges
  - StatisticsResult: BuchiProgram size
    1544 locations, 2693 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 8 terminating modules (8 trivial, 0 deterministic, 0 nondeterministic) and one nonterminating remainder module.8 modules have a trivial ranking function, the largest among these consists of 11 locations. The remainder module has 181 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 3.4s and 9 iterations.  TraceHistogramMax:1. Analysis of lassos took 2.5s. Construction of modules took 0.3s. BÃ¼chi inclusion checks took 0.3s. Highest rank in rank-based complementation 0. Minimization of det autom 8. Minimization of nondet autom 0. Automata minimization 0.0s AutomataMinimizationTime, 8 MinimizatonAttempts, 24 StatesRemovedByMinimization, 3 NontrivialMinimizations. Non-live state removal took 0.0s Buchi closure took 0.0s. Biggest automaton had 235 states and ocurred in iteration 1.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 2227 SDtfs, 1586 SDslu, 5491 SDs, 0 SdLazy, 1372 SolverSat, 569 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 0.3s Time	LassoAnalysisResults: nont1 unkn0 SFLI0 SFLT0 conc0 concLT0 SILN0 SILU8 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - TransactionCounterexample: Violation of LTL property LTL
    Found an infinite, lasso-shaped execution that violates the LTL property LTL.
Stem:
TokenERC20(115792089237316195423570985008687907853269984665640564039457584007913129639936).transfer~address~uint256.gas(3979001)({from : 115792089237316195423570985008687907853269984665640564039457584007913129639937, _to : 115792089237316195423570985008687907853269984665640564039457584007913129639937, _value : 1});
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == _to_s221 && _value_s221 <= balanceOf_TokenERC20[this][msgsender_MSG]) && _value_s221 >= 0) && _value_s221 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_TokenERC20[this][_to_s221] >= 0) && balanceOf_TokenERC20[this][_to_s221] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_TokenERC20[this][msgsender_MSG] >= 0) && balanceOf_TokenERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_TokenERC200 := true;
[L2]                 call_transfer_TokenERC200 := false;
[L2]                 revert := revert_hold;
[L84]                havoc __exception;
[L85]                revert := false;
[L86]    COND TRUE   __exception
[L87]                __tmp__Balance := Balance;
[L88]                __tmp__DType := DType;
[L89]                __tmp__Alloc := Alloc;
[L90]                __tmp__balance_ADDR := balance_ADDR;
[L91]                __tmp__M_Ref_int := M_Ref_int;
[L92]                __tmp__sum_balanceOf0 := sum_balanceOf0;
[L93]                __tmp__alloc_allowance_TokenERC20_lvl0 := alloc_allowance_TokenERC20_lvl0;
[L94]                __tmp__M_Ref_Ref := M_Ref_Ref;
[L95]                __tmp__sum_allowance1 := sum_allowance1;
[L96]                __tmp__M_Ref_bool := M_Ref_bool;
[L97]                __tmp__sum_frozenAccount2 := sum_frozenAccount2;
[L98]                __tmp__Length := Length;
[L99]                __tmp__now := now;
[L100]               __tmp__owner_owned := owner_owned;
[L101]               __tmp__name_TokenERC20 := name_TokenERC20;
[L102]               __tmp__symbol_TokenERC20 := symbol_TokenERC20;
[L103]               __tmp__decimals_TokenERC20 := decimals_TokenERC20;
[L104]               __tmp__totalSupply_TokenERC20 := totalSupply_TokenERC20;
[L105]               __tmp__balanceOf_TokenERC20 := balanceOf_TokenERC20;
[L106]               __tmp__allowance_TokenERC20 := allowance_TokenERC20;
[L107]               __tmp__sellPrice_MyAdvancedToken := sellPrice_MyAdvancedToken;
[L108]               __tmp__buyPrice_MyAdvancedToken := buyPrice_MyAdvancedToken;
[L109]               __tmp__frozenAccount_MyAdvancedToken := frozenAccount_MyAdvancedToken;
[L110]   CALL        call success_s221 := transfer~address~uint256_TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, _to_s221, _value_s221);
[L809]   COND TRUE   __tmp__DType[this] == MyAdvancedToken
[L810]   CALL        call _transfer~address~address~uint256_MyAdvancedToken__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, _to_s221, _value_s221);
[L955]               __var_2 := null;
[L956]   COND FALSE  !(!(_to_s522 != null))
[L960]   COND FALSE  !(!(__tmp__balanceOf_TokenERC20[this][_from_s522] >= _value_s522))
[L964]   COND TRUE   !((__tmp__balanceOf_TokenERC20[this][_to_s522] + _value_s522) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 >= __tmp__balanceOf_TokenERC20[this][_to_s522])
[L965]               revert := true;
[L810]   RET         call _transfer~address~address~uint256_MyAdvancedToken__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, _to_s221, _value_s221);
[L811]   COND TRUE   revert
[L110]   RET         call success_s221 := transfer~address~uint256_TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, _to_s221, _value_s221);
[L111]               assume revert || gas < 0;
[L1913]  RET         call success_s221 := transfer~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, _to_s221, _value_s221);

Loop:

End of lasso representation.
RESULT: Ultimate could not prove your program: Toolchain returned no result.
Received shutdown request...
