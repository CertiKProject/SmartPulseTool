This is Ultimate 0.1.24-f1553f5-m
[2020-11-24 16:02:22,330 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-24 16:02:22,332 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-24 16:02:22,343 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-24 16:02:22,343 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-24 16:02:22,343 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-24 16:02:22,344 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-24 16:02:22,346 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-24 16:02:22,348 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-24 16:02:22,348 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-24 16:02:22,349 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-24 16:02:22,349 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-24 16:02:22,350 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-24 16:02:22,351 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-24 16:02:22,352 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-24 16:02:22,352 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-24 16:02:22,353 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-24 16:02:22,354 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-24 16:02:22,356 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-24 16:02:22,357 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-24 16:02:22,358 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-24 16:02:22,359 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-24 16:02:22,361 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-24 16:02:22,361 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-24 16:02:22,361 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-24 16:02:22,362 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-24 16:02:22,362 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-24 16:02:22,363 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-24 16:02:22,363 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-24 16:02:22,363 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-24 16:02:22,364 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-24 16:02:22,364 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-24 16:02:22,365 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-24 16:02:22,365 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-24 16:02:22,366 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-24 16:02:22,366 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-24 16:02:22,367 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-24 16:02:22,367 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-24 16:02:22,367 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-24 16:02:22,368 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-24 16:02:22,368 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-24 16:02:22,368 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-24 16:02:22,376 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-24 16:02:22,376 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-24 16:02:22,377 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-24 16:02:22,377 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-24 16:02:22,378 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-24 16:02:22,378 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-24 16:02:22,378 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-24 16:02:22,378 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-24 16:02:22,378 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-24 16:02:22,378 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-24 16:02:22,378 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-24 16:02:22,378 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-24 16:02:22,378 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-24 16:02:22,379 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-24 16:02:22,379 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-24 16:02:22,379 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-24 16:02:22,379 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-24 16:02:22,379 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-24 16:02:22,379 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-24 16:02:22,379 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-24 16:02:22,379 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-24 16:02:22,379 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-24 16:02:22,380 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-24 16:02:22,380 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-24 16:02:22,380 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-24 16:02:22,380 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-24 16:02:22,402 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-24 16:02:22,414 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-24 16:02:22,417 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-24 16:02:22,418 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-24 16:02:22,419 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-24 16:02:22,419 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/ONIT_0x410e731c2970dce3add351064acf5ce9e33fdbf0_transfer-self-fail.bpl
[2020-11-24 16:02:22,420 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/ONIT_0x410e731c2970dce3add351064acf5ce9e33fdbf0_transfer-self-fail.bpl'
[2020-11-24 16:02:22,508 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-24 16:02:22,509 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-24 16:02:22,510 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-24 16:02:22,510 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-24 16:02:22,510 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-24 16:02:22,535 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "ONIT_0x410e731c2970dce3add351064acf5ce9e33fdbf0_transfer-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 04:02:22" (1/1) ...
[2020-11-24 16:02:22,538 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "ONIT_0x410e731c2970dce3add351064acf5ce9e33fdbf0_transfer-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 04:02:22" (1/1) ...
[2020-11-24 16:02:22,584 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "ONIT_0x410e731c2970dce3add351064acf5ce9e33fdbf0_transfer-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 04:02:22" (1/1) ...
[2020-11-24 16:02:22,585 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "ONIT_0x410e731c2970dce3add351064acf5ce9e33fdbf0_transfer-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 04:02:22" (1/1) ...
[2020-11-24 16:02:22,608 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "ONIT_0x410e731c2970dce3add351064acf5ce9e33fdbf0_transfer-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 04:02:22" (1/1) ...
[2020-11-24 16:02:22,619 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "ONIT_0x410e731c2970dce3add351064acf5ce9e33fdbf0_transfer-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 04:02:22" (1/1) ...
[2020-11-24 16:02:22,627 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "ONIT_0x410e731c2970dce3add351064acf5ce9e33fdbf0_transfer-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 04:02:22" (1/1) ...
[2020-11-24 16:02:22,638 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-24 16:02:22,639 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-24 16:02:22,639 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-24 16:02:22,641 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-24 16:02:22,644 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "ONIT_0x410e731c2970dce3add351064acf5ce9e33fdbf0_transfer-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 04:02:22" (1/1) ...
[2020-11-24 16:02:22,666 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(ONIT.transfer(to, value), msg.sender == to && value > _balances_ERC20[this][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][to] >= 0 && _balances_ERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][msg.sender] >= 0 &&  _balances_ERC20[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(reverted(ONIT.transfer)))
[2020-11-24 16:02:22,672 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(ONIT.transfer(to, value), msg.sender == to && value > _balances_ERC20[this][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][to] >= 0 && _balances_ERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][msg.sender] >= 0 &&  _balances_ERC20[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(reverted(ONIT.transfer)))
[2020-11-24 16:02:22,679 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(ONIT.transfer(to, value), msg.sender == to && value > _balances_ERC20[this][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][to] >= 0 && _balances_ERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][msg.sender] >= 0 &&  _balances_ERC20[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(reverted(ONIT.transfer)))
[2020-11-24 16:02:22,687 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( msg.sender==to_s1288 && value_s1288>_balances_ERC20[this][msg.sender] ) && value_s1288>=0 ) && value_s1288<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && _balances_ERC20[this][to_s1288]>=0 ) && _balances_ERC20[this][to_s1288]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && _balances_ERC20[this][msg.sender]>=0 ) && _balances_ERC20[this][msg.sender]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ONIT>],IdentifierExpression[to_s1288,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ONIT>]],BinaryExpression[COMPGT,IdentifierExpression[value_s1288,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ONIT>],ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ONIT>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ONIT>]]]]],BinaryExpression[COMPGEQ,IdentifierExpression[value_s1288,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ONIT>],IntegerLiteral[0]]],BinaryExpression[COMPLT,IdentifierExpression[value_s1288,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ONIT>],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ONIT>]]],[IdentifierExpression[to_s1288,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ONIT>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ONIT>]]],[IdentifierExpression[to_s1288,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ONIT>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ONIT>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ONIT>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ONIT>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ONIT>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]]
[2020-11-24 16:02:22,691 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(ONIT.transfer(to, value), msg.sender == to && value > _balances_ERC20[this][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][to] >= 0 && _balances_ERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][msg.sender] >= 0 &&  _balances_ERC20[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(reverted(ONIT.transfer)))
[2020-11-24 16:02:22,691 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_transfer_ONIT0) ==> ( <>AP(fail_transfer_ONIT0) ) ) )
Executed UtopiaSpecLang
[2020-11-24 16:02:22,700 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 04:02:22 PropertyContainer
[2020-11-24 16:02:22,700 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-24 16:02:22,700 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-24 16:02:22,701 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-24 16:02:22,701 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-24 16:02:22,701 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "ONIT_0x410e731c2970dce3add351064acf5ce9e33fdbf0_transfer-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 04:02:22" (1/2) ...
[2020-11-24 16:02:22,702 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-24 16:02:22,702 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-24 16:02:22,717 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 04:02:22" (2/2) ...
[2020-11-24 16:02:22,717 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-24 16:02:22,718 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-24 16:02:22,718 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-24 16:02:22,718 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-24 16:02:22,718 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "ONIT_0x410e731c2970dce3add351064acf5ce9e33fdbf0_transfer-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 04:02:22" (1/2) ...
[2020-11-24 16:02:22,772 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-24 16:02:22,772 INFO  L130     BoogieDeclarations]: Found specification of procedure Roles.Role_ctor__success
[2020-11-24 16:02:22,772 INFO  L130     BoogieDeclarations]: Found specification of procedure ONIT.LockInfo_ctor__success
[2020-11-24 16:02:22,772 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__success
[2020-11-24 16:02:22,772 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__success
[2020-11-24 16:02:22,772 INFO  L130     BoogieDeclarations]: Found specification of procedure add~Role~address_Roles__success
[2020-11-24 16:02:22,772 INFO  L130     BoogieDeclarations]: Found specification of procedure has~Role~address_Roles__success
[2020-11-24 16:02:22,772 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_IERC20
[2020-11-24 16:02:22,773 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_IERC20
[2020-11-24 16:02:22,773 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_IERC20
[2020-11-24 16:02:22,773 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20
[2020-11-24 16:02:22,773 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ERC20
[2020-11-24 16:02:22,773 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20
[2020-11-24 16:02:22,773 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ERC20
[2020-11-24 16:02:22,773 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20
[2020-11-24 16:02:22,773 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ERC20
[2020-11-24 16:02:22,773 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20
[2020-11-24 16:02:22,773 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20
[2020-11-24 16:02:22,774 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20
[2020-11-24 16:02:22,774 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ERC20
[2020-11-24 16:02:22,774 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20
[2020-11-24 16:02:22,774 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20
[2020-11-24 16:02:22,774 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_ERC20__success
[2020-11-24 16:02:22,774 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20Pausable
[2020-11-24 16:02:22,774 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20Pausable
[2020-11-24 16:02:22,774 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20Pausable
[2020-11-24 16:02:22,774 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20Pausable
[2020-11-24 16:02:22,774 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ONIT
[2020-11-24 16:02:22,774 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ONIT
[2020-11-24 16:02:22,775 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ONIT
[2020-11-24 16:02:22,775 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ONIT
[2020-11-24 16:02:22,775 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ONIT
[2020-11-24 16:02:22,775 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ONIT
[2020-11-24 16:02:22,775 INFO  L130     BoogieDeclarations]: Found specification of procedure _unlock~address~uint256_ONIT__success
[2020-11-24 16:02:22,775 INFO  L130     BoogieDeclarations]: Found specification of procedure _autoUnlock~address_ONIT__success
[2020-11-24 16:02:22,775 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-24 16:02:22,775 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-24 16:02:22,775 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-24 16:02:22,775 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__success
[2020-11-24 16:02:22,775 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyNewOwner_pre__success
[2020-11-24 16:02:22,776 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyPauser_pre__success
[2020-11-24 16:02:22,776 INFO  L130     BoogieDeclarations]: Found specification of procedure whenNotPaused_pre__success
[2020-11-24 16:02:22,776 INFO  L130     BoogieDeclarations]: Found specification of procedure whenPaused_pre__success
[2020-11-24 16:02:22,776 INFO  L130     BoogieDeclarations]: Found specification of procedure notFrozen_pre__success
[2020-11-24 16:02:22,776 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_SafeMath
[2020-11-24 16:02:22,776 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_SafeMath
[2020-11-24 16:02:22,776 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_Roles
[2020-11-24 16:02:22,776 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_Roles
[2020-11-24 16:02:22,776 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_Ownable
[2020-11-24 16:02:22,776 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_Ownable
[2020-11-24 16:02:22,776 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_PauserRole
[2020-11-24 16:02:22,776 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_PauserRole
[2020-11-24 16:02:22,777 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_Pausable
[2020-11-24 16:02:22,777 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_Pausable
[2020-11-24 16:02:22,777 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_IERC20
[2020-11-24 16:02:22,777 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_IERC20
[2020-11-24 16:02:22,777 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20
[2020-11-24 16:02:22,777 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20
[2020-11-24 16:02:22,777 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20Pausable
[2020-11-24 16:02:22,777 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20Pausable
[2020-11-24 16:02:22,777 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20Detailed
[2020-11-24 16:02:22,777 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20Detailed
[2020-11-24 16:02:22,777 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ONIT
[2020-11-24 16:02:22,778 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-24 16:02:22,778 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-24 16:02:22,778 INFO  L130     BoogieDeclarations]: Found specification of procedure Roles.Role_ctor__fail
[2020-11-24 16:02:22,778 INFO  L130     BoogieDeclarations]: Found specification of procedure ONIT.LockInfo_ctor__fail
[2020-11-24 16:02:22,778 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-24 16:02:22,778 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__fail
[2020-11-24 16:02:22,778 INFO  L130     BoogieDeclarations]: Found specification of procedure add~Role~address_Roles__fail
[2020-11-24 16:02:22,778 INFO  L130     BoogieDeclarations]: Found specification of procedure has~Role~address_Roles__fail
[2020-11-24 16:02:22,778 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20__success
[2020-11-24 16:02:22,778 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20__fail
[2020-11-24 16:02:22,779 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20__success
[2020-11-24 16:02:22,779 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20__fail
[2020-11-24 16:02:22,779 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20__success
[2020-11-24 16:02:22,779 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20__fail
[2020-11-24 16:02:22,779 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20__success
[2020-11-24 16:02:22,779 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20__fail
[2020-11-24 16:02:22,779 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20__success
[2020-11-24 16:02:22,779 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20__fail
[2020-11-24 16:02:22,779 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20__success
[2020-11-24 16:02:22,780 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20__fail
[2020-11-24 16:02:22,780 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_ERC20__fail
[2020-11-24 16:02:22,780 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20Pausable__success
[2020-11-24 16:02:22,780 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20Pausable__fail
[2020-11-24 16:02:22,780 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20Pausable__success
[2020-11-24 16:02:22,780 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20Pausable__fail
[2020-11-24 16:02:22,780 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ONIT__success
[2020-11-24 16:02:22,780 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ONIT__fail
[2020-11-24 16:02:22,780 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ONIT__success
[2020-11-24 16:02:22,780 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ONIT__fail
[2020-11-24 16:02:22,781 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ONIT__success
[2020-11-24 16:02:22,781 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ONIT__fail
[2020-11-24 16:02:22,781 INFO  L130     BoogieDeclarations]: Found specification of procedure _unlock~address~uint256_ONIT__fail
[2020-11-24 16:02:22,781 INFO  L130     BoogieDeclarations]: Found specification of procedure _autoUnlock~address_ONIT__fail
[2020-11-24 16:02:22,781 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-24 16:02:22,781 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-24 16:02:22,781 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-24 16:02:22,781 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__fail
[2020-11-24 16:02:22,781 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyNewOwner_pre__fail
[2020-11-24 16:02:22,781 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyPauser_pre__fail
[2020-11-24 16:02:22,782 INFO  L130     BoogieDeclarations]: Found specification of procedure whenNotPaused_pre__fail
[2020-11-24 16:02:22,782 INFO  L130     BoogieDeclarations]: Found specification of procedure whenPaused_pre__fail
[2020-11-24 16:02:22,782 INFO  L130     BoogieDeclarations]: Found specification of procedure notFrozen_pre__fail
[2020-11-24 16:02:22,782 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-24 16:02:22,782 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-24 16:02:22,782 INFO  L138     BoogieDeclarations]: Found implementation of procedure Roles.Role_ctor__fail
[2020-11-24 16:02:22,782 INFO  L138     BoogieDeclarations]: Found implementation of procedure Roles.Role_ctor__success
[2020-11-24 16:02:22,782 INFO  L138     BoogieDeclarations]: Found implementation of procedure ONIT.LockInfo_ctor__fail
[2020-11-24 16:02:22,782 INFO  L138     BoogieDeclarations]: Found implementation of procedure ONIT.LockInfo_ctor__success
[2020-11-24 16:02:22,783 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-24 16:02:22,783 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__success
[2020-11-24 16:02:22,783 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__fail
[2020-11-24 16:02:22,783 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__success
[2020-11-24 16:02:22,783 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~Role~address_Roles__fail
[2020-11-24 16:02:22,783 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~Role~address_Roles__success
[2020-11-24 16:02:22,783 INFO  L138     BoogieDeclarations]: Found implementation of procedure has~Role~address_Roles__fail
[2020-11-24 16:02:22,783 INFO  L138     BoogieDeclarations]: Found implementation of procedure has~Role~address_Roles__success
[2020-11-24 16:02:22,783 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ERC20__fail
[2020-11-24 16:02:22,783 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ERC20__success
[2020-11-24 16:02:22,783 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ERC20__fail
[2020-11-24 16:02:22,784 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ERC20__success
[2020-11-24 16:02:22,784 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ERC20__fail
[2020-11-24 16:02:22,784 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ERC20__success
[2020-11-24 16:02:22,784 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20__fail
[2020-11-24 16:02:22,784 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20__success
[2020-11-24 16:02:22,784 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ERC20__fail
[2020-11-24 16:02:22,784 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ERC20__success
[2020-11-24 16:02:22,784 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20__fail
[2020-11-24 16:02:22,784 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20__success
[2020-11-24 16:02:22,784 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_ERC20__fail
[2020-11-24 16:02:22,785 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_ERC20__success
[2020-11-24 16:02:22,785 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20Pausable__fail
[2020-11-24 16:02:22,785 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20Pausable__success
[2020-11-24 16:02:22,785 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20Pausable__fail
[2020-11-24 16:02:22,785 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20Pausable__success
[2020-11-24 16:02:22,785 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ONIT__fail
[2020-11-24 16:02:22,785 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ONIT__success
[2020-11-24 16:02:22,785 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ONIT__fail
[2020-11-24 16:02:22,785 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ONIT__success
[2020-11-24 16:02:22,786 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ONIT__fail
[2020-11-24 16:02:22,786 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ONIT__success
[2020-11-24 16:02:22,786 INFO  L138     BoogieDeclarations]: Found implementation of procedure _unlock~address~uint256_ONIT__fail
[2020-11-24 16:02:22,786 INFO  L138     BoogieDeclarations]: Found implementation of procedure _unlock~address~uint256_ONIT__success
[2020-11-24 16:02:22,786 INFO  L138     BoogieDeclarations]: Found implementation of procedure _autoUnlock~address_ONIT__fail
[2020-11-24 16:02:22,786 INFO  L138     BoogieDeclarations]: Found implementation of procedure _autoUnlock~address_ONIT__success
[2020-11-24 16:02:22,786 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-24 16:02:22,786 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-24 16:02:22,786 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-24 16:02:22,786 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-24 16:02:22,787 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-24 16:02:22,787 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-24 16:02:22,787 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__fail
[2020-11-24 16:02:22,787 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__success
[2020-11-24 16:02:22,787 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyNewOwner_pre__fail
[2020-11-24 16:02:22,787 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyNewOwner_pre__success
[2020-11-24 16:02:22,787 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyPauser_pre__fail
[2020-11-24 16:02:22,787 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyPauser_pre__success
[2020-11-24 16:02:22,787 INFO  L138     BoogieDeclarations]: Found implementation of procedure whenNotPaused_pre__fail
[2020-11-24 16:02:22,788 INFO  L138     BoogieDeclarations]: Found implementation of procedure whenNotPaused_pre__success
[2020-11-24 16:02:22,788 INFO  L138     BoogieDeclarations]: Found implementation of procedure whenPaused_pre__fail
[2020-11-24 16:02:22,788 INFO  L138     BoogieDeclarations]: Found implementation of procedure whenPaused_pre__success
[2020-11-24 16:02:22,788 INFO  L138     BoogieDeclarations]: Found implementation of procedure notFrozen_pre__fail
[2020-11-24 16:02:22,788 INFO  L138     BoogieDeclarations]: Found implementation of procedure notFrozen_pre__success
[2020-11-24 16:02:22,788 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_SafeMath
[2020-11-24 16:02:22,788 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_SafeMath
[2020-11-24 16:02:22,788 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_Roles
[2020-11-24 16:02:22,788 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_Roles
[2020-11-24 16:02:22,788 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_Ownable
[2020-11-24 16:02:22,789 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_Ownable
[2020-11-24 16:02:22,789 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_PauserRole
[2020-11-24 16:02:22,789 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_PauserRole
[2020-11-24 16:02:22,789 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_Pausable
[2020-11-24 16:02:22,789 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_Pausable
[2020-11-24 16:02:22,789 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_IERC20
[2020-11-24 16:02:22,789 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_IERC20
[2020-11-24 16:02:22,789 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20
[2020-11-24 16:02:22,789 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20
[2020-11-24 16:02:22,790 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20Pausable
[2020-11-24 16:02:22,790 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20Pausable
[2020-11-24 16:02:22,790 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20Detailed
[2020-11-24 16:02:22,790 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20Detailed
[2020-11-24 16:02:22,790 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ONIT
[2020-11-24 16:02:22,790 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-24 16:02:22,790 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-24 16:02:22,790 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-24 16:02:23,185 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 16:02:23,186 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 16:02:23,568 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-24 16:02:23,568 INFO  L286             CfgBuilder]: Removed 10 assue(true) statements.
[2020-11-24 16:02:23,570 INFO  L202        PluginConnector]: Adding new model ONIT_0x410e731c2970dce3add351064acf5ce9e33fdbf0_transfer-self-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 04:02:23 BoogieIcfgContainer
[2020-11-24 16:02:23,570 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 04:02:22" (2/2) ...
[2020-11-24 16:02:23,570 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-24 16:02:23,571 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@2d484354 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 04:02:23, skipping insertion in model container
[2020-11-24 16:02:23,571 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-24 16:02:23,571 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-24 16:02:23,571 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-24 16:02:23,572 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-24 16:02:23,572 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "ONIT_0x410e731c2970dce3add351064acf5ce9e33fdbf0_transfer-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 04:02:22" (1/3) ...
[2020-11-24 16:02:23,573 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@5faa3e98 and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 04:02:23, skipping insertion in model container
[2020-11-24 16:02:23,573 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 04:02:22" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-24 16:02:23,608 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 04:02:23 NWAContainer
[2020-11-24 16:02:23,608 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-24 16:02:23,608 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-24 16:02:23,608 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-24 16:02:23,609 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-24 16:02:23,610 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "ONIT_0x410e731c2970dce3add351064acf5ce9e33fdbf0_transfer-self-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 04:02:23" (3/4) ...
[2020-11-24 16:02:23,610 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@37af877b and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 04:02:23, skipping insertion in model container
[2020-11-24 16:02:23,611 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 04:02:23" (4/4) ...
[2020-11-24 16:02:23,613 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-24 16:02:23,617 INFO  L110   BuchiProductObserver]: Initial RCFG 1615 locations, 2112 edges
[2020-11-24 16:02:23,617 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-24 16:02:23,627 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-24 16:02:25,078 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-24 16:02:25,083 INFO  L110   BuchiProductObserver]: BuchiProgram size 3842 locations, 6780 edges
[2020-11-24 16:02:25,083 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 04:02:25 BoogieIcfgContainer
[2020-11-24 16:02:25,083 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-24 16:02:25,083 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-24 16:02:25,083 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-24 16:02:25,085 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-24 16:02:25,085 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 04:02:25" (1/1) ...
[2020-11-24 16:02:25,175 INFO  L313           BlockEncoder]: Initial Icfg 3842 locations, 6780 edges
[2020-11-24 16:02:25,175 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-24 16:02:25,175 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-24 16:02:25,176 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-24 16:02:25,176 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-24 16:02:25,187 INFO  L70    emoveInfeasibleEdges]: Removed 123 edges and 24 locations because of local infeasibility
[2020-11-24 16:02:25,195 INFO  L70        RemoveSinkStates]: Removed 182 edges and 98 locations by removing sink states
[2020-11-24 16:02:25,209 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-24 16:02:25,213 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-24 16:02:25,215 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-24 16:02:25,216 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-24 16:02:25,220 INFO  L313           BlockEncoder]: Encoded RCFG 3692 locations, 6434 edges
[2020-11-24 16:02:25,221 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 24.11 04:02:25 BasicIcfg
[2020-11-24 16:02:25,221 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-24 16:02:25,221 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-24 16:02:25,221 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-24 16:02:25,223 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-24 16:02:25,223 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 16:02:25,223 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "ONIT_0x410e731c2970dce3add351064acf5ce9e33fdbf0_transfer-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 04:02:22" (1/6) ...
[2020-11-24 16:02:25,225 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@373ec14c and model type ONIT_0x410e731c2970dce3add351064acf5ce9e33fdbf0_transfer-self-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 24.11 04:02:25, skipping insertion in model container
[2020-11-24 16:02:25,225 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 16:02:25,225 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 04:02:22" (2/6) ...
[2020-11-24 16:02:25,226 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@373ec14c and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 24.11 04:02:25, skipping insertion in model container
[2020-11-24 16:02:25,226 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 16:02:25,226 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "ONIT_0x410e731c2970dce3add351064acf5ce9e33fdbf0_transfer-self-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 04:02:23" (3/6) ...
[2020-11-24 16:02:25,226 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@373ec14c and model type ONIT_0x410e731c2970dce3add351064acf5ce9e33fdbf0_transfer-self-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 24.11 04:02:25, skipping insertion in model container
[2020-11-24 16:02:25,226 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 16:02:25,226 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 04:02:23" (4/6) ...
[2020-11-24 16:02:25,226 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@373ec14c and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 24.11 04:02:25, skipping insertion in model container
[2020-11-24 16:02:25,226 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 16:02:25,226 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 04:02:25" (5/6) ...
[2020-11-24 16:02:25,227 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@373ec14c and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 24.11 04:02:25, skipping insertion in model container
[2020-11-24 16:02:25,227 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 16:02:25,227 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 24.11 04:02:25" (6/6) ...
[2020-11-24 16:02:25,228 INFO  L404   chiAutomizerObserver]: Analyzing ICFG ONIT_0x410e731c2970dce3add351064acf5ce9e33fdbf0_transfer-self-fail.bpl_BEv2
[2020-11-24 16:02:25,264 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-24 16:02:25,264 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-24 16:02:25,264 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-24 16:02:25,264 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-24 16:02:25,265 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-24 16:02:25,265 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-24 16:02:25,265 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-24 16:02:25,265 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-24 16:02:25,265 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-24 16:02:25,299 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3692 states.
[2020-11-24 16:02:25,347 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 16:02:25,347 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 16:02:25,347 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 16:02:25,354 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 16:02:25,354 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
[2020-11-24 16:02:25,355 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-24 16:02:25,355 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3692 states.
[2020-11-24 16:02:25,372 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 16:02:25,372 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 16:02:25,372 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 16:02:25,374 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 16:02:25,374 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L2]                 fail_transfer_ONIT0 := false;
[L2]                 call_transfer_ONIT0 := false;
[L2]     CALL        call main();
[L4395]              assume null == 0;
[L4396]  CALL        call this := FreshRefGenerator__success();
[L1636]              havoc newRef;
[L1637]              assume Alloc[newRef] == false;
[L1638]              Alloc[newRef] := true;
[L1639]              assume newRef != null;
[L4396]  RET         call this := FreshRefGenerator__success();
[L4397]              assume now >= 0;
[L4398]              assume DType[this] == ONIT;
[L4399]              assume !revert && gas >= 0;
[L4400]  CALL        call CorralChoice_ONIT(this);
[L4275]              havoc msgsender_MSG;
[L4276]              havoc msgvalue_MSG;
[L4277]              havoc choice;
[L4278]              havoc __ret_0_owner;
[L4279]              havoc __ret_0_newOwner;
[L4280]              havoc account_s293;
[L4281]              havoc __ret_0_isOwner;
[L4282]              havoc _newOwner_s313;
[L4283]              havoc __ret_0_acceptOwnership;
[L4284]              havoc account_s390;
[L4285]              havoc __ret_0_isPauser;
[L4286]              havoc account_s402;
[L4287]              havoc account_s414;
[L4288]              havoc __ret_0_paused;
[L4289]              havoc to_s1288;
[L4290]              havoc value_s1288;
[L4291]              havoc __ret_0_transfer;
[L4292]              havoc spender_s711;
[L4293]              havoc value_s711;
[L4294]              havoc __ret_0_approve;
[L4295]              havoc from_s1322;
[L4296]              havoc to_s1322;
[L4297]              havoc value_s1322;
[L4298]              havoc __ret_0_transferFrom;
[L4299]              havoc __ret_0_totalSupply;
[L4300]              havoc owner_s1254;
[L4301]              havoc __ret_0_balanceOf;
[L4302]              havoc owner_s656;
[L4303]              havoc spender_s656;
[L4304]              havoc __ret_0_allowance;
[L4305]              havoc spender_s809;
[L4306]              havoc addedValue_s809;
[L4307]              havoc __ret_0_increaseAllowance;
[L4308]              havoc spender_s858;
[L4309]              havoc subtractedValue_s858;
[L4310]              havoc __ret_0_decreaseAllowance;
[L4311]              havoc name_s1105;
[L4312]              havoc symbol_s1105;
[L4313]              havoc decimals_s1105;
[L4314]              havoc __ret_0_name;
[L4315]              havoc __ret_0_symbol;
[L4316]              havoc __ret_0_decimals;
[L4317]              havoc __ret_0_implementation;
[L4318]              havoc arg1693_s0;
[L4319]              havoc arg1694_s0;
[L4320]              havoc __ret_0_timelockList;
[L4321]              havoc arg1695_s0;
[L4322]              havoc __ret_0_frozenAccount;
[L4323]              havoc holder_s1351;
[L4324]              havoc __ret_0_freezeAccount;
[L4325]              havoc holder_s1379;
[L4326]              havoc __ret_0_unfreezeAccount;
[L4327]              havoc holder_s1410;
[L4328]              havoc value_s1410;
[L4329]              havoc releaseTime_s1410;
[L4330]              havoc __ret_0_lock;
[L4331]              havoc holder_s1439;
[L4332]              havoc value_s1439;
[L4333]              havoc releaseTime_s1439;
[L4334]              havoc __ret_0_transferWithLock;
[L4335]              havoc holder_s1468;
[L4336]              havoc idx_s1468;
[L4337]              havoc __ret_0_unlock;
[L4338]              havoc _newImplementation_s1486;
[L4339]              havoc value_s1663;
[L4340]              havoc __ret_0_mint;
[L4341]              havoc tmpNow;
[L4342]              havoc gas;
[L4343]              assume gas > 4000000 && gas <= 8000000;
[L4344]              tmpNow := now;
[L4345]              havoc now;
[L4346]              assume now > tmpNow;
[L4347]              assume msgsender_MSG != null;
[L4348]  COND TRUE   choice == 6
[L4349]              gas := gas - 21000;
[L4350]  COND FALSE  !(gas >= 0)
[L4400]  RET         call CorralChoice_ONIT(this);

Loop:
[L4400]        assume true;

[2020-11-24 16:02:25,387 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 16:02:25,387 INFO  L82        PathProgramCache]: Analyzing trace with hash 147926406, now seen corresponding path program 1 times
[2020-11-24 16:02:25,391 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 16:02:25,421 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 16:02:25,491 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 16:02:25,493 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 16:02:25,494 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [5] imperfect sequences [] total 5
[2020-11-24 16:02:25,674 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 16:02:25,686 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 5 interpolants.
[2020-11-24 16:02:25,687 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=9, Invalid=11, Unknown=0, NotChecked=0, Total=20
[2020-11-24 16:02:25,688 INFO  L87              Difference]: Start difference. First operand 3692 states. Second operand 5 states.
[2020-11-24 16:02:26,098 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 16:02:26,098 INFO  L93              Difference]: Finished difference Result 1371 states and 1648 transitions.
[2020-11-24 16:02:26,098 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-24 16:02:26,100 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 1371 states and 1648 transitions.
[2020-11-24 16:02:26,112 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 16:02:26,120 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 1371 states to 339 states and 397 transitions.
[2020-11-24 16:02:26,121 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 3
[2020-11-24 16:02:26,122 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 143
[2020-11-24 16:02:26,122 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 339 states and 397 transitions.
[2020-11-24 16:02:26,125 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 16:02:26,125 INFO  L728         BuchiCegarLoop]: Abstraction has 339 states and 397 transitions.
[2020-11-24 16:02:26,140 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 339 states and 397 transitions.
[2020-11-24 16:02:26,158 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 339 to 339.
[2020-11-24 16:02:26,159 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 339 states.
[2020-11-24 16:02:26,160 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 339 states to 339 states and 397 transitions.
[2020-11-24 16:02:26,161 INFO  L751         BuchiCegarLoop]: Abstraction has 339 states and 397 transitions.
[2020-11-24 16:02:26,161 INFO  L631         BuchiCegarLoop]: Abstraction has 339 states and 397 transitions.
[2020-11-24 16:02:26,161 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-24 16:02:26,161 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 339 states and 397 transitions.
[2020-11-24 16:02:26,163 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 16:02:26,163 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 16:02:26,163 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 16:02:26,164 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 16:02:26,164 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L2]                 fail_transfer_ONIT0 := false;
[L2]                 call_transfer_ONIT0 := false;
[L2]     CALL        call main();
[L4395]              assume null == 0;
[L4396]  CALL        call this := FreshRefGenerator__success();
[L1636]              havoc newRef;
[L1637]              assume Alloc[newRef] == false;
[L1638]              Alloc[newRef] := true;
[L1639]              assume newRef != null;
[L4396]  RET         call this := FreshRefGenerator__success();
[L4397]              assume now >= 0;
[L4398]              assume DType[this] == ONIT;
[L4399]              assume !revert && gas >= 0;
[L4400]  CALL        call CorralChoice_ONIT(this);
[L4275]              havoc msgsender_MSG;
[L4276]              havoc msgvalue_MSG;
[L4277]              havoc choice;
[L4278]              havoc __ret_0_owner;
[L4279]              havoc __ret_0_newOwner;
[L4280]              havoc account_s293;
[L4281]              havoc __ret_0_isOwner;
[L4282]              havoc _newOwner_s313;
[L4283]              havoc __ret_0_acceptOwnership;
[L4284]              havoc account_s390;
[L4285]              havoc __ret_0_isPauser;
[L4286]              havoc account_s402;
[L4287]              havoc account_s414;
[L4288]              havoc __ret_0_paused;
[L4289]              havoc to_s1288;
[L4290]              havoc value_s1288;
[L4291]              havoc __ret_0_transfer;
[L4292]              havoc spender_s711;
[L4293]              havoc value_s711;
[L4294]              havoc __ret_0_approve;
[L4295]              havoc from_s1322;
[L4296]              havoc to_s1322;
[L4297]              havoc value_s1322;
[L4298]              havoc __ret_0_transferFrom;
[L4299]              havoc __ret_0_totalSupply;
[L4300]              havoc owner_s1254;
[L4301]              havoc __ret_0_balanceOf;
[L4302]              havoc owner_s656;
[L4303]              havoc spender_s656;
[L4304]              havoc __ret_0_allowance;
[L4305]              havoc spender_s809;
[L4306]              havoc addedValue_s809;
[L4307]              havoc __ret_0_increaseAllowance;
[L4308]              havoc spender_s858;
[L4309]              havoc subtractedValue_s858;
[L4310]              havoc __ret_0_decreaseAllowance;
[L4311]              havoc name_s1105;
[L4312]              havoc symbol_s1105;
[L4313]              havoc decimals_s1105;
[L4314]              havoc __ret_0_name;
[L4315]              havoc __ret_0_symbol;
[L4316]              havoc __ret_0_decimals;
[L4317]              havoc __ret_0_implementation;
[L4318]              havoc arg1693_s0;
[L4319]              havoc arg1694_s0;
[L4320]              havoc __ret_0_timelockList;
[L4321]              havoc arg1695_s0;
[L4322]              havoc __ret_0_frozenAccount;
[L4323]              havoc holder_s1351;
[L4324]              havoc __ret_0_freezeAccount;
[L4325]              havoc holder_s1379;
[L4326]              havoc __ret_0_unfreezeAccount;
[L4327]              havoc holder_s1410;
[L4328]              havoc value_s1410;
[L4329]              havoc releaseTime_s1410;
[L4330]              havoc __ret_0_lock;
[L4331]              havoc holder_s1439;
[L4332]              havoc value_s1439;
[L4333]              havoc releaseTime_s1439;
[L4334]              havoc __ret_0_transferWithLock;
[L4335]              havoc holder_s1468;
[L4336]              havoc idx_s1468;
[L4337]              havoc __ret_0_unlock;
[L4338]              havoc _newImplementation_s1486;
[L4339]              havoc value_s1663;
[L4340]              havoc __ret_0_mint;
[L4341]              havoc tmpNow;
[L4342]              havoc gas;
[L4343]              assume gas > 4000000 && gas <= 8000000;
[L4344]              tmpNow := now;
[L4345]              havoc now;
[L4346]              assume now > tmpNow;
[L4347]              assume msgsender_MSG != null;
[L4348]  COND TRUE   choice == 6
[L4349]              gas := gas - 21000;
[L4350]  COND TRUE   gas >= 0
[L4351]              assume value_s1288 >= 0 && value_s1288 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4352]              assume msgvalue_MSG == 0;
[L4353]  CALL        call __ret_0_transfer := transfer~address~uint256_ONIT(this, msgsender_MSG, msgvalue_MSG, to_s1288, value_s1288);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == to_s1288 && value_s1288 > _balances_ERC20[this][msgsender_MSG]) && value_s1288 >= 0) && value_s1288 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][to_s1288] >= 0) && _balances_ERC20[this][to_s1288] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_ONIT0 := true;
[L2]                 call_transfer_ONIT0 := false;
[L2]                 revert := revert_hold;
[L871]               havoc __exception;
[L872]               revert := false;
[L873]   COND FALSE  !(__exception)
[L909]   CALL        call __ret_0_ := transfer~address~uint256_ONIT__success(this, msgsender_MSG, msgvalue_MSG, to_s1288, value_s1288);
[L2292]  CALL        call notFrozen_pre__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG);
[L3582]  COND FALSE  !(!!frozenAccount_ONIT[this][_holder_s1185])
[L2292]  RET         call notFrozen_pre__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG);
[L2293]  COND TRUE   revert
[L909]   RET         call __ret_0_ := transfer~address~uint256_ONIT__success(this, msgsender_MSG, msgvalue_MSG, to_s1288, value_s1288);
[L910]               assume !revert && gas >= 0;
[L4353]  RET         call __ret_0_transfer := transfer~address~uint256_ONIT(this, msgsender_MSG, msgvalue_MSG, to_s1288, value_s1288);
[L4400]  RET         call CorralChoice_ONIT(this);

Loop:
[L4400]        assume true;

[2020-11-24 16:02:26,168 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 16:02:26,168 INFO  L82        PathProgramCache]: Analyzing trace with hash 2029413330, now seen corresponding path program 1 times
[2020-11-24 16:02:26,169 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 16:02:26,180 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 16:02:26,204 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 16:02:26,205 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 16:02:26,205 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [5] imperfect sequences [] total 5
[2020-11-24 16:02:26,206 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 16:02:26,206 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 5 interpolants.
[2020-11-24 16:02:26,206 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=9, Invalid=11, Unknown=0, NotChecked=0, Total=20
[2020-11-24 16:02:26,207 INFO  L87              Difference]: Start difference. First operand 339 states and 397 transitions. cyclomatic complexity: 60 Second operand 5 states.
[2020-11-24 16:02:26,257 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 16:02:26,257 INFO  L93              Difference]: Finished difference Result 389 states and 443 transitions.
[2020-11-24 16:02:26,257 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-24 16:02:26,257 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 389 states and 443 transitions.
[2020-11-24 16:02:26,260 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 16:02:26,263 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 389 states to 389 states and 443 transitions.
[2020-11-24 16:02:26,263 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 167
[2020-11-24 16:02:26,263 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 167
[2020-11-24 16:02:26,263 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 389 states and 443 transitions.
[2020-11-24 16:02:26,264 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 16:02:26,264 INFO  L728         BuchiCegarLoop]: Abstraction has 389 states and 443 transitions.
[2020-11-24 16:02:26,265 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 389 states and 443 transitions.
[2020-11-24 16:02:26,273 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 389 to 385.
[2020-11-24 16:02:26,273 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 385 states.
[2020-11-24 16:02:26,274 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 385 states to 385 states and 439 transitions.
[2020-11-24 16:02:26,274 INFO  L751         BuchiCegarLoop]: Abstraction has 385 states and 439 transitions.
[2020-11-24 16:02:26,274 INFO  L631         BuchiCegarLoop]: Abstraction has 385 states and 439 transitions.
[2020-11-24 16:02:26,274 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-24 16:02:26,274 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 385 states and 439 transitions.
[2020-11-24 16:02:26,275 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 16:02:26,276 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 16:02:26,276 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 16:02:26,277 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 16:02:26,277 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L2]                 fail_transfer_ONIT0 := false;
[L2]                 call_transfer_ONIT0 := false;
[L2]     CALL        call main();
[L4395]              assume null == 0;
[L4396]  CALL        call this := FreshRefGenerator__success();
[L1636]              havoc newRef;
[L1637]              assume Alloc[newRef] == false;
[L1638]              Alloc[newRef] := true;
[L1639]              assume newRef != null;
[L4396]  RET         call this := FreshRefGenerator__success();
[L4397]              assume now >= 0;
[L4398]              assume DType[this] == ONIT;
[L4399]              assume !revert && gas >= 0;
[L4400]  CALL        call CorralChoice_ONIT(this);
[L4275]              havoc msgsender_MSG;
[L4276]              havoc msgvalue_MSG;
[L4277]              havoc choice;
[L4278]              havoc __ret_0_owner;
[L4279]              havoc __ret_0_newOwner;
[L4280]              havoc account_s293;
[L4281]              havoc __ret_0_isOwner;
[L4282]              havoc _newOwner_s313;
[L4283]              havoc __ret_0_acceptOwnership;
[L4284]              havoc account_s390;
[L4285]              havoc __ret_0_isPauser;
[L4286]              havoc account_s402;
[L4287]              havoc account_s414;
[L4288]              havoc __ret_0_paused;
[L4289]              havoc to_s1288;
[L4290]              havoc value_s1288;
[L4291]              havoc __ret_0_transfer;
[L4292]              havoc spender_s711;
[L4293]              havoc value_s711;
[L4294]              havoc __ret_0_approve;
[L4295]              havoc from_s1322;
[L4296]              havoc to_s1322;
[L4297]              havoc value_s1322;
[L4298]              havoc __ret_0_transferFrom;
[L4299]              havoc __ret_0_totalSupply;
[L4300]              havoc owner_s1254;
[L4301]              havoc __ret_0_balanceOf;
[L4302]              havoc owner_s656;
[L4303]              havoc spender_s656;
[L4304]              havoc __ret_0_allowance;
[L4305]              havoc spender_s809;
[L4306]              havoc addedValue_s809;
[L4307]              havoc __ret_0_increaseAllowance;
[L4308]              havoc spender_s858;
[L4309]              havoc subtractedValue_s858;
[L4310]              havoc __ret_0_decreaseAllowance;
[L4311]              havoc name_s1105;
[L4312]              havoc symbol_s1105;
[L4313]              havoc decimals_s1105;
[L4314]              havoc __ret_0_name;
[L4315]              havoc __ret_0_symbol;
[L4316]              havoc __ret_0_decimals;
[L4317]              havoc __ret_0_implementation;
[L4318]              havoc arg1693_s0;
[L4319]              havoc arg1694_s0;
[L4320]              havoc __ret_0_timelockList;
[L4321]              havoc arg1695_s0;
[L4322]              havoc __ret_0_frozenAccount;
[L4323]              havoc holder_s1351;
[L4324]              havoc __ret_0_freezeAccount;
[L4325]              havoc holder_s1379;
[L4326]              havoc __ret_0_unfreezeAccount;
[L4327]              havoc holder_s1410;
[L4328]              havoc value_s1410;
[L4329]              havoc releaseTime_s1410;
[L4330]              havoc __ret_0_lock;
[L4331]              havoc holder_s1439;
[L4332]              havoc value_s1439;
[L4333]              havoc releaseTime_s1439;
[L4334]              havoc __ret_0_transferWithLock;
[L4335]              havoc holder_s1468;
[L4336]              havoc idx_s1468;
[L4337]              havoc __ret_0_unlock;
[L4338]              havoc _newImplementation_s1486;
[L4339]              havoc value_s1663;
[L4340]              havoc __ret_0_mint;
[L4341]              havoc tmpNow;
[L4342]              havoc gas;
[L4343]              assume gas > 4000000 && gas <= 8000000;
[L4344]              tmpNow := now;
[L4345]              havoc now;
[L4346]              assume now > tmpNow;
[L4347]              assume msgsender_MSG != null;
[L4348]  COND TRUE   choice == 6
[L4349]              gas := gas - 21000;
[L4350]  COND TRUE   gas >= 0
[L4351]              assume value_s1288 >= 0 && value_s1288 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4352]              assume msgvalue_MSG == 0;
[L4353]  CALL        call __ret_0_transfer := transfer~address~uint256_ONIT(this, msgsender_MSG, msgvalue_MSG, to_s1288, value_s1288);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == to_s1288 && value_s1288 > _balances_ERC20[this][msgsender_MSG]) && value_s1288 >= 0) && value_s1288 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][to_s1288] >= 0) && _balances_ERC20[this][to_s1288] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_ONIT0 := true;
[L2]                 call_transfer_ONIT0 := false;
[L2]                 revert := revert_hold;
[L871]               havoc __exception;
[L872]               revert := false;
[L873]   COND FALSE  !(__exception)
[L909]   CALL        call __ret_0_ := transfer~address~uint256_ONIT__success(this, msgsender_MSG, msgvalue_MSG, to_s1288, value_s1288);
[L2292]  CALL        call notFrozen_pre__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG);
[L3582]  COND TRUE   !!frozenAccount_ONIT[this][_holder_s1185]
[L3583]              revert := true;
[L2292]  RET         call notFrozen_pre__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG);
[L2293]  COND TRUE   revert
[L909]   RET         call __ret_0_ := transfer~address~uint256_ONIT__success(this, msgsender_MSG, msgvalue_MSG, to_s1288, value_s1288);
[L910]               assume !revert && gas >= 0;
[L4353]  RET         call __ret_0_transfer := transfer~address~uint256_ONIT(this, msgsender_MSG, msgvalue_MSG, to_s1288, value_s1288);
[L4400]  RET         call CorralChoice_ONIT(this);

Loop:
[L4400]        assume true;

[2020-11-24 16:02:26,279 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 16:02:26,279 INFO  L82        PathProgramCache]: Analyzing trace with hash 402485024, now seen corresponding path program 1 times
[2020-11-24 16:02:26,280 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 16:02:26,288 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 16:02:26,307 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 16:02:26,307 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 16:02:26,307 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-24 16:02:26,307 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 16:02:26,307 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-24 16:02:26,307 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-24 16:02:26,308 INFO  L87              Difference]: Start difference. First operand 385 states and 439 transitions. cyclomatic complexity: 56 Second operand 3 states.
[2020-11-24 16:02:26,319 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 16:02:26,319 INFO  L93              Difference]: Finished difference Result 389 states and 428 transitions.
[2020-11-24 16:02:26,319 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-24 16:02:26,319 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 389 states and 428 transitions.
[2020-11-24 16:02:26,321 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 16:02:26,323 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 389 states to 334 states and 364 transitions.
[2020-11-24 16:02:26,323 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 142
[2020-11-24 16:02:26,323 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 142
[2020-11-24 16:02:26,323 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 334 states and 364 transitions.
[2020-11-24 16:02:26,324 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 16:02:26,324 INFO  L728         BuchiCegarLoop]: Abstraction has 334 states and 364 transitions.
[2020-11-24 16:02:26,325 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 334 states and 364 transitions.
[2020-11-24 16:02:26,328 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 334 to 334.
[2020-11-24 16:02:26,328 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 334 states.
[2020-11-24 16:02:26,329 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 334 states to 334 states and 364 transitions.
[2020-11-24 16:02:26,329 INFO  L751         BuchiCegarLoop]: Abstraction has 334 states and 364 transitions.
[2020-11-24 16:02:26,329 INFO  L631         BuchiCegarLoop]: Abstraction has 334 states and 364 transitions.
[2020-11-24 16:02:26,329 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-24 16:02:26,329 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 334 states and 364 transitions.
[2020-11-24 16:02:26,330 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 16:02:26,330 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 16:02:26,330 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 16:02:26,331 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 16:02:26,331 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L2]                 fail_transfer_ONIT0 := false;
[L2]                 call_transfer_ONIT0 := false;
[L2]     CALL        call main();
[L4395]              assume null == 0;
[L4396]  CALL        call this := FreshRefGenerator__success();
[L1636]              havoc newRef;
[L1637]              assume Alloc[newRef] == false;
[L1638]              Alloc[newRef] := true;
[L1639]              assume newRef != null;
[L4396]  RET         call this := FreshRefGenerator__success();
[L4397]              assume now >= 0;
[L4398]              assume DType[this] == ONIT;
[L4399]              assume !revert && gas >= 0;
[L4400]  CALL        call CorralChoice_ONIT(this);
[L4275]              havoc msgsender_MSG;
[L4276]              havoc msgvalue_MSG;
[L4277]              havoc choice;
[L4278]              havoc __ret_0_owner;
[L4279]              havoc __ret_0_newOwner;
[L4280]              havoc account_s293;
[L4281]              havoc __ret_0_isOwner;
[L4282]              havoc _newOwner_s313;
[L4283]              havoc __ret_0_acceptOwnership;
[L4284]              havoc account_s390;
[L4285]              havoc __ret_0_isPauser;
[L4286]              havoc account_s402;
[L4287]              havoc account_s414;
[L4288]              havoc __ret_0_paused;
[L4289]              havoc to_s1288;
[L4290]              havoc value_s1288;
[L4291]              havoc __ret_0_transfer;
[L4292]              havoc spender_s711;
[L4293]              havoc value_s711;
[L4294]              havoc __ret_0_approve;
[L4295]              havoc from_s1322;
[L4296]              havoc to_s1322;
[L4297]              havoc value_s1322;
[L4298]              havoc __ret_0_transferFrom;
[L4299]              havoc __ret_0_totalSupply;
[L4300]              havoc owner_s1254;
[L4301]              havoc __ret_0_balanceOf;
[L4302]              havoc owner_s656;
[L4303]              havoc spender_s656;
[L4304]              havoc __ret_0_allowance;
[L4305]              havoc spender_s809;
[L4306]              havoc addedValue_s809;
[L4307]              havoc __ret_0_increaseAllowance;
[L4308]              havoc spender_s858;
[L4309]              havoc subtractedValue_s858;
[L4310]              havoc __ret_0_decreaseAllowance;
[L4311]              havoc name_s1105;
[L4312]              havoc symbol_s1105;
[L4313]              havoc decimals_s1105;
[L4314]              havoc __ret_0_name;
[L4315]              havoc __ret_0_symbol;
[L4316]              havoc __ret_0_decimals;
[L4317]              havoc __ret_0_implementation;
[L4318]              havoc arg1693_s0;
[L4319]              havoc arg1694_s0;
[L4320]              havoc __ret_0_timelockList;
[L4321]              havoc arg1695_s0;
[L4322]              havoc __ret_0_frozenAccount;
[L4323]              havoc holder_s1351;
[L4324]              havoc __ret_0_freezeAccount;
[L4325]              havoc holder_s1379;
[L4326]              havoc __ret_0_unfreezeAccount;
[L4327]              havoc holder_s1410;
[L4328]              havoc value_s1410;
[L4329]              havoc releaseTime_s1410;
[L4330]              havoc __ret_0_lock;
[L4331]              havoc holder_s1439;
[L4332]              havoc value_s1439;
[L4333]              havoc releaseTime_s1439;
[L4334]              havoc __ret_0_transferWithLock;
[L4335]              havoc holder_s1468;
[L4336]              havoc idx_s1468;
[L4337]              havoc __ret_0_unlock;
[L4338]              havoc _newImplementation_s1486;
[L4339]              havoc value_s1663;
[L4340]              havoc __ret_0_mint;
[L4341]              havoc tmpNow;
[L4342]              havoc gas;
[L4343]              assume gas > 4000000 && gas <= 8000000;
[L4344]              tmpNow := now;
[L4345]              havoc now;
[L4346]              assume now > tmpNow;
[L4347]              assume msgsender_MSG != null;
[L4348]  COND TRUE   choice == 6
[L4349]              gas := gas - 21000;
[L4350]  COND TRUE   gas >= 0
[L4351]              assume value_s1288 >= 0 && value_s1288 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4352]              assume msgvalue_MSG == 0;
[L4353]  CALL        call __ret_0_transfer := transfer~address~uint256_ONIT(this, msgsender_MSG, msgvalue_MSG, to_s1288, value_s1288);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == to_s1288 && value_s1288 > _balances_ERC20[this][msgsender_MSG]) && value_s1288 >= 0) && value_s1288 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][to_s1288] >= 0) && _balances_ERC20[this][to_s1288] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_ONIT0 := true;
[L2]                 call_transfer_ONIT0 := false;
[L2]                 revert := revert_hold;
[L871]               havoc __exception;
[L872]               revert := false;
[L873]   COND FALSE  !(__exception)
[L909]   CALL        call __ret_0_ := transfer~address~uint256_ONIT__success(this, msgsender_MSG, msgvalue_MSG, to_s1288, value_s1288);
[L2292]  CALL        call notFrozen_pre__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG);
[L3582]  COND FALSE  !(!!frozenAccount_ONIT[this][_holder_s1185])
[L2292]  RET         call notFrozen_pre__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG);
[L2293]  COND FALSE  !(revert)
[L2296]  COND FALSE  !(alloc_timelockList_ONIT_lvl0[timelockList_ONIT[this]][msgsender_MSG] == false)
[L2307]  COND FALSE  !(Length[M_Ref_Ref[timelockList_ONIT[this]][msgsender_MSG]] > 0)
[L2313]  COND TRUE   DType[this] == ONIT
[L2314]  CALL        call __var_20 := transfer~address~uint256_ERC20Pausable__success(this, msgsender_MSG, msgvalue_MSG, to_s1288, value_s1288);
[L2038]  CALL        call whenNotPaused_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L3558]  COND FALSE  !(!!_paused_Pausable[this])
[L2038]  RET         call whenNotPaused_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L2039]  COND FALSE  !(revert)
[L2042]  COND TRUE   DType[this] == ONIT
[L2043]  CALL        call __var_9 := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, to_s1053, value_s1053);
[L1838]  COND TRUE   DType[this] == ONIT
[L1839]  CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s675, value_s675);
[L1987]              __var_6 := null;
[L1988]  COND FALSE  !(!(to_s904 != null))
[L1992]  CALL        call __var_7 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][from_s904], value_s904);
[L1679]  COND FALSE  !(!(b_s82 <= a_s82))
[L1683]              c_s82 := (a_s82 - b_s82) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1684]              __ret_0_ := c_s82;
[L1992]  RET         call __var_7 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][from_s904], value_s904);
[L1993]  COND FALSE  !(revert)
[L1996]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][from_s904];
[L1997]              _balances_ERC20[this][from_s904] := __var_7;
[L1998]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][from_s904];
[L1999]  CALL        call __var_8 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][to_s904], value_s904);
[L1703]              c_s106 := (a_s106 + b_s106) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1704]  COND FALSE  !(!(c_s106 >= a_s106))
[L1708]              __ret_0_ := c_s106;
[L1999]  RET         call __var_8 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][to_s904], value_s904);
[L2000]  COND FALSE  !(revert)
[L2003]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][to_s904];
[L2004]              _balances_ERC20[this][to_s904] := __var_8;
[L2005]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][to_s904];
[L2006]              assert { :EventEmitted "Transfer_ERC20" } true;
[L1839]  RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s675, value_s675);
[L1840]  COND FALSE  !(revert)
[L1856]              __ret_0_ := true;
[L2043]  RET         call __var_9 := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, to_s1053, value_s1053);
[L2044]  COND FALSE  !(revert)
[L2055]              __ret_0_ := __var_9;
[L2314]  RET         call __var_20 := transfer~address~uint256_ERC20Pausable__success(this, msgsender_MSG, msgvalue_MSG, to_s1288, value_s1288);
[L2315]  COND FALSE  !(revert)
[L2321]              __ret_0_ := __var_20;
[L909]   RET         call __ret_0_ := transfer~address~uint256_ONIT__success(this, msgsender_MSG, msgvalue_MSG, to_s1288, value_s1288);
[L910]               assume !revert && gas >= 0;
[L4353]  RET         call __ret_0_transfer := transfer~address~uint256_ONIT(this, msgsender_MSG, msgvalue_MSG, to_s1288, value_s1288);
[L4400]  RET         call CorralChoice_ONIT(this);

Loop:
[L4400]        assume true;

[2020-11-24 16:02:26,333 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 16:02:26,333 INFO  L82        PathProgramCache]: Analyzing trace with hash -977948922, now seen corresponding path program 1 times
[2020-11-24 16:02:26,334 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 16:02:26,343 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 16:02:26,428 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 16:02:26,428 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 16:02:26,428 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [10] imperfect sequences [] total 10
[2020-11-24 16:02:26,429 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 16:02:26,429 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 10 interpolants.
[2020-11-24 16:02:26,429 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=19, Invalid=71, Unknown=0, NotChecked=0, Total=90
[2020-11-24 16:02:26,429 INFO  L87              Difference]: Start difference. First operand 334 states and 364 transitions. cyclomatic complexity: 32 Second operand 10 states.
[2020-11-24 16:02:26,608 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 16:02:26,608 INFO  L93              Difference]: Finished difference Result 360 states and 396 transitions.
[2020-11-24 16:02:26,608 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 10 states. 
[2020-11-24 16:02:26,608 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 360 states and 396 transitions.
[2020-11-24 16:02:26,610 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 16:02:26,611 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 360 states to 348 states and 381 transitions.
[2020-11-24 16:02:26,611 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 142
[2020-11-24 16:02:26,611 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 142
[2020-11-24 16:02:26,611 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 348 states and 381 transitions.
[2020-11-24 16:02:26,612 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 16:02:26,612 INFO  L728         BuchiCegarLoop]: Abstraction has 348 states and 381 transitions.
[2020-11-24 16:02:26,612 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 348 states and 381 transitions.
[2020-11-24 16:02:26,616 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 348 to 347.
[2020-11-24 16:02:26,616 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 347 states.
[2020-11-24 16:02:26,616 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 347 states to 347 states and 379 transitions.
[2020-11-24 16:02:26,616 INFO  L751         BuchiCegarLoop]: Abstraction has 347 states and 379 transitions.
[2020-11-24 16:02:26,616 INFO  L631         BuchiCegarLoop]: Abstraction has 347 states and 379 transitions.
[2020-11-24 16:02:26,616 INFO  L445         BuchiCegarLoop]: ======== Iteration 5============
[2020-11-24 16:02:26,616 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 347 states and 379 transitions.
[2020-11-24 16:02:26,617 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 16:02:26,617 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 16:02:26,617 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 16:02:26,619 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 16:02:26,619 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L2]                 fail_transfer_ONIT0 := false;
[L2]                 call_transfer_ONIT0 := false;
[L2]     CALL        call main();
[L4395]              assume null == 0;
[L4396]  CALL        call this := FreshRefGenerator__success();
[L1636]              havoc newRef;
[L1637]              assume Alloc[newRef] == false;
[L1638]              Alloc[newRef] := true;
[L1639]              assume newRef != null;
[L4396]  RET         call this := FreshRefGenerator__success();
[L4397]              assume now >= 0;
[L4398]              assume DType[this] == ONIT;
[L4399]              assume !revert && gas >= 0;
[L4400]  CALL        call CorralChoice_ONIT(this);
[L4275]              havoc msgsender_MSG;
[L4276]              havoc msgvalue_MSG;
[L4277]              havoc choice;
[L4278]              havoc __ret_0_owner;
[L4279]              havoc __ret_0_newOwner;
[L4280]              havoc account_s293;
[L4281]              havoc __ret_0_isOwner;
[L4282]              havoc _newOwner_s313;
[L4283]              havoc __ret_0_acceptOwnership;
[L4284]              havoc account_s390;
[L4285]              havoc __ret_0_isPauser;
[L4286]              havoc account_s402;
[L4287]              havoc account_s414;
[L4288]              havoc __ret_0_paused;
[L4289]              havoc to_s1288;
[L4290]              havoc value_s1288;
[L4291]              havoc __ret_0_transfer;
[L4292]              havoc spender_s711;
[L4293]              havoc value_s711;
[L4294]              havoc __ret_0_approve;
[L4295]              havoc from_s1322;
[L4296]              havoc to_s1322;
[L4297]              havoc value_s1322;
[L4298]              havoc __ret_0_transferFrom;
[L4299]              havoc __ret_0_totalSupply;
[L4300]              havoc owner_s1254;
[L4301]              havoc __ret_0_balanceOf;
[L4302]              havoc owner_s656;
[L4303]              havoc spender_s656;
[L4304]              havoc __ret_0_allowance;
[L4305]              havoc spender_s809;
[L4306]              havoc addedValue_s809;
[L4307]              havoc __ret_0_increaseAllowance;
[L4308]              havoc spender_s858;
[L4309]              havoc subtractedValue_s858;
[L4310]              havoc __ret_0_decreaseAllowance;
[L4311]              havoc name_s1105;
[L4312]              havoc symbol_s1105;
[L4313]              havoc decimals_s1105;
[L4314]              havoc __ret_0_name;
[L4315]              havoc __ret_0_symbol;
[L4316]              havoc __ret_0_decimals;
[L4317]              havoc __ret_0_implementation;
[L4318]              havoc arg1693_s0;
[L4319]              havoc arg1694_s0;
[L4320]              havoc __ret_0_timelockList;
[L4321]              havoc arg1695_s0;
[L4322]              havoc __ret_0_frozenAccount;
[L4323]              havoc holder_s1351;
[L4324]              havoc __ret_0_freezeAccount;
[L4325]              havoc holder_s1379;
[L4326]              havoc __ret_0_unfreezeAccount;
[L4327]              havoc holder_s1410;
[L4328]              havoc value_s1410;
[L4329]              havoc releaseTime_s1410;
[L4330]              havoc __ret_0_lock;
[L4331]              havoc holder_s1439;
[L4332]              havoc value_s1439;
[L4333]              havoc releaseTime_s1439;
[L4334]              havoc __ret_0_transferWithLock;
[L4335]              havoc holder_s1468;
[L4336]              havoc idx_s1468;
[L4337]              havoc __ret_0_unlock;
[L4338]              havoc _newImplementation_s1486;
[L4339]              havoc value_s1663;
[L4340]              havoc __ret_0_mint;
[L4341]              havoc tmpNow;
[L4342]              havoc gas;
[L4343]              assume gas > 4000000 && gas <= 8000000;
[L4344]              tmpNow := now;
[L4345]              havoc now;
[L4346]              assume now > tmpNow;
[L4347]              assume msgsender_MSG != null;
[L4348]  COND TRUE   choice == 6
[L4349]              gas := gas - 21000;
[L4350]  COND TRUE   gas >= 0
[L4351]              assume value_s1288 >= 0 && value_s1288 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4352]              assume msgvalue_MSG == 0;
[L4353]  CALL        call __ret_0_transfer := transfer~address~uint256_ONIT(this, msgsender_MSG, msgvalue_MSG, to_s1288, value_s1288);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == to_s1288 && value_s1288 > _balances_ERC20[this][msgsender_MSG]) && value_s1288 >= 0) && value_s1288 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][to_s1288] >= 0) && _balances_ERC20[this][to_s1288] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_ONIT0 := true;
[L2]                 call_transfer_ONIT0 := false;
[L2]                 revert := revert_hold;
[L871]               havoc __exception;
[L872]               revert := false;
[L873]   COND FALSE  !(__exception)
[L909]   CALL        call __ret_0_ := transfer~address~uint256_ONIT__success(this, msgsender_MSG, msgvalue_MSG, to_s1288, value_s1288);
[L2292]  CALL        call notFrozen_pre__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG);
[L3582]  COND FALSE  !(!!frozenAccount_ONIT[this][_holder_s1185])
[L2292]  RET         call notFrozen_pre__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG);
[L2293]  COND FALSE  !(revert)
[L2296]  COND FALSE  !(alloc_timelockList_ONIT_lvl0[timelockList_ONIT[this]][msgsender_MSG] == false)
[L2307]  COND TRUE   Length[M_Ref_Ref[timelockList_ONIT[this]][msgsender_MSG]] > 0
[L2308]  CALL        call __var_19 := _autoUnlock~address_ONIT__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG);
[L2653]  COND FALSE  !(alloc_timelockList_ONIT_lvl0[timelockList_ONIT[this]][holder_s1645] == false)
[L2664]              idx_s1645 := 0;
[L2665]  COND TRUE   idx_s1645 < Length[M_Ref_Ref[timelockList_ONIT[this]][holder_s1645]]
[L2667]  COND FALSE  !(alloc_timelockList_ONIT_lvl0[timelockList_ONIT[this]][holder_s1645] == false)
[L2678]  COND TRUE   _releaseTime_ONIT.LockInfo[M_int_Ref[M_Ref_Ref[timelockList_ONIT[this]][holder_s1645]][idx_s1645]] <= now
[L2679]  CALL        call __var_36 := _unlock~address~uint256_ONIT__success(this, msgsender_MSG, msgvalue_MSG, holder_s1645, idx_s1645);
[L2512]  COND FALSE  !(alloc_timelockList_ONIT_lvl0[timelockList_ONIT[this]][holder_s1600] == false)
[L2523]              lockinfo_s1600 := M_int_Ref[M_Ref_Ref[timelockList_ONIT[this]][holder_s1600]][idx_s1600];
[L2524]              releaseAmount_s1600 := _amount_ONIT.LockInfo[lockinfo_s1600];
[L2525]  COND FALSE  !(alloc_timelockList_ONIT_lvl0[timelockList_ONIT[this]][holder_s1600] == false)
[L2536]  COND FALSE  !(alloc_timelockList_ONIT_lvl0[timelockList_ONIT[this]][holder_s1600] == false)
[L2547]  COND FALSE  !(alloc_timelockList_ONIT_lvl0[timelockList_ONIT[this]][holder_s1600] == false)
[L2558]  CALL        call __var_29 := sub~uint256~uint256_SafeMath__success(this, this, 0, Length[M_Ref_Ref[timelockList_ONIT[this]][holder_s1600]], 1);
[L1679]  COND FALSE  !(!(b_s82 <= a_s82))
[L1683]              c_s82 := (a_s82 - b_s82) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1684]              __ret_0_ := c_s82;
[L2558]  RET         call __var_29 := sub~uint256~uint256_SafeMath__success(this, this, 0, Length[M_Ref_Ref[timelockList_ONIT[this]][holder_s1600]], 1);
[L2559]  COND FALSE  !(revert)
[L2562]  COND FALSE  !(alloc_timelockList_ONIT_lvl0[timelockList_ONIT[this]][holder_s1600] == false)
[L2573]              M_int_Ref[M_Ref_Ref[timelockList_ONIT[this]][holder_s1600]][idx_s1600] := M_int_Ref[M_Ref_Ref[timelockList_ONIT[this]][holder_s1600]][__var_29];
[L2574]  COND FALSE  !(alloc_timelockList_ONIT_lvl0[timelockList_ONIT[this]][holder_s1600] == false)
[L2585]              Length[M_Ref_Ref[timelockList_ONIT[this]][holder_s1600]] := (Length[M_Ref_Ref[timelockList_ONIT[this]][holder_s1600]] - 1) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2586]              assert { :EventEmitted "Unlock_ONIT" } true;
[L2587]  CALL        call __var_33 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][holder_s1600], releaseAmount_s1600);
[L1703]              c_s106 := (a_s106 + b_s106) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1704]  COND FALSE  !(!(c_s106 >= a_s106))
[L1708]              __ret_0_ := c_s106;
[L2587]  RET         call __var_33 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][holder_s1600], releaseAmount_s1600);
[L2588]  COND FALSE  !(revert)
[L2591]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][holder_s1600];
[L2592]              _balances_ERC20[this][holder_s1600] := __var_33;
[L2593]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][holder_s1600];
[L2594]              __ret_0_ := true;
[L2679]  RET         call __var_36 := _unlock~address~uint256_ONIT__success(this, msgsender_MSG, msgvalue_MSG, holder_s1645, idx_s1645);
[L2680]  COND FALSE  !(revert)
[L2683]  COND FALSE  !(__var_36)
[L2687]              idx_s1645 := (idx_s1645 + 1) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2688]  COND TRUE   gas < 0
[L2308]  RET         call __var_19 := _autoUnlock~address_ONIT__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG);
[L2309]  COND FALSE  !(revert)
[L2313]  COND TRUE   DType[this] == ONIT
[L2314]  CALL        call __var_20 := transfer~address~uint256_ERC20Pausable__success(this, msgsender_MSG, msgvalue_MSG, to_s1288, value_s1288);
[L2038]  CALL        call whenNotPaused_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L3558]  COND FALSE  !(!!_paused_Pausable[this])
[L2038]  RET         call whenNotPaused_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L2039]  COND FALSE  !(revert)
[L2042]  COND TRUE   DType[this] == ONIT
[L2043]  CALL        call __var_9 := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, to_s1053, value_s1053);
[L1838]  COND TRUE   DType[this] == ONIT
[L1839]  CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s675, value_s675);
[L1987]              __var_6 := null;
[L1988]  COND FALSE  !(!(to_s904 != null))
[L1992]  CALL        call __var_7 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][from_s904], value_s904);
[L1679]  COND FALSE  !(!(b_s82 <= a_s82))
[L1683]              c_s82 := (a_s82 - b_s82) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1684]              __ret_0_ := c_s82;
[L1992]  RET         call __var_7 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][from_s904], value_s904);
[L1993]  COND FALSE  !(revert)
[L1996]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][from_s904];
[L1997]              _balances_ERC20[this][from_s904] := __var_7;
[L1998]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][from_s904];
[L1999]  CALL        call __var_8 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][to_s904], value_s904);
[L1703]              c_s106 := (a_s106 + b_s106) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1704]  COND FALSE  !(!(c_s106 >= a_s106))
[L1708]              __ret_0_ := c_s106;
[L1999]  RET         call __var_8 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][to_s904], value_s904);
[L2000]  COND FALSE  !(revert)
[L2003]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][to_s904];
[L2004]              _balances_ERC20[this][to_s904] := __var_8;
[L2005]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][to_s904];
[L2006]              assert { :EventEmitted "Transfer_ERC20" } true;
[L1839]  RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s675, value_s675);
[L1840]  COND FALSE  !(revert)
[L1856]              __ret_0_ := true;
[L2043]  RET         call __var_9 := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, to_s1053, value_s1053);
[L2044]  COND FALSE  !(revert)
[L2055]              __ret_0_ := __var_9;
[L2314]  RET         call __var_20 := transfer~address~uint256_ERC20Pausable__success(this, msgsender_MSG, msgvalue_MSG, to_s1288, value_s1288);
[L2315]  COND FALSE  !(revert)
[L2321]              __ret_0_ := __var_20;
[L909]   RET         call __ret_0_ := transfer~address~uint256_ONIT__success(this, msgsender_MSG, msgvalue_MSG, to_s1288, value_s1288);
[L910]               assume !revert && gas >= 0;
[L4353]  RET         call __ret_0_transfer := transfer~address~uint256_ONIT(this, msgsender_MSG, msgvalue_MSG, to_s1288, value_s1288);
[L4400]  RET         call CorralChoice_ONIT(this);

Loop:
[L4400]        assume true;

[2020-11-24 16:02:26,621 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 16:02:26,621 INFO  L82        PathProgramCache]: Analyzing trace with hash -1819596641, now seen corresponding path program 1 times
[2020-11-24 16:02:26,622 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 16:02:26,631 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 16:02:26,663 INFO  L134       CoverageAnalysis]: Checked inductivity of 10 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 10 trivial. 0 not checked.
[2020-11-24 16:02:26,663 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 16:02:26,663 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-24 16:02:26,663 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 16:02:26,663 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-24 16:02:26,664 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-24 16:02:26,664 INFO  L87              Difference]: Start difference. First operand 347 states and 379 transitions. cyclomatic complexity: 35 Second operand 4 states.
[2020-11-24 16:02:26,687 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 16:02:26,687 INFO  L93              Difference]: Finished difference Result 347 states and 378 transitions.
[2020-11-24 16:02:26,687 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-24 16:02:26,687 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 347 states and 378 transitions.
[2020-11-24 16:02:26,688 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 16:02:26,689 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 347 states to 347 states and 378 transitions.
[2020-11-24 16:02:26,689 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 142
[2020-11-24 16:02:26,690 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 142
[2020-11-24 16:02:26,690 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 347 states and 378 transitions.
[2020-11-24 16:02:26,690 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 16:02:26,690 INFO  L728         BuchiCegarLoop]: Abstraction has 347 states and 378 transitions.
[2020-11-24 16:02:26,690 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 347 states and 378 transitions.
[2020-11-24 16:02:26,693 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 347 to 347.
[2020-11-24 16:02:26,693 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 347 states.
[2020-11-24 16:02:26,693 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 347 states to 347 states and 378 transitions.
[2020-11-24 16:02:26,694 INFO  L751         BuchiCegarLoop]: Abstraction has 347 states and 378 transitions.
[2020-11-24 16:02:26,694 INFO  L631         BuchiCegarLoop]: Abstraction has 347 states and 378 transitions.
[2020-11-24 16:02:26,694 INFO  L445         BuchiCegarLoop]: ======== Iteration 6============
[2020-11-24 16:02:26,694 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 347 states and 378 transitions.
[2020-11-24 16:02:26,694 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 16:02:26,695 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 16:02:26,695 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 16:02:26,696 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 16:02:26,696 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L2]                 fail_transfer_ONIT0 := false;
[L2]                 call_transfer_ONIT0 := false;
[L2]     CALL        call main();
[L4395]              assume null == 0;
[L4396]  CALL        call this := FreshRefGenerator__success();
[L1636]              havoc newRef;
[L1637]              assume Alloc[newRef] == false;
[L1638]              Alloc[newRef] := true;
[L1639]              assume newRef != null;
[L4396]  RET         call this := FreshRefGenerator__success();
[L4397]              assume now >= 0;
[L4398]              assume DType[this] == ONIT;
[L4399]              assume !revert && gas >= 0;
[L4400]  CALL        call CorralChoice_ONIT(this);
[L4275]              havoc msgsender_MSG;
[L4276]              havoc msgvalue_MSG;
[L4277]              havoc choice;
[L4278]              havoc __ret_0_owner;
[L4279]              havoc __ret_0_newOwner;
[L4280]              havoc account_s293;
[L4281]              havoc __ret_0_isOwner;
[L4282]              havoc _newOwner_s313;
[L4283]              havoc __ret_0_acceptOwnership;
[L4284]              havoc account_s390;
[L4285]              havoc __ret_0_isPauser;
[L4286]              havoc account_s402;
[L4287]              havoc account_s414;
[L4288]              havoc __ret_0_paused;
[L4289]              havoc to_s1288;
[L4290]              havoc value_s1288;
[L4291]              havoc __ret_0_transfer;
[L4292]              havoc spender_s711;
[L4293]              havoc value_s711;
[L4294]              havoc __ret_0_approve;
[L4295]              havoc from_s1322;
[L4296]              havoc to_s1322;
[L4297]              havoc value_s1322;
[L4298]              havoc __ret_0_transferFrom;
[L4299]              havoc __ret_0_totalSupply;
[L4300]              havoc owner_s1254;
[L4301]              havoc __ret_0_balanceOf;
[L4302]              havoc owner_s656;
[L4303]              havoc spender_s656;
[L4304]              havoc __ret_0_allowance;
[L4305]              havoc spender_s809;
[L4306]              havoc addedValue_s809;
[L4307]              havoc __ret_0_increaseAllowance;
[L4308]              havoc spender_s858;
[L4309]              havoc subtractedValue_s858;
[L4310]              havoc __ret_0_decreaseAllowance;
[L4311]              havoc name_s1105;
[L4312]              havoc symbol_s1105;
[L4313]              havoc decimals_s1105;
[L4314]              havoc __ret_0_name;
[L4315]              havoc __ret_0_symbol;
[L4316]              havoc __ret_0_decimals;
[L4317]              havoc __ret_0_implementation;
[L4318]              havoc arg1693_s0;
[L4319]              havoc arg1694_s0;
[L4320]              havoc __ret_0_timelockList;
[L4321]              havoc arg1695_s0;
[L4322]              havoc __ret_0_frozenAccount;
[L4323]              havoc holder_s1351;
[L4324]              havoc __ret_0_freezeAccount;
[L4325]              havoc holder_s1379;
[L4326]              havoc __ret_0_unfreezeAccount;
[L4327]              havoc holder_s1410;
[L4328]              havoc value_s1410;
[L4329]              havoc releaseTime_s1410;
[L4330]              havoc __ret_0_lock;
[L4331]              havoc holder_s1439;
[L4332]              havoc value_s1439;
[L4333]              havoc releaseTime_s1439;
[L4334]              havoc __ret_0_transferWithLock;
[L4335]              havoc holder_s1468;
[L4336]              havoc idx_s1468;
[L4337]              havoc __ret_0_unlock;
[L4338]              havoc _newImplementation_s1486;
[L4339]              havoc value_s1663;
[L4340]              havoc __ret_0_mint;
[L4341]              havoc tmpNow;
[L4342]              havoc gas;
[L4343]              assume gas > 4000000 && gas <= 8000000;
[L4344]              tmpNow := now;
[L4345]              havoc now;
[L4346]              assume now > tmpNow;
[L4347]              assume msgsender_MSG != null;
[L4348]  COND TRUE   choice == 6
[L4349]              gas := gas - 21000;
[L4350]  COND TRUE   gas >= 0
[L4351]              assume value_s1288 >= 0 && value_s1288 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4352]              assume msgvalue_MSG == 0;
[L4353]  CALL        call __ret_0_transfer := transfer~address~uint256_ONIT(this, msgsender_MSG, msgvalue_MSG, to_s1288, value_s1288);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == to_s1288 && value_s1288 > _balances_ERC20[this][msgsender_MSG]) && value_s1288 >= 0) && value_s1288 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][to_s1288] >= 0) && _balances_ERC20[this][to_s1288] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_ONIT0 := true;
[L2]                 call_transfer_ONIT0 := false;
[L2]                 revert := revert_hold;
[L871]               havoc __exception;
[L872]               revert := false;
[L873]   COND FALSE  !(__exception)
[L909]   CALL        call __ret_0_ := transfer~address~uint256_ONIT__success(this, msgsender_MSG, msgvalue_MSG, to_s1288, value_s1288);
[L2292]  CALL        call notFrozen_pre__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG);
[L3582]  COND FALSE  !(!!frozenAccount_ONIT[this][_holder_s1185])
[L2292]  RET         call notFrozen_pre__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG);
[L2293]  COND FALSE  !(revert)
[L2296]  COND FALSE  !(alloc_timelockList_ONIT_lvl0[timelockList_ONIT[this]][msgsender_MSG] == false)
[L2307]  COND TRUE   Length[M_Ref_Ref[timelockList_ONIT[this]][msgsender_MSG]] > 0
[L2308]  CALL        call __var_19 := _autoUnlock~address_ONIT__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG);
[L2653]  COND FALSE  !(alloc_timelockList_ONIT_lvl0[timelockList_ONIT[this]][holder_s1645] == false)
[L2664]              idx_s1645 := 0;
[L2665]  COND TRUE   idx_s1645 < Length[M_Ref_Ref[timelockList_ONIT[this]][holder_s1645]]
[L2667]  COND FALSE  !(alloc_timelockList_ONIT_lvl0[timelockList_ONIT[this]][holder_s1645] == false)
[L2678]  COND TRUE   _releaseTime_ONIT.LockInfo[M_int_Ref[M_Ref_Ref[timelockList_ONIT[this]][holder_s1645]][idx_s1645]] <= now
[L2679]  CALL        call __var_36 := _unlock~address~uint256_ONIT__success(this, msgsender_MSG, msgvalue_MSG, holder_s1645, idx_s1645);
[L2512]  COND FALSE  !(alloc_timelockList_ONIT_lvl0[timelockList_ONIT[this]][holder_s1600] == false)
[L2523]              lockinfo_s1600 := M_int_Ref[M_Ref_Ref[timelockList_ONIT[this]][holder_s1600]][idx_s1600];
[L2524]              releaseAmount_s1600 := _amount_ONIT.LockInfo[lockinfo_s1600];
[L2525]  COND FALSE  !(alloc_timelockList_ONIT_lvl0[timelockList_ONIT[this]][holder_s1600] == false)
[L2536]  COND FALSE  !(alloc_timelockList_ONIT_lvl0[timelockList_ONIT[this]][holder_s1600] == false)
[L2547]  COND FALSE  !(alloc_timelockList_ONIT_lvl0[timelockList_ONIT[this]][holder_s1600] == false)
[L2558]  CALL        call __var_29 := sub~uint256~uint256_SafeMath__success(this, this, 0, Length[M_Ref_Ref[timelockList_ONIT[this]][holder_s1600]], 1);
[L1679]  COND FALSE  !(!(b_s82 <= a_s82))
[L1683]              c_s82 := (a_s82 - b_s82) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1684]              __ret_0_ := c_s82;
[L2558]  RET         call __var_29 := sub~uint256~uint256_SafeMath__success(this, this, 0, Length[M_Ref_Ref[timelockList_ONIT[this]][holder_s1600]], 1);
[L2559]  COND FALSE  !(revert)
[L2562]  COND FALSE  !(alloc_timelockList_ONIT_lvl0[timelockList_ONIT[this]][holder_s1600] == false)
[L2573]              M_int_Ref[M_Ref_Ref[timelockList_ONIT[this]][holder_s1600]][idx_s1600] := M_int_Ref[M_Ref_Ref[timelockList_ONIT[this]][holder_s1600]][__var_29];
[L2574]  COND FALSE  !(alloc_timelockList_ONIT_lvl0[timelockList_ONIT[this]][holder_s1600] == false)
[L2585]              Length[M_Ref_Ref[timelockList_ONIT[this]][holder_s1600]] := (Length[M_Ref_Ref[timelockList_ONIT[this]][holder_s1600]] - 1) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2586]              assert { :EventEmitted "Unlock_ONIT" } true;
[L2587]  CALL        call __var_33 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][holder_s1600], releaseAmount_s1600);
[L1703]              c_s106 := (a_s106 + b_s106) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1704]  COND FALSE  !(!(c_s106 >= a_s106))
[L1708]              __ret_0_ := c_s106;
[L2587]  RET         call __var_33 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][holder_s1600], releaseAmount_s1600);
[L2588]  COND FALSE  !(revert)
[L2591]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][holder_s1600];
[L2592]              _balances_ERC20[this][holder_s1600] := __var_33;
[L2593]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][holder_s1600];
[L2594]              __ret_0_ := true;
[L2679]  RET         call __var_36 := _unlock~address~uint256_ONIT__success(this, msgsender_MSG, msgvalue_MSG, holder_s1645, idx_s1645);
[L2680]  COND FALSE  !(revert)
[L2683]  COND FALSE  !(__var_36)
[L2687]              idx_s1645 := (idx_s1645 + 1) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2688]  COND FALSE  !(gas < 0)
[L2665]  COND FALSE  !(idx_s1645 < Length[M_Ref_Ref[timelockList_ONIT[this]][holder_s1645]])
[L2692]              __ret_0_ := true;
[L2308]  RET         call __var_19 := _autoUnlock~address_ONIT__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG);
[L2309]  COND FALSE  !(revert)
[L2313]  COND TRUE   DType[this] == ONIT
[L2314]  CALL        call __var_20 := transfer~address~uint256_ERC20Pausable__success(this, msgsender_MSG, msgvalue_MSG, to_s1288, value_s1288);
[L2038]  CALL        call whenNotPaused_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L3558]  COND FALSE  !(!!_paused_Pausable[this])
[L2038]  RET         call whenNotPaused_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L2039]  COND FALSE  !(revert)
[L2042]  COND FALSE  !(DType[this] == ONIT)
[L2047]  COND TRUE   DType[this] == ERC20Pausable
[L2048]  CALL        call __var_9 := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, to_s1053, value_s1053);
[L1838]  COND TRUE   DType[this] == ONIT
[L1839]  CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s675, value_s675);
[L1987]              __var_6 := null;
[L1988]  COND FALSE  !(!(to_s904 != null))
[L1992]  CALL        call __var_7 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][from_s904], value_s904);
[L1679]  COND FALSE  !(!(b_s82 <= a_s82))
[L1683]              c_s82 := (a_s82 - b_s82) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1684]              __ret_0_ := c_s82;
[L1992]  RET         call __var_7 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][from_s904], value_s904);
[L1993]  COND FALSE  !(revert)
[L1996]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][from_s904];
[L1997]              _balances_ERC20[this][from_s904] := __var_7;
[L1998]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][from_s904];
[L1999]  CALL        call __var_8 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][to_s904], value_s904);
[L1703]              c_s106 := (a_s106 + b_s106) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1704]  COND FALSE  !(!(c_s106 >= a_s106))
[L1708]              __ret_0_ := c_s106;
[L1999]  RET         call __var_8 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][to_s904], value_s904);
[L2000]  COND FALSE  !(revert)
[L2003]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][to_s904];
[L2004]              _balances_ERC20[this][to_s904] := __var_8;
[L2005]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][to_s904];
[L2006]              assert { :EventEmitted "Transfer_ERC20" } true;
[L1839]  RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s675, value_s675);
[L1840]  COND FALSE  !(revert)
[L1856]              __ret_0_ := true;
[L2048]  RET         call __var_9 := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, to_s1053, value_s1053);
[L2049]  COND FALSE  !(revert)
[L2055]              __ret_0_ := __var_9;
[L2314]  RET         call __var_20 := transfer~address~uint256_ERC20Pausable__success(this, msgsender_MSG, msgvalue_MSG, to_s1288, value_s1288);
[L2315]  COND FALSE  !(revert)
[L2321]              __ret_0_ := __var_20;
[L909]   RET         call __ret_0_ := transfer~address~uint256_ONIT__success(this, msgsender_MSG, msgvalue_MSG, to_s1288, value_s1288);
[L910]               assume !revert && gas >= 0;
[L4353]  RET         call __ret_0_transfer := transfer~address~uint256_ONIT(this, msgsender_MSG, msgvalue_MSG, to_s1288, value_s1288);
[L4400]  RET         call CorralChoice_ONIT(this);

Loop:
[L4400]        assume true;

[2020-11-24 16:02:26,698 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 16:02:26,698 INFO  L82        PathProgramCache]: Analyzing trace with hash -1191707628, now seen corresponding path program 1 times
[2020-11-24 16:02:26,699 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 16:02:26,707 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 16:02:26,757 INFO  L134       CoverageAnalysis]: Checked inductivity of 11 backedges. 1 proven. 0 refuted. 0 times theorem prover too weak. 10 trivial. 0 not checked.
[2020-11-24 16:02:26,757 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 16:02:26,757 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-24 16:02:26,757 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 16:02:26,757 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-24 16:02:26,757 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-24 16:02:26,758 INFO  L87              Difference]: Start difference. First operand 347 states and 378 transitions. cyclomatic complexity: 34 Second operand 4 states.
[2020-11-24 16:02:26,769 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 16:02:26,769 INFO  L93              Difference]: Finished difference Result 348 states and 379 transitions.
[2020-11-24 16:02:26,769 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-24 16:02:26,770 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 348 states and 379 transitions.
[2020-11-24 16:02:26,772 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 16:02:26,773 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 348 states to 348 states and 379 transitions.
[2020-11-24 16:02:26,773 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 142
[2020-11-24 16:02:26,773 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 142
[2020-11-24 16:02:26,773 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 348 states and 379 transitions.
[2020-11-24 16:02:26,774 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 16:02:26,774 INFO  L728         BuchiCegarLoop]: Abstraction has 348 states and 379 transitions.
[2020-11-24 16:02:26,774 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 348 states and 379 transitions.
[2020-11-24 16:02:26,776 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 348 to 347.
[2020-11-24 16:02:26,777 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 347 states.
[2020-11-24 16:02:26,777 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 347 states to 347 states and 377 transitions.
[2020-11-24 16:02:26,777 INFO  L751         BuchiCegarLoop]: Abstraction has 347 states and 377 transitions.
[2020-11-24 16:02:26,777 INFO  L631         BuchiCegarLoop]: Abstraction has 347 states and 377 transitions.
[2020-11-24 16:02:26,777 INFO  L445         BuchiCegarLoop]: ======== Iteration 7============
[2020-11-24 16:02:26,777 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 347 states and 377 transitions.
[2020-11-24 16:02:26,778 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 16:02:26,778 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 16:02:26,778 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 16:02:26,779 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 16:02:26,779 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L2]                 fail_transfer_ONIT0 := false;
[L2]                 call_transfer_ONIT0 := false;
[L2]     CALL        call main();
[L4395]              assume null == 0;
[L4396]  CALL        call this := FreshRefGenerator__success();
[L1636]              havoc newRef;
[L1637]              assume Alloc[newRef] == false;
[L1638]              Alloc[newRef] := true;
[L1639]              assume newRef != null;
[L4396]  RET         call this := FreshRefGenerator__success();
[L4397]              assume now >= 0;
[L4398]              assume DType[this] == ONIT;
[L4399]              assume !revert && gas >= 0;
[L4400]  CALL        call CorralChoice_ONIT(this);
[L4275]              havoc msgsender_MSG;
[L4276]              havoc msgvalue_MSG;
[L4277]              havoc choice;
[L4278]              havoc __ret_0_owner;
[L4279]              havoc __ret_0_newOwner;
[L4280]              havoc account_s293;
[L4281]              havoc __ret_0_isOwner;
[L4282]              havoc _newOwner_s313;
[L4283]              havoc __ret_0_acceptOwnership;
[L4284]              havoc account_s390;
[L4285]              havoc __ret_0_isPauser;
[L4286]              havoc account_s402;
[L4287]              havoc account_s414;
[L4288]              havoc __ret_0_paused;
[L4289]              havoc to_s1288;
[L4290]              havoc value_s1288;
[L4291]              havoc __ret_0_transfer;
[L4292]              havoc spender_s711;
[L4293]              havoc value_s711;
[L4294]              havoc __ret_0_approve;
[L4295]              havoc from_s1322;
[L4296]              havoc to_s1322;
[L4297]              havoc value_s1322;
[L4298]              havoc __ret_0_transferFrom;
[L4299]              havoc __ret_0_totalSupply;
[L4300]              havoc owner_s1254;
[L4301]              havoc __ret_0_balanceOf;
[L4302]              havoc owner_s656;
[L4303]              havoc spender_s656;
[L4304]              havoc __ret_0_allowance;
[L4305]              havoc spender_s809;
[L4306]              havoc addedValue_s809;
[L4307]              havoc __ret_0_increaseAllowance;
[L4308]              havoc spender_s858;
[L4309]              havoc subtractedValue_s858;
[L4310]              havoc __ret_0_decreaseAllowance;
[L4311]              havoc name_s1105;
[L4312]              havoc symbol_s1105;
[L4313]              havoc decimals_s1105;
[L4314]              havoc __ret_0_name;
[L4315]              havoc __ret_0_symbol;
[L4316]              havoc __ret_0_decimals;
[L4317]              havoc __ret_0_implementation;
[L4318]              havoc arg1693_s0;
[L4319]              havoc arg1694_s0;
[L4320]              havoc __ret_0_timelockList;
[L4321]              havoc arg1695_s0;
[L4322]              havoc __ret_0_frozenAccount;
[L4323]              havoc holder_s1351;
[L4324]              havoc __ret_0_freezeAccount;
[L4325]              havoc holder_s1379;
[L4326]              havoc __ret_0_unfreezeAccount;
[L4327]              havoc holder_s1410;
[L4328]              havoc value_s1410;
[L4329]              havoc releaseTime_s1410;
[L4330]              havoc __ret_0_lock;
[L4331]              havoc holder_s1439;
[L4332]              havoc value_s1439;
[L4333]              havoc releaseTime_s1439;
[L4334]              havoc __ret_0_transferWithLock;
[L4335]              havoc holder_s1468;
[L4336]              havoc idx_s1468;
[L4337]              havoc __ret_0_unlock;
[L4338]              havoc _newImplementation_s1486;
[L4339]              havoc value_s1663;
[L4340]              havoc __ret_0_mint;
[L4341]              havoc tmpNow;
[L4342]              havoc gas;
[L4343]              assume gas > 4000000 && gas <= 8000000;
[L4344]              tmpNow := now;
[L4345]              havoc now;
[L4346]              assume now > tmpNow;
[L4347]              assume msgsender_MSG != null;
[L4348]  COND TRUE   choice == 6
[L4349]              gas := gas - 21000;
[L4350]  COND TRUE   gas >= 0
[L4351]              assume value_s1288 >= 0 && value_s1288 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4352]              assume msgvalue_MSG == 0;
[L4353]  CALL        call __ret_0_transfer := transfer~address~uint256_ONIT(this, msgsender_MSG, msgvalue_MSG, to_s1288, value_s1288);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == to_s1288 && value_s1288 > _balances_ERC20[this][msgsender_MSG]) && value_s1288 >= 0) && value_s1288 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][to_s1288] >= 0) && _balances_ERC20[this][to_s1288] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_ONIT0 := true;
[L2]                 call_transfer_ONIT0 := false;
[L2]                 revert := revert_hold;
[L871]               havoc __exception;
[L872]               revert := false;
[L873]   COND FALSE  !(__exception)
[L909]   CALL        call __ret_0_ := transfer~address~uint256_ONIT__success(this, msgsender_MSG, msgvalue_MSG, to_s1288, value_s1288);
[L2292]  CALL        call notFrozen_pre__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG);
[L3582]  COND FALSE  !(!!frozenAccount_ONIT[this][_holder_s1185])
[L2292]  RET         call notFrozen_pre__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG);
[L2293]  COND FALSE  !(revert)
[L2296]  COND FALSE  !(alloc_timelockList_ONIT_lvl0[timelockList_ONIT[this]][msgsender_MSG] == false)
[L2307]  COND TRUE   Length[M_Ref_Ref[timelockList_ONIT[this]][msgsender_MSG]] > 0
[L2308]  CALL        call __var_19 := _autoUnlock~address_ONIT__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG);
[L2653]  COND FALSE  !(alloc_timelockList_ONIT_lvl0[timelockList_ONIT[this]][holder_s1645] == false)
[L2664]              idx_s1645 := 0;
[L2665]  COND TRUE   idx_s1645 < Length[M_Ref_Ref[timelockList_ONIT[this]][holder_s1645]]
[L2667]  COND FALSE  !(alloc_timelockList_ONIT_lvl0[timelockList_ONIT[this]][holder_s1645] == false)
[L2678]  COND TRUE   _releaseTime_ONIT.LockInfo[M_int_Ref[M_Ref_Ref[timelockList_ONIT[this]][holder_s1645]][idx_s1645]] <= now
[L2679]  CALL        call __var_36 := _unlock~address~uint256_ONIT__success(this, msgsender_MSG, msgvalue_MSG, holder_s1645, idx_s1645);
[L2512]  COND FALSE  !(alloc_timelockList_ONIT_lvl0[timelockList_ONIT[this]][holder_s1600] == false)
[L2523]              lockinfo_s1600 := M_int_Ref[M_Ref_Ref[timelockList_ONIT[this]][holder_s1600]][idx_s1600];
[L2524]              releaseAmount_s1600 := _amount_ONIT.LockInfo[lockinfo_s1600];
[L2525]  COND FALSE  !(alloc_timelockList_ONIT_lvl0[timelockList_ONIT[this]][holder_s1600] == false)
[L2536]  COND FALSE  !(alloc_timelockList_ONIT_lvl0[timelockList_ONIT[this]][holder_s1600] == false)
[L2547]  COND FALSE  !(alloc_timelockList_ONIT_lvl0[timelockList_ONIT[this]][holder_s1600] == false)
[L2558]  CALL        call __var_29 := sub~uint256~uint256_SafeMath__success(this, this, 0, Length[M_Ref_Ref[timelockList_ONIT[this]][holder_s1600]], 1);
[L1679]  COND FALSE  !(!(b_s82 <= a_s82))
[L1683]              c_s82 := (a_s82 - b_s82) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1684]              __ret_0_ := c_s82;
[L2558]  RET         call __var_29 := sub~uint256~uint256_SafeMath__success(this, this, 0, Length[M_Ref_Ref[timelockList_ONIT[this]][holder_s1600]], 1);
[L2559]  COND FALSE  !(revert)
[L2562]  COND FALSE  !(alloc_timelockList_ONIT_lvl0[timelockList_ONIT[this]][holder_s1600] == false)
[L2573]              M_int_Ref[M_Ref_Ref[timelockList_ONIT[this]][holder_s1600]][idx_s1600] := M_int_Ref[M_Ref_Ref[timelockList_ONIT[this]][holder_s1600]][__var_29];
[L2574]  COND FALSE  !(alloc_timelockList_ONIT_lvl0[timelockList_ONIT[this]][holder_s1600] == false)
[L2585]              Length[M_Ref_Ref[timelockList_ONIT[this]][holder_s1600]] := (Length[M_Ref_Ref[timelockList_ONIT[this]][holder_s1600]] - 1) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2586]              assert { :EventEmitted "Unlock_ONIT" } true;
[L2587]  CALL        call __var_33 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][holder_s1600], releaseAmount_s1600);
[L1703]              c_s106 := (a_s106 + b_s106) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1704]  COND FALSE  !(!(c_s106 >= a_s106))
[L1708]              __ret_0_ := c_s106;
[L2587]  RET         call __var_33 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][holder_s1600], releaseAmount_s1600);
[L2588]  COND FALSE  !(revert)
[L2591]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][holder_s1600];
[L2592]              _balances_ERC20[this][holder_s1600] := __var_33;
[L2593]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][holder_s1600];
[L2594]              __ret_0_ := true;
[L2679]  RET         call __var_36 := _unlock~address~uint256_ONIT__success(this, msgsender_MSG, msgvalue_MSG, holder_s1645, idx_s1645);
[L2680]  COND FALSE  !(revert)
[L2683]  COND TRUE   __var_36
[L2684]              idx_s1645 := (idx_s1645 - 1) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2687]              idx_s1645 := (idx_s1645 + 1) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2688]  COND FALSE  !(gas < 0)
[L2665]  COND FALSE  !(idx_s1645 < Length[M_Ref_Ref[timelockList_ONIT[this]][holder_s1645]])
[L2692]              __ret_0_ := true;
[L2308]  RET         call __var_19 := _autoUnlock~address_ONIT__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG);
[L2309]  COND FALSE  !(revert)
[L2313]  COND TRUE   DType[this] == ONIT
[L2314]  CALL        call __var_20 := transfer~address~uint256_ERC20Pausable__success(this, msgsender_MSG, msgvalue_MSG, to_s1288, value_s1288);
[L2038]  CALL        call whenNotPaused_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L3558]  COND FALSE  !(!!_paused_Pausable[this])
[L2038]  RET         call whenNotPaused_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L2039]  COND FALSE  !(revert)
[L2042]  COND FALSE  !(DType[this] == ONIT)
[L2047]  COND TRUE   DType[this] == ERC20Pausable
[L2048]  CALL        call __var_9 := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, to_s1053, value_s1053);
[L1838]  COND FALSE  !(DType[this] == ONIT)
[L1843]  COND TRUE   DType[this] == ERC20Pausable
[L1844]  CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s675, value_s675);
[L1987]              __var_6 := null;
[L1988]  COND FALSE  !(!(to_s904 != null))
[L1992]  CALL        call __var_7 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][from_s904], value_s904);
[L1679]  COND FALSE  !(!(b_s82 <= a_s82))
[L1683]              c_s82 := (a_s82 - b_s82) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1684]              __ret_0_ := c_s82;
[L1992]  RET         call __var_7 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][from_s904], value_s904);
[L1993]  COND FALSE  !(revert)
[L1996]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][from_s904];
[L1997]              _balances_ERC20[this][from_s904] := __var_7;
[L1998]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][from_s904];
[L1999]  CALL        call __var_8 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][to_s904], value_s904);
[L1703]              c_s106 := (a_s106 + b_s106) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1704]  COND FALSE  !(!(c_s106 >= a_s106))
[L1708]              __ret_0_ := c_s106;
[L1999]  RET         call __var_8 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][to_s904], value_s904);
[L2000]  COND FALSE  !(revert)
[L2003]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][to_s904];
[L2004]              _balances_ERC20[this][to_s904] := __var_8;
[L2005]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][to_s904];
[L2006]              assert { :EventEmitted "Transfer_ERC20" } true;
[L1844]  RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s675, value_s675);
[L1845]  COND FALSE  !(revert)
[L1856]              __ret_0_ := true;
[L2048]  RET         call __var_9 := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, to_s1053, value_s1053);
[L2049]  COND FALSE  !(revert)
[L2055]              __ret_0_ := __var_9;
[L2314]  RET         call __var_20 := transfer~address~uint256_ERC20Pausable__success(this, msgsender_MSG, msgvalue_MSG, to_s1288, value_s1288);
[L2315]  COND FALSE  !(revert)
[L2321]              __ret_0_ := __var_20;
[L909]   RET         call __ret_0_ := transfer~address~uint256_ONIT__success(this, msgsender_MSG, msgvalue_MSG, to_s1288, value_s1288);
[L910]               assume !revert && gas >= 0;
[L4353]  RET         call __ret_0_transfer := transfer~address~uint256_ONIT(this, msgsender_MSG, msgvalue_MSG, to_s1288, value_s1288);
[L4400]  RET         call CorralChoice_ONIT(this);

Loop:
[L4400]        assume true;

[2020-11-24 16:02:26,781 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 16:02:26,781 INFO  L82        PathProgramCache]: Analyzing trace with hash 832668237, now seen corresponding path program 1 times
[2020-11-24 16:02:26,782 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 16:02:26,791 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 16:02:26,818 INFO  L134       CoverageAnalysis]: Checked inductivity of 11 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 11 trivial. 0 not checked.
[2020-11-24 16:02:26,818 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 16:02:26,819 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-24 16:02:26,819 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 16:02:26,819 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-24 16:02:26,819 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-24 16:02:26,819 INFO  L87              Difference]: Start difference. First operand 347 states and 377 transitions. cyclomatic complexity: 33 Second operand 4 states.
[2020-11-24 16:02:26,827 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 16:02:26,827 INFO  L93              Difference]: Finished difference Result 350 states and 379 transitions.
[2020-11-24 16:02:26,827 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-24 16:02:26,827 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 350 states and 379 transitions.
[2020-11-24 16:02:26,828 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 16:02:26,829 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 350 states to 342 states and 370 transitions.
[2020-11-24 16:02:26,829 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 140
[2020-11-24 16:02:26,829 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 140
[2020-11-24 16:02:26,829 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 342 states and 370 transitions.
[2020-11-24 16:02:26,830 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 16:02:26,830 INFO  L728         BuchiCegarLoop]: Abstraction has 342 states and 370 transitions.
[2020-11-24 16:02:26,830 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 342 states and 370 transitions.
[2020-11-24 16:02:26,832 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 342 to 342.
[2020-11-24 16:02:26,832 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 342 states.
[2020-11-24 16:02:26,833 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 342 states to 342 states and 370 transitions.
[2020-11-24 16:02:26,833 INFO  L751         BuchiCegarLoop]: Abstraction has 342 states and 370 transitions.
[2020-11-24 16:02:26,833 INFO  L631         BuchiCegarLoop]: Abstraction has 342 states and 370 transitions.
[2020-11-24 16:02:26,833 INFO  L445         BuchiCegarLoop]: ======== Iteration 8============
[2020-11-24 16:02:26,833 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 342 states and 370 transitions.
[2020-11-24 16:02:26,834 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 16:02:26,834 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 16:02:26,834 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 16:02:26,835 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 16:02:26,835 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L2]                 fail_transfer_ONIT0 := false;
[L2]                 call_transfer_ONIT0 := false;
[L2]     CALL        call main();
[L4395]              assume null == 0;
[L4396]  CALL        call this := FreshRefGenerator__success();
[L1636]              havoc newRef;
[L1637]              assume Alloc[newRef] == false;
[L1638]              Alloc[newRef] := true;
[L1639]              assume newRef != null;
[L4396]  RET         call this := FreshRefGenerator__success();
[L4397]              assume now >= 0;
[L4398]              assume DType[this] == ONIT;
[L4399]              assume !revert && gas >= 0;
[L4400]  CALL        call CorralChoice_ONIT(this);
[L4275]              havoc msgsender_MSG;
[L4276]              havoc msgvalue_MSG;
[L4277]              havoc choice;
[L4278]              havoc __ret_0_owner;
[L4279]              havoc __ret_0_newOwner;
[L4280]              havoc account_s293;
[L4281]              havoc __ret_0_isOwner;
[L4282]              havoc _newOwner_s313;
[L4283]              havoc __ret_0_acceptOwnership;
[L4284]              havoc account_s390;
[L4285]              havoc __ret_0_isPauser;
[L4286]              havoc account_s402;
[L4287]              havoc account_s414;
[L4288]              havoc __ret_0_paused;
[L4289]              havoc to_s1288;
[L4290]              havoc value_s1288;
[L4291]              havoc __ret_0_transfer;
[L4292]              havoc spender_s711;
[L4293]              havoc value_s711;
[L4294]              havoc __ret_0_approve;
[L4295]              havoc from_s1322;
[L4296]              havoc to_s1322;
[L4297]              havoc value_s1322;
[L4298]              havoc __ret_0_transferFrom;
[L4299]              havoc __ret_0_totalSupply;
[L4300]              havoc owner_s1254;
[L4301]              havoc __ret_0_balanceOf;
[L4302]              havoc owner_s656;
[L4303]              havoc spender_s656;
[L4304]              havoc __ret_0_allowance;
[L4305]              havoc spender_s809;
[L4306]              havoc addedValue_s809;
[L4307]              havoc __ret_0_increaseAllowance;
[L4308]              havoc spender_s858;
[L4309]              havoc subtractedValue_s858;
[L4310]              havoc __ret_0_decreaseAllowance;
[L4311]              havoc name_s1105;
[L4312]              havoc symbol_s1105;
[L4313]              havoc decimals_s1105;
[L4314]              havoc __ret_0_name;
[L4315]              havoc __ret_0_symbol;
[L4316]              havoc __ret_0_decimals;
[L4317]              havoc __ret_0_implementation;
[L4318]              havoc arg1693_s0;
[L4319]              havoc arg1694_s0;
[L4320]              havoc __ret_0_timelockList;
[L4321]              havoc arg1695_s0;
[L4322]              havoc __ret_0_frozenAccount;
[L4323]              havoc holder_s1351;
[L4324]              havoc __ret_0_freezeAccount;
[L4325]              havoc holder_s1379;
[L4326]              havoc __ret_0_unfreezeAccount;
[L4327]              havoc holder_s1410;
[L4328]              havoc value_s1410;
[L4329]              havoc releaseTime_s1410;
[L4330]              havoc __ret_0_lock;
[L4331]              havoc holder_s1439;
[L4332]              havoc value_s1439;
[L4333]              havoc releaseTime_s1439;
[L4334]              havoc __ret_0_transferWithLock;
[L4335]              havoc holder_s1468;
[L4336]              havoc idx_s1468;
[L4337]              havoc __ret_0_unlock;
[L4338]              havoc _newImplementation_s1486;
[L4339]              havoc value_s1663;
[L4340]              havoc __ret_0_mint;
[L4341]              havoc tmpNow;
[L4342]              havoc gas;
[L4343]              assume gas > 4000000 && gas <= 8000000;
[L4344]              tmpNow := now;
[L4345]              havoc now;
[L4346]              assume now > tmpNow;
[L4347]              assume msgsender_MSG != null;
[L4348]  COND TRUE   choice == 6
[L4349]              gas := gas - 21000;
[L4350]  COND TRUE   gas >= 0
[L4351]              assume value_s1288 >= 0 && value_s1288 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4352]              assume msgvalue_MSG == 0;
[L4353]  CALL        call __ret_0_transfer := transfer~address~uint256_ONIT(this, msgsender_MSG, msgvalue_MSG, to_s1288, value_s1288);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == to_s1288 && value_s1288 > _balances_ERC20[this][msgsender_MSG]) && value_s1288 >= 0) && value_s1288 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][to_s1288] >= 0) && _balances_ERC20[this][to_s1288] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_ONIT0 := true;
[L2]                 call_transfer_ONIT0 := false;
[L2]                 revert := revert_hold;
[L871]               havoc __exception;
[L872]               revert := false;
[L873]   COND FALSE  !(__exception)
[L909]   CALL        call __ret_0_ := transfer~address~uint256_ONIT__success(this, msgsender_MSG, msgvalue_MSG, to_s1288, value_s1288);
[L2292]  CALL        call notFrozen_pre__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG);
[L3582]  COND FALSE  !(!!frozenAccount_ONIT[this][_holder_s1185])
[L2292]  RET         call notFrozen_pre__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG);
[L2293]  COND FALSE  !(revert)
[L2296]  COND FALSE  !(alloc_timelockList_ONIT_lvl0[timelockList_ONIT[this]][msgsender_MSG] == false)
[L2307]  COND TRUE   Length[M_Ref_Ref[timelockList_ONIT[this]][msgsender_MSG]] > 0
[L2308]  CALL        call __var_19 := _autoUnlock~address_ONIT__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG);
[L2653]  COND FALSE  !(alloc_timelockList_ONIT_lvl0[timelockList_ONIT[this]][holder_s1645] == false)
[L2664]              idx_s1645 := 0;
[L2665]  COND TRUE   idx_s1645 < Length[M_Ref_Ref[timelockList_ONIT[this]][holder_s1645]]
[L2667]  COND FALSE  !(alloc_timelockList_ONIT_lvl0[timelockList_ONIT[this]][holder_s1645] == false)
[L2678]  COND TRUE   _releaseTime_ONIT.LockInfo[M_int_Ref[M_Ref_Ref[timelockList_ONIT[this]][holder_s1645]][idx_s1645]] <= now
[L2679]  CALL        call __var_36 := _unlock~address~uint256_ONIT__success(this, msgsender_MSG, msgvalue_MSG, holder_s1645, idx_s1645);
[L2512]  COND FALSE  !(alloc_timelockList_ONIT_lvl0[timelockList_ONIT[this]][holder_s1600] == false)
[L2523]              lockinfo_s1600 := M_int_Ref[M_Ref_Ref[timelockList_ONIT[this]][holder_s1600]][idx_s1600];
[L2524]              releaseAmount_s1600 := _amount_ONIT.LockInfo[lockinfo_s1600];
[L2525]  COND FALSE  !(alloc_timelockList_ONIT_lvl0[timelockList_ONIT[this]][holder_s1600] == false)
[L2536]  COND FALSE  !(alloc_timelockList_ONIT_lvl0[timelockList_ONIT[this]][holder_s1600] == false)
[L2547]  COND FALSE  !(alloc_timelockList_ONIT_lvl0[timelockList_ONIT[this]][holder_s1600] == false)
[L2558]  CALL        call __var_29 := sub~uint256~uint256_SafeMath__success(this, this, 0, Length[M_Ref_Ref[timelockList_ONIT[this]][holder_s1600]], 1);
[L1679]  COND FALSE  !(!(b_s82 <= a_s82))
[L1683]              c_s82 := (a_s82 - b_s82) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1684]              __ret_0_ := c_s82;
[L2558]  RET         call __var_29 := sub~uint256~uint256_SafeMath__success(this, this, 0, Length[M_Ref_Ref[timelockList_ONIT[this]][holder_s1600]], 1);
[L2559]  COND FALSE  !(revert)
[L2562]  COND FALSE  !(alloc_timelockList_ONIT_lvl0[timelockList_ONIT[this]][holder_s1600] == false)
[L2573]              M_int_Ref[M_Ref_Ref[timelockList_ONIT[this]][holder_s1600]][idx_s1600] := M_int_Ref[M_Ref_Ref[timelockList_ONIT[this]][holder_s1600]][__var_29];
[L2574]  COND FALSE  !(alloc_timelockList_ONIT_lvl0[timelockList_ONIT[this]][holder_s1600] == false)
[L2585]              Length[M_Ref_Ref[timelockList_ONIT[this]][holder_s1600]] := (Length[M_Ref_Ref[timelockList_ONIT[this]][holder_s1600]] - 1) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2586]              assert { :EventEmitted "Unlock_ONIT" } true;
[L2587]  CALL        call __var_33 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][holder_s1600], releaseAmount_s1600);
[L1703]              c_s106 := (a_s106 + b_s106) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1704]  COND FALSE  !(!(c_s106 >= a_s106))
[L1708]              __ret_0_ := c_s106;
[L2587]  RET         call __var_33 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][holder_s1600], releaseAmount_s1600);
[L2588]  COND FALSE  !(revert)
[L2591]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][holder_s1600];
[L2592]              _balances_ERC20[this][holder_s1600] := __var_33;
[L2593]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][holder_s1600];
[L2594]              __ret_0_ := true;
[L2679]  RET         call __var_36 := _unlock~address~uint256_ONIT__success(this, msgsender_MSG, msgvalue_MSG, holder_s1645, idx_s1645);
[L2680]  COND FALSE  !(revert)
[L2683]  COND TRUE   __var_36
[L2684]              idx_s1645 := (idx_s1645 - 1) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2687]              idx_s1645 := (idx_s1645 + 1) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2688]  COND FALSE  !(gas < 0)
[L2665]  COND FALSE  !(idx_s1645 < Length[M_Ref_Ref[timelockList_ONIT[this]][holder_s1645]])
[L2692]              __ret_0_ := true;
[L2308]  RET         call __var_19 := _autoUnlock~address_ONIT__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG);
[L2309]  COND FALSE  !(revert)
[L2313]  COND TRUE   DType[this] == ONIT
[L2314]  CALL        call __var_20 := transfer~address~uint256_ERC20Pausable__success(this, msgsender_MSG, msgvalue_MSG, to_s1288, value_s1288);
[L2038]  CALL        call whenNotPaused_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L3558]  COND FALSE  !(!!_paused_Pausable[this])
[L2038]  RET         call whenNotPaused_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L2039]  COND FALSE  !(revert)
[L2042]  COND TRUE   DType[this] == ONIT
[L2043]  CALL        call __var_9 := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, to_s1053, value_s1053);
[L1838]  COND FALSE  !(DType[this] == ONIT)
[L1843]  COND TRUE   DType[this] == ERC20Pausable
[L1844]  CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s675, value_s675);
[L1987]              __var_6 := null;
[L1988]  COND FALSE  !(!(to_s904 != null))
[L1992]  CALL        call __var_7 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][from_s904], value_s904);
[L1679]  COND FALSE  !(!(b_s82 <= a_s82))
[L1683]              c_s82 := (a_s82 - b_s82) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1684]              __ret_0_ := c_s82;
[L1992]  RET         call __var_7 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][from_s904], value_s904);
[L1993]  COND FALSE  !(revert)
[L1996]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][from_s904];
[L1997]              _balances_ERC20[this][from_s904] := __var_7;
[L1998]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][from_s904];
[L1999]  CALL        call __var_8 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][to_s904], value_s904);
[L1703]              c_s106 := (a_s106 + b_s106) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1704]  COND FALSE  !(!(c_s106 >= a_s106))
[L1708]              __ret_0_ := c_s106;
[L1999]  RET         call __var_8 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][to_s904], value_s904);
[L2000]  COND FALSE  !(revert)
[L2003]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][to_s904];
[L2004]              _balances_ERC20[this][to_s904] := __var_8;
[L2005]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][to_s904];
[L2006]              assert { :EventEmitted "Transfer_ERC20" } true;
[L1844]  RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s675, value_s675);
[L1845]  COND FALSE  !(revert)
[L1856]              __ret_0_ := true;
[L2043]  RET         call __var_9 := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, to_s1053, value_s1053);
[L2044]  COND FALSE  !(revert)
[L2055]              __ret_0_ := __var_9;
[L2314]  RET         call __var_20 := transfer~address~uint256_ERC20Pausable__success(this, msgsender_MSG, msgvalue_MSG, to_s1288, value_s1288);
[L2315]  COND FALSE  !(revert)
[L2321]              __ret_0_ := __var_20;
[L909]   RET         call __ret_0_ := transfer~address~uint256_ONIT__success(this, msgsender_MSG, msgvalue_MSG, to_s1288, value_s1288);
[L910]               assume !revert && gas >= 0;
[L4353]  RET         call __ret_0_transfer := transfer~address~uint256_ONIT(this, msgsender_MSG, msgvalue_MSG, to_s1288, value_s1288);
[L4400]  RET         call CorralChoice_ONIT(this);

Loop:
[L4400]        assume true;

[2020-11-24 16:02:26,837 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 16:02:26,837 INFO  L82        PathProgramCache]: Analyzing trace with hash -456012164, now seen corresponding path program 1 times
[2020-11-24 16:02:26,838 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 16:02:26,846 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 16:02:26,875 INFO  L134       CoverageAnalysis]: Checked inductivity of 11 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 11 trivial. 0 not checked.
[2020-11-24 16:02:26,875 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 16:02:26,875 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [5] imperfect sequences [] total 5
[2020-11-24 16:02:26,875 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 16:02:26,876 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 5 interpolants.
[2020-11-24 16:02:26,876 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=7, Invalid=13, Unknown=0, NotChecked=0, Total=20
[2020-11-24 16:02:26,876 INFO  L87              Difference]: Start difference. First operand 342 states and 370 transitions. cyclomatic complexity: 31 Second operand 5 states.
[2020-11-24 16:02:26,884 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 16:02:26,884 INFO  L93              Difference]: Finished difference Result 350 states and 377 transitions.
[2020-11-24 16:02:26,884 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 5 states. 
[2020-11-24 16:02:26,884 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 350 states and 377 transitions.
[2020-11-24 16:02:26,886 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 16:02:26,887 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 350 states to 338 states and 364 transitions.
[2020-11-24 16:02:26,887 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 138
[2020-11-24 16:02:26,887 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 138
[2020-11-24 16:02:26,887 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 338 states and 364 transitions.
[2020-11-24 16:02:26,887 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 16:02:26,887 INFO  L728         BuchiCegarLoop]: Abstraction has 338 states and 364 transitions.
[2020-11-24 16:02:26,888 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 338 states and 364 transitions.
[2020-11-24 16:02:26,890 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 338 to 338.
[2020-11-24 16:02:26,890 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 338 states.
[2020-11-24 16:02:26,890 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 338 states to 338 states and 364 transitions.
[2020-11-24 16:02:26,890 INFO  L751         BuchiCegarLoop]: Abstraction has 338 states and 364 transitions.
[2020-11-24 16:02:26,891 INFO  L631         BuchiCegarLoop]: Abstraction has 338 states and 364 transitions.
[2020-11-24 16:02:26,891 INFO  L445         BuchiCegarLoop]: ======== Iteration 9============
[2020-11-24 16:02:26,891 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 338 states and 364 transitions.
[2020-11-24 16:02:26,891 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 16:02:26,891 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 16:02:26,891 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 16:02:26,892 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 16:02:26,892 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L2]                 fail_transfer_ONIT0 := false;
[L2]                 call_transfer_ONIT0 := false;
[L2]     CALL        call main();
[L4395]              assume null == 0;
[L4396]  CALL        call this := FreshRefGenerator__success();
[L1636]              havoc newRef;
[L1637]              assume Alloc[newRef] == false;
[L1638]              Alloc[newRef] := true;
[L1639]              assume newRef != null;
[L4396]  RET         call this := FreshRefGenerator__success();
[L4397]              assume now >= 0;
[L4398]              assume DType[this] == ONIT;
[L4399]              assume !revert && gas >= 0;
[L4400]  CALL        call CorralChoice_ONIT(this);
[L4275]              havoc msgsender_MSG;
[L4276]              havoc msgvalue_MSG;
[L4277]              havoc choice;
[L4278]              havoc __ret_0_owner;
[L4279]              havoc __ret_0_newOwner;
[L4280]              havoc account_s293;
[L4281]              havoc __ret_0_isOwner;
[L4282]              havoc _newOwner_s313;
[L4283]              havoc __ret_0_acceptOwnership;
[L4284]              havoc account_s390;
[L4285]              havoc __ret_0_isPauser;
[L4286]              havoc account_s402;
[L4287]              havoc account_s414;
[L4288]              havoc __ret_0_paused;
[L4289]              havoc to_s1288;
[L4290]              havoc value_s1288;
[L4291]              havoc __ret_0_transfer;
[L4292]              havoc spender_s711;
[L4293]              havoc value_s711;
[L4294]              havoc __ret_0_approve;
[L4295]              havoc from_s1322;
[L4296]              havoc to_s1322;
[L4297]              havoc value_s1322;
[L4298]              havoc __ret_0_transferFrom;
[L4299]              havoc __ret_0_totalSupply;
[L4300]              havoc owner_s1254;
[L4301]              havoc __ret_0_balanceOf;
[L4302]              havoc owner_s656;
[L4303]              havoc spender_s656;
[L4304]              havoc __ret_0_allowance;
[L4305]              havoc spender_s809;
[L4306]              havoc addedValue_s809;
[L4307]              havoc __ret_0_increaseAllowance;
[L4308]              havoc spender_s858;
[L4309]              havoc subtractedValue_s858;
[L4310]              havoc __ret_0_decreaseAllowance;
[L4311]              havoc name_s1105;
[L4312]              havoc symbol_s1105;
[L4313]              havoc decimals_s1105;
[L4314]              havoc __ret_0_name;
[L4315]              havoc __ret_0_symbol;
[L4316]              havoc __ret_0_decimals;
[L4317]              havoc __ret_0_implementation;
[L4318]              havoc arg1693_s0;
[L4319]              havoc arg1694_s0;
[L4320]              havoc __ret_0_timelockList;
[L4321]              havoc arg1695_s0;
[L4322]              havoc __ret_0_frozenAccount;
[L4323]              havoc holder_s1351;
[L4324]              havoc __ret_0_freezeAccount;
[L4325]              havoc holder_s1379;
[L4326]              havoc __ret_0_unfreezeAccount;
[L4327]              havoc holder_s1410;
[L4328]              havoc value_s1410;
[L4329]              havoc releaseTime_s1410;
[L4330]              havoc __ret_0_lock;
[L4331]              havoc holder_s1439;
[L4332]              havoc value_s1439;
[L4333]              havoc releaseTime_s1439;
[L4334]              havoc __ret_0_transferWithLock;
[L4335]              havoc holder_s1468;
[L4336]              havoc idx_s1468;
[L4337]              havoc __ret_0_unlock;
[L4338]              havoc _newImplementation_s1486;
[L4339]              havoc value_s1663;
[L4340]              havoc __ret_0_mint;
[L4341]              havoc tmpNow;
[L4342]              havoc gas;
[L4343]              assume gas > 4000000 && gas <= 8000000;
[L4344]              tmpNow := now;
[L4345]              havoc now;
[L4346]              assume now > tmpNow;
[L4347]              assume msgsender_MSG != null;
[L4348]  COND TRUE   choice == 6
[L4349]              gas := gas - 21000;
[L4350]  COND TRUE   gas >= 0
[L4351]              assume value_s1288 >= 0 && value_s1288 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4352]              assume msgvalue_MSG == 0;
[L4353]  CALL        call __ret_0_transfer := transfer~address~uint256_ONIT(this, msgsender_MSG, msgvalue_MSG, to_s1288, value_s1288);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == to_s1288 && value_s1288 > _balances_ERC20[this][msgsender_MSG]) && value_s1288 >= 0) && value_s1288 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][to_s1288] >= 0) && _balances_ERC20[this][to_s1288] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_ONIT0 := true;
[L2]                 call_transfer_ONIT0 := false;
[L2]                 revert := revert_hold;
[L871]               havoc __exception;
[L872]               revert := false;
[L873]   COND FALSE  !(__exception)
[L909]   CALL        call __ret_0_ := transfer~address~uint256_ONIT__success(this, msgsender_MSG, msgvalue_MSG, to_s1288, value_s1288);
[L2292]  CALL        call notFrozen_pre__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG);
[L3582]  COND FALSE  !(!!frozenAccount_ONIT[this][_holder_s1185])
[L2292]  RET         call notFrozen_pre__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG);
[L2293]  COND FALSE  !(revert)
[L2296]  COND FALSE  !(alloc_timelockList_ONIT_lvl0[timelockList_ONIT[this]][msgsender_MSG] == false)
[L2307]  COND TRUE   Length[M_Ref_Ref[timelockList_ONIT[this]][msgsender_MSG]] > 0
[L2308]  CALL        call __var_19 := _autoUnlock~address_ONIT__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG);
[L2653]  COND FALSE  !(alloc_timelockList_ONIT_lvl0[timelockList_ONIT[this]][holder_s1645] == false)
[L2664]              idx_s1645 := 0;
[L2665]  COND TRUE   idx_s1645 < Length[M_Ref_Ref[timelockList_ONIT[this]][holder_s1645]]
[L2667]  COND FALSE  !(alloc_timelockList_ONIT_lvl0[timelockList_ONIT[this]][holder_s1645] == false)
[L2678]  COND TRUE   _releaseTime_ONIT.LockInfo[M_int_Ref[M_Ref_Ref[timelockList_ONIT[this]][holder_s1645]][idx_s1645]] <= now
[L2679]  CALL        call __var_36 := _unlock~address~uint256_ONIT__success(this, msgsender_MSG, msgvalue_MSG, holder_s1645, idx_s1645);
[L2512]  COND FALSE  !(alloc_timelockList_ONIT_lvl0[timelockList_ONIT[this]][holder_s1600] == false)
[L2523]              lockinfo_s1600 := M_int_Ref[M_Ref_Ref[timelockList_ONIT[this]][holder_s1600]][idx_s1600];
[L2524]              releaseAmount_s1600 := _amount_ONIT.LockInfo[lockinfo_s1600];
[L2525]  COND FALSE  !(alloc_timelockList_ONIT_lvl0[timelockList_ONIT[this]][holder_s1600] == false)
[L2536]  COND FALSE  !(alloc_timelockList_ONIT_lvl0[timelockList_ONIT[this]][holder_s1600] == false)
[L2547]  COND FALSE  !(alloc_timelockList_ONIT_lvl0[timelockList_ONIT[this]][holder_s1600] == false)
[L2558]  CALL        call __var_29 := sub~uint256~uint256_SafeMath__success(this, this, 0, Length[M_Ref_Ref[timelockList_ONIT[this]][holder_s1600]], 1);
[L1679]  COND FALSE  !(!(b_s82 <= a_s82))
[L1683]              c_s82 := (a_s82 - b_s82) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1684]              __ret_0_ := c_s82;
[L2558]  RET         call __var_29 := sub~uint256~uint256_SafeMath__success(this, this, 0, Length[M_Ref_Ref[timelockList_ONIT[this]][holder_s1600]], 1);
[L2559]  COND FALSE  !(revert)
[L2562]  COND FALSE  !(alloc_timelockList_ONIT_lvl0[timelockList_ONIT[this]][holder_s1600] == false)
[L2573]              M_int_Ref[M_Ref_Ref[timelockList_ONIT[this]][holder_s1600]][idx_s1600] := M_int_Ref[M_Ref_Ref[timelockList_ONIT[this]][holder_s1600]][__var_29];
[L2574]  COND FALSE  !(alloc_timelockList_ONIT_lvl0[timelockList_ONIT[this]][holder_s1600] == false)
[L2585]              Length[M_Ref_Ref[timelockList_ONIT[this]][holder_s1600]] := (Length[M_Ref_Ref[timelockList_ONIT[this]][holder_s1600]] - 1) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2586]              assert { :EventEmitted "Unlock_ONIT" } true;
[L2587]  CALL        call __var_33 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][holder_s1600], releaseAmount_s1600);
[L1703]              c_s106 := (a_s106 + b_s106) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1704]  COND FALSE  !(!(c_s106 >= a_s106))
[L1708]              __ret_0_ := c_s106;
[L2587]  RET         call __var_33 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][holder_s1600], releaseAmount_s1600);
[L2588]  COND FALSE  !(revert)
[L2591]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][holder_s1600];
[L2592]              _balances_ERC20[this][holder_s1600] := __var_33;
[L2593]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][holder_s1600];
[L2594]              __ret_0_ := true;
[L2679]  RET         call __var_36 := _unlock~address~uint256_ONIT__success(this, msgsender_MSG, msgvalue_MSG, holder_s1645, idx_s1645);
[L2680]  COND FALSE  !(revert)
[L2683]  COND TRUE   __var_36
[L2684]              idx_s1645 := (idx_s1645 - 1) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2687]              idx_s1645 := (idx_s1645 + 1) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2688]  COND FALSE  !(gas < 0)
[L2665]  COND FALSE  !(idx_s1645 < Length[M_Ref_Ref[timelockList_ONIT[this]][holder_s1645]])
[L2692]              __ret_0_ := true;
[L2308]  RET         call __var_19 := _autoUnlock~address_ONIT__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG);
[L2309]  COND FALSE  !(revert)
[L2313]  COND TRUE   DType[this] == ONIT
[L2314]  CALL        call __var_20 := transfer~address~uint256_ERC20Pausable__success(this, msgsender_MSG, msgvalue_MSG, to_s1288, value_s1288);
[L2038]  CALL        call whenNotPaused_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L3558]  COND FALSE  !(!!_paused_Pausable[this])
[L2038]  RET         call whenNotPaused_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L2039]  COND FALSE  !(revert)
[L2042]  COND TRUE   DType[this] == ONIT
[L2043]  CALL        call __var_9 := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, to_s1053, value_s1053);
[L1838]  COND TRUE   DType[this] == ONIT
[L1839]  CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s675, value_s675);
[L1987]              __var_6 := null;
[L1988]  COND FALSE  !(!(to_s904 != null))
[L1992]  CALL        call __var_7 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][from_s904], value_s904);
[L1679]  COND FALSE  !(!(b_s82 <= a_s82))
[L1683]              c_s82 := (a_s82 - b_s82) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1684]              __ret_0_ := c_s82;
[L1992]  RET         call __var_7 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][from_s904], value_s904);
[L1993]  COND FALSE  !(revert)
[L1996]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][from_s904];
[L1997]              _balances_ERC20[this][from_s904] := __var_7;
[L1998]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][from_s904];
[L1999]  CALL        call __var_8 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][to_s904], value_s904);
[L1703]              c_s106 := (a_s106 + b_s106) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1704]  COND FALSE  !(!(c_s106 >= a_s106))
[L1708]              __ret_0_ := c_s106;
[L1999]  RET         call __var_8 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][to_s904], value_s904);
[L2000]  COND FALSE  !(revert)
[L2003]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][to_s904];
[L2004]              _balances_ERC20[this][to_s904] := __var_8;
[L2005]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][to_s904];
[L2006]              assert { :EventEmitted "Transfer_ERC20" } true;
[L1839]  RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s675, value_s675);
[L1840]  COND FALSE  !(revert)
[L1856]              __ret_0_ := true;
[L2043]  RET         call __var_9 := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, to_s1053, value_s1053);
[L2044]  COND FALSE  !(revert)
[L2055]              __ret_0_ := __var_9;
[L2314]  RET         call __var_20 := transfer~address~uint256_ERC20Pausable__success(this, msgsender_MSG, msgvalue_MSG, to_s1288, value_s1288);
[L2315]  COND FALSE  !(revert)
[L2321]              __ret_0_ := __var_20;
[L909]   RET         call __ret_0_ := transfer~address~uint256_ONIT__success(this, msgsender_MSG, msgvalue_MSG, to_s1288, value_s1288);
[L910]               assume !revert && gas >= 0;
[L4353]  RET         call __ret_0_transfer := transfer~address~uint256_ONIT(this, msgsender_MSG, msgvalue_MSG, to_s1288, value_s1288);
[L4400]  RET         call CorralChoice_ONIT(this);

Loop:
[L4400]        assume true;

[2020-11-24 16:02:26,894 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 16:02:26,894 INFO  L82        PathProgramCache]: Analyzing trace with hash 1074721319, now seen corresponding path program 1 times
[2020-11-24 16:02:26,895 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 16:02:26,920 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 16:02:26,939 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 16:02:26,991 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 16:02:26,991 INFO  L82        PathProgramCache]: Analyzing trace with hash 16447, now seen corresponding path program 1 times
[2020-11-24 16:02:26,992 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 16:02:26,993 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 16:02:26,993 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 16:02:26,994 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 16:02:26,994 INFO  L82        PathProgramCache]: Analyzing trace with hash -1043361063, now seen corresponding path program 1 times
[2020-11-24 16:02:26,995 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 16:02:27,010 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 16:02:27,027 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
[2020-11-24 16:02:27,239 WARN  L188               SmtUtils]: Spent 140.00 ms on a formula simplification. DAG size of input: 112 DAG size of output: 111
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #5: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #5: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
[2020-11-24 16:02:27,525 WARN  L188               SmtUtils]: Spent 145.00 ms on a formula simplification. DAG size of input: 130 DAG size of output: 127
Garbage collection #1: 41 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 41 to 79
Garbage collection #2: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #3: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #4: 313 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 313 to 619
Garbage collection #5: 619 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 619 to 1237
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
[2020-11-24 16:02:27,787 WARN  L188               SmtUtils]: Spent 191.00 ms on a formula simplification. DAG size of input: 120 DAG size of output: 115
Garbage collection #1: 41 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 41 to 79
Garbage collection #2: 79 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 79 to 157
Garbage collection #3: 157 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 157 to 313
Garbage collection #4: 313 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 313 to 619
Garbage collection #5: 619 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 619 to 1237
[2020-11-24 16:02:28,003 WARN  L188               SmtUtils]: Spent 117.00 ms on a formula simplification. DAG size of input: 105 DAG size of output: 104
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #5: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 199 to 397
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
[2020-11-24 16:02:28,586 WARN  L188               SmtUtils]: Spent 293.00 ms on a formula simplification. DAG size of input: 191 DAG size of output: 176
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 883 to 1759
Garbage collection #1: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #2: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #3: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #4: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #5: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
[2020-11-24 16:02:28,802 WARN  L188               SmtUtils]: Spent 152.00 ms on a formula simplification. DAG size of input: 146 DAG size of output: 141
Garbage collection #1: 47 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 47 to 89
Garbage collection #2: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #3: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #4: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #5: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
[2020-11-24 16:02:29,187 WARN  L188               SmtUtils]: Spent 301.00 ms on a formula simplification. DAG size of input: 159 DAG size of output: 149
Garbage collection #1: 47 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 47 to 89
Garbage collection #2: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #3: 173 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 173 to 337
Garbage collection #4: 337 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 337 to 673
Garbage collection #5: 673 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 673 to 1327
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #5: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
[2020-11-24 16:02:29,316 WARN  L188               SmtUtils]: Spent 121.00 ms on a formula simplification that was a NOOP. DAG size: 108
[2020-11-24 16:02:29,923 WARN  L188               SmtUtils]: Spent 606.00 ms on a formula simplification. DAG size of input: 328 DAG size of output: 323
Garbage collection #1: 127 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 127 to 251
Garbage collection #2: 251 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 251 to 499
Garbage collection #3: 499 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 499 to 997
Garbage collection #4: 997 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 997 to 1993
Garbage collection #5: 1993 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 1993 to 3967
Garbage collection #6: 3967 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 3967 to 7933
[2020-11-24 16:02:30,457 WARN  L188               SmtUtils]: Spent 526.00 ms on a formula simplification that was a NOOP. DAG size: 304
[2020-11-24 16:02:31,441 WARN  L188               SmtUtils]: Spent 981.00 ms on a formula simplification. DAG size of input: 325 DAG size of output: 320
Garbage collection #1: 127 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 127 to 251
Garbage collection #2: 251 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 251 to 499
Garbage collection #3: 499 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 499 to 997
Garbage collection #4: 997 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 997 to 1993
Garbage collection #5: 1993 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 1993 to 3967
Garbage collection #6: 3967 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 3967 to 7933
Garbage collection #7: 7933 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 7933 to 15859
Garbage collection #1: 67 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 67 to 131
Garbage collection #2: 131 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 131 to 257
Garbage collection #3: 257 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 257 to 509
Garbage collection #4: 509 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 509 to 1013
Garbage collection #5: 1013 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 1013 to 2017
Garbage collection #6: 2017 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 2017 to 4027
Garbage collection #7: 4027 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 4027 to 8053
[2020-11-24 16:02:31,737 WARN  L188               SmtUtils]: Spent 278.00 ms on a formula simplification that was a NOOP. DAG size: 216
[2020-11-24 16:02:32,212 WARN  L188               SmtUtils]: Spent 473.00 ms on a formula simplification that was a NOOP. DAG size: 408
Garbage collection #1: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #2: 317 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 317 to 631
Garbage collection #3: 631 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 631 to 1259
Garbage collection #4: 1259 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1259 to 2503
Garbage collection #5: 2503 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 2503 to 5003
Garbage collection #6: 5003 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 5003 to 9973
Garbage collection #7: 9973 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 9973 to 19937
[2020-11-24 16:02:32,739 WARN  L188               SmtUtils]: Spent 517.00 ms on a formula simplification that was a NOOP. DAG size: 319
[2020-11-24 16:02:33,318 WARN  L188               SmtUtils]: Spent 577.00 ms on a formula simplification. DAG size of input: 338 DAG size of output: 333
Garbage collection #1: 127 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 127 to 251
Garbage collection #2: 251 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 251 to 499
Garbage collection #3: 499 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 499 to 997
Garbage collection #4: 997 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 997 to 1993
Garbage collection #5: 1993 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1993 to 3967
Garbage collection #6: 3967 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3967 to 7933
Garbage collection #1: 71 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 71 to 139
Garbage collection #2: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #3: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #4: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #5: 1093 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1093 to 2179
Garbage collection #6: 2179 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2179 to 4357
[2020-11-24 16:02:33,630 WARN  L188               SmtUtils]: Spent 190.00 ms on a formula simplification that was a NOOP. DAG size: 310
Garbage collection #1: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #2: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #3: 443 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 443 to 883
Garbage collection #4: 883 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 883 to 1759
Garbage collection #5: 1759 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 1759 to 3517
Garbage collection #6: 3517 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 3517 to 7027
Garbage collection #1: 67 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 67 to 131
Garbage collection #2: 131 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 131 to 257
Garbage collection #3: 257 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 257 to 509
Garbage collection #4: 509 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 509 to 1013
Garbage collection #5: 1013 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1013 to 2017
Garbage collection #6: 2017 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2017 to 4027
[2020-11-24 16:02:33,749 WARN  L188               SmtUtils]: Spent 114.00 ms on a formula simplification that was a NOOP. DAG size: 216
[2020-11-24 16:02:34,169 WARN  L188               SmtUtils]: Spent 417.00 ms on a formula simplification. DAG size of input: 312 DAG size of output: 311
Garbage collection #1: 127 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 127 to 251
Garbage collection #2: 251 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 251 to 499
Garbage collection #3: 499 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 499 to 997
Garbage collection #4: 997 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 997 to 1993
Garbage collection #5: 1993 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1993 to 3967
Garbage collection #6: 3967 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3967 to 7933
Garbage collection #1: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #2: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #3: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #4: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #5: 1759 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1759 to 3517
Garbage collection #6: 3517 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3517 to 7027
[2020-11-24 16:02:34,358 WARN  L188               SmtUtils]: Spent 185.00 ms on a formula simplification that was a NOOP. DAG size: 307
[2020-11-24 16:02:34,373 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 16:02:34,380 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 24.11 04:02:34 BasicIcfg
[2020-11-24 16:02:34,381 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-24 16:02:34,381 INFO  L168              Benchmark]: Toolchain (without parser) took 11872.43 ms. Allocated memory was 1.0 GB in the beginning and 1.9 GB in the end (delta: 900.2 MB). Free memory was 935.2 MB in the beginning and 1.3 GB in the end (delta: -321.2 MB). Peak memory consumption was 1.0 GB. Max. memory is 15.3 GB.
[2020-11-24 16:02:34,382 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.23 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-24 16:02:34,382 INFO  L168              Benchmark]: Boogie Preprocessor took 128.15 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 924.5 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
[2020-11-24 16:02:34,382 INFO  L168              Benchmark]: UtopiaSpecLang took 61.64 ms. Allocated memory is still 1.0 GB. Free memory was 924.5 MB in the beginning and 919.1 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-24 16:02:34,383 INFO  L168              Benchmark]: Boogie Printer took 16.87 ms. Allocated memory is still 1.0 GB. Free memory is still 919.1 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-24 16:02:34,383 INFO  L168              Benchmark]: RCFGBuilder took 853.19 ms. Allocated memory is still 1.0 GB. Free memory was 919.1 MB in the beginning and 774.1 MB in the end (delta: 145.0 MB). Peak memory consumption was 145.0 MB. Max. memory is 15.3 GB.
[2020-11-24 16:02:34,384 INFO  L168              Benchmark]: UtopiaLTL2Aut took 37.14 ms. Allocated memory is still 1.0 GB. Free memory was 774.1 MB in the beginning and 770.5 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
[2020-11-24 16:02:34,384 INFO  L168              Benchmark]: BÃ¼chi Program Product took 1474.91 ms. Allocated memory was 1.0 GB in the beginning and 1.2 GB in the end (delta: 211.3 MB). Free memory was 770.5 MB in the beginning and 844.4 MB in the end (delta: -73.8 MB). Peak memory consumption was 149.8 MB. Max. memory is 15.3 GB.
[2020-11-24 16:02:34,385 INFO  L168              Benchmark]: BlockEncodingV2 took 137.60 ms. Allocated memory is still 1.2 GB. Free memory was 844.4 MB in the beginning and 784.1 MB in the end (delta: 60.3 MB). Peak memory consumption was 60.3 MB. Max. memory is 15.3 GB.
[2020-11-24 16:02:34,385 INFO  L168              Benchmark]: BuchiAutomizer took 9159.42 ms. Allocated memory was 1.2 GB in the beginning and 1.9 GB in the end (delta: 688.9 MB). Free memory was 784.1 MB in the beginning and 1.3 GB in the end (delta: -472.3 MB). Peak memory consumption was 650.0 MB. Max. memory is 15.3 GB.
[2020-11-24 16:02:34,388 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    3842 locations, 6780 edges
  - StatisticsResult: Encoded RCFG
    3692 locations, 6434 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.23 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 128.15 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 924.5 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 61.64 ms. Allocated memory is still 1.0 GB. Free memory was 924.5 MB in the beginning and 919.1 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 16.87 ms. Allocated memory is still 1.0 GB. Free memory is still 919.1 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * RCFGBuilder took 853.19 ms. Allocated memory is still 1.0 GB. Free memory was 919.1 MB in the beginning and 774.1 MB in the end (delta: 145.0 MB). Peak memory consumption was 145.0 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 37.14 ms. Allocated memory is still 1.0 GB. Free memory was 774.1 MB in the beginning and 770.5 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 1474.91 ms. Allocated memory was 1.0 GB in the beginning and 1.2 GB in the end (delta: 211.3 MB). Free memory was 770.5 MB in the beginning and 844.4 MB in the end (delta: -73.8 MB). Peak memory consumption was 149.8 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 137.60 ms. Allocated memory is still 1.2 GB. Free memory was 844.4 MB in the beginning and 784.1 MB in the end (delta: 60.3 MB). Peak memory consumption was 60.3 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 9159.42 ms. Allocated memory was 1.2 GB in the beginning and 1.9 GB in the end (delta: 688.9 MB). Free memory was 784.1 MB in the beginning and 1.3 GB in the end (delta: -472.3 MB). Peak memory consumption was 650.0 MB. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    1615 locations, 2112 edges
  - StatisticsResult: BuchiProgram size
    3842 locations, 6780 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 8 terminating modules (8 trivial, 0 deterministic, 0 nondeterministic) and one nonterminating remainder module.8 modules have a trivial ranking function, the largest among these consists of 10 locations. The remainder module has 338 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 9.1s and 9 iterations.  TraceHistogramMax:2. Analysis of lassos took 8.1s. Construction of modules took 0.4s. BÃ¼chi inclusion checks took 0.2s. Highest rank in rank-based complementation 0. Minimization of det autom 8. Minimization of nondet autom 0. Automata minimization 0.0s AutomataMinimizationTime, 8 MinimizatonAttempts, 6 StatesRemovedByMinimization, 3 NontrivialMinimizations. Non-live state removal took 0.0s Buchi closure took 0.0s. Biggest automaton had 385 states and ocurred in iteration 2.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 4217 SDtfs, 2659 SDslu, 5597 SDs, 0 SdLazy, 2438 SolverSat, 1082 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 0.4s Time	LassoAnalysisResults: nont1 unkn0 SFLI0 SFLT0 conc0 concLT0 SILN0 SILU8 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - TransactionCounterexample: Violation of LTL property LTL
    Found an infinite, lasso-shaped execution that violates the LTL property LTL.
Stem:
ONIT(231584178474632390847141970017375815706539969331281128078915168015826259279881).transfer~address~uint256.gas(3979001)({from : 231584178474632390847141970017375815706539969331281128078915168015826259279874, to : 231584178474632390847141970017375815706539969331281128078915168015826259279874, value : 1});
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == to_s1288 && value_s1288 > _balances_ERC20[this][msgsender_MSG]) && value_s1288 >= 0) && value_s1288 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][to_s1288] >= 0) && _balances_ERC20[this][to_s1288] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_ONIT0 := true;
[L2]                 call_transfer_ONIT0 := false;
[L2]                 revert := revert_hold;
[L871]               havoc __exception;
[L872]               revert := false;
[L873]   COND FALSE  !(__exception)
[L909]   CALL        call __ret_0_ := transfer~address~uint256_ONIT__success(this, msgsender_MSG, msgvalue_MSG, to_s1288, value_s1288);
[L2292]  CALL        call notFrozen_pre__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG);
[L3582]  COND FALSE  !(!!frozenAccount_ONIT[this][_holder_s1185])
[L2292]  RET         call notFrozen_pre__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG);
[L2293]  COND FALSE  !(revert)
[L2296]  COND FALSE  !(alloc_timelockList_ONIT_lvl0[timelockList_ONIT[this]][msgsender_MSG] == false)
[L2307]  COND TRUE   Length[M_Ref_Ref[timelockList_ONIT[this]][msgsender_MSG]] > 0
[L2308]  CALL        call __var_19 := _autoUnlock~address_ONIT__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG);
[L2653]  COND FALSE  !(alloc_timelockList_ONIT_lvl0[timelockList_ONIT[this]][holder_s1645] == false)
[L2664]              idx_s1645 := 0;
[L2665]  COND TRUE   idx_s1645 < Length[M_Ref_Ref[timelockList_ONIT[this]][holder_s1645]]
[L2667]  COND FALSE  !(alloc_timelockList_ONIT_lvl0[timelockList_ONIT[this]][holder_s1645] == false)
[L2678]  COND TRUE   _releaseTime_ONIT.LockInfo[M_int_Ref[M_Ref_Ref[timelockList_ONIT[this]][holder_s1645]][idx_s1645]] <= now
[L2679]  CALL        call __var_36 := _unlock~address~uint256_ONIT__success(this, msgsender_MSG, msgvalue_MSG, holder_s1645, idx_s1645);
[L2512]  COND FALSE  !(alloc_timelockList_ONIT_lvl0[timelockList_ONIT[this]][holder_s1600] == false)
[L2523]              lockinfo_s1600 := M_int_Ref[M_Ref_Ref[timelockList_ONIT[this]][holder_s1600]][idx_s1600];
[L2524]              releaseAmount_s1600 := _amount_ONIT.LockInfo[lockinfo_s1600];
[L2525]  COND FALSE  !(alloc_timelockList_ONIT_lvl0[timelockList_ONIT[this]][holder_s1600] == false)
[L2536]  COND FALSE  !(alloc_timelockList_ONIT_lvl0[timelockList_ONIT[this]][holder_s1600] == false)
[L2547]  COND FALSE  !(alloc_timelockList_ONIT_lvl0[timelockList_ONIT[this]][holder_s1600] == false)
[L2558]  CALL        call __var_29 := sub~uint256~uint256_SafeMath__success(this, this, 0, Length[M_Ref_Ref[timelockList_ONIT[this]][holder_s1600]], 1);
[L1679]  COND FALSE  !(!(b_s82 <= a_s82))
[L1683]              c_s82 := (a_s82 - b_s82) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1684]              __ret_0_ := c_s82;
[L2558]  RET         call __var_29 := sub~uint256~uint256_SafeMath__success(this, this, 0, Length[M_Ref_Ref[timelockList_ONIT[this]][holder_s1600]], 1);
[L2559]  COND FALSE  !(revert)
[L2562]  COND FALSE  !(alloc_timelockList_ONIT_lvl0[timelockList_ONIT[this]][holder_s1600] == false)
[L2573]              M_int_Ref[M_Ref_Ref[timelockList_ONIT[this]][holder_s1600]][idx_s1600] := M_int_Ref[M_Ref_Ref[timelockList_ONIT[this]][holder_s1600]][__var_29];
[L2574]  COND FALSE  !(alloc_timelockList_ONIT_lvl0[timelockList_ONIT[this]][holder_s1600] == false)
[L2585]              Length[M_Ref_Ref[timelockList_ONIT[this]][holder_s1600]] := (Length[M_Ref_Ref[timelockList_ONIT[this]][holder_s1600]] - 1) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2586]              assert { :EventEmitted "Unlock_ONIT" } true;
[L2587]  CALL        call __var_33 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][holder_s1600], releaseAmount_s1600);
[L1703]              c_s106 := (a_s106 + b_s106) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1704]  COND FALSE  !(!(c_s106 >= a_s106))
[L1708]              __ret_0_ := c_s106;
[L2587]  RET         call __var_33 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][holder_s1600], releaseAmount_s1600);
[L2588]  COND FALSE  !(revert)
[L2591]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][holder_s1600];
[L2592]              _balances_ERC20[this][holder_s1600] := __var_33;
[L2593]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][holder_s1600];
[L2594]              __ret_0_ := true;
[L2679]  RET         call __var_36 := _unlock~address~uint256_ONIT__success(this, msgsender_MSG, msgvalue_MSG, holder_s1645, idx_s1645);
[L2680]  COND FALSE  !(revert)
[L2683]  COND TRUE   __var_36
[L2684]              idx_s1645 := (idx_s1645 - 1) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2687]              idx_s1645 := (idx_s1645 + 1) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2688]  COND FALSE  !(gas < 0)
[L2665]  COND FALSE  !(idx_s1645 < Length[M_Ref_Ref[timelockList_ONIT[this]][holder_s1645]])
[L2692]              __ret_0_ := true;
[L2308]  RET         call __var_19 := _autoUnlock~address_ONIT__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG);
[L2309]  COND FALSE  !(revert)
[L2313]  COND TRUE   DType[this] == ONIT
[L2314]  CALL        call __var_20 := transfer~address~uint256_ERC20Pausable__success(this, msgsender_MSG, msgvalue_MSG, to_s1288, value_s1288);
[L2038]  CALL        call whenNotPaused_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L3558]  COND FALSE  !(!!_paused_Pausable[this])
[L2038]  RET         call whenNotPaused_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L2039]  COND FALSE  !(revert)
[L2042]  COND TRUE   DType[this] == ONIT
[L2043]  CALL        call __var_9 := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, to_s1053, value_s1053);
[L1838]  COND TRUE   DType[this] == ONIT
[L1839]  CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s675, value_s675);
[L1987]              __var_6 := null;
[L1988]  COND FALSE  !(!(to_s904 != null))
[L1992]  CALL        call __var_7 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][from_s904], value_s904);
[L1679]  COND FALSE  !(!(b_s82 <= a_s82))
[L1683]              c_s82 := (a_s82 - b_s82) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1684]              __ret_0_ := c_s82;
[L1992]  RET         call __var_7 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][from_s904], value_s904);
[L1993]  COND FALSE  !(revert)
[L1996]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][from_s904];
[L1997]              _balances_ERC20[this][from_s904] := __var_7;
[L1998]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][from_s904];
[L1999]  CALL        call __var_8 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][to_s904], value_s904);
[L1703]              c_s106 := (a_s106 + b_s106) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1704]  COND FALSE  !(!(c_s106 >= a_s106))
[L1708]              __ret_0_ := c_s106;
[L1999]  RET         call __var_8 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][to_s904], value_s904);
[L2000]  COND FALSE  !(revert)
[L2003]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][to_s904];
[L2004]              _balances_ERC20[this][to_s904] := __var_8;
[L2005]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][to_s904];
[L2006]              assert { :EventEmitted "Transfer_ERC20" } true;
[L1839]  RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s675, value_s675);
[L1840]  COND FALSE  !(revert)
[L1856]              __ret_0_ := true;
[L2043]  RET         call __var_9 := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, to_s1053, value_s1053);
[L2044]  COND FALSE  !(revert)
[L2055]              __ret_0_ := __var_9;
[L2314]  RET         call __var_20 := transfer~address~uint256_ERC20Pausable__success(this, msgsender_MSG, msgvalue_MSG, to_s1288, value_s1288);
[L2315]  COND FALSE  !(revert)
[L2321]              __ret_0_ := __var_20;
[L909]   RET         call __ret_0_ := transfer~address~uint256_ONIT__success(this, msgsender_MSG, msgvalue_MSG, to_s1288, value_s1288);
[L910]               assume !revert && gas >= 0;
[L4353]  RET         call __ret_0_transfer := transfer~address~uint256_ONIT(this, msgsender_MSG, msgvalue_MSG, to_s1288, value_s1288);

Loop:

End of lasso representation.
RESULT: Ultimate could not prove your program: Toolchain returned no result.
Received shutdown request...
