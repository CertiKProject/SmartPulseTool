This is Ultimate 0.1.24-f1553f5-m
[2020-11-24 18:16:47,091 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-24 18:16:47,092 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-24 18:16:47,099 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-24 18:16:47,100 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-24 18:16:47,100 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-24 18:16:47,101 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-24 18:16:47,102 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-24 18:16:47,103 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-24 18:16:47,103 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-24 18:16:47,104 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-24 18:16:47,104 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-24 18:16:47,104 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-24 18:16:47,105 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-24 18:16:47,106 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-24 18:16:47,107 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-24 18:16:47,107 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-24 18:16:47,108 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-24 18:16:47,110 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-24 18:16:47,111 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-24 18:16:47,111 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-24 18:16:47,112 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-24 18:16:47,114 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-24 18:16:47,114 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-24 18:16:47,114 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-24 18:16:47,115 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-24 18:16:47,115 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-24 18:16:47,116 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-24 18:16:47,116 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-24 18:16:47,116 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-24 18:16:47,117 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-24 18:16:47,117 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-24 18:16:47,118 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-24 18:16:47,119 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-24 18:16:47,119 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-24 18:16:47,120 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-24 18:16:47,120 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-24 18:16:47,120 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-24 18:16:47,121 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-24 18:16:47,121 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-24 18:16:47,122 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-24 18:16:47,122 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-24 18:16:47,132 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-24 18:16:47,132 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-24 18:16:47,133 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-24 18:16:47,133 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-24 18:16:47,133 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-24 18:16:47,133 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-24 18:16:47,133 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-24 18:16:47,134 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-24 18:16:47,134 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-24 18:16:47,134 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-24 18:16:47,134 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-24 18:16:47,134 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-24 18:16:47,134 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-24 18:16:47,134 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-24 18:16:47,134 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-24 18:16:47,134 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-24 18:16:47,135 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-24 18:16:47,135 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-24 18:16:47,135 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-24 18:16:47,135 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-24 18:16:47,135 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-24 18:16:47,135 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-24 18:16:47,135 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-24 18:16:47,135 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-24 18:16:47,135 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-24 18:16:47,135 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-24 18:16:47,154 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-24 18:16:47,161 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-24 18:16:47,164 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-24 18:16:47,165 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-24 18:16:47,165 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-24 18:16:47,166 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/CHMC_0xc2165aa929e529b00d6dafb1634e09ee972a1647_transfer-self.bpl
[2020-11-24 18:16:47,166 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/CHMC_0xc2165aa929e529b00d6dafb1634e09ee972a1647_transfer-self.bpl'
[2020-11-24 18:16:47,219 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-24 18:16:47,220 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-24 18:16:47,220 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-24 18:16:47,220 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-24 18:16:47,220 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-24 18:16:47,236 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "CHMC_0xc2165aa929e529b00d6dafb1634e09ee972a1647_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 06:16:47" (1/1) ...
[2020-11-24 18:16:47,237 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "CHMC_0xc2165aa929e529b00d6dafb1634e09ee972a1647_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 06:16:47" (1/1) ...
[2020-11-24 18:16:47,254 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "CHMC_0xc2165aa929e529b00d6dafb1634e09ee972a1647_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 06:16:47" (1/1) ...
[2020-11-24 18:16:47,254 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "CHMC_0xc2165aa929e529b00d6dafb1634e09ee972a1647_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 06:16:47" (1/1) ...
[2020-11-24 18:16:47,266 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "CHMC_0xc2165aa929e529b00d6dafb1634e09ee972a1647_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 06:16:47" (1/1) ...
[2020-11-24 18:16:47,272 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "CHMC_0xc2165aa929e529b00d6dafb1634e09ee972a1647_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 06:16:47" (1/1) ...
[2020-11-24 18:16:47,276 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "CHMC_0xc2165aa929e529b00d6dafb1634e09ee972a1647_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 06:16:47" (1/1) ...
[2020-11-24 18:16:47,281 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-24 18:16:47,281 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-24 18:16:47,282 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-24 18:16:47,284 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-24 18:16:47,288 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "CHMC_0xc2165aa929e529b00d6dafb1634e09ee972a1647_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 06:16:47" (1/1) ...
[2020-11-24 18:16:47,299 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(CHMC.transfer(to, value), msg.sender == to && value <= _balances_CHMC[this][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_CHMC[this][to] >= 0 && _balances_CHMC[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_CHMC[this][msg.sender] >= 0 &&  _balances_CHMC[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(CHMC.transfer(to, value), return == true && _totalSupply_CHMC[this] == old(_totalSupply_CHMC[this]) && _balances_CHMC[this] == old(_balances_CHMC[this]) && _allowed_CHMC[this] == old(_allowed_CHMC[this]) && _name_CHMC[this] == old(_name_CHMC[this]) && _symbol_CHMC[this] == old(_symbol_CHMC[this]) && _decimals_CHMC[this] == old(_decimals_CHMC[this]))))
[2020-11-24 18:16:47,304 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(CHMC.transfer(to, value), msg.sender == to && value <= _balances_CHMC[this][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_CHMC[this][to] >= 0 && _balances_CHMC[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_CHMC[this][msg.sender] >= 0 &&  _balances_CHMC[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(CHMC.transfer(to, value), return == true && _totalSupply_CHMC[this] == old(_totalSupply_CHMC[this]) && _balances_CHMC[this] == old(_balances_CHMC[this]) && _allowed_CHMC[this] == old(_allowed_CHMC[this]) && _name_CHMC[this] == old(_name_CHMC[this]) && _symbol_CHMC[this] == old(_symbol_CHMC[this]) && _decimals_CHMC[this] == old(_decimals_CHMC[this]))))
[2020-11-24 18:16:47,311 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(CHMC.transfer(to, value), msg.sender == to && value <= _balances_CHMC[this][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_CHMC[this][to] >= 0 && _balances_CHMC[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_CHMC[this][msg.sender] >= 0 &&  _balances_CHMC[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(CHMC.transfer(to, value), return == true && _totalSupply_CHMC[this] == old(_totalSupply_CHMC[this]) && _balances_CHMC[this] == old(_balances_CHMC[this]) && _allowed_CHMC[this] == old(_allowed_CHMC[this]) && _name_CHMC[this] == old(_name_CHMC[this]) && _symbol_CHMC[this] == old(_symbol_CHMC[this]) && _decimals_CHMC[this] == old(_decimals_CHMC[this]))))
[2020-11-24 18:16:47,316 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( msg.sender==to_s331 && value_s331<=_balances_CHMC[this][msg.sender] ) && value_s331>=0 ) && value_s331<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && _balances_CHMC[this][to_s331]>=0 ) && _balances_CHMC[this][to_s331]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && _balances_CHMC[this][msg.sender]>=0 ) && _balances_CHMC[this][msg.sender]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_CHMC>],IdentifierExpression[to_s331,<IMPLEMENTATION_INPARAM,transfer~address~uint256_CHMC>]],BinaryExpression[COMPLEQ,IdentifierExpression[value_s331,<IMPLEMENTATION_INPARAM,transfer~address~uint256_CHMC>],ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_CHMC,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_CHMC>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_CHMC>]]]]],BinaryExpression[COMPGEQ,IdentifierExpression[value_s331,<IMPLEMENTATION_INPARAM,transfer~address~uint256_CHMC>],IntegerLiteral[0]]],BinaryExpression[COMPLT,IdentifierExpression[value_s331,<IMPLEMENTATION_INPARAM,transfer~address~uint256_CHMC>],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_CHMC,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_CHMC>]]],[IdentifierExpression[to_s331,<IMPLEMENTATION_INPARAM,transfer~address~uint256_CHMC>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_CHMC,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_CHMC>]]],[IdentifierExpression[to_s331,<IMPLEMENTATION_INPARAM,transfer~address~uint256_CHMC>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_CHMC,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_CHMC>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_CHMC>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_CHMC,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_CHMC>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_CHMC>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]]
[2020-11-24 18:16:47,318 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( __ret_0_==true && _totalSupply_CHMC[this]==( old(_totalSupply_CHMC[this]) ) ) && _balances_CHMC[this]==( old(_balances_CHMC[this]) ) ) && _allowed_CHMC[this]==( old(_allowed_CHMC[this]) ) ) && _name_CHMC[this]==( old(_name_CHMC[this]) ) ) && _symbol_CHMC[this]==( old(_symbol_CHMC[this]) ) ) && _decimals_CHMC[this]==( old(_decimals_CHMC[this]) ) ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[__ret_0_,<IMPLEMENTATION_OUTPARAM,transfer~address~uint256_CHMC>],BooleanLiteral[true]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_totalSupply_CHMC,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_CHMC>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_totalSupply_CHMC,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_CHMC>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_balances_CHMC,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_CHMC>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_balances_CHMC,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_CHMC>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_allowed_CHMC,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_CHMC>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_allowed_CHMC,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_CHMC>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_name_CHMC,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_CHMC>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_name_CHMC,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_CHMC>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_symbol_CHMC,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_CHMC>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_symbol_CHMC,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_CHMC>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_decimals_CHMC,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_CHMC>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_decimals_CHMC,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_CHMC>]]]]]]
[2020-11-24 18:16:47,321 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(CHMC.transfer(to, value), msg.sender == to && value <= _balances_CHMC[this][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_CHMC[this][to] >= 0 && _balances_CHMC[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_CHMC[this][msg.sender] >= 0 &&  _balances_CHMC[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(CHMC.transfer(to, value), return == true && _totalSupply_CHMC[this] == old(_totalSupply_CHMC[this]) && _balances_CHMC[this] == old(_balances_CHMC[this]) && _allowed_CHMC[this] == old(_allowed_CHMC[this]) && _name_CHMC[this] == old(_name_CHMC[this]) && _symbol_CHMC[this] == old(_symbol_CHMC[this]) && _decimals_CHMC[this] == old(_decimals_CHMC[this]))))
[2020-11-24 18:16:47,321 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_transfer_CHMC0) ==> ( <>AP(success_transfer_CHMC0) ) ) )
Executed UtopiaSpecLang
[2020-11-24 18:16:47,325 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 06:16:47 PropertyContainer
[2020-11-24 18:16:47,325 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-24 18:16:47,326 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-24 18:16:47,326 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-24 18:16:47,326 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-24 18:16:47,326 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "CHMC_0xc2165aa929e529b00d6dafb1634e09ee972a1647_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 06:16:47" (1/2) ...
[2020-11-24 18:16:47,327 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-24 18:16:47,327 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-24 18:16:47,334 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 06:16:47" (2/2) ...
[2020-11-24 18:16:47,334 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-24 18:16:47,334 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-24 18:16:47,335 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-24 18:16:47,335 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-24 18:16:47,335 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "CHMC_0xc2165aa929e529b00d6dafb1634e09ee972a1647_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 06:16:47" (1/2) ...
[2020-11-24 18:16:47,385 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-24 18:16:47,385 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__success
[2020-11-24 18:16:47,385 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__success
[2020-11-24 18:16:47,385 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_CHMC
[2020-11-24 18:16:47,385 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_CHMC
[2020-11-24 18:16:47,385 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_CHMC
[2020-11-24 18:16:47,386 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_CHMC
[2020-11-24 18:16:47,386 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_CHMC
[2020-11-24 18:16:47,386 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_CHMC
[2020-11-24 18:16:47,386 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_CHMC
[2020-11-24 18:16:47,386 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_CHMC
[2020-11-24 18:16:47,386 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_CHMC
[2020-11-24 18:16:47,386 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_CHMC
[2020-11-24 18:16:47,386 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_CHMC
[2020-11-24 18:16:47,386 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_CHMC
[2020-11-24 18:16:47,386 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_CHMC__success
[2020-11-24 18:16:47,387 INFO  L130     BoogieDeclarations]: Found specification of procedure _approve~address~address~uint256_CHMC__success
[2020-11-24 18:16:47,387 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-24 18:16:47,387 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-24 18:16:47,387 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-24 18:16:47,387 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_IERC20
[2020-11-24 18:16:47,387 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_IERC20
[2020-11-24 18:16:47,387 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_SafeMath
[2020-11-24 18:16:47,387 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_SafeMath
[2020-11-24 18:16:47,387 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_CHMC
[2020-11-24 18:16:47,387 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-24 18:16:47,387 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-24 18:16:47,388 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-24 18:16:47,388 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__fail
[2020-11-24 18:16:47,388 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_CHMC__success
[2020-11-24 18:16:47,388 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_CHMC__fail
[2020-11-24 18:16:47,388 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_CHMC__success
[2020-11-24 18:16:47,388 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_CHMC__fail
[2020-11-24 18:16:47,388 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_CHMC__success
[2020-11-24 18:16:47,388 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_CHMC__fail
[2020-11-24 18:16:47,388 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_CHMC__success
[2020-11-24 18:16:47,388 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_CHMC__fail
[2020-11-24 18:16:47,388 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_CHMC__success
[2020-11-24 18:16:47,388 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_CHMC__fail
[2020-11-24 18:16:47,388 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_CHMC__success
[2020-11-24 18:16:47,389 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_CHMC__fail
[2020-11-24 18:16:47,389 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_CHMC__fail
[2020-11-24 18:16:47,389 INFO  L130     BoogieDeclarations]: Found specification of procedure _approve~address~address~uint256_CHMC__fail
[2020-11-24 18:16:47,389 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-24 18:16:47,389 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-24 18:16:47,389 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-24 18:16:47,389 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-24 18:16:47,389 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-24 18:16:47,389 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-24 18:16:47,389 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__success
[2020-11-24 18:16:47,389 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__fail
[2020-11-24 18:16:47,389 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__success
[2020-11-24 18:16:47,389 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_CHMC__fail
[2020-11-24 18:16:47,390 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_CHMC__success
[2020-11-24 18:16:47,390 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_CHMC__fail
[2020-11-24 18:16:47,390 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_CHMC__success
[2020-11-24 18:16:47,390 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_CHMC__fail
[2020-11-24 18:16:47,390 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_CHMC__success
[2020-11-24 18:16:47,390 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_CHMC__fail
[2020-11-24 18:16:47,390 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_CHMC__success
[2020-11-24 18:16:47,390 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_CHMC__fail
[2020-11-24 18:16:47,390 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_CHMC__success
[2020-11-24 18:16:47,390 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_CHMC__fail
[2020-11-24 18:16:47,390 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_CHMC__success
[2020-11-24 18:16:47,390 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_CHMC__fail
[2020-11-24 18:16:47,390 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_CHMC__success
[2020-11-24 18:16:47,390 INFO  L138     BoogieDeclarations]: Found implementation of procedure _approve~address~address~uint256_CHMC__fail
[2020-11-24 18:16:47,391 INFO  L138     BoogieDeclarations]: Found implementation of procedure _approve~address~address~uint256_CHMC__success
[2020-11-24 18:16:47,391 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-24 18:16:47,391 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-24 18:16:47,391 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-24 18:16:47,391 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-24 18:16:47,391 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-24 18:16:47,391 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-24 18:16:47,391 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_IERC20
[2020-11-24 18:16:47,391 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_IERC20
[2020-11-24 18:16:47,391 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_SafeMath
[2020-11-24 18:16:47,391 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_SafeMath
[2020-11-24 18:16:47,391 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_CHMC
[2020-11-24 18:16:47,392 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-24 18:16:47,392 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-24 18:16:47,392 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-24 18:16:47,704 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 18:16:47,705 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 18:16:47,705 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 18:16:47,759 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-24 18:16:47,759 INFO  L286             CfgBuilder]: Removed 3 assue(true) statements.
[2020-11-24 18:16:47,760 INFO  L202        PluginConnector]: Adding new model CHMC_0xc2165aa929e529b00d6dafb1634e09ee972a1647_transfer-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 06:16:47 BoogieIcfgContainer
[2020-11-24 18:16:47,760 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 06:16:47" (2/2) ...
[2020-11-24 18:16:47,760 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-24 18:16:47,761 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@207f6bf8 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 06:16:47, skipping insertion in model container
[2020-11-24 18:16:47,761 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-24 18:16:47,761 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-24 18:16:47,761 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-24 18:16:47,762 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-24 18:16:47,763 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "CHMC_0xc2165aa929e529b00d6dafb1634e09ee972a1647_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 06:16:47" (1/3) ...
[2020-11-24 18:16:47,763 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@4ba45df0 and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 06:16:47, skipping insertion in model container
[2020-11-24 18:16:47,763 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 06:16:47" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-24 18:16:47,803 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 06:16:47 NWAContainer
[2020-11-24 18:16:47,803 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-24 18:16:47,804 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-24 18:16:47,804 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-24 18:16:47,805 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-24 18:16:47,805 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "CHMC_0xc2165aa929e529b00d6dafb1634e09ee972a1647_transfer-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 06:16:47" (3/4) ...
[2020-11-24 18:16:47,806 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@32dca22e and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 06:16:47, skipping insertion in model container
[2020-11-24 18:16:47,806 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 06:16:47" (4/4) ...
[2020-11-24 18:16:47,809 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-24 18:16:47,812 INFO  L110   BuchiProductObserver]: Initial RCFG 496 locations, 613 edges
[2020-11-24 18:16:47,812 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-24 18:16:47,821 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-24 18:16:48,472 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-24 18:16:48,474 INFO  L110   BuchiProductObserver]: BuchiProgram size 1170 locations, 1977 edges
[2020-11-24 18:16:48,474 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 06:16:48 BoogieIcfgContainer
[2020-11-24 18:16:48,474 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-24 18:16:48,475 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-24 18:16:48,475 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-24 18:16:48,476 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-24 18:16:48,477 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 06:16:48" (1/1) ...
[2020-11-24 18:16:48,559 INFO  L313           BlockEncoder]: Initial Icfg 1170 locations, 1977 edges
[2020-11-24 18:16:48,559 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-24 18:16:48,560 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-24 18:16:48,560 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-24 18:16:48,560 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-24 18:16:48,565 INFO  L70    emoveInfeasibleEdges]: Removed 30 edges and 9 locations because of local infeasibility
[2020-11-24 18:16:48,568 INFO  L70        RemoveSinkStates]: Removed 2 edges and 1 locations by removing sink states
[2020-11-24 18:16:48,572 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-24 18:16:48,573 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-24 18:16:48,574 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-24 18:16:48,574 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-24 18:16:48,576 INFO  L313           BlockEncoder]: Encoded RCFG 1150 locations, 1931 edges
[2020-11-24 18:16:48,576 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 24.11 06:16:48 BasicIcfg
[2020-11-24 18:16:48,576 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-24 18:16:48,577 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-24 18:16:48,577 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-24 18:16:48,578 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-24 18:16:48,578 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 18:16:48,579 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "CHMC_0xc2165aa929e529b00d6dafb1634e09ee972a1647_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 06:16:47" (1/6) ...
[2020-11-24 18:16:48,580 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@74a55671 and model type CHMC_0xc2165aa929e529b00d6dafb1634e09ee972a1647_transfer-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 24.11 06:16:48, skipping insertion in model container
[2020-11-24 18:16:48,580 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 18:16:48,580 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 06:16:47" (2/6) ...
[2020-11-24 18:16:48,580 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@74a55671 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 24.11 06:16:48, skipping insertion in model container
[2020-11-24 18:16:48,580 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 18:16:48,580 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "CHMC_0xc2165aa929e529b00d6dafb1634e09ee972a1647_transfer-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 06:16:47" (3/6) ...
[2020-11-24 18:16:48,581 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@74a55671 and model type CHMC_0xc2165aa929e529b00d6dafb1634e09ee972a1647_transfer-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 24.11 06:16:48, skipping insertion in model container
[2020-11-24 18:16:48,581 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 18:16:48,581 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 06:16:47" (4/6) ...
[2020-11-24 18:16:48,581 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@74a55671 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 24.11 06:16:48, skipping insertion in model container
[2020-11-24 18:16:48,581 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 18:16:48,581 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 06:16:48" (5/6) ...
[2020-11-24 18:16:48,581 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@74a55671 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 24.11 06:16:48, skipping insertion in model container
[2020-11-24 18:16:48,581 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 18:16:48,581 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 24.11 06:16:48" (6/6) ...
[2020-11-24 18:16:48,582 INFO  L404   chiAutomizerObserver]: Analyzing ICFG CHMC_0xc2165aa929e529b00d6dafb1634e09ee972a1647_transfer-self.bpl_BEv2
[2020-11-24 18:16:48,614 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-24 18:16:48,615 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-24 18:16:48,615 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-24 18:16:48,615 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-24 18:16:48,615 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-24 18:16:48,615 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-24 18:16:48,615 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-24 18:16:48,615 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-24 18:16:48,615 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-24 18:16:48,627 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1150 states.
[2020-11-24 18:16:48,662 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 18:16:48,663 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 18:16:48,663 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 18:16:48,671 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 18:16:48,671 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
[2020-11-24 18:16:48,671 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-24 18:16:48,671 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1150 states.
[2020-11-24 18:16:48,678 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 18:16:48,678 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 18:16:48,678 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 18:16:48,679 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 18:16:48,680 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L2]                 success_transfer_CHMC0 := false;
[L2]                 call_transfer_CHMC0 := false;
[L2]     CALL        call main();
[L1413]              assume null == 0;
[L1414]  CALL        call this := FreshRefGenerator__success();
[L582]               havoc newRef;
[L583]               assume Alloc[newRef] == false;
[L584]               Alloc[newRef] := true;
[L585]               assume newRef != null;
[L1414]  RET         call this := FreshRefGenerator__success();
[L1415]              assume now >= 0;
[L1416]              assume DType[this] == CHMC;
[L1417]              assume !revert && gas >= 0;
[L1418]  CALL        call CorralChoice_CHMC(this);
[L1320]              havoc msgsender_MSG;
[L1321]              havoc msgvalue_MSG;
[L1322]              havoc choice;
[L1323]              havoc to_s331;
[L1324]              havoc value_s331;
[L1325]              havoc __ret_0_transfer;
[L1326]              havoc spender_s391;
[L1327]              havoc value_s391;
[L1328]              havoc __ret_0_approve;
[L1329]              havoc from_s426;
[L1330]              havoc to_s426;
[L1331]              havoc value_s426;
[L1332]              havoc __ret_0_transferFrom;
[L1333]              havoc __ret_0_totalSupply;
[L1334]              havoc owner_s296;
[L1335]              havoc __ret_0_balanceOf;
[L1336]              havoc owner_s312;
[L1337]              havoc spender_s312;
[L1338]              havoc __ret_0_allowance;
[L1339]              havoc initialSupply_s252;
[L1340]              havoc tokenName_s252;
[L1341]              havoc decimalUnits_s252;
[L1342]              havoc tokenSymbol_s252;
[L1343]              havoc __ret_0_name;
[L1344]              havoc __ret_0_symbol;
[L1345]              havoc __ret_0_decimals;
[L1346]              havoc value_s343;
[L1347]              havoc from_s356;
[L1348]              havoc value_s356;
[L1349]              havoc spender_s453;
[L1350]              havoc addedValue_s453;
[L1351]              havoc __ret_0_increaseAllowance;
[L1352]              havoc spender_s480;
[L1353]              havoc subtractedValue_s480;
[L1354]              havoc __ret_0_decreaseAllowance;
[L1355]              havoc tmpNow;
[L1356]              havoc gas;
[L1357]              assume gas > 4000000 && gas <= 8000000;
[L1358]              tmpNow := now;
[L1359]              havoc now;
[L1360]              assume now > tmpNow;
[L1361]              assume msgsender_MSG != null;
[L1362]  COND TRUE   choice == 6
[L1363]              gas := gas - 21000;
[L1364]  COND FALSE  !(gas >= 0)
[L1418]  RET         call CorralChoice_CHMC(this);

Loop:
[L1418]        assume true;

[2020-11-24 18:16:48,691 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 18:16:48,691 INFO  L82        PathProgramCache]: Analyzing trace with hash 994293815, now seen corresponding path program 1 times
[2020-11-24 18:16:48,694 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 18:16:48,711 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 18:16:48,755 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 18:16:48,757 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 18:16:48,757 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-24 18:16:48,761 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 18:16:48,770 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-24 18:16:48,770 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-24 18:16:48,772 INFO  L87              Difference]: Start difference. First operand 1150 states. Second operand 3 states.
[2020-11-24 18:16:48,920 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 18:16:48,920 INFO  L93              Difference]: Finished difference Result 585 states and 651 transitions.
[2020-11-24 18:16:48,920 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-24 18:16:48,921 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 585 states and 651 transitions.
[2020-11-24 18:16:48,925 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 18:16:48,930 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 585 states to 189 states and 202 transitions.
[2020-11-24 18:16:48,930 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 4
[2020-11-24 18:16:48,931 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 189
[2020-11-24 18:16:48,931 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 189 states and 202 transitions.
[2020-11-24 18:16:48,932 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 18:16:48,932 INFO  L728         BuchiCegarLoop]: Abstraction has 189 states and 202 transitions.
[2020-11-24 18:16:48,943 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 189 states and 202 transitions.
[2020-11-24 18:16:48,953 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 189 to 189.
[2020-11-24 18:16:48,953 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 189 states.
[2020-11-24 18:16:48,954 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 189 states to 189 states and 202 transitions.
[2020-11-24 18:16:48,955 INFO  L751         BuchiCegarLoop]: Abstraction has 189 states and 202 transitions.
[2020-11-24 18:16:48,955 INFO  L631         BuchiCegarLoop]: Abstraction has 189 states and 202 transitions.
[2020-11-24 18:16:48,955 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-24 18:16:48,955 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 189 states and 202 transitions.
[2020-11-24 18:16:48,958 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 18:16:48,958 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 18:16:48,958 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 18:16:48,960 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 18:16:48,961 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L2]                 success_transfer_CHMC0 := false;
[L2]                 call_transfer_CHMC0 := false;
[L2]     CALL        call main();
[L1413]              assume null == 0;
[L1414]  CALL        call this := FreshRefGenerator__success();
[L582]               havoc newRef;
[L583]               assume Alloc[newRef] == false;
[L584]               Alloc[newRef] := true;
[L585]               assume newRef != null;
[L1414]  RET         call this := FreshRefGenerator__success();
[L1415]              assume now >= 0;
[L1416]              assume DType[this] == CHMC;
[L1417]              assume !revert && gas >= 0;
[L1418]  CALL        call CorralChoice_CHMC(this);
[L1320]              havoc msgsender_MSG;
[L1321]              havoc msgvalue_MSG;
[L1322]              havoc choice;
[L1323]              havoc to_s331;
[L1324]              havoc value_s331;
[L1325]              havoc __ret_0_transfer;
[L1326]              havoc spender_s391;
[L1327]              havoc value_s391;
[L1328]              havoc __ret_0_approve;
[L1329]              havoc from_s426;
[L1330]              havoc to_s426;
[L1331]              havoc value_s426;
[L1332]              havoc __ret_0_transferFrom;
[L1333]              havoc __ret_0_totalSupply;
[L1334]              havoc owner_s296;
[L1335]              havoc __ret_0_balanceOf;
[L1336]              havoc owner_s312;
[L1337]              havoc spender_s312;
[L1338]              havoc __ret_0_allowance;
[L1339]              havoc initialSupply_s252;
[L1340]              havoc tokenName_s252;
[L1341]              havoc decimalUnits_s252;
[L1342]              havoc tokenSymbol_s252;
[L1343]              havoc __ret_0_name;
[L1344]              havoc __ret_0_symbol;
[L1345]              havoc __ret_0_decimals;
[L1346]              havoc value_s343;
[L1347]              havoc from_s356;
[L1348]              havoc value_s356;
[L1349]              havoc spender_s453;
[L1350]              havoc addedValue_s453;
[L1351]              havoc __ret_0_increaseAllowance;
[L1352]              havoc spender_s480;
[L1353]              havoc subtractedValue_s480;
[L1354]              havoc __ret_0_decreaseAllowance;
[L1355]              havoc tmpNow;
[L1356]              havoc gas;
[L1357]              assume gas > 4000000 && gas <= 8000000;
[L1358]              tmpNow := now;
[L1359]              havoc now;
[L1360]              assume now > tmpNow;
[L1361]              assume msgsender_MSG != null;
[L1362]  COND TRUE   choice == 6
[L1363]              gas := gas - 21000;
[L1364]  COND TRUE   gas >= 0
[L1365]              assume value_s331 >= 0 && value_s331 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1366]              assume msgvalue_MSG == 0;
[L1367]  CALL        call __ret_0_transfer := transfer~address~uint256_CHMC(this, msgsender_MSG, msgvalue_MSG, to_s331, value_s331);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == to_s331 && value_s331 <= _balances_CHMC[this][msgsender_MSG]) && value_s331 >= 0) && value_s331 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_CHMC[this][to_s331] >= 0) && _balances_CHMC[this][to_s331] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_CHMC[this][msgsender_MSG] >= 0) && _balances_CHMC[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_CHMC0 := true;
[L2]                 call_transfer_CHMC0 := false;
[L2]                 revert := revert_hold;
[L223]               havoc __exception;
[L224]               revert := false;
[L225]   COND FALSE  !(__exception)
[L246]   CALL        call __ret_0_ := transfer~address~uint256_CHMC__success(this, msgsender_MSG, msgvalue_MSG, to_s331, value_s331);
[L684]   CALL        call _transfer~address~address~uint256_CHMC__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s331, value_s331);
[L789]               __var_2 := null;
[L790]   COND TRUE   !(to_s526 != null)
[L791]               revert := true;
[L684]   RET         call _transfer~address~address~uint256_CHMC__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s331, value_s331);
[L685]   COND TRUE   revert
[L246]   RET         call __ret_0_ := transfer~address~uint256_CHMC__success(this, msgsender_MSG, msgvalue_MSG, to_s331, value_s331);
[L247]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !((((((__ret_0_ == true && _totalSupply_CHMC[this] == old(_totalSupply_CHMC[this])) && _balances_CHMC[this] == old(_balances_CHMC[this])) && _allowed_CHMC[this] == old(_allowed_CHMC[this])) && _name_CHMC[this] == old(_name_CHMC[this])) && _symbol_CHMC[this] == old(_symbol_CHMC[this])) && _decimals_CHMC[this] == old(_decimals_CHMC[this]));
[L2]                 revert := revert_hold;
[L1367]  RET         call __ret_0_transfer := transfer~address~uint256_CHMC(this, msgsender_MSG, msgvalue_MSG, to_s331, value_s331);
[L1418]  RET         call CorralChoice_CHMC(this);

Loop:
[L1418]        assume true;

[2020-11-24 18:16:48,966 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 18:16:48,966 INFO  L82        PathProgramCache]: Analyzing trace with hash -1091085583, now seen corresponding path program 1 times
[2020-11-24 18:16:48,968 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 18:16:48,979 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 18:16:49,011 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 18:16:49,011 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 18:16:49,011 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [7] imperfect sequences [] total 7
[2020-11-24 18:16:49,012 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 18:16:49,013 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 7 interpolants.
[2020-11-24 18:16:49,013 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=11, Invalid=31, Unknown=0, NotChecked=0, Total=42
[2020-11-24 18:16:49,013 INFO  L87              Difference]: Start difference. First operand 189 states and 202 transitions. cyclomatic complexity: 14 Second operand 7 states.
[2020-11-24 18:16:49,034 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 18:16:49,035 INFO  L93              Difference]: Finished difference Result 204 states and 217 transitions.
[2020-11-24 18:16:49,035 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 7 states. 
[2020-11-24 18:16:49,035 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 204 states and 217 transitions.
[2020-11-24 18:16:49,037 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 18:16:49,039 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 204 states to 188 states and 200 transitions.
[2020-11-24 18:16:49,039 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 188
[2020-11-24 18:16:49,039 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 188
[2020-11-24 18:16:49,039 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 188 states and 200 transitions.
[2020-11-24 18:16:49,040 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 18:16:49,040 INFO  L728         BuchiCegarLoop]: Abstraction has 188 states and 200 transitions.
[2020-11-24 18:16:49,041 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 188 states and 200 transitions.
[2020-11-24 18:16:49,046 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 188 to 188.
[2020-11-24 18:16:49,046 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 188 states.
[2020-11-24 18:16:49,047 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 188 states to 188 states and 200 transitions.
[2020-11-24 18:16:49,047 INFO  L751         BuchiCegarLoop]: Abstraction has 188 states and 200 transitions.
[2020-11-24 18:16:49,047 INFO  L631         BuchiCegarLoop]: Abstraction has 188 states and 200 transitions.
[2020-11-24 18:16:49,047 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-24 18:16:49,047 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 188 states and 200 transitions.
[2020-11-24 18:16:49,048 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 18:16:49,048 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 18:16:49,048 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 18:16:49,049 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 18:16:49,049 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L2]                 success_transfer_CHMC0 := false;
[L2]                 call_transfer_CHMC0 := false;
[L2]     CALL        call main();
[L1413]              assume null == 0;
[L1414]  CALL        call this := FreshRefGenerator__success();
[L582]               havoc newRef;
[L583]               assume Alloc[newRef] == false;
[L584]               Alloc[newRef] := true;
[L585]               assume newRef != null;
[L1414]  RET         call this := FreshRefGenerator__success();
[L1415]              assume now >= 0;
[L1416]              assume DType[this] == CHMC;
[L1417]              assume !revert && gas >= 0;
[L1418]  CALL        call CorralChoice_CHMC(this);
[L1320]              havoc msgsender_MSG;
[L1321]              havoc msgvalue_MSG;
[L1322]              havoc choice;
[L1323]              havoc to_s331;
[L1324]              havoc value_s331;
[L1325]              havoc __ret_0_transfer;
[L1326]              havoc spender_s391;
[L1327]              havoc value_s391;
[L1328]              havoc __ret_0_approve;
[L1329]              havoc from_s426;
[L1330]              havoc to_s426;
[L1331]              havoc value_s426;
[L1332]              havoc __ret_0_transferFrom;
[L1333]              havoc __ret_0_totalSupply;
[L1334]              havoc owner_s296;
[L1335]              havoc __ret_0_balanceOf;
[L1336]              havoc owner_s312;
[L1337]              havoc spender_s312;
[L1338]              havoc __ret_0_allowance;
[L1339]              havoc initialSupply_s252;
[L1340]              havoc tokenName_s252;
[L1341]              havoc decimalUnits_s252;
[L1342]              havoc tokenSymbol_s252;
[L1343]              havoc __ret_0_name;
[L1344]              havoc __ret_0_symbol;
[L1345]              havoc __ret_0_decimals;
[L1346]              havoc value_s343;
[L1347]              havoc from_s356;
[L1348]              havoc value_s356;
[L1349]              havoc spender_s453;
[L1350]              havoc addedValue_s453;
[L1351]              havoc __ret_0_increaseAllowance;
[L1352]              havoc spender_s480;
[L1353]              havoc subtractedValue_s480;
[L1354]              havoc __ret_0_decreaseAllowance;
[L1355]              havoc tmpNow;
[L1356]              havoc gas;
[L1357]              assume gas > 4000000 && gas <= 8000000;
[L1358]              tmpNow := now;
[L1359]              havoc now;
[L1360]              assume now > tmpNow;
[L1361]              assume msgsender_MSG != null;
[L1362]  COND TRUE   choice == 6
[L1363]              gas := gas - 21000;
[L1364]  COND TRUE   gas >= 0
[L1365]              assume value_s331 >= 0 && value_s331 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1366]              assume msgvalue_MSG == 0;
[L1367]  CALL        call __ret_0_transfer := transfer~address~uint256_CHMC(this, msgsender_MSG, msgvalue_MSG, to_s331, value_s331);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == to_s331 && value_s331 <= _balances_CHMC[this][msgsender_MSG]) && value_s331 >= 0) && value_s331 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_CHMC[this][to_s331] >= 0) && _balances_CHMC[this][to_s331] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_CHMC[this][msgsender_MSG] >= 0) && _balances_CHMC[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_CHMC0 := true;
[L2]                 call_transfer_CHMC0 := false;
[L2]                 revert := revert_hold;
[L223]               havoc __exception;
[L224]               revert := false;
[L225]   COND FALSE  !(__exception)
[L246]   CALL        call __ret_0_ := transfer~address~uint256_CHMC__success(this, msgsender_MSG, msgvalue_MSG, to_s331, value_s331);
[L684]   CALL        call _transfer~address~address~uint256_CHMC__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s331, value_s331);
[L789]               __var_2 := null;
[L790]   COND FALSE  !(!(to_s526 != null))
[L794]   CALL        call __var_3 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_CHMC[this][from_s526], value_s526);
[L603]   COND TRUE   !(b_s149 <= a_s149)
[L604]               revert := true;
[L794]   RET         call __var_3 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_CHMC[this][from_s526], value_s526);
[L795]   COND TRUE   revert
[L684]   RET         call _transfer~address~address~uint256_CHMC__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s331, value_s331);
[L685]   COND TRUE   revert
[L246]   RET         call __ret_0_ := transfer~address~uint256_CHMC__success(this, msgsender_MSG, msgvalue_MSG, to_s331, value_s331);
[L247]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !((((((__ret_0_ == true && _totalSupply_CHMC[this] == old(_totalSupply_CHMC[this])) && _balances_CHMC[this] == old(_balances_CHMC[this])) && _allowed_CHMC[this] == old(_allowed_CHMC[this])) && _name_CHMC[this] == old(_name_CHMC[this])) && _symbol_CHMC[this] == old(_symbol_CHMC[this])) && _decimals_CHMC[this] == old(_decimals_CHMC[this]));
[L2]                 revert := revert_hold;
[L1367]  RET         call __ret_0_transfer := transfer~address~uint256_CHMC(this, msgsender_MSG, msgvalue_MSG, to_s331, value_s331);
[L1418]  RET         call CorralChoice_CHMC(this);

Loop:
[L1418]        assume true;

[2020-11-24 18:16:49,052 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 18:16:49,052 INFO  L82        PathProgramCache]: Analyzing trace with hash -20142558, now seen corresponding path program 1 times
[2020-11-24 18:16:49,053 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 18:16:49,062 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 18:16:49,078 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 18:16:49,078 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 18:16:49,078 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-24 18:16:49,078 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 18:16:49,079 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-24 18:16:49,079 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-24 18:16:49,079 INFO  L87              Difference]: Start difference. First operand 188 states and 200 transitions. cyclomatic complexity: 13 Second operand 3 states.
[2020-11-24 18:16:49,086 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 18:16:49,086 INFO  L93              Difference]: Finished difference Result 227 states and 238 transitions.
[2020-11-24 18:16:49,086 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-24 18:16:49,086 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 227 states and 238 transitions.
[2020-11-24 18:16:49,088 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 2
[2020-11-24 18:16:49,089 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 227 states to 209 states and 216 transitions.
[2020-11-24 18:16:49,089 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 209
[2020-11-24 18:16:49,089 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 209
[2020-11-24 18:16:49,089 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 209 states and 216 transitions.
[2020-11-24 18:16:49,090 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 18:16:49,090 INFO  L728         BuchiCegarLoop]: Abstraction has 209 states and 216 transitions.
[2020-11-24 18:16:49,090 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 209 states and 216 transitions.
[2020-11-24 18:16:49,094 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 209 to 198.
[2020-11-24 18:16:49,094 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 198 states.
[2020-11-24 18:16:49,095 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 198 states to 198 states and 205 transitions.
[2020-11-24 18:16:49,095 INFO  L751         BuchiCegarLoop]: Abstraction has 198 states and 205 transitions.
[2020-11-24 18:16:49,095 INFO  L631         BuchiCegarLoop]: Abstraction has 198 states and 205 transitions.
[2020-11-24 18:16:49,095 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-24 18:16:49,095 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 198 states and 205 transitions.
[2020-11-24 18:16:49,096 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 18:16:49,096 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 18:16:49,097 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 18:16:49,098 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 18:16:49,098 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L2]                success_transfer_CHMC0 := false;
[L2]                call_transfer_CHMC0 := false;
[L2]     CALL       call main();
[L1413]             assume null == 0;
[L1414]  CALL       call this := FreshRefGenerator__success();
[L582]              havoc newRef;
[L583]              assume Alloc[newRef] == false;
[L584]              Alloc[newRef] := true;
[L585]              assume newRef != null;
[L1414]  RET        call this := FreshRefGenerator__success();
[L1415]             assume now >= 0;
[L1416]             assume DType[this] == CHMC;
[L1417]             assume !revert && gas >= 0;
[L1418]  CALL       call CorralChoice_CHMC(this);
[L1320]             havoc msgsender_MSG;
[L1321]             havoc msgvalue_MSG;
[L1322]             havoc choice;
[L1323]             havoc to_s331;
[L1324]             havoc value_s331;
[L1325]             havoc __ret_0_transfer;
[L1326]             havoc spender_s391;
[L1327]             havoc value_s391;
[L1328]             havoc __ret_0_approve;
[L1329]             havoc from_s426;
[L1330]             havoc to_s426;
[L1331]             havoc value_s426;
[L1332]             havoc __ret_0_transferFrom;
[L1333]             havoc __ret_0_totalSupply;
[L1334]             havoc owner_s296;
[L1335]             havoc __ret_0_balanceOf;
[L1336]             havoc owner_s312;
[L1337]             havoc spender_s312;
[L1338]             havoc __ret_0_allowance;
[L1339]             havoc initialSupply_s252;
[L1340]             havoc tokenName_s252;
[L1341]             havoc decimalUnits_s252;
[L1342]             havoc tokenSymbol_s252;
[L1343]             havoc __ret_0_name;
[L1344]             havoc __ret_0_symbol;
[L1345]             havoc __ret_0_decimals;
[L1346]             havoc value_s343;
[L1347]             havoc from_s356;
[L1348]             havoc value_s356;
[L1349]             havoc spender_s453;
[L1350]             havoc addedValue_s453;
[L1351]             havoc __ret_0_increaseAllowance;
[L1352]             havoc spender_s480;
[L1353]             havoc subtractedValue_s480;
[L1354]             havoc __ret_0_decreaseAllowance;
[L1355]             havoc tmpNow;
[L1356]             havoc gas;
[L1357]             assume gas > 4000000 && gas <= 8000000;
[L1358]             tmpNow := now;
[L1359]             havoc now;
[L1360]             assume now > tmpNow;
[L1361]             assume msgsender_MSG != null;
[L1362]  COND TRUE  choice == 6
[L1363]             gas := gas - 21000;
[L1364]  COND TRUE  gas >= 0
[L1365]             assume value_s331 >= 0 && value_s331 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1366]             assume msgvalue_MSG == 0;
[L1367]  CALL       call __ret_0_transfer := transfer~address~uint256_CHMC(this, msgsender_MSG, msgvalue_MSG, to_s331, value_s331);
[L2]                revert_hold := revert;
[L2]                revert := false;
[L2]                assume ((((((msgsender_MSG == to_s331 && value_s331 <= _balances_CHMC[this][msgsender_MSG]) && value_s331 >= 0) && value_s331 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_CHMC[this][to_s331] >= 0) && _balances_CHMC[this][to_s331] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_CHMC[this][msgsender_MSG] >= 0) && _balances_CHMC[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                call_transfer_CHMC0 := true;
[L2]                call_transfer_CHMC0 := false;
[L2]                revert := revert_hold;
[L223]              havoc __exception;
[L224]              revert := false;
[L225]   COND TRUE  __exception
[L226]              __tmp__Balance := Balance;
[L227]              __tmp__DType := DType;
[L228]              __tmp__Alloc := Alloc;
[L229]              __tmp__balance_ADDR := balance_ADDR;
[L230]              __tmp__M_Ref_int := M_Ref_int;
[L231]              __tmp__sum__balances0 := sum__balances0;
[L232]              __tmp__alloc__allowed_CHMC_lvl0 := alloc__allowed_CHMC_lvl0;
[L233]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L234]              __tmp__sum__allowed1 := sum__allowed1;
[L235]              __tmp__Length := Length;
[L236]              __tmp__now := now;
[L237]              __tmp___name_CHMC := _name_CHMC;
[L238]              __tmp___symbol_CHMC := _symbol_CHMC;
[L239]              __tmp___decimals_CHMC := _decimals_CHMC;
[L240]              __tmp___balances_CHMC := _balances_CHMC;
[L241]              __tmp___allowed_CHMC := _allowed_CHMC;
[L242]              __tmp___totalSupply_CHMC := _totalSupply_CHMC;
[L243]   CALL       call __ret_0_ := transfer~address~uint256_CHMC__fail(this, msgsender_MSG, msgvalue_MSG, to_s331, value_s331);
[L674]   CALL       call _transfer~address~address~uint256_CHMC__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s331, value_s331);
[L763]              __var_2 := null;
[L764]   COND TRUE  !(to_s526 != null)
[L765]              revert := true;
[L674]   RET        call _transfer~address~address~uint256_CHMC__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s331, value_s331);
[L675]   COND TRUE  revert
[L243]   RET        call __ret_0_ := transfer~address~uint256_CHMC__fail(this, msgsender_MSG, msgvalue_MSG, to_s331, value_s331);
[L244]              assume revert || gas < 0;
[L1367]  RET        call __ret_0_transfer := transfer~address~uint256_CHMC(this, msgsender_MSG, msgvalue_MSG, to_s331, value_s331);
[L1418]  RET        call CorralChoice_CHMC(this);

Loop:
[L1418]        assume true;

[2020-11-24 18:16:49,100 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 18:16:49,100 INFO  L82        PathProgramCache]: Analyzing trace with hash -1200901713, now seen corresponding path program 1 times
[2020-11-24 18:16:49,101 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 18:16:49,108 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 18:16:49,129 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 18:16:49,130 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 18:16:49,130 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [7] imperfect sequences [] total 7
[2020-11-24 18:16:49,130 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 18:16:49,130 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 7 interpolants.
[2020-11-24 18:16:49,130 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=11, Invalid=31, Unknown=0, NotChecked=0, Total=42
[2020-11-24 18:16:49,131 INFO  L87              Difference]: Start difference. First operand 198 states and 205 transitions. cyclomatic complexity: 8 Second operand 7 states.
[2020-11-24 18:16:49,145 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 18:16:49,145 INFO  L93              Difference]: Finished difference Result 208 states and 214 transitions.
[2020-11-24 18:16:49,145 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 7 states. 
[2020-11-24 18:16:49,145 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 208 states and 214 transitions.
[2020-11-24 18:16:49,147 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 18:16:49,148 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 208 states to 197 states and 203 transitions.
[2020-11-24 18:16:49,148 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 197
[2020-11-24 18:16:49,148 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 197
[2020-11-24 18:16:49,148 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 197 states and 203 transitions.
[2020-11-24 18:16:49,149 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 18:16:49,149 INFO  L728         BuchiCegarLoop]: Abstraction has 197 states and 203 transitions.
[2020-11-24 18:16:49,149 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 197 states and 203 transitions.
[2020-11-24 18:16:49,151 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 197 to 197.
[2020-11-24 18:16:49,151 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 197 states.
[2020-11-24 18:16:49,152 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 197 states to 197 states and 203 transitions.
[2020-11-24 18:16:49,152 INFO  L751         BuchiCegarLoop]: Abstraction has 197 states and 203 transitions.
[2020-11-24 18:16:49,152 INFO  L631         BuchiCegarLoop]: Abstraction has 197 states and 203 transitions.
[2020-11-24 18:16:49,152 INFO  L445         BuchiCegarLoop]: ======== Iteration 5============
[2020-11-24 18:16:49,152 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 197 states and 203 transitions.
[2020-11-24 18:16:49,153 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 18:16:49,153 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 18:16:49,153 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 18:16:49,154 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 18:16:49,154 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L2]                 success_transfer_CHMC0 := false;
[L2]                 call_transfer_CHMC0 := false;
[L2]     CALL        call main();
[L1413]              assume null == 0;
[L1414]  CALL        call this := FreshRefGenerator__success();
[L582]               havoc newRef;
[L583]               assume Alloc[newRef] == false;
[L584]               Alloc[newRef] := true;
[L585]               assume newRef != null;
[L1414]  RET         call this := FreshRefGenerator__success();
[L1415]              assume now >= 0;
[L1416]              assume DType[this] == CHMC;
[L1417]              assume !revert && gas >= 0;
[L1418]  CALL        call CorralChoice_CHMC(this);
[L1320]              havoc msgsender_MSG;
[L1321]              havoc msgvalue_MSG;
[L1322]              havoc choice;
[L1323]              havoc to_s331;
[L1324]              havoc value_s331;
[L1325]              havoc __ret_0_transfer;
[L1326]              havoc spender_s391;
[L1327]              havoc value_s391;
[L1328]              havoc __ret_0_approve;
[L1329]              havoc from_s426;
[L1330]              havoc to_s426;
[L1331]              havoc value_s426;
[L1332]              havoc __ret_0_transferFrom;
[L1333]              havoc __ret_0_totalSupply;
[L1334]              havoc owner_s296;
[L1335]              havoc __ret_0_balanceOf;
[L1336]              havoc owner_s312;
[L1337]              havoc spender_s312;
[L1338]              havoc __ret_0_allowance;
[L1339]              havoc initialSupply_s252;
[L1340]              havoc tokenName_s252;
[L1341]              havoc decimalUnits_s252;
[L1342]              havoc tokenSymbol_s252;
[L1343]              havoc __ret_0_name;
[L1344]              havoc __ret_0_symbol;
[L1345]              havoc __ret_0_decimals;
[L1346]              havoc value_s343;
[L1347]              havoc from_s356;
[L1348]              havoc value_s356;
[L1349]              havoc spender_s453;
[L1350]              havoc addedValue_s453;
[L1351]              havoc __ret_0_increaseAllowance;
[L1352]              havoc spender_s480;
[L1353]              havoc subtractedValue_s480;
[L1354]              havoc __ret_0_decreaseAllowance;
[L1355]              havoc tmpNow;
[L1356]              havoc gas;
[L1357]              assume gas > 4000000 && gas <= 8000000;
[L1358]              tmpNow := now;
[L1359]              havoc now;
[L1360]              assume now > tmpNow;
[L1361]              assume msgsender_MSG != null;
[L1362]  COND TRUE   choice == 6
[L1363]              gas := gas - 21000;
[L1364]  COND TRUE   gas >= 0
[L1365]              assume value_s331 >= 0 && value_s331 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1366]              assume msgvalue_MSG == 0;
[L1367]  CALL        call __ret_0_transfer := transfer~address~uint256_CHMC(this, msgsender_MSG, msgvalue_MSG, to_s331, value_s331);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == to_s331 && value_s331 <= _balances_CHMC[this][msgsender_MSG]) && value_s331 >= 0) && value_s331 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_CHMC[this][to_s331] >= 0) && _balances_CHMC[this][to_s331] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_CHMC[this][msgsender_MSG] >= 0) && _balances_CHMC[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_CHMC0 := true;
[L2]                 call_transfer_CHMC0 := false;
[L2]                 revert := revert_hold;
[L223]               havoc __exception;
[L224]               revert := false;
[L225]   COND TRUE   __exception
[L226]               __tmp__Balance := Balance;
[L227]               __tmp__DType := DType;
[L228]               __tmp__Alloc := Alloc;
[L229]               __tmp__balance_ADDR := balance_ADDR;
[L230]               __tmp__M_Ref_int := M_Ref_int;
[L231]               __tmp__sum__balances0 := sum__balances0;
[L232]               __tmp__alloc__allowed_CHMC_lvl0 := alloc__allowed_CHMC_lvl0;
[L233]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L234]               __tmp__sum__allowed1 := sum__allowed1;
[L235]               __tmp__Length := Length;
[L236]               __tmp__now := now;
[L237]               __tmp___name_CHMC := _name_CHMC;
[L238]               __tmp___symbol_CHMC := _symbol_CHMC;
[L239]               __tmp___decimals_CHMC := _decimals_CHMC;
[L240]               __tmp___balances_CHMC := _balances_CHMC;
[L241]               __tmp___allowed_CHMC := _allowed_CHMC;
[L242]               __tmp___totalSupply_CHMC := _totalSupply_CHMC;
[L243]   CALL        call __ret_0_ := transfer~address~uint256_CHMC__fail(this, msgsender_MSG, msgvalue_MSG, to_s331, value_s331);
[L674]   CALL        call _transfer~address~address~uint256_CHMC__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s331, value_s331);
[L763]               __var_2 := null;
[L764]   COND FALSE  !(!(to_s526 != null))
[L768]   CALL        call __var_3 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __tmp___balances_CHMC[this][from_s526], value_s526);
[L591]   COND TRUE   !(b_s149 <= a_s149)
[L592]               revert := true;
[L768]   RET         call __var_3 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __tmp___balances_CHMC[this][from_s526], value_s526);
[L769]   COND TRUE   revert
[L674]   RET         call _transfer~address~address~uint256_CHMC__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s331, value_s331);
[L675]   COND TRUE   revert
[L243]   RET         call __ret_0_ := transfer~address~uint256_CHMC__fail(this, msgsender_MSG, msgvalue_MSG, to_s331, value_s331);
[L244]               assume revert || gas < 0;
[L1367]  RET         call __ret_0_transfer := transfer~address~uint256_CHMC(this, msgsender_MSG, msgvalue_MSG, to_s331, value_s331);
[L1418]  RET         call CorralChoice_CHMC(this);

Loop:
[L1418]        assume true;

[2020-11-24 18:16:49,156 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 18:16:49,156 INFO  L82        PathProgramCache]: Analyzing trace with hash 730077763, now seen corresponding path program 1 times
[2020-11-24 18:16:49,157 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 18:16:49,166 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 18:16:49,223 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 18:16:49,224 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 18:16:49,224 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [8] imperfect sequences [] total 8
[2020-11-24 18:16:49,224 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 18:16:49,224 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 8 interpolants.
[2020-11-24 18:16:49,224 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=13, Invalid=43, Unknown=0, NotChecked=0, Total=56
[2020-11-24 18:16:49,225 INFO  L87              Difference]: Start difference. First operand 197 states and 203 transitions. cyclomatic complexity: 7 Second operand 8 states.
[2020-11-24 18:16:49,337 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 18:16:49,337 INFO  L93              Difference]: Finished difference Result 220 states and 225 transitions.
[2020-11-24 18:16:49,337 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 9 states. 
[2020-11-24 18:16:49,338 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 220 states and 225 transitions.
[2020-11-24 18:16:49,339 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 2
[2020-11-24 18:16:49,340 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 220 states to 209 states and 214 transitions.
[2020-11-24 18:16:49,340 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 209
[2020-11-24 18:16:49,340 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 209
[2020-11-24 18:16:49,340 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 209 states and 214 transitions.
[2020-11-24 18:16:49,341 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 18:16:49,341 INFO  L728         BuchiCegarLoop]: Abstraction has 209 states and 214 transitions.
[2020-11-24 18:16:49,341 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 209 states and 214 transitions.
[2020-11-24 18:16:49,343 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 209 to 192.
[2020-11-24 18:16:49,343 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 192 states.
[2020-11-24 18:16:49,344 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 192 states to 192 states and 197 transitions.
[2020-11-24 18:16:49,344 INFO  L751         BuchiCegarLoop]: Abstraction has 192 states and 197 transitions.
[2020-11-24 18:16:49,344 INFO  L631         BuchiCegarLoop]: Abstraction has 192 states and 197 transitions.
[2020-11-24 18:16:49,344 INFO  L445         BuchiCegarLoop]: ======== Iteration 6============
[2020-11-24 18:16:49,344 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 192 states and 197 transitions.
[2020-11-24 18:16:49,345 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 18:16:49,345 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 18:16:49,345 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 18:16:49,346 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 18:16:49,346 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L2]                 success_transfer_CHMC0 := false;
[L2]                 call_transfer_CHMC0 := false;
[L2]     CALL        call main();
[L1413]              assume null == 0;
[L1414]  CALL        call this := FreshRefGenerator__success();
[L582]               havoc newRef;
[L583]               assume Alloc[newRef] == false;
[L584]               Alloc[newRef] := true;
[L585]               assume newRef != null;
[L1414]  RET         call this := FreshRefGenerator__success();
[L1415]              assume now >= 0;
[L1416]              assume DType[this] == CHMC;
[L1417]              assume !revert && gas >= 0;
[L1418]  CALL        call CorralChoice_CHMC(this);
[L1320]              havoc msgsender_MSG;
[L1321]              havoc msgvalue_MSG;
[L1322]              havoc choice;
[L1323]              havoc to_s331;
[L1324]              havoc value_s331;
[L1325]              havoc __ret_0_transfer;
[L1326]              havoc spender_s391;
[L1327]              havoc value_s391;
[L1328]              havoc __ret_0_approve;
[L1329]              havoc from_s426;
[L1330]              havoc to_s426;
[L1331]              havoc value_s426;
[L1332]              havoc __ret_0_transferFrom;
[L1333]              havoc __ret_0_totalSupply;
[L1334]              havoc owner_s296;
[L1335]              havoc __ret_0_balanceOf;
[L1336]              havoc owner_s312;
[L1337]              havoc spender_s312;
[L1338]              havoc __ret_0_allowance;
[L1339]              havoc initialSupply_s252;
[L1340]              havoc tokenName_s252;
[L1341]              havoc decimalUnits_s252;
[L1342]              havoc tokenSymbol_s252;
[L1343]              havoc __ret_0_name;
[L1344]              havoc __ret_0_symbol;
[L1345]              havoc __ret_0_decimals;
[L1346]              havoc value_s343;
[L1347]              havoc from_s356;
[L1348]              havoc value_s356;
[L1349]              havoc spender_s453;
[L1350]              havoc addedValue_s453;
[L1351]              havoc __ret_0_increaseAllowance;
[L1352]              havoc spender_s480;
[L1353]              havoc subtractedValue_s480;
[L1354]              havoc __ret_0_decreaseAllowance;
[L1355]              havoc tmpNow;
[L1356]              havoc gas;
[L1357]              assume gas > 4000000 && gas <= 8000000;
[L1358]              tmpNow := now;
[L1359]              havoc now;
[L1360]              assume now > tmpNow;
[L1361]              assume msgsender_MSG != null;
[L1362]  COND TRUE   choice == 6
[L1363]              gas := gas - 21000;
[L1364]  COND TRUE   gas >= 0
[L1365]              assume value_s331 >= 0 && value_s331 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1366]              assume msgvalue_MSG == 0;
[L1367]  CALL        call __ret_0_transfer := transfer~address~uint256_CHMC(this, msgsender_MSG, msgvalue_MSG, to_s331, value_s331);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == to_s331 && value_s331 <= _balances_CHMC[this][msgsender_MSG]) && value_s331 >= 0) && value_s331 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_CHMC[this][to_s331] >= 0) && _balances_CHMC[this][to_s331] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_CHMC[this][msgsender_MSG] >= 0) && _balances_CHMC[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_CHMC0 := true;
[L2]                 call_transfer_CHMC0 := false;
[L2]                 revert := revert_hold;
[L223]               havoc __exception;
[L224]               revert := false;
[L225]   COND TRUE   __exception
[L226]               __tmp__Balance := Balance;
[L227]               __tmp__DType := DType;
[L228]               __tmp__Alloc := Alloc;
[L229]               __tmp__balance_ADDR := balance_ADDR;
[L230]               __tmp__M_Ref_int := M_Ref_int;
[L231]               __tmp__sum__balances0 := sum__balances0;
[L232]               __tmp__alloc__allowed_CHMC_lvl0 := alloc__allowed_CHMC_lvl0;
[L233]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L234]               __tmp__sum__allowed1 := sum__allowed1;
[L235]               __tmp__Length := Length;
[L236]               __tmp__now := now;
[L237]               __tmp___name_CHMC := _name_CHMC;
[L238]               __tmp___symbol_CHMC := _symbol_CHMC;
[L239]               __tmp___decimals_CHMC := _decimals_CHMC;
[L240]               __tmp___balances_CHMC := _balances_CHMC;
[L241]               __tmp___allowed_CHMC := _allowed_CHMC;
[L242]               __tmp___totalSupply_CHMC := _totalSupply_CHMC;
[L243]   CALL        call __ret_0_ := transfer~address~uint256_CHMC__fail(this, msgsender_MSG, msgvalue_MSG, to_s331, value_s331);
[L674]   CALL        call _transfer~address~address~uint256_CHMC__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s331, value_s331);
[L763]               __var_2 := null;
[L764]   COND FALSE  !(!(to_s526 != null))
[L768]   CALL        call __var_3 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __tmp___balances_CHMC[this][from_s526], value_s526);
[L591]   COND FALSE  !(!(b_s149 <= a_s149))
[L595]               c_s149 := (a_s149 - b_s149) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L596]               __ret_0_ := c_s149;
[L768]   RET         call __var_3 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __tmp___balances_CHMC[this][from_s526], value_s526);
[L769]   COND TRUE   revert
[L674]   RET         call _transfer~address~address~uint256_CHMC__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s331, value_s331);
[L675]   COND TRUE   revert
[L243]   RET         call __ret_0_ := transfer~address~uint256_CHMC__fail(this, msgsender_MSG, msgvalue_MSG, to_s331, value_s331);
[L244]               assume revert || gas < 0;
[L1367]  RET         call __ret_0_transfer := transfer~address~uint256_CHMC(this, msgsender_MSG, msgvalue_MSG, to_s331, value_s331);
[L1418]  RET         call CorralChoice_CHMC(this);

Loop:
[L1418]        assume true;

[2020-11-24 18:16:49,348 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 18:16:49,348 INFO  L82        PathProgramCache]: Analyzing trace with hash -943867785, now seen corresponding path program 1 times
[2020-11-24 18:16:49,349 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 18:16:49,355 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 18:16:49,375 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 18:16:49,376 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 18:16:49,376 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [5] imperfect sequences [] total 5
[2020-11-24 18:16:49,376 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 18:16:49,376 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 5 interpolants.
[2020-11-24 18:16:49,376 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=9, Invalid=11, Unknown=0, NotChecked=0, Total=20
[2020-11-24 18:16:49,377 INFO  L87              Difference]: Start difference. First operand 192 states and 197 transitions. cyclomatic complexity: 6 Second operand 5 states.
[2020-11-24 18:16:49,389 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 18:16:49,390 INFO  L93              Difference]: Finished difference Result 203 states and 205 transitions.
[2020-11-24 18:16:49,390 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-24 18:16:49,390 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 203 states and 205 transitions.
[2020-11-24 18:16:49,391 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 2
[2020-11-24 18:16:49,392 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 203 states to 203 states and 205 transitions.
[2020-11-24 18:16:49,392 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 203
[2020-11-24 18:16:49,392 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 203
[2020-11-24 18:16:49,392 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 203 states and 205 transitions.
[2020-11-24 18:16:49,393 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 18:16:49,393 INFO  L728         BuchiCegarLoop]: Abstraction has 203 states and 205 transitions.
[2020-11-24 18:16:49,393 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 203 states and 205 transitions.
[2020-11-24 18:16:49,395 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 203 to 192.
[2020-11-24 18:16:49,395 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 192 states.
[2020-11-24 18:16:49,396 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 192 states to 192 states and 194 transitions.
[2020-11-24 18:16:49,396 INFO  L751         BuchiCegarLoop]: Abstraction has 192 states and 194 transitions.
[2020-11-24 18:16:49,396 INFO  L631         BuchiCegarLoop]: Abstraction has 192 states and 194 transitions.
[2020-11-24 18:16:49,396 INFO  L445         BuchiCegarLoop]: ======== Iteration 7============
[2020-11-24 18:16:49,396 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 192 states and 194 transitions.
[2020-11-24 18:16:49,397 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 18:16:49,397 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 18:16:49,397 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 18:16:49,398 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 18:16:49,398 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L2]                 success_transfer_CHMC0 := false;
[L2]                 call_transfer_CHMC0 := false;
[L2]     CALL        call main();
[L1413]              assume null == 0;
[L1414]  CALL        call this := FreshRefGenerator__success();
[L582]               havoc newRef;
[L583]               assume Alloc[newRef] == false;
[L584]               Alloc[newRef] := true;
[L585]               assume newRef != null;
[L1414]  RET         call this := FreshRefGenerator__success();
[L1415]              assume now >= 0;
[L1416]              assume DType[this] == CHMC;
[L1417]              assume !revert && gas >= 0;
[L1418]  CALL        call CorralChoice_CHMC(this);
[L1320]              havoc msgsender_MSG;
[L1321]              havoc msgvalue_MSG;
[L1322]              havoc choice;
[L1323]              havoc to_s331;
[L1324]              havoc value_s331;
[L1325]              havoc __ret_0_transfer;
[L1326]              havoc spender_s391;
[L1327]              havoc value_s391;
[L1328]              havoc __ret_0_approve;
[L1329]              havoc from_s426;
[L1330]              havoc to_s426;
[L1331]              havoc value_s426;
[L1332]              havoc __ret_0_transferFrom;
[L1333]              havoc __ret_0_totalSupply;
[L1334]              havoc owner_s296;
[L1335]              havoc __ret_0_balanceOf;
[L1336]              havoc owner_s312;
[L1337]              havoc spender_s312;
[L1338]              havoc __ret_0_allowance;
[L1339]              havoc initialSupply_s252;
[L1340]              havoc tokenName_s252;
[L1341]              havoc decimalUnits_s252;
[L1342]              havoc tokenSymbol_s252;
[L1343]              havoc __ret_0_name;
[L1344]              havoc __ret_0_symbol;
[L1345]              havoc __ret_0_decimals;
[L1346]              havoc value_s343;
[L1347]              havoc from_s356;
[L1348]              havoc value_s356;
[L1349]              havoc spender_s453;
[L1350]              havoc addedValue_s453;
[L1351]              havoc __ret_0_increaseAllowance;
[L1352]              havoc spender_s480;
[L1353]              havoc subtractedValue_s480;
[L1354]              havoc __ret_0_decreaseAllowance;
[L1355]              havoc tmpNow;
[L1356]              havoc gas;
[L1357]              assume gas > 4000000 && gas <= 8000000;
[L1358]              tmpNow := now;
[L1359]              havoc now;
[L1360]              assume now > tmpNow;
[L1361]              assume msgsender_MSG != null;
[L1362]  COND TRUE   choice == 6
[L1363]              gas := gas - 21000;
[L1364]  COND TRUE   gas >= 0
[L1365]              assume value_s331 >= 0 && value_s331 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1366]              assume msgvalue_MSG == 0;
[L1367]  CALL        call __ret_0_transfer := transfer~address~uint256_CHMC(this, msgsender_MSG, msgvalue_MSG, to_s331, value_s331);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == to_s331 && value_s331 <= _balances_CHMC[this][msgsender_MSG]) && value_s331 >= 0) && value_s331 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_CHMC[this][to_s331] >= 0) && _balances_CHMC[this][to_s331] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_CHMC[this][msgsender_MSG] >= 0) && _balances_CHMC[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_CHMC0 := true;
[L2]                 call_transfer_CHMC0 := false;
[L2]                 revert := revert_hold;
[L223]               havoc __exception;
[L224]               revert := false;
[L225]   COND FALSE  !(__exception)
[L246]   CALL        call __ret_0_ := transfer~address~uint256_CHMC__success(this, msgsender_MSG, msgvalue_MSG, to_s331, value_s331);
[L684]   CALL        call _transfer~address~address~uint256_CHMC__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s331, value_s331);
[L789]               __var_2 := null;
[L790]   COND FALSE  !(!(to_s526 != null))
[L794]   CALL        call __var_3 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_CHMC[this][from_s526], value_s526);
[L603]   COND FALSE  !(!(b_s149 <= a_s149))
[L607]               c_s149 := (a_s149 - b_s149) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L608]               __ret_0_ := c_s149;
[L794]   RET         call __var_3 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_CHMC[this][from_s526], value_s526);
[L795]   COND FALSE  !(revert)
[L798]               sum__balances0[this] := sum__balances0[this] - _balances_CHMC[this][from_s526];
[L799]               _balances_CHMC[this][from_s526] := __var_3;
[L800]               sum__balances0[this] := sum__balances0[this] + _balances_CHMC[this][from_s526];
[L801]   CALL        call __var_4 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_CHMC[this][to_s526], value_s526);
[L627]               c_s173 := (a_s173 + b_s173) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L628]   COND FALSE  !(!(c_s173 >= a_s173))
[L632]               __ret_0_ := c_s173;
[L801]   RET         call __var_4 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_CHMC[this][to_s526], value_s526);
[L802]   COND FALSE  !(revert)
[L805]               sum__balances0[this] := sum__balances0[this] - _balances_CHMC[this][to_s526];
[L806]               _balances_CHMC[this][to_s526] := __var_4;
[L807]               sum__balances0[this] := sum__balances0[this] + _balances_CHMC[this][to_s526];
[L808]               assert { :EventEmitted "Transfer_CHMC" } true;
[L684]   RET         call _transfer~address~address~uint256_CHMC__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s331, value_s331);
[L685]   COND FALSE  !(revert)
[L688]               __ret_0_ := true;
[L246]   RET         call __ret_0_ := transfer~address~uint256_CHMC__success(this, msgsender_MSG, msgvalue_MSG, to_s331, value_s331);
[L247]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !((((((__ret_0_ == true && _totalSupply_CHMC[this] == old(_totalSupply_CHMC[this])) && _balances_CHMC[this] == old(_balances_CHMC[this])) && _allowed_CHMC[this] == old(_allowed_CHMC[this])) && _name_CHMC[this] == old(_name_CHMC[this])) && _symbol_CHMC[this] == old(_symbol_CHMC[this])) && _decimals_CHMC[this] == old(_decimals_CHMC[this]));
[L2]                 revert := revert_hold;
[L1367]  RET         call __ret_0_transfer := transfer~address~uint256_CHMC(this, msgsender_MSG, msgvalue_MSG, to_s331, value_s331);
[L1418]  RET         call CorralChoice_CHMC(this);

Loop:
[L1418]        assume true;

[2020-11-24 18:16:49,400 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 18:16:49,400 INFO  L82        PathProgramCache]: Analyzing trace with hash 270379097, now seen corresponding path program 1 times
[2020-11-24 18:16:49,401 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 18:16:49,436 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 18:16:49,855 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 18:16:49,856 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 18:16:49,856 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [20] imperfect sequences [] total 20
[2020-11-24 18:16:49,856 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 18:16:49,856 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 20 interpolants.
[2020-11-24 18:16:49,857 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=50, Invalid=330, Unknown=0, NotChecked=0, Total=380
[2020-11-24 18:16:49,857 INFO  L87              Difference]: Start difference. First operand 192 states and 194 transitions. cyclomatic complexity: 3 Second operand 20 states.
[2020-11-24 18:16:50,368 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 18:16:50,368 INFO  L93              Difference]: Finished difference Result 197 states and 198 transitions.
[2020-11-24 18:16:50,368 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 20 states. 
[2020-11-24 18:16:50,369 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 197 states and 198 transitions.
[2020-11-24 18:16:50,370 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 18:16:50,370 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 197 states to 148 states and 149 transitions.
[2020-11-24 18:16:50,370 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 148
[2020-11-24 18:16:50,370 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 148
[2020-11-24 18:16:50,370 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 148 states and 149 transitions.
[2020-11-24 18:16:50,371 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 18:16:50,371 INFO  L728         BuchiCegarLoop]: Abstraction has 148 states and 149 transitions.
[2020-11-24 18:16:50,371 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 148 states and 149 transitions.
[2020-11-24 18:16:50,372 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 148 to 148.
[2020-11-24 18:16:50,372 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 148 states.
[2020-11-24 18:16:50,372 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 148 states to 148 states and 149 transitions.
[2020-11-24 18:16:50,373 INFO  L751         BuchiCegarLoop]: Abstraction has 148 states and 149 transitions.
[2020-11-24 18:16:50,373 INFO  L631         BuchiCegarLoop]: Abstraction has 148 states and 149 transitions.
[2020-11-24 18:16:50,373 INFO  L445         BuchiCegarLoop]: ======== Iteration 8============
[2020-11-24 18:16:50,373 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 148 states and 149 transitions.
[2020-11-24 18:16:50,373 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 18:16:50,374 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 18:16:50,374 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 18:16:50,375 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 18:16:50,375 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L2]                 success_transfer_CHMC0 := false;
[L2]                 call_transfer_CHMC0 := false;
[L2]     CALL        call main();
[L1413]              assume null == 0;
[L1414]  CALL        call this := FreshRefGenerator__success();
[L582]               havoc newRef;
[L583]               assume Alloc[newRef] == false;
[L584]               Alloc[newRef] := true;
[L585]               assume newRef != null;
[L1414]  RET         call this := FreshRefGenerator__success();
[L1415]              assume now >= 0;
[L1416]              assume DType[this] == CHMC;
[L1417]              assume !revert && gas >= 0;
[L1418]  CALL        call CorralChoice_CHMC(this);
[L1320]              havoc msgsender_MSG;
[L1321]              havoc msgvalue_MSG;
[L1322]              havoc choice;
[L1323]              havoc to_s331;
[L1324]              havoc value_s331;
[L1325]              havoc __ret_0_transfer;
[L1326]              havoc spender_s391;
[L1327]              havoc value_s391;
[L1328]              havoc __ret_0_approve;
[L1329]              havoc from_s426;
[L1330]              havoc to_s426;
[L1331]              havoc value_s426;
[L1332]              havoc __ret_0_transferFrom;
[L1333]              havoc __ret_0_totalSupply;
[L1334]              havoc owner_s296;
[L1335]              havoc __ret_0_balanceOf;
[L1336]              havoc owner_s312;
[L1337]              havoc spender_s312;
[L1338]              havoc __ret_0_allowance;
[L1339]              havoc initialSupply_s252;
[L1340]              havoc tokenName_s252;
[L1341]              havoc decimalUnits_s252;
[L1342]              havoc tokenSymbol_s252;
[L1343]              havoc __ret_0_name;
[L1344]              havoc __ret_0_symbol;
[L1345]              havoc __ret_0_decimals;
[L1346]              havoc value_s343;
[L1347]              havoc from_s356;
[L1348]              havoc value_s356;
[L1349]              havoc spender_s453;
[L1350]              havoc addedValue_s453;
[L1351]              havoc __ret_0_increaseAllowance;
[L1352]              havoc spender_s480;
[L1353]              havoc subtractedValue_s480;
[L1354]              havoc __ret_0_decreaseAllowance;
[L1355]              havoc tmpNow;
[L1356]              havoc gas;
[L1357]              assume gas > 4000000 && gas <= 8000000;
[L1358]              tmpNow := now;
[L1359]              havoc now;
[L1360]              assume now > tmpNow;
[L1361]              assume msgsender_MSG != null;
[L1362]  COND TRUE   choice == 6
[L1363]              gas := gas - 21000;
[L1364]  COND TRUE   gas >= 0
[L1365]              assume value_s331 >= 0 && value_s331 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1366]              assume msgvalue_MSG == 0;
[L1367]  CALL        call __ret_0_transfer := transfer~address~uint256_CHMC(this, msgsender_MSG, msgvalue_MSG, to_s331, value_s331);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == to_s331 && value_s331 <= _balances_CHMC[this][msgsender_MSG]) && value_s331 >= 0) && value_s331 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_CHMC[this][to_s331] >= 0) && _balances_CHMC[this][to_s331] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_CHMC[this][msgsender_MSG] >= 0) && _balances_CHMC[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_CHMC0 := true;
[L2]                 call_transfer_CHMC0 := false;
[L2]                 revert := revert_hold;
[L223]               havoc __exception;
[L224]               revert := false;
[L225]   COND TRUE   __exception
[L226]               __tmp__Balance := Balance;
[L227]               __tmp__DType := DType;
[L228]               __tmp__Alloc := Alloc;
[L229]               __tmp__balance_ADDR := balance_ADDR;
[L230]               __tmp__M_Ref_int := M_Ref_int;
[L231]               __tmp__sum__balances0 := sum__balances0;
[L232]               __tmp__alloc__allowed_CHMC_lvl0 := alloc__allowed_CHMC_lvl0;
[L233]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L234]               __tmp__sum__allowed1 := sum__allowed1;
[L235]               __tmp__Length := Length;
[L236]               __tmp__now := now;
[L237]               __tmp___name_CHMC := _name_CHMC;
[L238]               __tmp___symbol_CHMC := _symbol_CHMC;
[L239]               __tmp___decimals_CHMC := _decimals_CHMC;
[L240]               __tmp___balances_CHMC := _balances_CHMC;
[L241]               __tmp___allowed_CHMC := _allowed_CHMC;
[L242]               __tmp___totalSupply_CHMC := _totalSupply_CHMC;
[L243]   CALL        call __ret_0_ := transfer~address~uint256_CHMC__fail(this, msgsender_MSG, msgvalue_MSG, to_s331, value_s331);
[L674]   CALL        call _transfer~address~address~uint256_CHMC__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s331, value_s331);
[L763]               __var_2 := null;
[L764]   COND FALSE  !(!(to_s526 != null))
[L768]   CALL        call __var_3 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __tmp___balances_CHMC[this][from_s526], value_s526);
[L591]   COND FALSE  !(!(b_s149 <= a_s149))
[L595]               c_s149 := (a_s149 - b_s149) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L596]               __ret_0_ := c_s149;
[L768]   RET         call __var_3 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __tmp___balances_CHMC[this][from_s526], value_s526);
[L769]   COND FALSE  !(revert)
[L772]               __tmp__sum__balances0[this] := __tmp__sum__balances0[this] - __tmp___balances_CHMC[this][from_s526];
[L773]               __tmp___balances_CHMC[this][from_s526] := __var_3;
[L774]               __tmp__sum__balances0[this] := __tmp__sum__balances0[this] + __tmp___balances_CHMC[this][from_s526];
[L775]   CALL        call __var_4 := add~uint256~uint256_SafeMath__fail(this, this, 0, __tmp___balances_CHMC[this][to_s526], value_s526);
[L615]               c_s173 := (a_s173 + b_s173) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L616]   COND TRUE   !(c_s173 >= a_s173)
[L617]               revert := true;
[L775]   RET         call __var_4 := add~uint256~uint256_SafeMath__fail(this, this, 0, __tmp___balances_CHMC[this][to_s526], value_s526);
[L776]   COND TRUE   revert
[L674]   RET         call _transfer~address~address~uint256_CHMC__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s331, value_s331);
[L675]   COND TRUE   revert
[L243]   RET         call __ret_0_ := transfer~address~uint256_CHMC__fail(this, msgsender_MSG, msgvalue_MSG, to_s331, value_s331);
[L244]               assume revert || gas < 0;
[L1367]  RET         call __ret_0_transfer := transfer~address~uint256_CHMC(this, msgsender_MSG, msgvalue_MSG, to_s331, value_s331);
[L1418]  RET         call CorralChoice_CHMC(this);

Loop:
[L1418]        assume true;

[2020-11-24 18:16:50,376 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 18:16:50,376 INFO  L82        PathProgramCache]: Analyzing trace with hash 1895217698, now seen corresponding path program 1 times
[2020-11-24 18:16:50,377 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 18:16:50,384 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 18:16:50,441 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 18:16:50,441 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 18:16:50,441 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [14] imperfect sequences [] total 14
[2020-11-24 18:16:50,441 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 18:16:50,441 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 14 interpolants.
[2020-11-24 18:16:50,441 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=28, Invalid=154, Unknown=0, NotChecked=0, Total=182
[2020-11-24 18:16:50,442 INFO  L87              Difference]: Start difference. First operand 148 states and 149 transitions. cyclomatic complexity: 2 Second operand 14 states.
[2020-11-24 18:16:50,509 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 18:16:50,510 INFO  L93              Difference]: Finished difference Result 150 states and 150 transitions.
[2020-11-24 18:16:50,510 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 15 states. 
[2020-11-24 18:16:50,510 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 150 states and 150 transitions.
[2020-11-24 18:16:50,510 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 18:16:50,511 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 150 states to 139 states and 139 transitions.
[2020-11-24 18:16:50,512 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 139
[2020-11-24 18:16:50,512 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 139
[2020-11-24 18:16:50,512 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 139 states and 139 transitions.
[2020-11-24 18:16:50,512 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 18:16:50,512 INFO  L728         BuchiCegarLoop]: Abstraction has 139 states and 139 transitions.
[2020-11-24 18:16:50,512 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 139 states and 139 transitions.
[2020-11-24 18:16:50,513 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 139 to 139.
[2020-11-24 18:16:50,513 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 139 states.
[2020-11-24 18:16:50,513 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 139 states to 139 states and 139 transitions.
[2020-11-24 18:16:50,513 INFO  L751         BuchiCegarLoop]: Abstraction has 139 states and 139 transitions.
[2020-11-24 18:16:50,513 INFO  L631         BuchiCegarLoop]: Abstraction has 139 states and 139 transitions.
[2020-11-24 18:16:50,513 INFO  L445         BuchiCegarLoop]: ======== Iteration 9============
[2020-11-24 18:16:50,514 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 139 states and 139 transitions.
[2020-11-24 18:16:50,514 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 18:16:50,514 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 18:16:50,514 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 18:16:50,515 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 18:16:50,515 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L2]                 success_transfer_CHMC0 := false;
[L2]                 call_transfer_CHMC0 := false;
[L2]     CALL        call main();
[L1413]              assume null == 0;
[L1414]  CALL        call this := FreshRefGenerator__success();
[L582]               havoc newRef;
[L583]               assume Alloc[newRef] == false;
[L584]               Alloc[newRef] := true;
[L585]               assume newRef != null;
[L1414]  RET         call this := FreshRefGenerator__success();
[L1415]              assume now >= 0;
[L1416]              assume DType[this] == CHMC;
[L1417]              assume !revert && gas >= 0;
[L1418]  CALL        call CorralChoice_CHMC(this);
[L1320]              havoc msgsender_MSG;
[L1321]              havoc msgvalue_MSG;
[L1322]              havoc choice;
[L1323]              havoc to_s331;
[L1324]              havoc value_s331;
[L1325]              havoc __ret_0_transfer;
[L1326]              havoc spender_s391;
[L1327]              havoc value_s391;
[L1328]              havoc __ret_0_approve;
[L1329]              havoc from_s426;
[L1330]              havoc to_s426;
[L1331]              havoc value_s426;
[L1332]              havoc __ret_0_transferFrom;
[L1333]              havoc __ret_0_totalSupply;
[L1334]              havoc owner_s296;
[L1335]              havoc __ret_0_balanceOf;
[L1336]              havoc owner_s312;
[L1337]              havoc spender_s312;
[L1338]              havoc __ret_0_allowance;
[L1339]              havoc initialSupply_s252;
[L1340]              havoc tokenName_s252;
[L1341]              havoc decimalUnits_s252;
[L1342]              havoc tokenSymbol_s252;
[L1343]              havoc __ret_0_name;
[L1344]              havoc __ret_0_symbol;
[L1345]              havoc __ret_0_decimals;
[L1346]              havoc value_s343;
[L1347]              havoc from_s356;
[L1348]              havoc value_s356;
[L1349]              havoc spender_s453;
[L1350]              havoc addedValue_s453;
[L1351]              havoc __ret_0_increaseAllowance;
[L1352]              havoc spender_s480;
[L1353]              havoc subtractedValue_s480;
[L1354]              havoc __ret_0_decreaseAllowance;
[L1355]              havoc tmpNow;
[L1356]              havoc gas;
[L1357]              assume gas > 4000000 && gas <= 8000000;
[L1358]              tmpNow := now;
[L1359]              havoc now;
[L1360]              assume now > tmpNow;
[L1361]              assume msgsender_MSG != null;
[L1362]  COND TRUE   choice == 6
[L1363]              gas := gas - 21000;
[L1364]  COND TRUE   gas >= 0
[L1365]              assume value_s331 >= 0 && value_s331 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1366]              assume msgvalue_MSG == 0;
[L1367]  CALL        call __ret_0_transfer := transfer~address~uint256_CHMC(this, msgsender_MSG, msgvalue_MSG, to_s331, value_s331);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == to_s331 && value_s331 <= _balances_CHMC[this][msgsender_MSG]) && value_s331 >= 0) && value_s331 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_CHMC[this][to_s331] >= 0) && _balances_CHMC[this][to_s331] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_CHMC[this][msgsender_MSG] >= 0) && _balances_CHMC[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_CHMC0 := true;
[L2]                 call_transfer_CHMC0 := false;
[L2]                 revert := revert_hold;
[L223]               havoc __exception;
[L224]               revert := false;
[L225]   COND TRUE   __exception
[L226]               __tmp__Balance := Balance;
[L227]               __tmp__DType := DType;
[L228]               __tmp__Alloc := Alloc;
[L229]               __tmp__balance_ADDR := balance_ADDR;
[L230]               __tmp__M_Ref_int := M_Ref_int;
[L231]               __tmp__sum__balances0 := sum__balances0;
[L232]               __tmp__alloc__allowed_CHMC_lvl0 := alloc__allowed_CHMC_lvl0;
[L233]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L234]               __tmp__sum__allowed1 := sum__allowed1;
[L235]               __tmp__Length := Length;
[L236]               __tmp__now := now;
[L237]               __tmp___name_CHMC := _name_CHMC;
[L238]               __tmp___symbol_CHMC := _symbol_CHMC;
[L239]               __tmp___decimals_CHMC := _decimals_CHMC;
[L240]               __tmp___balances_CHMC := _balances_CHMC;
[L241]               __tmp___allowed_CHMC := _allowed_CHMC;
[L242]               __tmp___totalSupply_CHMC := _totalSupply_CHMC;
[L243]   CALL        call __ret_0_ := transfer~address~uint256_CHMC__fail(this, msgsender_MSG, msgvalue_MSG, to_s331, value_s331);
[L674]   CALL        call _transfer~address~address~uint256_CHMC__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s331, value_s331);
[L763]               __var_2 := null;
[L764]   COND FALSE  !(!(to_s526 != null))
[L768]   CALL        call __var_3 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __tmp___balances_CHMC[this][from_s526], value_s526);
[L591]   COND FALSE  !(!(b_s149 <= a_s149))
[L595]               c_s149 := (a_s149 - b_s149) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L596]               __ret_0_ := c_s149;
[L768]   RET         call __var_3 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __tmp___balances_CHMC[this][from_s526], value_s526);
[L769]   COND FALSE  !(revert)
[L772]               __tmp__sum__balances0[this] := __tmp__sum__balances0[this] - __tmp___balances_CHMC[this][from_s526];
[L773]               __tmp___balances_CHMC[this][from_s526] := __var_3;
[L774]               __tmp__sum__balances0[this] := __tmp__sum__balances0[this] + __tmp___balances_CHMC[this][from_s526];
[L775]   CALL        call __var_4 := add~uint256~uint256_SafeMath__fail(this, this, 0, __tmp___balances_CHMC[this][to_s526], value_s526);
[L615]               c_s173 := (a_s173 + b_s173) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L616]   COND FALSE  !(!(c_s173 >= a_s173))
[L620]               __ret_0_ := c_s173;
[L775]   RET         call __var_4 := add~uint256~uint256_SafeMath__fail(this, this, 0, __tmp___balances_CHMC[this][to_s526], value_s526);
[L776]   COND FALSE  !(revert)
[L779]               __tmp__sum__balances0[this] := __tmp__sum__balances0[this] - __tmp___balances_CHMC[this][to_s526];
[L780]               __tmp___balances_CHMC[this][to_s526] := __var_4;
[L781]               __tmp__sum__balances0[this] := __tmp__sum__balances0[this] + __tmp___balances_CHMC[this][to_s526];
[L674]   RET         call _transfer~address~address~uint256_CHMC__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s331, value_s331);
[L675]   COND FALSE  !(revert)
[L678]               __ret_0_ := true;
[L243]   RET         call __ret_0_ := transfer~address~uint256_CHMC__fail(this, msgsender_MSG, msgvalue_MSG, to_s331, value_s331);
[L244]               assume revert || gas < 0;
[L1367]  RET         call __ret_0_transfer := transfer~address~uint256_CHMC(this, msgsender_MSG, msgvalue_MSG, to_s331, value_s331);
[L1418]  RET         call CorralChoice_CHMC(this);

Loop:
[L1418]        assume true;

[2020-11-24 18:16:50,516 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 18:16:50,516 INFO  L82        PathProgramCache]: Analyzing trace with hash 2013131396, now seen corresponding path program 1 times
[2020-11-24 18:16:50,517 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 18:16:50,521 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 18:16:50,538 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 18:16:50,538 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 18:16:50,538 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [5] imperfect sequences [] total 5
[2020-11-24 18:16:50,538 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 18:16:50,539 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 5 interpolants.
[2020-11-24 18:16:50,539 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=7, Invalid=13, Unknown=0, NotChecked=0, Total=20
[2020-11-24 18:16:50,539 INFO  L87              Difference]: Start difference. First operand 139 states and 139 transitions. cyclomatic complexity: 1 Second operand 5 states.
[2020-11-24 18:16:50,546 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 18:16:50,546 INFO  L93              Difference]: Finished difference Result 132 states and 131 transitions.
[2020-11-24 18:16:50,546 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 5 states. 
[2020-11-24 18:16:50,546 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 132 states and 131 transitions.
[2020-11-24 18:16:50,547 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-24 18:16:50,547 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 132 states to 0 states and 0 transitions.
[2020-11-24 18:16:50,547 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 0
[2020-11-24 18:16:50,547 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 0
[2020-11-24 18:16:50,547 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 0 states and 0 transitions.
[2020-11-24 18:16:50,547 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 18:16:50,547 INFO  L728         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-24 18:16:50,547 INFO  L751         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-24 18:16:50,547 INFO  L631         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-24 18:16:50,547 INFO  L445         BuchiCegarLoop]: ======== Iteration 10============
[2020-11-24 18:16:50,547 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 0 states and 0 transitions.
[2020-11-24 18:16:50,547 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-24 18:16:50,547 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is true
[2020-11-24 18:16:50,550 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 24.11 06:16:50 BasicIcfg
[2020-11-24 18:16:50,551 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-24 18:16:50,551 INFO  L168              Benchmark]: Toolchain (without parser) took 3331.93 ms. Allocated memory was 1.0 GB in the beginning and 1.3 GB in the end (delta: 313.5 MB). Free memory was 945.9 MB in the beginning and 1.0 GB in the end (delta: -99.2 MB). Peak memory consumption was 214.3 MB. Max. memory is 15.3 GB.
[2020-11-24 18:16:50,552 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.14 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-24 18:16:50,552 INFO  L168              Benchmark]: Boogie Preprocessor took 61.29 ms. Allocated memory is still 1.0 GB. Free memory is still 945.9 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-24 18:16:50,552 INFO  L168              Benchmark]: UtopiaSpecLang took 43.96 ms. Allocated memory is still 1.0 GB. Free memory was 945.9 MB in the beginning and 940.6 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-24 18:16:50,552 INFO  L168              Benchmark]: Boogie Printer took 8.59 ms. Allocated memory is still 1.0 GB. Free memory is still 940.6 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-24 18:16:50,552 INFO  L168              Benchmark]: RCFGBuilder took 426.38 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 897.6 MB in the end (delta: 43.0 MB). Peak memory consumption was 43.0 MB. Max. memory is 15.3 GB.
[2020-11-24 18:16:50,553 INFO  L168              Benchmark]: UtopiaLTL2Aut took 42.58 ms. Allocated memory is still 1.0 GB. Free memory was 897.6 MB in the beginning and 894.0 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
[2020-11-24 18:16:50,553 INFO  L168              Benchmark]: BÃ¼chi Program Product took 670.82 ms. Allocated memory is still 1.0 GB. Free memory was 894.0 MB in the beginning and 741.9 MB in the end (delta: 152.1 MB). Peak memory consumption was 152.1 MB. Max. memory is 15.3 GB.
[2020-11-24 18:16:50,553 INFO  L168              Benchmark]: BlockEncodingV2 took 101.60 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 43.5 MB). Free memory was 741.9 MB in the beginning and 996.0 MB in the end (delta: -254.1 MB). Peak memory consumption was 23.3 MB. Max. memory is 15.3 GB.
[2020-11-24 18:16:50,554 INFO  L168              Benchmark]: BuchiAutomizer took 1974.01 ms. Allocated memory was 1.1 GB in the beginning and 1.3 GB in the end (delta: 270.0 MB). Free memory was 996.0 MB in the beginning and 1.0 GB in the end (delta: -49.2 MB). Peak memory consumption was 220.8 MB. Max. memory is 15.3 GB.
[2020-11-24 18:16:50,556 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    1170 locations, 1977 edges
  - StatisticsResult: Encoded RCFG
    1150 locations, 1931 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.14 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 61.29 ms. Allocated memory is still 1.0 GB. Free memory is still 945.9 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 43.96 ms. Allocated memory is still 1.0 GB. Free memory was 945.9 MB in the beginning and 940.6 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 8.59 ms. Allocated memory is still 1.0 GB. Free memory is still 940.6 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * RCFGBuilder took 426.38 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 897.6 MB in the end (delta: 43.0 MB). Peak memory consumption was 43.0 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 42.58 ms. Allocated memory is still 1.0 GB. Free memory was 897.6 MB in the beginning and 894.0 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 670.82 ms. Allocated memory is still 1.0 GB. Free memory was 894.0 MB in the beginning and 741.9 MB in the end (delta: 152.1 MB). Peak memory consumption was 152.1 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 101.60 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 43.5 MB). Free memory was 741.9 MB in the beginning and 996.0 MB in the end (delta: -254.1 MB). Peak memory consumption was 23.3 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 1974.01 ms. Allocated memory was 1.1 GB in the beginning and 1.3 GB in the end (delta: 270.0 MB). Free memory was 996.0 MB in the beginning and 1.0 GB in the end (delta: -49.2 MB). Peak memory consumption was 220.8 MB. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    496 locations, 613 edges
  - StatisticsResult: BuchiProgram size
    1170 locations, 1977 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 9 terminating modules (9 trivial, 0 deterministic, 0 nondeterministic). 9 modules have a trivial ranking function, the largest among these consists of 20 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 1.9s and 10 iterations.  TraceHistogramMax:1. Analysis of lassos took 0.8s. Construction of modules took 0.4s. BÃ¼chi inclusion checks took 0.4s. Highest rank in rank-based complementation 0. Minimization of det autom 9. Minimization of nondet autom 0. Automata minimization 0.0s AutomataMinimizationTime, 8 MinimizatonAttempts, 39 StatesRemovedByMinimization, 3 NontrivialMinimizations. Non-live state removal took 0.0s Buchi closure took 0.0s. Biggest automaton had 198 states and ocurred in iteration 3.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 2031 SDtfs, 1574 SDslu, 5232 SDs, 0 SdLazy, 1794 SolverSat, 517 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 0.4s Time	LassoAnalysisResults: nont0 unkn0 SFLI0 SFLT0 conc0 concLT0 SILN0 SILU9 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - AllSpecificationsHoldResult: All specifications hold
    Buchi Automizer proved that the LTL property ! ( ( []( (call_transfer_CHMC0) ==> ( <>(success_transfer_CHMC0) ) ) )) holds
RESULT: Ultimate proved your program to be correct!
Received shutdown request...
