This is Ultimate 0.1.24-f1553f5-m
[2020-11-24 17:35:13,563 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-24 17:35:13,564 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-24 17:35:13,575 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-24 17:35:13,576 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-24 17:35:13,576 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-24 17:35:13,577 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-24 17:35:13,579 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-24 17:35:13,580 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-24 17:35:13,581 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-24 17:35:13,582 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-24 17:35:13,582 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-24 17:35:13,583 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-24 17:35:13,583 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-24 17:35:13,584 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-24 17:35:13,585 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-24 17:35:13,585 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-24 17:35:13,587 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-24 17:35:13,588 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-24 17:35:13,589 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-24 17:35:13,590 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-24 17:35:13,591 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-24 17:35:13,592 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-24 17:35:13,593 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-24 17:35:13,593 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-24 17:35:13,593 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-24 17:35:13,593 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-24 17:35:13,594 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-24 17:35:13,594 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-24 17:35:13,594 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-24 17:35:13,595 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-24 17:35:13,595 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-24 17:35:13,596 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-24 17:35:13,597 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-24 17:35:13,597 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-24 17:35:13,597 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-24 17:35:13,598 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-24 17:35:13,598 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-24 17:35:13,598 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-24 17:35:13,599 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-24 17:35:13,599 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-24 17:35:13,600 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-24 17:35:13,607 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-24 17:35:13,607 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-24 17:35:13,608 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-24 17:35:13,608 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-24 17:35:13,608 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-24 17:35:13,609 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-24 17:35:13,609 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-24 17:35:13,609 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-24 17:35:13,609 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-24 17:35:13,609 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-24 17:35:13,609 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-24 17:35:13,609 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-24 17:35:13,609 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-24 17:35:13,609 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-24 17:35:13,610 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-24 17:35:13,610 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-24 17:35:13,610 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-24 17:35:13,610 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-24 17:35:13,610 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-24 17:35:13,610 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-24 17:35:13,610 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-24 17:35:13,610 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-24 17:35:13,610 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-24 17:35:13,610 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-24 17:35:13,611 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-24 17:35:13,611 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-24 17:35:13,634 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-24 17:35:13,648 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-24 17:35:13,651 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-24 17:35:13,653 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-24 17:35:13,653 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-24 17:35:13,654 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/THECASH_0xcd475371e39c0d94e82fccc9dd0ea710d0dc0c0b_transferfrom-self.bpl
[2020-11-24 17:35:13,654 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/THECASH_0xcd475371e39c0d94e82fccc9dd0ea710d0dc0c0b_transferfrom-self.bpl'
[2020-11-24 17:35:13,739 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-24 17:35:13,740 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-24 17:35:13,741 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-24 17:35:13,741 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-24 17:35:13,741 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-24 17:35:13,758 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "THECASH_0xcd475371e39c0d94e82fccc9dd0ea710d0dc0c0b_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 05:35:13" (1/1) ...
[2020-11-24 17:35:13,759 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "THECASH_0xcd475371e39c0d94e82fccc9dd0ea710d0dc0c0b_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 05:35:13" (1/1) ...
[2020-11-24 17:35:13,794 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "THECASH_0xcd475371e39c0d94e82fccc9dd0ea710d0dc0c0b_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 05:35:13" (1/1) ...
[2020-11-24 17:35:13,795 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "THECASH_0xcd475371e39c0d94e82fccc9dd0ea710d0dc0c0b_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 05:35:13" (1/1) ...
[2020-11-24 17:35:13,817 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "THECASH_0xcd475371e39c0d94e82fccc9dd0ea710d0dc0c0b_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 05:35:13" (1/1) ...
[2020-11-24 17:35:13,830 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "THECASH_0xcd475371e39c0d94e82fccc9dd0ea710d0dc0c0b_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 05:35:13" (1/1) ...
[2020-11-24 17:35:13,837 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "THECASH_0xcd475371e39c0d94e82fccc9dd0ea710d0dc0c0b_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 05:35:13" (1/1) ...
[2020-11-24 17:35:13,848 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-24 17:35:13,848 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-24 17:35:13,848 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-24 17:35:13,850 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-24 17:35:13,854 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "THECASH_0xcd475371e39c0d94e82fccc9dd0ea710d0dc0c0b_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 05:35:13" (1/1) ...
[2020-11-24 17:35:13,877 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(BaseToken.transferFrom(from, to, value), (p1 != from || p2 != msg.sender) && from == to && value <= balances_BaseToken[this][from] && value <= approvals_BaseToken[this][from][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_BaseToken[this][to] >= 0 && balances_BaseToken[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_BaseToken[this][from] >= 0 &&  balances_BaseToken[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && approvals_BaseToken[this][from][msg.sender] >= 0 && approvals_BaseToken[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(BaseToken.transferFrom(from, to, value), return == true && approvals_BaseToken[this][from][msg.sender] == old(approvals_BaseToken[this][from][msg.sender]) - value && totalSupply_BaseToken[this] == old(totalSupply_BaseToken[this]) && balances_BaseToken[this] == old(balances_BaseToken[this]) && approvals_BaseToken[this][p1][p2] == old(approvals_BaseToken[this][p1][p2]) && _minters_MinterRole[this] == old(_minters_MinterRole[this]) && M_Ref_Ref[lockup_BaseToken[this]] == old(M_Ref_Ref[lockup_BaseToken[this]]) && lockedAddresses_BaseToken[this] == old(lockedAddresses_BaseToken[this]) && stopped_Ownable[this] == old(stopped_Ownable[this]) && _owner_Ownable[this] == old(_owner_Ownable[this]) && _admin_Ownable[this] == old(_admin_Ownable[this]) && proposedOwner_Ownable[this] == old(proposedOwner_Ownable[this]) && _allowed_Ownable[this] == old(_allowed_Ownable[this]))))
[2020-11-24 17:35:13,882 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(BaseToken.transferFrom(from, to, value), (p1 != from || p2 != msg.sender) && from == to && value <= balances_BaseToken[this][from] && value <= approvals_BaseToken[this][from][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_BaseToken[this][to] >= 0 && balances_BaseToken[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_BaseToken[this][from] >= 0 &&  balances_BaseToken[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && approvals_BaseToken[this][from][msg.sender] >= 0 && approvals_BaseToken[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(BaseToken.transferFrom(from, to, value), return == true && approvals_BaseToken[this][from][msg.sender] == old(approvals_BaseToken[this][from][msg.sender]) - value && totalSupply_BaseToken[this] == old(totalSupply_BaseToken[this]) && balances_BaseToken[this] == old(balances_BaseToken[this]) && approvals_BaseToken[this][p1][p2] == old(approvals_BaseToken[this][p1][p2]) && _minters_MinterRole[this] == old(_minters_MinterRole[this]) && M_Ref_Ref[lockup_BaseToken[this]] == old(M_Ref_Ref[lockup_BaseToken[this]]) && lockedAddresses_BaseToken[this] == old(lockedAddresses_BaseToken[this]) && stopped_Ownable[this] == old(stopped_Ownable[this]) && _owner_Ownable[this] == old(_owner_Ownable[this]) && _admin_Ownable[this] == old(_admin_Ownable[this]) && proposedOwner_Ownable[this] == old(proposedOwner_Ownable[this]) && _allowed_Ownable[this] == old(_allowed_Ownable[this]))))
[2020-11-24 17:35:13,890 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(BaseToken.transferFrom(from, to, value), (p1 != from || p2 != msg.sender) && from == to && value <= balances_BaseToken[this][from] && value <= approvals_BaseToken[this][from][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_BaseToken[this][to] >= 0 && balances_BaseToken[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_BaseToken[this][from] >= 0 &&  balances_BaseToken[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && approvals_BaseToken[this][from][msg.sender] >= 0 && approvals_BaseToken[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(BaseToken.transferFrom(from, to, value), return == true && approvals_BaseToken[this][from][msg.sender] == old(approvals_BaseToken[this][from][msg.sender]) - value && totalSupply_BaseToken[this] == old(totalSupply_BaseToken[this]) && balances_BaseToken[this] == old(balances_BaseToken[this]) && approvals_BaseToken[this][p1][p2] == old(approvals_BaseToken[this][p1][p2]) && _minters_MinterRole[this] == old(_minters_MinterRole[this]) && M_Ref_Ref[lockup_BaseToken[this]] == old(M_Ref_Ref[lockup_BaseToken[this]]) && lockedAddresses_BaseToken[this] == old(lockedAddresses_BaseToken[this]) && stopped_Ownable[this] == old(stopped_Ownable[this]) && _owner_Ownable[this] == old(_owner_Ownable[this]) && _admin_Ownable[this] == old(_admin_Ownable[this]) && proposedOwner_Ownable[this] == old(proposedOwner_Ownable[this]) && _allowed_Ownable[this] == old(_allowed_Ownable[this]))))
[2020-11-24 17:35:13,897 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( ( ( ( ( p1!=_from_s774 || p2!=msg.sender ) && _from_s774==_to_s774 ) && _value_s774<=balances_BaseToken[this][_from_s774] ) && _value_s774<=approvals_BaseToken[this][_from_s774][msg.sender] ) && _value_s774>=0 ) && _value_s774<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && balances_BaseToken[this][_to_s774]>=0 ) && balances_BaseToken[this][_to_s774]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && balances_BaseToken[this][_from_s774]>=0 ) && balances_BaseToken[this][_from_s774]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && approvals_BaseToken[this][_from_s774][msg.sender]>=0 ) && approvals_BaseToken[this][_from_s774][msg.sender]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICOR,BinaryExpression[COMPNEQ,IdentifierExpression[p1,GLOBAL],IdentifierExpression[_from_s774,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_BaseToken>]],BinaryExpression[COMPNEQ,IdentifierExpression[p2,GLOBAL],IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_BaseToken>]]],BinaryExpression[COMPEQ,IdentifierExpression[_from_s774,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_BaseToken>],IdentifierExpression[_to_s774,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_BaseToken>]]],BinaryExpression[COMPLEQ,IdentifierExpression[_value_s774,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_BaseToken>],ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_BaseToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_BaseToken>]]],[IdentifierExpression[_from_s774,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_BaseToken>]]]]],BinaryExpression[COMPLEQ,IdentifierExpression[_value_s774,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_BaseToken>],ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[approvals_BaseToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_BaseToken>]]],[IdentifierExpression[_from_s774,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_BaseToken>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_BaseToken>]]]]],BinaryExpression[COMPGEQ,IdentifierExpression[_value_s774,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_BaseToken>],IntegerLiteral[0]]],BinaryExpression[COMPLT,IdentifierExpression[_value_s774,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_BaseToken>],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_BaseToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_BaseToken>]]],[IdentifierExpression[_to_s774,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_BaseToken>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_BaseToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_BaseToken>]]],[IdentifierExpression[_to_s774,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_BaseToken>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_BaseToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_BaseToken>]]],[IdentifierExpression[_from_s774,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_BaseToken>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_BaseToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_BaseToken>]]],[IdentifierExpression[_from_s774,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_BaseToken>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[approvals_BaseToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_BaseToken>]]],[IdentifierExpression[_from_s774,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_BaseToken>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_BaseToken>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[approvals_BaseToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_BaseToken>]]],[IdentifierExpression[_from_s774,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_BaseToken>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_BaseToken>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]]
[2020-11-24 17:35:13,900 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( ( ( ( ( __ret_0_==true && approvals_BaseToken[this][_from_s774][msg.sender]==( ( old(approvals_BaseToken[this][_from_s774][msg.sender]) ) - _value_s774 ) ) && totalSupply_BaseToken[this]==( old(totalSupply_BaseToken[this]) ) ) && balances_BaseToken[this]==( old(balances_BaseToken[this]) ) ) && approvals_BaseToken[this][p1][p2]==( old(approvals_BaseToken[this][p1][p2]) ) ) && _minters_MinterRole[this]==( old(_minters_MinterRole[this]) ) ) && M_Ref_Ref[lockup_BaseToken[this]]==( old(M_Ref_Ref[lockup_BaseToken[this]]) ) ) && lockedAddresses_BaseToken[this]==( old(lockedAddresses_BaseToken[this]) ) ) && stopped_Ownable[this]==( old(stopped_Ownable[this]) ) ) && _owner_Ownable[this]==( old(_owner_Ownable[this]) ) ) && _admin_Ownable[this]==( old(_admin_Ownable[this]) ) ) && proposedOwner_Ownable[this]==( old(proposedOwner_Ownable[this]) ) ) && _allowed_Ownable[this]==( old(_allowed_Ownable[this]) ) ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[__ret_0_,<IMPLEMENTATION_OUTPARAM,transferFrom~address~address~uint256_BaseToken>],BooleanLiteral[true]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[approvals_BaseToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_BaseToken>]]],[IdentifierExpression[_from_s774,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_BaseToken>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_BaseToken>]]],BinaryExpression[ARITHMINUS,UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[approvals_BaseToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_BaseToken>]]],[IdentifierExpression[_from_s774,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_BaseToken>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_BaseToken>]]]],IdentifierExpression[_value_s774,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_BaseToken>]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[totalSupply_BaseToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_BaseToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[totalSupply_BaseToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_BaseToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[balances_BaseToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_BaseToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[balances_BaseToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_BaseToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[approvals_BaseToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_BaseToken>]]],[IdentifierExpression[p1,GLOBAL]]],[IdentifierExpression[p2,GLOBAL]]],UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[approvals_BaseToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_BaseToken>]]],[IdentifierExpression[p1,GLOBAL]]],[IdentifierExpression[p2,GLOBAL]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_minters_MinterRole,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_BaseToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_minters_MinterRole,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_BaseToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[M_Ref_Ref,GLOBAL],[ArrayAccessExpression[IdentifierExpression[lockup_BaseToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_BaseToken>]]]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[M_Ref_Ref,GLOBAL],[ArrayAccessExpression[IdentifierExpression[lockup_BaseToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_BaseToken>]]]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[lockedAddresses_BaseToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_BaseToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[lockedAddresses_BaseToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_BaseToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[stopped_Ownable,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_BaseToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[stopped_Ownable,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_BaseToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_owner_Ownable,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_BaseToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_owner_Ownable,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_BaseToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_admin_Ownable,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_BaseToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_admin_Ownable,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_BaseToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[proposedOwner_Ownable,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_BaseToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[proposedOwner_Ownable,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_BaseToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_allowed_Ownable,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_BaseToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_allowed_Ownable,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_BaseToken>]]]]]]
[2020-11-24 17:35:13,905 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(BaseToken.transferFrom(from, to, value), (p1 != from || p2 != msg.sender) && from == to && value <= balances_BaseToken[this][from] && value <= approvals_BaseToken[this][from][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_BaseToken[this][to] >= 0 && balances_BaseToken[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_BaseToken[this][from] >= 0 &&  balances_BaseToken[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && approvals_BaseToken[this][from][msg.sender] >= 0 && approvals_BaseToken[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(BaseToken.transferFrom(from, to, value), return == true && approvals_BaseToken[this][from][msg.sender] == old(approvals_BaseToken[this][from][msg.sender]) - value && totalSupply_BaseToken[this] == old(totalSupply_BaseToken[this]) && balances_BaseToken[this] == old(balances_BaseToken[this]) && approvals_BaseToken[this][p1][p2] == old(approvals_BaseToken[this][p1][p2]) && _minters_MinterRole[this] == old(_minters_MinterRole[this]) && M_Ref_Ref[lockup_BaseToken[this]] == old(M_Ref_Ref[lockup_BaseToken[this]]) && lockedAddresses_BaseToken[this] == old(lockedAddresses_BaseToken[this]) && stopped_Ownable[this] == old(stopped_Ownable[this]) && _owner_Ownable[this] == old(_owner_Ownable[this]) && _admin_Ownable[this] == old(_admin_Ownable[this]) && proposedOwner_Ownable[this] == old(proposedOwner_Ownable[this]) && _allowed_Ownable[this] == old(_allowed_Ownable[this]))))
[2020-11-24 17:35:13,905 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_transferFrom_BaseToken0) ==> ( <>AP(success_transferFrom_BaseToken0) ) ) )
Executed UtopiaSpecLang
[2020-11-24 17:35:13,915 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 05:35:13 PropertyContainer
[2020-11-24 17:35:13,916 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-24 17:35:13,916 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-24 17:35:13,916 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-24 17:35:13,916 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-24 17:35:13,917 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "THECASH_0xcd475371e39c0d94e82fccc9dd0ea710d0dc0c0b_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 05:35:13" (1/2) ...
[2020-11-24 17:35:13,917 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-24 17:35:13,917 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-24 17:35:13,932 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 05:35:13" (2/2) ...
[2020-11-24 17:35:13,933 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-24 17:35:13,933 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-24 17:35:13,933 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-24 17:35:13,934 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-24 17:35:13,934 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "THECASH_0xcd475371e39c0d94e82fccc9dd0ea710d0dc0c0b_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 05:35:13" (1/2) ...
[2020-11-24 17:35:13,988 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-24 17:35:13,988 INFO  L130     BoogieDeclarations]: Found specification of procedure BaseToken.Lock_ctor__success
[2020-11-24 17:35:13,988 INFO  L130     BoogieDeclarations]: Found specification of procedure Roles.Role_ctor__success
[2020-11-24 17:35:13,989 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__success
[2020-11-24 17:35:13,989 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__success
[2020-11-24 17:35:13,989 INFO  L130     BoogieDeclarations]: Found specification of procedure isOwner_Ownable
[2020-11-24 17:35:13,989 INFO  L138     BoogieDeclarations]: Found implementation of procedure isOwner_Ownable
[2020-11-24 17:35:13,989 INFO  L130     BoogieDeclarations]: Found specification of procedure isAllowed_Ownable
[2020-11-24 17:35:13,989 INFO  L138     BoogieDeclarations]: Found implementation of procedure isAllowed_Ownable
[2020-11-24 17:35:13,989 INFO  L130     BoogieDeclarations]: Found specification of procedure isStopped_Ownable
[2020-11-24 17:35:13,989 INFO  L138     BoogieDeclarations]: Found implementation of procedure isStopped_Ownable
[2020-11-24 17:35:13,989 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_BaseToken
[2020-11-24 17:35:13,989 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_BaseToken
[2020-11-24 17:35:13,989 INFO  L130     BoogieDeclarations]: Found specification of procedure lockedBalanceOf~address_BaseToken
[2020-11-24 17:35:13,990 INFO  L138     BoogieDeclarations]: Found implementation of procedure lockedBalanceOf~address_BaseToken
[2020-11-24 17:35:13,991 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_BaseToken
[2020-11-24 17:35:13,991 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_BaseToken
[2020-11-24 17:35:13,991 INFO  L130     BoogieDeclarations]: Found specification of procedure isLocked~address~uint256_BaseToken
[2020-11-24 17:35:13,991 INFO  L138     BoogieDeclarations]: Found implementation of procedure isLocked~address~uint256_BaseToken
[2020-11-24 17:35:13,991 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_BaseToken
[2020-11-24 17:35:13,991 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_BaseToken
[2020-11-24 17:35:13,991 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_BaseToken
[2020-11-24 17:35:13,991 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_BaseToken
[2020-11-24 17:35:13,992 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_BaseToken
[2020-11-24 17:35:13,992 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_BaseToken
[2020-11-24 17:35:13,992 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_BaseToken__success
[2020-11-24 17:35:13,992 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_BaseToken
[2020-11-24 17:35:13,992 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_BaseToken
[2020-11-24 17:35:13,992 INFO  L130     BoogieDeclarations]: Found specification of procedure add~Role~address_Roles__success
[2020-11-24 17:35:13,992 INFO  L130     BoogieDeclarations]: Found specification of procedure has~Role~address_Roles__success
[2020-11-24 17:35:13,992 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-24 17:35:13,992 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-24 17:35:13,993 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-24 17:35:13,993 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__success
[2020-11-24 17:35:13,993 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyAllowed_pre__success
[2020-11-24 17:35:13,993 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyWhenNotStopped_pre__success
[2020-11-24 17:35:13,993 INFO  L130     BoogieDeclarations]: Found specification of procedure transferParamsValidation_pre__success
[2020-11-24 17:35:13,993 INFO  L130     BoogieDeclarations]: Found specification of procedure canTransfer_pre__success
[2020-11-24 17:35:13,993 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyMinter_pre__success
[2020-11-24 17:35:13,993 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_SafeMath
[2020-11-24 17:35:13,993 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_SafeMath
[2020-11-24 17:35:13,994 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_Ownable
[2020-11-24 17:35:13,994 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_Ownable
[2020-11-24 17:35:13,994 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_BaseToken
[2020-11-24 17:35:13,994 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_BaseToken
[2020-11-24 17:35:13,994 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_Roles
[2020-11-24 17:35:13,994 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_Roles
[2020-11-24 17:35:13,994 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_MinterRole
[2020-11-24 17:35:13,994 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_MinterRole
[2020-11-24 17:35:13,994 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20Mintable
[2020-11-24 17:35:13,994 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20Mintable
[2020-11-24 17:35:13,995 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_THECASH
[2020-11-24 17:35:13,995 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-24 17:35:13,995 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-24 17:35:13,995 INFO  L130     BoogieDeclarations]: Found specification of procedure BaseToken.Lock_ctor__fail
[2020-11-24 17:35:13,995 INFO  L130     BoogieDeclarations]: Found specification of procedure Roles.Role_ctor__fail
[2020-11-24 17:35:13,995 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-24 17:35:13,995 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__fail
[2020-11-24 17:35:13,995 INFO  L130     BoogieDeclarations]: Found specification of procedure isOwner_Ownable__success
[2020-11-24 17:35:13,996 INFO  L130     BoogieDeclarations]: Found specification of procedure isOwner_Ownable__fail
[2020-11-24 17:35:13,996 INFO  L130     BoogieDeclarations]: Found specification of procedure isAllowed_Ownable__success
[2020-11-24 17:35:13,996 INFO  L130     BoogieDeclarations]: Found specification of procedure isAllowed_Ownable__fail
[2020-11-24 17:35:13,996 INFO  L130     BoogieDeclarations]: Found specification of procedure isStopped_Ownable__success
[2020-11-24 17:35:13,996 INFO  L130     BoogieDeclarations]: Found specification of procedure isStopped_Ownable__fail
[2020-11-24 17:35:13,996 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_BaseToken__success
[2020-11-24 17:35:13,996 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_BaseToken__fail
[2020-11-24 17:35:13,996 INFO  L130     BoogieDeclarations]: Found specification of procedure lockedBalanceOf~address_BaseToken__success
[2020-11-24 17:35:13,996 INFO  L130     BoogieDeclarations]: Found specification of procedure lockedBalanceOf~address_BaseToken__fail
[2020-11-24 17:35:13,996 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_BaseToken__success
[2020-11-24 17:35:13,997 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_BaseToken__fail
[2020-11-24 17:35:13,997 INFO  L130     BoogieDeclarations]: Found specification of procedure isLocked~address~uint256_BaseToken__success
[2020-11-24 17:35:13,997 INFO  L130     BoogieDeclarations]: Found specification of procedure isLocked~address~uint256_BaseToken__fail
[2020-11-24 17:35:13,997 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_BaseToken__success
[2020-11-24 17:35:13,997 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_BaseToken__fail
[2020-11-24 17:35:13,997 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_BaseToken__success
[2020-11-24 17:35:13,997 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_BaseToken__fail
[2020-11-24 17:35:13,997 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_BaseToken__success
[2020-11-24 17:35:13,998 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_BaseToken__fail
[2020-11-24 17:35:13,998 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_BaseToken__fail
[2020-11-24 17:35:13,998 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_BaseToken__success
[2020-11-24 17:35:13,998 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_BaseToken__fail
[2020-11-24 17:35:13,998 INFO  L130     BoogieDeclarations]: Found specification of procedure add~Role~address_Roles__fail
[2020-11-24 17:35:13,998 INFO  L130     BoogieDeclarations]: Found specification of procedure has~Role~address_Roles__fail
[2020-11-24 17:35:13,998 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-24 17:35:13,998 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-24 17:35:13,998 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-24 17:35:13,999 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__fail
[2020-11-24 17:35:13,999 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyAllowed_pre__fail
[2020-11-24 17:35:13,999 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyWhenNotStopped_pre__fail
[2020-11-24 17:35:13,999 INFO  L130     BoogieDeclarations]: Found specification of procedure transferParamsValidation_pre__fail
[2020-11-24 17:35:13,999 INFO  L130     BoogieDeclarations]: Found specification of procedure canTransfer_pre__fail
[2020-11-24 17:35:13,999 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyMinter_pre__fail
[2020-11-24 17:35:13,999 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-24 17:35:13,999 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-24 17:35:13,999 INFO  L138     BoogieDeclarations]: Found implementation of procedure BaseToken.Lock_ctor__fail
[2020-11-24 17:35:14,000 INFO  L138     BoogieDeclarations]: Found implementation of procedure BaseToken.Lock_ctor__success
[2020-11-24 17:35:14,000 INFO  L138     BoogieDeclarations]: Found implementation of procedure Roles.Role_ctor__fail
[2020-11-24 17:35:14,000 INFO  L138     BoogieDeclarations]: Found implementation of procedure Roles.Role_ctor__success
[2020-11-24 17:35:14,000 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-24 17:35:14,000 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__success
[2020-11-24 17:35:14,000 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__fail
[2020-11-24 17:35:14,000 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__success
[2020-11-24 17:35:14,000 INFO  L138     BoogieDeclarations]: Found implementation of procedure isOwner_Ownable__fail
[2020-11-24 17:35:14,000 INFO  L138     BoogieDeclarations]: Found implementation of procedure isOwner_Ownable__success
[2020-11-24 17:35:14,001 INFO  L138     BoogieDeclarations]: Found implementation of procedure isAllowed_Ownable__fail
[2020-11-24 17:35:14,001 INFO  L138     BoogieDeclarations]: Found implementation of procedure isAllowed_Ownable__success
[2020-11-24 17:35:14,001 INFO  L138     BoogieDeclarations]: Found implementation of procedure isStopped_Ownable__fail
[2020-11-24 17:35:14,001 INFO  L138     BoogieDeclarations]: Found implementation of procedure isStopped_Ownable__success
[2020-11-24 17:35:14,001 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_BaseToken__fail
[2020-11-24 17:35:14,001 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_BaseToken__success
[2020-11-24 17:35:14,001 INFO  L138     BoogieDeclarations]: Found implementation of procedure lockedBalanceOf~address_BaseToken__fail
[2020-11-24 17:35:14,001 INFO  L138     BoogieDeclarations]: Found implementation of procedure lockedBalanceOf~address_BaseToken__success
[2020-11-24 17:35:14,001 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_BaseToken__fail
[2020-11-24 17:35:14,001 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_BaseToken__success
[2020-11-24 17:35:14,002 INFO  L138     BoogieDeclarations]: Found implementation of procedure isLocked~address~uint256_BaseToken__fail
[2020-11-24 17:35:14,002 INFO  L138     BoogieDeclarations]: Found implementation of procedure isLocked~address~uint256_BaseToken__success
[2020-11-24 17:35:14,002 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_BaseToken__fail
[2020-11-24 17:35:14,002 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_BaseToken__success
[2020-11-24 17:35:14,002 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_BaseToken__fail
[2020-11-24 17:35:14,002 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_BaseToken__success
[2020-11-24 17:35:14,002 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_BaseToken__fail
[2020-11-24 17:35:14,002 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_BaseToken__success
[2020-11-24 17:35:14,003 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_BaseToken__fail
[2020-11-24 17:35:14,003 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_BaseToken__success
[2020-11-24 17:35:14,003 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_BaseToken__fail
[2020-11-24 17:35:14,003 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_BaseToken__success
[2020-11-24 17:35:14,003 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~Role~address_Roles__fail
[2020-11-24 17:35:14,003 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~Role~address_Roles__success
[2020-11-24 17:35:14,003 INFO  L138     BoogieDeclarations]: Found implementation of procedure has~Role~address_Roles__fail
[2020-11-24 17:35:14,003 INFO  L138     BoogieDeclarations]: Found implementation of procedure has~Role~address_Roles__success
[2020-11-24 17:35:14,003 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-24 17:35:14,003 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-24 17:35:14,004 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-24 17:35:14,004 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-24 17:35:14,004 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-24 17:35:14,004 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-24 17:35:14,004 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__fail
[2020-11-24 17:35:14,004 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__success
[2020-11-24 17:35:14,004 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyAllowed_pre__fail
[2020-11-24 17:35:14,004 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyAllowed_pre__success
[2020-11-24 17:35:14,005 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyWhenNotStopped_pre__fail
[2020-11-24 17:35:14,005 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyWhenNotStopped_pre__success
[2020-11-24 17:35:14,005 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferParamsValidation_pre__fail
[2020-11-24 17:35:14,005 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferParamsValidation_pre__success
[2020-11-24 17:35:14,005 INFO  L138     BoogieDeclarations]: Found implementation of procedure canTransfer_pre__fail
[2020-11-24 17:35:14,005 INFO  L138     BoogieDeclarations]: Found implementation of procedure canTransfer_pre__success
[2020-11-24 17:35:14,005 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyMinter_pre__fail
[2020-11-24 17:35:14,005 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyMinter_pre__success
[2020-11-24 17:35:14,005 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_SafeMath
[2020-11-24 17:35:14,006 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_SafeMath
[2020-11-24 17:35:14,006 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_Ownable
[2020-11-24 17:35:14,006 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_Ownable
[2020-11-24 17:35:14,006 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_BaseToken
[2020-11-24 17:35:14,006 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_BaseToken
[2020-11-24 17:35:14,006 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_Roles
[2020-11-24 17:35:14,006 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_Roles
[2020-11-24 17:35:14,006 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_MinterRole
[2020-11-24 17:35:14,006 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_MinterRole
[2020-11-24 17:35:14,007 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20Mintable
[2020-11-24 17:35:14,007 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20Mintable
[2020-11-24 17:35:14,007 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_THECASH
[2020-11-24 17:35:14,007 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-24 17:35:14,007 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-24 17:35:14,007 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-24 17:35:14,293 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 17:35:14,372 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 17:35:14,372 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 17:35:14,373 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 17:35:14,800 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-24 17:35:14,801 INFO  L286             CfgBuilder]: Removed 7 assue(true) statements.
[2020-11-24 17:35:14,803 INFO  L202        PluginConnector]: Adding new model THECASH_0xcd475371e39c0d94e82fccc9dd0ea710d0dc0c0b_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 05:35:14 BoogieIcfgContainer
[2020-11-24 17:35:14,803 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 05:35:13" (2/2) ...
[2020-11-24 17:35:14,803 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-24 17:35:14,803 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@6332b1af and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 05:35:14, skipping insertion in model container
[2020-11-24 17:35:14,804 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-24 17:35:14,804 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-24 17:35:14,804 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-24 17:35:14,805 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-24 17:35:14,805 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "THECASH_0xcd475371e39c0d94e82fccc9dd0ea710d0dc0c0b_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 05:35:13" (1/3) ...
[2020-11-24 17:35:14,806 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@73f8c83d and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 05:35:14, skipping insertion in model container
[2020-11-24 17:35:14,806 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 05:35:13" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-24 17:35:14,844 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 05:35:14 NWAContainer
[2020-11-24 17:35:14,844 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-24 17:35:14,844 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-24 17:35:14,845 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-24 17:35:14,845 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-24 17:35:14,846 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "THECASH_0xcd475371e39c0d94e82fccc9dd0ea710d0dc0c0b_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 05:35:14" (3/4) ...
[2020-11-24 17:35:14,847 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@1c84ee28 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 05:35:14, skipping insertion in model container
[2020-11-24 17:35:14,847 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 05:35:14" (4/4) ...
[2020-11-24 17:35:14,850 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-24 17:35:14,855 INFO  L110   BuchiProductObserver]: Initial RCFG 1661 locations, 2317 edges
[2020-11-24 17:35:14,855 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-24 17:35:14,866 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-24 17:35:16,222 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-24 17:35:16,227 INFO  L110   BuchiProductObserver]: BuchiProgram size 4068 locations, 7513 edges
[2020-11-24 17:35:16,227 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 05:35:16 BoogieIcfgContainer
[2020-11-24 17:35:16,227 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-24 17:35:16,228 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-24 17:35:16,228 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-24 17:35:16,229 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-24 17:35:16,229 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 05:35:16" (1/1) ...
[2020-11-24 17:35:16,326 INFO  L313           BlockEncoder]: Initial Icfg 4068 locations, 7513 edges
[2020-11-24 17:35:16,327 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-24 17:35:16,327 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-24 17:35:16,328 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-24 17:35:16,328 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-24 17:35:16,342 INFO  L70    emoveInfeasibleEdges]: Removed 102 edges and 17 locations because of local infeasibility
[2020-11-24 17:35:16,352 INFO  L70        RemoveSinkStates]: Removed 50 edges and 33 locations by removing sink states
[2020-11-24 17:35:16,365 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-24 17:35:16,370 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-24 17:35:16,374 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-24 17:35:16,375 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-24 17:35:16,382 INFO  L313           BlockEncoder]: Encoded RCFG 4000 locations, 7335 edges
[2020-11-24 17:35:16,382 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 24.11 05:35:16 BasicIcfg
[2020-11-24 17:35:16,383 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-24 17:35:16,383 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-24 17:35:16,383 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-24 17:35:16,385 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-24 17:35:16,386 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 17:35:16,386 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "THECASH_0xcd475371e39c0d94e82fccc9dd0ea710d0dc0c0b_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 05:35:13" (1/6) ...
[2020-11-24 17:35:16,387 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@734ff2e2 and model type THECASH_0xcd475371e39c0d94e82fccc9dd0ea710d0dc0c0b_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 24.11 05:35:16, skipping insertion in model container
[2020-11-24 17:35:16,388 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 17:35:16,388 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 05:35:13" (2/6) ...
[2020-11-24 17:35:16,388 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@734ff2e2 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 24.11 05:35:16, skipping insertion in model container
[2020-11-24 17:35:16,388 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 17:35:16,388 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "THECASH_0xcd475371e39c0d94e82fccc9dd0ea710d0dc0c0b_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 05:35:14" (3/6) ...
[2020-11-24 17:35:16,388 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@734ff2e2 and model type THECASH_0xcd475371e39c0d94e82fccc9dd0ea710d0dc0c0b_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 24.11 05:35:16, skipping insertion in model container
[2020-11-24 17:35:16,388 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 17:35:16,388 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 05:35:14" (4/6) ...
[2020-11-24 17:35:16,389 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@734ff2e2 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 24.11 05:35:16, skipping insertion in model container
[2020-11-24 17:35:16,389 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 17:35:16,389 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 05:35:16" (5/6) ...
[2020-11-24 17:35:16,389 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@734ff2e2 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 24.11 05:35:16, skipping insertion in model container
[2020-11-24 17:35:16,389 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 17:35:16,389 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 24.11 05:35:16" (6/6) ...
[2020-11-24 17:35:16,391 INFO  L404   chiAutomizerObserver]: Analyzing ICFG THECASH_0xcd475371e39c0d94e82fccc9dd0ea710d0dc0c0b_transferfrom-self.bpl_BEv2
[2020-11-24 17:35:16,430 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-24 17:35:16,430 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-24 17:35:16,430 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-24 17:35:16,430 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-24 17:35:16,431 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-24 17:35:16,431 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-24 17:35:16,431 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-24 17:35:16,431 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-24 17:35:16,431 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-24 17:35:16,476 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 4000 states.
[2020-11-24 17:35:16,536 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 17:35:16,536 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 17:35:16,537 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 17:35:16,546 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 17:35:16,546 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
[2020-11-24 17:35:16,547 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-24 17:35:16,547 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 4000 states.
[2020-11-24 17:35:16,573 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 17:35:16,574 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 17:35:16,574 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 17:35:16,577 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 17:35:16,577 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L3]                 success_transferFrom_BaseToken0 := false;
[L3]                 call_transferFrom_BaseToken0 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L4679]              assume null == 0;
[L4680]  CALL        call this := FreshRefGenerator__success();
[L1730]              havoc newRef;
[L1731]              assume Alloc[newRef] == false;
[L1732]              Alloc[newRef] := true;
[L1733]              assume newRef != null;
[L4680]  RET         call this := FreshRefGenerator__success();
[L4681]              assume now >= 0;
[L4682]              assume DType[this] == THECASH;
[L4683]              assume !revert && gas >= 0;
[L4684]  CALL        call CorralChoice_THECASH(this);
[L4527]              havoc msgsender_MSG;
[L4528]              havoc msgvalue_MSG;
[L4529]              havoc choice;
[L4530]              havoc __ret_0__owner;
[L4531]              havoc __ret_0__admin;
[L4532]              havoc __ret_0_owner;
[L4533]              havoc __ret_0_isOwner;
[L4534]              havoc __ret_0_isAllowed;
[L4535]              havoc _target_s260;
[L4536]              havoc __ret_0_allow;
[L4537]              havoc _target_s282;
[L4538]              havoc __ret_0_removeAllowed;
[L4539]              havoc __ret_0_isStopped;
[L4540]              havoc _proposedOwner_s337;
[L4541]              havoc __ret_0_decimals;
[L4542]              havoc __ret_0_totalSupply;
[L4543]              havoc arg1390_s0;
[L4544]              havoc __ret_0_balances;
[L4545]              havoc arg1391_s0;
[L4546]              havoc arg1392_s0;
[L4547]              havoc __ret_0_approvals;
[L4548]              havoc arg1393_s0;
[L4549]              havoc arg1394_s0;
[L4550]              havoc __ret_0_lockup;
[L4551]              havoc arg1395_s0;
[L4552]              havoc __ret_0_lockedAddresses;
[L4553]              havoc _who_s555;
[L4554]              havoc __ret_0_balanceOf;
[L4555]              havoc _who_s628;
[L4556]              havoc __ret_0_lockedBalanceOf;
[L4557]              havoc _owner_s644;
[L4558]              havoc _spender_s644;
[L4559]              havoc __ret_0_allowance;
[L4560]              havoc _who_s687;
[L4561]              havoc _value_s687;
[L4562]              havoc __ret_0_isLocked;
[L4563]              havoc _to_s719;
[L4564]              havoc _value_s719;
[L4565]              havoc __ret_0_transfer;
[L4566]              havoc _from_s774;
[L4567]              havoc _to_s774;
[L4568]              havoc _value_s774;
[L4569]              havoc __ret_0_transferFrom;
[L4570]              havoc _to_s815;
[L4571]              havoc _value_s815;
[L4572]              havoc _time_s815;
[L4573]              havoc __ret_0_transferWithLock;
[L4574]              havoc _addr_s831;
[L4575]              havoc _locked_s831;
[L4576]              havoc _spender_s885;
[L4577]              havoc _value_s885;
[L4578]              havoc __ret_0_approve;
[L4579]              havoc _who_s937;
[L4580]              havoc _index_s937;
[L4581]              havoc __ret_0_unlock;
[L4582]              havoc _who_s967;
[L4583]              havoc __ret_0_unlockAll;
[L4584]              havoc _value_s1014;
[L4585]              havoc account_s1276;
[L4586]              havoc __ret_0_isMinter;
[L4587]              havoc account_s1288;
[L4588]              havoc to_s1353;
[L4589]              havoc value_s1353;
[L4590]              havoc __ret_0_mint;
[L4591]              havoc __ret_0_name;
[L4592]              havoc __ret_0_symbol;
[L4593]              havoc __ret_0_version;
[L4594]              havoc tmpNow;
[L4595]              havoc gas;
[L4596]              assume gas > 4000000 && gas <= 8000000;
[L4597]              tmpNow := now;
[L4598]              havoc now;
[L4599]              assume now > tmpNow;
[L4600]              assume msgsender_MSG != null;
[L4601]  COND TRUE   choice == 11
[L4602]              gas := gas - 21000;
[L4603]  COND FALSE  !(gas >= 0)
[L4684]  RET         call CorralChoice_THECASH(this);

Loop:
[L4684]        assume true;

[2020-11-24 17:35:16,595 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 17:35:16,595 INFO  L82        PathProgramCache]: Analyzing trace with hash 2063950094, now seen corresponding path program 1 times
[2020-11-24 17:35:16,601 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 17:35:16,627 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 17:35:16,707 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 17:35:16,709 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 17:35:16,709 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [5] imperfect sequences [] total 5
[2020-11-24 17:35:16,901 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 17:35:16,910 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 5 interpolants.
[2020-11-24 17:35:16,910 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=9, Invalid=11, Unknown=0, NotChecked=0, Total=20
[2020-11-24 17:35:16,911 INFO  L87              Difference]: Start difference. First operand 4000 states. Second operand 5 states.
[2020-11-24 17:35:17,299 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 17:35:17,299 INFO  L93              Difference]: Finished difference Result 1935 states and 2381 transitions.
[2020-11-24 17:35:17,299 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-24 17:35:17,301 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 1935 states and 2381 transitions.
[2020-11-24 17:35:17,312 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 17:35:17,321 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 1935 states to 689 states and 868 transitions.
[2020-11-24 17:35:17,322 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 4
[2020-11-24 17:35:17,323 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 166
[2020-11-24 17:35:17,323 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 689 states and 868 transitions.
[2020-11-24 17:35:17,328 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 17:35:17,328 INFO  L728         BuchiCegarLoop]: Abstraction has 689 states and 868 transitions.
[2020-11-24 17:35:17,342 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 689 states and 868 transitions.
[2020-11-24 17:35:17,367 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 689 to 689.
[2020-11-24 17:35:17,368 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 689 states.
[2020-11-24 17:35:17,373 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 689 states to 689 states and 868 transitions.
[2020-11-24 17:35:17,375 INFO  L751         BuchiCegarLoop]: Abstraction has 689 states and 868 transitions.
[2020-11-24 17:35:17,375 INFO  L631         BuchiCegarLoop]: Abstraction has 689 states and 868 transitions.
[2020-11-24 17:35:17,375 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-24 17:35:17,375 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 689 states and 868 transitions.
[2020-11-24 17:35:17,380 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 17:35:17,380 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 17:35:17,380 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 17:35:17,382 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 17:35:17,382 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L3]                 success_transferFrom_BaseToken0 := false;
[L3]                 call_transferFrom_BaseToken0 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L4679]              assume null == 0;
[L4680]  CALL        call this := FreshRefGenerator__success();
[L1730]              havoc newRef;
[L1731]              assume Alloc[newRef] == false;
[L1732]              Alloc[newRef] := true;
[L1733]              assume newRef != null;
[L4680]  RET         call this := FreshRefGenerator__success();
[L4681]              assume now >= 0;
[L4682]              assume DType[this] == THECASH;
[L4683]              assume !revert && gas >= 0;
[L4684]  CALL        call CorralChoice_THECASH(this);
[L4527]              havoc msgsender_MSG;
[L4528]              havoc msgvalue_MSG;
[L4529]              havoc choice;
[L4530]              havoc __ret_0__owner;
[L4531]              havoc __ret_0__admin;
[L4532]              havoc __ret_0_owner;
[L4533]              havoc __ret_0_isOwner;
[L4534]              havoc __ret_0_isAllowed;
[L4535]              havoc _target_s260;
[L4536]              havoc __ret_0_allow;
[L4537]              havoc _target_s282;
[L4538]              havoc __ret_0_removeAllowed;
[L4539]              havoc __ret_0_isStopped;
[L4540]              havoc _proposedOwner_s337;
[L4541]              havoc __ret_0_decimals;
[L4542]              havoc __ret_0_totalSupply;
[L4543]              havoc arg1390_s0;
[L4544]              havoc __ret_0_balances;
[L4545]              havoc arg1391_s0;
[L4546]              havoc arg1392_s0;
[L4547]              havoc __ret_0_approvals;
[L4548]              havoc arg1393_s0;
[L4549]              havoc arg1394_s0;
[L4550]              havoc __ret_0_lockup;
[L4551]              havoc arg1395_s0;
[L4552]              havoc __ret_0_lockedAddresses;
[L4553]              havoc _who_s555;
[L4554]              havoc __ret_0_balanceOf;
[L4555]              havoc _who_s628;
[L4556]              havoc __ret_0_lockedBalanceOf;
[L4557]              havoc _owner_s644;
[L4558]              havoc _spender_s644;
[L4559]              havoc __ret_0_allowance;
[L4560]              havoc _who_s687;
[L4561]              havoc _value_s687;
[L4562]              havoc __ret_0_isLocked;
[L4563]              havoc _to_s719;
[L4564]              havoc _value_s719;
[L4565]              havoc __ret_0_transfer;
[L4566]              havoc _from_s774;
[L4567]              havoc _to_s774;
[L4568]              havoc _value_s774;
[L4569]              havoc __ret_0_transferFrom;
[L4570]              havoc _to_s815;
[L4571]              havoc _value_s815;
[L4572]              havoc _time_s815;
[L4573]              havoc __ret_0_transferWithLock;
[L4574]              havoc _addr_s831;
[L4575]              havoc _locked_s831;
[L4576]              havoc _spender_s885;
[L4577]              havoc _value_s885;
[L4578]              havoc __ret_0_approve;
[L4579]              havoc _who_s937;
[L4580]              havoc _index_s937;
[L4581]              havoc __ret_0_unlock;
[L4582]              havoc _who_s967;
[L4583]              havoc __ret_0_unlockAll;
[L4584]              havoc _value_s1014;
[L4585]              havoc account_s1276;
[L4586]              havoc __ret_0_isMinter;
[L4587]              havoc account_s1288;
[L4588]              havoc to_s1353;
[L4589]              havoc value_s1353;
[L4590]              havoc __ret_0_mint;
[L4591]              havoc __ret_0_name;
[L4592]              havoc __ret_0_symbol;
[L4593]              havoc __ret_0_version;
[L4594]              havoc tmpNow;
[L4595]              havoc gas;
[L4596]              assume gas > 4000000 && gas <= 8000000;
[L4597]              tmpNow := now;
[L4598]              havoc now;
[L4599]              assume now > tmpNow;
[L4600]              assume msgsender_MSG != null;
[L4601]  COND FALSE  !(choice == 11)
[L4607]  COND FALSE  !(choice == 10)
[L4613]  COND FALSE  !(choice == 9)
[L4619]  COND FALSE  !(choice == 8)
[L4625]  COND FALSE  !(choice == 7)
[L4631]  COND FALSE  !(choice == 6)
[L4637]  COND FALSE  !(choice == 5)
[L4643]  COND FALSE  !(choice == 4)
[L4650]  COND FALSE  !(choice == 3)
[L4657]  COND TRUE   choice == 2
[L4658]              gas := gas - 21000;
[L4659]  COND TRUE   gas >= 0
[L4660]              assume _value_s774 >= 0 && _value_s774 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4661]              assume msgvalue_MSG == 0;
[L4662]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_BaseToken(this, msgsender_MSG, msgvalue_MSG, _from_s774, _to_s774, _value_s774);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != _from_s774 || p2 != msgsender_MSG) && _from_s774 == _to_s774) && _value_s774 <= balances_BaseToken[this][_from_s774]) && _value_s774 <= approvals_BaseToken[this][_from_s774][msgsender_MSG]) && _value_s774 >= 0) && _value_s774 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BaseToken[this][_to_s774] >= 0) && balances_BaseToken[this][_to_s774] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BaseToken[this][_from_s774] >= 0) && balances_BaseToken[this][_from_s774] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && approvals_BaseToken[this][_from_s774][msgsender_MSG] >= 0) && approvals_BaseToken[this][_from_s774][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_BaseToken0 := true;
[L3]                 call_transferFrom_BaseToken0 := false;
[L3]                 revert := revert_hold;
[L836]               havoc __exception;
[L837]               revert := false;
[L838]   COND FALSE  !(__exception)
[L878]   CALL        call __ret_0_ := transferFrom~address~address~uint256_BaseToken__success(this, msgsender_MSG, msgvalue_MSG, _from_s774, _to_s774, _value_s774);
[L2323]  CALL        call onlyWhenNotStopped_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L3673]  COND TRUE   DType[this] == THECASH
[L3674]  CALL        call __var_1 := isStopped_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L1893]  COND TRUE   DType[this] == THECASH
[L1894]  CALL        call __var_2 := isOwner_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L1814]              __ret_0_ := msgsender_MSG == _owner_Ownable[this];
[L1894]  RET         call __var_2 := isOwner_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L1895]  COND TRUE   revert
[L3674]  RET         call __var_1 := isStopped_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3675]  COND TRUE   revert
[L2323]  RET         call onlyWhenNotStopped_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L2324]  COND TRUE   revert
[L878]   RET         call __ret_0_ := transferFrom~address~address~uint256_BaseToken__success(this, msgsender_MSG, msgvalue_MSG, _from_s774, _to_s774, _value_s774);
[L879]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !((((((((((((__ret_0_ == true && approvals_BaseToken[this][_from_s774][msgsender_MSG] == old(approvals_BaseToken[this][_from_s774][msgsender_MSG]) - _value_s774) && totalSupply_BaseToken[this] == old(totalSupply_BaseToken[this])) && balances_BaseToken[this] == old(balances_BaseToken[this])) && approvals_BaseToken[this][p1][p2] == old(approvals_BaseToken[this][p1][p2])) && _minters_MinterRole[this] == old(_minters_MinterRole[this])) && M_Ref_Ref[lockup_BaseToken[this]] == old(M_Ref_Ref[lockup_BaseToken[this]])) && lockedAddresses_BaseToken[this] == old(lockedAddresses_BaseToken[this])) && stopped_Ownable[this] == old(stopped_Ownable[this])) && _owner_Ownable[this] == old(_owner_Ownable[this])) && _admin_Ownable[this] == old(_admin_Ownable[this])) && proposedOwner_Ownable[this] == old(proposedOwner_Ownable[this])) && _allowed_Ownable[this] == old(_allowed_Ownable[this]));
[L3]                 revert := revert_hold;
[L4662]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_BaseToken(this, msgsender_MSG, msgvalue_MSG, _from_s774, _to_s774, _value_s774);
[L4684]  RET         call CorralChoice_THECASH(this);

Loop:
[L4684]        assume true;

[2020-11-24 17:35:17,385 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 17:35:17,386 INFO  L82        PathProgramCache]: Analyzing trace with hash 15261661, now seen corresponding path program 1 times
[2020-11-24 17:35:17,387 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 17:35:17,402 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 17:35:17,429 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 17:35:17,429 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 17:35:17,429 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-24 17:35:17,430 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 17:35:17,431 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-24 17:35:17,431 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-24 17:35:17,431 INFO  L87              Difference]: Start difference. First operand 689 states and 868 transitions. cyclomatic complexity: 182 Second operand 3 states.
[2020-11-24 17:35:17,461 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 17:35:17,462 INFO  L93              Difference]: Finished difference Result 816 states and 1018 transitions.
[2020-11-24 17:35:17,462 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-24 17:35:17,462 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 816 states and 1018 transitions.
[2020-11-24 17:35:17,467 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 2
[2020-11-24 17:35:17,471 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 816 states to 746 states and 894 transitions.
[2020-11-24 17:35:17,471 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 186
[2020-11-24 17:35:17,472 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 241
[2020-11-24 17:35:17,472 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 746 states and 894 transitions.
[2020-11-24 17:35:17,474 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 17:35:17,474 INFO  L728         BuchiCegarLoop]: Abstraction has 746 states and 894 transitions.
[2020-11-24 17:35:17,475 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 746 states and 894 transitions.
[2020-11-24 17:35:17,484 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 746 to 735.
[2020-11-24 17:35:17,484 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 735 states.
[2020-11-24 17:35:17,486 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 735 states to 735 states and 883 transitions.
[2020-11-24 17:35:17,486 INFO  L751         BuchiCegarLoop]: Abstraction has 735 states and 883 transitions.
[2020-11-24 17:35:17,486 INFO  L631         BuchiCegarLoop]: Abstraction has 735 states and 883 transitions.
[2020-11-24 17:35:17,486 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-24 17:35:17,486 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 735 states and 883 transitions.
[2020-11-24 17:35:17,488 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 17:35:17,488 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 17:35:17,488 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 17:35:17,490 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 17:35:17,490 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L3]                 success_transferFrom_BaseToken0 := false;
[L3]                 call_transferFrom_BaseToken0 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L4679]              assume null == 0;
[L4680]  CALL        call this := FreshRefGenerator__success();
[L1730]              havoc newRef;
[L1731]              assume Alloc[newRef] == false;
[L1732]              Alloc[newRef] := true;
[L1733]              assume newRef != null;
[L4680]  RET         call this := FreshRefGenerator__success();
[L4681]              assume now >= 0;
[L4682]              assume DType[this] == THECASH;
[L4683]              assume !revert && gas >= 0;
[L4684]  CALL        call CorralChoice_THECASH(this);
[L4527]              havoc msgsender_MSG;
[L4528]              havoc msgvalue_MSG;
[L4529]              havoc choice;
[L4530]              havoc __ret_0__owner;
[L4531]              havoc __ret_0__admin;
[L4532]              havoc __ret_0_owner;
[L4533]              havoc __ret_0_isOwner;
[L4534]              havoc __ret_0_isAllowed;
[L4535]              havoc _target_s260;
[L4536]              havoc __ret_0_allow;
[L4537]              havoc _target_s282;
[L4538]              havoc __ret_0_removeAllowed;
[L4539]              havoc __ret_0_isStopped;
[L4540]              havoc _proposedOwner_s337;
[L4541]              havoc __ret_0_decimals;
[L4542]              havoc __ret_0_totalSupply;
[L4543]              havoc arg1390_s0;
[L4544]              havoc __ret_0_balances;
[L4545]              havoc arg1391_s0;
[L4546]              havoc arg1392_s0;
[L4547]              havoc __ret_0_approvals;
[L4548]              havoc arg1393_s0;
[L4549]              havoc arg1394_s0;
[L4550]              havoc __ret_0_lockup;
[L4551]              havoc arg1395_s0;
[L4552]              havoc __ret_0_lockedAddresses;
[L4553]              havoc _who_s555;
[L4554]              havoc __ret_0_balanceOf;
[L4555]              havoc _who_s628;
[L4556]              havoc __ret_0_lockedBalanceOf;
[L4557]              havoc _owner_s644;
[L4558]              havoc _spender_s644;
[L4559]              havoc __ret_0_allowance;
[L4560]              havoc _who_s687;
[L4561]              havoc _value_s687;
[L4562]              havoc __ret_0_isLocked;
[L4563]              havoc _to_s719;
[L4564]              havoc _value_s719;
[L4565]              havoc __ret_0_transfer;
[L4566]              havoc _from_s774;
[L4567]              havoc _to_s774;
[L4568]              havoc _value_s774;
[L4569]              havoc __ret_0_transferFrom;
[L4570]              havoc _to_s815;
[L4571]              havoc _value_s815;
[L4572]              havoc _time_s815;
[L4573]              havoc __ret_0_transferWithLock;
[L4574]              havoc _addr_s831;
[L4575]              havoc _locked_s831;
[L4576]              havoc _spender_s885;
[L4577]              havoc _value_s885;
[L4578]              havoc __ret_0_approve;
[L4579]              havoc _who_s937;
[L4580]              havoc _index_s937;
[L4581]              havoc __ret_0_unlock;
[L4582]              havoc _who_s967;
[L4583]              havoc __ret_0_unlockAll;
[L4584]              havoc _value_s1014;
[L4585]              havoc account_s1276;
[L4586]              havoc __ret_0_isMinter;
[L4587]              havoc account_s1288;
[L4588]              havoc to_s1353;
[L4589]              havoc value_s1353;
[L4590]              havoc __ret_0_mint;
[L4591]              havoc __ret_0_name;
[L4592]              havoc __ret_0_symbol;
[L4593]              havoc __ret_0_version;
[L4594]              havoc tmpNow;
[L4595]              havoc gas;
[L4596]              assume gas > 4000000 && gas <= 8000000;
[L4597]              tmpNow := now;
[L4598]              havoc now;
[L4599]              assume now > tmpNow;
[L4600]              assume msgsender_MSG != null;
[L4601]  COND FALSE  !(choice == 11)
[L4607]  COND FALSE  !(choice == 10)
[L4613]  COND FALSE  !(choice == 9)
[L4619]  COND FALSE  !(choice == 8)
[L4625]  COND FALSE  !(choice == 7)
[L4631]  COND FALSE  !(choice == 6)
[L4637]  COND FALSE  !(choice == 5)
[L4643]  COND FALSE  !(choice == 4)
[L4650]  COND FALSE  !(choice == 3)
[L4657]  COND TRUE   choice == 2
[L4658]              gas := gas - 21000;
[L4659]  COND TRUE   gas >= 0
[L4660]              assume _value_s774 >= 0 && _value_s774 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4661]              assume msgvalue_MSG == 0;
[L4662]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_BaseToken(this, msgsender_MSG, msgvalue_MSG, _from_s774, _to_s774, _value_s774);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != _from_s774 || p2 != msgsender_MSG) && _from_s774 == _to_s774) && _value_s774 <= balances_BaseToken[this][_from_s774]) && _value_s774 <= approvals_BaseToken[this][_from_s774][msgsender_MSG]) && _value_s774 >= 0) && _value_s774 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BaseToken[this][_to_s774] >= 0) && balances_BaseToken[this][_to_s774] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BaseToken[this][_from_s774] >= 0) && balances_BaseToken[this][_from_s774] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && approvals_BaseToken[this][_from_s774][msgsender_MSG] >= 0) && approvals_BaseToken[this][_from_s774][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_BaseToken0 := true;
[L3]                 call_transferFrom_BaseToken0 := false;
[L3]                 revert := revert_hold;
[L836]               havoc __exception;
[L837]               revert := false;
[L838]   COND TRUE   __exception
[L839]               __tmp__Balance := Balance;
[L840]               __tmp__DType := DType;
[L841]               __tmp__Alloc := Alloc;
[L842]               __tmp__balance_ADDR := balance_ADDR;
[L843]               __tmp__M_Ref_bool := M_Ref_bool;
[L844]               __tmp__sum__allowed0 := sum__allowed0;
[L845]               __tmp__M_Ref_int := M_Ref_int;
[L846]               __tmp__sum_balances1 := sum_balances1;
[L847]               __tmp__alloc_approvals_BaseToken_lvl0 := alloc_approvals_BaseToken_lvl0;
[L848]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L849]               __tmp__sum_approvals2 := sum_approvals2;
[L850]               __tmp__M_int_Ref := M_int_Ref;
[L851]               __tmp__alloc_lockup_BaseToken_lvl0 := alloc_lockup_BaseToken_lvl0;
[L852]               __tmp__sum := sum;
[L853]               __tmp__sum_lockedAddresses3 := sum_lockedAddresses3;
[L854]               __tmp__Length := Length;
[L855]               __tmp__now := now;
[L856]               __tmp__stopped_Ownable := stopped_Ownable;
[L857]               __tmp___owner_Ownable := _owner_Ownable;
[L858]               __tmp___admin_Ownable := _admin_Ownable;
[L859]               __tmp__proposedOwner_Ownable := proposedOwner_Ownable;
[L860]               __tmp___allowed_Ownable := _allowed_Ownable;
[L861]               __tmp__E18_BaseToken := E18_BaseToken;
[L862]               __tmp__decimals_BaseToken := decimals_BaseToken;
[L863]               __tmp__totalSupply_BaseToken := totalSupply_BaseToken;
[L864]               __tmp__amount_BaseToken.Lock := amount_BaseToken.Lock;
[L865]               __tmp__expiresAt_BaseToken.Lock := expiresAt_BaseToken.Lock;
[L866]               __tmp__balances_BaseToken := balances_BaseToken;
[L867]               __tmp__approvals_BaseToken := approvals_BaseToken;
[L868]               __tmp__lockup_BaseToken := lockup_BaseToken;
[L869]               __tmp__lockedAddresses_BaseToken := lockedAddresses_BaseToken;
[L870]               __tmp__bearer_Roles.Role := bearer_Roles.Role;
[L871]               __tmp___minters_MinterRole := _minters_MinterRole;
[L872]               __tmp__name_THECASH := name_THECASH;
[L873]               __tmp__symbol_THECASH := symbol_THECASH;
[L874]               __tmp__version_THECASH := version_THECASH;
[L875]   CALL        call __ret_0_ := transferFrom~address~address~uint256_BaseToken__fail(this, msgsender_MSG, msgvalue_MSG, _from_s774, _to_s774, _value_s774);
[L2279]  CALL        call onlyWhenNotStopped_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L3641]  COND TRUE   __tmp__DType[this] == THECASH
[L3642]  CALL        call __var_1 := isStopped_Ownable__fail(this, msgsender_MSG, msgvalue_MSG);
[L1834]  COND TRUE   __tmp__DType[this] == THECASH
[L1835]  CALL        call __var_2 := isOwner_Ownable__fail(this, msgsender_MSG, msgvalue_MSG);
[L1808]              __ret_0_ := msgsender_MSG == __tmp___owner_Ownable[this];
[L1835]  RET         call __var_2 := isOwner_Ownable__fail(this, msgsender_MSG, msgvalue_MSG);
[L1836]  COND TRUE   revert
[L3642]  RET         call __var_1 := isStopped_Ownable__fail(this, msgsender_MSG, msgvalue_MSG);
[L3643]  COND TRUE   revert
[L2279]  RET         call onlyWhenNotStopped_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L2280]  COND TRUE   revert
[L875]   RET         call __ret_0_ := transferFrom~address~address~uint256_BaseToken__fail(this, msgsender_MSG, msgvalue_MSG, _from_s774, _to_s774, _value_s774);
[L876]               assume revert || gas < 0;
[L4662]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_BaseToken(this, msgsender_MSG, msgvalue_MSG, _from_s774, _to_s774, _value_s774);
[L4684]  RET         call CorralChoice_THECASH(this);

Loop:
[L4684]        assume true;

[2020-11-24 17:35:17,494 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 17:35:17,494 INFO  L82        PathProgramCache]: Analyzing trace with hash -1878138775, now seen corresponding path program 1 times
[2020-11-24 17:35:17,495 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 17:35:17,505 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 17:35:17,539 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 17:35:17,539 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 17:35:17,539 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [6] imperfect sequences [] total 6
[2020-11-24 17:35:17,539 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 17:35:17,540 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 6 interpolants.
[2020-11-24 17:35:17,540 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=11, Invalid=19, Unknown=0, NotChecked=0, Total=30
[2020-11-24 17:35:17,540 INFO  L87              Difference]: Start difference. First operand 735 states and 883 transitions. cyclomatic complexity: 151 Second operand 6 states.
[2020-11-24 17:35:17,626 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 17:35:17,626 INFO  L93              Difference]: Finished difference Result 743 states and 855 transitions.
[2020-11-24 17:35:17,626 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 5 states. 
[2020-11-24 17:35:17,626 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 743 states and 855 transitions.
[2020-11-24 17:35:17,629 INFO  L131   ngComponentsAnalysis]: Automaton has 3 accepting balls. 3
[2020-11-24 17:35:17,632 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 743 states to 743 states and 855 transitions.
[2020-11-24 17:35:17,632 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 238
[2020-11-24 17:35:17,632 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 238
[2020-11-24 17:35:17,632 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 743 states and 855 transitions.
[2020-11-24 17:35:17,633 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 17:35:17,633 INFO  L728         BuchiCegarLoop]: Abstraction has 743 states and 855 transitions.
[2020-11-24 17:35:17,634 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 743 states and 855 transitions.
[2020-11-24 17:35:17,639 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 743 to 725.
[2020-11-24 17:35:17,639 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 725 states.
[2020-11-24 17:35:17,641 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 725 states to 725 states and 837 transitions.
[2020-11-24 17:35:17,641 INFO  L751         BuchiCegarLoop]: Abstraction has 725 states and 837 transitions.
[2020-11-24 17:35:17,641 INFO  L631         BuchiCegarLoop]: Abstraction has 725 states and 837 transitions.
[2020-11-24 17:35:17,641 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-24 17:35:17,641 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 725 states and 837 transitions.
[2020-11-24 17:35:17,642 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 17:35:17,642 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 17:35:17,642 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 17:35:17,643 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 17:35:17,643 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L3]                 success_transferFrom_BaseToken0 := false;
[L3]                 call_transferFrom_BaseToken0 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L4679]              assume null == 0;
[L4680]  CALL        call this := FreshRefGenerator__success();
[L1730]              havoc newRef;
[L1731]              assume Alloc[newRef] == false;
[L1732]              Alloc[newRef] := true;
[L1733]              assume newRef != null;
[L4680]  RET         call this := FreshRefGenerator__success();
[L4681]              assume now >= 0;
[L4682]              assume DType[this] == THECASH;
[L4683]              assume !revert && gas >= 0;
[L4684]  CALL        call CorralChoice_THECASH(this);
[L4527]              havoc msgsender_MSG;
[L4528]              havoc msgvalue_MSG;
[L4529]              havoc choice;
[L4530]              havoc __ret_0__owner;
[L4531]              havoc __ret_0__admin;
[L4532]              havoc __ret_0_owner;
[L4533]              havoc __ret_0_isOwner;
[L4534]              havoc __ret_0_isAllowed;
[L4535]              havoc _target_s260;
[L4536]              havoc __ret_0_allow;
[L4537]              havoc _target_s282;
[L4538]              havoc __ret_0_removeAllowed;
[L4539]              havoc __ret_0_isStopped;
[L4540]              havoc _proposedOwner_s337;
[L4541]              havoc __ret_0_decimals;
[L4542]              havoc __ret_0_totalSupply;
[L4543]              havoc arg1390_s0;
[L4544]              havoc __ret_0_balances;
[L4545]              havoc arg1391_s0;
[L4546]              havoc arg1392_s0;
[L4547]              havoc __ret_0_approvals;
[L4548]              havoc arg1393_s0;
[L4549]              havoc arg1394_s0;
[L4550]              havoc __ret_0_lockup;
[L4551]              havoc arg1395_s0;
[L4552]              havoc __ret_0_lockedAddresses;
[L4553]              havoc _who_s555;
[L4554]              havoc __ret_0_balanceOf;
[L4555]              havoc _who_s628;
[L4556]              havoc __ret_0_lockedBalanceOf;
[L4557]              havoc _owner_s644;
[L4558]              havoc _spender_s644;
[L4559]              havoc __ret_0_allowance;
[L4560]              havoc _who_s687;
[L4561]              havoc _value_s687;
[L4562]              havoc __ret_0_isLocked;
[L4563]              havoc _to_s719;
[L4564]              havoc _value_s719;
[L4565]              havoc __ret_0_transfer;
[L4566]              havoc _from_s774;
[L4567]              havoc _to_s774;
[L4568]              havoc _value_s774;
[L4569]              havoc __ret_0_transferFrom;
[L4570]              havoc _to_s815;
[L4571]              havoc _value_s815;
[L4572]              havoc _time_s815;
[L4573]              havoc __ret_0_transferWithLock;
[L4574]              havoc _addr_s831;
[L4575]              havoc _locked_s831;
[L4576]              havoc _spender_s885;
[L4577]              havoc _value_s885;
[L4578]              havoc __ret_0_approve;
[L4579]              havoc _who_s937;
[L4580]              havoc _index_s937;
[L4581]              havoc __ret_0_unlock;
[L4582]              havoc _who_s967;
[L4583]              havoc __ret_0_unlockAll;
[L4584]              havoc _value_s1014;
[L4585]              havoc account_s1276;
[L4586]              havoc __ret_0_isMinter;
[L4587]              havoc account_s1288;
[L4588]              havoc to_s1353;
[L4589]              havoc value_s1353;
[L4590]              havoc __ret_0_mint;
[L4591]              havoc __ret_0_name;
[L4592]              havoc __ret_0_symbol;
[L4593]              havoc __ret_0_version;
[L4594]              havoc tmpNow;
[L4595]              havoc gas;
[L4596]              assume gas > 4000000 && gas <= 8000000;
[L4597]              tmpNow := now;
[L4598]              havoc now;
[L4599]              assume now > tmpNow;
[L4600]              assume msgsender_MSG != null;
[L4601]  COND FALSE  !(choice == 11)
[L4607]  COND FALSE  !(choice == 10)
[L4613]  COND FALSE  !(choice == 9)
[L4619]  COND FALSE  !(choice == 8)
[L4625]  COND FALSE  !(choice == 7)
[L4631]  COND FALSE  !(choice == 6)
[L4637]  COND FALSE  !(choice == 5)
[L4643]  COND FALSE  !(choice == 4)
[L4650]  COND FALSE  !(choice == 3)
[L4657]  COND TRUE   choice == 2
[L4658]              gas := gas - 21000;
[L4659]  COND TRUE   gas >= 0
[L4660]              assume _value_s774 >= 0 && _value_s774 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4661]              assume msgvalue_MSG == 0;
[L4662]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_BaseToken(this, msgsender_MSG, msgvalue_MSG, _from_s774, _to_s774, _value_s774);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != _from_s774 || p2 != msgsender_MSG) && _from_s774 == _to_s774) && _value_s774 <= balances_BaseToken[this][_from_s774]) && _value_s774 <= approvals_BaseToken[this][_from_s774][msgsender_MSG]) && _value_s774 >= 0) && _value_s774 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BaseToken[this][_to_s774] >= 0) && balances_BaseToken[this][_to_s774] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BaseToken[this][_from_s774] >= 0) && balances_BaseToken[this][_from_s774] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && approvals_BaseToken[this][_from_s774][msgsender_MSG] >= 0) && approvals_BaseToken[this][_from_s774][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_BaseToken0 := true;
[L3]                 call_transferFrom_BaseToken0 := false;
[L3]                 revert := revert_hold;
[L836]               havoc __exception;
[L837]               revert := false;
[L838]   COND TRUE   __exception
[L839]               __tmp__Balance := Balance;
[L840]               __tmp__DType := DType;
[L841]               __tmp__Alloc := Alloc;
[L842]               __tmp__balance_ADDR := balance_ADDR;
[L843]               __tmp__M_Ref_bool := M_Ref_bool;
[L844]               __tmp__sum__allowed0 := sum__allowed0;
[L845]               __tmp__M_Ref_int := M_Ref_int;
[L846]               __tmp__sum_balances1 := sum_balances1;
[L847]               __tmp__alloc_approvals_BaseToken_lvl0 := alloc_approvals_BaseToken_lvl0;
[L848]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L849]               __tmp__sum_approvals2 := sum_approvals2;
[L850]               __tmp__M_int_Ref := M_int_Ref;
[L851]               __tmp__alloc_lockup_BaseToken_lvl0 := alloc_lockup_BaseToken_lvl0;
[L852]               __tmp__sum := sum;
[L853]               __tmp__sum_lockedAddresses3 := sum_lockedAddresses3;
[L854]               __tmp__Length := Length;
[L855]               __tmp__now := now;
[L856]               __tmp__stopped_Ownable := stopped_Ownable;
[L857]               __tmp___owner_Ownable := _owner_Ownable;
[L858]               __tmp___admin_Ownable := _admin_Ownable;
[L859]               __tmp__proposedOwner_Ownable := proposedOwner_Ownable;
[L860]               __tmp___allowed_Ownable := _allowed_Ownable;
[L861]               __tmp__E18_BaseToken := E18_BaseToken;
[L862]               __tmp__decimals_BaseToken := decimals_BaseToken;
[L863]               __tmp__totalSupply_BaseToken := totalSupply_BaseToken;
[L864]               __tmp__amount_BaseToken.Lock := amount_BaseToken.Lock;
[L865]               __tmp__expiresAt_BaseToken.Lock := expiresAt_BaseToken.Lock;
[L866]               __tmp__balances_BaseToken := balances_BaseToken;
[L867]               __tmp__approvals_BaseToken := approvals_BaseToken;
[L868]               __tmp__lockup_BaseToken := lockup_BaseToken;
[L869]               __tmp__lockedAddresses_BaseToken := lockedAddresses_BaseToken;
[L870]               __tmp__bearer_Roles.Role := bearer_Roles.Role;
[L871]               __tmp___minters_MinterRole := _minters_MinterRole;
[L872]               __tmp__name_THECASH := name_THECASH;
[L873]               __tmp__symbol_THECASH := symbol_THECASH;
[L874]               __tmp__version_THECASH := version_THECASH;
[L875]   CALL        call __ret_0_ := transferFrom~address~address~uint256_BaseToken__fail(this, msgsender_MSG, msgvalue_MSG, _from_s774, _to_s774, _value_s774);
[L2279]  CALL        call onlyWhenNotStopped_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L3641]  COND TRUE   __tmp__DType[this] == THECASH
[L3642]  CALL        call __var_1 := isStopped_Ownable__fail(this, msgsender_MSG, msgvalue_MSG);
[L1834]  COND TRUE   __tmp__DType[this] == THECASH
[L1835]  CALL        call __var_2 := isOwner_Ownable__fail(this, msgsender_MSG, msgvalue_MSG);
[L1808]              __ret_0_ := msgsender_MSG == __tmp___owner_Ownable[this];
[L1835]  RET         call __var_2 := isOwner_Ownable__fail(this, msgsender_MSG, msgvalue_MSG);
[L1836]  COND FALSE  !(revert)
[L1857]  COND TRUE   __tmp__DType[this] == THECASH
[L1858]  CALL        call __var_3 := isAllowed_Ownable__fail(this, msgsender_MSG, msgvalue_MSG);
[L1820]              __ret_0_ := __tmp___allowed_Ownable[this][msgsender_MSG];
[L1858]  RET         call __var_3 := isAllowed_Ownable__fail(this, msgsender_MSG, msgvalue_MSG);
[L1859]  COND FALSE  !(revert)
[L1880]  COND TRUE   __var_2 || __var_3
[L1881]              __ret_0_ := false;
[L3642]  RET         call __var_1 := isStopped_Ownable__fail(this, msgsender_MSG, msgvalue_MSG);
[L3643]  COND FALSE  !(revert)
[L3664]  COND TRUE   !!__var_1
[L3665]              revert := true;
[L2279]  RET         call onlyWhenNotStopped_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L2280]  COND TRUE   revert
[L875]   RET         call __ret_0_ := transferFrom~address~address~uint256_BaseToken__fail(this, msgsender_MSG, msgvalue_MSG, _from_s774, _to_s774, _value_s774);
[L876]               assume revert || gas < 0;
[L4662]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_BaseToken(this, msgsender_MSG, msgvalue_MSG, _from_s774, _to_s774, _value_s774);
[L4684]  RET         call CorralChoice_THECASH(this);

Loop:
[L4684]        assume true;

[2020-11-24 17:35:17,645 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 17:35:17,646 INFO  L82        PathProgramCache]: Analyzing trace with hash 280806262, now seen corresponding path program 1 times
[2020-11-24 17:35:17,646 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 17:35:17,653 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 17:35:17,675 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 17:35:17,676 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 17:35:17,676 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-24 17:35:17,676 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 17:35:17,676 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-24 17:35:17,676 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-24 17:35:17,676 INFO  L87              Difference]: Start difference. First operand 725 states and 837 transitions. cyclomatic complexity: 115 Second operand 4 states.
[2020-11-24 17:35:17,684 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 17:35:17,684 INFO  L93              Difference]: Finished difference Result 736 states and 851 transitions.
[2020-11-24 17:35:17,684 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-24 17:35:17,684 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 736 states and 851 transitions.
[2020-11-24 17:35:17,686 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 17:35:17,689 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 736 states to 736 states and 851 transitions.
[2020-11-24 17:35:17,689 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 220
[2020-11-24 17:35:17,689 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 220
[2020-11-24 17:35:17,689 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 736 states and 851 transitions.
[2020-11-24 17:35:17,690 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 17:35:17,690 INFO  L728         BuchiCegarLoop]: Abstraction has 736 states and 851 transitions.
[2020-11-24 17:35:17,691 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 736 states and 851 transitions.
[2020-11-24 17:35:17,696 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 736 to 736.
[2020-11-24 17:35:17,696 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 736 states.
[2020-11-24 17:35:17,697 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 736 states to 736 states and 851 transitions.
[2020-11-24 17:35:17,698 INFO  L751         BuchiCegarLoop]: Abstraction has 736 states and 851 transitions.
[2020-11-24 17:35:17,698 INFO  L631         BuchiCegarLoop]: Abstraction has 736 states and 851 transitions.
[2020-11-24 17:35:17,698 INFO  L445         BuchiCegarLoop]: ======== Iteration 5============
[2020-11-24 17:35:17,698 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 736 states and 851 transitions.
[2020-11-24 17:35:17,699 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 17:35:17,699 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 17:35:17,699 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 17:35:17,700 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 17:35:17,700 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L3]                 success_transferFrom_BaseToken0 := false;
[L3]                 call_transferFrom_BaseToken0 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L4679]              assume null == 0;
[L4680]  CALL        call this := FreshRefGenerator__success();
[L1730]              havoc newRef;
[L1731]              assume Alloc[newRef] == false;
[L1732]              Alloc[newRef] := true;
[L1733]              assume newRef != null;
[L4680]  RET         call this := FreshRefGenerator__success();
[L4681]              assume now >= 0;
[L4682]              assume DType[this] == THECASH;
[L4683]              assume !revert && gas >= 0;
[L4684]  CALL        call CorralChoice_THECASH(this);
[L4527]              havoc msgsender_MSG;
[L4528]              havoc msgvalue_MSG;
[L4529]              havoc choice;
[L4530]              havoc __ret_0__owner;
[L4531]              havoc __ret_0__admin;
[L4532]              havoc __ret_0_owner;
[L4533]              havoc __ret_0_isOwner;
[L4534]              havoc __ret_0_isAllowed;
[L4535]              havoc _target_s260;
[L4536]              havoc __ret_0_allow;
[L4537]              havoc _target_s282;
[L4538]              havoc __ret_0_removeAllowed;
[L4539]              havoc __ret_0_isStopped;
[L4540]              havoc _proposedOwner_s337;
[L4541]              havoc __ret_0_decimals;
[L4542]              havoc __ret_0_totalSupply;
[L4543]              havoc arg1390_s0;
[L4544]              havoc __ret_0_balances;
[L4545]              havoc arg1391_s0;
[L4546]              havoc arg1392_s0;
[L4547]              havoc __ret_0_approvals;
[L4548]              havoc arg1393_s0;
[L4549]              havoc arg1394_s0;
[L4550]              havoc __ret_0_lockup;
[L4551]              havoc arg1395_s0;
[L4552]              havoc __ret_0_lockedAddresses;
[L4553]              havoc _who_s555;
[L4554]              havoc __ret_0_balanceOf;
[L4555]              havoc _who_s628;
[L4556]              havoc __ret_0_lockedBalanceOf;
[L4557]              havoc _owner_s644;
[L4558]              havoc _spender_s644;
[L4559]              havoc __ret_0_allowance;
[L4560]              havoc _who_s687;
[L4561]              havoc _value_s687;
[L4562]              havoc __ret_0_isLocked;
[L4563]              havoc _to_s719;
[L4564]              havoc _value_s719;
[L4565]              havoc __ret_0_transfer;
[L4566]              havoc _from_s774;
[L4567]              havoc _to_s774;
[L4568]              havoc _value_s774;
[L4569]              havoc __ret_0_transferFrom;
[L4570]              havoc _to_s815;
[L4571]              havoc _value_s815;
[L4572]              havoc _time_s815;
[L4573]              havoc __ret_0_transferWithLock;
[L4574]              havoc _addr_s831;
[L4575]              havoc _locked_s831;
[L4576]              havoc _spender_s885;
[L4577]              havoc _value_s885;
[L4578]              havoc __ret_0_approve;
[L4579]              havoc _who_s937;
[L4580]              havoc _index_s937;
[L4581]              havoc __ret_0_unlock;
[L4582]              havoc _who_s967;
[L4583]              havoc __ret_0_unlockAll;
[L4584]              havoc _value_s1014;
[L4585]              havoc account_s1276;
[L4586]              havoc __ret_0_isMinter;
[L4587]              havoc account_s1288;
[L4588]              havoc to_s1353;
[L4589]              havoc value_s1353;
[L4590]              havoc __ret_0_mint;
[L4591]              havoc __ret_0_name;
[L4592]              havoc __ret_0_symbol;
[L4593]              havoc __ret_0_version;
[L4594]              havoc tmpNow;
[L4595]              havoc gas;
[L4596]              assume gas > 4000000 && gas <= 8000000;
[L4597]              tmpNow := now;
[L4598]              havoc now;
[L4599]              assume now > tmpNow;
[L4600]              assume msgsender_MSG != null;
[L4601]  COND FALSE  !(choice == 11)
[L4607]  COND FALSE  !(choice == 10)
[L4613]  COND FALSE  !(choice == 9)
[L4619]  COND FALSE  !(choice == 8)
[L4625]  COND FALSE  !(choice == 7)
[L4631]  COND FALSE  !(choice == 6)
[L4637]  COND FALSE  !(choice == 5)
[L4643]  COND FALSE  !(choice == 4)
[L4650]  COND FALSE  !(choice == 3)
[L4657]  COND TRUE   choice == 2
[L4658]              gas := gas - 21000;
[L4659]  COND TRUE   gas >= 0
[L4660]              assume _value_s774 >= 0 && _value_s774 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4661]              assume msgvalue_MSG == 0;
[L4662]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_BaseToken(this, msgsender_MSG, msgvalue_MSG, _from_s774, _to_s774, _value_s774);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != _from_s774 || p2 != msgsender_MSG) && _from_s774 == _to_s774) && _value_s774 <= balances_BaseToken[this][_from_s774]) && _value_s774 <= approvals_BaseToken[this][_from_s774][msgsender_MSG]) && _value_s774 >= 0) && _value_s774 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BaseToken[this][_to_s774] >= 0) && balances_BaseToken[this][_to_s774] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BaseToken[this][_from_s774] >= 0) && balances_BaseToken[this][_from_s774] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && approvals_BaseToken[this][_from_s774][msgsender_MSG] >= 0) && approvals_BaseToken[this][_from_s774][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_BaseToken0 := true;
[L3]                 call_transferFrom_BaseToken0 := false;
[L3]                 revert := revert_hold;
[L836]               havoc __exception;
[L837]               revert := false;
[L838]   COND TRUE   __exception
[L839]               __tmp__Balance := Balance;
[L840]               __tmp__DType := DType;
[L841]               __tmp__Alloc := Alloc;
[L842]               __tmp__balance_ADDR := balance_ADDR;
[L843]               __tmp__M_Ref_bool := M_Ref_bool;
[L844]               __tmp__sum__allowed0 := sum__allowed0;
[L845]               __tmp__M_Ref_int := M_Ref_int;
[L846]               __tmp__sum_balances1 := sum_balances1;
[L847]               __tmp__alloc_approvals_BaseToken_lvl0 := alloc_approvals_BaseToken_lvl0;
[L848]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L849]               __tmp__sum_approvals2 := sum_approvals2;
[L850]               __tmp__M_int_Ref := M_int_Ref;
[L851]               __tmp__alloc_lockup_BaseToken_lvl0 := alloc_lockup_BaseToken_lvl0;
[L852]               __tmp__sum := sum;
[L853]               __tmp__sum_lockedAddresses3 := sum_lockedAddresses3;
[L854]               __tmp__Length := Length;
[L855]               __tmp__now := now;
[L856]               __tmp__stopped_Ownable := stopped_Ownable;
[L857]               __tmp___owner_Ownable := _owner_Ownable;
[L858]               __tmp___admin_Ownable := _admin_Ownable;
[L859]               __tmp__proposedOwner_Ownable := proposedOwner_Ownable;
[L860]               __tmp___allowed_Ownable := _allowed_Ownable;
[L861]               __tmp__E18_BaseToken := E18_BaseToken;
[L862]               __tmp__decimals_BaseToken := decimals_BaseToken;
[L863]               __tmp__totalSupply_BaseToken := totalSupply_BaseToken;
[L864]               __tmp__amount_BaseToken.Lock := amount_BaseToken.Lock;
[L865]               __tmp__expiresAt_BaseToken.Lock := expiresAt_BaseToken.Lock;
[L866]               __tmp__balances_BaseToken := balances_BaseToken;
[L867]               __tmp__approvals_BaseToken := approvals_BaseToken;
[L868]               __tmp__lockup_BaseToken := lockup_BaseToken;
[L869]               __tmp__lockedAddresses_BaseToken := lockedAddresses_BaseToken;
[L870]               __tmp__bearer_Roles.Role := bearer_Roles.Role;
[L871]               __tmp___minters_MinterRole := _minters_MinterRole;
[L872]               __tmp__name_THECASH := name_THECASH;
[L873]               __tmp__symbol_THECASH := symbol_THECASH;
[L874]               __tmp__version_THECASH := version_THECASH;
[L875]   CALL        call __ret_0_ := transferFrom~address~address~uint256_BaseToken__fail(this, msgsender_MSG, msgvalue_MSG, _from_s774, _to_s774, _value_s774);
[L2279]  CALL        call onlyWhenNotStopped_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L3641]  COND TRUE   __tmp__DType[this] == THECASH
[L3642]  CALL        call __var_1 := isStopped_Ownable__fail(this, msgsender_MSG, msgvalue_MSG);
[L1834]  COND TRUE   __tmp__DType[this] == THECASH
[L1835]  CALL        call __var_2 := isOwner_Ownable__fail(this, msgsender_MSG, msgvalue_MSG);
[L1808]              __ret_0_ := msgsender_MSG == __tmp___owner_Ownable[this];
[L1835]  RET         call __var_2 := isOwner_Ownable__fail(this, msgsender_MSG, msgvalue_MSG);
[L1836]  COND FALSE  !(revert)
[L1857]  COND FALSE  !(__tmp__DType[this] == THECASH)
[L1862]  COND TRUE   __tmp__DType[this] == ERC20Mintable
[L1863]  CALL        call __var_3 := isAllowed_Ownable__fail(this, msgsender_MSG, msgvalue_MSG);
[L1820]              __ret_0_ := __tmp___allowed_Ownable[this][msgsender_MSG];
[L1863]  RET         call __var_3 := isAllowed_Ownable__fail(this, msgsender_MSG, msgvalue_MSG);
[L1864]  COND FALSE  !(revert)
[L1880]  COND FALSE  !(__var_2 || __var_3)
[L1884]              __ret_0_ := __tmp__stopped_Ownable[this];
[L3642]  RET         call __var_1 := isStopped_Ownable__fail(this, msgsender_MSG, msgvalue_MSG);
[L3643]  COND FALSE  !(revert)
[L3664]  COND TRUE   !!__var_1
[L3665]              revert := true;
[L2279]  RET         call onlyWhenNotStopped_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L2280]  COND TRUE   revert
[L875]   RET         call __ret_0_ := transferFrom~address~address~uint256_BaseToken__fail(this, msgsender_MSG, msgvalue_MSG, _from_s774, _to_s774, _value_s774);
[L876]               assume revert || gas < 0;
[L4662]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_BaseToken(this, msgsender_MSG, msgvalue_MSG, _from_s774, _to_s774, _value_s774);
[L4684]  RET         call CorralChoice_THECASH(this);

Loop:
[L4684]        assume true;

[2020-11-24 17:35:17,702 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 17:35:17,702 INFO  L82        PathProgramCache]: Analyzing trace with hash -212619514, now seen corresponding path program 1 times
[2020-11-24 17:35:17,703 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 17:35:17,709 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 17:35:17,728 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 17:35:17,728 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 17:35:17,728 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-24 17:35:17,728 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 17:35:17,729 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-24 17:35:17,729 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-24 17:35:17,729 INFO  L87              Difference]: Start difference. First operand 736 states and 851 transitions. cyclomatic complexity: 118 Second operand 3 states.
[2020-11-24 17:35:17,742 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 17:35:17,742 INFO  L93              Difference]: Finished difference Result 744 states and 866 transitions.
[2020-11-24 17:35:17,742 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-24 17:35:17,742 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 744 states and 866 transitions.
[2020-11-24 17:35:17,745 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 17:35:17,748 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 744 states to 744 states and 866 transitions.
[2020-11-24 17:35:17,748 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 220
[2020-11-24 17:35:17,748 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 220
[2020-11-24 17:35:17,748 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 744 states and 866 transitions.
[2020-11-24 17:35:17,749 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 17:35:17,749 INFO  L728         BuchiCegarLoop]: Abstraction has 744 states and 866 transitions.
[2020-11-24 17:35:17,750 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 744 states and 866 transitions.
[2020-11-24 17:35:17,755 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 744 to 737.
[2020-11-24 17:35:17,756 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 737 states.
[2020-11-24 17:35:17,757 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 737 states to 737 states and 852 transitions.
[2020-11-24 17:35:17,757 INFO  L751         BuchiCegarLoop]: Abstraction has 737 states and 852 transitions.
[2020-11-24 17:35:17,757 INFO  L631         BuchiCegarLoop]: Abstraction has 737 states and 852 transitions.
[2020-11-24 17:35:17,757 INFO  L445         BuchiCegarLoop]: ======== Iteration 6============
[2020-11-24 17:35:17,757 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 737 states and 852 transitions.
[2020-11-24 17:35:17,759 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 17:35:17,759 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 17:35:17,759 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 17:35:17,760 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 17:35:17,760 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L3]                 success_transferFrom_BaseToken0 := false;
[L3]                 call_transferFrom_BaseToken0 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L4679]              assume null == 0;
[L4680]  CALL        call this := FreshRefGenerator__success();
[L1730]              havoc newRef;
[L1731]              assume Alloc[newRef] == false;
[L1732]              Alloc[newRef] := true;
[L1733]              assume newRef != null;
[L4680]  RET         call this := FreshRefGenerator__success();
[L4681]              assume now >= 0;
[L4682]              assume DType[this] == THECASH;
[L4683]              assume !revert && gas >= 0;
[L4684]  CALL        call CorralChoice_THECASH(this);
[L4527]              havoc msgsender_MSG;
[L4528]              havoc msgvalue_MSG;
[L4529]              havoc choice;
[L4530]              havoc __ret_0__owner;
[L4531]              havoc __ret_0__admin;
[L4532]              havoc __ret_0_owner;
[L4533]              havoc __ret_0_isOwner;
[L4534]              havoc __ret_0_isAllowed;
[L4535]              havoc _target_s260;
[L4536]              havoc __ret_0_allow;
[L4537]              havoc _target_s282;
[L4538]              havoc __ret_0_removeAllowed;
[L4539]              havoc __ret_0_isStopped;
[L4540]              havoc _proposedOwner_s337;
[L4541]              havoc __ret_0_decimals;
[L4542]              havoc __ret_0_totalSupply;
[L4543]              havoc arg1390_s0;
[L4544]              havoc __ret_0_balances;
[L4545]              havoc arg1391_s0;
[L4546]              havoc arg1392_s0;
[L4547]              havoc __ret_0_approvals;
[L4548]              havoc arg1393_s0;
[L4549]              havoc arg1394_s0;
[L4550]              havoc __ret_0_lockup;
[L4551]              havoc arg1395_s0;
[L4552]              havoc __ret_0_lockedAddresses;
[L4553]              havoc _who_s555;
[L4554]              havoc __ret_0_balanceOf;
[L4555]              havoc _who_s628;
[L4556]              havoc __ret_0_lockedBalanceOf;
[L4557]              havoc _owner_s644;
[L4558]              havoc _spender_s644;
[L4559]              havoc __ret_0_allowance;
[L4560]              havoc _who_s687;
[L4561]              havoc _value_s687;
[L4562]              havoc __ret_0_isLocked;
[L4563]              havoc _to_s719;
[L4564]              havoc _value_s719;
[L4565]              havoc __ret_0_transfer;
[L4566]              havoc _from_s774;
[L4567]              havoc _to_s774;
[L4568]              havoc _value_s774;
[L4569]              havoc __ret_0_transferFrom;
[L4570]              havoc _to_s815;
[L4571]              havoc _value_s815;
[L4572]              havoc _time_s815;
[L4573]              havoc __ret_0_transferWithLock;
[L4574]              havoc _addr_s831;
[L4575]              havoc _locked_s831;
[L4576]              havoc _spender_s885;
[L4577]              havoc _value_s885;
[L4578]              havoc __ret_0_approve;
[L4579]              havoc _who_s937;
[L4580]              havoc _index_s937;
[L4581]              havoc __ret_0_unlock;
[L4582]              havoc _who_s967;
[L4583]              havoc __ret_0_unlockAll;
[L4584]              havoc _value_s1014;
[L4585]              havoc account_s1276;
[L4586]              havoc __ret_0_isMinter;
[L4587]              havoc account_s1288;
[L4588]              havoc to_s1353;
[L4589]              havoc value_s1353;
[L4590]              havoc __ret_0_mint;
[L4591]              havoc __ret_0_name;
[L4592]              havoc __ret_0_symbol;
[L4593]              havoc __ret_0_version;
[L4594]              havoc tmpNow;
[L4595]              havoc gas;
[L4596]              assume gas > 4000000 && gas <= 8000000;
[L4597]              tmpNow := now;
[L4598]              havoc now;
[L4599]              assume now > tmpNow;
[L4600]              assume msgsender_MSG != null;
[L4601]  COND FALSE  !(choice == 11)
[L4607]  COND FALSE  !(choice == 10)
[L4613]  COND FALSE  !(choice == 9)
[L4619]  COND FALSE  !(choice == 8)
[L4625]  COND FALSE  !(choice == 7)
[L4631]  COND FALSE  !(choice == 6)
[L4637]  COND FALSE  !(choice == 5)
[L4643]  COND FALSE  !(choice == 4)
[L4650]  COND FALSE  !(choice == 3)
[L4657]  COND TRUE   choice == 2
[L4658]              gas := gas - 21000;
[L4659]  COND TRUE   gas >= 0
[L4660]              assume _value_s774 >= 0 && _value_s774 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4661]              assume msgvalue_MSG == 0;
[L4662]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_BaseToken(this, msgsender_MSG, msgvalue_MSG, _from_s774, _to_s774, _value_s774);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != _from_s774 || p2 != msgsender_MSG) && _from_s774 == _to_s774) && _value_s774 <= balances_BaseToken[this][_from_s774]) && _value_s774 <= approvals_BaseToken[this][_from_s774][msgsender_MSG]) && _value_s774 >= 0) && _value_s774 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BaseToken[this][_to_s774] >= 0) && balances_BaseToken[this][_to_s774] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BaseToken[this][_from_s774] >= 0) && balances_BaseToken[this][_from_s774] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && approvals_BaseToken[this][_from_s774][msgsender_MSG] >= 0) && approvals_BaseToken[this][_from_s774][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_BaseToken0 := true;
[L3]                 call_transferFrom_BaseToken0 := false;
[L3]                 revert := revert_hold;
[L836]               havoc __exception;
[L837]               revert := false;
[L838]   COND TRUE   __exception
[L839]               __tmp__Balance := Balance;
[L840]               __tmp__DType := DType;
[L841]               __tmp__Alloc := Alloc;
[L842]               __tmp__balance_ADDR := balance_ADDR;
[L843]               __tmp__M_Ref_bool := M_Ref_bool;
[L844]               __tmp__sum__allowed0 := sum__allowed0;
[L845]               __tmp__M_Ref_int := M_Ref_int;
[L846]               __tmp__sum_balances1 := sum_balances1;
[L847]               __tmp__alloc_approvals_BaseToken_lvl0 := alloc_approvals_BaseToken_lvl0;
[L848]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L849]               __tmp__sum_approvals2 := sum_approvals2;
[L850]               __tmp__M_int_Ref := M_int_Ref;
[L851]               __tmp__alloc_lockup_BaseToken_lvl0 := alloc_lockup_BaseToken_lvl0;
[L852]               __tmp__sum := sum;
[L853]               __tmp__sum_lockedAddresses3 := sum_lockedAddresses3;
[L854]               __tmp__Length := Length;
[L855]               __tmp__now := now;
[L856]               __tmp__stopped_Ownable := stopped_Ownable;
[L857]               __tmp___owner_Ownable := _owner_Ownable;
[L858]               __tmp___admin_Ownable := _admin_Ownable;
[L859]               __tmp__proposedOwner_Ownable := proposedOwner_Ownable;
[L860]               __tmp___allowed_Ownable := _allowed_Ownable;
[L861]               __tmp__E18_BaseToken := E18_BaseToken;
[L862]               __tmp__decimals_BaseToken := decimals_BaseToken;
[L863]               __tmp__totalSupply_BaseToken := totalSupply_BaseToken;
[L864]               __tmp__amount_BaseToken.Lock := amount_BaseToken.Lock;
[L865]               __tmp__expiresAt_BaseToken.Lock := expiresAt_BaseToken.Lock;
[L866]               __tmp__balances_BaseToken := balances_BaseToken;
[L867]               __tmp__approvals_BaseToken := approvals_BaseToken;
[L868]               __tmp__lockup_BaseToken := lockup_BaseToken;
[L869]               __tmp__lockedAddresses_BaseToken := lockedAddresses_BaseToken;
[L870]               __tmp__bearer_Roles.Role := bearer_Roles.Role;
[L871]               __tmp___minters_MinterRole := _minters_MinterRole;
[L872]               __tmp__name_THECASH := name_THECASH;
[L873]               __tmp__symbol_THECASH := symbol_THECASH;
[L874]               __tmp__version_THECASH := version_THECASH;
[L875]   CALL        call __ret_0_ := transferFrom~address~address~uint256_BaseToken__fail(this, msgsender_MSG, msgvalue_MSG, _from_s774, _to_s774, _value_s774);
[L2279]  CALL        call onlyWhenNotStopped_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L3641]  COND TRUE   __tmp__DType[this] == THECASH
[L3642]  CALL        call __var_1 := isStopped_Ownable__fail(this, msgsender_MSG, msgvalue_MSG);
[L1834]  COND TRUE   __tmp__DType[this] == THECASH
[L1835]  CALL        call __var_2 := isOwner_Ownable__fail(this, msgsender_MSG, msgvalue_MSG);
[L1808]              __ret_0_ := msgsender_MSG == __tmp___owner_Ownable[this];
[L1835]  RET         call __var_2 := isOwner_Ownable__fail(this, msgsender_MSG, msgvalue_MSG);
[L1836]  COND FALSE  !(revert)
[L1857]  COND TRUE   __tmp__DType[this] == THECASH
[L1858]  CALL        call __var_3 := isAllowed_Ownable__fail(this, msgsender_MSG, msgvalue_MSG);
[L1820]              __ret_0_ := __tmp___allowed_Ownable[this][msgsender_MSG];
[L1858]  RET         call __var_3 := isAllowed_Ownable__fail(this, msgsender_MSG, msgvalue_MSG);
[L1859]  COND FALSE  !(revert)
[L1880]  COND FALSE  !(__var_2 || __var_3)
[L1884]              __ret_0_ := __tmp__stopped_Ownable[this];
[L3642]  RET         call __var_1 := isStopped_Ownable__fail(this, msgsender_MSG, msgvalue_MSG);
[L3643]  COND FALSE  !(revert)
[L3664]  COND TRUE   !!__var_1
[L3665]              revert := true;
[L2279]  RET         call onlyWhenNotStopped_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L2280]  COND TRUE   revert
[L875]   RET         call __ret_0_ := transferFrom~address~address~uint256_BaseToken__fail(this, msgsender_MSG, msgvalue_MSG, _from_s774, _to_s774, _value_s774);
[L876]               assume revert || gas < 0;
[L4662]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_BaseToken(this, msgsender_MSG, msgvalue_MSG, _from_s774, _to_s774, _value_s774);
[L4684]  RET         call CorralChoice_THECASH(this);

Loop:
[L4684]        assume true;

[2020-11-24 17:35:17,762 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 17:35:17,762 INFO  L82        PathProgramCache]: Analyzing trace with hash -457055374, now seen corresponding path program 1 times
[2020-11-24 17:35:17,763 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 17:35:17,771 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 17:35:17,781 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 17:35:17,831 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 17:35:17,831 INFO  L82        PathProgramCache]: Analyzing trace with hash 15009, now seen corresponding path program 1 times
[2020-11-24 17:35:17,832 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 17:35:17,832 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 17:35:17,832 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 17:35:17,833 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 17:35:17,833 INFO  L82        PathProgramCache]: Analyzing trace with hash -1283799728, now seen corresponding path program 1 times
[2020-11-24 17:35:17,834 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 17:35:17,843 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 17:35:17,852 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #4: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #2: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #3: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #4: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #5: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
[2020-11-24 17:35:18,272 WARN  L188               SmtUtils]: Spent 230.00 ms on a formula simplification. DAG size of input: 223 DAG size of output: 214
Garbage collection #1: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #2: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #3: 317 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 317 to 631
Garbage collection #4: 631 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 631 to 1259
Garbage collection #5: 1259 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 1259 to 2503
Garbage collection #6: 2503 nodes / 0 free / 0.001s / 0.003s total
Resizing node table from 2503 to 5003
Garbage collection #1: 67 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 67 to 131
Garbage collection #2: 131 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 131 to 257
Garbage collection #3: 257 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 257 to 509
Garbage collection #4: 509 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 509 to 1013
Garbage collection #5: 1013 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1013 to 2017
Garbage collection #6: 2017 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 2017 to 4027
Garbage collection #7: 4027 nodes / 0 free / 0.002s / 0.003s total
Resizing node table from 4027 to 8053
Garbage collection #8: 8053 nodes / 0 free / 0.002s / 0.005s total
Resizing node table from 8053 to 16103
[2020-11-24 17:35:18,532 WARN  L188               SmtUtils]: Spent 229.00 ms on a formula simplification. DAG size of input: 164 DAG size of output: 158
[2020-11-24 17:35:18,858 WARN  L188               SmtUtils]: Spent 323.00 ms on a formula simplification that was a NOOP. DAG size: 401
Garbage collection #1: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #2: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #3: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #4: 1237 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1237 to 2473
Garbage collection #5: 2473 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2473 to 4943
Garbage collection #6: 4943 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 4943 to 9883
Garbage collection #7: 9883 nodes / 0 free / 0.002s / 0.003s total
Resizing node table from 9883 to 19763
[2020-11-24 17:35:19,920 WARN  L188               SmtUtils]: Spent 1.03 s on a formula simplification. DAG size of input: 323 DAG size of output: 323
[2020-11-24 17:35:21,232 WARN  L188               SmtUtils]: Spent 1.31 s on a formula simplification. DAG size of input: 374 DAG size of output: 344
Garbage collection #1: 127 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 127 to 251
Garbage collection #2: 251 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 251 to 499
Garbage collection #3: 499 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 499 to 997
Garbage collection #4: 997 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 997 to 1993
Garbage collection #5: 1993 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1993 to 3967
Garbage collection #6: 3967 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3967 to 7933
Garbage collection #7: 7933 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 7933 to 15859
Garbage collection #8: 15859 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 15859 to 31699
Garbage collection #1: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #2: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #3: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #4: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #5: 1237 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1237 to 2473
Garbage collection #6: 2473 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2473 to 4943
Garbage collection #7: 4943 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4943 to 9883
Garbage collection #8: 9883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 9883 to 19763
[2020-11-24 17:35:21,850 WARN  L188               SmtUtils]: Spent 574.00 ms on a formula simplification. DAG size of input: 213 DAG size of output: 194
[2020-11-24 17:35:22,107 WARN  L188               SmtUtils]: Spent 255.00 ms on a formula simplification that was a NOOP. DAG size: 428
Garbage collection #1: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #2: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #3: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #4: 1327 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1327 to 2647
Garbage collection #5: 2647 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2647 to 5281
Garbage collection #6: 5281 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 5281 to 10559
Garbage collection #7: 10559 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 10559 to 21107
Garbage collection #8: 21107 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 21107 to 42209
[2020-11-24 17:35:22,792 WARN  L188               SmtUtils]: Spent 666.00 ms on a formula simplification. DAG size of input: 334 DAG size of output: 331
[2020-11-24 17:35:23,257 WARN  L188               SmtUtils]: Spent 462.00 ms on a formula simplification. DAG size of input: 350 DAG size of output: 345
Garbage collection #1: 131 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 131 to 257
Garbage collection #2: 257 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 257 to 509
Garbage collection #3: 509 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 509 to 1013
Garbage collection #4: 1013 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1013 to 2017
Garbage collection #5: 2017 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2017 to 4027
Garbage collection #6: 4027 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4027 to 8053
Garbage collection #7: 8053 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 8053 to 16103
Garbage collection #1: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #2: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #3: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #4: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #5: 1237 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1237 to 2473
Garbage collection #6: 2473 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2473 to 4943
[2020-11-24 17:35:23,444 WARN  L188               SmtUtils]: Spent 175.00 ms on a formula simplification. DAG size of input: 200 DAG size of output: 193
[2020-11-24 17:35:23,652 WARN  L188               SmtUtils]: Spent 180.00 ms on a formula simplification that was a NOOP. DAG size: 334
Garbage collection #1: 127 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 127 to 251
Garbage collection #2: 251 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 251 to 499
Garbage collection #3: 499 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 499 to 997
Garbage collection #4: 997 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 997 to 1993
Garbage collection #5: 1993 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1993 to 3967
Garbage collection #6: 3967 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3967 to 7933
Garbage collection #1: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #2: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #3: 317 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 317 to 631
Garbage collection #4: 631 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 631 to 1259
Garbage collection #5: 1259 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1259 to 2503
Garbage collection #6: 2503 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2503 to 5003
Garbage collection #7: 5003 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 5003 to 9973
Garbage collection #8: 9973 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 9973 to 19937
[2020-11-24 17:35:24,623 WARN  L188               SmtUtils]: Spent 943.00 ms on a formula simplification. DAG size of input: 263 DAG size of output: 204
[2020-11-24 17:35:25,111 WARN  L188               SmtUtils]: Spent 486.00 ms on a formula simplification. DAG size of input: 347 DAG size of output: 346
Garbage collection #1: 131 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 131 to 257
Garbage collection #2: 257 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 257 to 509
Garbage collection #3: 509 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 509 to 1013
Garbage collection #4: 1013 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1013 to 2017
Garbage collection #5: 2017 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2017 to 4027
Garbage collection #6: 4027 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4027 to 8053
Garbage collection #7: 8053 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 8053 to 16103
Garbage collection #1: 137 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 137 to 271
Garbage collection #2: 271 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 271 to 541
Garbage collection #3: 541 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 541 to 1069
Garbage collection #4: 1069 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1069 to 2137
Garbage collection #5: 2137 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2137 to 4273
Garbage collection #6: 4273 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4273 to 8543
Garbage collection #7: 8543 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 8543 to 17077
Garbage collection #8: 17077 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17077 to 34147
Garbage collection #9: 34147 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 34147 to 68281
Garbage collection #10: 68281 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 68281 to 118277
[2020-11-24 17:35:25,921 WARN  L188               SmtUtils]: Spent 773.00 ms on a formula simplification. DAG size of input: 379 DAG size of output: 341
[2020-11-24 17:35:25,932 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 17:35:25,937 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 24.11 05:35:25 BasicIcfg
[2020-11-24 17:35:25,937 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-24 17:35:25,938 INFO  L168              Benchmark]: Toolchain (without parser) took 12198.27 ms. Allocated memory was 1.0 GB in the beginning and 2.2 GB in the end (delta: 1.1 GB). Free memory was 935.2 MB in the beginning and 1.4 GB in the end (delta: -426.4 MB). Peak memory consumption was 1.0 GB. Max. memory is 15.3 GB.
[2020-11-24 17:35:25,938 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.19 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-24 17:35:25,939 INFO  L168              Benchmark]: Boogie Preprocessor took 107.27 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 924.5 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
[2020-11-24 17:35:25,939 INFO  L168              Benchmark]: UtopiaSpecLang took 67.58 ms. Allocated memory is still 1.0 GB. Free memory was 924.5 MB in the beginning and 919.1 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-24 17:35:25,939 INFO  L168              Benchmark]: Boogie Printer took 17.13 ms. Allocated memory is still 1.0 GB. Free memory was 919.1 MB in the beginning and 913.7 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-24 17:35:25,939 INFO  L168              Benchmark]: RCFGBuilder took 870.25 ms. Allocated memory is still 1.0 GB. Free memory was 913.7 MB in the beginning and 779.5 MB in the end (delta: 134.2 MB). Peak memory consumption was 134.2 MB. Max. memory is 15.3 GB.
[2020-11-24 17:35:25,940 INFO  L168              Benchmark]: UtopiaLTL2Aut took 40.46 ms. Allocated memory is still 1.0 GB. Free memory was 779.5 MB in the beginning and 770.6 MB in the end (delta: 8.9 MB). Peak memory consumption was 8.9 MB. Max. memory is 15.3 GB.
[2020-11-24 17:35:25,940 INFO  L168              Benchmark]: BÃ¼chi Program Product took 1382.95 ms. Allocated memory was 1.0 GB in the beginning and 1.2 GB in the end (delta: 173.5 MB). Free memory was 770.6 MB in the beginning and 844.1 MB in the end (delta: -73.6 MB). Peak memory consumption was 140.1 MB. Max. memory is 15.3 GB.
[2020-11-24 17:35:25,940 INFO  L168              Benchmark]: BlockEncodingV2 took 155.04 ms. Allocated memory is still 1.2 GB. Free memory was 844.1 MB in the beginning and 764.7 MB in the end (delta: 79.4 MB). Peak memory consumption was 79.4 MB. Max. memory is 15.3 GB.
[2020-11-24 17:35:25,940 INFO  L168              Benchmark]: BuchiAutomizer took 9554.41 ms. Allocated memory was 1.2 GB in the beginning and 2.2 GB in the end (delta: 950.5 MB). Free memory was 764.7 MB in the beginning and 1.4 GB in the end (delta: -596.9 MB). Peak memory consumption was 696.4 MB. Max. memory is 15.3 GB.
[2020-11-24 17:35:25,943 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    4068 locations, 7513 edges
  - StatisticsResult: Encoded RCFG
    4000 locations, 7335 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.19 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 107.27 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 924.5 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 67.58 ms. Allocated memory is still 1.0 GB. Free memory was 924.5 MB in the beginning and 919.1 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 17.13 ms. Allocated memory is still 1.0 GB. Free memory was 919.1 MB in the beginning and 913.7 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * RCFGBuilder took 870.25 ms. Allocated memory is still 1.0 GB. Free memory was 913.7 MB in the beginning and 779.5 MB in the end (delta: 134.2 MB). Peak memory consumption was 134.2 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 40.46 ms. Allocated memory is still 1.0 GB. Free memory was 779.5 MB in the beginning and 770.6 MB in the end (delta: 8.9 MB). Peak memory consumption was 8.9 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 1382.95 ms. Allocated memory was 1.0 GB in the beginning and 1.2 GB in the end (delta: 173.5 MB). Free memory was 770.6 MB in the beginning and 844.1 MB in the end (delta: -73.6 MB). Peak memory consumption was 140.1 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 155.04 ms. Allocated memory is still 1.2 GB. Free memory was 844.1 MB in the beginning and 764.7 MB in the end (delta: 79.4 MB). Peak memory consumption was 79.4 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 9554.41 ms. Allocated memory was 1.2 GB in the beginning and 2.2 GB in the end (delta: 950.5 MB). Free memory was 764.7 MB in the beginning and 1.4 GB in the end (delta: -596.9 MB). Peak memory consumption was 696.4 MB. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    1661 locations, 2317 edges
  - StatisticsResult: BuchiProgram size
    4068 locations, 7513 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 5 terminating modules (5 trivial, 0 deterministic, 0 nondeterministic) and one nonterminating remainder module.5 modules have a trivial ranking function, the largest among these consists of 6 locations. The remainder module has 737 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 9.5s and 6 iterations.  TraceHistogramMax:1. Analysis of lassos took 8.6s. Construction of modules took 0.2s. BÃ¼chi inclusion checks took 0.2s. Highest rank in rank-based complementation 0. Minimization of det autom 5. Minimization of nondet autom 0. Automata minimization 0.0s AutomataMinimizationTime, 5 MinimizatonAttempts, 36 StatesRemovedByMinimization, 3 NontrivialMinimizations. Non-live state removal took 0.0s Buchi closure took 0.0s. Biggest automaton had 737 states and ocurred in iteration 5.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 5559 SDtfs, 3923 SDslu, 4609 SDs, 0 SdLazy, 2723 SolverSat, 1598 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 0.2s Time	LassoAnalysisResults: nont1 unkn0 SFLI0 SFLT0 conc0 concLT0 SILN0 SILU5 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - TransactionCounterexample: Violation of LTL property LTL
    Found an infinite, lasso-shaped execution that violates the LTL property LTL.
Stem:
BaseToken(17).transferFrom~address~address~uint256.gas(3979001)({from : 3, _from : 16, _to : 16, _value : 0});
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != _from_s774 || p2 != msgsender_MSG) && _from_s774 == _to_s774) && _value_s774 <= balances_BaseToken[this][_from_s774]) && _value_s774 <= approvals_BaseToken[this][_from_s774][msgsender_MSG]) && _value_s774 >= 0) && _value_s774 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BaseToken[this][_to_s774] >= 0) && balances_BaseToken[this][_to_s774] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BaseToken[this][_from_s774] >= 0) && balances_BaseToken[this][_from_s774] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && approvals_BaseToken[this][_from_s774][msgsender_MSG] >= 0) && approvals_BaseToken[this][_from_s774][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_BaseToken0 := true;
[L3]                 call_transferFrom_BaseToken0 := false;
[L3]                 revert := revert_hold;
[L836]               havoc __exception;
[L837]               revert := false;
[L838]   COND TRUE   __exception
[L839]               __tmp__Balance := Balance;
[L840]               __tmp__DType := DType;
[L841]               __tmp__Alloc := Alloc;
[L842]               __tmp__balance_ADDR := balance_ADDR;
[L843]               __tmp__M_Ref_bool := M_Ref_bool;
[L844]               __tmp__sum__allowed0 := sum__allowed0;
[L845]               __tmp__M_Ref_int := M_Ref_int;
[L846]               __tmp__sum_balances1 := sum_balances1;
[L847]               __tmp__alloc_approvals_BaseToken_lvl0 := alloc_approvals_BaseToken_lvl0;
[L848]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L849]               __tmp__sum_approvals2 := sum_approvals2;
[L850]               __tmp__M_int_Ref := M_int_Ref;
[L851]               __tmp__alloc_lockup_BaseToken_lvl0 := alloc_lockup_BaseToken_lvl0;
[L852]               __tmp__sum := sum;
[L853]               __tmp__sum_lockedAddresses3 := sum_lockedAddresses3;
[L854]               __tmp__Length := Length;
[L855]               __tmp__now := now;
[L856]               __tmp__stopped_Ownable := stopped_Ownable;
[L857]               __tmp___owner_Ownable := _owner_Ownable;
[L858]               __tmp___admin_Ownable := _admin_Ownable;
[L859]               __tmp__proposedOwner_Ownable := proposedOwner_Ownable;
[L860]               __tmp___allowed_Ownable := _allowed_Ownable;
[L861]               __tmp__E18_BaseToken := E18_BaseToken;
[L862]               __tmp__decimals_BaseToken := decimals_BaseToken;
[L863]               __tmp__totalSupply_BaseToken := totalSupply_BaseToken;
[L864]               __tmp__amount_BaseToken.Lock := amount_BaseToken.Lock;
[L865]               __tmp__expiresAt_BaseToken.Lock := expiresAt_BaseToken.Lock;
[L866]               __tmp__balances_BaseToken := balances_BaseToken;
[L867]               __tmp__approvals_BaseToken := approvals_BaseToken;
[L868]               __tmp__lockup_BaseToken := lockup_BaseToken;
[L869]               __tmp__lockedAddresses_BaseToken := lockedAddresses_BaseToken;
[L870]               __tmp__bearer_Roles.Role := bearer_Roles.Role;
[L871]               __tmp___minters_MinterRole := _minters_MinterRole;
[L872]               __tmp__name_THECASH := name_THECASH;
[L873]               __tmp__symbol_THECASH := symbol_THECASH;
[L874]               __tmp__version_THECASH := version_THECASH;
[L875]   CALL        call __ret_0_ := transferFrom~address~address~uint256_BaseToken__fail(this, msgsender_MSG, msgvalue_MSG, _from_s774, _to_s774, _value_s774);
[L2279]  CALL        call onlyWhenNotStopped_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L3641]  COND TRUE   __tmp__DType[this] == THECASH
[L3642]  CALL        call __var_1 := isStopped_Ownable__fail(this, msgsender_MSG, msgvalue_MSG);
[L1834]  COND TRUE   __tmp__DType[this] == THECASH
[L1835]  CALL        call __var_2 := isOwner_Ownable__fail(this, msgsender_MSG, msgvalue_MSG);
[L1808]              __ret_0_ := msgsender_MSG == __tmp___owner_Ownable[this];
[L1835]  RET         call __var_2 := isOwner_Ownable__fail(this, msgsender_MSG, msgvalue_MSG);
[L1836]  COND FALSE  !(revert)
[L1857]  COND TRUE   __tmp__DType[this] == THECASH
[L1858]  CALL        call __var_3 := isAllowed_Ownable__fail(this, msgsender_MSG, msgvalue_MSG);
[L1820]              __ret_0_ := __tmp___allowed_Ownable[this][msgsender_MSG];
[L1858]  RET         call __var_3 := isAllowed_Ownable__fail(this, msgsender_MSG, msgvalue_MSG);
[L1859]  COND FALSE  !(revert)
[L1880]  COND FALSE  !(__var_2 || __var_3)
[L1884]              __ret_0_ := __tmp__stopped_Ownable[this];
[L3642]  RET         call __var_1 := isStopped_Ownable__fail(this, msgsender_MSG, msgvalue_MSG);
[L3643]  COND FALSE  !(revert)
[L3664]  COND TRUE   !!__var_1
[L3665]              revert := true;
[L2279]  RET         call onlyWhenNotStopped_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L2280]  COND TRUE   revert
[L875]   RET         call __ret_0_ := transferFrom~address~address~uint256_BaseToken__fail(this, msgsender_MSG, msgvalue_MSG, _from_s774, _to_s774, _value_s774);
[L876]               assume revert || gas < 0;
[L4662]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_BaseToken(this, msgsender_MSG, msgvalue_MSG, _from_s774, _to_s774, _value_s774);

Loop:

End of lasso representation.
RESULT: Ultimate could not prove your program: Toolchain returned no result.
Received shutdown request...
