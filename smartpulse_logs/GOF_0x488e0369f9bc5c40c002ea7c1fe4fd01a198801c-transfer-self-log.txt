This is Ultimate 0.1.24-f1553f5-m
[2020-11-24 19:13:01,227 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-24 19:13:01,228 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-24 19:13:01,238 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-24 19:13:01,238 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-24 19:13:01,239 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-24 19:13:01,239 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-24 19:13:01,241 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-24 19:13:01,242 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-24 19:13:01,243 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-24 19:13:01,243 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-24 19:13:01,244 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-24 19:13:01,244 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-24 19:13:01,245 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-24 19:13:01,246 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-24 19:13:01,246 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-24 19:13:01,247 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-24 19:13:01,248 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-24 19:13:01,249 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-24 19:13:01,251 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-24 19:13:01,251 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-24 19:13:01,252 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-24 19:13:01,254 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-24 19:13:01,254 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-24 19:13:01,254 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-24 19:13:01,254 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-24 19:13:01,255 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-24 19:13:01,255 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-24 19:13:01,255 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-24 19:13:01,256 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-24 19:13:01,256 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-24 19:13:01,256 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-24 19:13:01,257 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-24 19:13:01,257 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-24 19:13:01,258 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-24 19:13:01,258 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-24 19:13:01,259 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-24 19:13:01,259 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-24 19:13:01,259 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-24 19:13:01,260 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-24 19:13:01,260 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-24 19:13:01,260 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-24 19:13:01,267 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-24 19:13:01,268 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-24 19:13:01,268 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-24 19:13:01,268 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-24 19:13:01,269 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-24 19:13:01,269 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-24 19:13:01,269 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-24 19:13:01,269 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-24 19:13:01,269 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-24 19:13:01,269 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-24 19:13:01,269 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-24 19:13:01,269 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-24 19:13:01,270 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-24 19:13:01,270 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-24 19:13:01,270 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-24 19:13:01,270 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-24 19:13:01,270 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-24 19:13:01,270 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-24 19:13:01,270 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-24 19:13:01,270 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-24 19:13:01,270 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-24 19:13:01,271 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-24 19:13:01,271 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-24 19:13:01,271 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-24 19:13:01,271 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-24 19:13:01,271 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-24 19:13:01,292 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-24 19:13:01,308 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-24 19:13:01,313 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-24 19:13:01,315 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-24 19:13:01,316 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-24 19:13:01,317 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/GOF_0x488e0369f9bc5c40c002ea7c1fe4fd01a198801c_transfer-self.bpl
[2020-11-24 19:13:01,317 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/GOF_0x488e0369f9bc5c40c002ea7c1fe4fd01a198801c_transfer-self.bpl'
[2020-11-24 19:13:01,388 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-24 19:13:01,390 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-24 19:13:01,390 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-24 19:13:01,390 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-24 19:13:01,390 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-24 19:13:01,406 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "GOF_0x488e0369f9bc5c40c002ea7c1fe4fd01a198801c_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 07:13:01" (1/1) ...
[2020-11-24 19:13:01,407 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "GOF_0x488e0369f9bc5c40c002ea7c1fe4fd01a198801c_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 07:13:01" (1/1) ...
[2020-11-24 19:13:01,434 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "GOF_0x488e0369f9bc5c40c002ea7c1fe4fd01a198801c_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 07:13:01" (1/1) ...
[2020-11-24 19:13:01,435 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "GOF_0x488e0369f9bc5c40c002ea7c1fe4fd01a198801c_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 07:13:01" (1/1) ...
[2020-11-24 19:13:01,449 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "GOF_0x488e0369f9bc5c40c002ea7c1fe4fd01a198801c_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 07:13:01" (1/1) ...
[2020-11-24 19:13:01,456 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "GOF_0x488e0369f9bc5c40c002ea7c1fe4fd01a198801c_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 07:13:01" (1/1) ...
[2020-11-24 19:13:01,460 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "GOF_0x488e0369f9bc5c40c002ea7c1fe4fd01a198801c_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 07:13:01" (1/1) ...
[2020-11-24 19:13:01,466 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-24 19:13:01,467 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-24 19:13:01,467 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-24 19:13:01,469 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-24 19:13:01,472 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "GOF_0x488e0369f9bc5c40c002ea7c1fe4fd01a198801c_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 07:13:01" (1/1) ...
[2020-11-24 19:13:01,486 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(ERC20.transfer(to, value), msg.sender == to && value <= _balances_ERC20[this][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][to] >= 0 && _balances_ERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][msg.sender] >= 0 &&  _balances_ERC20[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(ERC20.transfer(to, value), return == true && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this]) && _balances_ERC20[this] == old(_balances_ERC20[this]) && _allowances_ERC20[this] == old(_allowances_ERC20[this]) && governance_GOF[this] == old(governance_GOF[this]) && pendingGov_GOF[this] == old(pendingGov_GOF[this]) && minters_GOF[this] == old(minters_GOF[this]) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this]) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this]) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]) && _cap_ERC20Detailed[this] == old(_cap_ERC20Detailed[this]))))
[2020-11-24 19:13:01,492 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(ERC20.transfer(to, value), msg.sender == to && value <= _balances_ERC20[this][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][to] >= 0 && _balances_ERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][msg.sender] >= 0 &&  _balances_ERC20[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(ERC20.transfer(to, value), return == true && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this]) && _balances_ERC20[this] == old(_balances_ERC20[this]) && _allowances_ERC20[this] == old(_allowances_ERC20[this]) && governance_GOF[this] == old(governance_GOF[this]) && pendingGov_GOF[this] == old(pendingGov_GOF[this]) && minters_GOF[this] == old(minters_GOF[this]) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this]) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this]) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]) && _cap_ERC20Detailed[this] == old(_cap_ERC20Detailed[this]))))
[2020-11-24 19:13:01,499 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(ERC20.transfer(to, value), msg.sender == to && value <= _balances_ERC20[this][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][to] >= 0 && _balances_ERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][msg.sender] >= 0 &&  _balances_ERC20[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(ERC20.transfer(to, value), return == true && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this]) && _balances_ERC20[this] == old(_balances_ERC20[this]) && _allowances_ERC20[this] == old(_allowances_ERC20[this]) && governance_GOF[this] == old(governance_GOF[this]) && pendingGov_GOF[this] == old(pendingGov_GOF[this]) && minters_GOF[this] == old(minters_GOF[this]) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this]) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this]) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]) && _cap_ERC20Detailed[this] == old(_cap_ERC20Detailed[this]))))
[2020-11-24 19:13:01,504 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( msg.sender==recipient_s140 && amount_s140<=_balances_ERC20[this][msg.sender] ) && amount_s140>=0 ) && amount_s140<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && _balances_ERC20[this][recipient_s140]>=0 ) && _balances_ERC20[this][recipient_s140]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && _balances_ERC20[this][msg.sender]>=0 ) && _balances_ERC20[this][msg.sender]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>],IdentifierExpression[recipient_s140,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]],BinaryExpression[COMPLEQ,IdentifierExpression[amount_s140,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>],ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]]]],BinaryExpression[COMPGEQ,IdentifierExpression[amount_s140,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>],IntegerLiteral[0]]],BinaryExpression[COMPLT,IdentifierExpression[amount_s140,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],[IdentifierExpression[recipient_s140,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],[IdentifierExpression[recipient_s140,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]]
[2020-11-24 19:13:01,507 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( ( ( __ret_0_==true && _totalSupply_ERC20[this]==( old(_totalSupply_ERC20[this]) ) ) && _balances_ERC20[this]==( old(_balances_ERC20[this]) ) ) && _allowances_ERC20[this]==( old(_allowances_ERC20[this]) ) ) && governance_GOF[this]==( old(governance_GOF[this]) ) ) && pendingGov_GOF[this]==( old(pendingGov_GOF[this]) ) ) && minters_GOF[this]==( old(minters_GOF[this]) ) ) && _name_ERC20Detailed[this]==( old(_name_ERC20Detailed[this]) ) ) && _symbol_ERC20Detailed[this]==( old(_symbol_ERC20Detailed[this]) ) ) && _decimals_ERC20Detailed[this]==( old(_decimals_ERC20Detailed[this]) ) ) && _cap_ERC20Detailed[this]==( old(_cap_ERC20Detailed[this]) ) ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[__ret_0_,<IMPLEMENTATION_OUTPARAM,transfer~address~uint256_ERC20>],BooleanLiteral[true]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_totalSupply_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_totalSupply_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_allowances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_allowances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[governance_GOF,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[governance_GOF,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[pendingGov_GOF,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[pendingGov_GOF,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[minters_GOF,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[minters_GOF,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_name_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_name_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_symbol_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_symbol_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_decimals_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_decimals_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_cap_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_cap_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]]]]]
[2020-11-24 19:13:01,510 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(ERC20.transfer(to, value), msg.sender == to && value <= _balances_ERC20[this][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][to] >= 0 && _balances_ERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][msg.sender] >= 0 &&  _balances_ERC20[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(ERC20.transfer(to, value), return == true && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this]) && _balances_ERC20[this] == old(_balances_ERC20[this]) && _allowances_ERC20[this] == old(_allowances_ERC20[this]) && governance_GOF[this] == old(governance_GOF[this]) && pendingGov_GOF[this] == old(pendingGov_GOF[this]) && minters_GOF[this] == old(minters_GOF[this]) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this]) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this]) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]) && _cap_ERC20Detailed[this] == old(_cap_ERC20Detailed[this]))))
[2020-11-24 19:13:01,510 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_transfer_ERC200) ==> ( <>AP(success_transfer_ERC200) ) ) )
Executed UtopiaSpecLang
[2020-11-24 19:13:01,516 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 07:13:01 PropertyContainer
[2020-11-24 19:13:01,516 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-24 19:13:01,516 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-24 19:13:01,516 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-24 19:13:01,516 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-24 19:13:01,517 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "GOF_0x488e0369f9bc5c40c002ea7c1fe4fd01a198801c_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 07:13:01" (1/2) ...
[2020-11-24 19:13:01,517 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-24 19:13:01,518 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-24 19:13:01,528 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 07:13:01" (2/2) ...
[2020-11-24 19:13:01,528 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-24 19:13:01,528 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-24 19:13:01,529 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-24 19:13:01,529 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-24 19:13:01,529 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "GOF_0x488e0369f9bc5c40c002ea7c1fe4fd01a198801c_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 07:13:01" (1/2) ...
[2020-11-24 19:13:01,581 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-24 19:13:01,581 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_IERC20
[2020-11-24 19:13:01,581 INFO  L130     BoogieDeclarations]: Found specification of procedure _msgSender_Context__success
[2020-11-24 19:13:01,581 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20
[2020-11-24 19:13:01,582 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ERC20
[2020-11-24 19:13:01,582 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20
[2020-11-24 19:13:01,582 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ERC20
[2020-11-24 19:13:01,582 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20
[2020-11-24 19:13:01,582 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20
[2020-11-24 19:13:01,582 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20
[2020-11-24 19:13:01,582 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ERC20
[2020-11-24 19:13:01,582 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20
[2020-11-24 19:13:01,582 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ERC20
[2020-11-24 19:13:01,582 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20
[2020-11-24 19:13:01,582 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20
[2020-11-24 19:13:01,582 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_ERC20__success
[2020-11-24 19:13:01,583 INFO  L130     BoogieDeclarations]: Found specification of procedure _approve~address~address~uint256_ERC20__success
[2020-11-24 19:13:01,583 INFO  L130     BoogieDeclarations]: Found specification of procedure _beforeTokenTransfer~address~address~uint256_ERC20__success
[2020-11-24 19:13:01,583 INFO  L130     BoogieDeclarations]: Found specification of procedure cap_ERC20Detailed
[2020-11-24 19:13:01,583 INFO  L138     BoogieDeclarations]: Found implementation of procedure cap_ERC20Detailed
[2020-11-24 19:13:01,583 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__success
[2020-11-24 19:13:01,583 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256~string_SafeMath__success
[2020-11-24 19:13:01,583 INFO  L130     BoogieDeclarations]: Found specification of procedure _beforeTokenTransfer~address~address~uint256_GOF__success
[2020-11-24 19:13:01,583 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-24 19:13:01,583 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-24 19:13:01,583 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-24 19:13:01,584 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyGov_pre__success
[2020-11-24 19:13:01,584 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_IERC20
[2020-11-24 19:13:01,584 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_IERC20
[2020-11-24 19:13:01,584 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_Context
[2020-11-24 19:13:01,584 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_Context
[2020-11-24 19:13:01,584 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20
[2020-11-24 19:13:01,584 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20
[2020-11-24 19:13:01,584 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20Detailed
[2020-11-24 19:13:01,584 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20Detailed
[2020-11-24 19:13:01,584 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_SafeMath
[2020-11-24 19:13:01,584 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_SafeMath
[2020-11-24 19:13:01,584 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_GOF
[2020-11-24 19:13:01,584 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-24 19:13:01,585 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-24 19:13:01,585 INFO  L130     BoogieDeclarations]: Found specification of procedure _msgSender_Context__fail
[2020-11-24 19:13:01,585 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20__success
[2020-11-24 19:13:01,585 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20__fail
[2020-11-24 19:13:01,585 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20__success
[2020-11-24 19:13:01,585 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20__fail
[2020-11-24 19:13:01,585 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20__success
[2020-11-24 19:13:01,585 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20__fail
[2020-11-24 19:13:01,585 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20__success
[2020-11-24 19:13:01,585 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20__fail
[2020-11-24 19:13:01,585 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20__success
[2020-11-24 19:13:01,585 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20__fail
[2020-11-24 19:13:01,586 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20__success
[2020-11-24 19:13:01,586 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20__fail
[2020-11-24 19:13:01,586 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_ERC20__fail
[2020-11-24 19:13:01,586 INFO  L130     BoogieDeclarations]: Found specification of procedure _approve~address~address~uint256_ERC20__fail
[2020-11-24 19:13:01,586 INFO  L130     BoogieDeclarations]: Found specification of procedure _beforeTokenTransfer~address~address~uint256_ERC20__fail
[2020-11-24 19:13:01,586 INFO  L130     BoogieDeclarations]: Found specification of procedure cap_ERC20Detailed__success
[2020-11-24 19:13:01,586 INFO  L130     BoogieDeclarations]: Found specification of procedure cap_ERC20Detailed__fail
[2020-11-24 19:13:01,586 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__fail
[2020-11-24 19:13:01,586 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256~string_SafeMath__fail
[2020-11-24 19:13:01,586 INFO  L130     BoogieDeclarations]: Found specification of procedure _beforeTokenTransfer~address~address~uint256_GOF__fail
[2020-11-24 19:13:01,586 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-24 19:13:01,586 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-24 19:13:01,586 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-24 19:13:01,587 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyGov_pre__fail
[2020-11-24 19:13:01,587 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-24 19:13:01,587 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-24 19:13:01,587 INFO  L138     BoogieDeclarations]: Found implementation of procedure _msgSender_Context__fail
[2020-11-24 19:13:01,587 INFO  L138     BoogieDeclarations]: Found implementation of procedure _msgSender_Context__success
[2020-11-24 19:13:01,587 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ERC20__fail
[2020-11-24 19:13:01,587 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ERC20__success
[2020-11-24 19:13:01,587 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ERC20__fail
[2020-11-24 19:13:01,587 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ERC20__success
[2020-11-24 19:13:01,587 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20__fail
[2020-11-24 19:13:01,587 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20__success
[2020-11-24 19:13:01,587 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ERC20__fail
[2020-11-24 19:13:01,588 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ERC20__success
[2020-11-24 19:13:01,588 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ERC20__fail
[2020-11-24 19:13:01,588 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ERC20__success
[2020-11-24 19:13:01,588 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20__fail
[2020-11-24 19:13:01,588 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20__success
[2020-11-24 19:13:01,588 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_ERC20__fail
[2020-11-24 19:13:01,588 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_ERC20__success
[2020-11-24 19:13:01,588 INFO  L138     BoogieDeclarations]: Found implementation of procedure _approve~address~address~uint256_ERC20__fail
[2020-11-24 19:13:01,588 INFO  L138     BoogieDeclarations]: Found implementation of procedure _approve~address~address~uint256_ERC20__success
[2020-11-24 19:13:01,588 INFO  L138     BoogieDeclarations]: Found implementation of procedure _beforeTokenTransfer~address~address~uint256_ERC20__fail
[2020-11-24 19:13:01,588 INFO  L138     BoogieDeclarations]: Found implementation of procedure _beforeTokenTransfer~address~address~uint256_ERC20__success
[2020-11-24 19:13:01,588 INFO  L138     BoogieDeclarations]: Found implementation of procedure cap_ERC20Detailed__fail
[2020-11-24 19:13:01,588 INFO  L138     BoogieDeclarations]: Found implementation of procedure cap_ERC20Detailed__success
[2020-11-24 19:13:01,589 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__fail
[2020-11-24 19:13:01,589 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__success
[2020-11-24 19:13:01,589 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256~string_SafeMath__fail
[2020-11-24 19:13:01,589 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256~string_SafeMath__success
[2020-11-24 19:13:01,589 INFO  L138     BoogieDeclarations]: Found implementation of procedure _beforeTokenTransfer~address~address~uint256_GOF__fail
[2020-11-24 19:13:01,589 INFO  L138     BoogieDeclarations]: Found implementation of procedure _beforeTokenTransfer~address~address~uint256_GOF__success
[2020-11-24 19:13:01,589 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-24 19:13:01,589 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-24 19:13:01,589 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-24 19:13:01,589 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-24 19:13:01,589 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-24 19:13:01,589 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-24 19:13:01,589 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyGov_pre__fail
[2020-11-24 19:13:01,590 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyGov_pre__success
[2020-11-24 19:13:01,590 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_IERC20
[2020-11-24 19:13:01,590 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_IERC20
[2020-11-24 19:13:01,590 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_Context
[2020-11-24 19:13:01,590 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_Context
[2020-11-24 19:13:01,590 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20
[2020-11-24 19:13:01,590 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20
[2020-11-24 19:13:01,590 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20Detailed
[2020-11-24 19:13:01,590 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20Detailed
[2020-11-24 19:13:01,590 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_SafeMath
[2020-11-24 19:13:01,590 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_SafeMath
[2020-11-24 19:13:01,590 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_GOF
[2020-11-24 19:13:01,591 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-24 19:13:01,591 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-24 19:13:01,591 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-24 19:13:01,790 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 19:13:01,790 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 19:13:01,791 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 19:13:02,103 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-24 19:13:02,103 INFO  L286             CfgBuilder]: Removed 6 assue(true) statements.
[2020-11-24 19:13:02,105 INFO  L202        PluginConnector]: Adding new model GOF_0x488e0369f9bc5c40c002ea7c1fe4fd01a198801c_transfer-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 07:13:02 BoogieIcfgContainer
[2020-11-24 19:13:02,105 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 07:13:01" (2/2) ...
[2020-11-24 19:13:02,105 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-24 19:13:02,105 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@7b41f0c1 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 07:13:02, skipping insertion in model container
[2020-11-24 19:13:02,106 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-24 19:13:02,106 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-24 19:13:02,106 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-24 19:13:02,107 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-24 19:13:02,108 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "GOF_0x488e0369f9bc5c40c002ea7c1fe4fd01a198801c_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 07:13:01" (1/3) ...
[2020-11-24 19:13:02,108 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@4d072208 and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 07:13:02, skipping insertion in model container
[2020-11-24 19:13:02,108 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 07:13:01" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-24 19:13:02,145 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 07:13:02 NWAContainer
[2020-11-24 19:13:02,145 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-24 19:13:02,146 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-24 19:13:02,146 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-24 19:13:02,147 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-24 19:13:02,148 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "GOF_0x488e0369f9bc5c40c002ea7c1fe4fd01a198801c_transfer-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 07:13:02" (3/4) ...
[2020-11-24 19:13:02,148 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@4a299d35 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 07:13:02, skipping insertion in model container
[2020-11-24 19:13:02,148 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 07:13:02" (4/4) ...
[2020-11-24 19:13:02,152 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-24 19:13:02,155 INFO  L110   BuchiProductObserver]: Initial RCFG 912 locations, 1251 edges
[2020-11-24 19:13:02,155 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-24 19:13:02,168 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-24 19:13:03,187 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-24 19:13:03,190 INFO  L110   BuchiProductObserver]: BuchiProgram size 2236 locations, 4055 edges
[2020-11-24 19:13:03,190 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 07:13:03 BoogieIcfgContainer
[2020-11-24 19:13:03,190 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-24 19:13:03,191 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-24 19:13:03,191 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-24 19:13:03,192 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-24 19:13:03,193 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 07:13:03" (1/1) ...
[2020-11-24 19:13:03,243 INFO  L313           BlockEncoder]: Initial Icfg 2236 locations, 4055 edges
[2020-11-24 19:13:03,243 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-24 19:13:03,244 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-24 19:13:03,244 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-24 19:13:03,245 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-24 19:13:03,252 INFO  L70    emoveInfeasibleEdges]: Removed 120 edges and 15 locations because of local infeasibility
[2020-11-24 19:13:03,257 INFO  L70        RemoveSinkStates]: Removed 74 edges and 49 locations by removing sink states
[2020-11-24 19:13:03,263 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-24 19:13:03,266 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-24 19:13:03,268 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-24 19:13:03,268 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-24 19:13:03,271 INFO  L313           BlockEncoder]: Encoded RCFG 2156 locations, 3838 edges
[2020-11-24 19:13:03,271 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 24.11 07:13:03 BasicIcfg
[2020-11-24 19:13:03,271 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-24 19:13:03,272 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-24 19:13:03,272 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-24 19:13:03,273 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-24 19:13:03,274 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 19:13:03,274 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "GOF_0x488e0369f9bc5c40c002ea7c1fe4fd01a198801c_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 07:13:01" (1/6) ...
[2020-11-24 19:13:03,275 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@3b9a2b6e and model type GOF_0x488e0369f9bc5c40c002ea7c1fe4fd01a198801c_transfer-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 24.11 07:13:03, skipping insertion in model container
[2020-11-24 19:13:03,275 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 19:13:03,276 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 07:13:01" (2/6) ...
[2020-11-24 19:13:03,276 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@3b9a2b6e and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 24.11 07:13:03, skipping insertion in model container
[2020-11-24 19:13:03,276 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 19:13:03,276 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "GOF_0x488e0369f9bc5c40c002ea7c1fe4fd01a198801c_transfer-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 07:13:02" (3/6) ...
[2020-11-24 19:13:03,276 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@3b9a2b6e and model type GOF_0x488e0369f9bc5c40c002ea7c1fe4fd01a198801c_transfer-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 24.11 07:13:03, skipping insertion in model container
[2020-11-24 19:13:03,276 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 19:13:03,276 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 07:13:02" (4/6) ...
[2020-11-24 19:13:03,276 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@3b9a2b6e and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 24.11 07:13:03, skipping insertion in model container
[2020-11-24 19:13:03,276 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 19:13:03,276 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 07:13:03" (5/6) ...
[2020-11-24 19:13:03,277 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@3b9a2b6e and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 24.11 07:13:03, skipping insertion in model container
[2020-11-24 19:13:03,277 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 19:13:03,277 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 24.11 07:13:03" (6/6) ...
[2020-11-24 19:13:03,278 INFO  L404   chiAutomizerObserver]: Analyzing ICFG GOF_0x488e0369f9bc5c40c002ea7c1fe4fd01a198801c_transfer-self.bpl_BEv2
[2020-11-24 19:13:03,312 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-24 19:13:03,313 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-24 19:13:03,313 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-24 19:13:03,313 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-24 19:13:03,313 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-24 19:13:03,313 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-24 19:13:03,313 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-24 19:13:03,313 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-24 19:13:03,313 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-24 19:13:03,333 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2156 states.
[2020-11-24 19:13:03,376 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 19:13:03,376 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 19:13:03,376 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 19:13:03,383 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 19:13:03,383 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
[2020-11-24 19:13:03,383 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-24 19:13:03,383 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2156 states.
[2020-11-24 19:13:03,395 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 19:13:03,395 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 19:13:03,395 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 19:13:03,397 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 19:13:03,397 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L2]                 success_transfer_ERC200 := false;
[L2]                 call_transfer_ERC200 := false;
[L2]     CALL        call main();
[L2574]              assume null == 0;
[L2575]  CALL        call this := FreshRefGenerator__success();
[L894]               havoc newRef;
[L895]               assume Alloc[newRef] == false;
[L896]               Alloc[newRef] := true;
[L897]               assume newRef != null;
[L2575]  RET         call this := FreshRefGenerator__success();
[L2576]              assume now >= 0;
[L2577]              assume DType[this] == GOF;
[L2578]              assume !revert && gas >= 0;
[L2579]  CALL        call CorralChoice_GOF(this);
[L2472]              havoc msgsender_MSG;
[L2473]              havoc msgvalue_MSG;
[L2474]              havoc choice;
[L2475]              havoc __ret_0_totalSupply;
[L2476]              havoc account_s121;
[L2477]              havoc __ret_0_balanceOf;
[L2478]              havoc recipient_s140;
[L2479]              havoc amount_s140;
[L2480]              havoc __ret_0_transfer;
[L2481]              havoc owner_s156;
[L2482]              havoc spender_s156;
[L2483]              havoc __ret_0_allowance;
[L2484]              havoc spender_s175;
[L2485]              havoc amount_s175;
[L2486]              havoc __ret_0_approve;
[L2487]              havoc sender_s211;
[L2488]              havoc recipient_s211;
[L2489]              havoc amount_s211;
[L2490]              havoc __ret_0_transferFrom;
[L2491]              havoc spender_s238;
[L2492]              havoc addedValue_s238;
[L2493]              havoc __ret_0_increaseAllowance;
[L2494]              havoc spender_s266;
[L2495]              havoc subtractedValue_s266;
[L2496]              havoc __ret_0_decreaseAllowance;
[L2497]              havoc name_s524;
[L2498]              havoc symbol_s524;
[L2499]              havoc decimals_s524;
[L2500]              havoc cap_s524;
[L2501]              havoc __ret_0_name;
[L2502]              havoc __ret_0_symbol;
[L2503]              havoc __ret_0_decimals;
[L2504]              havoc __ret_0_cap;
[L2505]              havoc __ret_0_governance;
[L2506]              havoc __ret_0_pendingGov;
[L2507]              havoc arg870_s0;
[L2508]              havoc __ret_0_minters;
[L2509]              havoc _account_s750;
[L2510]              havoc _amount_s750;
[L2511]              havoc _minter_s764;
[L2512]              havoc _minter_s778;
[L2513]              havoc _pendingGov_s799;
[L2514]              havoc tmpNow;
[L2515]              havoc gas;
[L2516]              assume gas > 4000000 && gas <= 8000000;
[L2517]              tmpNow := now;
[L2518]              havoc now;
[L2519]              assume now > tmpNow;
[L2520]              assume msgsender_MSG != null;
[L2521]  COND TRUE   choice == 7
[L2522]              gas := gas - 21000;
[L2523]  COND FALSE  !(gas >= 0)
[L2579]  RET         call CorralChoice_GOF(this);

Loop:
[L2579]        assume true;

[2020-11-24 19:13:03,411 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 19:13:03,411 INFO  L82        PathProgramCache]: Analyzing trace with hash -1507358131, now seen corresponding path program 1 times
[2020-11-24 19:13:03,416 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 19:13:03,438 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 19:13:03,482 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 19:13:03,484 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 19:13:03,484 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [5] imperfect sequences [] total 5
[2020-11-24 19:13:03,488 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 19:13:03,499 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 5 interpolants.
[2020-11-24 19:13:03,499 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=9, Invalid=11, Unknown=0, NotChecked=0, Total=20
[2020-11-24 19:13:03,501 INFO  L87              Difference]: Start difference. First operand 2156 states. Second operand 5 states.
[2020-11-24 19:13:03,807 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 19:13:03,807 INFO  L93              Difference]: Finished difference Result 1023 states and 1218 transitions.
[2020-11-24 19:13:03,807 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-24 19:13:03,809 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 1023 states and 1218 transitions.
[2020-11-24 19:13:03,817 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 19:13:03,825 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 1023 states to 334 states and 385 transitions.
[2020-11-24 19:13:03,826 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 4
[2020-11-24 19:13:03,826 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 130
[2020-11-24 19:13:03,827 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 334 states and 385 transitions.
[2020-11-24 19:13:03,830 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 19:13:03,830 INFO  L728         BuchiCegarLoop]: Abstraction has 334 states and 385 transitions.
[2020-11-24 19:13:03,845 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 334 states and 385 transitions.
[2020-11-24 19:13:03,863 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 334 to 334.
[2020-11-24 19:13:03,864 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 334 states.
[2020-11-24 19:13:03,865 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 334 states to 334 states and 385 transitions.
[2020-11-24 19:13:03,866 INFO  L751         BuchiCegarLoop]: Abstraction has 334 states and 385 transitions.
[2020-11-24 19:13:03,866 INFO  L631         BuchiCegarLoop]: Abstraction has 334 states and 385 transitions.
[2020-11-24 19:13:03,866 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-24 19:13:03,866 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 334 states and 385 transitions.
[2020-11-24 19:13:03,868 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 19:13:03,868 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 19:13:03,868 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 19:13:03,869 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 19:13:03,869 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L2]                 success_transfer_ERC200 := false;
[L2]                 call_transfer_ERC200 := false;
[L2]     CALL        call main();
[L2574]              assume null == 0;
[L2575]  CALL        call this := FreshRefGenerator__success();
[L894]               havoc newRef;
[L895]               assume Alloc[newRef] == false;
[L896]               Alloc[newRef] := true;
[L897]               assume newRef != null;
[L2575]  RET         call this := FreshRefGenerator__success();
[L2576]              assume now >= 0;
[L2577]              assume DType[this] == GOF;
[L2578]              assume !revert && gas >= 0;
[L2579]  CALL        call CorralChoice_GOF(this);
[L2472]              havoc msgsender_MSG;
[L2473]              havoc msgvalue_MSG;
[L2474]              havoc choice;
[L2475]              havoc __ret_0_totalSupply;
[L2476]              havoc account_s121;
[L2477]              havoc __ret_0_balanceOf;
[L2478]              havoc recipient_s140;
[L2479]              havoc amount_s140;
[L2480]              havoc __ret_0_transfer;
[L2481]              havoc owner_s156;
[L2482]              havoc spender_s156;
[L2483]              havoc __ret_0_allowance;
[L2484]              havoc spender_s175;
[L2485]              havoc amount_s175;
[L2486]              havoc __ret_0_approve;
[L2487]              havoc sender_s211;
[L2488]              havoc recipient_s211;
[L2489]              havoc amount_s211;
[L2490]              havoc __ret_0_transferFrom;
[L2491]              havoc spender_s238;
[L2492]              havoc addedValue_s238;
[L2493]              havoc __ret_0_increaseAllowance;
[L2494]              havoc spender_s266;
[L2495]              havoc subtractedValue_s266;
[L2496]              havoc __ret_0_decreaseAllowance;
[L2497]              havoc name_s524;
[L2498]              havoc symbol_s524;
[L2499]              havoc decimals_s524;
[L2500]              havoc cap_s524;
[L2501]              havoc __ret_0_name;
[L2502]              havoc __ret_0_symbol;
[L2503]              havoc __ret_0_decimals;
[L2504]              havoc __ret_0_cap;
[L2505]              havoc __ret_0_governance;
[L2506]              havoc __ret_0_pendingGov;
[L2507]              havoc arg870_s0;
[L2508]              havoc __ret_0_minters;
[L2509]              havoc _account_s750;
[L2510]              havoc _amount_s750;
[L2511]              havoc _minter_s764;
[L2512]              havoc _minter_s778;
[L2513]              havoc _pendingGov_s799;
[L2514]              havoc tmpNow;
[L2515]              havoc gas;
[L2516]              assume gas > 4000000 && gas <= 8000000;
[L2517]              tmpNow := now;
[L2518]              havoc now;
[L2519]              assume now > tmpNow;
[L2520]              assume msgsender_MSG != null;
[L2521]  COND FALSE  !(choice == 7)
[L2527]  COND FALSE  !(choice == 6)
[L2533]  COND TRUE   choice == 5
[L2534]              gas := gas - 21000;
[L2535]  COND TRUE   gas >= 0
[L2536]              assume amount_s140 >= 0 && amount_s140 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2537]              assume msgvalue_MSG == 0;
[L2538]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s140, amount_s140);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == recipient_s140 && amount_s140 <= _balances_ERC20[this][msgsender_MSG]) && amount_s140 >= 0) && amount_s140 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s140] >= 0) && _balances_ERC20[this][recipient_s140] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_ERC200 := true;
[L2]                 call_transfer_ERC200 := false;
[L2]                 revert := revert_hold;
[L204]               havoc __exception;
[L205]               revert := false;
[L206]   COND FALSE  !(__exception)
[L233]   CALL        call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, recipient_s140, amount_s140);
[L972]   COND TRUE   DType[this] == GOF
[L973]   CALL        call __var_1 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L908]               __ret_0_ := msgsender_MSG;
[L973]   RET         call __var_1 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L974]   COND TRUE   revert
[L233]   RET         call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, recipient_s140, amount_s140);
[L234]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !((((((((((__ret_0_ == true && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _balances_ERC20[this] == old(_balances_ERC20[this])) && _allowances_ERC20[this] == old(_allowances_ERC20[this])) && governance_GOF[this] == old(governance_GOF[this])) && pendingGov_GOF[this] == old(pendingGov_GOF[this])) && minters_GOF[this] == old(minters_GOF[this])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this])) && _cap_ERC20Detailed[this] == old(_cap_ERC20Detailed[this]));
[L2]                 revert := revert_hold;
[L2538]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s140, amount_s140);
[L2579]  RET         call CorralChoice_GOF(this);

Loop:
[L2579]        assume true;

[2020-11-24 19:13:03,872 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 19:13:03,872 INFO  L82        PathProgramCache]: Analyzing trace with hash 1628939504, now seen corresponding path program 1 times
[2020-11-24 19:13:03,873 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 19:13:03,884 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 19:13:03,902 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 19:13:03,902 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 19:13:03,902 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-24 19:13:03,903 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 19:13:03,904 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-24 19:13:03,904 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-24 19:13:03,904 INFO  L87              Difference]: Start difference. First operand 334 states and 385 transitions. cyclomatic complexity: 52 Second operand 3 states.
[2020-11-24 19:13:03,920 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 19:13:03,920 INFO  L93              Difference]: Finished difference Result 389 states and 443 transitions.
[2020-11-24 19:13:03,920 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-24 19:13:03,920 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 389 states and 443 transitions.
[2020-11-24 19:13:03,923 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 2
[2020-11-24 19:13:03,925 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 389 states to 360 states and 396 transitions.
[2020-11-24 19:13:03,925 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 147
[2020-11-24 19:13:03,926 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 162
[2020-11-24 19:13:03,926 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 360 states and 396 transitions.
[2020-11-24 19:13:03,926 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 19:13:03,926 INFO  L728         BuchiCegarLoop]: Abstraction has 360 states and 396 transitions.
[2020-11-24 19:13:03,927 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 360 states and 396 transitions.
[2020-11-24 19:13:03,933 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 360 to 349.
[2020-11-24 19:13:03,933 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 349 states.
[2020-11-24 19:13:03,934 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 349 states to 349 states and 385 transitions.
[2020-11-24 19:13:03,934 INFO  L751         BuchiCegarLoop]: Abstraction has 349 states and 385 transitions.
[2020-11-24 19:13:03,934 INFO  L631         BuchiCegarLoop]: Abstraction has 349 states and 385 transitions.
[2020-11-24 19:13:03,934 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-24 19:13:03,934 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 349 states and 385 transitions.
[2020-11-24 19:13:03,936 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 19:13:03,936 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 19:13:03,936 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 19:13:03,937 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 19:13:03,937 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L2]                 success_transfer_ERC200 := false;
[L2]                 call_transfer_ERC200 := false;
[L2]     CALL        call main();
[L2574]              assume null == 0;
[L2575]  CALL        call this := FreshRefGenerator__success();
[L894]               havoc newRef;
[L895]               assume Alloc[newRef] == false;
[L896]               Alloc[newRef] := true;
[L897]               assume newRef != null;
[L2575]  RET         call this := FreshRefGenerator__success();
[L2576]              assume now >= 0;
[L2577]              assume DType[this] == GOF;
[L2578]              assume !revert && gas >= 0;
[L2579]  CALL        call CorralChoice_GOF(this);
[L2472]              havoc msgsender_MSG;
[L2473]              havoc msgvalue_MSG;
[L2474]              havoc choice;
[L2475]              havoc __ret_0_totalSupply;
[L2476]              havoc account_s121;
[L2477]              havoc __ret_0_balanceOf;
[L2478]              havoc recipient_s140;
[L2479]              havoc amount_s140;
[L2480]              havoc __ret_0_transfer;
[L2481]              havoc owner_s156;
[L2482]              havoc spender_s156;
[L2483]              havoc __ret_0_allowance;
[L2484]              havoc spender_s175;
[L2485]              havoc amount_s175;
[L2486]              havoc __ret_0_approve;
[L2487]              havoc sender_s211;
[L2488]              havoc recipient_s211;
[L2489]              havoc amount_s211;
[L2490]              havoc __ret_0_transferFrom;
[L2491]              havoc spender_s238;
[L2492]              havoc addedValue_s238;
[L2493]              havoc __ret_0_increaseAllowance;
[L2494]              havoc spender_s266;
[L2495]              havoc subtractedValue_s266;
[L2496]              havoc __ret_0_decreaseAllowance;
[L2497]              havoc name_s524;
[L2498]              havoc symbol_s524;
[L2499]              havoc decimals_s524;
[L2500]              havoc cap_s524;
[L2501]              havoc __ret_0_name;
[L2502]              havoc __ret_0_symbol;
[L2503]              havoc __ret_0_decimals;
[L2504]              havoc __ret_0_cap;
[L2505]              havoc __ret_0_governance;
[L2506]              havoc __ret_0_pendingGov;
[L2507]              havoc arg870_s0;
[L2508]              havoc __ret_0_minters;
[L2509]              havoc _account_s750;
[L2510]              havoc _amount_s750;
[L2511]              havoc _minter_s764;
[L2512]              havoc _minter_s778;
[L2513]              havoc _pendingGov_s799;
[L2514]              havoc tmpNow;
[L2515]              havoc gas;
[L2516]              assume gas > 4000000 && gas <= 8000000;
[L2517]              tmpNow := now;
[L2518]              havoc now;
[L2519]              assume now > tmpNow;
[L2520]              assume msgsender_MSG != null;
[L2521]  COND FALSE  !(choice == 7)
[L2527]  COND FALSE  !(choice == 6)
[L2533]  COND TRUE   choice == 5
[L2534]              gas := gas - 21000;
[L2535]  COND TRUE   gas >= 0
[L2536]              assume amount_s140 >= 0 && amount_s140 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2537]              assume msgvalue_MSG == 0;
[L2538]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s140, amount_s140);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == recipient_s140 && amount_s140 <= _balances_ERC20[this][msgsender_MSG]) && amount_s140 >= 0) && amount_s140 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s140] >= 0) && _balances_ERC20[this][recipient_s140] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_ERC200 := true;
[L2]                 call_transfer_ERC200 := false;
[L2]                 revert := revert_hold;
[L204]               havoc __exception;
[L205]               revert := false;
[L206]   COND TRUE   __exception
[L207]               __tmp__Balance := Balance;
[L208]               __tmp__DType := DType;
[L209]               __tmp__Alloc := Alloc;
[L210]               __tmp__balance_ADDR := balance_ADDR;
[L211]               __tmp__M_Ref_int := M_Ref_int;
[L212]               __tmp__sum__balances0 := sum__balances0;
[L213]               __tmp__alloc__allowances_ERC20_lvl0 := alloc__allowances_ERC20_lvl0;
[L214]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L215]               __tmp__sum__allowances1 := sum__allowances1;
[L216]               __tmp__M_Ref_bool := M_Ref_bool;
[L217]               __tmp__sum_minters2 := sum_minters2;
[L218]               __tmp__Length := Length;
[L219]               __tmp__now := now;
[L220]               __tmp___balances_ERC20 := _balances_ERC20;
[L221]               __tmp___allowances_ERC20 := _allowances_ERC20;
[L222]               __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L223]               __tmp___name_ERC20Detailed := _name_ERC20Detailed;
[L224]               __tmp___symbol_ERC20Detailed := _symbol_ERC20Detailed;
[L225]               __tmp___decimals_ERC20Detailed := _decimals_ERC20Detailed;
[L226]               __tmp___cap_ERC20Detailed := _cap_ERC20Detailed;
[L227]               __tmp__governance_GOF := governance_GOF;
[L228]               __tmp__pendingGov_GOF := pendingGov_GOF;
[L229]               __tmp__minters_GOF := minters_GOF;
[L230]   CALL        call __ret_0_ := transfer~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, recipient_s140, amount_s140);
[L939]   COND TRUE   __tmp__DType[this] == GOF
[L940]   CALL        call __var_1 := _msgSender_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L902]               __ret_0_ := msgsender_MSG;
[L940]   RET         call __var_1 := _msgSender_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L941]   COND TRUE   revert
[L230]   RET         call __ret_0_ := transfer~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, recipient_s140, amount_s140);
[L231]               assume revert || gas < 0;
[L2538]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s140, amount_s140);
[L2579]  RET         call CorralChoice_GOF(this);

Loop:
[L2579]        assume true;

[2020-11-24 19:13:03,939 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 19:13:03,940 INFO  L82        PathProgramCache]: Analyzing trace with hash -285605906, now seen corresponding path program 1 times
[2020-11-24 19:13:03,940 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 19:13:03,953 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 19:13:03,973 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 19:13:03,973 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 19:13:03,974 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [5] imperfect sequences [] total 5
[2020-11-24 19:13:03,974 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 19:13:03,974 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 5 interpolants.
[2020-11-24 19:13:03,974 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=9, Invalid=11, Unknown=0, NotChecked=0, Total=20
[2020-11-24 19:13:03,974 INFO  L87              Difference]: Start difference. First operand 349 states and 385 transitions. cyclomatic complexity: 37 Second operand 5 states.
[2020-11-24 19:13:04,008 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 19:13:04,009 INFO  L93              Difference]: Finished difference Result 360 states and 384 transitions.
[2020-11-24 19:13:04,009 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-24 19:13:04,009 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 360 states and 384 transitions.
[2020-11-24 19:13:04,010 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 2
[2020-11-24 19:13:04,012 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 360 states to 360 states and 384 transitions.
[2020-11-24 19:13:04,012 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 162
[2020-11-24 19:13:04,012 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 162
[2020-11-24 19:13:04,012 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 360 states and 384 transitions.
[2020-11-24 19:13:04,013 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 19:13:04,013 INFO  L728         BuchiCegarLoop]: Abstraction has 360 states and 384 transitions.
[2020-11-24 19:13:04,013 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 360 states and 384 transitions.
[2020-11-24 19:13:04,016 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 360 to 349.
[2020-11-24 19:13:04,016 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 349 states.
[2020-11-24 19:13:04,017 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 349 states to 349 states and 373 transitions.
[2020-11-24 19:13:04,017 INFO  L751         BuchiCegarLoop]: Abstraction has 349 states and 373 transitions.
[2020-11-24 19:13:04,017 INFO  L631         BuchiCegarLoop]: Abstraction has 349 states and 373 transitions.
[2020-11-24 19:13:04,017 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-24 19:13:04,017 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 349 states and 373 transitions.
[2020-11-24 19:13:04,018 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 19:13:04,018 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 19:13:04,018 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 19:13:04,019 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 19:13:04,019 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L2]                 success_transfer_ERC200 := false;
[L2]                 call_transfer_ERC200 := false;
[L2]     CALL        call main();
[L2574]              assume null == 0;
[L2575]  CALL        call this := FreshRefGenerator__success();
[L894]               havoc newRef;
[L895]               assume Alloc[newRef] == false;
[L896]               Alloc[newRef] := true;
[L897]               assume newRef != null;
[L2575]  RET         call this := FreshRefGenerator__success();
[L2576]              assume now >= 0;
[L2577]              assume DType[this] == GOF;
[L2578]              assume !revert && gas >= 0;
[L2579]  CALL        call CorralChoice_GOF(this);
[L2472]              havoc msgsender_MSG;
[L2473]              havoc msgvalue_MSG;
[L2474]              havoc choice;
[L2475]              havoc __ret_0_totalSupply;
[L2476]              havoc account_s121;
[L2477]              havoc __ret_0_balanceOf;
[L2478]              havoc recipient_s140;
[L2479]              havoc amount_s140;
[L2480]              havoc __ret_0_transfer;
[L2481]              havoc owner_s156;
[L2482]              havoc spender_s156;
[L2483]              havoc __ret_0_allowance;
[L2484]              havoc spender_s175;
[L2485]              havoc amount_s175;
[L2486]              havoc __ret_0_approve;
[L2487]              havoc sender_s211;
[L2488]              havoc recipient_s211;
[L2489]              havoc amount_s211;
[L2490]              havoc __ret_0_transferFrom;
[L2491]              havoc spender_s238;
[L2492]              havoc addedValue_s238;
[L2493]              havoc __ret_0_increaseAllowance;
[L2494]              havoc spender_s266;
[L2495]              havoc subtractedValue_s266;
[L2496]              havoc __ret_0_decreaseAllowance;
[L2497]              havoc name_s524;
[L2498]              havoc symbol_s524;
[L2499]              havoc decimals_s524;
[L2500]              havoc cap_s524;
[L2501]              havoc __ret_0_name;
[L2502]              havoc __ret_0_symbol;
[L2503]              havoc __ret_0_decimals;
[L2504]              havoc __ret_0_cap;
[L2505]              havoc __ret_0_governance;
[L2506]              havoc __ret_0_pendingGov;
[L2507]              havoc arg870_s0;
[L2508]              havoc __ret_0_minters;
[L2509]              havoc _account_s750;
[L2510]              havoc _amount_s750;
[L2511]              havoc _minter_s764;
[L2512]              havoc _minter_s778;
[L2513]              havoc _pendingGov_s799;
[L2514]              havoc tmpNow;
[L2515]              havoc gas;
[L2516]              assume gas > 4000000 && gas <= 8000000;
[L2517]              tmpNow := now;
[L2518]              havoc now;
[L2519]              assume now > tmpNow;
[L2520]              assume msgsender_MSG != null;
[L2521]  COND FALSE  !(choice == 7)
[L2527]  COND FALSE  !(choice == 6)
[L2533]  COND TRUE   choice == 5
[L2534]              gas := gas - 21000;
[L2535]  COND TRUE   gas >= 0
[L2536]              assume amount_s140 >= 0 && amount_s140 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2537]              assume msgvalue_MSG == 0;
[L2538]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s140, amount_s140);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == recipient_s140 && amount_s140 <= _balances_ERC20[this][msgsender_MSG]) && amount_s140 >= 0) && amount_s140 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s140] >= 0) && _balances_ERC20[this][recipient_s140] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_ERC200 := true;
[L2]                 call_transfer_ERC200 := false;
[L2]                 revert := revert_hold;
[L204]               havoc __exception;
[L205]               revert := false;
[L206]   COND TRUE   __exception
[L207]               __tmp__Balance := Balance;
[L208]               __tmp__DType := DType;
[L209]               __tmp__Alloc := Alloc;
[L210]               __tmp__balance_ADDR := balance_ADDR;
[L211]               __tmp__M_Ref_int := M_Ref_int;
[L212]               __tmp__sum__balances0 := sum__balances0;
[L213]               __tmp__alloc__allowances_ERC20_lvl0 := alloc__allowances_ERC20_lvl0;
[L214]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L215]               __tmp__sum__allowances1 := sum__allowances1;
[L216]               __tmp__M_Ref_bool := M_Ref_bool;
[L217]               __tmp__sum_minters2 := sum_minters2;
[L218]               __tmp__Length := Length;
[L219]               __tmp__now := now;
[L220]               __tmp___balances_ERC20 := _balances_ERC20;
[L221]               __tmp___allowances_ERC20 := _allowances_ERC20;
[L222]               __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L223]               __tmp___name_ERC20Detailed := _name_ERC20Detailed;
[L224]               __tmp___symbol_ERC20Detailed := _symbol_ERC20Detailed;
[L225]               __tmp___decimals_ERC20Detailed := _decimals_ERC20Detailed;
[L226]               __tmp___cap_ERC20Detailed := _cap_ERC20Detailed;
[L227]               __tmp__governance_GOF := governance_GOF;
[L228]               __tmp__pendingGov_GOF := pendingGov_GOF;
[L229]               __tmp__minters_GOF := minters_GOF;
[L230]   CALL        call __ret_0_ := transfer~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, recipient_s140, amount_s140);
[L939]   COND TRUE   __tmp__DType[this] == GOF
[L940]   CALL        call __var_1 := _msgSender_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L902]               __ret_0_ := msgsender_MSG;
[L940]   RET         call __var_1 := _msgSender_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L941]   COND FALSE  !(revert)
[L952]   COND TRUE   __tmp__DType[this] == GOF
[L953]   CALL        call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, __var_1, recipient_s140, amount_s140);
[L1216]              __var_6 := null;
[L1217]  COND TRUE   !(sender_s329 != null)
[L1218]              revert := true;
[L953]   RET         call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, __var_1, recipient_s140, amount_s140);
[L954]   COND TRUE   revert
[L230]   RET         call __ret_0_ := transfer~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, recipient_s140, amount_s140);
[L231]               assume revert || gas < 0;
[L2538]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s140, amount_s140);
[L2579]  RET         call CorralChoice_GOF(this);

Loop:
[L2579]        assume true;

[2020-11-24 19:13:04,021 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 19:13:04,021 INFO  L82        PathProgramCache]: Analyzing trace with hash 76675, now seen corresponding path program 1 times
[2020-11-24 19:13:04,021 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 19:13:04,027 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 19:13:04,048 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 19:13:04,048 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 19:13:04,049 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [8] imperfect sequences [] total 8
[2020-11-24 19:13:04,049 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 19:13:04,049 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 8 interpolants.
[2020-11-24 19:13:04,049 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=13, Invalid=43, Unknown=0, NotChecked=0, Total=56
[2020-11-24 19:13:04,049 INFO  L87              Difference]: Start difference. First operand 349 states and 373 transitions. cyclomatic complexity: 25 Second operand 8 states.
[2020-11-24 19:13:04,063 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 19:13:04,063 INFO  L93              Difference]: Finished difference Result 361 states and 385 transitions.
[2020-11-24 19:13:04,064 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 8 states. 
[2020-11-24 19:13:04,064 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 361 states and 385 transitions.
[2020-11-24 19:13:04,066 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 19:13:04,067 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 361 states to 348 states and 371 transitions.
[2020-11-24 19:13:04,067 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 150
[2020-11-24 19:13:04,068 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 150
[2020-11-24 19:13:04,068 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 348 states and 371 transitions.
[2020-11-24 19:13:04,068 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 19:13:04,068 INFO  L728         BuchiCegarLoop]: Abstraction has 348 states and 371 transitions.
[2020-11-24 19:13:04,069 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 348 states and 371 transitions.
[2020-11-24 19:13:04,073 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 348 to 348.
[2020-11-24 19:13:04,073 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 348 states.
[2020-11-24 19:13:04,073 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 348 states to 348 states and 371 transitions.
[2020-11-24 19:13:04,074 INFO  L751         BuchiCegarLoop]: Abstraction has 348 states and 371 transitions.
[2020-11-24 19:13:04,074 INFO  L631         BuchiCegarLoop]: Abstraction has 348 states and 371 transitions.
[2020-11-24 19:13:04,074 INFO  L445         BuchiCegarLoop]: ======== Iteration 5============
[2020-11-24 19:13:04,074 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 348 states and 371 transitions.
[2020-11-24 19:13:04,075 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 19:13:04,075 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 19:13:04,075 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 19:13:04,076 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 19:13:04,076 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L2]                 success_transfer_ERC200 := false;
[L2]                 call_transfer_ERC200 := false;
[L2]     CALL        call main();
[L2574]              assume null == 0;
[L2575]  CALL        call this := FreshRefGenerator__success();
[L894]               havoc newRef;
[L895]               assume Alloc[newRef] == false;
[L896]               Alloc[newRef] := true;
[L897]               assume newRef != null;
[L2575]  RET         call this := FreshRefGenerator__success();
[L2576]              assume now >= 0;
[L2577]              assume DType[this] == GOF;
[L2578]              assume !revert && gas >= 0;
[L2579]  CALL        call CorralChoice_GOF(this);
[L2472]              havoc msgsender_MSG;
[L2473]              havoc msgvalue_MSG;
[L2474]              havoc choice;
[L2475]              havoc __ret_0_totalSupply;
[L2476]              havoc account_s121;
[L2477]              havoc __ret_0_balanceOf;
[L2478]              havoc recipient_s140;
[L2479]              havoc amount_s140;
[L2480]              havoc __ret_0_transfer;
[L2481]              havoc owner_s156;
[L2482]              havoc spender_s156;
[L2483]              havoc __ret_0_allowance;
[L2484]              havoc spender_s175;
[L2485]              havoc amount_s175;
[L2486]              havoc __ret_0_approve;
[L2487]              havoc sender_s211;
[L2488]              havoc recipient_s211;
[L2489]              havoc amount_s211;
[L2490]              havoc __ret_0_transferFrom;
[L2491]              havoc spender_s238;
[L2492]              havoc addedValue_s238;
[L2493]              havoc __ret_0_increaseAllowance;
[L2494]              havoc spender_s266;
[L2495]              havoc subtractedValue_s266;
[L2496]              havoc __ret_0_decreaseAllowance;
[L2497]              havoc name_s524;
[L2498]              havoc symbol_s524;
[L2499]              havoc decimals_s524;
[L2500]              havoc cap_s524;
[L2501]              havoc __ret_0_name;
[L2502]              havoc __ret_0_symbol;
[L2503]              havoc __ret_0_decimals;
[L2504]              havoc __ret_0_cap;
[L2505]              havoc __ret_0_governance;
[L2506]              havoc __ret_0_pendingGov;
[L2507]              havoc arg870_s0;
[L2508]              havoc __ret_0_minters;
[L2509]              havoc _account_s750;
[L2510]              havoc _amount_s750;
[L2511]              havoc _minter_s764;
[L2512]              havoc _minter_s778;
[L2513]              havoc _pendingGov_s799;
[L2514]              havoc tmpNow;
[L2515]              havoc gas;
[L2516]              assume gas > 4000000 && gas <= 8000000;
[L2517]              tmpNow := now;
[L2518]              havoc now;
[L2519]              assume now > tmpNow;
[L2520]              assume msgsender_MSG != null;
[L2521]  COND FALSE  !(choice == 7)
[L2527]  COND FALSE  !(choice == 6)
[L2533]  COND TRUE   choice == 5
[L2534]              gas := gas - 21000;
[L2535]  COND TRUE   gas >= 0
[L2536]              assume amount_s140 >= 0 && amount_s140 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2537]              assume msgvalue_MSG == 0;
[L2538]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s140, amount_s140);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == recipient_s140 && amount_s140 <= _balances_ERC20[this][msgsender_MSG]) && amount_s140 >= 0) && amount_s140 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s140] >= 0) && _balances_ERC20[this][recipient_s140] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_ERC200 := true;
[L2]                 call_transfer_ERC200 := false;
[L2]                 revert := revert_hold;
[L204]               havoc __exception;
[L205]               revert := false;
[L206]   COND TRUE   __exception
[L207]               __tmp__Balance := Balance;
[L208]               __tmp__DType := DType;
[L209]               __tmp__Alloc := Alloc;
[L210]               __tmp__balance_ADDR := balance_ADDR;
[L211]               __tmp__M_Ref_int := M_Ref_int;
[L212]               __tmp__sum__balances0 := sum__balances0;
[L213]               __tmp__alloc__allowances_ERC20_lvl0 := alloc__allowances_ERC20_lvl0;
[L214]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L215]               __tmp__sum__allowances1 := sum__allowances1;
[L216]               __tmp__M_Ref_bool := M_Ref_bool;
[L217]               __tmp__sum_minters2 := sum_minters2;
[L218]               __tmp__Length := Length;
[L219]               __tmp__now := now;
[L220]               __tmp___balances_ERC20 := _balances_ERC20;
[L221]               __tmp___allowances_ERC20 := _allowances_ERC20;
[L222]               __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L223]               __tmp___name_ERC20Detailed := _name_ERC20Detailed;
[L224]               __tmp___symbol_ERC20Detailed := _symbol_ERC20Detailed;
[L225]               __tmp___decimals_ERC20Detailed := _decimals_ERC20Detailed;
[L226]               __tmp___cap_ERC20Detailed := _cap_ERC20Detailed;
[L227]               __tmp__governance_GOF := governance_GOF;
[L228]               __tmp__pendingGov_GOF := pendingGov_GOF;
[L229]               __tmp__minters_GOF := minters_GOF;
[L230]   CALL        call __ret_0_ := transfer~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, recipient_s140, amount_s140);
[L939]   COND TRUE   __tmp__DType[this] == GOF
[L940]   CALL        call __var_1 := _msgSender_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L902]               __ret_0_ := msgsender_MSG;
[L940]   RET         call __var_1 := _msgSender_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L941]   COND FALSE  !(revert)
[L952]   COND TRUE   __tmp__DType[this] == GOF
[L953]   CALL        call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, __var_1, recipient_s140, amount_s140);
[L1216]              __var_6 := null;
[L1217]  COND FALSE  !(!(sender_s329 != null))
[L1221]              __var_7 := null;
[L1222]  COND TRUE   !(recipient_s329 != null)
[L1223]              revert := true;
[L953]   RET         call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, __var_1, recipient_s140, amount_s140);
[L954]   COND TRUE   revert
[L230]   RET         call __ret_0_ := transfer~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, recipient_s140, amount_s140);
[L231]               assume revert || gas < 0;
[L2538]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s140, amount_s140);
[L2579]  RET         call CorralChoice_GOF(this);

Loop:
[L2579]        assume true;

[2020-11-24 19:13:04,078 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 19:13:04,078 INFO  L82        PathProgramCache]: Analyzing trace with hash -1884367110, now seen corresponding path program 1 times
[2020-11-24 19:13:04,079 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 19:13:04,083 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 19:13:04,100 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 19:13:04,101 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 19:13:04,101 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [7] imperfect sequences [] total 7
[2020-11-24 19:13:04,101 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 19:13:04,101 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 7 interpolants.
[2020-11-24 19:13:04,101 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=11, Invalid=31, Unknown=0, NotChecked=0, Total=42
[2020-11-24 19:13:04,101 INFO  L87              Difference]: Start difference. First operand 348 states and 371 transitions. cyclomatic complexity: 24 Second operand 7 states.
[2020-11-24 19:13:04,112 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 19:13:04,112 INFO  L93              Difference]: Finished difference Result 360 states and 383 transitions.
[2020-11-24 19:13:04,113 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 7 states. 
[2020-11-24 19:13:04,113 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 360 states and 383 transitions.
[2020-11-24 19:13:04,114 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 19:13:04,115 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 360 states to 347 states and 369 transitions.
[2020-11-24 19:13:04,115 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 149
[2020-11-24 19:13:04,115 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 149
[2020-11-24 19:13:04,116 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 347 states and 369 transitions.
[2020-11-24 19:13:04,116 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 19:13:04,116 INFO  L728         BuchiCegarLoop]: Abstraction has 347 states and 369 transitions.
[2020-11-24 19:13:04,116 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 347 states and 369 transitions.
[2020-11-24 19:13:04,119 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 347 to 347.
[2020-11-24 19:13:04,119 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 347 states.
[2020-11-24 19:13:04,119 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 347 states to 347 states and 369 transitions.
[2020-11-24 19:13:04,119 INFO  L751         BuchiCegarLoop]: Abstraction has 347 states and 369 transitions.
[2020-11-24 19:13:04,120 INFO  L631         BuchiCegarLoop]: Abstraction has 347 states and 369 transitions.
[2020-11-24 19:13:04,120 INFO  L445         BuchiCegarLoop]: ======== Iteration 6============
[2020-11-24 19:13:04,120 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 347 states and 369 transitions.
[2020-11-24 19:13:04,120 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 19:13:04,120 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 19:13:04,121 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 19:13:04,121 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 19:13:04,121 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L2]                 success_transfer_ERC200 := false;
[L2]                 call_transfer_ERC200 := false;
[L2]     CALL        call main();
[L2574]              assume null == 0;
[L2575]  CALL        call this := FreshRefGenerator__success();
[L894]               havoc newRef;
[L895]               assume Alloc[newRef] == false;
[L896]               Alloc[newRef] := true;
[L897]               assume newRef != null;
[L2575]  RET         call this := FreshRefGenerator__success();
[L2576]              assume now >= 0;
[L2577]              assume DType[this] == GOF;
[L2578]              assume !revert && gas >= 0;
[L2579]  CALL        call CorralChoice_GOF(this);
[L2472]              havoc msgsender_MSG;
[L2473]              havoc msgvalue_MSG;
[L2474]              havoc choice;
[L2475]              havoc __ret_0_totalSupply;
[L2476]              havoc account_s121;
[L2477]              havoc __ret_0_balanceOf;
[L2478]              havoc recipient_s140;
[L2479]              havoc amount_s140;
[L2480]              havoc __ret_0_transfer;
[L2481]              havoc owner_s156;
[L2482]              havoc spender_s156;
[L2483]              havoc __ret_0_allowance;
[L2484]              havoc spender_s175;
[L2485]              havoc amount_s175;
[L2486]              havoc __ret_0_approve;
[L2487]              havoc sender_s211;
[L2488]              havoc recipient_s211;
[L2489]              havoc amount_s211;
[L2490]              havoc __ret_0_transferFrom;
[L2491]              havoc spender_s238;
[L2492]              havoc addedValue_s238;
[L2493]              havoc __ret_0_increaseAllowance;
[L2494]              havoc spender_s266;
[L2495]              havoc subtractedValue_s266;
[L2496]              havoc __ret_0_decreaseAllowance;
[L2497]              havoc name_s524;
[L2498]              havoc symbol_s524;
[L2499]              havoc decimals_s524;
[L2500]              havoc cap_s524;
[L2501]              havoc __ret_0_name;
[L2502]              havoc __ret_0_symbol;
[L2503]              havoc __ret_0_decimals;
[L2504]              havoc __ret_0_cap;
[L2505]              havoc __ret_0_governance;
[L2506]              havoc __ret_0_pendingGov;
[L2507]              havoc arg870_s0;
[L2508]              havoc __ret_0_minters;
[L2509]              havoc _account_s750;
[L2510]              havoc _amount_s750;
[L2511]              havoc _minter_s764;
[L2512]              havoc _minter_s778;
[L2513]              havoc _pendingGov_s799;
[L2514]              havoc tmpNow;
[L2515]              havoc gas;
[L2516]              assume gas > 4000000 && gas <= 8000000;
[L2517]              tmpNow := now;
[L2518]              havoc now;
[L2519]              assume now > tmpNow;
[L2520]              assume msgsender_MSG != null;
[L2521]  COND FALSE  !(choice == 7)
[L2527]  COND FALSE  !(choice == 6)
[L2533]  COND TRUE   choice == 5
[L2534]              gas := gas - 21000;
[L2535]  COND TRUE   gas >= 0
[L2536]              assume amount_s140 >= 0 && amount_s140 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2537]              assume msgvalue_MSG == 0;
[L2538]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s140, amount_s140);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == recipient_s140 && amount_s140 <= _balances_ERC20[this][msgsender_MSG]) && amount_s140 >= 0) && amount_s140 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s140] >= 0) && _balances_ERC20[this][recipient_s140] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_ERC200 := true;
[L2]                 call_transfer_ERC200 := false;
[L2]                 revert := revert_hold;
[L204]               havoc __exception;
[L205]               revert := false;
[L206]   COND FALSE  !(__exception)
[L233]   CALL        call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, recipient_s140, amount_s140);
[L972]   COND TRUE   DType[this] == GOF
[L973]   CALL        call __var_1 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L908]               __ret_0_ := msgsender_MSG;
[L973]   RET         call __var_1 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L974]   COND FALSE  !(revert)
[L985]   COND TRUE   DType[this] == GOF
[L986]   CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, __var_1, recipient_s140, amount_s140);
[L1261]              __var_6 := null;
[L1262]  COND FALSE  !(!(sender_s329 != null))
[L1266]              __var_7 := null;
[L1267]  COND FALSE  !(!(recipient_s329 != null))
[L1271]  COND FALSE  !(DType[this] == GOF)
[L1276]  COND TRUE   DType[this] == ERC20
[L1277]  CALL        call _beforeTokenTransfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s329, recipient_s329, amount_s329);
[L1277]  RET         call _beforeTokenTransfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s329, recipient_s329, amount_s329);
[L1278]  COND FALSE  !(revert)
[L1284]  CALL        call __var_8 := sub~uint256~uint256~string_SafeMath__success(this, this, 0, _balances_ERC20[this][sender_s329], amount_s329, 1713428628);
[L1399]  COND FALSE  !(!(b_s609 <= a_s609))
[L1403]              c_s609 := (a_s609 - b_s609) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1404]              __ret_0_ := c_s609;
[L1284]  RET         call __var_8 := sub~uint256~uint256~string_SafeMath__success(this, this, 0, _balances_ERC20[this][sender_s329], amount_s329, 1713428628);
[L1285]  COND FALSE  !(revert)
[L1288]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][sender_s329];
[L1289]              _balances_ERC20[this][sender_s329] := __var_8;
[L1290]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][sender_s329];
[L1291]  CALL        call __var_9 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][recipient_s329], amount_s329);
[L1375]              c_s582 := (a_s582 + b_s582) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1376]  COND FALSE  !(!(c_s582 >= a_s582))
[L1380]              __ret_0_ := c_s582;
[L1291]  RET         call __var_9 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][recipient_s329], amount_s329);
[L1292]  COND FALSE  !(revert)
[L1295]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][recipient_s329];
[L1296]              _balances_ERC20[this][recipient_s329] := __var_9;
[L1297]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][recipient_s329];
[L1298]              assert { :EventEmitted "Transfer_ERC20" } true;
[L986]   RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, __var_1, recipient_s140, amount_s140);
[L987]   COND FALSE  !(revert)
[L998]               __ret_0_ := true;
[L233]   RET         call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, recipient_s140, amount_s140);
[L234]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !((((((((((__ret_0_ == true && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _balances_ERC20[this] == old(_balances_ERC20[this])) && _allowances_ERC20[this] == old(_allowances_ERC20[this])) && governance_GOF[this] == old(governance_GOF[this])) && pendingGov_GOF[this] == old(pendingGov_GOF[this])) && minters_GOF[this] == old(minters_GOF[this])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this])) && _cap_ERC20Detailed[this] == old(_cap_ERC20Detailed[this]));
[L2]                 revert := revert_hold;
[L2538]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s140, amount_s140);
[L2579]  RET         call CorralChoice_GOF(this);

Loop:
[L2579]        assume true;

[2020-11-24 19:13:04,123 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 19:13:04,123 INFO  L82        PathProgramCache]: Analyzing trace with hash -2131546991, now seen corresponding path program 1 times
[2020-11-24 19:13:04,124 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 19:13:04,128 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 19:13:04,152 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 19:13:04,152 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 19:13:04,153 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [7] imperfect sequences [] total 7
[2020-11-24 19:13:04,153 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 19:13:04,153 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 7 interpolants.
[2020-11-24 19:13:04,153 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=11, Invalid=31, Unknown=0, NotChecked=0, Total=42
[2020-11-24 19:13:04,153 INFO  L87              Difference]: Start difference. First operand 347 states and 369 transitions. cyclomatic complexity: 23 Second operand 7 states.
[2020-11-24 19:13:04,183 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 19:13:04,183 INFO  L93              Difference]: Finished difference Result 384 states and 407 transitions.
[2020-11-24 19:13:04,184 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 7 states. 
[2020-11-24 19:13:04,184 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 384 states and 407 transitions.
[2020-11-24 19:13:04,186 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 19:13:04,187 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 384 states to 332 states and 348 transitions.
[2020-11-24 19:13:04,187 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 147
[2020-11-24 19:13:04,187 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 147
[2020-11-24 19:13:04,187 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 332 states and 348 transitions.
[2020-11-24 19:13:04,188 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 19:13:04,188 INFO  L728         BuchiCegarLoop]: Abstraction has 332 states and 348 transitions.
[2020-11-24 19:13:04,188 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 332 states and 348 transitions.
[2020-11-24 19:13:04,191 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 332 to 332.
[2020-11-24 19:13:04,191 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 332 states.
[2020-11-24 19:13:04,192 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 332 states to 332 states and 348 transitions.
[2020-11-24 19:13:04,192 INFO  L751         BuchiCegarLoop]: Abstraction has 332 states and 348 transitions.
[2020-11-24 19:13:04,192 INFO  L631         BuchiCegarLoop]: Abstraction has 332 states and 348 transitions.
[2020-11-24 19:13:04,192 INFO  L445         BuchiCegarLoop]: ======== Iteration 7============
[2020-11-24 19:13:04,192 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 332 states and 348 transitions.
[2020-11-24 19:13:04,193 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 19:13:04,193 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 19:13:04,193 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 19:13:04,194 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 19:13:04,194 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L2]                 success_transfer_ERC200 := false;
[L2]                 call_transfer_ERC200 := false;
[L2]     CALL        call main();
[L2574]              assume null == 0;
[L2575]  CALL        call this := FreshRefGenerator__success();
[L894]               havoc newRef;
[L895]               assume Alloc[newRef] == false;
[L896]               Alloc[newRef] := true;
[L897]               assume newRef != null;
[L2575]  RET         call this := FreshRefGenerator__success();
[L2576]              assume now >= 0;
[L2577]              assume DType[this] == GOF;
[L2578]              assume !revert && gas >= 0;
[L2579]  CALL        call CorralChoice_GOF(this);
[L2472]              havoc msgsender_MSG;
[L2473]              havoc msgvalue_MSG;
[L2474]              havoc choice;
[L2475]              havoc __ret_0_totalSupply;
[L2476]              havoc account_s121;
[L2477]              havoc __ret_0_balanceOf;
[L2478]              havoc recipient_s140;
[L2479]              havoc amount_s140;
[L2480]              havoc __ret_0_transfer;
[L2481]              havoc owner_s156;
[L2482]              havoc spender_s156;
[L2483]              havoc __ret_0_allowance;
[L2484]              havoc spender_s175;
[L2485]              havoc amount_s175;
[L2486]              havoc __ret_0_approve;
[L2487]              havoc sender_s211;
[L2488]              havoc recipient_s211;
[L2489]              havoc amount_s211;
[L2490]              havoc __ret_0_transferFrom;
[L2491]              havoc spender_s238;
[L2492]              havoc addedValue_s238;
[L2493]              havoc __ret_0_increaseAllowance;
[L2494]              havoc spender_s266;
[L2495]              havoc subtractedValue_s266;
[L2496]              havoc __ret_0_decreaseAllowance;
[L2497]              havoc name_s524;
[L2498]              havoc symbol_s524;
[L2499]              havoc decimals_s524;
[L2500]              havoc cap_s524;
[L2501]              havoc __ret_0_name;
[L2502]              havoc __ret_0_symbol;
[L2503]              havoc __ret_0_decimals;
[L2504]              havoc __ret_0_cap;
[L2505]              havoc __ret_0_governance;
[L2506]              havoc __ret_0_pendingGov;
[L2507]              havoc arg870_s0;
[L2508]              havoc __ret_0_minters;
[L2509]              havoc _account_s750;
[L2510]              havoc _amount_s750;
[L2511]              havoc _minter_s764;
[L2512]              havoc _minter_s778;
[L2513]              havoc _pendingGov_s799;
[L2514]              havoc tmpNow;
[L2515]              havoc gas;
[L2516]              assume gas > 4000000 && gas <= 8000000;
[L2517]              tmpNow := now;
[L2518]              havoc now;
[L2519]              assume now > tmpNow;
[L2520]              assume msgsender_MSG != null;
[L2521]  COND FALSE  !(choice == 7)
[L2527]  COND FALSE  !(choice == 6)
[L2533]  COND TRUE   choice == 5
[L2534]              gas := gas - 21000;
[L2535]  COND TRUE   gas >= 0
[L2536]              assume amount_s140 >= 0 && amount_s140 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2537]              assume msgvalue_MSG == 0;
[L2538]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s140, amount_s140);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == recipient_s140 && amount_s140 <= _balances_ERC20[this][msgsender_MSG]) && amount_s140 >= 0) && amount_s140 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s140] >= 0) && _balances_ERC20[this][recipient_s140] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_ERC200 := true;
[L2]                 call_transfer_ERC200 := false;
[L2]                 revert := revert_hold;
[L204]               havoc __exception;
[L205]               revert := false;
[L206]   COND TRUE   __exception
[L207]               __tmp__Balance := Balance;
[L208]               __tmp__DType := DType;
[L209]               __tmp__Alloc := Alloc;
[L210]               __tmp__balance_ADDR := balance_ADDR;
[L211]               __tmp__M_Ref_int := M_Ref_int;
[L212]               __tmp__sum__balances0 := sum__balances0;
[L213]               __tmp__alloc__allowances_ERC20_lvl0 := alloc__allowances_ERC20_lvl0;
[L214]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L215]               __tmp__sum__allowances1 := sum__allowances1;
[L216]               __tmp__M_Ref_bool := M_Ref_bool;
[L217]               __tmp__sum_minters2 := sum_minters2;
[L218]               __tmp__Length := Length;
[L219]               __tmp__now := now;
[L220]               __tmp___balances_ERC20 := _balances_ERC20;
[L221]               __tmp___allowances_ERC20 := _allowances_ERC20;
[L222]               __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L223]               __tmp___name_ERC20Detailed := _name_ERC20Detailed;
[L224]               __tmp___symbol_ERC20Detailed := _symbol_ERC20Detailed;
[L225]               __tmp___decimals_ERC20Detailed := _decimals_ERC20Detailed;
[L226]               __tmp___cap_ERC20Detailed := _cap_ERC20Detailed;
[L227]               __tmp__governance_GOF := governance_GOF;
[L228]               __tmp__pendingGov_GOF := pendingGov_GOF;
[L229]               __tmp__minters_GOF := minters_GOF;
[L230]   CALL        call __ret_0_ := transfer~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, recipient_s140, amount_s140);
[L939]   COND TRUE   __tmp__DType[this] == GOF
[L940]   CALL        call __var_1 := _msgSender_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L902]               __ret_0_ := msgsender_MSG;
[L940]   RET         call __var_1 := _msgSender_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L941]   COND FALSE  !(revert)
[L952]   COND TRUE   __tmp__DType[this] == GOF
[L953]   CALL        call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, __var_1, recipient_s140, amount_s140);
[L1216]              __var_6 := null;
[L1217]  COND FALSE  !(!(sender_s329 != null))
[L1221]              __var_7 := null;
[L1222]  COND FALSE  !(!(recipient_s329 != null))
[L1226]  COND FALSE  !(__tmp__DType[this] == GOF)
[L1231]  COND TRUE   __tmp__DType[this] == ERC20
[L1232]  CALL        call _beforeTokenTransfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, sender_s329, recipient_s329, amount_s329);
[L1232]  RET         call _beforeTokenTransfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, sender_s329, recipient_s329, amount_s329);
[L1233]  COND FALSE  !(revert)
[L1239]  CALL        call __var_8 := sub~uint256~uint256~string_SafeMath__fail(this, this, 0, __tmp___balances_ERC20[this][sender_s329], amount_s329, 1713428628);
[L1387]  COND TRUE   !(b_s609 <= a_s609)
[L1388]              revert := true;
[L1239]  RET         call __var_8 := sub~uint256~uint256~string_SafeMath__fail(this, this, 0, __tmp___balances_ERC20[this][sender_s329], amount_s329, 1713428628);
[L1240]  COND TRUE   revert
[L953]   RET         call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, __var_1, recipient_s140, amount_s140);
[L954]   COND TRUE   revert
[L230]   RET         call __ret_0_ := transfer~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, recipient_s140, amount_s140);
[L231]               assume revert || gas < 0;
[L2538]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s140, amount_s140);
[L2579]  RET         call CorralChoice_GOF(this);

Loop:
[L2579]        assume true;

[2020-11-24 19:13:04,196 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 19:13:04,196 INFO  L82        PathProgramCache]: Analyzing trace with hash -47772621, now seen corresponding path program 1 times
[2020-11-24 19:13:04,197 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 19:13:04,203 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 19:13:04,233 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 19:13:04,233 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 19:13:04,233 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [8] imperfect sequences [] total 8
[2020-11-24 19:13:04,234 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 19:13:04,234 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 8 interpolants.
[2020-11-24 19:13:04,234 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=13, Invalid=43, Unknown=0, NotChecked=0, Total=56
[2020-11-24 19:13:04,234 INFO  L87              Difference]: Start difference. First operand 332 states and 348 transitions. cyclomatic complexity: 17 Second operand 8 states.
[2020-11-24 19:13:04,278 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 19:13:04,279 INFO  L93              Difference]: Finished difference Result 379 states and 398 transitions.
[2020-11-24 19:13:04,280 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 9 states. 
[2020-11-24 19:13:04,281 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 379 states and 398 transitions.
[2020-11-24 19:13:04,285 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 2
[2020-11-24 19:13:04,288 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 379 states to 322 states and 331 transitions.
[2020-11-24 19:13:04,288 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 150
[2020-11-24 19:13:04,289 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 150
[2020-11-24 19:13:04,289 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 322 states and 331 transitions.
[2020-11-24 19:13:04,290 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 19:13:04,290 INFO  L728         BuchiCegarLoop]: Abstraction has 322 states and 331 transitions.
[2020-11-24 19:13:04,291 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 322 states and 331 transitions.
[2020-11-24 19:13:04,294 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 322 to 315.
[2020-11-24 19:13:04,294 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 315 states.
[2020-11-24 19:13:04,295 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 315 states to 315 states and 324 transitions.
[2020-11-24 19:13:04,295 INFO  L751         BuchiCegarLoop]: Abstraction has 315 states and 324 transitions.
[2020-11-24 19:13:04,295 INFO  L631         BuchiCegarLoop]: Abstraction has 315 states and 324 transitions.
[2020-11-24 19:13:04,295 INFO  L445         BuchiCegarLoop]: ======== Iteration 8============
[2020-11-24 19:13:04,295 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 315 states and 324 transitions.
[2020-11-24 19:13:04,296 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 19:13:04,296 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 19:13:04,296 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 19:13:04,297 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 19:13:04,297 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L2]                 success_transfer_ERC200 := false;
[L2]                 call_transfer_ERC200 := false;
[L2]     CALL        call main();
[L2574]              assume null == 0;
[L2575]  CALL        call this := FreshRefGenerator__success();
[L894]               havoc newRef;
[L895]               assume Alloc[newRef] == false;
[L896]               Alloc[newRef] := true;
[L897]               assume newRef != null;
[L2575]  RET         call this := FreshRefGenerator__success();
[L2576]              assume now >= 0;
[L2577]              assume DType[this] == GOF;
[L2578]              assume !revert && gas >= 0;
[L2579]  CALL        call CorralChoice_GOF(this);
[L2472]              havoc msgsender_MSG;
[L2473]              havoc msgvalue_MSG;
[L2474]              havoc choice;
[L2475]              havoc __ret_0_totalSupply;
[L2476]              havoc account_s121;
[L2477]              havoc __ret_0_balanceOf;
[L2478]              havoc recipient_s140;
[L2479]              havoc amount_s140;
[L2480]              havoc __ret_0_transfer;
[L2481]              havoc owner_s156;
[L2482]              havoc spender_s156;
[L2483]              havoc __ret_0_allowance;
[L2484]              havoc spender_s175;
[L2485]              havoc amount_s175;
[L2486]              havoc __ret_0_approve;
[L2487]              havoc sender_s211;
[L2488]              havoc recipient_s211;
[L2489]              havoc amount_s211;
[L2490]              havoc __ret_0_transferFrom;
[L2491]              havoc spender_s238;
[L2492]              havoc addedValue_s238;
[L2493]              havoc __ret_0_increaseAllowance;
[L2494]              havoc spender_s266;
[L2495]              havoc subtractedValue_s266;
[L2496]              havoc __ret_0_decreaseAllowance;
[L2497]              havoc name_s524;
[L2498]              havoc symbol_s524;
[L2499]              havoc decimals_s524;
[L2500]              havoc cap_s524;
[L2501]              havoc __ret_0_name;
[L2502]              havoc __ret_0_symbol;
[L2503]              havoc __ret_0_decimals;
[L2504]              havoc __ret_0_cap;
[L2505]              havoc __ret_0_governance;
[L2506]              havoc __ret_0_pendingGov;
[L2507]              havoc arg870_s0;
[L2508]              havoc __ret_0_minters;
[L2509]              havoc _account_s750;
[L2510]              havoc _amount_s750;
[L2511]              havoc _minter_s764;
[L2512]              havoc _minter_s778;
[L2513]              havoc _pendingGov_s799;
[L2514]              havoc tmpNow;
[L2515]              havoc gas;
[L2516]              assume gas > 4000000 && gas <= 8000000;
[L2517]              tmpNow := now;
[L2518]              havoc now;
[L2519]              assume now > tmpNow;
[L2520]              assume msgsender_MSG != null;
[L2521]  COND FALSE  !(choice == 7)
[L2527]  COND FALSE  !(choice == 6)
[L2533]  COND TRUE   choice == 5
[L2534]              gas := gas - 21000;
[L2535]  COND TRUE   gas >= 0
[L2536]              assume amount_s140 >= 0 && amount_s140 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2537]              assume msgvalue_MSG == 0;
[L2538]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s140, amount_s140);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == recipient_s140 && amount_s140 <= _balances_ERC20[this][msgsender_MSG]) && amount_s140 >= 0) && amount_s140 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s140] >= 0) && _balances_ERC20[this][recipient_s140] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_ERC200 := true;
[L2]                 call_transfer_ERC200 := false;
[L2]                 revert := revert_hold;
[L204]               havoc __exception;
[L205]               revert := false;
[L206]   COND TRUE   __exception
[L207]               __tmp__Balance := Balance;
[L208]               __tmp__DType := DType;
[L209]               __tmp__Alloc := Alloc;
[L210]               __tmp__balance_ADDR := balance_ADDR;
[L211]               __tmp__M_Ref_int := M_Ref_int;
[L212]               __tmp__sum__balances0 := sum__balances0;
[L213]               __tmp__alloc__allowances_ERC20_lvl0 := alloc__allowances_ERC20_lvl0;
[L214]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L215]               __tmp__sum__allowances1 := sum__allowances1;
[L216]               __tmp__M_Ref_bool := M_Ref_bool;
[L217]               __tmp__sum_minters2 := sum_minters2;
[L218]               __tmp__Length := Length;
[L219]               __tmp__now := now;
[L220]               __tmp___balances_ERC20 := _balances_ERC20;
[L221]               __tmp___allowances_ERC20 := _allowances_ERC20;
[L222]               __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L223]               __tmp___name_ERC20Detailed := _name_ERC20Detailed;
[L224]               __tmp___symbol_ERC20Detailed := _symbol_ERC20Detailed;
[L225]               __tmp___decimals_ERC20Detailed := _decimals_ERC20Detailed;
[L226]               __tmp___cap_ERC20Detailed := _cap_ERC20Detailed;
[L227]               __tmp__governance_GOF := governance_GOF;
[L228]               __tmp__pendingGov_GOF := pendingGov_GOF;
[L229]               __tmp__minters_GOF := minters_GOF;
[L230]   CALL        call __ret_0_ := transfer~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, recipient_s140, amount_s140);
[L939]   COND TRUE   __tmp__DType[this] == GOF
[L940]   CALL        call __var_1 := _msgSender_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L902]               __ret_0_ := msgsender_MSG;
[L940]   RET         call __var_1 := _msgSender_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L941]   COND FALSE  !(revert)
[L952]   COND TRUE   __tmp__DType[this] == GOF
[L953]   CALL        call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, __var_1, recipient_s140, amount_s140);
[L1216]              __var_6 := null;
[L1217]  COND FALSE  !(!(sender_s329 != null))
[L1221]              __var_7 := null;
[L1222]  COND FALSE  !(!(recipient_s329 != null))
[L1226]  COND TRUE   __tmp__DType[this] == GOF
[L1227]  CALL        call _beforeTokenTransfer~address~address~uint256_GOF__fail(this, msgsender_MSG, msgvalue_MSG, sender_s329, recipient_s329, amount_s329);
[L1415]  COND TRUE   __tmp__DType[this] == GOF
[L1416]  CALL        call _beforeTokenTransfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, from_s867, to_s867, amount_s867);
[L1416]  RET         call _beforeTokenTransfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, from_s867, to_s867, amount_s867);
[L1417]  COND FALSE  !(revert)
[L1423]              __var_13 := null;
[L1424]  COND FALSE  !(from_s867 == null)
[L1227]  RET         call _beforeTokenTransfer~address~address~uint256_GOF__fail(this, msgsender_MSG, msgvalue_MSG, sender_s329, recipient_s329, amount_s329);
[L1228]  COND FALSE  !(revert)
[L1239]  CALL        call __var_8 := sub~uint256~uint256~string_SafeMath__fail(this, this, 0, __tmp___balances_ERC20[this][sender_s329], amount_s329, 1713428628);
[L1387]  COND TRUE   !(b_s609 <= a_s609)
[L1388]              revert := true;
[L1239]  RET         call __var_8 := sub~uint256~uint256~string_SafeMath__fail(this, this, 0, __tmp___balances_ERC20[this][sender_s329], amount_s329, 1713428628);
[L1240]  COND TRUE   revert
[L953]   RET         call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, __var_1, recipient_s140, amount_s140);
[L954]   COND TRUE   revert
[L230]   RET         call __ret_0_ := transfer~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, recipient_s140, amount_s140);
[L231]               assume revert || gas < 0;
[L2538]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s140, amount_s140);
[L2579]  RET         call CorralChoice_GOF(this);

Loop:
[L2579]        assume true;

[2020-11-24 19:13:04,299 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 19:13:04,299 INFO  L82        PathProgramCache]: Analyzing trace with hash -954716735, now seen corresponding path program 1 times
[2020-11-24 19:13:04,300 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 19:13:04,308 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 19:13:04,358 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 19:13:04,358 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 19:13:04,358 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [10] imperfect sequences [] total 10
[2020-11-24 19:13:04,359 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 19:13:04,359 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 10 interpolants.
[2020-11-24 19:13:04,359 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=18, Invalid=72, Unknown=0, NotChecked=0, Total=90
[2020-11-24 19:13:04,359 INFO  L87              Difference]: Start difference. First operand 315 states and 324 transitions. cyclomatic complexity: 10 Second operand 10 states.
[2020-11-24 19:13:04,525 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 19:13:04,526 INFO  L93              Difference]: Finished difference Result 338 states and 346 transitions.
[2020-11-24 19:13:04,526 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 11 states. 
[2020-11-24 19:13:04,526 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 338 states and 346 transitions.
[2020-11-24 19:13:04,527 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 2
[2020-11-24 19:13:04,528 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 338 states to 327 states and 335 transitions.
[2020-11-24 19:13:04,528 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 155
[2020-11-24 19:13:04,528 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 155
[2020-11-24 19:13:04,529 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 327 states and 335 transitions.
[2020-11-24 19:13:04,529 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 19:13:04,529 INFO  L728         BuchiCegarLoop]: Abstraction has 327 states and 335 transitions.
[2020-11-24 19:13:04,529 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 327 states and 335 transitions.
[2020-11-24 19:13:04,532 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 327 to 310.
[2020-11-24 19:13:04,532 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 310 states.
[2020-11-24 19:13:04,533 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 310 states to 310 states and 318 transitions.
[2020-11-24 19:13:04,533 INFO  L751         BuchiCegarLoop]: Abstraction has 310 states and 318 transitions.
[2020-11-24 19:13:04,533 INFO  L631         BuchiCegarLoop]: Abstraction has 310 states and 318 transitions.
[2020-11-24 19:13:04,533 INFO  L445         BuchiCegarLoop]: ======== Iteration 9============
[2020-11-24 19:13:04,533 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 310 states and 318 transitions.
[2020-11-24 19:13:04,534 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 19:13:04,534 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 19:13:04,534 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 19:13:04,534 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 19:13:04,534 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L2]                 success_transfer_ERC200 := false;
[L2]                 call_transfer_ERC200 := false;
[L2]     CALL        call main();
[L2574]              assume null == 0;
[L2575]  CALL        call this := FreshRefGenerator__success();
[L894]               havoc newRef;
[L895]               assume Alloc[newRef] == false;
[L896]               Alloc[newRef] := true;
[L897]               assume newRef != null;
[L2575]  RET         call this := FreshRefGenerator__success();
[L2576]              assume now >= 0;
[L2577]              assume DType[this] == GOF;
[L2578]              assume !revert && gas >= 0;
[L2579]  CALL        call CorralChoice_GOF(this);
[L2472]              havoc msgsender_MSG;
[L2473]              havoc msgvalue_MSG;
[L2474]              havoc choice;
[L2475]              havoc __ret_0_totalSupply;
[L2476]              havoc account_s121;
[L2477]              havoc __ret_0_balanceOf;
[L2478]              havoc recipient_s140;
[L2479]              havoc amount_s140;
[L2480]              havoc __ret_0_transfer;
[L2481]              havoc owner_s156;
[L2482]              havoc spender_s156;
[L2483]              havoc __ret_0_allowance;
[L2484]              havoc spender_s175;
[L2485]              havoc amount_s175;
[L2486]              havoc __ret_0_approve;
[L2487]              havoc sender_s211;
[L2488]              havoc recipient_s211;
[L2489]              havoc amount_s211;
[L2490]              havoc __ret_0_transferFrom;
[L2491]              havoc spender_s238;
[L2492]              havoc addedValue_s238;
[L2493]              havoc __ret_0_increaseAllowance;
[L2494]              havoc spender_s266;
[L2495]              havoc subtractedValue_s266;
[L2496]              havoc __ret_0_decreaseAllowance;
[L2497]              havoc name_s524;
[L2498]              havoc symbol_s524;
[L2499]              havoc decimals_s524;
[L2500]              havoc cap_s524;
[L2501]              havoc __ret_0_name;
[L2502]              havoc __ret_0_symbol;
[L2503]              havoc __ret_0_decimals;
[L2504]              havoc __ret_0_cap;
[L2505]              havoc __ret_0_governance;
[L2506]              havoc __ret_0_pendingGov;
[L2507]              havoc arg870_s0;
[L2508]              havoc __ret_0_minters;
[L2509]              havoc _account_s750;
[L2510]              havoc _amount_s750;
[L2511]              havoc _minter_s764;
[L2512]              havoc _minter_s778;
[L2513]              havoc _pendingGov_s799;
[L2514]              havoc tmpNow;
[L2515]              havoc gas;
[L2516]              assume gas > 4000000 && gas <= 8000000;
[L2517]              tmpNow := now;
[L2518]              havoc now;
[L2519]              assume now > tmpNow;
[L2520]              assume msgsender_MSG != null;
[L2521]  COND FALSE  !(choice == 7)
[L2527]  COND FALSE  !(choice == 6)
[L2533]  COND TRUE   choice == 5
[L2534]              gas := gas - 21000;
[L2535]  COND TRUE   gas >= 0
[L2536]              assume amount_s140 >= 0 && amount_s140 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2537]              assume msgvalue_MSG == 0;
[L2538]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s140, amount_s140);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == recipient_s140 && amount_s140 <= _balances_ERC20[this][msgsender_MSG]) && amount_s140 >= 0) && amount_s140 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s140] >= 0) && _balances_ERC20[this][recipient_s140] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_ERC200 := true;
[L2]                 call_transfer_ERC200 := false;
[L2]                 revert := revert_hold;
[L204]               havoc __exception;
[L205]               revert := false;
[L206]   COND TRUE   __exception
[L207]               __tmp__Balance := Balance;
[L208]               __tmp__DType := DType;
[L209]               __tmp__Alloc := Alloc;
[L210]               __tmp__balance_ADDR := balance_ADDR;
[L211]               __tmp__M_Ref_int := M_Ref_int;
[L212]               __tmp__sum__balances0 := sum__balances0;
[L213]               __tmp__alloc__allowances_ERC20_lvl0 := alloc__allowances_ERC20_lvl0;
[L214]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L215]               __tmp__sum__allowances1 := sum__allowances1;
[L216]               __tmp__M_Ref_bool := M_Ref_bool;
[L217]               __tmp__sum_minters2 := sum_minters2;
[L218]               __tmp__Length := Length;
[L219]               __tmp__now := now;
[L220]               __tmp___balances_ERC20 := _balances_ERC20;
[L221]               __tmp___allowances_ERC20 := _allowances_ERC20;
[L222]               __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L223]               __tmp___name_ERC20Detailed := _name_ERC20Detailed;
[L224]               __tmp___symbol_ERC20Detailed := _symbol_ERC20Detailed;
[L225]               __tmp___decimals_ERC20Detailed := _decimals_ERC20Detailed;
[L226]               __tmp___cap_ERC20Detailed := _cap_ERC20Detailed;
[L227]               __tmp__governance_GOF := governance_GOF;
[L228]               __tmp__pendingGov_GOF := pendingGov_GOF;
[L229]               __tmp__minters_GOF := minters_GOF;
[L230]   CALL        call __ret_0_ := transfer~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, recipient_s140, amount_s140);
[L939]   COND TRUE   __tmp__DType[this] == GOF
[L940]   CALL        call __var_1 := _msgSender_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L902]               __ret_0_ := msgsender_MSG;
[L940]   RET         call __var_1 := _msgSender_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L941]   COND FALSE  !(revert)
[L952]   COND TRUE   __tmp__DType[this] == GOF
[L953]   CALL        call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, __var_1, recipient_s140, amount_s140);
[L1216]              __var_6 := null;
[L1217]  COND FALSE  !(!(sender_s329 != null))
[L1221]              __var_7 := null;
[L1222]  COND FALSE  !(!(recipient_s329 != null))
[L1226]  COND TRUE   __tmp__DType[this] == GOF
[L1227]  CALL        call _beforeTokenTransfer~address~address~uint256_GOF__fail(this, msgsender_MSG, msgvalue_MSG, sender_s329, recipient_s329, amount_s329);
[L1415]  COND TRUE   __tmp__DType[this] == GOF
[L1416]  CALL        call _beforeTokenTransfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, from_s867, to_s867, amount_s867);
[L1416]  RET         call _beforeTokenTransfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, from_s867, to_s867, amount_s867);
[L1417]  COND FALSE  !(revert)
[L1423]              __var_13 := null;
[L1424]  COND TRUE   from_s867 == null
[L1425]  COND TRUE   __tmp__DType[this] == GOF
[L1426]  CALL        call __var_15 := totalSupply_ERC20__fail(this, msgsender_MSG, msgvalue_MSG);
[L914]               __ret_0_ := __tmp___totalSupply_ERC20[this];
[L1426]  RET         call __var_15 := totalSupply_ERC20__fail(this, msgsender_MSG, msgvalue_MSG);
[L1427]  COND FALSE  !(revert)
[L1433]  CALL        call __var_14 := add~uint256~uint256_SafeMath__fail(this, this, 0, __var_15, amount_s867);
[L1363]              c_s582 := (a_s582 + b_s582) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1364]  COND TRUE   !(c_s582 >= a_s582)
[L1365]              revert := true;
[L1433]  RET         call __var_14 := add~uint256~uint256_SafeMath__fail(this, this, 0, __var_15, amount_s867);
[L1434]  COND TRUE   revert
[L1227]  RET         call _beforeTokenTransfer~address~address~uint256_GOF__fail(this, msgsender_MSG, msgvalue_MSG, sender_s329, recipient_s329, amount_s329);
[L1228]  COND TRUE   revert
[L953]   RET         call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, __var_1, recipient_s140, amount_s140);
[L954]   COND TRUE   revert
[L230]   RET         call __ret_0_ := transfer~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, recipient_s140, amount_s140);
[L231]               assume revert || gas < 0;
[L2538]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s140, amount_s140);
[L2579]  RET         call CorralChoice_GOF(this);

Loop:
[L2579]        assume true;

[2020-11-24 19:13:04,536 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 19:13:04,536 INFO  L82        PathProgramCache]: Analyzing trace with hash 1772029478, now seen corresponding path program 1 times
[2020-11-24 19:13:04,537 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 19:13:04,543 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 19:13:04,562 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 19:13:04,562 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 19:13:04,562 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [9] imperfect sequences [] total 9
[2020-11-24 19:13:04,563 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 19:13:04,563 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 9 interpolants.
[2020-11-24 19:13:04,563 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=15, Invalid=57, Unknown=0, NotChecked=0, Total=72
[2020-11-24 19:13:04,563 INFO  L87              Difference]: Start difference. First operand 310 states and 318 transitions. cyclomatic complexity: 9 Second operand 9 states.
[2020-11-24 19:13:04,574 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 19:13:04,574 INFO  L93              Difference]: Finished difference Result 343 states and 353 transitions.
[2020-11-24 19:13:04,574 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 9 states. 
[2020-11-24 19:13:04,574 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 343 states and 353 transitions.
[2020-11-24 19:13:04,575 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 19:13:04,576 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 343 states to 282 states and 286 transitions.
[2020-11-24 19:13:04,576 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 131
[2020-11-24 19:13:04,577 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 206
[2020-11-24 19:13:04,577 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 282 states and 286 transitions.
[2020-11-24 19:13:04,577 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 19:13:04,577 INFO  L728         BuchiCegarLoop]: Abstraction has 282 states and 286 transitions.
[2020-11-24 19:13:04,577 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 282 states and 286 transitions.
[2020-11-24 19:13:04,579 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 282 to 282.
[2020-11-24 19:13:04,579 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 282 states.
[2020-11-24 19:13:04,580 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 282 states to 282 states and 286 transitions.
[2020-11-24 19:13:04,580 INFO  L751         BuchiCegarLoop]: Abstraction has 282 states and 286 transitions.
[2020-11-24 19:13:04,580 INFO  L631         BuchiCegarLoop]: Abstraction has 282 states and 286 transitions.
[2020-11-24 19:13:04,580 INFO  L445         BuchiCegarLoop]: ======== Iteration 10============
[2020-11-24 19:13:04,580 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 282 states and 286 transitions.
[2020-11-24 19:13:04,580 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 19:13:04,581 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 19:13:04,581 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 19:13:04,581 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 19:13:04,581 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L2]                 success_transfer_ERC200 := false;
[L2]                 call_transfer_ERC200 := false;
[L2]     CALL        call main();
[L2574]              assume null == 0;
[L2575]  CALL        call this := FreshRefGenerator__success();
[L894]               havoc newRef;
[L895]               assume Alloc[newRef] == false;
[L896]               Alloc[newRef] := true;
[L897]               assume newRef != null;
[L2575]  RET         call this := FreshRefGenerator__success();
[L2576]              assume now >= 0;
[L2577]              assume DType[this] == GOF;
[L2578]              assume !revert && gas >= 0;
[L2579]  CALL        call CorralChoice_GOF(this);
[L2472]              havoc msgsender_MSG;
[L2473]              havoc msgvalue_MSG;
[L2474]              havoc choice;
[L2475]              havoc __ret_0_totalSupply;
[L2476]              havoc account_s121;
[L2477]              havoc __ret_0_balanceOf;
[L2478]              havoc recipient_s140;
[L2479]              havoc amount_s140;
[L2480]              havoc __ret_0_transfer;
[L2481]              havoc owner_s156;
[L2482]              havoc spender_s156;
[L2483]              havoc __ret_0_allowance;
[L2484]              havoc spender_s175;
[L2485]              havoc amount_s175;
[L2486]              havoc __ret_0_approve;
[L2487]              havoc sender_s211;
[L2488]              havoc recipient_s211;
[L2489]              havoc amount_s211;
[L2490]              havoc __ret_0_transferFrom;
[L2491]              havoc spender_s238;
[L2492]              havoc addedValue_s238;
[L2493]              havoc __ret_0_increaseAllowance;
[L2494]              havoc spender_s266;
[L2495]              havoc subtractedValue_s266;
[L2496]              havoc __ret_0_decreaseAllowance;
[L2497]              havoc name_s524;
[L2498]              havoc symbol_s524;
[L2499]              havoc decimals_s524;
[L2500]              havoc cap_s524;
[L2501]              havoc __ret_0_name;
[L2502]              havoc __ret_0_symbol;
[L2503]              havoc __ret_0_decimals;
[L2504]              havoc __ret_0_cap;
[L2505]              havoc __ret_0_governance;
[L2506]              havoc __ret_0_pendingGov;
[L2507]              havoc arg870_s0;
[L2508]              havoc __ret_0_minters;
[L2509]              havoc _account_s750;
[L2510]              havoc _amount_s750;
[L2511]              havoc _minter_s764;
[L2512]              havoc _minter_s778;
[L2513]              havoc _pendingGov_s799;
[L2514]              havoc tmpNow;
[L2515]              havoc gas;
[L2516]              assume gas > 4000000 && gas <= 8000000;
[L2517]              tmpNow := now;
[L2518]              havoc now;
[L2519]              assume now > tmpNow;
[L2520]              assume msgsender_MSG != null;
[L2521]  COND FALSE  !(choice == 7)
[L2527]  COND FALSE  !(choice == 6)
[L2533]  COND TRUE   choice == 5
[L2534]              gas := gas - 21000;
[L2535]  COND TRUE   gas >= 0
[L2536]              assume amount_s140 >= 0 && amount_s140 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2537]              assume msgvalue_MSG == 0;
[L2538]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s140, amount_s140);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == recipient_s140 && amount_s140 <= _balances_ERC20[this][msgsender_MSG]) && amount_s140 >= 0) && amount_s140 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s140] >= 0) && _balances_ERC20[this][recipient_s140] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_ERC200 := true;
[L2]                 call_transfer_ERC200 := false;
[L2]                 revert := revert_hold;
[L204]               havoc __exception;
[L205]               revert := false;
[L206]   COND TRUE   __exception
[L207]               __tmp__Balance := Balance;
[L208]               __tmp__DType := DType;
[L209]               __tmp__Alloc := Alloc;
[L210]               __tmp__balance_ADDR := balance_ADDR;
[L211]               __tmp__M_Ref_int := M_Ref_int;
[L212]               __tmp__sum__balances0 := sum__balances0;
[L213]               __tmp__alloc__allowances_ERC20_lvl0 := alloc__allowances_ERC20_lvl0;
[L214]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L215]               __tmp__sum__allowances1 := sum__allowances1;
[L216]               __tmp__M_Ref_bool := M_Ref_bool;
[L217]               __tmp__sum_minters2 := sum_minters2;
[L218]               __tmp__Length := Length;
[L219]               __tmp__now := now;
[L220]               __tmp___balances_ERC20 := _balances_ERC20;
[L221]               __tmp___allowances_ERC20 := _allowances_ERC20;
[L222]               __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L223]               __tmp___name_ERC20Detailed := _name_ERC20Detailed;
[L224]               __tmp___symbol_ERC20Detailed := _symbol_ERC20Detailed;
[L225]               __tmp___decimals_ERC20Detailed := _decimals_ERC20Detailed;
[L226]               __tmp___cap_ERC20Detailed := _cap_ERC20Detailed;
[L227]               __tmp__governance_GOF := governance_GOF;
[L228]               __tmp__pendingGov_GOF := pendingGov_GOF;
[L229]               __tmp__minters_GOF := minters_GOF;
[L230]   CALL        call __ret_0_ := transfer~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, recipient_s140, amount_s140);
[L939]   COND TRUE   __tmp__DType[this] == GOF
[L940]   CALL        call __var_1 := _msgSender_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L902]               __ret_0_ := msgsender_MSG;
[L940]   RET         call __var_1 := _msgSender_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L941]   COND FALSE  !(revert)
[L952]   COND TRUE   __tmp__DType[this] == GOF
[L953]   CALL        call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, __var_1, recipient_s140, amount_s140);
[L1216]              __var_6 := null;
[L1217]  COND FALSE  !(!(sender_s329 != null))
[L1221]              __var_7 := null;
[L1222]  COND FALSE  !(!(recipient_s329 != null))
[L1226]  COND TRUE   __tmp__DType[this] == GOF
[L1227]  CALL        call _beforeTokenTransfer~address~address~uint256_GOF__fail(this, msgsender_MSG, msgvalue_MSG, sender_s329, recipient_s329, amount_s329);
[L1415]  COND TRUE   __tmp__DType[this] == GOF
[L1416]  CALL        call _beforeTokenTransfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, from_s867, to_s867, amount_s867);
[L1416]  RET         call _beforeTokenTransfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, from_s867, to_s867, amount_s867);
[L1417]  COND FALSE  !(revert)
[L1423]              __var_13 := null;
[L1424]  COND FALSE  !(from_s867 == null)
[L1227]  RET         call _beforeTokenTransfer~address~address~uint256_GOF__fail(this, msgsender_MSG, msgvalue_MSG, sender_s329, recipient_s329, amount_s329);
[L1228]  COND FALSE  !(revert)
[L1239]  CALL        call __var_8 := sub~uint256~uint256~string_SafeMath__fail(this, this, 0, __tmp___balances_ERC20[this][sender_s329], amount_s329, 1713428628);
[L1387]  COND FALSE  !(!(b_s609 <= a_s609))
[L1391]              c_s609 := (a_s609 - b_s609) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1392]              __ret_0_ := c_s609;
[L1239]  RET         call __var_8 := sub~uint256~uint256~string_SafeMath__fail(this, this, 0, __tmp___balances_ERC20[this][sender_s329], amount_s329, 1713428628);
[L1240]  COND FALSE  !(revert)
[L1243]              __tmp__sum__balances0[this] := __tmp__sum__balances0[this] - __tmp___balances_ERC20[this][sender_s329];
[L1244]              __tmp___balances_ERC20[this][sender_s329] := __var_8;
[L1245]              __tmp__sum__balances0[this] := __tmp__sum__balances0[this] + __tmp___balances_ERC20[this][sender_s329];
[L1246]  CALL        call __var_9 := add~uint256~uint256_SafeMath__fail(this, this, 0, __tmp___balances_ERC20[this][recipient_s329], amount_s329);
[L1363]              c_s582 := (a_s582 + b_s582) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1364]  COND TRUE   !(c_s582 >= a_s582)
[L1365]              revert := true;
[L1246]  RET         call __var_9 := add~uint256~uint256_SafeMath__fail(this, this, 0, __tmp___balances_ERC20[this][recipient_s329], amount_s329);
[L1247]  COND TRUE   revert
[L953]   RET         call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, __var_1, recipient_s140, amount_s140);
[L954]   COND TRUE   revert
[L230]   RET         call __ret_0_ := transfer~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, recipient_s140, amount_s140);
[L231]               assume revert || gas < 0;
[L2538]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s140, amount_s140);
[L2579]  RET         call CorralChoice_GOF(this);

Loop:
[L2579]        assume true;

[2020-11-24 19:13:04,583 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 19:13:04,583 INFO  L82        PathProgramCache]: Analyzing trace with hash 306755448, now seen corresponding path program 1 times
[2020-11-24 19:13:04,584 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 19:13:04,597 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 19:13:04,716 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 19:13:04,716 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 19:13:04,716 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [18] imperfect sequences [] total 18
[2020-11-24 19:13:04,716 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 19:13:04,717 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 18 interpolants.
[2020-11-24 19:13:04,717 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=37, Invalid=269, Unknown=0, NotChecked=0, Total=306
[2020-11-24 19:13:04,717 INFO  L87              Difference]: Start difference. First operand 282 states and 286 transitions. cyclomatic complexity: 5 Second operand 18 states.
[2020-11-24 19:13:04,988 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 19:13:04,988 INFO  L93              Difference]: Finished difference Result 295 states and 298 transitions.
[2020-11-24 19:13:04,988 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 20 states. 
[2020-11-24 19:13:04,988 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 295 states and 298 transitions.
[2020-11-24 19:13:04,989 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 2
[2020-11-24 19:13:04,990 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 295 states to 280 states and 283 transitions.
[2020-11-24 19:13:04,990 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 204
[2020-11-24 19:13:04,990 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 204
[2020-11-24 19:13:04,990 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 280 states and 283 transitions.
[2020-11-24 19:13:04,991 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 19:13:04,991 INFO  L728         BuchiCegarLoop]: Abstraction has 280 states and 283 transitions.
[2020-11-24 19:13:04,991 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 280 states and 283 transitions.
[2020-11-24 19:13:04,993 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 280 to 273.
[2020-11-24 19:13:04,993 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 273 states.
[2020-11-24 19:13:04,993 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 273 states to 273 states and 276 transitions.
[2020-11-24 19:13:04,993 INFO  L751         BuchiCegarLoop]: Abstraction has 273 states and 276 transitions.
[2020-11-24 19:13:04,993 INFO  L631         BuchiCegarLoop]: Abstraction has 273 states and 276 transitions.
[2020-11-24 19:13:04,993 INFO  L445         BuchiCegarLoop]: ======== Iteration 11============
[2020-11-24 19:13:04,993 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 273 states and 276 transitions.
[2020-11-24 19:13:04,994 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 19:13:04,994 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 19:13:04,994 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 19:13:04,995 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 19:13:04,995 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L2]                 success_transfer_ERC200 := false;
[L2]                 call_transfer_ERC200 := false;
[L2]     CALL        call main();
[L2574]              assume null == 0;
[L2575]  CALL        call this := FreshRefGenerator__success();
[L894]               havoc newRef;
[L895]               assume Alloc[newRef] == false;
[L896]               Alloc[newRef] := true;
[L897]               assume newRef != null;
[L2575]  RET         call this := FreshRefGenerator__success();
[L2576]              assume now >= 0;
[L2577]              assume DType[this] == GOF;
[L2578]              assume !revert && gas >= 0;
[L2579]  CALL        call CorralChoice_GOF(this);
[L2472]              havoc msgsender_MSG;
[L2473]              havoc msgvalue_MSG;
[L2474]              havoc choice;
[L2475]              havoc __ret_0_totalSupply;
[L2476]              havoc account_s121;
[L2477]              havoc __ret_0_balanceOf;
[L2478]              havoc recipient_s140;
[L2479]              havoc amount_s140;
[L2480]              havoc __ret_0_transfer;
[L2481]              havoc owner_s156;
[L2482]              havoc spender_s156;
[L2483]              havoc __ret_0_allowance;
[L2484]              havoc spender_s175;
[L2485]              havoc amount_s175;
[L2486]              havoc __ret_0_approve;
[L2487]              havoc sender_s211;
[L2488]              havoc recipient_s211;
[L2489]              havoc amount_s211;
[L2490]              havoc __ret_0_transferFrom;
[L2491]              havoc spender_s238;
[L2492]              havoc addedValue_s238;
[L2493]              havoc __ret_0_increaseAllowance;
[L2494]              havoc spender_s266;
[L2495]              havoc subtractedValue_s266;
[L2496]              havoc __ret_0_decreaseAllowance;
[L2497]              havoc name_s524;
[L2498]              havoc symbol_s524;
[L2499]              havoc decimals_s524;
[L2500]              havoc cap_s524;
[L2501]              havoc __ret_0_name;
[L2502]              havoc __ret_0_symbol;
[L2503]              havoc __ret_0_decimals;
[L2504]              havoc __ret_0_cap;
[L2505]              havoc __ret_0_governance;
[L2506]              havoc __ret_0_pendingGov;
[L2507]              havoc arg870_s0;
[L2508]              havoc __ret_0_minters;
[L2509]              havoc _account_s750;
[L2510]              havoc _amount_s750;
[L2511]              havoc _minter_s764;
[L2512]              havoc _minter_s778;
[L2513]              havoc _pendingGov_s799;
[L2514]              havoc tmpNow;
[L2515]              havoc gas;
[L2516]              assume gas > 4000000 && gas <= 8000000;
[L2517]              tmpNow := now;
[L2518]              havoc now;
[L2519]              assume now > tmpNow;
[L2520]              assume msgsender_MSG != null;
[L2521]  COND FALSE  !(choice == 7)
[L2527]  COND FALSE  !(choice == 6)
[L2533]  COND TRUE   choice == 5
[L2534]              gas := gas - 21000;
[L2535]  COND TRUE   gas >= 0
[L2536]              assume amount_s140 >= 0 && amount_s140 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2537]              assume msgvalue_MSG == 0;
[L2538]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s140, amount_s140);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == recipient_s140 && amount_s140 <= _balances_ERC20[this][msgsender_MSG]) && amount_s140 >= 0) && amount_s140 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s140] >= 0) && _balances_ERC20[this][recipient_s140] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_ERC200 := true;
[L2]                 call_transfer_ERC200 := false;
[L2]                 revert := revert_hold;
[L204]               havoc __exception;
[L205]               revert := false;
[L206]   COND TRUE   __exception
[L207]               __tmp__Balance := Balance;
[L208]               __tmp__DType := DType;
[L209]               __tmp__Alloc := Alloc;
[L210]               __tmp__balance_ADDR := balance_ADDR;
[L211]               __tmp__M_Ref_int := M_Ref_int;
[L212]               __tmp__sum__balances0 := sum__balances0;
[L213]               __tmp__alloc__allowances_ERC20_lvl0 := alloc__allowances_ERC20_lvl0;
[L214]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L215]               __tmp__sum__allowances1 := sum__allowances1;
[L216]               __tmp__M_Ref_bool := M_Ref_bool;
[L217]               __tmp__sum_minters2 := sum_minters2;
[L218]               __tmp__Length := Length;
[L219]               __tmp__now := now;
[L220]               __tmp___balances_ERC20 := _balances_ERC20;
[L221]               __tmp___allowances_ERC20 := _allowances_ERC20;
[L222]               __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L223]               __tmp___name_ERC20Detailed := _name_ERC20Detailed;
[L224]               __tmp___symbol_ERC20Detailed := _symbol_ERC20Detailed;
[L225]               __tmp___decimals_ERC20Detailed := _decimals_ERC20Detailed;
[L226]               __tmp___cap_ERC20Detailed := _cap_ERC20Detailed;
[L227]               __tmp__governance_GOF := governance_GOF;
[L228]               __tmp__pendingGov_GOF := pendingGov_GOF;
[L229]               __tmp__minters_GOF := minters_GOF;
[L230]   CALL        call __ret_0_ := transfer~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, recipient_s140, amount_s140);
[L939]   COND TRUE   __tmp__DType[this] == GOF
[L940]   CALL        call __var_1 := _msgSender_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L902]               __ret_0_ := msgsender_MSG;
[L940]   RET         call __var_1 := _msgSender_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L941]   COND FALSE  !(revert)
[L952]   COND TRUE   __tmp__DType[this] == GOF
[L953]   CALL        call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, __var_1, recipient_s140, amount_s140);
[L1216]              __var_6 := null;
[L1217]  COND FALSE  !(!(sender_s329 != null))
[L1221]              __var_7 := null;
[L1222]  COND FALSE  !(!(recipient_s329 != null))
[L1226]  COND TRUE   __tmp__DType[this] == GOF
[L1227]  CALL        call _beforeTokenTransfer~address~address~uint256_GOF__fail(this, msgsender_MSG, msgvalue_MSG, sender_s329, recipient_s329, amount_s329);
[L1415]  COND TRUE   __tmp__DType[this] == GOF
[L1416]  CALL        call _beforeTokenTransfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, from_s867, to_s867, amount_s867);
[L1416]  RET         call _beforeTokenTransfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, from_s867, to_s867, amount_s867);
[L1417]  COND FALSE  !(revert)
[L1423]              __var_13 := null;
[L1424]  COND FALSE  !(from_s867 == null)
[L1227]  RET         call _beforeTokenTransfer~address~address~uint256_GOF__fail(this, msgsender_MSG, msgvalue_MSG, sender_s329, recipient_s329, amount_s329);
[L1228]  COND FALSE  !(revert)
[L1239]  CALL        call __var_8 := sub~uint256~uint256~string_SafeMath__fail(this, this, 0, __tmp___balances_ERC20[this][sender_s329], amount_s329, 1713428628);
[L1387]  COND FALSE  !(!(b_s609 <= a_s609))
[L1391]              c_s609 := (a_s609 - b_s609) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1392]              __ret_0_ := c_s609;
[L1239]  RET         call __var_8 := sub~uint256~uint256~string_SafeMath__fail(this, this, 0, __tmp___balances_ERC20[this][sender_s329], amount_s329, 1713428628);
[L1240]  COND FALSE  !(revert)
[L1243]              __tmp__sum__balances0[this] := __tmp__sum__balances0[this] - __tmp___balances_ERC20[this][sender_s329];
[L1244]              __tmp___balances_ERC20[this][sender_s329] := __var_8;
[L1245]              __tmp__sum__balances0[this] := __tmp__sum__balances0[this] + __tmp___balances_ERC20[this][sender_s329];
[L1246]  CALL        call __var_9 := add~uint256~uint256_SafeMath__fail(this, this, 0, __tmp___balances_ERC20[this][recipient_s329], amount_s329);
[L1363]              c_s582 := (a_s582 + b_s582) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1364]  COND FALSE  !(!(c_s582 >= a_s582))
[L1368]              __ret_0_ := c_s582;
[L1246]  RET         call __var_9 := add~uint256~uint256_SafeMath__fail(this, this, 0, __tmp___balances_ERC20[this][recipient_s329], amount_s329);
[L1247]  COND FALSE  !(revert)
[L1250]              __tmp__sum__balances0[this] := __tmp__sum__balances0[this] - __tmp___balances_ERC20[this][recipient_s329];
[L1251]              __tmp___balances_ERC20[this][recipient_s329] := __var_9;
[L1252]              __tmp__sum__balances0[this] := __tmp__sum__balances0[this] + __tmp___balances_ERC20[this][recipient_s329];
[L953]   RET         call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, __var_1, recipient_s140, amount_s140);
[L954]   COND FALSE  !(revert)
[L965]               __ret_0_ := true;
[L230]   RET         call __ret_0_ := transfer~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, recipient_s140, amount_s140);
[L231]               assume revert || gas < 0;
[L2538]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s140, amount_s140);
[L2579]  RET         call CorralChoice_GOF(this);

Loop:
[L2579]        assume true;

[2020-11-24 19:13:04,996 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 19:13:04,997 INFO  L82        PathProgramCache]: Analyzing trace with hash -1874227909, now seen corresponding path program 1 times
[2020-11-24 19:13:04,997 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 19:13:05,003 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 19:13:05,018 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 19:13:05,019 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 19:13:05,019 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [5] imperfect sequences [] total 5
[2020-11-24 19:13:05,019 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 19:13:05,019 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 5 interpolants.
[2020-11-24 19:13:05,019 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=7, Invalid=13, Unknown=0, NotChecked=0, Total=20
[2020-11-24 19:13:05,019 INFO  L87              Difference]: Start difference. First operand 273 states and 276 transitions. cyclomatic complexity: 4 Second operand 5 states.
[2020-11-24 19:13:05,041 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 19:13:05,041 INFO  L93              Difference]: Finished difference Result 273 states and 275 transitions.
[2020-11-24 19:13:05,041 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 5 states. 
[2020-11-24 19:13:05,041 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 273 states and 275 transitions.
[2020-11-24 19:13:05,042 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 19:13:05,043 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 273 states to 184 states and 186 transitions.
[2020-11-24 19:13:05,043 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 108
[2020-11-24 19:13:05,043 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 108
[2020-11-24 19:13:05,043 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 184 states and 186 transitions.
[2020-11-24 19:13:05,043 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 19:13:05,043 INFO  L728         BuchiCegarLoop]: Abstraction has 184 states and 186 transitions.
[2020-11-24 19:13:05,043 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 184 states and 186 transitions.
[2020-11-24 19:13:05,044 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 184 to 184.
[2020-11-24 19:13:05,044 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 184 states.
[2020-11-24 19:13:05,045 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 184 states to 184 states and 186 transitions.
[2020-11-24 19:13:05,045 INFO  L751         BuchiCegarLoop]: Abstraction has 184 states and 186 transitions.
[2020-11-24 19:13:05,045 INFO  L631         BuchiCegarLoop]: Abstraction has 184 states and 186 transitions.
[2020-11-24 19:13:05,045 INFO  L445         BuchiCegarLoop]: ======== Iteration 12============
[2020-11-24 19:13:05,045 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 184 states and 186 transitions.
[2020-11-24 19:13:05,045 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 19:13:05,045 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 19:13:05,045 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 19:13:05,046 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 19:13:05,046 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L2]                 success_transfer_ERC200 := false;
[L2]                 call_transfer_ERC200 := false;
[L2]     CALL        call main();
[L2574]              assume null == 0;
[L2575]  CALL        call this := FreshRefGenerator__success();
[L894]               havoc newRef;
[L895]               assume Alloc[newRef] == false;
[L896]               Alloc[newRef] := true;
[L897]               assume newRef != null;
[L2575]  RET         call this := FreshRefGenerator__success();
[L2576]              assume now >= 0;
[L2577]              assume DType[this] == GOF;
[L2578]              assume !revert && gas >= 0;
[L2579]  CALL        call CorralChoice_GOF(this);
[L2472]              havoc msgsender_MSG;
[L2473]              havoc msgvalue_MSG;
[L2474]              havoc choice;
[L2475]              havoc __ret_0_totalSupply;
[L2476]              havoc account_s121;
[L2477]              havoc __ret_0_balanceOf;
[L2478]              havoc recipient_s140;
[L2479]              havoc amount_s140;
[L2480]              havoc __ret_0_transfer;
[L2481]              havoc owner_s156;
[L2482]              havoc spender_s156;
[L2483]              havoc __ret_0_allowance;
[L2484]              havoc spender_s175;
[L2485]              havoc amount_s175;
[L2486]              havoc __ret_0_approve;
[L2487]              havoc sender_s211;
[L2488]              havoc recipient_s211;
[L2489]              havoc amount_s211;
[L2490]              havoc __ret_0_transferFrom;
[L2491]              havoc spender_s238;
[L2492]              havoc addedValue_s238;
[L2493]              havoc __ret_0_increaseAllowance;
[L2494]              havoc spender_s266;
[L2495]              havoc subtractedValue_s266;
[L2496]              havoc __ret_0_decreaseAllowance;
[L2497]              havoc name_s524;
[L2498]              havoc symbol_s524;
[L2499]              havoc decimals_s524;
[L2500]              havoc cap_s524;
[L2501]              havoc __ret_0_name;
[L2502]              havoc __ret_0_symbol;
[L2503]              havoc __ret_0_decimals;
[L2504]              havoc __ret_0_cap;
[L2505]              havoc __ret_0_governance;
[L2506]              havoc __ret_0_pendingGov;
[L2507]              havoc arg870_s0;
[L2508]              havoc __ret_0_minters;
[L2509]              havoc _account_s750;
[L2510]              havoc _amount_s750;
[L2511]              havoc _minter_s764;
[L2512]              havoc _minter_s778;
[L2513]              havoc _pendingGov_s799;
[L2514]              havoc tmpNow;
[L2515]              havoc gas;
[L2516]              assume gas > 4000000 && gas <= 8000000;
[L2517]              tmpNow := now;
[L2518]              havoc now;
[L2519]              assume now > tmpNow;
[L2520]              assume msgsender_MSG != null;
[L2521]  COND FALSE  !(choice == 7)
[L2527]  COND FALSE  !(choice == 6)
[L2533]  COND TRUE   choice == 5
[L2534]              gas := gas - 21000;
[L2535]  COND TRUE   gas >= 0
[L2536]              assume amount_s140 >= 0 && amount_s140 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2537]              assume msgvalue_MSG == 0;
[L2538]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s140, amount_s140);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == recipient_s140 && amount_s140 <= _balances_ERC20[this][msgsender_MSG]) && amount_s140 >= 0) && amount_s140 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s140] >= 0) && _balances_ERC20[this][recipient_s140] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_ERC200 := true;
[L2]                 call_transfer_ERC200 := false;
[L2]                 revert := revert_hold;
[L204]               havoc __exception;
[L205]               revert := false;
[L206]   COND FALSE  !(__exception)
[L233]   CALL        call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, recipient_s140, amount_s140);
[L972]   COND TRUE   DType[this] == GOF
[L973]   CALL        call __var_1 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L908]               __ret_0_ := msgsender_MSG;
[L973]   RET         call __var_1 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L974]   COND FALSE  !(revert)
[L985]   COND TRUE   DType[this] == GOF
[L986]   CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, __var_1, recipient_s140, amount_s140);
[L1261]              __var_6 := null;
[L1262]  COND FALSE  !(!(sender_s329 != null))
[L1266]              __var_7 := null;
[L1267]  COND FALSE  !(!(recipient_s329 != null))
[L1271]  COND TRUE   DType[this] == GOF
[L1272]  CALL        call _beforeTokenTransfer~address~address~uint256_GOF__success(this, msgsender_MSG, msgvalue_MSG, sender_s329, recipient_s329, amount_s329);
[L1459]  COND TRUE   DType[this] == GOF
[L1460]  CALL        call _beforeTokenTransfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s867, to_s867, amount_s867);
[L1460]  RET         call _beforeTokenTransfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s867, to_s867, amount_s867);
[L1461]  COND FALSE  !(revert)
[L1467]              __var_13 := null;
[L1468]  COND FALSE  !(from_s867 == null)
[L1272]  RET         call _beforeTokenTransfer~address~address~uint256_GOF__success(this, msgsender_MSG, msgvalue_MSG, sender_s329, recipient_s329, amount_s329);
[L1273]  COND FALSE  !(revert)
[L1284]  CALL        call __var_8 := sub~uint256~uint256~string_SafeMath__success(this, this, 0, _balances_ERC20[this][sender_s329], amount_s329, 1713428628);
[L1399]  COND FALSE  !(!(b_s609 <= a_s609))
[L1403]              c_s609 := (a_s609 - b_s609) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1404]              __ret_0_ := c_s609;
[L1284]  RET         call __var_8 := sub~uint256~uint256~string_SafeMath__success(this, this, 0, _balances_ERC20[this][sender_s329], amount_s329, 1713428628);
[L1285]  COND FALSE  !(revert)
[L1288]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][sender_s329];
[L1289]              _balances_ERC20[this][sender_s329] := __var_8;
[L1290]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][sender_s329];
[L1291]  CALL        call __var_9 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][recipient_s329], amount_s329);
[L1375]              c_s582 := (a_s582 + b_s582) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1376]  COND FALSE  !(!(c_s582 >= a_s582))
[L1380]              __ret_0_ := c_s582;
[L1291]  RET         call __var_9 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][recipient_s329], amount_s329);
[L1292]  COND FALSE  !(revert)
[L1295]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][recipient_s329];
[L1296]              _balances_ERC20[this][recipient_s329] := __var_9;
[L1297]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][recipient_s329];
[L1298]              assert { :EventEmitted "Transfer_ERC20" } true;
[L986]   RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, __var_1, recipient_s140, amount_s140);
[L987]   COND FALSE  !(revert)
[L998]               __ret_0_ := true;
[L233]   RET         call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, recipient_s140, amount_s140);
[L234]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !((((((((((__ret_0_ == true && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _balances_ERC20[this] == old(_balances_ERC20[this])) && _allowances_ERC20[this] == old(_allowances_ERC20[this])) && governance_GOF[this] == old(governance_GOF[this])) && pendingGov_GOF[this] == old(pendingGov_GOF[this])) && minters_GOF[this] == old(minters_GOF[this])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this])) && _cap_ERC20Detailed[this] == old(_cap_ERC20Detailed[this]));
[L2]                 revert := revert_hold;
[L2538]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s140, amount_s140);
[L2579]  RET         call CorralChoice_GOF(this);

Loop:
[L2579]        assume true;

[2020-11-24 19:13:05,047 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 19:13:05,047 INFO  L82        PathProgramCache]: Analyzing trace with hash -1735341631, now seen corresponding path program 1 times
[2020-11-24 19:13:05,048 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 19:13:05,071 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 19:13:05,375 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 19:13:05,375 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 19:13:05,376 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [23] imperfect sequences [] total 23
[2020-11-24 19:13:05,376 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 19:13:05,376 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 23 interpolants.
[2020-11-24 19:13:05,376 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=58, Invalid=448, Unknown=0, NotChecked=0, Total=506
[2020-11-24 19:13:05,377 INFO  L87              Difference]: Start difference. First operand 184 states and 186 transitions. cyclomatic complexity: 3 Second operand 23 states.
[2020-11-24 19:13:05,733 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 19:13:05,733 INFO  L93              Difference]: Finished difference Result 182 states and 183 transitions.
[2020-11-24 19:13:05,733 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 23 states. 
[2020-11-24 19:13:05,733 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 182 states and 183 transitions.
[2020-11-24 19:13:05,734 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-24 19:13:05,734 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 182 states to 0 states and 0 transitions.
[2020-11-24 19:13:05,734 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 0
[2020-11-24 19:13:05,734 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 0
[2020-11-24 19:13:05,734 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 0 states and 0 transitions.
[2020-11-24 19:13:05,734 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 19:13:05,734 INFO  L728         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-24 19:13:05,734 INFO  L751         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-24 19:13:05,734 INFO  L631         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-24 19:13:05,734 INFO  L445         BuchiCegarLoop]: ======== Iteration 13============
[2020-11-24 19:13:05,734 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 0 states and 0 transitions.
[2020-11-24 19:13:05,734 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-24 19:13:05,734 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is true
[2020-11-24 19:13:05,737 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 24.11 07:13:05 BasicIcfg
[2020-11-24 19:13:05,738 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-24 19:13:05,738 INFO  L168              Benchmark]: Toolchain (without parser) took 4349.05 ms. Allocated memory was 1.0 GB in the beginning and 1.3 GB in the end (delta: 308.3 MB). Free memory was 940.6 MB in the beginning and 1.1 GB in the end (delta: -146.9 MB). Peak memory consumption was 161.4 MB. Max. memory is 15.3 GB.
[2020-11-24 19:13:05,739 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.14 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-24 19:13:05,739 INFO  L168              Benchmark]: Boogie Preprocessor took 76.89 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 935.2 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-24 19:13:05,739 INFO  L168              Benchmark]: UtopiaSpecLang took 49.03 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 929.8 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-24 19:13:05,740 INFO  L168              Benchmark]: Boogie Printer took 11.99 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 924.5 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-24 19:13:05,740 INFO  L168              Benchmark]: RCFGBuilder took 577.22 ms. Allocated memory is still 1.0 GB. Free memory was 924.5 MB in the beginning and 860.0 MB in the end (delta: 64.4 MB). Peak memory consumption was 64.4 MB. Max. memory is 15.3 GB.
[2020-11-24 19:13:05,740 INFO  L168              Benchmark]: UtopiaLTL2Aut took 39.76 ms. Allocated memory is still 1.0 GB. Free memory was 860.0 MB in the beginning and 856.5 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
[2020-11-24 19:13:05,741 INFO  L168              Benchmark]: BÃ¼chi Program Product took 1044.72 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 61.9 MB). Free memory was 856.5 MB in the beginning and 837.5 MB in the end (delta: 19.0 MB). Peak memory consumption was 140.9 MB. Max. memory is 15.3 GB.
[2020-11-24 19:13:05,741 INFO  L168              Benchmark]: BlockEncodingV2 took 80.63 ms. Allocated memory is still 1.1 GB. Free memory was 837.5 MB in the beginning and 800.0 MB in the end (delta: 37.5 MB). Peak memory consumption was 37.5 MB. Max. memory is 15.3 GB.
[2020-11-24 19:13:05,741 INFO  L168              Benchmark]: BuchiAutomizer took 2466.04 ms. Allocated memory was 1.1 GB in the beginning and 1.3 GB in the end (delta: 246.4 MB). Free memory was 800.0 MB in the beginning and 1.1 GB in the end (delta: -287.4 MB). There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-24 19:13:05,743 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    2236 locations, 4055 edges
  - StatisticsResult: Encoded RCFG
    2156 locations, 3838 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.14 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 76.89 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 935.2 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 49.03 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 929.8 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 11.99 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 924.5 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * RCFGBuilder took 577.22 ms. Allocated memory is still 1.0 GB. Free memory was 924.5 MB in the beginning and 860.0 MB in the end (delta: 64.4 MB). Peak memory consumption was 64.4 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 39.76 ms. Allocated memory is still 1.0 GB. Free memory was 860.0 MB in the beginning and 856.5 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 1044.72 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 61.9 MB). Free memory was 856.5 MB in the beginning and 837.5 MB in the end (delta: 19.0 MB). Peak memory consumption was 140.9 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 80.63 ms. Allocated memory is still 1.1 GB. Free memory was 837.5 MB in the beginning and 800.0 MB in the end (delta: 37.5 MB). Peak memory consumption was 37.5 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 2466.04 ms. Allocated memory was 1.1 GB in the beginning and 1.3 GB in the end (delta: 246.4 MB). Free memory was 800.0 MB in the beginning and 1.1 GB in the end (delta: -287.4 MB). There was no memory consumed. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    912 locations, 1251 edges
  - StatisticsResult: BuchiProgram size
    2236 locations, 4055 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 12 terminating modules (12 trivial, 0 deterministic, 0 nondeterministic). 12 modules have a trivial ranking function, the largest among these consists of 23 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 2.4s and 13 iterations.  TraceHistogramMax:1. Analysis of lassos took 0.8s. Construction of modules took 0.6s. BÃ¼chi inclusion checks took 0.6s. Highest rank in rank-based complementation 0. Minimization of det autom 12. Minimization of nondet autom 0. Automata minimization 0.0s AutomataMinimizationTime, 11 MinimizatonAttempts, 53 StatesRemovedByMinimization, 5 NontrivialMinimizations. Non-live state removal took 0.0s Buchi closure took 0.0s. Biggest automaton had 349 states and ocurred in iteration 2.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 4584 SDtfs, 2945 SDslu, 14583 SDs, 0 SdLazy, 5788 SolverSat, 940 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 0.6s Time	LassoAnalysisResults: nont0 unkn0 SFLI0 SFLT0 conc0 concLT0 SILN0 SILU12 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - AllSpecificationsHoldResult: All specifications hold
    Buchi Automizer proved that the LTL property ! ( ( []( (call_transfer_ERC200) ==> ( <>(success_transfer_ERC200) ) ) )) holds
RESULT: Ultimate proved your program to be correct!
Received shutdown request...
