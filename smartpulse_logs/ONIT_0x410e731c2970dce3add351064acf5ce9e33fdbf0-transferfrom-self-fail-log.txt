This is Ultimate 0.1.24-f1553f5-m
[2020-11-24 16:03:18,563 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-24 16:03:18,565 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-24 16:03:18,578 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-24 16:03:18,578 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-24 16:03:18,578 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-24 16:03:18,579 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-24 16:03:18,581 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-24 16:03:18,583 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-24 16:03:18,583 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-24 16:03:18,584 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-24 16:03:18,584 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-24 16:03:18,585 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-24 16:03:18,586 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-24 16:03:18,587 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-24 16:03:18,587 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-24 16:03:18,588 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-24 16:03:18,589 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-24 16:03:18,590 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-24 16:03:18,591 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-24 16:03:18,592 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-24 16:03:18,593 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-24 16:03:18,595 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-24 16:03:18,595 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-24 16:03:18,595 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-24 16:03:18,595 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-24 16:03:18,596 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-24 16:03:18,596 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-24 16:03:18,597 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-24 16:03:18,597 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-24 16:03:18,597 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-24 16:03:18,598 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-24 16:03:18,598 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-24 16:03:18,599 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-24 16:03:18,599 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-24 16:03:18,600 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-24 16:03:18,600 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-24 16:03:18,600 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-24 16:03:18,600 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-24 16:03:18,601 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-24 16:03:18,602 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-24 16:03:18,602 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-24 16:03:18,610 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-24 16:03:18,611 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-24 16:03:18,611 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-24 16:03:18,612 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-24 16:03:18,612 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-24 16:03:18,612 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-24 16:03:18,612 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-24 16:03:18,612 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-24 16:03:18,612 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-24 16:03:18,612 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-24 16:03:18,612 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-24 16:03:18,612 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-24 16:03:18,613 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-24 16:03:18,613 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-24 16:03:18,613 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-24 16:03:18,613 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-24 16:03:18,613 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-24 16:03:18,613 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-24 16:03:18,613 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-24 16:03:18,613 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-24 16:03:18,613 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-24 16:03:18,613 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-24 16:03:18,614 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-24 16:03:18,614 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-24 16:03:18,614 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-24 16:03:18,614 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-24 16:03:18,635 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-24 16:03:18,645 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-24 16:03:18,648 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-24 16:03:18,649 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-24 16:03:18,649 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-24 16:03:18,650 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/ONIT_0x410e731c2970dce3add351064acf5ce9e33fdbf0_transferfrom-self-fail.bpl
[2020-11-24 16:03:18,650 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/ONIT_0x410e731c2970dce3add351064acf5ce9e33fdbf0_transferfrom-self-fail.bpl'
[2020-11-24 16:03:18,735 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-24 16:03:18,736 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-24 16:03:18,737 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-24 16:03:18,737 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-24 16:03:18,737 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-24 16:03:18,758 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "ONIT_0x410e731c2970dce3add351064acf5ce9e33fdbf0_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 04:03:18" (1/1) ...
[2020-11-24 16:03:18,760 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "ONIT_0x410e731c2970dce3add351064acf5ce9e33fdbf0_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 04:03:18" (1/1) ...
[2020-11-24 16:03:18,800 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "ONIT_0x410e731c2970dce3add351064acf5ce9e33fdbf0_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 04:03:18" (1/1) ...
[2020-11-24 16:03:18,802 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "ONIT_0x410e731c2970dce3add351064acf5ce9e33fdbf0_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 04:03:18" (1/1) ...
[2020-11-24 16:03:18,825 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "ONIT_0x410e731c2970dce3add351064acf5ce9e33fdbf0_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 04:03:18" (1/1) ...
[2020-11-24 16:03:18,836 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "ONIT_0x410e731c2970dce3add351064acf5ce9e33fdbf0_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 04:03:18" (1/1) ...
[2020-11-24 16:03:18,845 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "ONIT_0x410e731c2970dce3add351064acf5ce9e33fdbf0_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 04:03:18" (1/1) ...
[2020-11-24 16:03:18,855 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-24 16:03:18,855 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-24 16:03:18,855 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-24 16:03:18,858 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-24 16:03:18,861 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "ONIT_0x410e731c2970dce3add351064acf5ce9e33fdbf0_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 04:03:18" (1/1) ...
[2020-11-24 16:03:18,883 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(ONIT.transferFrom(from, to, value), from == to && (value > _balances_ERC20[this][from] || value > _allowed_ERC20[this][from][msg.sender]) && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][to] >= 0 && _balances_ERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][from] >= 0 &&  _balances_ERC20[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _allowed_ERC20[this][from][msg.sender] >= 0 && _allowed_ERC20[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(reverted(ONIT.transferFrom)))
[2020-11-24 16:03:18,889 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(ONIT.transferFrom(from, to, value), from == to && (value > _balances_ERC20[this][from] || value > _allowed_ERC20[this][from][msg.sender]) && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][to] >= 0 && _balances_ERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][from] >= 0 &&  _balances_ERC20[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _allowed_ERC20[this][from][msg.sender] >= 0 && _allowed_ERC20[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(reverted(ONIT.transferFrom)))
[2020-11-24 16:03:18,897 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(ONIT.transferFrom(from, to, value), from == to && (value > _balances_ERC20[this][from] || value > _allowed_ERC20[this][from][msg.sender]) && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][to] >= 0 && _balances_ERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][from] >= 0 &&  _balances_ERC20[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _allowed_ERC20[this][from][msg.sender] >= 0 && _allowed_ERC20[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(reverted(ONIT.transferFrom)))
[2020-11-24 16:03:18,904 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( ( from_s1322==to_s1322 && ( value_s1322>_balances_ERC20[this][from_s1322] || value_s1322>_allowed_ERC20[this][from_s1322][msg.sender] ) ) && value_s1322>=0 ) && value_s1322<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && _balances_ERC20[this][to_s1322]>=0 ) && _balances_ERC20[this][to_s1322]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && _balances_ERC20[this][from_s1322]>=0 ) && _balances_ERC20[this][from_s1322]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && _allowed_ERC20[this][from_s1322][msg.sender]>=0 ) && _allowed_ERC20[this][from_s1322][msg.sender]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[from_s1322,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ONIT>],IdentifierExpression[to_s1322,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ONIT>]],BinaryExpression[LOGICOR,BinaryExpression[COMPGT,IdentifierExpression[value_s1322,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ONIT>],ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ONIT>]]],[IdentifierExpression[from_s1322,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ONIT>]]]],BinaryExpression[COMPGT,IdentifierExpression[value_s1322,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ONIT>],ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_allowed_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ONIT>]]],[IdentifierExpression[from_s1322,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ONIT>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ONIT>]]]]]],BinaryExpression[COMPGEQ,IdentifierExpression[value_s1322,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ONIT>],IntegerLiteral[0]]],BinaryExpression[COMPLT,IdentifierExpression[value_s1322,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ONIT>],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ONIT>]]],[IdentifierExpression[to_s1322,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ONIT>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ONIT>]]],[IdentifierExpression[to_s1322,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ONIT>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ONIT>]]],[IdentifierExpression[from_s1322,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ONIT>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ONIT>]]],[IdentifierExpression[from_s1322,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ONIT>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_allowed_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ONIT>]]],[IdentifierExpression[from_s1322,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ONIT>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ONIT>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_allowed_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ONIT>]]],[IdentifierExpression[from_s1322,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ONIT>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ONIT>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]]
[2020-11-24 16:03:18,909 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(ONIT.transferFrom(from, to, value), from == to && (value > _balances_ERC20[this][from] || value > _allowed_ERC20[this][from][msg.sender]) && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][to] >= 0 && _balances_ERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][from] >= 0 &&  _balances_ERC20[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _allowed_ERC20[this][from][msg.sender] >= 0 && _allowed_ERC20[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(reverted(ONIT.transferFrom)))
[2020-11-24 16:03:18,909 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_transferFrom_ONIT0) ==> ( <>AP(fail_transferFrom_ONIT0) ) ) )
Executed UtopiaSpecLang
[2020-11-24 16:03:18,919 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 04:03:18 PropertyContainer
[2020-11-24 16:03:18,919 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-24 16:03:18,919 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-24 16:03:18,920 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-24 16:03:18,920 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-24 16:03:18,920 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "ONIT_0x410e731c2970dce3add351064acf5ce9e33fdbf0_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 04:03:18" (1/2) ...
[2020-11-24 16:03:18,921 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-24 16:03:18,921 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-24 16:03:18,936 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 04:03:18" (2/2) ...
[2020-11-24 16:03:18,936 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-24 16:03:18,936 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-24 16:03:18,937 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-24 16:03:18,937 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-24 16:03:18,937 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "ONIT_0x410e731c2970dce3add351064acf5ce9e33fdbf0_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 04:03:18" (1/2) ...
[2020-11-24 16:03:18,991 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-24 16:03:18,991 INFO  L130     BoogieDeclarations]: Found specification of procedure Roles.Role_ctor__success
[2020-11-24 16:03:18,991 INFO  L130     BoogieDeclarations]: Found specification of procedure ONIT.LockInfo_ctor__success
[2020-11-24 16:03:18,991 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__success
[2020-11-24 16:03:18,991 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__success
[2020-11-24 16:03:18,991 INFO  L130     BoogieDeclarations]: Found specification of procedure add~Role~address_Roles__success
[2020-11-24 16:03:18,991 INFO  L130     BoogieDeclarations]: Found specification of procedure has~Role~address_Roles__success
[2020-11-24 16:03:18,991 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_IERC20
[2020-11-24 16:03:18,992 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_IERC20
[2020-11-24 16:03:18,992 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_IERC20
[2020-11-24 16:03:18,992 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20
[2020-11-24 16:03:18,992 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ERC20
[2020-11-24 16:03:18,992 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20
[2020-11-24 16:03:18,992 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ERC20
[2020-11-24 16:03:18,992 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20
[2020-11-24 16:03:18,992 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ERC20
[2020-11-24 16:03:18,992 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20
[2020-11-24 16:03:18,993 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20
[2020-11-24 16:03:18,993 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20
[2020-11-24 16:03:18,993 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ERC20
[2020-11-24 16:03:18,993 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20
[2020-11-24 16:03:18,993 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20
[2020-11-24 16:03:18,993 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_ERC20__success
[2020-11-24 16:03:18,993 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20Pausable
[2020-11-24 16:03:18,993 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20Pausable
[2020-11-24 16:03:18,993 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20Pausable
[2020-11-24 16:03:18,993 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20Pausable
[2020-11-24 16:03:18,993 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ONIT
[2020-11-24 16:03:18,993 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ONIT
[2020-11-24 16:03:18,994 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ONIT
[2020-11-24 16:03:18,994 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ONIT
[2020-11-24 16:03:18,994 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ONIT
[2020-11-24 16:03:18,994 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ONIT
[2020-11-24 16:03:18,994 INFO  L130     BoogieDeclarations]: Found specification of procedure _unlock~address~uint256_ONIT__success
[2020-11-24 16:03:18,994 INFO  L130     BoogieDeclarations]: Found specification of procedure _autoUnlock~address_ONIT__success
[2020-11-24 16:03:18,994 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-24 16:03:18,994 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-24 16:03:18,994 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-24 16:03:18,994 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__success
[2020-11-24 16:03:18,994 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyNewOwner_pre__success
[2020-11-24 16:03:18,994 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyPauser_pre__success
[2020-11-24 16:03:18,994 INFO  L130     BoogieDeclarations]: Found specification of procedure whenNotPaused_pre__success
[2020-11-24 16:03:18,995 INFO  L130     BoogieDeclarations]: Found specification of procedure whenPaused_pre__success
[2020-11-24 16:03:18,995 INFO  L130     BoogieDeclarations]: Found specification of procedure notFrozen_pre__success
[2020-11-24 16:03:18,995 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_SafeMath
[2020-11-24 16:03:18,995 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_SafeMath
[2020-11-24 16:03:18,995 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_Roles
[2020-11-24 16:03:18,995 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_Roles
[2020-11-24 16:03:18,995 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_Ownable
[2020-11-24 16:03:18,995 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_Ownable
[2020-11-24 16:03:18,995 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_PauserRole
[2020-11-24 16:03:18,995 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_PauserRole
[2020-11-24 16:03:18,996 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_Pausable
[2020-11-24 16:03:18,996 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_Pausable
[2020-11-24 16:03:18,996 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_IERC20
[2020-11-24 16:03:18,996 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_IERC20
[2020-11-24 16:03:18,996 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20
[2020-11-24 16:03:18,996 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20
[2020-11-24 16:03:18,996 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20Pausable
[2020-11-24 16:03:18,996 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20Pausable
[2020-11-24 16:03:18,996 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20Detailed
[2020-11-24 16:03:18,996 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20Detailed
[2020-11-24 16:03:18,997 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ONIT
[2020-11-24 16:03:18,997 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-24 16:03:18,997 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-24 16:03:18,997 INFO  L130     BoogieDeclarations]: Found specification of procedure Roles.Role_ctor__fail
[2020-11-24 16:03:18,997 INFO  L130     BoogieDeclarations]: Found specification of procedure ONIT.LockInfo_ctor__fail
[2020-11-24 16:03:18,997 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-24 16:03:18,997 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__fail
[2020-11-24 16:03:18,997 INFO  L130     BoogieDeclarations]: Found specification of procedure add~Role~address_Roles__fail
[2020-11-24 16:03:18,997 INFO  L130     BoogieDeclarations]: Found specification of procedure has~Role~address_Roles__fail
[2020-11-24 16:03:18,997 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20__success
[2020-11-24 16:03:18,998 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20__fail
[2020-11-24 16:03:18,998 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20__success
[2020-11-24 16:03:18,998 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20__fail
[2020-11-24 16:03:18,998 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20__success
[2020-11-24 16:03:18,998 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20__fail
[2020-11-24 16:03:18,998 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20__success
[2020-11-24 16:03:18,998 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20__fail
[2020-11-24 16:03:18,998 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20__success
[2020-11-24 16:03:18,998 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20__fail
[2020-11-24 16:03:18,999 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20__success
[2020-11-24 16:03:18,999 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20__fail
[2020-11-24 16:03:18,999 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_ERC20__fail
[2020-11-24 16:03:18,999 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20Pausable__success
[2020-11-24 16:03:18,999 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20Pausable__fail
[2020-11-24 16:03:18,999 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20Pausable__success
[2020-11-24 16:03:18,999 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20Pausable__fail
[2020-11-24 16:03:18,999 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ONIT__success
[2020-11-24 16:03:18,999 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ONIT__fail
[2020-11-24 16:03:19,000 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ONIT__success
[2020-11-24 16:03:19,000 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ONIT__fail
[2020-11-24 16:03:19,000 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ONIT__success
[2020-11-24 16:03:19,000 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ONIT__fail
[2020-11-24 16:03:19,000 INFO  L130     BoogieDeclarations]: Found specification of procedure _unlock~address~uint256_ONIT__fail
[2020-11-24 16:03:19,000 INFO  L130     BoogieDeclarations]: Found specification of procedure _autoUnlock~address_ONIT__fail
[2020-11-24 16:03:19,000 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-24 16:03:19,000 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-24 16:03:19,000 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-24 16:03:19,000 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__fail
[2020-11-24 16:03:19,001 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyNewOwner_pre__fail
[2020-11-24 16:03:19,001 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyPauser_pre__fail
[2020-11-24 16:03:19,001 INFO  L130     BoogieDeclarations]: Found specification of procedure whenNotPaused_pre__fail
[2020-11-24 16:03:19,001 INFO  L130     BoogieDeclarations]: Found specification of procedure whenPaused_pre__fail
[2020-11-24 16:03:19,001 INFO  L130     BoogieDeclarations]: Found specification of procedure notFrozen_pre__fail
[2020-11-24 16:03:19,001 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-24 16:03:19,001 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-24 16:03:19,001 INFO  L138     BoogieDeclarations]: Found implementation of procedure Roles.Role_ctor__fail
[2020-11-24 16:03:19,001 INFO  L138     BoogieDeclarations]: Found implementation of procedure Roles.Role_ctor__success
[2020-11-24 16:03:19,001 INFO  L138     BoogieDeclarations]: Found implementation of procedure ONIT.LockInfo_ctor__fail
[2020-11-24 16:03:19,002 INFO  L138     BoogieDeclarations]: Found implementation of procedure ONIT.LockInfo_ctor__success
[2020-11-24 16:03:19,002 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-24 16:03:19,002 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__success
[2020-11-24 16:03:19,002 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__fail
[2020-11-24 16:03:19,002 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__success
[2020-11-24 16:03:19,002 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~Role~address_Roles__fail
[2020-11-24 16:03:19,002 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~Role~address_Roles__success
[2020-11-24 16:03:19,002 INFO  L138     BoogieDeclarations]: Found implementation of procedure has~Role~address_Roles__fail
[2020-11-24 16:03:19,002 INFO  L138     BoogieDeclarations]: Found implementation of procedure has~Role~address_Roles__success
[2020-11-24 16:03:19,003 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ERC20__fail
[2020-11-24 16:03:19,003 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ERC20__success
[2020-11-24 16:03:19,003 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ERC20__fail
[2020-11-24 16:03:19,003 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ERC20__success
[2020-11-24 16:03:19,004 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ERC20__fail
[2020-11-24 16:03:19,004 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ERC20__success
[2020-11-24 16:03:19,004 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20__fail
[2020-11-24 16:03:19,004 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20__success
[2020-11-24 16:03:19,004 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ERC20__fail
[2020-11-24 16:03:19,004 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ERC20__success
[2020-11-24 16:03:19,005 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20__fail
[2020-11-24 16:03:19,005 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20__success
[2020-11-24 16:03:19,005 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_ERC20__fail
[2020-11-24 16:03:19,005 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_ERC20__success
[2020-11-24 16:03:19,006 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20Pausable__fail
[2020-11-24 16:03:19,006 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20Pausable__success
[2020-11-24 16:03:19,006 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20Pausable__fail
[2020-11-24 16:03:19,006 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20Pausable__success
[2020-11-24 16:03:19,007 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ONIT__fail
[2020-11-24 16:03:19,007 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ONIT__success
[2020-11-24 16:03:19,007 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ONIT__fail
[2020-11-24 16:03:19,007 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ONIT__success
[2020-11-24 16:03:19,007 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ONIT__fail
[2020-11-24 16:03:19,008 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ONIT__success
[2020-11-24 16:03:19,008 INFO  L138     BoogieDeclarations]: Found implementation of procedure _unlock~address~uint256_ONIT__fail
[2020-11-24 16:03:19,008 INFO  L138     BoogieDeclarations]: Found implementation of procedure _unlock~address~uint256_ONIT__success
[2020-11-24 16:03:19,009 INFO  L138     BoogieDeclarations]: Found implementation of procedure _autoUnlock~address_ONIT__fail
[2020-11-24 16:03:19,009 INFO  L138     BoogieDeclarations]: Found implementation of procedure _autoUnlock~address_ONIT__success
[2020-11-24 16:03:19,009 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-24 16:03:19,009 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-24 16:03:19,010 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-24 16:03:19,010 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-24 16:03:19,010 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-24 16:03:19,010 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-24 16:03:19,011 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__fail
[2020-11-24 16:03:19,011 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__success
[2020-11-24 16:03:19,011 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyNewOwner_pre__fail
[2020-11-24 16:03:19,011 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyNewOwner_pre__success
[2020-11-24 16:03:19,012 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyPauser_pre__fail
[2020-11-24 16:03:19,012 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyPauser_pre__success
[2020-11-24 16:03:19,012 INFO  L138     BoogieDeclarations]: Found implementation of procedure whenNotPaused_pre__fail
[2020-11-24 16:03:19,012 INFO  L138     BoogieDeclarations]: Found implementation of procedure whenNotPaused_pre__success
[2020-11-24 16:03:19,013 INFO  L138     BoogieDeclarations]: Found implementation of procedure whenPaused_pre__fail
[2020-11-24 16:03:19,013 INFO  L138     BoogieDeclarations]: Found implementation of procedure whenPaused_pre__success
[2020-11-24 16:03:19,013 INFO  L138     BoogieDeclarations]: Found implementation of procedure notFrozen_pre__fail
[2020-11-24 16:03:19,013 INFO  L138     BoogieDeclarations]: Found implementation of procedure notFrozen_pre__success
[2020-11-24 16:03:19,013 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_SafeMath
[2020-11-24 16:03:19,014 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_SafeMath
[2020-11-24 16:03:19,014 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_Roles
[2020-11-24 16:03:19,014 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_Roles
[2020-11-24 16:03:19,014 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_Ownable
[2020-11-24 16:03:19,014 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_Ownable
[2020-11-24 16:03:19,015 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_PauserRole
[2020-11-24 16:03:19,015 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_PauserRole
[2020-11-24 16:03:19,015 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_Pausable
[2020-11-24 16:03:19,015 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_Pausable
[2020-11-24 16:03:19,015 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_IERC20
[2020-11-24 16:03:19,016 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_IERC20
[2020-11-24 16:03:19,016 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20
[2020-11-24 16:03:19,016 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20
[2020-11-24 16:03:19,016 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20Pausable
[2020-11-24 16:03:19,016 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20Pausable
[2020-11-24 16:03:19,016 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20Detailed
[2020-11-24 16:03:19,016 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20Detailed
[2020-11-24 16:03:19,017 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ONIT
[2020-11-24 16:03:19,017 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-24 16:03:19,017 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-24 16:03:19,017 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-24 16:03:19,576 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 16:03:19,576 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 16:03:19,846 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-24 16:03:19,847 INFO  L286             CfgBuilder]: Removed 10 assue(true) statements.
[2020-11-24 16:03:19,849 INFO  L202        PluginConnector]: Adding new model ONIT_0x410e731c2970dce3add351064acf5ce9e33fdbf0_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 04:03:19 BoogieIcfgContainer
[2020-11-24 16:03:19,849 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 04:03:18" (2/2) ...
[2020-11-24 16:03:19,849 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-24 16:03:19,849 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@2d484354 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 04:03:19, skipping insertion in model container
[2020-11-24 16:03:19,849 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-24 16:03:19,850 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-24 16:03:19,850 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-24 16:03:19,851 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-24 16:03:19,851 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "ONIT_0x410e731c2970dce3add351064acf5ce9e33fdbf0_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 04:03:18" (1/3) ...
[2020-11-24 16:03:19,852 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@5faa3e98 and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 04:03:19, skipping insertion in model container
[2020-11-24 16:03:19,852 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 04:03:18" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-24 16:03:19,892 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 04:03:19 NWAContainer
[2020-11-24 16:03:19,893 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-24 16:03:19,893 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-24 16:03:19,893 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-24 16:03:19,894 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-24 16:03:19,895 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "ONIT_0x410e731c2970dce3add351064acf5ce9e33fdbf0_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 04:03:19" (3/4) ...
[2020-11-24 16:03:19,895 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@37af877b and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 04:03:19, skipping insertion in model container
[2020-11-24 16:03:19,895 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 04:03:19" (4/4) ...
[2020-11-24 16:03:19,899 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-24 16:03:19,902 INFO  L110   BuchiProductObserver]: Initial RCFG 1610 locations, 2107 edges
[2020-11-24 16:03:19,903 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-24 16:03:19,914 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-24 16:03:21,618 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-24 16:03:21,623 INFO  L110   BuchiProductObserver]: BuchiProgram size 3832 locations, 6765 edges
[2020-11-24 16:03:21,624 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 04:03:21 BoogieIcfgContainer
[2020-11-24 16:03:21,624 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-24 16:03:21,624 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-24 16:03:21,624 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-24 16:03:21,625 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-24 16:03:21,626 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 04:03:21" (1/1) ...
[2020-11-24 16:03:21,715 INFO  L313           BlockEncoder]: Initial Icfg 3832 locations, 6765 edges
[2020-11-24 16:03:21,715 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-24 16:03:21,718 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-24 16:03:21,718 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-24 16:03:21,719 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-24 16:03:21,736 INFO  L70    emoveInfeasibleEdges]: Removed 120 edges and 23 locations because of local infeasibility
[2020-11-24 16:03:21,744 INFO  L70        RemoveSinkStates]: Removed 112 edges and 63 locations by removing sink states
[2020-11-24 16:03:21,763 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-24 16:03:21,768 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-24 16:03:21,771 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-24 16:03:21,772 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-24 16:03:21,778 INFO  L313           BlockEncoder]: Encoded RCFG 3718 locations, 6492 edges
[2020-11-24 16:03:21,779 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 24.11 04:03:21 BasicIcfg
[2020-11-24 16:03:21,779 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-24 16:03:21,779 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-24 16:03:21,780 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-24 16:03:21,782 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-24 16:03:21,782 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 16:03:21,782 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "ONIT_0x410e731c2970dce3add351064acf5ce9e33fdbf0_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 04:03:18" (1/6) ...
[2020-11-24 16:03:21,784 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@373ec14c and model type ONIT_0x410e731c2970dce3add351064acf5ce9e33fdbf0_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 24.11 04:03:21, skipping insertion in model container
[2020-11-24 16:03:21,784 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 16:03:21,784 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 04:03:18" (2/6) ...
[2020-11-24 16:03:21,785 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@373ec14c and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 24.11 04:03:21, skipping insertion in model container
[2020-11-24 16:03:21,785 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 16:03:21,785 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "ONIT_0x410e731c2970dce3add351064acf5ce9e33fdbf0_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 04:03:19" (3/6) ...
[2020-11-24 16:03:21,785 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@373ec14c and model type ONIT_0x410e731c2970dce3add351064acf5ce9e33fdbf0_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 24.11 04:03:21, skipping insertion in model container
[2020-11-24 16:03:21,785 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 16:03:21,785 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 04:03:19" (4/6) ...
[2020-11-24 16:03:21,786 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@373ec14c and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 24.11 04:03:21, skipping insertion in model container
[2020-11-24 16:03:21,786 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 16:03:21,786 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 04:03:21" (5/6) ...
[2020-11-24 16:03:21,786 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@373ec14c and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 24.11 04:03:21, skipping insertion in model container
[2020-11-24 16:03:21,786 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 16:03:21,786 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 24.11 04:03:21" (6/6) ...
[2020-11-24 16:03:21,788 INFO  L404   chiAutomizerObserver]: Analyzing ICFG ONIT_0x410e731c2970dce3add351064acf5ce9e33fdbf0_transferfrom-self-fail.bpl_BEv2
[2020-11-24 16:03:21,827 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-24 16:03:21,828 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-24 16:03:21,828 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-24 16:03:21,828 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-24 16:03:21,828 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-24 16:03:21,828 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-24 16:03:21,828 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-24 16:03:21,828 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-24 16:03:21,829 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-24 16:03:21,885 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3718 states.
[2020-11-24 16:03:21,934 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 16:03:21,934 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 16:03:21,935 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 16:03:21,941 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 16:03:21,941 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
[2020-11-24 16:03:21,941 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-24 16:03:21,941 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3718 states.
[2020-11-24 16:03:21,957 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 16:03:21,957 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 16:03:21,957 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 16:03:21,959 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 16:03:21,959 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L2]                 fail_transferFrom_ONIT0 := false;
[L2]                 call_transferFrom_ONIT0 := false;
[L2]     CALL        call main();
[L4395]              assume null == 0;
[L4396]  CALL        call this := FreshRefGenerator__success();
[L1636]              havoc newRef;
[L1637]              assume Alloc[newRef] == false;
[L1638]              Alloc[newRef] := true;
[L1639]              assume newRef != null;
[L4396]  RET         call this := FreshRefGenerator__success();
[L4397]              assume now >= 0;
[L4398]              assume DType[this] == ONIT;
[L4399]              assume !revert && gas >= 0;
[L4400]  CALL        call CorralChoice_ONIT(this);
[L4275]              havoc msgsender_MSG;
[L4276]              havoc msgvalue_MSG;
[L4277]              havoc choice;
[L4278]              havoc __ret_0_owner;
[L4279]              havoc __ret_0_newOwner;
[L4280]              havoc account_s293;
[L4281]              havoc __ret_0_isOwner;
[L4282]              havoc _newOwner_s313;
[L4283]              havoc __ret_0_acceptOwnership;
[L4284]              havoc account_s390;
[L4285]              havoc __ret_0_isPauser;
[L4286]              havoc account_s402;
[L4287]              havoc account_s414;
[L4288]              havoc __ret_0_paused;
[L4289]              havoc to_s1288;
[L4290]              havoc value_s1288;
[L4291]              havoc __ret_0_transfer;
[L4292]              havoc spender_s711;
[L4293]              havoc value_s711;
[L4294]              havoc __ret_0_approve;
[L4295]              havoc from_s1322;
[L4296]              havoc to_s1322;
[L4297]              havoc value_s1322;
[L4298]              havoc __ret_0_transferFrom;
[L4299]              havoc __ret_0_totalSupply;
[L4300]              havoc owner_s1254;
[L4301]              havoc __ret_0_balanceOf;
[L4302]              havoc owner_s656;
[L4303]              havoc spender_s656;
[L4304]              havoc __ret_0_allowance;
[L4305]              havoc spender_s809;
[L4306]              havoc addedValue_s809;
[L4307]              havoc __ret_0_increaseAllowance;
[L4308]              havoc spender_s858;
[L4309]              havoc subtractedValue_s858;
[L4310]              havoc __ret_0_decreaseAllowance;
[L4311]              havoc name_s1105;
[L4312]              havoc symbol_s1105;
[L4313]              havoc decimals_s1105;
[L4314]              havoc __ret_0_name;
[L4315]              havoc __ret_0_symbol;
[L4316]              havoc __ret_0_decimals;
[L4317]              havoc __ret_0_implementation;
[L4318]              havoc arg1693_s0;
[L4319]              havoc arg1694_s0;
[L4320]              havoc __ret_0_timelockList;
[L4321]              havoc arg1695_s0;
[L4322]              havoc __ret_0_frozenAccount;
[L4323]              havoc holder_s1351;
[L4324]              havoc __ret_0_freezeAccount;
[L4325]              havoc holder_s1379;
[L4326]              havoc __ret_0_unfreezeAccount;
[L4327]              havoc holder_s1410;
[L4328]              havoc value_s1410;
[L4329]              havoc releaseTime_s1410;
[L4330]              havoc __ret_0_lock;
[L4331]              havoc holder_s1439;
[L4332]              havoc value_s1439;
[L4333]              havoc releaseTime_s1439;
[L4334]              havoc __ret_0_transferWithLock;
[L4335]              havoc holder_s1468;
[L4336]              havoc idx_s1468;
[L4337]              havoc __ret_0_unlock;
[L4338]              havoc _newImplementation_s1486;
[L4339]              havoc value_s1663;
[L4340]              havoc __ret_0_mint;
[L4341]              havoc tmpNow;
[L4342]              havoc gas;
[L4343]              assume gas > 4000000 && gas <= 8000000;
[L4344]              tmpNow := now;
[L4345]              havoc now;
[L4346]              assume now > tmpNow;
[L4347]              assume msgsender_MSG != null;
[L4348]  COND TRUE   choice == 6
[L4349]              gas := gas - 21000;
[L4350]  COND FALSE  !(gas >= 0)
[L4400]  RET         call CorralChoice_ONIT(this);

Loop:
[L4400]        assume true;

[2020-11-24 16:03:21,972 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 16:03:21,972 INFO  L82        PathProgramCache]: Analyzing trace with hash 979524351, now seen corresponding path program 1 times
[2020-11-24 16:03:21,976 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 16:03:21,992 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 16:03:22,030 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 16:03:22,032 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 16:03:22,032 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-24 16:03:22,036 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 16:03:22,240 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-24 16:03:22,241 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-24 16:03:22,242 INFO  L87              Difference]: Start difference. First operand 3718 states. Second operand 3 states.
[2020-11-24 16:03:22,420 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 16:03:22,420 INFO  L93              Difference]: Finished difference Result 1374 states and 1653 transitions.
[2020-11-24 16:03:22,420 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-24 16:03:22,422 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 1374 states and 1653 transitions.
[2020-11-24 16:03:22,430 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 16:03:22,438 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 1374 states to 349 states and 409 transitions.
[2020-11-24 16:03:22,439 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 3
[2020-11-24 16:03:22,441 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 146
[2020-11-24 16:03:22,442 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 349 states and 409 transitions.
[2020-11-24 16:03:22,446 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 16:03:22,446 INFO  L728         BuchiCegarLoop]: Abstraction has 349 states and 409 transitions.
[2020-11-24 16:03:22,460 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 349 states and 409 transitions.
[2020-11-24 16:03:22,476 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 349 to 349.
[2020-11-24 16:03:22,476 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 349 states.
[2020-11-24 16:03:22,477 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 349 states to 349 states and 409 transitions.
[2020-11-24 16:03:22,478 INFO  L751         BuchiCegarLoop]: Abstraction has 349 states and 409 transitions.
[2020-11-24 16:03:22,478 INFO  L631         BuchiCegarLoop]: Abstraction has 349 states and 409 transitions.
[2020-11-24 16:03:22,478 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-24 16:03:22,478 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 349 states and 409 transitions.
[2020-11-24 16:03:22,480 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 16:03:22,480 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 16:03:22,480 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 16:03:22,481 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 16:03:22,481 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L2]                 fail_transferFrom_ONIT0 := false;
[L2]                 call_transferFrom_ONIT0 := false;
[L2]     CALL        call main();
[L4395]              assume null == 0;
[L4396]  CALL        call this := FreshRefGenerator__success();
[L1636]              havoc newRef;
[L1637]              assume Alloc[newRef] == false;
[L1638]              Alloc[newRef] := true;
[L1639]              assume newRef != null;
[L4396]  RET         call this := FreshRefGenerator__success();
[L4397]              assume now >= 0;
[L4398]              assume DType[this] == ONIT;
[L4399]              assume !revert && gas >= 0;
[L4400]  CALL        call CorralChoice_ONIT(this);
[L4275]              havoc msgsender_MSG;
[L4276]              havoc msgvalue_MSG;
[L4277]              havoc choice;
[L4278]              havoc __ret_0_owner;
[L4279]              havoc __ret_0_newOwner;
[L4280]              havoc account_s293;
[L4281]              havoc __ret_0_isOwner;
[L4282]              havoc _newOwner_s313;
[L4283]              havoc __ret_0_acceptOwnership;
[L4284]              havoc account_s390;
[L4285]              havoc __ret_0_isPauser;
[L4286]              havoc account_s402;
[L4287]              havoc account_s414;
[L4288]              havoc __ret_0_paused;
[L4289]              havoc to_s1288;
[L4290]              havoc value_s1288;
[L4291]              havoc __ret_0_transfer;
[L4292]              havoc spender_s711;
[L4293]              havoc value_s711;
[L4294]              havoc __ret_0_approve;
[L4295]              havoc from_s1322;
[L4296]              havoc to_s1322;
[L4297]              havoc value_s1322;
[L4298]              havoc __ret_0_transferFrom;
[L4299]              havoc __ret_0_totalSupply;
[L4300]              havoc owner_s1254;
[L4301]              havoc __ret_0_balanceOf;
[L4302]              havoc owner_s656;
[L4303]              havoc spender_s656;
[L4304]              havoc __ret_0_allowance;
[L4305]              havoc spender_s809;
[L4306]              havoc addedValue_s809;
[L4307]              havoc __ret_0_increaseAllowance;
[L4308]              havoc spender_s858;
[L4309]              havoc subtractedValue_s858;
[L4310]              havoc __ret_0_decreaseAllowance;
[L4311]              havoc name_s1105;
[L4312]              havoc symbol_s1105;
[L4313]              havoc decimals_s1105;
[L4314]              havoc __ret_0_name;
[L4315]              havoc __ret_0_symbol;
[L4316]              havoc __ret_0_decimals;
[L4317]              havoc __ret_0_implementation;
[L4318]              havoc arg1693_s0;
[L4319]              havoc arg1694_s0;
[L4320]              havoc __ret_0_timelockList;
[L4321]              havoc arg1695_s0;
[L4322]              havoc __ret_0_frozenAccount;
[L4323]              havoc holder_s1351;
[L4324]              havoc __ret_0_freezeAccount;
[L4325]              havoc holder_s1379;
[L4326]              havoc __ret_0_unfreezeAccount;
[L4327]              havoc holder_s1410;
[L4328]              havoc value_s1410;
[L4329]              havoc releaseTime_s1410;
[L4330]              havoc __ret_0_lock;
[L4331]              havoc holder_s1439;
[L4332]              havoc value_s1439;
[L4333]              havoc releaseTime_s1439;
[L4334]              havoc __ret_0_transferWithLock;
[L4335]              havoc holder_s1468;
[L4336]              havoc idx_s1468;
[L4337]              havoc __ret_0_unlock;
[L4338]              havoc _newImplementation_s1486;
[L4339]              havoc value_s1663;
[L4340]              havoc __ret_0_mint;
[L4341]              havoc tmpNow;
[L4342]              havoc gas;
[L4343]              assume gas > 4000000 && gas <= 8000000;
[L4344]              tmpNow := now;
[L4345]              havoc now;
[L4346]              assume now > tmpNow;
[L4347]              assume msgsender_MSG != null;
[L4348]  COND FALSE  !(choice == 6)
[L4355]  COND FALSE  !(choice == 5)
[L4362]  COND TRUE   choice == 4
[L4363]              gas := gas - 21000;
[L4364]  COND TRUE   gas >= 0
[L4365]              assume value_s1322 >= 0 && value_s1322 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4366]              assume msgvalue_MSG == 0;
[L4367]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_ONIT(this, msgsender_MSG, msgvalue_MSG, from_s1322, to_s1322, value_s1322);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((((from_s1322 == to_s1322 && (value_s1322 > _balances_ERC20[this][from_s1322] || value_s1322 > _allowed_ERC20[this][from_s1322][msgsender_MSG])) && value_s1322 >= 0) && value_s1322 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][to_s1322] >= 0) && _balances_ERC20[this][to_s1322] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][from_s1322] >= 0) && _balances_ERC20[this][from_s1322] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowed_ERC20[this][from_s1322][msgsender_MSG] >= 0) && _allowed_ERC20[this][from_s1322][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transferFrom_ONIT0 := true;
[L2]                 call_transferFrom_ONIT0 := false;
[L2]                 revert := revert_hold;
[L959]               havoc __exception;
[L960]               revert := false;
[L961]   COND FALSE  !(__exception)
[L997]   CALL        call __ret_0_ := transferFrom~address~address~uint256_ONIT__success(this, msgsender_MSG, msgvalue_MSG, from_s1322, to_s1322, value_s1322);
[L2370]  CALL        call notFrozen_pre__success(this, msgsender_MSG, msgvalue_MSG, from_s1322);
[L3582]  COND FALSE  !(!!frozenAccount_ONIT[this][_holder_s1185])
[L2370]  RET         call notFrozen_pre__success(this, msgsender_MSG, msgvalue_MSG, from_s1322);
[L2371]  COND TRUE   revert
[L997]   RET         call __ret_0_ := transferFrom~address~address~uint256_ONIT__success(this, msgsender_MSG, msgvalue_MSG, from_s1322, to_s1322, value_s1322);
[L998]               assume !revert && gas >= 0;
[L4367]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_ONIT(this, msgsender_MSG, msgvalue_MSG, from_s1322, to_s1322, value_s1322);
[L4400]  RET         call CorralChoice_ONIT(this);

Loop:
[L4400]        assume true;

[2020-11-24 16:03:22,485 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 16:03:22,485 INFO  L82        PathProgramCache]: Analyzing trace with hash 593013593, now seen corresponding path program 1 times
[2020-11-24 16:03:22,486 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 16:03:22,498 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 16:03:22,518 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 16:03:22,518 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 16:03:22,518 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [5] imperfect sequences [] total 5
[2020-11-24 16:03:22,519 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 16:03:22,519 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 5 interpolants.
[2020-11-24 16:03:22,519 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=9, Invalid=11, Unknown=0, NotChecked=0, Total=20
[2020-11-24 16:03:22,519 INFO  L87              Difference]: Start difference. First operand 349 states and 409 transitions. cyclomatic complexity: 62 Second operand 5 states.
[2020-11-24 16:03:22,575 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 16:03:22,575 INFO  L93              Difference]: Finished difference Result 401 states and 458 transitions.
[2020-11-24 16:03:22,575 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-24 16:03:22,575 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 401 states and 458 transitions.
[2020-11-24 16:03:22,579 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 16:03:22,581 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 401 states to 401 states and 458 transitions.
[2020-11-24 16:03:22,582 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 170
[2020-11-24 16:03:22,582 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 170
[2020-11-24 16:03:22,582 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 401 states and 458 transitions.
[2020-11-24 16:03:22,583 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 16:03:22,583 INFO  L728         BuchiCegarLoop]: Abstraction has 401 states and 458 transitions.
[2020-11-24 16:03:22,583 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 401 states and 458 transitions.
[2020-11-24 16:03:22,591 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 401 to 397.
[2020-11-24 16:03:22,592 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 397 states.
[2020-11-24 16:03:22,593 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 397 states to 397 states and 454 transitions.
[2020-11-24 16:03:22,593 INFO  L751         BuchiCegarLoop]: Abstraction has 397 states and 454 transitions.
[2020-11-24 16:03:22,593 INFO  L631         BuchiCegarLoop]: Abstraction has 397 states and 454 transitions.
[2020-11-24 16:03:22,593 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-24 16:03:22,593 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 397 states and 454 transitions.
[2020-11-24 16:03:22,595 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 16:03:22,595 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 16:03:22,595 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 16:03:22,596 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 16:03:22,596 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L2]                 fail_transferFrom_ONIT0 := false;
[L2]                 call_transferFrom_ONIT0 := false;
[L2]     CALL        call main();
[L4395]              assume null == 0;
[L4396]  CALL        call this := FreshRefGenerator__success();
[L1636]              havoc newRef;
[L1637]              assume Alloc[newRef] == false;
[L1638]              Alloc[newRef] := true;
[L1639]              assume newRef != null;
[L4396]  RET         call this := FreshRefGenerator__success();
[L4397]              assume now >= 0;
[L4398]              assume DType[this] == ONIT;
[L4399]              assume !revert && gas >= 0;
[L4400]  CALL        call CorralChoice_ONIT(this);
[L4275]              havoc msgsender_MSG;
[L4276]              havoc msgvalue_MSG;
[L4277]              havoc choice;
[L4278]              havoc __ret_0_owner;
[L4279]              havoc __ret_0_newOwner;
[L4280]              havoc account_s293;
[L4281]              havoc __ret_0_isOwner;
[L4282]              havoc _newOwner_s313;
[L4283]              havoc __ret_0_acceptOwnership;
[L4284]              havoc account_s390;
[L4285]              havoc __ret_0_isPauser;
[L4286]              havoc account_s402;
[L4287]              havoc account_s414;
[L4288]              havoc __ret_0_paused;
[L4289]              havoc to_s1288;
[L4290]              havoc value_s1288;
[L4291]              havoc __ret_0_transfer;
[L4292]              havoc spender_s711;
[L4293]              havoc value_s711;
[L4294]              havoc __ret_0_approve;
[L4295]              havoc from_s1322;
[L4296]              havoc to_s1322;
[L4297]              havoc value_s1322;
[L4298]              havoc __ret_0_transferFrom;
[L4299]              havoc __ret_0_totalSupply;
[L4300]              havoc owner_s1254;
[L4301]              havoc __ret_0_balanceOf;
[L4302]              havoc owner_s656;
[L4303]              havoc spender_s656;
[L4304]              havoc __ret_0_allowance;
[L4305]              havoc spender_s809;
[L4306]              havoc addedValue_s809;
[L4307]              havoc __ret_0_increaseAllowance;
[L4308]              havoc spender_s858;
[L4309]              havoc subtractedValue_s858;
[L4310]              havoc __ret_0_decreaseAllowance;
[L4311]              havoc name_s1105;
[L4312]              havoc symbol_s1105;
[L4313]              havoc decimals_s1105;
[L4314]              havoc __ret_0_name;
[L4315]              havoc __ret_0_symbol;
[L4316]              havoc __ret_0_decimals;
[L4317]              havoc __ret_0_implementation;
[L4318]              havoc arg1693_s0;
[L4319]              havoc arg1694_s0;
[L4320]              havoc __ret_0_timelockList;
[L4321]              havoc arg1695_s0;
[L4322]              havoc __ret_0_frozenAccount;
[L4323]              havoc holder_s1351;
[L4324]              havoc __ret_0_freezeAccount;
[L4325]              havoc holder_s1379;
[L4326]              havoc __ret_0_unfreezeAccount;
[L4327]              havoc holder_s1410;
[L4328]              havoc value_s1410;
[L4329]              havoc releaseTime_s1410;
[L4330]              havoc __ret_0_lock;
[L4331]              havoc holder_s1439;
[L4332]              havoc value_s1439;
[L4333]              havoc releaseTime_s1439;
[L4334]              havoc __ret_0_transferWithLock;
[L4335]              havoc holder_s1468;
[L4336]              havoc idx_s1468;
[L4337]              havoc __ret_0_unlock;
[L4338]              havoc _newImplementation_s1486;
[L4339]              havoc value_s1663;
[L4340]              havoc __ret_0_mint;
[L4341]              havoc tmpNow;
[L4342]              havoc gas;
[L4343]              assume gas > 4000000 && gas <= 8000000;
[L4344]              tmpNow := now;
[L4345]              havoc now;
[L4346]              assume now > tmpNow;
[L4347]              assume msgsender_MSG != null;
[L4348]  COND FALSE  !(choice == 6)
[L4355]  COND FALSE  !(choice == 5)
[L4362]  COND TRUE   choice == 4
[L4363]              gas := gas - 21000;
[L4364]  COND TRUE   gas >= 0
[L4365]              assume value_s1322 >= 0 && value_s1322 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4366]              assume msgvalue_MSG == 0;
[L4367]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_ONIT(this, msgsender_MSG, msgvalue_MSG, from_s1322, to_s1322, value_s1322);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((((from_s1322 == to_s1322 && (value_s1322 > _balances_ERC20[this][from_s1322] || value_s1322 > _allowed_ERC20[this][from_s1322][msgsender_MSG])) && value_s1322 >= 0) && value_s1322 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][to_s1322] >= 0) && _balances_ERC20[this][to_s1322] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][from_s1322] >= 0) && _balances_ERC20[this][from_s1322] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowed_ERC20[this][from_s1322][msgsender_MSG] >= 0) && _allowed_ERC20[this][from_s1322][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transferFrom_ONIT0 := true;
[L2]                 call_transferFrom_ONIT0 := false;
[L2]                 revert := revert_hold;
[L959]               havoc __exception;
[L960]               revert := false;
[L961]   COND FALSE  !(__exception)
[L997]   CALL        call __ret_0_ := transferFrom~address~address~uint256_ONIT__success(this, msgsender_MSG, msgvalue_MSG, from_s1322, to_s1322, value_s1322);
[L2370]  CALL        call notFrozen_pre__success(this, msgsender_MSG, msgvalue_MSG, from_s1322);
[L3582]  COND TRUE   !!frozenAccount_ONIT[this][_holder_s1185]
[L3583]              revert := true;
[L2370]  RET         call notFrozen_pre__success(this, msgsender_MSG, msgvalue_MSG, from_s1322);
[L2371]  COND TRUE   revert
[L997]   RET         call __ret_0_ := transferFrom~address~address~uint256_ONIT__success(this, msgsender_MSG, msgvalue_MSG, from_s1322, to_s1322, value_s1322);
[L998]               assume !revert && gas >= 0;
[L4367]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_ONIT(this, msgsender_MSG, msgvalue_MSG, from_s1322, to_s1322, value_s1322);
[L4400]  RET         call CorralChoice_ONIT(this);

Loop:
[L4400]        assume true;

[2020-11-24 16:03:22,598 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 16:03:22,599 INFO  L82        PathProgramCache]: Analyzing trace with hash -1770356187, now seen corresponding path program 1 times
[2020-11-24 16:03:22,600 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 16:03:22,609 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 16:03:22,631 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 16:03:22,631 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 16:03:22,631 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-24 16:03:22,632 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 16:03:22,632 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-24 16:03:22,632 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-24 16:03:22,632 INFO  L87              Difference]: Start difference. First operand 397 states and 454 transitions. cyclomatic complexity: 59 Second operand 3 states.
[2020-11-24 16:03:22,645 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 16:03:22,645 INFO  L93              Difference]: Finished difference Result 401 states and 442 transitions.
[2020-11-24 16:03:22,645 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-24 16:03:22,645 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 401 states and 442 transitions.
[2020-11-24 16:03:22,647 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 16:03:22,649 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 401 states to 344 states and 375 transitions.
[2020-11-24 16:03:22,649 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 145
[2020-11-24 16:03:22,649 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 145
[2020-11-24 16:03:22,649 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 344 states and 375 transitions.
[2020-11-24 16:03:22,650 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 16:03:22,650 INFO  L728         BuchiCegarLoop]: Abstraction has 344 states and 375 transitions.
[2020-11-24 16:03:22,651 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 344 states and 375 transitions.
[2020-11-24 16:03:22,654 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 344 to 344.
[2020-11-24 16:03:22,654 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 344 states.
[2020-11-24 16:03:22,655 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 344 states to 344 states and 375 transitions.
[2020-11-24 16:03:22,655 INFO  L751         BuchiCegarLoop]: Abstraction has 344 states and 375 transitions.
[2020-11-24 16:03:22,655 INFO  L631         BuchiCegarLoop]: Abstraction has 344 states and 375 transitions.
[2020-11-24 16:03:22,655 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-24 16:03:22,655 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 344 states and 375 transitions.
[2020-11-24 16:03:22,657 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 16:03:22,657 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 16:03:22,657 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 16:03:22,658 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 16:03:22,658 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L2]                 fail_transferFrom_ONIT0 := false;
[L2]                 call_transferFrom_ONIT0 := false;
[L2]     CALL        call main();
[L4395]              assume null == 0;
[L4396]  CALL        call this := FreshRefGenerator__success();
[L1636]              havoc newRef;
[L1637]              assume Alloc[newRef] == false;
[L1638]              Alloc[newRef] := true;
[L1639]              assume newRef != null;
[L4396]  RET         call this := FreshRefGenerator__success();
[L4397]              assume now >= 0;
[L4398]              assume DType[this] == ONIT;
[L4399]              assume !revert && gas >= 0;
[L4400]  CALL        call CorralChoice_ONIT(this);
[L4275]              havoc msgsender_MSG;
[L4276]              havoc msgvalue_MSG;
[L4277]              havoc choice;
[L4278]              havoc __ret_0_owner;
[L4279]              havoc __ret_0_newOwner;
[L4280]              havoc account_s293;
[L4281]              havoc __ret_0_isOwner;
[L4282]              havoc _newOwner_s313;
[L4283]              havoc __ret_0_acceptOwnership;
[L4284]              havoc account_s390;
[L4285]              havoc __ret_0_isPauser;
[L4286]              havoc account_s402;
[L4287]              havoc account_s414;
[L4288]              havoc __ret_0_paused;
[L4289]              havoc to_s1288;
[L4290]              havoc value_s1288;
[L4291]              havoc __ret_0_transfer;
[L4292]              havoc spender_s711;
[L4293]              havoc value_s711;
[L4294]              havoc __ret_0_approve;
[L4295]              havoc from_s1322;
[L4296]              havoc to_s1322;
[L4297]              havoc value_s1322;
[L4298]              havoc __ret_0_transferFrom;
[L4299]              havoc __ret_0_totalSupply;
[L4300]              havoc owner_s1254;
[L4301]              havoc __ret_0_balanceOf;
[L4302]              havoc owner_s656;
[L4303]              havoc spender_s656;
[L4304]              havoc __ret_0_allowance;
[L4305]              havoc spender_s809;
[L4306]              havoc addedValue_s809;
[L4307]              havoc __ret_0_increaseAllowance;
[L4308]              havoc spender_s858;
[L4309]              havoc subtractedValue_s858;
[L4310]              havoc __ret_0_decreaseAllowance;
[L4311]              havoc name_s1105;
[L4312]              havoc symbol_s1105;
[L4313]              havoc decimals_s1105;
[L4314]              havoc __ret_0_name;
[L4315]              havoc __ret_0_symbol;
[L4316]              havoc __ret_0_decimals;
[L4317]              havoc __ret_0_implementation;
[L4318]              havoc arg1693_s0;
[L4319]              havoc arg1694_s0;
[L4320]              havoc __ret_0_timelockList;
[L4321]              havoc arg1695_s0;
[L4322]              havoc __ret_0_frozenAccount;
[L4323]              havoc holder_s1351;
[L4324]              havoc __ret_0_freezeAccount;
[L4325]              havoc holder_s1379;
[L4326]              havoc __ret_0_unfreezeAccount;
[L4327]              havoc holder_s1410;
[L4328]              havoc value_s1410;
[L4329]              havoc releaseTime_s1410;
[L4330]              havoc __ret_0_lock;
[L4331]              havoc holder_s1439;
[L4332]              havoc value_s1439;
[L4333]              havoc releaseTime_s1439;
[L4334]              havoc __ret_0_transferWithLock;
[L4335]              havoc holder_s1468;
[L4336]              havoc idx_s1468;
[L4337]              havoc __ret_0_unlock;
[L4338]              havoc _newImplementation_s1486;
[L4339]              havoc value_s1663;
[L4340]              havoc __ret_0_mint;
[L4341]              havoc tmpNow;
[L4342]              havoc gas;
[L4343]              assume gas > 4000000 && gas <= 8000000;
[L4344]              tmpNow := now;
[L4345]              havoc now;
[L4346]              assume now > tmpNow;
[L4347]              assume msgsender_MSG != null;
[L4348]  COND FALSE  !(choice == 6)
[L4355]  COND FALSE  !(choice == 5)
[L4362]  COND TRUE   choice == 4
[L4363]              gas := gas - 21000;
[L4364]  COND TRUE   gas >= 0
[L4365]              assume value_s1322 >= 0 && value_s1322 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4366]              assume msgvalue_MSG == 0;
[L4367]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_ONIT(this, msgsender_MSG, msgvalue_MSG, from_s1322, to_s1322, value_s1322);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((((from_s1322 == to_s1322 && (value_s1322 > _balances_ERC20[this][from_s1322] || value_s1322 > _allowed_ERC20[this][from_s1322][msgsender_MSG])) && value_s1322 >= 0) && value_s1322 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][to_s1322] >= 0) && _balances_ERC20[this][to_s1322] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][from_s1322] >= 0) && _balances_ERC20[this][from_s1322] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowed_ERC20[this][from_s1322][msgsender_MSG] >= 0) && _allowed_ERC20[this][from_s1322][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transferFrom_ONIT0 := true;
[L2]                 call_transferFrom_ONIT0 := false;
[L2]                 revert := revert_hold;
[L959]               havoc __exception;
[L960]               revert := false;
[L961]   COND FALSE  !(__exception)
[L997]   CALL        call __ret_0_ := transferFrom~address~address~uint256_ONIT__success(this, msgsender_MSG, msgvalue_MSG, from_s1322, to_s1322, value_s1322);
[L2370]  CALL        call notFrozen_pre__success(this, msgsender_MSG, msgvalue_MSG, from_s1322);
[L3582]  COND FALSE  !(!!frozenAccount_ONIT[this][_holder_s1185])
[L2370]  RET         call notFrozen_pre__success(this, msgsender_MSG, msgvalue_MSG, from_s1322);
[L2371]  COND FALSE  !(revert)
[L2374]  COND FALSE  !(alloc_timelockList_ONIT_lvl0[timelockList_ONIT[this]][from_s1322] == false)
[L2385]  COND FALSE  !(Length[M_Ref_Ref[timelockList_ONIT[this]][from_s1322]] > 0)
[L2391]  COND TRUE   DType[this] == ONIT
[L2392]  CALL        call __var_24 := transferFrom~address~address~uint256_ERC20Pausable__success(this, msgsender_MSG, msgvalue_MSG, from_s1322, to_s1322, value_s1322);
[L2088]  CALL        call whenNotPaused_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L3558]  COND FALSE  !(!!_paused_Pausable[this])
[L2088]  RET         call whenNotPaused_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L2089]  COND FALSE  !(revert)
[L2092]  COND TRUE   DType[this] == ONIT
[L2093]  CALL        call __var_11 := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s1074, to_s1074, value_s1074);
[L1926]  CALL        call __var_5 := sub~uint256~uint256_SafeMath__success(this, this, 0, _allowed_ERC20[this][from_s760][msgsender_MSG], value_s760);
[L1679]  COND FALSE  !(!(b_s82 <= a_s82))
[L1683]              c_s82 := (a_s82 - b_s82) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1684]              __ret_0_ := c_s82;
[L1926]  RET         call __var_5 := sub~uint256~uint256_SafeMath__success(this, this, 0, _allowed_ERC20[this][from_s760][msgsender_MSG], value_s760);
[L1927]  COND FALSE  !(revert)
[L1930]              sum__allowed1[from_s760] := sum__allowed1[from_s760] - _allowed_ERC20[this][from_s760][msgsender_MSG];
[L1931]              _allowed_ERC20[this][from_s760][msgsender_MSG] := __var_5;
[L1932]              sum__allowed1[from_s760] := sum__allowed1[from_s760] + _allowed_ERC20[this][from_s760][msgsender_MSG];
[L1933]  COND FALSE  !(DType[this] == ONIT)
[L1938]  COND TRUE   DType[this] == ERC20Pausable
[L1939]  CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s760, to_s760, value_s760);
[L1987]              __var_6 := null;
[L1988]  COND FALSE  !(!(to_s904 != null))
[L1992]  CALL        call __var_7 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][from_s904], value_s904);
[L1679]  COND FALSE  !(!(b_s82 <= a_s82))
[L1683]              c_s82 := (a_s82 - b_s82) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1684]              __ret_0_ := c_s82;
[L1992]  RET         call __var_7 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][from_s904], value_s904);
[L1993]  COND FALSE  !(revert)
[L1996]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][from_s904];
[L1997]              _balances_ERC20[this][from_s904] := __var_7;
[L1998]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][from_s904];
[L1999]  CALL        call __var_8 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][to_s904], value_s904);
[L1703]              c_s106 := (a_s106 + b_s106) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1704]  COND FALSE  !(!(c_s106 >= a_s106))
[L1708]              __ret_0_ := c_s106;
[L1999]  RET         call __var_8 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][to_s904], value_s904);
[L2000]  COND FALSE  !(revert)
[L2003]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][to_s904];
[L2004]              _balances_ERC20[this][to_s904] := __var_8;
[L2005]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][to_s904];
[L2006]              assert { :EventEmitted "Transfer_ERC20" } true;
[L1939]  RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s760, to_s760, value_s760);
[L1940]  COND FALSE  !(revert)
[L1951]              assert { :EventEmitted "Approval_ERC20" } true;
[L1952]              __ret_0_ := true;
[L2093]  RET         call __var_11 := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s1074, to_s1074, value_s1074);
[L2094]  COND FALSE  !(revert)
[L2105]              __ret_0_ := __var_11;
[L2392]  RET         call __var_24 := transferFrom~address~address~uint256_ERC20Pausable__success(this, msgsender_MSG, msgvalue_MSG, from_s1322, to_s1322, value_s1322);
[L2393]  COND FALSE  !(revert)
[L2399]              __ret_0_ := __var_24;
[L997]   RET         call __ret_0_ := transferFrom~address~address~uint256_ONIT__success(this, msgsender_MSG, msgvalue_MSG, from_s1322, to_s1322, value_s1322);
[L998]               assume !revert && gas >= 0;
[L4367]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_ONIT(this, msgsender_MSG, msgvalue_MSG, from_s1322, to_s1322, value_s1322);
[L4400]  RET         call CorralChoice_ONIT(this);

Loop:
[L4400]        assume true;

[2020-11-24 16:03:22,662 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 16:03:22,662 INFO  L82        PathProgramCache]: Analyzing trace with hash -198315473, now seen corresponding path program 1 times
[2020-11-24 16:03:22,663 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 16:03:22,676 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 16:03:22,733 INFO  L134       CoverageAnalysis]: Checked inductivity of 5 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 5 trivial. 0 not checked.
[2020-11-24 16:03:22,734 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 16:03:22,734 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [5] imperfect sequences [] total 5
[2020-11-24 16:03:22,734 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 16:03:22,734 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 5 interpolants.
[2020-11-24 16:03:22,734 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=7, Invalid=13, Unknown=0, NotChecked=0, Total=20
[2020-11-24 16:03:22,735 INFO  L87              Difference]: Start difference. First operand 344 states and 375 transitions. cyclomatic complexity: 33 Second operand 5 states.
[2020-11-24 16:03:22,761 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 16:03:22,761 INFO  L93              Difference]: Finished difference Result 361 states and 392 transitions.
[2020-11-24 16:03:22,761 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 5 states. 
[2020-11-24 16:03:22,762 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 361 states and 392 transitions.
[2020-11-24 16:03:22,764 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 16:03:22,765 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 361 states to 335 states and 362 transitions.
[2020-11-24 16:03:22,765 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 141
[2020-11-24 16:03:22,766 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 141
[2020-11-24 16:03:22,766 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 335 states and 362 transitions.
[2020-11-24 16:03:22,766 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 16:03:22,766 INFO  L728         BuchiCegarLoop]: Abstraction has 335 states and 362 transitions.
[2020-11-24 16:03:22,767 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 335 states and 362 transitions.
[2020-11-24 16:03:22,770 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 335 to 335.
[2020-11-24 16:03:22,770 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 335 states.
[2020-11-24 16:03:22,770 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 335 states to 335 states and 362 transitions.
[2020-11-24 16:03:22,770 INFO  L751         BuchiCegarLoop]: Abstraction has 335 states and 362 transitions.
[2020-11-24 16:03:22,770 INFO  L631         BuchiCegarLoop]: Abstraction has 335 states and 362 transitions.
[2020-11-24 16:03:22,770 INFO  L445         BuchiCegarLoop]: ======== Iteration 5============
[2020-11-24 16:03:22,771 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 335 states and 362 transitions.
[2020-11-24 16:03:22,771 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 16:03:22,771 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 16:03:22,771 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 16:03:22,773 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 16:03:22,773 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L2]                 fail_transferFrom_ONIT0 := false;
[L2]                 call_transferFrom_ONIT0 := false;
[L2]     CALL        call main();
[L4395]              assume null == 0;
[L4396]  CALL        call this := FreshRefGenerator__success();
[L1636]              havoc newRef;
[L1637]              assume Alloc[newRef] == false;
[L1638]              Alloc[newRef] := true;
[L1639]              assume newRef != null;
[L4396]  RET         call this := FreshRefGenerator__success();
[L4397]              assume now >= 0;
[L4398]              assume DType[this] == ONIT;
[L4399]              assume !revert && gas >= 0;
[L4400]  CALL        call CorralChoice_ONIT(this);
[L4275]              havoc msgsender_MSG;
[L4276]              havoc msgvalue_MSG;
[L4277]              havoc choice;
[L4278]              havoc __ret_0_owner;
[L4279]              havoc __ret_0_newOwner;
[L4280]              havoc account_s293;
[L4281]              havoc __ret_0_isOwner;
[L4282]              havoc _newOwner_s313;
[L4283]              havoc __ret_0_acceptOwnership;
[L4284]              havoc account_s390;
[L4285]              havoc __ret_0_isPauser;
[L4286]              havoc account_s402;
[L4287]              havoc account_s414;
[L4288]              havoc __ret_0_paused;
[L4289]              havoc to_s1288;
[L4290]              havoc value_s1288;
[L4291]              havoc __ret_0_transfer;
[L4292]              havoc spender_s711;
[L4293]              havoc value_s711;
[L4294]              havoc __ret_0_approve;
[L4295]              havoc from_s1322;
[L4296]              havoc to_s1322;
[L4297]              havoc value_s1322;
[L4298]              havoc __ret_0_transferFrom;
[L4299]              havoc __ret_0_totalSupply;
[L4300]              havoc owner_s1254;
[L4301]              havoc __ret_0_balanceOf;
[L4302]              havoc owner_s656;
[L4303]              havoc spender_s656;
[L4304]              havoc __ret_0_allowance;
[L4305]              havoc spender_s809;
[L4306]              havoc addedValue_s809;
[L4307]              havoc __ret_0_increaseAllowance;
[L4308]              havoc spender_s858;
[L4309]              havoc subtractedValue_s858;
[L4310]              havoc __ret_0_decreaseAllowance;
[L4311]              havoc name_s1105;
[L4312]              havoc symbol_s1105;
[L4313]              havoc decimals_s1105;
[L4314]              havoc __ret_0_name;
[L4315]              havoc __ret_0_symbol;
[L4316]              havoc __ret_0_decimals;
[L4317]              havoc __ret_0_implementation;
[L4318]              havoc arg1693_s0;
[L4319]              havoc arg1694_s0;
[L4320]              havoc __ret_0_timelockList;
[L4321]              havoc arg1695_s0;
[L4322]              havoc __ret_0_frozenAccount;
[L4323]              havoc holder_s1351;
[L4324]              havoc __ret_0_freezeAccount;
[L4325]              havoc holder_s1379;
[L4326]              havoc __ret_0_unfreezeAccount;
[L4327]              havoc holder_s1410;
[L4328]              havoc value_s1410;
[L4329]              havoc releaseTime_s1410;
[L4330]              havoc __ret_0_lock;
[L4331]              havoc holder_s1439;
[L4332]              havoc value_s1439;
[L4333]              havoc releaseTime_s1439;
[L4334]              havoc __ret_0_transferWithLock;
[L4335]              havoc holder_s1468;
[L4336]              havoc idx_s1468;
[L4337]              havoc __ret_0_unlock;
[L4338]              havoc _newImplementation_s1486;
[L4339]              havoc value_s1663;
[L4340]              havoc __ret_0_mint;
[L4341]              havoc tmpNow;
[L4342]              havoc gas;
[L4343]              assume gas > 4000000 && gas <= 8000000;
[L4344]              tmpNow := now;
[L4345]              havoc now;
[L4346]              assume now > tmpNow;
[L4347]              assume msgsender_MSG != null;
[L4348]  COND FALSE  !(choice == 6)
[L4355]  COND FALSE  !(choice == 5)
[L4362]  COND TRUE   choice == 4
[L4363]              gas := gas - 21000;
[L4364]  COND TRUE   gas >= 0
[L4365]              assume value_s1322 >= 0 && value_s1322 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4366]              assume msgvalue_MSG == 0;
[L4367]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_ONIT(this, msgsender_MSG, msgvalue_MSG, from_s1322, to_s1322, value_s1322);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((((from_s1322 == to_s1322 && (value_s1322 > _balances_ERC20[this][from_s1322] || value_s1322 > _allowed_ERC20[this][from_s1322][msgsender_MSG])) && value_s1322 >= 0) && value_s1322 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][to_s1322] >= 0) && _balances_ERC20[this][to_s1322] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][from_s1322] >= 0) && _balances_ERC20[this][from_s1322] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowed_ERC20[this][from_s1322][msgsender_MSG] >= 0) && _allowed_ERC20[this][from_s1322][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transferFrom_ONIT0 := true;
[L2]                 call_transferFrom_ONIT0 := false;
[L2]                 revert := revert_hold;
[L959]               havoc __exception;
[L960]               revert := false;
[L961]   COND FALSE  !(__exception)
[L997]   CALL        call __ret_0_ := transferFrom~address~address~uint256_ONIT__success(this, msgsender_MSG, msgvalue_MSG, from_s1322, to_s1322, value_s1322);
[L2370]  CALL        call notFrozen_pre__success(this, msgsender_MSG, msgvalue_MSG, from_s1322);
[L3582]  COND FALSE  !(!!frozenAccount_ONIT[this][_holder_s1185])
[L2370]  RET         call notFrozen_pre__success(this, msgsender_MSG, msgvalue_MSG, from_s1322);
[L2371]  COND FALSE  !(revert)
[L2374]  COND FALSE  !(alloc_timelockList_ONIT_lvl0[timelockList_ONIT[this]][from_s1322] == false)
[L2385]  COND FALSE  !(Length[M_Ref_Ref[timelockList_ONIT[this]][from_s1322]] > 0)
[L2391]  COND TRUE   DType[this] == ONIT
[L2392]  CALL        call __var_24 := transferFrom~address~address~uint256_ERC20Pausable__success(this, msgsender_MSG, msgvalue_MSG, from_s1322, to_s1322, value_s1322);
[L2088]  CALL        call whenNotPaused_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L3558]  COND FALSE  !(!!_paused_Pausable[this])
[L2088]  RET         call whenNotPaused_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L2089]  COND FALSE  !(revert)
[L2092]  COND TRUE   DType[this] == ONIT
[L2093]  CALL        call __var_11 := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s1074, to_s1074, value_s1074);
[L1926]  CALL        call __var_5 := sub~uint256~uint256_SafeMath__success(this, this, 0, _allowed_ERC20[this][from_s760][msgsender_MSG], value_s760);
[L1679]  COND FALSE  !(!(b_s82 <= a_s82))
[L1683]              c_s82 := (a_s82 - b_s82) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1684]              __ret_0_ := c_s82;
[L1926]  RET         call __var_5 := sub~uint256~uint256_SafeMath__success(this, this, 0, _allowed_ERC20[this][from_s760][msgsender_MSG], value_s760);
[L1927]  COND FALSE  !(revert)
[L1930]              sum__allowed1[from_s760] := sum__allowed1[from_s760] - _allowed_ERC20[this][from_s760][msgsender_MSG];
[L1931]              _allowed_ERC20[this][from_s760][msgsender_MSG] := __var_5;
[L1932]              sum__allowed1[from_s760] := sum__allowed1[from_s760] + _allowed_ERC20[this][from_s760][msgsender_MSG];
[L1933]  COND TRUE   DType[this] == ONIT
[L1934]  CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s760, to_s760, value_s760);
[L1987]              __var_6 := null;
[L1988]  COND FALSE  !(!(to_s904 != null))
[L1992]  CALL        call __var_7 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][from_s904], value_s904);
[L1679]  COND FALSE  !(!(b_s82 <= a_s82))
[L1683]              c_s82 := (a_s82 - b_s82) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1684]              __ret_0_ := c_s82;
[L1992]  RET         call __var_7 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][from_s904], value_s904);
[L1993]  COND FALSE  !(revert)
[L1996]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][from_s904];
[L1997]              _balances_ERC20[this][from_s904] := __var_7;
[L1998]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][from_s904];
[L1999]  CALL        call __var_8 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][to_s904], value_s904);
[L1703]              c_s106 := (a_s106 + b_s106) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1704]  COND FALSE  !(!(c_s106 >= a_s106))
[L1708]              __ret_0_ := c_s106;
[L1999]  RET         call __var_8 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][to_s904], value_s904);
[L2000]  COND FALSE  !(revert)
[L2003]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][to_s904];
[L2004]              _balances_ERC20[this][to_s904] := __var_8;
[L2005]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][to_s904];
[L2006]              assert { :EventEmitted "Transfer_ERC20" } true;
[L1934]  RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s760, to_s760, value_s760);
[L1935]  COND FALSE  !(revert)
[L1951]              assert { :EventEmitted "Approval_ERC20" } true;
[L1952]              __ret_0_ := true;
[L2093]  RET         call __var_11 := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s1074, to_s1074, value_s1074);
[L2094]  COND FALSE  !(revert)
[L2105]              __ret_0_ := __var_11;
[L2392]  RET         call __var_24 := transferFrom~address~address~uint256_ERC20Pausable__success(this, msgsender_MSG, msgvalue_MSG, from_s1322, to_s1322, value_s1322);
[L2393]  COND FALSE  !(revert)
[L2399]              __ret_0_ := __var_24;
[L997]   RET         call __ret_0_ := transferFrom~address~address~uint256_ONIT__success(this, msgsender_MSG, msgvalue_MSG, from_s1322, to_s1322, value_s1322);
[L998]               assume !revert && gas >= 0;
[L4367]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_ONIT(this, msgsender_MSG, msgvalue_MSG, from_s1322, to_s1322, value_s1322);
[L4400]  RET         call CorralChoice_ONIT(this);

Loop:
[L4400]        assume true;

[2020-11-24 16:03:22,774 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 16:03:22,775 INFO  L82        PathProgramCache]: Analyzing trace with hash -1488362504, now seen corresponding path program 1 times
[2020-11-24 16:03:22,775 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 16:03:22,787 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 16:03:22,892 INFO  L134       CoverageAnalysis]: Checked inductivity of 5 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 5 trivial. 0 not checked.
[2020-11-24 16:03:22,892 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 16:03:22,893 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [13] imperfect sequences [] total 13
[2020-11-24 16:03:22,893 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 16:03:22,893 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 13 interpolants.
[2020-11-24 16:03:22,893 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=30, Invalid=126, Unknown=0, NotChecked=0, Total=156
[2020-11-24 16:03:22,893 INFO  L87              Difference]: Start difference. First operand 335 states and 362 transitions. cyclomatic complexity: 29 Second operand 13 states.
[2020-11-24 16:03:23,316 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 16:03:23,316 INFO  L93              Difference]: Finished difference Result 361 states and 394 transitions.
[2020-11-24 16:03:23,317 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 12 states. 
[2020-11-24 16:03:23,317 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 361 states and 394 transitions.
[2020-11-24 16:03:23,319 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 16:03:23,333 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 361 states to 349 states and 379 transitions.
[2020-11-24 16:03:23,333 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 141
[2020-11-24 16:03:23,333 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 141
[2020-11-24 16:03:23,333 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 349 states and 379 transitions.
[2020-11-24 16:03:23,334 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 16:03:23,334 INFO  L728         BuchiCegarLoop]: Abstraction has 349 states and 379 transitions.
[2020-11-24 16:03:23,334 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 349 states and 379 transitions.
[2020-11-24 16:03:23,339 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 349 to 348.
[2020-11-24 16:03:23,340 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 348 states.
[2020-11-24 16:03:23,341 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 348 states to 348 states and 377 transitions.
[2020-11-24 16:03:23,341 INFO  L751         BuchiCegarLoop]: Abstraction has 348 states and 377 transitions.
[2020-11-24 16:03:23,341 INFO  L631         BuchiCegarLoop]: Abstraction has 348 states and 377 transitions.
[2020-11-24 16:03:23,341 INFO  L445         BuchiCegarLoop]: ======== Iteration 6============
[2020-11-24 16:03:23,341 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 348 states and 377 transitions.
[2020-11-24 16:03:23,342 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 16:03:23,342 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 16:03:23,342 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 16:03:23,344 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [3, 3, 3, 3, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 16:03:23,344 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L2]                 fail_transferFrom_ONIT0 := false;
[L2]                 call_transferFrom_ONIT0 := false;
[L2]     CALL        call main();
[L4395]              assume null == 0;
[L4396]  CALL        call this := FreshRefGenerator__success();
[L1636]              havoc newRef;
[L1637]              assume Alloc[newRef] == false;
[L1638]              Alloc[newRef] := true;
[L1639]              assume newRef != null;
[L4396]  RET         call this := FreshRefGenerator__success();
[L4397]              assume now >= 0;
[L4398]              assume DType[this] == ONIT;
[L4399]              assume !revert && gas >= 0;
[L4400]  CALL        call CorralChoice_ONIT(this);
[L4275]              havoc msgsender_MSG;
[L4276]              havoc msgvalue_MSG;
[L4277]              havoc choice;
[L4278]              havoc __ret_0_owner;
[L4279]              havoc __ret_0_newOwner;
[L4280]              havoc account_s293;
[L4281]              havoc __ret_0_isOwner;
[L4282]              havoc _newOwner_s313;
[L4283]              havoc __ret_0_acceptOwnership;
[L4284]              havoc account_s390;
[L4285]              havoc __ret_0_isPauser;
[L4286]              havoc account_s402;
[L4287]              havoc account_s414;
[L4288]              havoc __ret_0_paused;
[L4289]              havoc to_s1288;
[L4290]              havoc value_s1288;
[L4291]              havoc __ret_0_transfer;
[L4292]              havoc spender_s711;
[L4293]              havoc value_s711;
[L4294]              havoc __ret_0_approve;
[L4295]              havoc from_s1322;
[L4296]              havoc to_s1322;
[L4297]              havoc value_s1322;
[L4298]              havoc __ret_0_transferFrom;
[L4299]              havoc __ret_0_totalSupply;
[L4300]              havoc owner_s1254;
[L4301]              havoc __ret_0_balanceOf;
[L4302]              havoc owner_s656;
[L4303]              havoc spender_s656;
[L4304]              havoc __ret_0_allowance;
[L4305]              havoc spender_s809;
[L4306]              havoc addedValue_s809;
[L4307]              havoc __ret_0_increaseAllowance;
[L4308]              havoc spender_s858;
[L4309]              havoc subtractedValue_s858;
[L4310]              havoc __ret_0_decreaseAllowance;
[L4311]              havoc name_s1105;
[L4312]              havoc symbol_s1105;
[L4313]              havoc decimals_s1105;
[L4314]              havoc __ret_0_name;
[L4315]              havoc __ret_0_symbol;
[L4316]              havoc __ret_0_decimals;
[L4317]              havoc __ret_0_implementation;
[L4318]              havoc arg1693_s0;
[L4319]              havoc arg1694_s0;
[L4320]              havoc __ret_0_timelockList;
[L4321]              havoc arg1695_s0;
[L4322]              havoc __ret_0_frozenAccount;
[L4323]              havoc holder_s1351;
[L4324]              havoc __ret_0_freezeAccount;
[L4325]              havoc holder_s1379;
[L4326]              havoc __ret_0_unfreezeAccount;
[L4327]              havoc holder_s1410;
[L4328]              havoc value_s1410;
[L4329]              havoc releaseTime_s1410;
[L4330]              havoc __ret_0_lock;
[L4331]              havoc holder_s1439;
[L4332]              havoc value_s1439;
[L4333]              havoc releaseTime_s1439;
[L4334]              havoc __ret_0_transferWithLock;
[L4335]              havoc holder_s1468;
[L4336]              havoc idx_s1468;
[L4337]              havoc __ret_0_unlock;
[L4338]              havoc _newImplementation_s1486;
[L4339]              havoc value_s1663;
[L4340]              havoc __ret_0_mint;
[L4341]              havoc tmpNow;
[L4342]              havoc gas;
[L4343]              assume gas > 4000000 && gas <= 8000000;
[L4344]              tmpNow := now;
[L4345]              havoc now;
[L4346]              assume now > tmpNow;
[L4347]              assume msgsender_MSG != null;
[L4348]  COND FALSE  !(choice == 6)
[L4355]  COND FALSE  !(choice == 5)
[L4362]  COND TRUE   choice == 4
[L4363]              gas := gas - 21000;
[L4364]  COND TRUE   gas >= 0
[L4365]              assume value_s1322 >= 0 && value_s1322 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4366]              assume msgvalue_MSG == 0;
[L4367]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_ONIT(this, msgsender_MSG, msgvalue_MSG, from_s1322, to_s1322, value_s1322);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((((from_s1322 == to_s1322 && (value_s1322 > _balances_ERC20[this][from_s1322] || value_s1322 > _allowed_ERC20[this][from_s1322][msgsender_MSG])) && value_s1322 >= 0) && value_s1322 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][to_s1322] >= 0) && _balances_ERC20[this][to_s1322] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][from_s1322] >= 0) && _balances_ERC20[this][from_s1322] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowed_ERC20[this][from_s1322][msgsender_MSG] >= 0) && _allowed_ERC20[this][from_s1322][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transferFrom_ONIT0 := true;
[L2]                 call_transferFrom_ONIT0 := false;
[L2]                 revert := revert_hold;
[L959]               havoc __exception;
[L960]               revert := false;
[L961]   COND FALSE  !(__exception)
[L997]   CALL        call __ret_0_ := transferFrom~address~address~uint256_ONIT__success(this, msgsender_MSG, msgvalue_MSG, from_s1322, to_s1322, value_s1322);
[L2370]  CALL        call notFrozen_pre__success(this, msgsender_MSG, msgvalue_MSG, from_s1322);
[L3582]  COND FALSE  !(!!frozenAccount_ONIT[this][_holder_s1185])
[L2370]  RET         call notFrozen_pre__success(this, msgsender_MSG, msgvalue_MSG, from_s1322);
[L2371]  COND FALSE  !(revert)
[L2374]  COND FALSE  !(alloc_timelockList_ONIT_lvl0[timelockList_ONIT[this]][from_s1322] == false)
[L2385]  COND TRUE   Length[M_Ref_Ref[timelockList_ONIT[this]][from_s1322]] > 0
[L2386]  CALL        call __var_23 := _autoUnlock~address_ONIT__success(this, msgsender_MSG, msgvalue_MSG, from_s1322);
[L2653]  COND FALSE  !(alloc_timelockList_ONIT_lvl0[timelockList_ONIT[this]][holder_s1645] == false)
[L2664]              idx_s1645 := 0;
[L2665]  COND TRUE   idx_s1645 < Length[M_Ref_Ref[timelockList_ONIT[this]][holder_s1645]]
[L2667]  COND FALSE  !(alloc_timelockList_ONIT_lvl0[timelockList_ONIT[this]][holder_s1645] == false)
[L2678]  COND TRUE   _releaseTime_ONIT.LockInfo[M_int_Ref[M_Ref_Ref[timelockList_ONIT[this]][holder_s1645]][idx_s1645]] <= now
[L2679]  CALL        call __var_36 := _unlock~address~uint256_ONIT__success(this, msgsender_MSG, msgvalue_MSG, holder_s1645, idx_s1645);
[L2512]  COND FALSE  !(alloc_timelockList_ONIT_lvl0[timelockList_ONIT[this]][holder_s1600] == false)
[L2523]              lockinfo_s1600 := M_int_Ref[M_Ref_Ref[timelockList_ONIT[this]][holder_s1600]][idx_s1600];
[L2524]              releaseAmount_s1600 := _amount_ONIT.LockInfo[lockinfo_s1600];
[L2525]  COND FALSE  !(alloc_timelockList_ONIT_lvl0[timelockList_ONIT[this]][holder_s1600] == false)
[L2536]  COND FALSE  !(alloc_timelockList_ONIT_lvl0[timelockList_ONIT[this]][holder_s1600] == false)
[L2547]  COND FALSE  !(alloc_timelockList_ONIT_lvl0[timelockList_ONIT[this]][holder_s1600] == false)
[L2558]  CALL        call __var_29 := sub~uint256~uint256_SafeMath__success(this, this, 0, Length[M_Ref_Ref[timelockList_ONIT[this]][holder_s1600]], 1);
[L1679]  COND FALSE  !(!(b_s82 <= a_s82))
[L1683]              c_s82 := (a_s82 - b_s82) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1684]              __ret_0_ := c_s82;
[L2558]  RET         call __var_29 := sub~uint256~uint256_SafeMath__success(this, this, 0, Length[M_Ref_Ref[timelockList_ONIT[this]][holder_s1600]], 1);
[L2559]  COND FALSE  !(revert)
[L2562]  COND FALSE  !(alloc_timelockList_ONIT_lvl0[timelockList_ONIT[this]][holder_s1600] == false)
[L2573]              M_int_Ref[M_Ref_Ref[timelockList_ONIT[this]][holder_s1600]][idx_s1600] := M_int_Ref[M_Ref_Ref[timelockList_ONIT[this]][holder_s1600]][__var_29];
[L2574]  COND FALSE  !(alloc_timelockList_ONIT_lvl0[timelockList_ONIT[this]][holder_s1600] == false)
[L2585]              Length[M_Ref_Ref[timelockList_ONIT[this]][holder_s1600]] := (Length[M_Ref_Ref[timelockList_ONIT[this]][holder_s1600]] - 1) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2586]              assert { :EventEmitted "Unlock_ONIT" } true;
[L2587]  CALL        call __var_33 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][holder_s1600], releaseAmount_s1600);
[L1703]              c_s106 := (a_s106 + b_s106) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1704]  COND FALSE  !(!(c_s106 >= a_s106))
[L1708]              __ret_0_ := c_s106;
[L2587]  RET         call __var_33 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][holder_s1600], releaseAmount_s1600);
[L2588]  COND FALSE  !(revert)
[L2591]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][holder_s1600];
[L2592]              _balances_ERC20[this][holder_s1600] := __var_33;
[L2593]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][holder_s1600];
[L2594]              __ret_0_ := true;
[L2679]  RET         call __var_36 := _unlock~address~uint256_ONIT__success(this, msgsender_MSG, msgvalue_MSG, holder_s1645, idx_s1645);
[L2680]  COND FALSE  !(revert)
[L2683]  COND FALSE  !(__var_36)
[L2687]              idx_s1645 := (idx_s1645 + 1) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2688]  COND TRUE   gas < 0
[L2386]  RET         call __var_23 := _autoUnlock~address_ONIT__success(this, msgsender_MSG, msgvalue_MSG, from_s1322);
[L2387]  COND FALSE  !(revert)
[L2391]  COND TRUE   DType[this] == ONIT
[L2392]  CALL        call __var_24 := transferFrom~address~address~uint256_ERC20Pausable__success(this, msgsender_MSG, msgvalue_MSG, from_s1322, to_s1322, value_s1322);
[L2088]  CALL        call whenNotPaused_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L3558]  COND FALSE  !(!!_paused_Pausable[this])
[L2088]  RET         call whenNotPaused_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L2089]  COND FALSE  !(revert)
[L2092]  COND TRUE   DType[this] == ONIT
[L2093]  CALL        call __var_11 := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s1074, to_s1074, value_s1074);
[L1926]  CALL        call __var_5 := sub~uint256~uint256_SafeMath__success(this, this, 0, _allowed_ERC20[this][from_s760][msgsender_MSG], value_s760);
[L1679]  COND FALSE  !(!(b_s82 <= a_s82))
[L1683]              c_s82 := (a_s82 - b_s82) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1684]              __ret_0_ := c_s82;
[L1926]  RET         call __var_5 := sub~uint256~uint256_SafeMath__success(this, this, 0, _allowed_ERC20[this][from_s760][msgsender_MSG], value_s760);
[L1927]  COND FALSE  !(revert)
[L1930]              sum__allowed1[from_s760] := sum__allowed1[from_s760] - _allowed_ERC20[this][from_s760][msgsender_MSG];
[L1931]              _allowed_ERC20[this][from_s760][msgsender_MSG] := __var_5;
[L1932]              sum__allowed1[from_s760] := sum__allowed1[from_s760] + _allowed_ERC20[this][from_s760][msgsender_MSG];
[L1933]  COND TRUE   DType[this] == ONIT
[L1934]  CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s760, to_s760, value_s760);
[L1987]              __var_6 := null;
[L1988]  COND FALSE  !(!(to_s904 != null))
[L1992]  CALL        call __var_7 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][from_s904], value_s904);
[L1679]  COND FALSE  !(!(b_s82 <= a_s82))
[L1683]              c_s82 := (a_s82 - b_s82) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1684]              __ret_0_ := c_s82;
[L1992]  RET         call __var_7 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][from_s904], value_s904);
[L1993]  COND FALSE  !(revert)
[L1996]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][from_s904];
[L1997]              _balances_ERC20[this][from_s904] := __var_7;
[L1998]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][from_s904];
[L1999]  CALL        call __var_8 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][to_s904], value_s904);
[L1703]              c_s106 := (a_s106 + b_s106) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1704]  COND FALSE  !(!(c_s106 >= a_s106))
[L1708]              __ret_0_ := c_s106;
[L1999]  RET         call __var_8 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][to_s904], value_s904);
[L2000]  COND FALSE  !(revert)
[L2003]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][to_s904];
[L2004]              _balances_ERC20[this][to_s904] := __var_8;
[L2005]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][to_s904];
[L2006]              assert { :EventEmitted "Transfer_ERC20" } true;
[L1934]  RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s760, to_s760, value_s760);
[L1935]  COND FALSE  !(revert)
[L1951]              assert { :EventEmitted "Approval_ERC20" } true;
[L1952]              __ret_0_ := true;
[L2093]  RET         call __var_11 := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s1074, to_s1074, value_s1074);
[L2094]  COND FALSE  !(revert)
[L2105]              __ret_0_ := __var_11;
[L2392]  RET         call __var_24 := transferFrom~address~address~uint256_ERC20Pausable__success(this, msgsender_MSG, msgvalue_MSG, from_s1322, to_s1322, value_s1322);
[L2393]  COND FALSE  !(revert)
[L2399]              __ret_0_ := __var_24;
[L997]   RET         call __ret_0_ := transferFrom~address~address~uint256_ONIT__success(this, msgsender_MSG, msgvalue_MSG, from_s1322, to_s1322, value_s1322);
[L998]               assume !revert && gas >= 0;
[L4367]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_ONIT(this, msgsender_MSG, msgvalue_MSG, from_s1322, to_s1322, value_s1322);
[L4400]  RET         call CorralChoice_ONIT(this);

Loop:
[L4400]        assume true;

[2020-11-24 16:03:23,349 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 16:03:23,349 INFO  L82        PathProgramCache]: Analyzing trace with hash 1106210013, now seen corresponding path program 1 times
[2020-11-24 16:03:23,350 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 16:03:23,364 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 16:03:23,406 INFO  L134       CoverageAnalysis]: Checked inductivity of 20 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 20 trivial. 0 not checked.
[2020-11-24 16:03:23,406 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 16:03:23,407 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-24 16:03:23,407 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 16:03:23,407 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-24 16:03:23,407 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-24 16:03:23,407 INFO  L87              Difference]: Start difference. First operand 348 states and 377 transitions. cyclomatic complexity: 32 Second operand 4 states.
[2020-11-24 16:03:23,431 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 16:03:23,431 INFO  L93              Difference]: Finished difference Result 348 states and 376 transitions.
[2020-11-24 16:03:23,431 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-24 16:03:23,432 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 348 states and 376 transitions.
[2020-11-24 16:03:23,433 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 16:03:23,435 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 348 states to 348 states and 376 transitions.
[2020-11-24 16:03:23,435 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 141
[2020-11-24 16:03:23,435 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 141
[2020-11-24 16:03:23,435 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 348 states and 376 transitions.
[2020-11-24 16:03:23,436 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 16:03:23,436 INFO  L728         BuchiCegarLoop]: Abstraction has 348 states and 376 transitions.
[2020-11-24 16:03:23,436 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 348 states and 376 transitions.
[2020-11-24 16:03:23,439 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 348 to 348.
[2020-11-24 16:03:23,439 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 348 states.
[2020-11-24 16:03:23,440 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 348 states to 348 states and 376 transitions.
[2020-11-24 16:03:23,440 INFO  L751         BuchiCegarLoop]: Abstraction has 348 states and 376 transitions.
[2020-11-24 16:03:23,440 INFO  L631         BuchiCegarLoop]: Abstraction has 348 states and 376 transitions.
[2020-11-24 16:03:23,440 INFO  L445         BuchiCegarLoop]: ======== Iteration 7============
[2020-11-24 16:03:23,440 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 348 states and 376 transitions.
[2020-11-24 16:03:23,441 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 16:03:23,441 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 16:03:23,442 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 16:03:23,443 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [3, 3, 3, 3, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 16:03:23,443 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L2]                 fail_transferFrom_ONIT0 := false;
[L2]                 call_transferFrom_ONIT0 := false;
[L2]     CALL        call main();
[L4395]              assume null == 0;
[L4396]  CALL        call this := FreshRefGenerator__success();
[L1636]              havoc newRef;
[L1637]              assume Alloc[newRef] == false;
[L1638]              Alloc[newRef] := true;
[L1639]              assume newRef != null;
[L4396]  RET         call this := FreshRefGenerator__success();
[L4397]              assume now >= 0;
[L4398]              assume DType[this] == ONIT;
[L4399]              assume !revert && gas >= 0;
[L4400]  CALL        call CorralChoice_ONIT(this);
[L4275]              havoc msgsender_MSG;
[L4276]              havoc msgvalue_MSG;
[L4277]              havoc choice;
[L4278]              havoc __ret_0_owner;
[L4279]              havoc __ret_0_newOwner;
[L4280]              havoc account_s293;
[L4281]              havoc __ret_0_isOwner;
[L4282]              havoc _newOwner_s313;
[L4283]              havoc __ret_0_acceptOwnership;
[L4284]              havoc account_s390;
[L4285]              havoc __ret_0_isPauser;
[L4286]              havoc account_s402;
[L4287]              havoc account_s414;
[L4288]              havoc __ret_0_paused;
[L4289]              havoc to_s1288;
[L4290]              havoc value_s1288;
[L4291]              havoc __ret_0_transfer;
[L4292]              havoc spender_s711;
[L4293]              havoc value_s711;
[L4294]              havoc __ret_0_approve;
[L4295]              havoc from_s1322;
[L4296]              havoc to_s1322;
[L4297]              havoc value_s1322;
[L4298]              havoc __ret_0_transferFrom;
[L4299]              havoc __ret_0_totalSupply;
[L4300]              havoc owner_s1254;
[L4301]              havoc __ret_0_balanceOf;
[L4302]              havoc owner_s656;
[L4303]              havoc spender_s656;
[L4304]              havoc __ret_0_allowance;
[L4305]              havoc spender_s809;
[L4306]              havoc addedValue_s809;
[L4307]              havoc __ret_0_increaseAllowance;
[L4308]              havoc spender_s858;
[L4309]              havoc subtractedValue_s858;
[L4310]              havoc __ret_0_decreaseAllowance;
[L4311]              havoc name_s1105;
[L4312]              havoc symbol_s1105;
[L4313]              havoc decimals_s1105;
[L4314]              havoc __ret_0_name;
[L4315]              havoc __ret_0_symbol;
[L4316]              havoc __ret_0_decimals;
[L4317]              havoc __ret_0_implementation;
[L4318]              havoc arg1693_s0;
[L4319]              havoc arg1694_s0;
[L4320]              havoc __ret_0_timelockList;
[L4321]              havoc arg1695_s0;
[L4322]              havoc __ret_0_frozenAccount;
[L4323]              havoc holder_s1351;
[L4324]              havoc __ret_0_freezeAccount;
[L4325]              havoc holder_s1379;
[L4326]              havoc __ret_0_unfreezeAccount;
[L4327]              havoc holder_s1410;
[L4328]              havoc value_s1410;
[L4329]              havoc releaseTime_s1410;
[L4330]              havoc __ret_0_lock;
[L4331]              havoc holder_s1439;
[L4332]              havoc value_s1439;
[L4333]              havoc releaseTime_s1439;
[L4334]              havoc __ret_0_transferWithLock;
[L4335]              havoc holder_s1468;
[L4336]              havoc idx_s1468;
[L4337]              havoc __ret_0_unlock;
[L4338]              havoc _newImplementation_s1486;
[L4339]              havoc value_s1663;
[L4340]              havoc __ret_0_mint;
[L4341]              havoc tmpNow;
[L4342]              havoc gas;
[L4343]              assume gas > 4000000 && gas <= 8000000;
[L4344]              tmpNow := now;
[L4345]              havoc now;
[L4346]              assume now > tmpNow;
[L4347]              assume msgsender_MSG != null;
[L4348]  COND FALSE  !(choice == 6)
[L4355]  COND FALSE  !(choice == 5)
[L4362]  COND TRUE   choice == 4
[L4363]              gas := gas - 21000;
[L4364]  COND TRUE   gas >= 0
[L4365]              assume value_s1322 >= 0 && value_s1322 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4366]              assume msgvalue_MSG == 0;
[L4367]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_ONIT(this, msgsender_MSG, msgvalue_MSG, from_s1322, to_s1322, value_s1322);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((((from_s1322 == to_s1322 && (value_s1322 > _balances_ERC20[this][from_s1322] || value_s1322 > _allowed_ERC20[this][from_s1322][msgsender_MSG])) && value_s1322 >= 0) && value_s1322 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][to_s1322] >= 0) && _balances_ERC20[this][to_s1322] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][from_s1322] >= 0) && _balances_ERC20[this][from_s1322] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowed_ERC20[this][from_s1322][msgsender_MSG] >= 0) && _allowed_ERC20[this][from_s1322][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transferFrom_ONIT0 := true;
[L2]                 call_transferFrom_ONIT0 := false;
[L2]                 revert := revert_hold;
[L959]               havoc __exception;
[L960]               revert := false;
[L961]   COND FALSE  !(__exception)
[L997]   CALL        call __ret_0_ := transferFrom~address~address~uint256_ONIT__success(this, msgsender_MSG, msgvalue_MSG, from_s1322, to_s1322, value_s1322);
[L2370]  CALL        call notFrozen_pre__success(this, msgsender_MSG, msgvalue_MSG, from_s1322);
[L3582]  COND FALSE  !(!!frozenAccount_ONIT[this][_holder_s1185])
[L2370]  RET         call notFrozen_pre__success(this, msgsender_MSG, msgvalue_MSG, from_s1322);
[L2371]  COND FALSE  !(revert)
[L2374]  COND FALSE  !(alloc_timelockList_ONIT_lvl0[timelockList_ONIT[this]][from_s1322] == false)
[L2385]  COND TRUE   Length[M_Ref_Ref[timelockList_ONIT[this]][from_s1322]] > 0
[L2386]  CALL        call __var_23 := _autoUnlock~address_ONIT__success(this, msgsender_MSG, msgvalue_MSG, from_s1322);
[L2653]  COND FALSE  !(alloc_timelockList_ONIT_lvl0[timelockList_ONIT[this]][holder_s1645] == false)
[L2664]              idx_s1645 := 0;
[L2665]  COND TRUE   idx_s1645 < Length[M_Ref_Ref[timelockList_ONIT[this]][holder_s1645]]
[L2667]  COND FALSE  !(alloc_timelockList_ONIT_lvl0[timelockList_ONIT[this]][holder_s1645] == false)
[L2678]  COND TRUE   _releaseTime_ONIT.LockInfo[M_int_Ref[M_Ref_Ref[timelockList_ONIT[this]][holder_s1645]][idx_s1645]] <= now
[L2679]  CALL        call __var_36 := _unlock~address~uint256_ONIT__success(this, msgsender_MSG, msgvalue_MSG, holder_s1645, idx_s1645);
[L2512]  COND FALSE  !(alloc_timelockList_ONIT_lvl0[timelockList_ONIT[this]][holder_s1600] == false)
[L2523]              lockinfo_s1600 := M_int_Ref[M_Ref_Ref[timelockList_ONIT[this]][holder_s1600]][idx_s1600];
[L2524]              releaseAmount_s1600 := _amount_ONIT.LockInfo[lockinfo_s1600];
[L2525]  COND FALSE  !(alloc_timelockList_ONIT_lvl0[timelockList_ONIT[this]][holder_s1600] == false)
[L2536]  COND FALSE  !(alloc_timelockList_ONIT_lvl0[timelockList_ONIT[this]][holder_s1600] == false)
[L2547]  COND FALSE  !(alloc_timelockList_ONIT_lvl0[timelockList_ONIT[this]][holder_s1600] == false)
[L2558]  CALL        call __var_29 := sub~uint256~uint256_SafeMath__success(this, this, 0, Length[M_Ref_Ref[timelockList_ONIT[this]][holder_s1600]], 1);
[L1679]  COND FALSE  !(!(b_s82 <= a_s82))
[L1683]              c_s82 := (a_s82 - b_s82) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1684]              __ret_0_ := c_s82;
[L2558]  RET         call __var_29 := sub~uint256~uint256_SafeMath__success(this, this, 0, Length[M_Ref_Ref[timelockList_ONIT[this]][holder_s1600]], 1);
[L2559]  COND FALSE  !(revert)
[L2562]  COND FALSE  !(alloc_timelockList_ONIT_lvl0[timelockList_ONIT[this]][holder_s1600] == false)
[L2573]              M_int_Ref[M_Ref_Ref[timelockList_ONIT[this]][holder_s1600]][idx_s1600] := M_int_Ref[M_Ref_Ref[timelockList_ONIT[this]][holder_s1600]][__var_29];
[L2574]  COND FALSE  !(alloc_timelockList_ONIT_lvl0[timelockList_ONIT[this]][holder_s1600] == false)
[L2585]              Length[M_Ref_Ref[timelockList_ONIT[this]][holder_s1600]] := (Length[M_Ref_Ref[timelockList_ONIT[this]][holder_s1600]] - 1) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2586]              assert { :EventEmitted "Unlock_ONIT" } true;
[L2587]  CALL        call __var_33 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][holder_s1600], releaseAmount_s1600);
[L1703]              c_s106 := (a_s106 + b_s106) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1704]  COND FALSE  !(!(c_s106 >= a_s106))
[L1708]              __ret_0_ := c_s106;
[L2587]  RET         call __var_33 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][holder_s1600], releaseAmount_s1600);
[L2588]  COND FALSE  !(revert)
[L2591]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][holder_s1600];
[L2592]              _balances_ERC20[this][holder_s1600] := __var_33;
[L2593]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][holder_s1600];
[L2594]              __ret_0_ := true;
[L2679]  RET         call __var_36 := _unlock~address~uint256_ONIT__success(this, msgsender_MSG, msgvalue_MSG, holder_s1645, idx_s1645);
[L2680]  COND FALSE  !(revert)
[L2683]  COND FALSE  !(__var_36)
[L2687]              idx_s1645 := (idx_s1645 + 1) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2688]  COND FALSE  !(gas < 0)
[L2665]  COND FALSE  !(idx_s1645 < Length[M_Ref_Ref[timelockList_ONIT[this]][holder_s1645]])
[L2692]              __ret_0_ := true;
[L2386]  RET         call __var_23 := _autoUnlock~address_ONIT__success(this, msgsender_MSG, msgvalue_MSG, from_s1322);
[L2387]  COND FALSE  !(revert)
[L2391]  COND TRUE   DType[this] == ONIT
[L2392]  CALL        call __var_24 := transferFrom~address~address~uint256_ERC20Pausable__success(this, msgsender_MSG, msgvalue_MSG, from_s1322, to_s1322, value_s1322);
[L2088]  CALL        call whenNotPaused_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L3558]  COND FALSE  !(!!_paused_Pausable[this])
[L2088]  RET         call whenNotPaused_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L2089]  COND FALSE  !(revert)
[L2092]  COND TRUE   DType[this] == ONIT
[L2093]  CALL        call __var_11 := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s1074, to_s1074, value_s1074);
[L1926]  CALL        call __var_5 := sub~uint256~uint256_SafeMath__success(this, this, 0, _allowed_ERC20[this][from_s760][msgsender_MSG], value_s760);
[L1679]  COND FALSE  !(!(b_s82 <= a_s82))
[L1683]              c_s82 := (a_s82 - b_s82) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1684]              __ret_0_ := c_s82;
[L1926]  RET         call __var_5 := sub~uint256~uint256_SafeMath__success(this, this, 0, _allowed_ERC20[this][from_s760][msgsender_MSG], value_s760);
[L1927]  COND FALSE  !(revert)
[L1930]              sum__allowed1[from_s760] := sum__allowed1[from_s760] - _allowed_ERC20[this][from_s760][msgsender_MSG];
[L1931]              _allowed_ERC20[this][from_s760][msgsender_MSG] := __var_5;
[L1932]              sum__allowed1[from_s760] := sum__allowed1[from_s760] + _allowed_ERC20[this][from_s760][msgsender_MSG];
[L1933]  COND TRUE   DType[this] == ONIT
[L1934]  CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s760, to_s760, value_s760);
[L1987]              __var_6 := null;
[L1988]  COND FALSE  !(!(to_s904 != null))
[L1992]  CALL        call __var_7 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][from_s904], value_s904);
[L1679]  COND FALSE  !(!(b_s82 <= a_s82))
[L1683]              c_s82 := (a_s82 - b_s82) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1684]              __ret_0_ := c_s82;
[L1992]  RET         call __var_7 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][from_s904], value_s904);
[L1993]  COND FALSE  !(revert)
[L1996]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][from_s904];
[L1997]              _balances_ERC20[this][from_s904] := __var_7;
[L1998]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][from_s904];
[L1999]  CALL        call __var_8 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][to_s904], value_s904);
[L1703]              c_s106 := (a_s106 + b_s106) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1704]  COND FALSE  !(!(c_s106 >= a_s106))
[L1708]              __ret_0_ := c_s106;
[L1999]  RET         call __var_8 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][to_s904], value_s904);
[L2000]  COND FALSE  !(revert)
[L2003]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][to_s904];
[L2004]              _balances_ERC20[this][to_s904] := __var_8;
[L2005]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][to_s904];
[L2006]              assert { :EventEmitted "Transfer_ERC20" } true;
[L1934]  RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s760, to_s760, value_s760);
[L1935]  COND FALSE  !(revert)
[L1951]              assert { :EventEmitted "Approval_ERC20" } true;
[L1952]              __ret_0_ := true;
[L2093]  RET         call __var_11 := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s1074, to_s1074, value_s1074);
[L2094]  COND FALSE  !(revert)
[L2105]              __ret_0_ := __var_11;
[L2392]  RET         call __var_24 := transferFrom~address~address~uint256_ERC20Pausable__success(this, msgsender_MSG, msgvalue_MSG, from_s1322, to_s1322, value_s1322);
[L2393]  COND FALSE  !(revert)
[L2399]              __ret_0_ := __var_24;
[L997]   RET         call __ret_0_ := transferFrom~address~address~uint256_ONIT__success(this, msgsender_MSG, msgvalue_MSG, from_s1322, to_s1322, value_s1322);
[L998]               assume !revert && gas >= 0;
[L4367]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_ONIT(this, msgsender_MSG, msgvalue_MSG, from_s1322, to_s1322, value_s1322);
[L4400]  RET         call CorralChoice_ONIT(this);

Loop:
[L4400]        assume true;

[2020-11-24 16:03:23,446 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 16:03:23,446 INFO  L82        PathProgramCache]: Analyzing trace with hash 1859101493, now seen corresponding path program 1 times
[2020-11-24 16:03:23,447 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 16:03:23,460 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 16:03:23,494 INFO  L134       CoverageAnalysis]: Checked inductivity of 21 backedges. 1 proven. 0 refuted. 0 times theorem prover too weak. 20 trivial. 0 not checked.
[2020-11-24 16:03:23,495 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 16:03:23,495 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-24 16:03:23,495 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 16:03:23,495 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-24 16:03:23,495 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-24 16:03:23,495 INFO  L87              Difference]: Start difference. First operand 348 states and 376 transitions. cyclomatic complexity: 31 Second operand 4 states.
[2020-11-24 16:03:23,498 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 16:03:23,498 INFO  L93              Difference]: Finished difference Result 349 states and 377 transitions.
[2020-11-24 16:03:23,498 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-24 16:03:23,498 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 349 states and 377 transitions.
[2020-11-24 16:03:23,500 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 16:03:23,501 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 349 states to 349 states and 377 transitions.
[2020-11-24 16:03:23,501 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 141
[2020-11-24 16:03:23,501 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 141
[2020-11-24 16:03:23,501 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 349 states and 377 transitions.
[2020-11-24 16:03:23,501 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 16:03:23,501 INFO  L728         BuchiCegarLoop]: Abstraction has 349 states and 377 transitions.
[2020-11-24 16:03:23,502 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 349 states and 377 transitions.
[2020-11-24 16:03:23,504 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 349 to 348.
[2020-11-24 16:03:23,504 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 348 states.
[2020-11-24 16:03:23,505 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 348 states to 348 states and 375 transitions.
[2020-11-24 16:03:23,505 INFO  L751         BuchiCegarLoop]: Abstraction has 348 states and 375 transitions.
[2020-11-24 16:03:23,505 INFO  L631         BuchiCegarLoop]: Abstraction has 348 states and 375 transitions.
[2020-11-24 16:03:23,505 INFO  L445         BuchiCegarLoop]: ======== Iteration 8============
[2020-11-24 16:03:23,505 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 348 states and 375 transitions.
[2020-11-24 16:03:23,506 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 16:03:23,506 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 16:03:23,506 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 16:03:23,507 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [3, 3, 3, 3, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 16:03:23,507 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L2]                 fail_transferFrom_ONIT0 := false;
[L2]                 call_transferFrom_ONIT0 := false;
[L2]     CALL        call main();
[L4395]              assume null == 0;
[L4396]  CALL        call this := FreshRefGenerator__success();
[L1636]              havoc newRef;
[L1637]              assume Alloc[newRef] == false;
[L1638]              Alloc[newRef] := true;
[L1639]              assume newRef != null;
[L4396]  RET         call this := FreshRefGenerator__success();
[L4397]              assume now >= 0;
[L4398]              assume DType[this] == ONIT;
[L4399]              assume !revert && gas >= 0;
[L4400]  CALL        call CorralChoice_ONIT(this);
[L4275]              havoc msgsender_MSG;
[L4276]              havoc msgvalue_MSG;
[L4277]              havoc choice;
[L4278]              havoc __ret_0_owner;
[L4279]              havoc __ret_0_newOwner;
[L4280]              havoc account_s293;
[L4281]              havoc __ret_0_isOwner;
[L4282]              havoc _newOwner_s313;
[L4283]              havoc __ret_0_acceptOwnership;
[L4284]              havoc account_s390;
[L4285]              havoc __ret_0_isPauser;
[L4286]              havoc account_s402;
[L4287]              havoc account_s414;
[L4288]              havoc __ret_0_paused;
[L4289]              havoc to_s1288;
[L4290]              havoc value_s1288;
[L4291]              havoc __ret_0_transfer;
[L4292]              havoc spender_s711;
[L4293]              havoc value_s711;
[L4294]              havoc __ret_0_approve;
[L4295]              havoc from_s1322;
[L4296]              havoc to_s1322;
[L4297]              havoc value_s1322;
[L4298]              havoc __ret_0_transferFrom;
[L4299]              havoc __ret_0_totalSupply;
[L4300]              havoc owner_s1254;
[L4301]              havoc __ret_0_balanceOf;
[L4302]              havoc owner_s656;
[L4303]              havoc spender_s656;
[L4304]              havoc __ret_0_allowance;
[L4305]              havoc spender_s809;
[L4306]              havoc addedValue_s809;
[L4307]              havoc __ret_0_increaseAllowance;
[L4308]              havoc spender_s858;
[L4309]              havoc subtractedValue_s858;
[L4310]              havoc __ret_0_decreaseAllowance;
[L4311]              havoc name_s1105;
[L4312]              havoc symbol_s1105;
[L4313]              havoc decimals_s1105;
[L4314]              havoc __ret_0_name;
[L4315]              havoc __ret_0_symbol;
[L4316]              havoc __ret_0_decimals;
[L4317]              havoc __ret_0_implementation;
[L4318]              havoc arg1693_s0;
[L4319]              havoc arg1694_s0;
[L4320]              havoc __ret_0_timelockList;
[L4321]              havoc arg1695_s0;
[L4322]              havoc __ret_0_frozenAccount;
[L4323]              havoc holder_s1351;
[L4324]              havoc __ret_0_freezeAccount;
[L4325]              havoc holder_s1379;
[L4326]              havoc __ret_0_unfreezeAccount;
[L4327]              havoc holder_s1410;
[L4328]              havoc value_s1410;
[L4329]              havoc releaseTime_s1410;
[L4330]              havoc __ret_0_lock;
[L4331]              havoc holder_s1439;
[L4332]              havoc value_s1439;
[L4333]              havoc releaseTime_s1439;
[L4334]              havoc __ret_0_transferWithLock;
[L4335]              havoc holder_s1468;
[L4336]              havoc idx_s1468;
[L4337]              havoc __ret_0_unlock;
[L4338]              havoc _newImplementation_s1486;
[L4339]              havoc value_s1663;
[L4340]              havoc __ret_0_mint;
[L4341]              havoc tmpNow;
[L4342]              havoc gas;
[L4343]              assume gas > 4000000 && gas <= 8000000;
[L4344]              tmpNow := now;
[L4345]              havoc now;
[L4346]              assume now > tmpNow;
[L4347]              assume msgsender_MSG != null;
[L4348]  COND FALSE  !(choice == 6)
[L4355]  COND FALSE  !(choice == 5)
[L4362]  COND TRUE   choice == 4
[L4363]              gas := gas - 21000;
[L4364]  COND TRUE   gas >= 0
[L4365]              assume value_s1322 >= 0 && value_s1322 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4366]              assume msgvalue_MSG == 0;
[L4367]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_ONIT(this, msgsender_MSG, msgvalue_MSG, from_s1322, to_s1322, value_s1322);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((((from_s1322 == to_s1322 && (value_s1322 > _balances_ERC20[this][from_s1322] || value_s1322 > _allowed_ERC20[this][from_s1322][msgsender_MSG])) && value_s1322 >= 0) && value_s1322 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][to_s1322] >= 0) && _balances_ERC20[this][to_s1322] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][from_s1322] >= 0) && _balances_ERC20[this][from_s1322] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowed_ERC20[this][from_s1322][msgsender_MSG] >= 0) && _allowed_ERC20[this][from_s1322][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transferFrom_ONIT0 := true;
[L2]                 call_transferFrom_ONIT0 := false;
[L2]                 revert := revert_hold;
[L959]               havoc __exception;
[L960]               revert := false;
[L961]   COND FALSE  !(__exception)
[L997]   CALL        call __ret_0_ := transferFrom~address~address~uint256_ONIT__success(this, msgsender_MSG, msgvalue_MSG, from_s1322, to_s1322, value_s1322);
[L2370]  CALL        call notFrozen_pre__success(this, msgsender_MSG, msgvalue_MSG, from_s1322);
[L3582]  COND FALSE  !(!!frozenAccount_ONIT[this][_holder_s1185])
[L2370]  RET         call notFrozen_pre__success(this, msgsender_MSG, msgvalue_MSG, from_s1322);
[L2371]  COND FALSE  !(revert)
[L2374]  COND FALSE  !(alloc_timelockList_ONIT_lvl0[timelockList_ONIT[this]][from_s1322] == false)
[L2385]  COND TRUE   Length[M_Ref_Ref[timelockList_ONIT[this]][from_s1322]] > 0
[L2386]  CALL        call __var_23 := _autoUnlock~address_ONIT__success(this, msgsender_MSG, msgvalue_MSG, from_s1322);
[L2653]  COND FALSE  !(alloc_timelockList_ONIT_lvl0[timelockList_ONIT[this]][holder_s1645] == false)
[L2664]              idx_s1645 := 0;
[L2665]  COND TRUE   idx_s1645 < Length[M_Ref_Ref[timelockList_ONIT[this]][holder_s1645]]
[L2667]  COND FALSE  !(alloc_timelockList_ONIT_lvl0[timelockList_ONIT[this]][holder_s1645] == false)
[L2678]  COND TRUE   _releaseTime_ONIT.LockInfo[M_int_Ref[M_Ref_Ref[timelockList_ONIT[this]][holder_s1645]][idx_s1645]] <= now
[L2679]  CALL        call __var_36 := _unlock~address~uint256_ONIT__success(this, msgsender_MSG, msgvalue_MSG, holder_s1645, idx_s1645);
[L2512]  COND FALSE  !(alloc_timelockList_ONIT_lvl0[timelockList_ONIT[this]][holder_s1600] == false)
[L2523]              lockinfo_s1600 := M_int_Ref[M_Ref_Ref[timelockList_ONIT[this]][holder_s1600]][idx_s1600];
[L2524]              releaseAmount_s1600 := _amount_ONIT.LockInfo[lockinfo_s1600];
[L2525]  COND FALSE  !(alloc_timelockList_ONIT_lvl0[timelockList_ONIT[this]][holder_s1600] == false)
[L2536]  COND FALSE  !(alloc_timelockList_ONIT_lvl0[timelockList_ONIT[this]][holder_s1600] == false)
[L2547]  COND FALSE  !(alloc_timelockList_ONIT_lvl0[timelockList_ONIT[this]][holder_s1600] == false)
[L2558]  CALL        call __var_29 := sub~uint256~uint256_SafeMath__success(this, this, 0, Length[M_Ref_Ref[timelockList_ONIT[this]][holder_s1600]], 1);
[L1679]  COND FALSE  !(!(b_s82 <= a_s82))
[L1683]              c_s82 := (a_s82 - b_s82) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1684]              __ret_0_ := c_s82;
[L2558]  RET         call __var_29 := sub~uint256~uint256_SafeMath__success(this, this, 0, Length[M_Ref_Ref[timelockList_ONIT[this]][holder_s1600]], 1);
[L2559]  COND FALSE  !(revert)
[L2562]  COND FALSE  !(alloc_timelockList_ONIT_lvl0[timelockList_ONIT[this]][holder_s1600] == false)
[L2573]              M_int_Ref[M_Ref_Ref[timelockList_ONIT[this]][holder_s1600]][idx_s1600] := M_int_Ref[M_Ref_Ref[timelockList_ONIT[this]][holder_s1600]][__var_29];
[L2574]  COND FALSE  !(alloc_timelockList_ONIT_lvl0[timelockList_ONIT[this]][holder_s1600] == false)
[L2585]              Length[M_Ref_Ref[timelockList_ONIT[this]][holder_s1600]] := (Length[M_Ref_Ref[timelockList_ONIT[this]][holder_s1600]] - 1) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2586]              assert { :EventEmitted "Unlock_ONIT" } true;
[L2587]  CALL        call __var_33 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][holder_s1600], releaseAmount_s1600);
[L1703]              c_s106 := (a_s106 + b_s106) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1704]  COND FALSE  !(!(c_s106 >= a_s106))
[L1708]              __ret_0_ := c_s106;
[L2587]  RET         call __var_33 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][holder_s1600], releaseAmount_s1600);
[L2588]  COND FALSE  !(revert)
[L2591]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][holder_s1600];
[L2592]              _balances_ERC20[this][holder_s1600] := __var_33;
[L2593]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][holder_s1600];
[L2594]              __ret_0_ := true;
[L2679]  RET         call __var_36 := _unlock~address~uint256_ONIT__success(this, msgsender_MSG, msgvalue_MSG, holder_s1645, idx_s1645);
[L2680]  COND FALSE  !(revert)
[L2683]  COND TRUE   __var_36
[L2684]              idx_s1645 := (idx_s1645 - 1) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2687]              idx_s1645 := (idx_s1645 + 1) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2688]  COND FALSE  !(gas < 0)
[L2665]  COND FALSE  !(idx_s1645 < Length[M_Ref_Ref[timelockList_ONIT[this]][holder_s1645]])
[L2692]              __ret_0_ := true;
[L2386]  RET         call __var_23 := _autoUnlock~address_ONIT__success(this, msgsender_MSG, msgvalue_MSG, from_s1322);
[L2387]  COND FALSE  !(revert)
[L2391]  COND TRUE   DType[this] == ONIT
[L2392]  CALL        call __var_24 := transferFrom~address~address~uint256_ERC20Pausable__success(this, msgsender_MSG, msgvalue_MSG, from_s1322, to_s1322, value_s1322);
[L2088]  CALL        call whenNotPaused_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L3558]  COND FALSE  !(!!_paused_Pausable[this])
[L2088]  RET         call whenNotPaused_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L2089]  COND FALSE  !(revert)
[L2092]  COND TRUE   DType[this] == ONIT
[L2093]  CALL        call __var_11 := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s1074, to_s1074, value_s1074);
[L1926]  CALL        call __var_5 := sub~uint256~uint256_SafeMath__success(this, this, 0, _allowed_ERC20[this][from_s760][msgsender_MSG], value_s760);
[L1679]  COND FALSE  !(!(b_s82 <= a_s82))
[L1683]              c_s82 := (a_s82 - b_s82) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1684]              __ret_0_ := c_s82;
[L1926]  RET         call __var_5 := sub~uint256~uint256_SafeMath__success(this, this, 0, _allowed_ERC20[this][from_s760][msgsender_MSG], value_s760);
[L1927]  COND FALSE  !(revert)
[L1930]              sum__allowed1[from_s760] := sum__allowed1[from_s760] - _allowed_ERC20[this][from_s760][msgsender_MSG];
[L1931]              _allowed_ERC20[this][from_s760][msgsender_MSG] := __var_5;
[L1932]              sum__allowed1[from_s760] := sum__allowed1[from_s760] + _allowed_ERC20[this][from_s760][msgsender_MSG];
[L1933]  COND FALSE  !(DType[this] == ONIT)
[L1938]  COND FALSE  !(DType[this] == ERC20Pausable)
[L1943]  COND TRUE   DType[this] == ERC20
[L1944]  CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s760, to_s760, value_s760);
[L1987]              __var_6 := null;
[L1988]  COND FALSE  !(!(to_s904 != null))
[L1992]  CALL        call __var_7 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][from_s904], value_s904);
[L1679]  COND FALSE  !(!(b_s82 <= a_s82))
[L1683]              c_s82 := (a_s82 - b_s82) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1684]              __ret_0_ := c_s82;
[L1992]  RET         call __var_7 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][from_s904], value_s904);
[L1993]  COND FALSE  !(revert)
[L1996]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][from_s904];
[L1997]              _balances_ERC20[this][from_s904] := __var_7;
[L1998]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][from_s904];
[L1999]  CALL        call __var_8 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][to_s904], value_s904);
[L1703]              c_s106 := (a_s106 + b_s106) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1704]  COND FALSE  !(!(c_s106 >= a_s106))
[L1708]              __ret_0_ := c_s106;
[L1999]  RET         call __var_8 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][to_s904], value_s904);
[L2000]  COND FALSE  !(revert)
[L2003]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][to_s904];
[L2004]              _balances_ERC20[this][to_s904] := __var_8;
[L2005]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][to_s904];
[L2006]              assert { :EventEmitted "Transfer_ERC20" } true;
[L1944]  RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s760, to_s760, value_s760);
[L1945]  COND FALSE  !(revert)
[L1951]              assert { :EventEmitted "Approval_ERC20" } true;
[L1952]              __ret_0_ := true;
[L2093]  RET         call __var_11 := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s1074, to_s1074, value_s1074);
[L2094]  COND FALSE  !(revert)
[L2105]              __ret_0_ := __var_11;
[L2392]  RET         call __var_24 := transferFrom~address~address~uint256_ERC20Pausable__success(this, msgsender_MSG, msgvalue_MSG, from_s1322, to_s1322, value_s1322);
[L2393]  COND FALSE  !(revert)
[L2399]              __ret_0_ := __var_24;
[L997]   RET         call __ret_0_ := transferFrom~address~address~uint256_ONIT__success(this, msgsender_MSG, msgvalue_MSG, from_s1322, to_s1322, value_s1322);
[L998]               assume !revert && gas >= 0;
[L4367]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_ONIT(this, msgsender_MSG, msgvalue_MSG, from_s1322, to_s1322, value_s1322);
[L4400]  RET         call CorralChoice_ONIT(this);

Loop:
[L4400]        assume true;

[2020-11-24 16:03:23,509 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 16:03:23,509 INFO  L82        PathProgramCache]: Analyzing trace with hash -881462023, now seen corresponding path program 1 times
[2020-11-24 16:03:23,510 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 16:03:23,519 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 16:03:23,551 INFO  L134       CoverageAnalysis]: Checked inductivity of 21 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 21 trivial. 0 not checked.
[2020-11-24 16:03:23,551 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 16:03:23,551 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [5] imperfect sequences [] total 5
[2020-11-24 16:03:23,552 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 16:03:23,552 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 5 interpolants.
[2020-11-24 16:03:23,552 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=7, Invalid=13, Unknown=0, NotChecked=0, Total=20
[2020-11-24 16:03:23,552 INFO  L87              Difference]: Start difference. First operand 348 states and 375 transitions. cyclomatic complexity: 30 Second operand 5 states.
[2020-11-24 16:03:23,562 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 16:03:23,562 INFO  L93              Difference]: Finished difference Result 357 states and 383 transitions.
[2020-11-24 16:03:23,562 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 5 states. 
[2020-11-24 16:03:23,562 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 357 states and 383 transitions.
[2020-11-24 16:03:23,563 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 16:03:23,564 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 357 states to 342 states and 367 transitions.
[2020-11-24 16:03:23,565 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 139
[2020-11-24 16:03:23,565 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 139
[2020-11-24 16:03:23,565 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 342 states and 367 transitions.
[2020-11-24 16:03:23,565 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 16:03:23,565 INFO  L728         BuchiCegarLoop]: Abstraction has 342 states and 367 transitions.
[2020-11-24 16:03:23,566 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 342 states and 367 transitions.
[2020-11-24 16:03:23,568 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 342 to 342.
[2020-11-24 16:03:23,568 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 342 states.
[2020-11-24 16:03:23,568 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 342 states to 342 states and 367 transitions.
[2020-11-24 16:03:23,568 INFO  L751         BuchiCegarLoop]: Abstraction has 342 states and 367 transitions.
[2020-11-24 16:03:23,568 INFO  L631         BuchiCegarLoop]: Abstraction has 342 states and 367 transitions.
[2020-11-24 16:03:23,569 INFO  L445         BuchiCegarLoop]: ======== Iteration 9============
[2020-11-24 16:03:23,569 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 342 states and 367 transitions.
[2020-11-24 16:03:23,569 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 16:03:23,569 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 16:03:23,569 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 16:03:23,570 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [3, 3, 3, 3, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 16:03:23,570 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L2]                 fail_transferFrom_ONIT0 := false;
[L2]                 call_transferFrom_ONIT0 := false;
[L2]     CALL        call main();
[L4395]              assume null == 0;
[L4396]  CALL        call this := FreshRefGenerator__success();
[L1636]              havoc newRef;
[L1637]              assume Alloc[newRef] == false;
[L1638]              Alloc[newRef] := true;
[L1639]              assume newRef != null;
[L4396]  RET         call this := FreshRefGenerator__success();
[L4397]              assume now >= 0;
[L4398]              assume DType[this] == ONIT;
[L4399]              assume !revert && gas >= 0;
[L4400]  CALL        call CorralChoice_ONIT(this);
[L4275]              havoc msgsender_MSG;
[L4276]              havoc msgvalue_MSG;
[L4277]              havoc choice;
[L4278]              havoc __ret_0_owner;
[L4279]              havoc __ret_0_newOwner;
[L4280]              havoc account_s293;
[L4281]              havoc __ret_0_isOwner;
[L4282]              havoc _newOwner_s313;
[L4283]              havoc __ret_0_acceptOwnership;
[L4284]              havoc account_s390;
[L4285]              havoc __ret_0_isPauser;
[L4286]              havoc account_s402;
[L4287]              havoc account_s414;
[L4288]              havoc __ret_0_paused;
[L4289]              havoc to_s1288;
[L4290]              havoc value_s1288;
[L4291]              havoc __ret_0_transfer;
[L4292]              havoc spender_s711;
[L4293]              havoc value_s711;
[L4294]              havoc __ret_0_approve;
[L4295]              havoc from_s1322;
[L4296]              havoc to_s1322;
[L4297]              havoc value_s1322;
[L4298]              havoc __ret_0_transferFrom;
[L4299]              havoc __ret_0_totalSupply;
[L4300]              havoc owner_s1254;
[L4301]              havoc __ret_0_balanceOf;
[L4302]              havoc owner_s656;
[L4303]              havoc spender_s656;
[L4304]              havoc __ret_0_allowance;
[L4305]              havoc spender_s809;
[L4306]              havoc addedValue_s809;
[L4307]              havoc __ret_0_increaseAllowance;
[L4308]              havoc spender_s858;
[L4309]              havoc subtractedValue_s858;
[L4310]              havoc __ret_0_decreaseAllowance;
[L4311]              havoc name_s1105;
[L4312]              havoc symbol_s1105;
[L4313]              havoc decimals_s1105;
[L4314]              havoc __ret_0_name;
[L4315]              havoc __ret_0_symbol;
[L4316]              havoc __ret_0_decimals;
[L4317]              havoc __ret_0_implementation;
[L4318]              havoc arg1693_s0;
[L4319]              havoc arg1694_s0;
[L4320]              havoc __ret_0_timelockList;
[L4321]              havoc arg1695_s0;
[L4322]              havoc __ret_0_frozenAccount;
[L4323]              havoc holder_s1351;
[L4324]              havoc __ret_0_freezeAccount;
[L4325]              havoc holder_s1379;
[L4326]              havoc __ret_0_unfreezeAccount;
[L4327]              havoc holder_s1410;
[L4328]              havoc value_s1410;
[L4329]              havoc releaseTime_s1410;
[L4330]              havoc __ret_0_lock;
[L4331]              havoc holder_s1439;
[L4332]              havoc value_s1439;
[L4333]              havoc releaseTime_s1439;
[L4334]              havoc __ret_0_transferWithLock;
[L4335]              havoc holder_s1468;
[L4336]              havoc idx_s1468;
[L4337]              havoc __ret_0_unlock;
[L4338]              havoc _newImplementation_s1486;
[L4339]              havoc value_s1663;
[L4340]              havoc __ret_0_mint;
[L4341]              havoc tmpNow;
[L4342]              havoc gas;
[L4343]              assume gas > 4000000 && gas <= 8000000;
[L4344]              tmpNow := now;
[L4345]              havoc now;
[L4346]              assume now > tmpNow;
[L4347]              assume msgsender_MSG != null;
[L4348]  COND FALSE  !(choice == 6)
[L4355]  COND FALSE  !(choice == 5)
[L4362]  COND TRUE   choice == 4
[L4363]              gas := gas - 21000;
[L4364]  COND TRUE   gas >= 0
[L4365]              assume value_s1322 >= 0 && value_s1322 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4366]              assume msgvalue_MSG == 0;
[L4367]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_ONIT(this, msgsender_MSG, msgvalue_MSG, from_s1322, to_s1322, value_s1322);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((((from_s1322 == to_s1322 && (value_s1322 > _balances_ERC20[this][from_s1322] || value_s1322 > _allowed_ERC20[this][from_s1322][msgsender_MSG])) && value_s1322 >= 0) && value_s1322 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][to_s1322] >= 0) && _balances_ERC20[this][to_s1322] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][from_s1322] >= 0) && _balances_ERC20[this][from_s1322] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowed_ERC20[this][from_s1322][msgsender_MSG] >= 0) && _allowed_ERC20[this][from_s1322][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transferFrom_ONIT0 := true;
[L2]                 call_transferFrom_ONIT0 := false;
[L2]                 revert := revert_hold;
[L959]               havoc __exception;
[L960]               revert := false;
[L961]   COND FALSE  !(__exception)
[L997]   CALL        call __ret_0_ := transferFrom~address~address~uint256_ONIT__success(this, msgsender_MSG, msgvalue_MSG, from_s1322, to_s1322, value_s1322);
[L2370]  CALL        call notFrozen_pre__success(this, msgsender_MSG, msgvalue_MSG, from_s1322);
[L3582]  COND FALSE  !(!!frozenAccount_ONIT[this][_holder_s1185])
[L2370]  RET         call notFrozen_pre__success(this, msgsender_MSG, msgvalue_MSG, from_s1322);
[L2371]  COND FALSE  !(revert)
[L2374]  COND FALSE  !(alloc_timelockList_ONIT_lvl0[timelockList_ONIT[this]][from_s1322] == false)
[L2385]  COND TRUE   Length[M_Ref_Ref[timelockList_ONIT[this]][from_s1322]] > 0
[L2386]  CALL        call __var_23 := _autoUnlock~address_ONIT__success(this, msgsender_MSG, msgvalue_MSG, from_s1322);
[L2653]  COND FALSE  !(alloc_timelockList_ONIT_lvl0[timelockList_ONIT[this]][holder_s1645] == false)
[L2664]              idx_s1645 := 0;
[L2665]  COND TRUE   idx_s1645 < Length[M_Ref_Ref[timelockList_ONIT[this]][holder_s1645]]
[L2667]  COND FALSE  !(alloc_timelockList_ONIT_lvl0[timelockList_ONIT[this]][holder_s1645] == false)
[L2678]  COND TRUE   _releaseTime_ONIT.LockInfo[M_int_Ref[M_Ref_Ref[timelockList_ONIT[this]][holder_s1645]][idx_s1645]] <= now
[L2679]  CALL        call __var_36 := _unlock~address~uint256_ONIT__success(this, msgsender_MSG, msgvalue_MSG, holder_s1645, idx_s1645);
[L2512]  COND FALSE  !(alloc_timelockList_ONIT_lvl0[timelockList_ONIT[this]][holder_s1600] == false)
[L2523]              lockinfo_s1600 := M_int_Ref[M_Ref_Ref[timelockList_ONIT[this]][holder_s1600]][idx_s1600];
[L2524]              releaseAmount_s1600 := _amount_ONIT.LockInfo[lockinfo_s1600];
[L2525]  COND FALSE  !(alloc_timelockList_ONIT_lvl0[timelockList_ONIT[this]][holder_s1600] == false)
[L2536]  COND FALSE  !(alloc_timelockList_ONIT_lvl0[timelockList_ONIT[this]][holder_s1600] == false)
[L2547]  COND FALSE  !(alloc_timelockList_ONIT_lvl0[timelockList_ONIT[this]][holder_s1600] == false)
[L2558]  CALL        call __var_29 := sub~uint256~uint256_SafeMath__success(this, this, 0, Length[M_Ref_Ref[timelockList_ONIT[this]][holder_s1600]], 1);
[L1679]  COND FALSE  !(!(b_s82 <= a_s82))
[L1683]              c_s82 := (a_s82 - b_s82) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1684]              __ret_0_ := c_s82;
[L2558]  RET         call __var_29 := sub~uint256~uint256_SafeMath__success(this, this, 0, Length[M_Ref_Ref[timelockList_ONIT[this]][holder_s1600]], 1);
[L2559]  COND FALSE  !(revert)
[L2562]  COND FALSE  !(alloc_timelockList_ONIT_lvl0[timelockList_ONIT[this]][holder_s1600] == false)
[L2573]              M_int_Ref[M_Ref_Ref[timelockList_ONIT[this]][holder_s1600]][idx_s1600] := M_int_Ref[M_Ref_Ref[timelockList_ONIT[this]][holder_s1600]][__var_29];
[L2574]  COND FALSE  !(alloc_timelockList_ONIT_lvl0[timelockList_ONIT[this]][holder_s1600] == false)
[L2585]              Length[M_Ref_Ref[timelockList_ONIT[this]][holder_s1600]] := (Length[M_Ref_Ref[timelockList_ONIT[this]][holder_s1600]] - 1) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2586]              assert { :EventEmitted "Unlock_ONIT" } true;
[L2587]  CALL        call __var_33 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][holder_s1600], releaseAmount_s1600);
[L1703]              c_s106 := (a_s106 + b_s106) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1704]  COND FALSE  !(!(c_s106 >= a_s106))
[L1708]              __ret_0_ := c_s106;
[L2587]  RET         call __var_33 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][holder_s1600], releaseAmount_s1600);
[L2588]  COND FALSE  !(revert)
[L2591]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][holder_s1600];
[L2592]              _balances_ERC20[this][holder_s1600] := __var_33;
[L2593]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][holder_s1600];
[L2594]              __ret_0_ := true;
[L2679]  RET         call __var_36 := _unlock~address~uint256_ONIT__success(this, msgsender_MSG, msgvalue_MSG, holder_s1645, idx_s1645);
[L2680]  COND FALSE  !(revert)
[L2683]  COND TRUE   __var_36
[L2684]              idx_s1645 := (idx_s1645 - 1) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2687]              idx_s1645 := (idx_s1645 + 1) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2688]  COND FALSE  !(gas < 0)
[L2665]  COND FALSE  !(idx_s1645 < Length[M_Ref_Ref[timelockList_ONIT[this]][holder_s1645]])
[L2692]              __ret_0_ := true;
[L2386]  RET         call __var_23 := _autoUnlock~address_ONIT__success(this, msgsender_MSG, msgvalue_MSG, from_s1322);
[L2387]  COND FALSE  !(revert)
[L2391]  COND TRUE   DType[this] == ONIT
[L2392]  CALL        call __var_24 := transferFrom~address~address~uint256_ERC20Pausable__success(this, msgsender_MSG, msgvalue_MSG, from_s1322, to_s1322, value_s1322);
[L2088]  CALL        call whenNotPaused_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L3558]  COND FALSE  !(!!_paused_Pausable[this])
[L2088]  RET         call whenNotPaused_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L2089]  COND FALSE  !(revert)
[L2092]  COND TRUE   DType[this] == ONIT
[L2093]  CALL        call __var_11 := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s1074, to_s1074, value_s1074);
[L1926]  CALL        call __var_5 := sub~uint256~uint256_SafeMath__success(this, this, 0, _allowed_ERC20[this][from_s760][msgsender_MSG], value_s760);
[L1679]  COND FALSE  !(!(b_s82 <= a_s82))
[L1683]              c_s82 := (a_s82 - b_s82) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1684]              __ret_0_ := c_s82;
[L1926]  RET         call __var_5 := sub~uint256~uint256_SafeMath__success(this, this, 0, _allowed_ERC20[this][from_s760][msgsender_MSG], value_s760);
[L1927]  COND FALSE  !(revert)
[L1930]              sum__allowed1[from_s760] := sum__allowed1[from_s760] - _allowed_ERC20[this][from_s760][msgsender_MSG];
[L1931]              _allowed_ERC20[this][from_s760][msgsender_MSG] := __var_5;
[L1932]              sum__allowed1[from_s760] := sum__allowed1[from_s760] + _allowed_ERC20[this][from_s760][msgsender_MSG];
[L1933]  COND TRUE   DType[this] == ONIT
[L1934]  CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s760, to_s760, value_s760);
[L1987]              __var_6 := null;
[L1988]  COND FALSE  !(!(to_s904 != null))
[L1992]  CALL        call __var_7 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][from_s904], value_s904);
[L1679]  COND FALSE  !(!(b_s82 <= a_s82))
[L1683]              c_s82 := (a_s82 - b_s82) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1684]              __ret_0_ := c_s82;
[L1992]  RET         call __var_7 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][from_s904], value_s904);
[L1993]  COND FALSE  !(revert)
[L1996]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][from_s904];
[L1997]              _balances_ERC20[this][from_s904] := __var_7;
[L1998]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][from_s904];
[L1999]  CALL        call __var_8 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][to_s904], value_s904);
[L1703]              c_s106 := (a_s106 + b_s106) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1704]  COND FALSE  !(!(c_s106 >= a_s106))
[L1708]              __ret_0_ := c_s106;
[L1999]  RET         call __var_8 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][to_s904], value_s904);
[L2000]  COND FALSE  !(revert)
[L2003]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][to_s904];
[L2004]              _balances_ERC20[this][to_s904] := __var_8;
[L2005]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][to_s904];
[L2006]              assert { :EventEmitted "Transfer_ERC20" } true;
[L1934]  RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s760, to_s760, value_s760);
[L1935]  COND FALSE  !(revert)
[L1951]              assert { :EventEmitted "Approval_ERC20" } true;
[L1952]              __ret_0_ := true;
[L2093]  RET         call __var_11 := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s1074, to_s1074, value_s1074);
[L2094]  COND FALSE  !(revert)
[L2105]              __ret_0_ := __var_11;
[L2392]  RET         call __var_24 := transferFrom~address~address~uint256_ERC20Pausable__success(this, msgsender_MSG, msgvalue_MSG, from_s1322, to_s1322, value_s1322);
[L2393]  COND FALSE  !(revert)
[L2399]              __ret_0_ := __var_24;
[L997]   RET         call __ret_0_ := transferFrom~address~address~uint256_ONIT__success(this, msgsender_MSG, msgvalue_MSG, from_s1322, to_s1322, value_s1322);
[L998]               assume !revert && gas >= 0;
[L4367]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_ONIT(this, msgsender_MSG, msgvalue_MSG, from_s1322, to_s1322, value_s1322);
[L4400]  RET         call CorralChoice_ONIT(this);

Loop:
[L4400]        assume true;

[2020-11-24 16:03:23,572 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 16:03:23,573 INFO  L82        PathProgramCache]: Analyzing trace with hash 1248168782, now seen corresponding path program 1 times
[2020-11-24 16:03:23,573 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 16:03:23,616 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 16:03:23,651 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 16:03:23,726 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 16:03:23,726 INFO  L82        PathProgramCache]: Analyzing trace with hash 16408, now seen corresponding path program 1 times
[2020-11-24 16:03:23,727 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 16:03:23,727 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 16:03:23,728 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 16:03:23,729 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 16:03:23,729 INFO  L82        PathProgramCache]: Analyzing trace with hash 38542955, now seen corresponding path program 1 times
[2020-11-24 16:03:23,730 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 16:03:23,757 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 16:03:23,786 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
[2020-11-24 16:03:24,100 WARN  L188               SmtUtils]: Spent 198.00 ms on a formula simplification. DAG size of input: 112 DAG size of output: 111
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #5: 547 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 547 to 1093
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #5: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
[2020-11-24 16:03:24,445 WARN  L188               SmtUtils]: Spent 174.00 ms on a formula simplification. DAG size of input: 131 DAG size of output: 127
Garbage collection #1: 41 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 41 to 79
Garbage collection #2: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #3: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #4: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #5: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
[2020-11-24 16:03:24,620 WARN  L188               SmtUtils]: Spent 108.00 ms on a formula simplification. DAG size of input: 121 DAG size of output: 116
Garbage collection #1: 41 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 41 to 79
Garbage collection #2: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #3: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #4: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #5: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
[2020-11-24 16:03:24,874 WARN  L188               SmtUtils]: Spent 161.00 ms on a formula simplification. DAG size of input: 105 DAG size of output: 104
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #5: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
[2020-11-24 16:03:25,095 WARN  L188               SmtUtils]: Spent 156.00 ms on a formula simplification. DAG size of input: 124 DAG size of output: 123
Garbage collection #1: 41 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 41 to 79
Garbage collection #2: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #3: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #4: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #5: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #4: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
[2020-11-24 16:03:25,229 WARN  L188               SmtUtils]: Spent 105.00 ms on a formula simplification. DAG size of input: 112 DAG size of output: 107
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
[2020-11-24 16:03:25,378 WARN  L188               SmtUtils]: Spent 110.00 ms on a formula simplification. DAG size of input: 119 DAG size of output: 111
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #5: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
[2020-11-24 16:03:25,508 WARN  L188               SmtUtils]: Spent 102.00 ms on a formula simplification. DAG size of input: 114 DAG size of output: 109
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 277 to 547
Garbage collection #5: 547 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 547 to 1093
[2020-11-24 16:03:25,970 WARN  L188               SmtUtils]: Spent 410.00 ms on a formula simplification. DAG size of input: 220 DAG size of output: 205
Garbage collection #1: 67 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 67 to 131
Garbage collection #2: 131 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 131 to 257
Garbage collection #3: 257 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 257 to 509
Garbage collection #4: 509 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 509 to 1013
Garbage collection #5: 1013 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1013 to 2017
Garbage collection #6: 2017 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2017 to 4027
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #5: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
[2020-11-24 16:03:26,081 WARN  L188               SmtUtils]: Spent 101.00 ms on a formula simplification that was a NOOP. DAG size: 124
[2020-11-24 16:03:26,347 WARN  L188               SmtUtils]: Spent 264.00 ms on a formula simplification. DAG size of input: 179 DAG size of output: 174
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
[2020-11-24 16:03:26,497 WARN  L188               SmtUtils]: Spent 147.00 ms on a formula simplification that was a NOOP. DAG size: 156
[2020-11-24 16:03:26,847 WARN  L188               SmtUtils]: Spent 348.00 ms on a formula simplification. DAG size of input: 195 DAG size of output: 182
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #6: 1759 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1759 to 3517
Garbage collection #1: 41 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 41 to 79
Garbage collection #2: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #3: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #4: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #5: 619 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 619 to 1237
Garbage collection #6: 1237 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 1237 to 2473
[2020-11-24 16:03:27,030 WARN  L188               SmtUtils]: Spent 170.00 ms on a formula simplification that was a NOOP. DAG size: 132
[2020-11-24 16:03:27,964 WARN  L188               SmtUtils]: Spent 933.00 ms on a formula simplification. DAG size of input: 362 DAG size of output: 357
Garbage collection #1: 127 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 127 to 251
Garbage collection #2: 251 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 251 to 499
Garbage collection #3: 499 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 499 to 997
Garbage collection #4: 997 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 997 to 1993
Garbage collection #5: 1993 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1993 to 3967
Garbage collection #6: 3967 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 3967 to 7933
[2020-11-24 16:03:28,845 WARN  L188               SmtUtils]: Spent 866.00 ms on a formula simplification that was a NOOP. DAG size: 334
[2020-11-24 16:03:30,324 WARN  L188               SmtUtils]: Spent 1.48 s on a formula simplification. DAG size of input: 361 DAG size of output: 352
Garbage collection #1: 127 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 127 to 251
Garbage collection #2: 251 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 251 to 499
Garbage collection #3: 499 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 499 to 997
Garbage collection #4: 997 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 997 to 1993
Garbage collection #5: 1993 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1993 to 3967
Garbage collection #6: 3967 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 3967 to 7933
Garbage collection #7: 7933 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 7933 to 15859
Garbage collection #1: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #2: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #3: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #4: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #5: 1093 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1093 to 2179
Garbage collection #6: 2179 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2179 to 4357
Garbage collection #7: 4357 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4357 to 8713
[2020-11-24 16:03:30,694 WARN  L188               SmtUtils]: Spent 355.00 ms on a formula simplification that was a NOOP. DAG size: 238
[2020-11-24 16:03:31,424 WARN  L188               SmtUtils]: Spent 728.00 ms on a formula simplification that was a NOOP. DAG size: 428
Garbage collection #1: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #2: 317 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 317 to 631
Garbage collection #3: 631 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 631 to 1259
Garbage collection #4: 1259 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1259 to 2503
Garbage collection #5: 2503 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2503 to 5003
Garbage collection #6: 5003 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 5003 to 9973
Garbage collection #7: 9973 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 9973 to 19937
[2020-11-24 16:03:32,051 WARN  L188               SmtUtils]: Spent 617.00 ms on a formula simplification that was a NOOP. DAG size: 335
[2020-11-24 16:03:32,868 WARN  L188               SmtUtils]: Spent 815.00 ms on a formula simplification. DAG size of input: 354 DAG size of output: 349
Garbage collection #1: 127 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 127 to 251
Garbage collection #2: 251 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 251 to 499
Garbage collection #3: 499 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 499 to 997
Garbage collection #4: 997 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 997 to 1993
Garbage collection #5: 1993 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 1993 to 3967
Garbage collection #6: 3967 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 3967 to 7933
Garbage collection #1: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #2: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #3: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #4: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #5: 1093 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1093 to 2179
Garbage collection #6: 2179 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2179 to 4357
[2020-11-24 16:03:33,031 WARN  L188               SmtUtils]: Spent 156.00 ms on a formula simplification that was a NOOP. DAG size: 236
[2020-11-24 16:03:33,319 WARN  L188               SmtUtils]: Spent 265.00 ms on a formula simplification that was a NOOP. DAG size: 330
Garbage collection #1: 127 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 127 to 251
Garbage collection #2: 251 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 251 to 499
Garbage collection #3: 499 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 499 to 997
Garbage collection #4: 997 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 997 to 1993
Garbage collection #5: 1993 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1993 to 3967
Garbage collection #6: 3967 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3967 to 7933
Garbage collection #1: 71 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 71 to 139
Garbage collection #2: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #3: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #4: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #5: 1093 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1093 to 2179
Garbage collection #6: 2179 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 2179 to 4357
[2020-11-24 16:03:33,513 WARN  L188               SmtUtils]: Spent 189.00 ms on a formula simplification that was a NOOP. DAG size: 236
[2020-11-24 16:03:34,166 WARN  L188               SmtUtils]: Spent 650.00 ms on a formula simplification. DAG size of input: 332 DAG size of output: 331
Garbage collection #1: 127 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 127 to 251
Garbage collection #2: 251 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 251 to 499
Garbage collection #3: 499 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 499 to 997
Garbage collection #4: 997 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 997 to 1993
Garbage collection #5: 1993 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1993 to 3967
Garbage collection #6: 3967 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3967 to 7933
Garbage collection #1: 127 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 127 to 251
Garbage collection #2: 251 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 251 to 499
Garbage collection #3: 499 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 499 to 997
Garbage collection #4: 997 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 997 to 1993
Garbage collection #5: 1993 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1993 to 3967
Garbage collection #6: 3967 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3967 to 7933
[2020-11-24 16:03:34,475 WARN  L188               SmtUtils]: Spent 305.00 ms on a formula simplification that was a NOOP. DAG size: 327
[2020-11-24 16:03:34,492 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 16:03:34,500 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 24.11 04:03:34 BasicIcfg
[2020-11-24 16:03:34,500 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-24 16:03:34,500 INFO  L168              Benchmark]: Toolchain (without parser) took 15764.67 ms. Allocated memory was 1.0 GB in the beginning and 2.2 GB in the end (delta: 1.2 GB). Free memory was 935.2 MB in the beginning and 1.1 GB in the end (delta: -152.8 MB). Peak memory consumption was 1.2 GB. Max. memory is 15.3 GB.
[2020-11-24 16:03:34,501 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.16 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-24 16:03:34,501 INFO  L168              Benchmark]: Boogie Preprocessor took 118.48 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 924.5 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
[2020-11-24 16:03:34,501 INFO  L168              Benchmark]: UtopiaSpecLang took 63.83 ms. Allocated memory is still 1.0 GB. Free memory was 924.5 MB in the beginning and 919.1 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-24 16:03:34,501 INFO  L168              Benchmark]: Boogie Printer took 16.74 ms. Allocated memory is still 1.0 GB. Free memory was 919.1 MB in the beginning and 913.7 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-24 16:03:34,502 INFO  L168              Benchmark]: RCFGBuilder took 912.97 ms. Allocated memory is still 1.0 GB. Free memory was 913.7 MB in the beginning and 763.3 MB in the end (delta: 150.4 MB). Peak memory consumption was 150.4 MB. Max. memory is 15.3 GB.
[2020-11-24 16:03:34,502 INFO  L168              Benchmark]: UtopiaLTL2Aut took 43.06 ms. Allocated memory is still 1.0 GB. Free memory was 763.3 MB in the beginning and 759.7 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
[2020-11-24 16:03:34,502 INFO  L168              Benchmark]: BÃ¼chi Program Product took 1731.12 ms. Allocated memory was 1.0 GB in the beginning and 1.2 GB in the end (delta: 177.7 MB). Free memory was 759.7 MB in the beginning and 764.8 MB in the end (delta: -5.0 MB). Peak memory consumption was 172.7 MB. Max. memory is 15.3 GB.
[2020-11-24 16:03:34,503 INFO  L168              Benchmark]: BlockEncodingV2 took 154.88 ms. Allocated memory is still 1.2 GB. Free memory was 764.8 MB in the beginning and 705.6 MB in the end (delta: 59.2 MB). Peak memory consumption was 59.2 MB. Max. memory is 15.3 GB.
[2020-11-24 16:03:34,503 INFO  L168              Benchmark]: BuchiAutomizer took 12720.45 ms. Allocated memory was 1.2 GB in the beginning and 2.2 GB in the end (delta: 1.0 GB). Free memory was 705.6 MB in the beginning and 1.1 GB in the end (delta: -382.4 MB). Peak memory consumption was 795.7 MB. Max. memory is 15.3 GB.
[2020-11-24 16:03:34,507 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    3832 locations, 6765 edges
  - StatisticsResult: Encoded RCFG
    3718 locations, 6492 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.16 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 118.48 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 924.5 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 63.83 ms. Allocated memory is still 1.0 GB. Free memory was 924.5 MB in the beginning and 919.1 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 16.74 ms. Allocated memory is still 1.0 GB. Free memory was 919.1 MB in the beginning and 913.7 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * RCFGBuilder took 912.97 ms. Allocated memory is still 1.0 GB. Free memory was 913.7 MB in the beginning and 763.3 MB in the end (delta: 150.4 MB). Peak memory consumption was 150.4 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 43.06 ms. Allocated memory is still 1.0 GB. Free memory was 763.3 MB in the beginning and 759.7 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 1731.12 ms. Allocated memory was 1.0 GB in the beginning and 1.2 GB in the end (delta: 177.7 MB). Free memory was 759.7 MB in the beginning and 764.8 MB in the end (delta: -5.0 MB). Peak memory consumption was 172.7 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 154.88 ms. Allocated memory is still 1.2 GB. Free memory was 764.8 MB in the beginning and 705.6 MB in the end (delta: 59.2 MB). Peak memory consumption was 59.2 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 12720.45 ms. Allocated memory was 1.2 GB in the beginning and 2.2 GB in the end (delta: 1.0 GB). Free memory was 705.6 MB in the beginning and 1.1 GB in the end (delta: -382.4 MB). Peak memory consumption was 795.7 MB. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    1610 locations, 2107 edges
  - StatisticsResult: BuchiProgram size
    3832 locations, 6765 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 8 terminating modules (8 trivial, 0 deterministic, 0 nondeterministic) and one nonterminating remainder module.8 modules have a trivial ranking function, the largest among these consists of 13 locations. The remainder module has 342 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 12.6s and 9 iterations.  TraceHistogramMax:3. Analysis of lassos took 11.4s. Construction of modules took 0.4s. BÃ¼chi inclusion checks took 0.4s. Highest rank in rank-based complementation 0. Minimization of det autom 8. Minimization of nondet autom 0. Automata minimization 0.0s AutomataMinimizationTime, 8 MinimizatonAttempts, 6 StatesRemovedByMinimization, 3 NontrivialMinimizations. Non-live state removal took 0.0s Buchi closure took 0.0s. Biggest automaton had 397 states and ocurred in iteration 2.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 4270 SDtfs, 2703 SDslu, 5269 SDs, 0 SdLazy, 2400 SolverSat, 1121 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 0.4s Time	LassoAnalysisResults: nont1 unkn0 SFLI0 SFLT0 conc0 concLT0 SILN0 SILU8 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - TransactionCounterexample: Violation of LTL property LTL
    Found an infinite, lasso-shaped execution that violates the LTL property LTL.
Stem:
ONIT(231584178474632390847141970017375815706539969331281128078915168015826259279882).transferFrom~address~address~uint256.gas(3979001)({from : 231584178474632390847141970017375815706539969331281128078915168015826259279881, from : 231584178474632390847141970017375815706539969331281128078915168015826259279876, to : 231584178474632390847141970017375815706539969331281128078915168015826259279876, value : 1});
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((((from_s1322 == to_s1322 && (value_s1322 > _balances_ERC20[this][from_s1322] || value_s1322 > _allowed_ERC20[this][from_s1322][msgsender_MSG])) && value_s1322 >= 0) && value_s1322 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][to_s1322] >= 0) && _balances_ERC20[this][to_s1322] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][from_s1322] >= 0) && _balances_ERC20[this][from_s1322] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowed_ERC20[this][from_s1322][msgsender_MSG] >= 0) && _allowed_ERC20[this][from_s1322][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transferFrom_ONIT0 := true;
[L2]                 call_transferFrom_ONIT0 := false;
[L2]                 revert := revert_hold;
[L959]               havoc __exception;
[L960]               revert := false;
[L961]   COND FALSE  !(__exception)
[L997]   CALL        call __ret_0_ := transferFrom~address~address~uint256_ONIT__success(this, msgsender_MSG, msgvalue_MSG, from_s1322, to_s1322, value_s1322);
[L2370]  CALL        call notFrozen_pre__success(this, msgsender_MSG, msgvalue_MSG, from_s1322);
[L3582]  COND FALSE  !(!!frozenAccount_ONIT[this][_holder_s1185])
[L2370]  RET         call notFrozen_pre__success(this, msgsender_MSG, msgvalue_MSG, from_s1322);
[L2371]  COND FALSE  !(revert)
[L2374]  COND FALSE  !(alloc_timelockList_ONIT_lvl0[timelockList_ONIT[this]][from_s1322] == false)
[L2385]  COND TRUE   Length[M_Ref_Ref[timelockList_ONIT[this]][from_s1322]] > 0
[L2386]  CALL        call __var_23 := _autoUnlock~address_ONIT__success(this, msgsender_MSG, msgvalue_MSG, from_s1322);
[L2653]  COND FALSE  !(alloc_timelockList_ONIT_lvl0[timelockList_ONIT[this]][holder_s1645] == false)
[L2664]              idx_s1645 := 0;
[L2665]  COND TRUE   idx_s1645 < Length[M_Ref_Ref[timelockList_ONIT[this]][holder_s1645]]
[L2667]  COND FALSE  !(alloc_timelockList_ONIT_lvl0[timelockList_ONIT[this]][holder_s1645] == false)
[L2678]  COND TRUE   _releaseTime_ONIT.LockInfo[M_int_Ref[M_Ref_Ref[timelockList_ONIT[this]][holder_s1645]][idx_s1645]] <= now
[L2679]  CALL        call __var_36 := _unlock~address~uint256_ONIT__success(this, msgsender_MSG, msgvalue_MSG, holder_s1645, idx_s1645);
[L2512]  COND FALSE  !(alloc_timelockList_ONIT_lvl0[timelockList_ONIT[this]][holder_s1600] == false)
[L2523]              lockinfo_s1600 := M_int_Ref[M_Ref_Ref[timelockList_ONIT[this]][holder_s1600]][idx_s1600];
[L2524]              releaseAmount_s1600 := _amount_ONIT.LockInfo[lockinfo_s1600];
[L2525]  COND FALSE  !(alloc_timelockList_ONIT_lvl0[timelockList_ONIT[this]][holder_s1600] == false)
[L2536]  COND FALSE  !(alloc_timelockList_ONIT_lvl0[timelockList_ONIT[this]][holder_s1600] == false)
[L2547]  COND FALSE  !(alloc_timelockList_ONIT_lvl0[timelockList_ONIT[this]][holder_s1600] == false)
[L2558]  CALL        call __var_29 := sub~uint256~uint256_SafeMath__success(this, this, 0, Length[M_Ref_Ref[timelockList_ONIT[this]][holder_s1600]], 1);
[L1679]  COND FALSE  !(!(b_s82 <= a_s82))
[L1683]              c_s82 := (a_s82 - b_s82) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1684]              __ret_0_ := c_s82;
[L2558]  RET         call __var_29 := sub~uint256~uint256_SafeMath__success(this, this, 0, Length[M_Ref_Ref[timelockList_ONIT[this]][holder_s1600]], 1);
[L2559]  COND FALSE  !(revert)
[L2562]  COND FALSE  !(alloc_timelockList_ONIT_lvl0[timelockList_ONIT[this]][holder_s1600] == false)
[L2573]              M_int_Ref[M_Ref_Ref[timelockList_ONIT[this]][holder_s1600]][idx_s1600] := M_int_Ref[M_Ref_Ref[timelockList_ONIT[this]][holder_s1600]][__var_29];
[L2574]  COND FALSE  !(alloc_timelockList_ONIT_lvl0[timelockList_ONIT[this]][holder_s1600] == false)
[L2585]              Length[M_Ref_Ref[timelockList_ONIT[this]][holder_s1600]] := (Length[M_Ref_Ref[timelockList_ONIT[this]][holder_s1600]] - 1) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2586]              assert { :EventEmitted "Unlock_ONIT" } true;
[L2587]  CALL        call __var_33 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][holder_s1600], releaseAmount_s1600);
[L1703]              c_s106 := (a_s106 + b_s106) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1704]  COND FALSE  !(!(c_s106 >= a_s106))
[L1708]              __ret_0_ := c_s106;
[L2587]  RET         call __var_33 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][holder_s1600], releaseAmount_s1600);
[L2588]  COND FALSE  !(revert)
[L2591]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][holder_s1600];
[L2592]              _balances_ERC20[this][holder_s1600] := __var_33;
[L2593]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][holder_s1600];
[L2594]              __ret_0_ := true;
[L2679]  RET         call __var_36 := _unlock~address~uint256_ONIT__success(this, msgsender_MSG, msgvalue_MSG, holder_s1645, idx_s1645);
[L2680]  COND FALSE  !(revert)
[L2683]  COND TRUE   __var_36
[L2684]              idx_s1645 := (idx_s1645 - 1) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2687]              idx_s1645 := (idx_s1645 + 1) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2688]  COND FALSE  !(gas < 0)
[L2665]  COND FALSE  !(idx_s1645 < Length[M_Ref_Ref[timelockList_ONIT[this]][holder_s1645]])
[L2692]              __ret_0_ := true;
[L2386]  RET         call __var_23 := _autoUnlock~address_ONIT__success(this, msgsender_MSG, msgvalue_MSG, from_s1322);
[L2387]  COND FALSE  !(revert)
[L2391]  COND TRUE   DType[this] == ONIT
[L2392]  CALL        call __var_24 := transferFrom~address~address~uint256_ERC20Pausable__success(this, msgsender_MSG, msgvalue_MSG, from_s1322, to_s1322, value_s1322);
[L2088]  CALL        call whenNotPaused_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L3558]  COND FALSE  !(!!_paused_Pausable[this])
[L2088]  RET         call whenNotPaused_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L2089]  COND FALSE  !(revert)
[L2092]  COND TRUE   DType[this] == ONIT
[L2093]  CALL        call __var_11 := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s1074, to_s1074, value_s1074);
[L1926]  CALL        call __var_5 := sub~uint256~uint256_SafeMath__success(this, this, 0, _allowed_ERC20[this][from_s760][msgsender_MSG], value_s760);
[L1679]  COND FALSE  !(!(b_s82 <= a_s82))
[L1683]              c_s82 := (a_s82 - b_s82) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1684]              __ret_0_ := c_s82;
[L1926]  RET         call __var_5 := sub~uint256~uint256_SafeMath__success(this, this, 0, _allowed_ERC20[this][from_s760][msgsender_MSG], value_s760);
[L1927]  COND FALSE  !(revert)
[L1930]              sum__allowed1[from_s760] := sum__allowed1[from_s760] - _allowed_ERC20[this][from_s760][msgsender_MSG];
[L1931]              _allowed_ERC20[this][from_s760][msgsender_MSG] := __var_5;
[L1932]              sum__allowed1[from_s760] := sum__allowed1[from_s760] + _allowed_ERC20[this][from_s760][msgsender_MSG];
[L1933]  COND TRUE   DType[this] == ONIT
[L1934]  CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s760, to_s760, value_s760);
[L1987]              __var_6 := null;
[L1988]  COND FALSE  !(!(to_s904 != null))
[L1992]  CALL        call __var_7 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][from_s904], value_s904);
[L1679]  COND FALSE  !(!(b_s82 <= a_s82))
[L1683]              c_s82 := (a_s82 - b_s82) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1684]              __ret_0_ := c_s82;
[L1992]  RET         call __var_7 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][from_s904], value_s904);
[L1993]  COND FALSE  !(revert)
[L1996]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][from_s904];
[L1997]              _balances_ERC20[this][from_s904] := __var_7;
[L1998]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][from_s904];
[L1999]  CALL        call __var_8 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][to_s904], value_s904);
[L1703]              c_s106 := (a_s106 + b_s106) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1704]  COND FALSE  !(!(c_s106 >= a_s106))
[L1708]              __ret_0_ := c_s106;
[L1999]  RET         call __var_8 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][to_s904], value_s904);
[L2000]  COND FALSE  !(revert)
[L2003]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][to_s904];
[L2004]              _balances_ERC20[this][to_s904] := __var_8;
[L2005]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][to_s904];
[L2006]              assert { :EventEmitted "Transfer_ERC20" } true;
[L1934]  RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s760, to_s760, value_s760);
[L1935]  COND FALSE  !(revert)
[L1951]              assert { :EventEmitted "Approval_ERC20" } true;
[L1952]              __ret_0_ := true;
[L2093]  RET         call __var_11 := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s1074, to_s1074, value_s1074);
[L2094]  COND FALSE  !(revert)
[L2105]              __ret_0_ := __var_11;
[L2392]  RET         call __var_24 := transferFrom~address~address~uint256_ERC20Pausable__success(this, msgsender_MSG, msgvalue_MSG, from_s1322, to_s1322, value_s1322);
[L2393]  COND FALSE  !(revert)
[L2399]              __ret_0_ := __var_24;
[L997]   RET         call __ret_0_ := transferFrom~address~address~uint256_ONIT__success(this, msgsender_MSG, msgvalue_MSG, from_s1322, to_s1322, value_s1322);
[L998]               assume !revert && gas >= 0;
[L4367]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_ONIT(this, msgsender_MSG, msgvalue_MSG, from_s1322, to_s1322, value_s1322);

Loop:

End of lasso representation.
RESULT: Ultimate could not prove your program: Toolchain returned no result.
Received shutdown request...
