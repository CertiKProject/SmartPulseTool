This is Ultimate 0.1.24-f1553f5-m
[2020-11-24 14:45:39,327 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-24 14:45:39,328 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-24 14:45:39,338 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-24 14:45:39,339 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-24 14:45:39,339 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-24 14:45:39,340 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-24 14:45:39,342 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-24 14:45:39,343 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-24 14:45:39,344 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-24 14:45:39,344 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-24 14:45:39,345 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-24 14:45:39,345 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-24 14:45:39,346 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-24 14:45:39,347 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-24 14:45:39,347 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-24 14:45:39,348 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-24 14:45:39,349 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-24 14:45:39,350 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-24 14:45:39,351 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-24 14:45:39,352 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-24 14:45:39,353 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-24 14:45:39,354 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-24 14:45:39,355 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-24 14:45:39,355 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-24 14:45:39,355 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-24 14:45:39,356 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-24 14:45:39,356 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-24 14:45:39,356 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-24 14:45:39,357 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-24 14:45:39,357 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-24 14:45:39,357 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-24 14:45:39,358 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-24 14:45:39,358 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-24 14:45:39,359 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-24 14:45:39,359 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-24 14:45:39,360 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-24 14:45:39,360 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-24 14:45:39,360 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-24 14:45:39,361 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-24 14:45:39,361 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-24 14:45:39,361 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-24 14:45:39,369 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-24 14:45:39,369 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-24 14:45:39,370 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-24 14:45:39,370 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-24 14:45:39,370 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-24 14:45:39,370 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-24 14:45:39,370 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-24 14:45:39,370 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-24 14:45:39,370 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-24 14:45:39,370 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-24 14:45:39,371 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-24 14:45:39,371 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-24 14:45:39,371 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-24 14:45:39,371 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-24 14:45:39,371 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-24 14:45:39,371 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-24 14:45:39,371 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-24 14:45:39,371 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-24 14:45:39,372 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-24 14:45:39,372 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-24 14:45:39,372 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-24 14:45:39,372 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-24 14:45:39,372 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-24 14:45:39,372 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-24 14:45:39,372 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-24 14:45:39,372 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-24 14:45:39,392 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-24 14:45:39,402 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-24 14:45:39,405 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-24 14:45:39,407 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-24 14:45:39,407 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-24 14:45:39,408 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/KeepToken_0x85Eee30c52B0b379b046Fb0F85F4f3Dc3009aFEC_transfer-self.bpl
[2020-11-24 14:45:39,408 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/KeepToken_0x85Eee30c52B0b379b046Fb0F85F4f3Dc3009aFEC_transfer-self.bpl'
[2020-11-24 14:45:39,472 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-24 14:45:39,474 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-24 14:45:39,474 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-24 14:45:39,474 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-24 14:45:39,474 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-24 14:45:39,490 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "KeepToken_0x85Eee30c52B0b379b046Fb0F85F4f3Dc3009aFEC_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 02:45:39" (1/1) ...
[2020-11-24 14:45:39,491 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "KeepToken_0x85Eee30c52B0b379b046Fb0F85F4f3Dc3009aFEC_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 02:45:39" (1/1) ...
[2020-11-24 14:45:39,515 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "KeepToken_0x85Eee30c52B0b379b046Fb0F85F4f3Dc3009aFEC_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 02:45:39" (1/1) ...
[2020-11-24 14:45:39,516 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "KeepToken_0x85Eee30c52B0b379b046Fb0F85F4f3Dc3009aFEC_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 02:45:39" (1/1) ...
[2020-11-24 14:45:39,532 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "KeepToken_0x85Eee30c52B0b379b046Fb0F85F4f3Dc3009aFEC_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 02:45:39" (1/1) ...
[2020-11-24 14:45:39,541 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "KeepToken_0x85Eee30c52B0b379b046Fb0F85F4f3Dc3009aFEC_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 02:45:39" (1/1) ...
[2020-11-24 14:45:39,545 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "KeepToken_0x85Eee30c52B0b379b046Fb0F85F4f3Dc3009aFEC_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 02:45:39" (1/1) ...
[2020-11-24 14:45:39,553 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-24 14:45:39,554 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-24 14:45:39,554 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-24 14:45:39,556 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-24 14:45:39,559 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "KeepToken_0x85Eee30c52B0b379b046Fb0F85F4f3Dc3009aFEC_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 02:45:39" (1/1) ...
[2020-11-24 14:45:39,574 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(ERC20.transfer(to, value), msg.sender == to && value <= _balances_ERC20[this][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][to] >= 0 && _balances_ERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][msg.sender] >= 0 &&  _balances_ERC20[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(ERC20.transfer(to, value), return == true && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this]) && _balances_ERC20[this] == old(_balances_ERC20[this]) && _allowances_ERC20[this] == old(_allowances_ERC20[this]) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this]) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this]) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]))))
[2020-11-24 14:45:39,580 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(ERC20.transfer(to, value), msg.sender == to && value <= _balances_ERC20[this][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][to] >= 0 && _balances_ERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][msg.sender] >= 0 &&  _balances_ERC20[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(ERC20.transfer(to, value), return == true && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this]) && _balances_ERC20[this] == old(_balances_ERC20[this]) && _allowances_ERC20[this] == old(_allowances_ERC20[this]) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this]) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this]) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]))))
[2020-11-24 14:45:39,587 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(ERC20.transfer(to, value), msg.sender == to && value <= _balances_ERC20[this][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][to] >= 0 && _balances_ERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][msg.sender] >= 0 &&  _balances_ERC20[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(ERC20.transfer(to, value), return == true && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this]) && _balances_ERC20[this] == old(_balances_ERC20[this]) && _allowances_ERC20[this] == old(_allowances_ERC20[this]) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this]) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this]) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]))))
[2020-11-24 14:45:39,592 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( msg.sender==recipient_s277 && amount_s277<=_balances_ERC20[this][msg.sender] ) && amount_s277>=0 ) && amount_s277<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && _balances_ERC20[this][recipient_s277]>=0 ) && _balances_ERC20[this][recipient_s277]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && _balances_ERC20[this][msg.sender]>=0 ) && _balances_ERC20[this][msg.sender]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>],IdentifierExpression[recipient_s277,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]],BinaryExpression[COMPLEQ,IdentifierExpression[amount_s277,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>],ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]]]],BinaryExpression[COMPGEQ,IdentifierExpression[amount_s277,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>],IntegerLiteral[0]]],BinaryExpression[COMPLT,IdentifierExpression[amount_s277,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],[IdentifierExpression[recipient_s277,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],[IdentifierExpression[recipient_s277,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]]
[2020-11-24 14:45:39,595 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( __ret_0_==true && _totalSupply_ERC20[this]==( old(_totalSupply_ERC20[this]) ) ) && _balances_ERC20[this]==( old(_balances_ERC20[this]) ) ) && _allowances_ERC20[this]==( old(_allowances_ERC20[this]) ) ) && _name_ERC20Detailed[this]==( old(_name_ERC20Detailed[this]) ) ) && _symbol_ERC20Detailed[this]==( old(_symbol_ERC20Detailed[this]) ) ) && _decimals_ERC20Detailed[this]==( old(_decimals_ERC20Detailed[this]) ) ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[__ret_0_,<IMPLEMENTATION_OUTPARAM,transfer~address~uint256_ERC20>],BooleanLiteral[true]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_totalSupply_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_totalSupply_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_allowances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_allowances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_name_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_name_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_symbol_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_symbol_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_decimals_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_decimals_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]]]]]
[2020-11-24 14:45:39,598 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(ERC20.transfer(to, value), msg.sender == to && value <= _balances_ERC20[this][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][to] >= 0 && _balances_ERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][msg.sender] >= 0 &&  _balances_ERC20[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(ERC20.transfer(to, value), return == true && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this]) && _balances_ERC20[this] == old(_balances_ERC20[this]) && _allowances_ERC20[this] == old(_allowances_ERC20[this]) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this]) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this]) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]))))
[2020-11-24 14:45:39,598 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_transfer_ERC200) ==> ( <>AP(success_transfer_ERC200) ) ) )
Executed UtopiaSpecLang
[2020-11-24 14:45:39,604 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 02:45:39 PropertyContainer
[2020-11-24 14:45:39,604 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-24 14:45:39,604 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-24 14:45:39,604 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-24 14:45:39,604 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-24 14:45:39,605 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "KeepToken_0x85Eee30c52B0b379b046Fb0F85F4f3Dc3009aFEC_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 02:45:39" (1/2) ...
[2020-11-24 14:45:39,605 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-24 14:45:39,605 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-24 14:45:39,615 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 02:45:39" (2/2) ...
[2020-11-24 14:45:39,615 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-24 14:45:39,616 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-24 14:45:39,616 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-24 14:45:39,616 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-24 14:45:39,617 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "KeepToken_0x85Eee30c52B0b379b046Fb0F85F4f3Dc3009aFEC_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 02:45:39" (1/2) ...
[2020-11-24 14:45:39,670 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-24 14:45:39,670 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__success
[2020-11-24 14:45:39,671 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256~string_SafeMath__success
[2020-11-24 14:45:39,671 INFO  L130     BoogieDeclarations]: Found specification of procedure _msgSender_Context__success
[2020-11-24 14:45:39,671 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20
[2020-11-24 14:45:39,671 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ERC20
[2020-11-24 14:45:39,671 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20
[2020-11-24 14:45:39,671 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ERC20
[2020-11-24 14:45:39,671 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20
[2020-11-24 14:45:39,671 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20
[2020-11-24 14:45:39,671 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20
[2020-11-24 14:45:39,671 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ERC20
[2020-11-24 14:45:39,671 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20
[2020-11-24 14:45:39,672 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ERC20
[2020-11-24 14:45:39,672 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20
[2020-11-24 14:45:39,672 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20
[2020-11-24 14:45:39,672 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_ERC20__success
[2020-11-24 14:45:39,672 INFO  L130     BoogieDeclarations]: Found specification of procedure _approve~address~address~uint256_ERC20__success
[2020-11-24 14:45:39,672 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-24 14:45:39,672 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-24 14:45:39,672 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-24 14:45:39,672 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_SafeMath
[2020-11-24 14:45:39,672 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_SafeMath
[2020-11-24 14:45:39,673 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_Context
[2020-11-24 14:45:39,673 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_Context
[2020-11-24 14:45:39,673 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_IERC20
[2020-11-24 14:45:39,673 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_IERC20
[2020-11-24 14:45:39,673 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20
[2020-11-24 14:45:39,673 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20
[2020-11-24 14:45:39,673 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20Detailed
[2020-11-24 14:45:39,673 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20Detailed
[2020-11-24 14:45:39,673 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20Burnable
[2020-11-24 14:45:39,673 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20Burnable
[2020-11-24 14:45:39,673 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_tokenRecipient
[2020-11-24 14:45:39,673 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_tokenRecipient
[2020-11-24 14:45:39,674 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_KeepToken
[2020-11-24 14:45:39,674 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-24 14:45:39,674 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-24 14:45:39,674 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__fail
[2020-11-24 14:45:39,674 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256~string_SafeMath__fail
[2020-11-24 14:45:39,674 INFO  L130     BoogieDeclarations]: Found specification of procedure _msgSender_Context__fail
[2020-11-24 14:45:39,674 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20__success
[2020-11-24 14:45:39,674 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20__fail
[2020-11-24 14:45:39,674 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20__success
[2020-11-24 14:45:39,674 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20__fail
[2020-11-24 14:45:39,674 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20__success
[2020-11-24 14:45:39,674 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20__fail
[2020-11-24 14:45:39,674 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20__success
[2020-11-24 14:45:39,674 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20__fail
[2020-11-24 14:45:39,675 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20__success
[2020-11-24 14:45:39,675 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20__fail
[2020-11-24 14:45:39,675 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20__success
[2020-11-24 14:45:39,675 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20__fail
[2020-11-24 14:45:39,675 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_ERC20__fail
[2020-11-24 14:45:39,675 INFO  L130     BoogieDeclarations]: Found specification of procedure _approve~address~address~uint256_ERC20__fail
[2020-11-24 14:45:39,675 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-24 14:45:39,675 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-24 14:45:39,675 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-24 14:45:39,675 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-24 14:45:39,675 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-24 14:45:39,675 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__fail
[2020-11-24 14:45:39,675 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__success
[2020-11-24 14:45:39,676 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256~string_SafeMath__fail
[2020-11-24 14:45:39,676 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256~string_SafeMath__success
[2020-11-24 14:45:39,676 INFO  L138     BoogieDeclarations]: Found implementation of procedure _msgSender_Context__fail
[2020-11-24 14:45:39,676 INFO  L138     BoogieDeclarations]: Found implementation of procedure _msgSender_Context__success
[2020-11-24 14:45:39,676 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ERC20__fail
[2020-11-24 14:45:39,676 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ERC20__success
[2020-11-24 14:45:39,676 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ERC20__fail
[2020-11-24 14:45:39,676 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ERC20__success
[2020-11-24 14:45:39,676 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20__fail
[2020-11-24 14:45:39,676 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20__success
[2020-11-24 14:45:39,676 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ERC20__fail
[2020-11-24 14:45:39,676 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ERC20__success
[2020-11-24 14:45:39,676 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ERC20__fail
[2020-11-24 14:45:39,677 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ERC20__success
[2020-11-24 14:45:39,677 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20__fail
[2020-11-24 14:45:39,677 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20__success
[2020-11-24 14:45:39,677 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_ERC20__fail
[2020-11-24 14:45:39,677 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_ERC20__success
[2020-11-24 14:45:39,677 INFO  L138     BoogieDeclarations]: Found implementation of procedure _approve~address~address~uint256_ERC20__fail
[2020-11-24 14:45:39,677 INFO  L138     BoogieDeclarations]: Found implementation of procedure _approve~address~address~uint256_ERC20__success
[2020-11-24 14:45:39,677 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-24 14:45:39,677 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-24 14:45:39,677 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-24 14:45:39,677 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-24 14:45:39,677 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-24 14:45:39,678 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-24 14:45:39,678 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_SafeMath
[2020-11-24 14:45:39,678 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_SafeMath
[2020-11-24 14:45:39,678 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_Context
[2020-11-24 14:45:39,678 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_Context
[2020-11-24 14:45:39,678 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_IERC20
[2020-11-24 14:45:39,678 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_IERC20
[2020-11-24 14:45:39,678 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20
[2020-11-24 14:45:39,678 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20
[2020-11-24 14:45:39,678 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20Detailed
[2020-11-24 14:45:39,678 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20Detailed
[2020-11-24 14:45:39,678 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20Burnable
[2020-11-24 14:45:39,679 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20Burnable
[2020-11-24 14:45:39,679 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_tokenRecipient
[2020-11-24 14:45:39,679 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_tokenRecipient
[2020-11-24 14:45:39,679 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_KeepToken
[2020-11-24 14:45:39,679 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-24 14:45:39,679 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-24 14:45:39,679 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-24 14:45:39,935 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 14:45:39,935 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 14:45:39,936 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 14:45:40,257 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-24 14:45:40,257 INFO  L286             CfgBuilder]: Removed 8 assue(true) statements.
[2020-11-24 14:45:40,259 INFO  L202        PluginConnector]: Adding new model KeepToken_0x85Eee30c52B0b379b046Fb0F85F4f3Dc3009aFEC_transfer-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 02:45:40 BoogieIcfgContainer
[2020-11-24 14:45:40,259 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 02:45:39" (2/2) ...
[2020-11-24 14:45:40,259 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-24 14:45:40,260 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@610cc9cb and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 02:45:40, skipping insertion in model container
[2020-11-24 14:45:40,260 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-24 14:45:40,260 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-24 14:45:40,260 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-24 14:45:40,262 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-24 14:45:40,262 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "KeepToken_0x85Eee30c52B0b379b046Fb0F85F4f3Dc3009aFEC_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 02:45:39" (1/3) ...
[2020-11-24 14:45:40,262 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@66896215 and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 02:45:40, skipping insertion in model container
[2020-11-24 14:45:40,262 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 02:45:39" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-24 14:45:40,304 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 02:45:40 NWAContainer
[2020-11-24 14:45:40,304 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-24 14:45:40,305 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-24 14:45:40,305 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-24 14:45:40,306 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-24 14:45:40,306 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "KeepToken_0x85Eee30c52B0b379b046Fb0F85F4f3Dc3009aFEC_transfer-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 02:45:40" (3/4) ...
[2020-11-24 14:45:40,307 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@7b979f33 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 02:45:40, skipping insertion in model container
[2020-11-24 14:45:40,307 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 02:45:40" (4/4) ...
[2020-11-24 14:45:40,311 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-24 14:45:40,314 INFO  L110   BuchiProductObserver]: Initial RCFG 937 locations, 1326 edges
[2020-11-24 14:45:40,314 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-24 14:45:40,328 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-24 14:45:41,289 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-24 14:45:41,293 INFO  L110   BuchiProductObserver]: BuchiProgram size 2338 locations, 4332 edges
[2020-11-24 14:45:41,293 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 02:45:41 BoogieIcfgContainer
[2020-11-24 14:45:41,293 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-24 14:45:41,294 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-24 14:45:41,294 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-24 14:45:41,295 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-24 14:45:41,296 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 02:45:41" (1/1) ...
[2020-11-24 14:45:41,351 INFO  L313           BlockEncoder]: Initial Icfg 2338 locations, 4332 edges
[2020-11-24 14:45:41,351 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-24 14:45:41,352 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-24 14:45:41,352 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-24 14:45:41,352 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-24 14:45:41,360 INFO  L70    emoveInfeasibleEdges]: Removed 108 edges and 19 locations because of local infeasibility
[2020-11-24 14:45:41,366 INFO  L70        RemoveSinkStates]: Removed 50 edges and 33 locations by removing sink states
[2020-11-24 14:45:41,375 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-24 14:45:41,378 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-24 14:45:41,381 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-24 14:45:41,382 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-24 14:45:41,386 INFO  L313           BlockEncoder]: Encoded RCFG 2266 locations, 4145 edges
[2020-11-24 14:45:41,386 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 24.11 02:45:41 BasicIcfg
[2020-11-24 14:45:41,386 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-24 14:45:41,387 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-24 14:45:41,387 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-24 14:45:41,389 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-24 14:45:41,390 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 14:45:41,390 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "KeepToken_0x85Eee30c52B0b379b046Fb0F85F4f3Dc3009aFEC_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 02:45:39" (1/6) ...
[2020-11-24 14:45:41,391 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@472ce8c and model type KeepToken_0x85Eee30c52B0b379b046Fb0F85F4f3Dc3009aFEC_transfer-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 24.11 02:45:41, skipping insertion in model container
[2020-11-24 14:45:41,391 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 14:45:41,391 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 02:45:39" (2/6) ...
[2020-11-24 14:45:41,391 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@472ce8c and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 24.11 02:45:41, skipping insertion in model container
[2020-11-24 14:45:41,391 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 14:45:41,392 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "KeepToken_0x85Eee30c52B0b379b046Fb0F85F4f3Dc3009aFEC_transfer-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 02:45:40" (3/6) ...
[2020-11-24 14:45:41,392 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@472ce8c and model type KeepToken_0x85Eee30c52B0b379b046Fb0F85F4f3Dc3009aFEC_transfer-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 24.11 02:45:41, skipping insertion in model container
[2020-11-24 14:45:41,392 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 14:45:41,392 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 02:45:40" (4/6) ...
[2020-11-24 14:45:41,392 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@472ce8c and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 24.11 02:45:41, skipping insertion in model container
[2020-11-24 14:45:41,392 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 14:45:41,392 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 02:45:41" (5/6) ...
[2020-11-24 14:45:41,392 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@472ce8c and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 24.11 02:45:41, skipping insertion in model container
[2020-11-24 14:45:41,392 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 14:45:41,392 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 24.11 02:45:41" (6/6) ...
[2020-11-24 14:45:41,393 INFO  L404   chiAutomizerObserver]: Analyzing ICFG KeepToken_0x85Eee30c52B0b379b046Fb0F85F4f3Dc3009aFEC_transfer-self.bpl_BEv2
[2020-11-24 14:45:41,423 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-24 14:45:41,423 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-24 14:45:41,423 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-24 14:45:41,423 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-24 14:45:41,423 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-24 14:45:41,423 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-24 14:45:41,423 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-24 14:45:41,423 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-24 14:45:41,424 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-24 14:45:41,450 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2266 states.
[2020-11-24 14:45:41,483 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 14:45:41,483 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 14:45:41,483 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 14:45:41,491 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 14:45:41,492 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
[2020-11-24 14:45:41,492 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-24 14:45:41,492 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2266 states.
[2020-11-24 14:45:41,504 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 14:45:41,504 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 14:45:41,505 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 14:45:41,506 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 14:45:41,506 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L2]                 success_transfer_ERC200 := false;
[L2]                 call_transfer_ERC200 := false;
[L2]     CALL        call main();
[L2618]              assume null == 0;
[L2619]  CALL        call this := FreshRefGenerator__success();
[L800]               havoc newRef;
[L801]               assume Alloc[newRef] == false;
[L802]               Alloc[newRef] := true;
[L803]               assume newRef != null;
[L2619]  RET         call this := FreshRefGenerator__success();
[L2620]              assume now >= 0;
[L2621]              assume DType[this] == KeepToken;
[L2622]              assume !revert && gas >= 0;
[L2623]  CALL        call CorralChoice_KeepToken(this);
[L2522]              havoc msgsender_MSG;
[L2523]              havoc msgvalue_MSG;
[L2524]              havoc choice;
[L2525]              havoc __ret_0_totalSupply;
[L2526]              havoc account_s258;
[L2527]              havoc __ret_0_balanceOf;
[L2528]              havoc recipient_s277;
[L2529]              havoc amount_s277;
[L2530]              havoc __ret_0_transfer;
[L2531]              havoc owner_s293;
[L2532]              havoc spender_s293;
[L2533]              havoc __ret_0_allowance;
[L2534]              havoc spender_s312;
[L2535]              havoc amount_s312;
[L2536]              havoc __ret_0_approve;
[L2537]              havoc sender_s348;
[L2538]              havoc recipient_s348;
[L2539]              havoc amount_s348;
[L2540]              havoc __ret_0_transferFrom;
[L2541]              havoc spender_s375;
[L2542]              havoc addedValue_s375;
[L2543]              havoc __ret_0_increaseAllowance;
[L2544]              havoc spender_s403;
[L2545]              havoc subtractedValue_s403;
[L2546]              havoc __ret_0_decreaseAllowance;
[L2547]              havoc name_s650;
[L2548]              havoc symbol_s650;
[L2549]              havoc decimals_s650;
[L2550]              havoc __ret_0_name;
[L2551]              havoc __ret_0_symbol;
[L2552]              havoc __ret_0_decimals;
[L2553]              havoc amount_s691;
[L2554]              havoc account_s704;
[L2555]              havoc amount_s704;
[L2556]              havoc __ret_0_NAME;
[L2557]              havoc __ret_0_SYMBOL;
[L2558]              havoc __ret_0_DECIMALS;
[L2559]              havoc __ret_0_INITIAL_SUPPLY;
[L2560]              havoc _spender_s788;
[L2561]              havoc _value_s788;
[L2562]              havoc _extraData_s788;
[L2563]              havoc success_s788;
[L2564]              havoc tmpNow;
[L2565]              havoc gas;
[L2566]              assume gas > 4000000 && gas <= 8000000;
[L2567]              tmpNow := now;
[L2568]              havoc now;
[L2569]              assume now > tmpNow;
[L2570]              assume msgsender_MSG != null;
[L2571]  COND TRUE   choice == 6
[L2572]              gas := gas - 21000;
[L2573]  COND FALSE  !(gas >= 0)
[L2623]  RET         call CorralChoice_KeepToken(this);

Loop:
[L2623]        assume true;

[2020-11-24 14:45:41,518 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 14:45:41,519 INFO  L82        PathProgramCache]: Analyzing trace with hash -1561566927, now seen corresponding path program 1 times
[2020-11-24 14:45:41,523 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 14:45:41,544 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 14:45:41,614 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 14:45:41,616 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 14:45:41,616 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [5] imperfect sequences [] total 5
[2020-11-24 14:45:41,620 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 14:45:41,632 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 5 interpolants.
[2020-11-24 14:45:41,633 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=9, Invalid=11, Unknown=0, NotChecked=0, Total=20
[2020-11-24 14:45:41,634 INFO  L87              Difference]: Start difference. First operand 2266 states. Second operand 5 states.
[2020-11-24 14:45:42,005 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 14:45:42,005 INFO  L93              Difference]: Finished difference Result 900 states and 1104 transitions.
[2020-11-24 14:45:42,005 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-24 14:45:42,007 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 900 states and 1104 transitions.
[2020-11-24 14:45:42,015 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 14:45:42,022 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 900 states to 266 states and 307 transitions.
[2020-11-24 14:45:42,023 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 4
[2020-11-24 14:45:42,024 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 266
[2020-11-24 14:45:42,025 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 266 states and 307 transitions.
[2020-11-24 14:45:42,027 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 14:45:42,028 INFO  L728         BuchiCegarLoop]: Abstraction has 266 states and 307 transitions.
[2020-11-24 14:45:42,042 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 266 states and 307 transitions.
[2020-11-24 14:45:42,058 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 266 to 266.
[2020-11-24 14:45:42,059 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 266 states.
[2020-11-24 14:45:42,060 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 266 states to 266 states and 307 transitions.
[2020-11-24 14:45:42,061 INFO  L751         BuchiCegarLoop]: Abstraction has 266 states and 307 transitions.
[2020-11-24 14:45:42,061 INFO  L631         BuchiCegarLoop]: Abstraction has 266 states and 307 transitions.
[2020-11-24 14:45:42,061 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-24 14:45:42,061 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 266 states and 307 transitions.
[2020-11-24 14:45:42,063 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 14:45:42,063 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 14:45:42,063 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 14:45:42,064 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 14:45:42,064 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L2]                 success_transfer_ERC200 := false;
[L2]                 call_transfer_ERC200 := false;
[L2]     CALL        call main();
[L2618]              assume null == 0;
[L2619]  CALL        call this := FreshRefGenerator__success();
[L800]               havoc newRef;
[L801]               assume Alloc[newRef] == false;
[L802]               Alloc[newRef] := true;
[L803]               assume newRef != null;
[L2619]  RET         call this := FreshRefGenerator__success();
[L2620]              assume now >= 0;
[L2621]              assume DType[this] == KeepToken;
[L2622]              assume !revert && gas >= 0;
[L2623]  CALL        call CorralChoice_KeepToken(this);
[L2522]              havoc msgsender_MSG;
[L2523]              havoc msgvalue_MSG;
[L2524]              havoc choice;
[L2525]              havoc __ret_0_totalSupply;
[L2526]              havoc account_s258;
[L2527]              havoc __ret_0_balanceOf;
[L2528]              havoc recipient_s277;
[L2529]              havoc amount_s277;
[L2530]              havoc __ret_0_transfer;
[L2531]              havoc owner_s293;
[L2532]              havoc spender_s293;
[L2533]              havoc __ret_0_allowance;
[L2534]              havoc spender_s312;
[L2535]              havoc amount_s312;
[L2536]              havoc __ret_0_approve;
[L2537]              havoc sender_s348;
[L2538]              havoc recipient_s348;
[L2539]              havoc amount_s348;
[L2540]              havoc __ret_0_transferFrom;
[L2541]              havoc spender_s375;
[L2542]              havoc addedValue_s375;
[L2543]              havoc __ret_0_increaseAllowance;
[L2544]              havoc spender_s403;
[L2545]              havoc subtractedValue_s403;
[L2546]              havoc __ret_0_decreaseAllowance;
[L2547]              havoc name_s650;
[L2548]              havoc symbol_s650;
[L2549]              havoc decimals_s650;
[L2550]              havoc __ret_0_name;
[L2551]              havoc __ret_0_symbol;
[L2552]              havoc __ret_0_decimals;
[L2553]              havoc amount_s691;
[L2554]              havoc account_s704;
[L2555]              havoc amount_s704;
[L2556]              havoc __ret_0_NAME;
[L2557]              havoc __ret_0_SYMBOL;
[L2558]              havoc __ret_0_DECIMALS;
[L2559]              havoc __ret_0_INITIAL_SUPPLY;
[L2560]              havoc _spender_s788;
[L2561]              havoc _value_s788;
[L2562]              havoc _extraData_s788;
[L2563]              havoc success_s788;
[L2564]              havoc tmpNow;
[L2565]              havoc gas;
[L2566]              assume gas > 4000000 && gas <= 8000000;
[L2567]              tmpNow := now;
[L2568]              havoc now;
[L2569]              assume now > tmpNow;
[L2570]              assume msgsender_MSG != null;
[L2571]  COND FALSE  !(choice == 6)
[L2577]  COND FALSE  !(choice == 5)
[L2583]  COND TRUE   choice == 4
[L2584]              gas := gas - 21000;
[L2585]  COND TRUE   gas >= 0
[L2586]              assume amount_s277 >= 0 && amount_s277 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2587]              assume msgvalue_MSG == 0;
[L2588]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s277, amount_s277);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == recipient_s277 && amount_s277 <= _balances_ERC20[this][msgsender_MSG]) && amount_s277 >= 0) && amount_s277 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s277] >= 0) && _balances_ERC20[this][recipient_s277] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_ERC200 := true;
[L2]                 call_transfer_ERC200 := false;
[L2]                 revert := revert_hold;
[L196]               havoc __exception;
[L197]               revert := false;
[L198]   COND FALSE  !(__exception)
[L223]   CALL        call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, recipient_s277, amount_s277);
[L936]   COND TRUE   DType[this] == KeepToken
[L937]   CALL        call __var_1 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L862]               __ret_0_ := msgsender_MSG;
[L937]   RET         call __var_1 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L938]   COND TRUE   revert
[L223]   RET         call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, recipient_s277, amount_s277);
[L224]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !((((((__ret_0_ == true && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _balances_ERC20[this] == old(_balances_ERC20[this])) && _allowances_ERC20[this] == old(_allowances_ERC20[this])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]));
[L2]                 revert := revert_hold;
[L2588]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s277, amount_s277);
[L2623]  RET         call CorralChoice_KeepToken(this);

Loop:
[L2623]        assume true;

[2020-11-24 14:45:42,067 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 14:45:42,067 INFO  L82        PathProgramCache]: Analyzing trace with hash 2098939875, now seen corresponding path program 1 times
[2020-11-24 14:45:42,068 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 14:45:42,079 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 14:45:42,098 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 14:45:42,098 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 14:45:42,098 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-24 14:45:42,100 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 14:45:42,100 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-24 14:45:42,100 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-24 14:45:42,100 INFO  L87              Difference]: Start difference. First operand 266 states and 307 transitions. cyclomatic complexity: 42 Second operand 3 states.
[2020-11-24 14:45:42,112 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 14:45:42,112 INFO  L93              Difference]: Finished difference Result 313 states and 357 transitions.
[2020-11-24 14:45:42,112 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-24 14:45:42,113 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 313 states and 357 transitions.
[2020-11-24 14:45:42,115 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 2
[2020-11-24 14:45:42,117 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 313 states to 289 states and 320 transitions.
[2020-11-24 14:45:42,117 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 289
[2020-11-24 14:45:42,118 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 289
[2020-11-24 14:45:42,118 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 289 states and 320 transitions.
[2020-11-24 14:45:42,119 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 14:45:42,119 INFO  L728         BuchiCegarLoop]: Abstraction has 289 states and 320 transitions.
[2020-11-24 14:45:42,119 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 289 states and 320 transitions.
[2020-11-24 14:45:42,125 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 289 to 278.
[2020-11-24 14:45:42,125 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 278 states.
[2020-11-24 14:45:42,126 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 278 states to 278 states and 309 transitions.
[2020-11-24 14:45:42,126 INFO  L751         BuchiCegarLoop]: Abstraction has 278 states and 309 transitions.
[2020-11-24 14:45:42,126 INFO  L631         BuchiCegarLoop]: Abstraction has 278 states and 309 transitions.
[2020-11-24 14:45:42,126 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-24 14:45:42,126 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 278 states and 309 transitions.
[2020-11-24 14:45:42,127 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 14:45:42,128 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 14:45:42,128 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 14:45:42,129 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 14:45:42,129 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L2]                 success_transfer_ERC200 := false;
[L2]                 call_transfer_ERC200 := false;
[L2]     CALL        call main();
[L2618]              assume null == 0;
[L2619]  CALL        call this := FreshRefGenerator__success();
[L800]               havoc newRef;
[L801]               assume Alloc[newRef] == false;
[L802]               Alloc[newRef] := true;
[L803]               assume newRef != null;
[L2619]  RET         call this := FreshRefGenerator__success();
[L2620]              assume now >= 0;
[L2621]              assume DType[this] == KeepToken;
[L2622]              assume !revert && gas >= 0;
[L2623]  CALL        call CorralChoice_KeepToken(this);
[L2522]              havoc msgsender_MSG;
[L2523]              havoc msgvalue_MSG;
[L2524]              havoc choice;
[L2525]              havoc __ret_0_totalSupply;
[L2526]              havoc account_s258;
[L2527]              havoc __ret_0_balanceOf;
[L2528]              havoc recipient_s277;
[L2529]              havoc amount_s277;
[L2530]              havoc __ret_0_transfer;
[L2531]              havoc owner_s293;
[L2532]              havoc spender_s293;
[L2533]              havoc __ret_0_allowance;
[L2534]              havoc spender_s312;
[L2535]              havoc amount_s312;
[L2536]              havoc __ret_0_approve;
[L2537]              havoc sender_s348;
[L2538]              havoc recipient_s348;
[L2539]              havoc amount_s348;
[L2540]              havoc __ret_0_transferFrom;
[L2541]              havoc spender_s375;
[L2542]              havoc addedValue_s375;
[L2543]              havoc __ret_0_increaseAllowance;
[L2544]              havoc spender_s403;
[L2545]              havoc subtractedValue_s403;
[L2546]              havoc __ret_0_decreaseAllowance;
[L2547]              havoc name_s650;
[L2548]              havoc symbol_s650;
[L2549]              havoc decimals_s650;
[L2550]              havoc __ret_0_name;
[L2551]              havoc __ret_0_symbol;
[L2552]              havoc __ret_0_decimals;
[L2553]              havoc amount_s691;
[L2554]              havoc account_s704;
[L2555]              havoc amount_s704;
[L2556]              havoc __ret_0_NAME;
[L2557]              havoc __ret_0_SYMBOL;
[L2558]              havoc __ret_0_DECIMALS;
[L2559]              havoc __ret_0_INITIAL_SUPPLY;
[L2560]              havoc _spender_s788;
[L2561]              havoc _value_s788;
[L2562]              havoc _extraData_s788;
[L2563]              havoc success_s788;
[L2564]              havoc tmpNow;
[L2565]              havoc gas;
[L2566]              assume gas > 4000000 && gas <= 8000000;
[L2567]              tmpNow := now;
[L2568]              havoc now;
[L2569]              assume now > tmpNow;
[L2570]              assume msgsender_MSG != null;
[L2571]  COND FALSE  !(choice == 6)
[L2577]  COND FALSE  !(choice == 5)
[L2583]  COND TRUE   choice == 4
[L2584]              gas := gas - 21000;
[L2585]  COND TRUE   gas >= 0
[L2586]              assume amount_s277 >= 0 && amount_s277 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2587]              assume msgvalue_MSG == 0;
[L2588]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s277, amount_s277);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == recipient_s277 && amount_s277 <= _balances_ERC20[this][msgsender_MSG]) && amount_s277 >= 0) && amount_s277 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s277] >= 0) && _balances_ERC20[this][recipient_s277] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_ERC200 := true;
[L2]                 call_transfer_ERC200 := false;
[L2]                 revert := revert_hold;
[L196]               havoc __exception;
[L197]               revert := false;
[L198]   COND TRUE   __exception
[L199]               __tmp__Balance := Balance;
[L200]               __tmp__DType := DType;
[L201]               __tmp__Alloc := Alloc;
[L202]               __tmp__balance_ADDR := balance_ADDR;
[L203]               __tmp__M_Ref_int := M_Ref_int;
[L204]               __tmp__sum__balances0 := sum__balances0;
[L205]               __tmp__alloc__allowances_ERC20_lvl0 := alloc__allowances_ERC20_lvl0;
[L206]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L207]               __tmp__sum__allowances1 := sum__allowances1;
[L208]               __tmp__Length := Length;
[L209]               __tmp__now := now;
[L210]               __tmp___balances_ERC20 := _balances_ERC20;
[L211]               __tmp___allowances_ERC20 := _allowances_ERC20;
[L212]               __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L213]               __tmp___name_ERC20Detailed := _name_ERC20Detailed;
[L214]               __tmp___symbol_ERC20Detailed := _symbol_ERC20Detailed;
[L215]               __tmp___decimals_ERC20Detailed := _decimals_ERC20Detailed;
[L216]               __tmp__NAME_KeepToken := NAME_KeepToken;
[L217]               __tmp__SYMBOL_KeepToken := SYMBOL_KeepToken;
[L218]               __tmp__DECIMALS_KeepToken := DECIMALS_KeepToken;
[L219]               __tmp__INITIAL_SUPPLY_KeepToken := INITIAL_SUPPLY_KeepToken;
[L220]   CALL        call __ret_0_ := transfer~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, recipient_s277, amount_s277);
[L893]   COND TRUE   __tmp__DType[this] == KeepToken
[L894]   CALL        call __var_1 := _msgSender_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L856]               __ret_0_ := msgsender_MSG;
[L894]   RET         call __var_1 := _msgSender_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L895]   COND TRUE   revert
[L220]   RET         call __ret_0_ := transfer~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, recipient_s277, amount_s277);
[L221]               assume revert || gas < 0;
[L2588]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s277, amount_s277);
[L2623]  RET         call CorralChoice_KeepToken(this);

Loop:
[L2623]        assume true;

[2020-11-24 14:45:42,131 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 14:45:42,131 INFO  L82        PathProgramCache]: Analyzing trace with hash -1210368439, now seen corresponding path program 1 times
[2020-11-24 14:45:42,132 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 14:45:42,141 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 14:45:42,162 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 14:45:42,162 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 14:45:42,162 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [5] imperfect sequences [] total 5
[2020-11-24 14:45:42,163 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 14:45:42,163 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 5 interpolants.
[2020-11-24 14:45:42,163 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=9, Invalid=11, Unknown=0, NotChecked=0, Total=20
[2020-11-24 14:45:42,163 INFO  L87              Difference]: Start difference. First operand 278 states and 309 transitions. cyclomatic complexity: 32 Second operand 5 states.
[2020-11-24 14:45:42,198 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 14:45:42,199 INFO  L93              Difference]: Finished difference Result 289 states and 312 transitions.
[2020-11-24 14:45:42,199 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-24 14:45:42,199 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 289 states and 312 transitions.
[2020-11-24 14:45:42,201 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 2
[2020-11-24 14:45:42,203 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 289 states to 289 states and 312 transitions.
[2020-11-24 14:45:42,203 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 289
[2020-11-24 14:45:42,203 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 289
[2020-11-24 14:45:42,203 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 289 states and 312 transitions.
[2020-11-24 14:45:42,204 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 14:45:42,204 INFO  L728         BuchiCegarLoop]: Abstraction has 289 states and 312 transitions.
[2020-11-24 14:45:42,205 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 289 states and 312 transitions.
[2020-11-24 14:45:42,208 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 289 to 278.
[2020-11-24 14:45:42,209 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 278 states.
[2020-11-24 14:45:42,209 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 278 states to 278 states and 301 transitions.
[2020-11-24 14:45:42,209 INFO  L751         BuchiCegarLoop]: Abstraction has 278 states and 301 transitions.
[2020-11-24 14:45:42,210 INFO  L631         BuchiCegarLoop]: Abstraction has 278 states and 301 transitions.
[2020-11-24 14:45:42,210 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-24 14:45:42,210 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 278 states and 301 transitions.
[2020-11-24 14:45:42,211 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 14:45:42,211 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 14:45:42,211 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 14:45:42,213 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 14:45:42,213 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L2]                 success_transfer_ERC200 := false;
[L2]                 call_transfer_ERC200 := false;
[L2]     CALL        call main();
[L2618]              assume null == 0;
[L2619]  CALL        call this := FreshRefGenerator__success();
[L800]               havoc newRef;
[L801]               assume Alloc[newRef] == false;
[L802]               Alloc[newRef] := true;
[L803]               assume newRef != null;
[L2619]  RET         call this := FreshRefGenerator__success();
[L2620]              assume now >= 0;
[L2621]              assume DType[this] == KeepToken;
[L2622]              assume !revert && gas >= 0;
[L2623]  CALL        call CorralChoice_KeepToken(this);
[L2522]              havoc msgsender_MSG;
[L2523]              havoc msgvalue_MSG;
[L2524]              havoc choice;
[L2525]              havoc __ret_0_totalSupply;
[L2526]              havoc account_s258;
[L2527]              havoc __ret_0_balanceOf;
[L2528]              havoc recipient_s277;
[L2529]              havoc amount_s277;
[L2530]              havoc __ret_0_transfer;
[L2531]              havoc owner_s293;
[L2532]              havoc spender_s293;
[L2533]              havoc __ret_0_allowance;
[L2534]              havoc spender_s312;
[L2535]              havoc amount_s312;
[L2536]              havoc __ret_0_approve;
[L2537]              havoc sender_s348;
[L2538]              havoc recipient_s348;
[L2539]              havoc amount_s348;
[L2540]              havoc __ret_0_transferFrom;
[L2541]              havoc spender_s375;
[L2542]              havoc addedValue_s375;
[L2543]              havoc __ret_0_increaseAllowance;
[L2544]              havoc spender_s403;
[L2545]              havoc subtractedValue_s403;
[L2546]              havoc __ret_0_decreaseAllowance;
[L2547]              havoc name_s650;
[L2548]              havoc symbol_s650;
[L2549]              havoc decimals_s650;
[L2550]              havoc __ret_0_name;
[L2551]              havoc __ret_0_symbol;
[L2552]              havoc __ret_0_decimals;
[L2553]              havoc amount_s691;
[L2554]              havoc account_s704;
[L2555]              havoc amount_s704;
[L2556]              havoc __ret_0_NAME;
[L2557]              havoc __ret_0_SYMBOL;
[L2558]              havoc __ret_0_DECIMALS;
[L2559]              havoc __ret_0_INITIAL_SUPPLY;
[L2560]              havoc _spender_s788;
[L2561]              havoc _value_s788;
[L2562]              havoc _extraData_s788;
[L2563]              havoc success_s788;
[L2564]              havoc tmpNow;
[L2565]              havoc gas;
[L2566]              assume gas > 4000000 && gas <= 8000000;
[L2567]              tmpNow := now;
[L2568]              havoc now;
[L2569]              assume now > tmpNow;
[L2570]              assume msgsender_MSG != null;
[L2571]  COND FALSE  !(choice == 6)
[L2577]  COND FALSE  !(choice == 5)
[L2583]  COND TRUE   choice == 4
[L2584]              gas := gas - 21000;
[L2585]  COND TRUE   gas >= 0
[L2586]              assume amount_s277 >= 0 && amount_s277 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2587]              assume msgvalue_MSG == 0;
[L2588]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s277, amount_s277);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == recipient_s277 && amount_s277 <= _balances_ERC20[this][msgsender_MSG]) && amount_s277 >= 0) && amount_s277 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s277] >= 0) && _balances_ERC20[this][recipient_s277] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_ERC200 := true;
[L2]                 call_transfer_ERC200 := false;
[L2]                 revert := revert_hold;
[L196]               havoc __exception;
[L197]               revert := false;
[L198]   COND TRUE   __exception
[L199]               __tmp__Balance := Balance;
[L200]               __tmp__DType := DType;
[L201]               __tmp__Alloc := Alloc;
[L202]               __tmp__balance_ADDR := balance_ADDR;
[L203]               __tmp__M_Ref_int := M_Ref_int;
[L204]               __tmp__sum__balances0 := sum__balances0;
[L205]               __tmp__alloc__allowances_ERC20_lvl0 := alloc__allowances_ERC20_lvl0;
[L206]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L207]               __tmp__sum__allowances1 := sum__allowances1;
[L208]               __tmp__Length := Length;
[L209]               __tmp__now := now;
[L210]               __tmp___balances_ERC20 := _balances_ERC20;
[L211]               __tmp___allowances_ERC20 := _allowances_ERC20;
[L212]               __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L213]               __tmp___name_ERC20Detailed := _name_ERC20Detailed;
[L214]               __tmp___symbol_ERC20Detailed := _symbol_ERC20Detailed;
[L215]               __tmp___decimals_ERC20Detailed := _decimals_ERC20Detailed;
[L216]               __tmp__NAME_KeepToken := NAME_KeepToken;
[L217]               __tmp__SYMBOL_KeepToken := SYMBOL_KeepToken;
[L218]               __tmp__DECIMALS_KeepToken := DECIMALS_KeepToken;
[L219]               __tmp__INITIAL_SUPPLY_KeepToken := INITIAL_SUPPLY_KeepToken;
[L220]   CALL        call __ret_0_ := transfer~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, recipient_s277, amount_s277);
[L893]   COND TRUE   __tmp__DType[this] == KeepToken
[L894]   CALL        call __var_1 := _msgSender_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L856]               __ret_0_ := msgsender_MSG;
[L894]   RET         call __var_1 := _msgSender_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L895]   COND FALSE  !(revert)
[L911]   COND FALSE  !(__tmp__DType[this] == KeepToken)
[L916]   COND TRUE   __tmp__DType[this] == ERC20Burnable
[L917]   CALL        call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, __var_1, recipient_s277, amount_s277);
[L1250]              __var_6 := null;
[L1251]  COND TRUE   !(sender_s460 != null)
[L1252]              revert := true;
[L917]   RET         call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, __var_1, recipient_s277, amount_s277);
[L918]   COND TRUE   revert
[L220]   RET         call __ret_0_ := transfer~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, recipient_s277, amount_s277);
[L221]               assume revert || gas < 0;
[L2588]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s277, amount_s277);
[L2623]  RET         call CorralChoice_KeepToken(this);

Loop:
[L2623]        assume true;

[2020-11-24 14:45:42,215 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 14:45:42,215 INFO  L82        PathProgramCache]: Analyzing trace with hash -677103086, now seen corresponding path program 1 times
[2020-11-24 14:45:42,216 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 14:45:42,224 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 14:45:42,243 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 14:45:42,243 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 14:45:42,244 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-24 14:45:42,244 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 14:45:42,244 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-24 14:45:42,244 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-24 14:45:42,244 INFO  L87              Difference]: Start difference. First operand 278 states and 301 transitions. cyclomatic complexity: 24 Second operand 3 states.
[2020-11-24 14:45:42,251 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 14:45:42,251 INFO  L93              Difference]: Finished difference Result 282 states and 305 transitions.
[2020-11-24 14:45:42,251 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-24 14:45:42,251 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 282 states and 305 transitions.
[2020-11-24 14:45:42,253 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 14:45:42,255 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 282 states to 282 states and 305 transitions.
[2020-11-24 14:45:42,255 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 282
[2020-11-24 14:45:42,256 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 282
[2020-11-24 14:45:42,256 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 282 states and 305 transitions.
[2020-11-24 14:45:42,256 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 14:45:42,256 INFO  L728         BuchiCegarLoop]: Abstraction has 282 states and 305 transitions.
[2020-11-24 14:45:42,257 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 282 states and 305 transitions.
[2020-11-24 14:45:42,260 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 282 to 279.
[2020-11-24 14:45:42,260 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 279 states.
[2020-11-24 14:45:42,261 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 279 states to 279 states and 302 transitions.
[2020-11-24 14:45:42,261 INFO  L751         BuchiCegarLoop]: Abstraction has 279 states and 302 transitions.
[2020-11-24 14:45:42,261 INFO  L631         BuchiCegarLoop]: Abstraction has 279 states and 302 transitions.
[2020-11-24 14:45:42,261 INFO  L445         BuchiCegarLoop]: ======== Iteration 5============
[2020-11-24 14:45:42,261 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 279 states and 302 transitions.
[2020-11-24 14:45:42,262 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 14:45:42,262 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 14:45:42,262 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 14:45:42,263 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 14:45:42,263 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L2]                 success_transfer_ERC200 := false;
[L2]                 call_transfer_ERC200 := false;
[L2]     CALL        call main();
[L2618]              assume null == 0;
[L2619]  CALL        call this := FreshRefGenerator__success();
[L800]               havoc newRef;
[L801]               assume Alloc[newRef] == false;
[L802]               Alloc[newRef] := true;
[L803]               assume newRef != null;
[L2619]  RET         call this := FreshRefGenerator__success();
[L2620]              assume now >= 0;
[L2621]              assume DType[this] == KeepToken;
[L2622]              assume !revert && gas >= 0;
[L2623]  CALL        call CorralChoice_KeepToken(this);
[L2522]              havoc msgsender_MSG;
[L2523]              havoc msgvalue_MSG;
[L2524]              havoc choice;
[L2525]              havoc __ret_0_totalSupply;
[L2526]              havoc account_s258;
[L2527]              havoc __ret_0_balanceOf;
[L2528]              havoc recipient_s277;
[L2529]              havoc amount_s277;
[L2530]              havoc __ret_0_transfer;
[L2531]              havoc owner_s293;
[L2532]              havoc spender_s293;
[L2533]              havoc __ret_0_allowance;
[L2534]              havoc spender_s312;
[L2535]              havoc amount_s312;
[L2536]              havoc __ret_0_approve;
[L2537]              havoc sender_s348;
[L2538]              havoc recipient_s348;
[L2539]              havoc amount_s348;
[L2540]              havoc __ret_0_transferFrom;
[L2541]              havoc spender_s375;
[L2542]              havoc addedValue_s375;
[L2543]              havoc __ret_0_increaseAllowance;
[L2544]              havoc spender_s403;
[L2545]              havoc subtractedValue_s403;
[L2546]              havoc __ret_0_decreaseAllowance;
[L2547]              havoc name_s650;
[L2548]              havoc symbol_s650;
[L2549]              havoc decimals_s650;
[L2550]              havoc __ret_0_name;
[L2551]              havoc __ret_0_symbol;
[L2552]              havoc __ret_0_decimals;
[L2553]              havoc amount_s691;
[L2554]              havoc account_s704;
[L2555]              havoc amount_s704;
[L2556]              havoc __ret_0_NAME;
[L2557]              havoc __ret_0_SYMBOL;
[L2558]              havoc __ret_0_DECIMALS;
[L2559]              havoc __ret_0_INITIAL_SUPPLY;
[L2560]              havoc _spender_s788;
[L2561]              havoc _value_s788;
[L2562]              havoc _extraData_s788;
[L2563]              havoc success_s788;
[L2564]              havoc tmpNow;
[L2565]              havoc gas;
[L2566]              assume gas > 4000000 && gas <= 8000000;
[L2567]              tmpNow := now;
[L2568]              havoc now;
[L2569]              assume now > tmpNow;
[L2570]              assume msgsender_MSG != null;
[L2571]  COND FALSE  !(choice == 6)
[L2577]  COND FALSE  !(choice == 5)
[L2583]  COND TRUE   choice == 4
[L2584]              gas := gas - 21000;
[L2585]  COND TRUE   gas >= 0
[L2586]              assume amount_s277 >= 0 && amount_s277 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2587]              assume msgvalue_MSG == 0;
[L2588]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s277, amount_s277);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == recipient_s277 && amount_s277 <= _balances_ERC20[this][msgsender_MSG]) && amount_s277 >= 0) && amount_s277 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s277] >= 0) && _balances_ERC20[this][recipient_s277] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_ERC200 := true;
[L2]                 call_transfer_ERC200 := false;
[L2]                 revert := revert_hold;
[L196]               havoc __exception;
[L197]               revert := false;
[L198]   COND TRUE   __exception
[L199]               __tmp__Balance := Balance;
[L200]               __tmp__DType := DType;
[L201]               __tmp__Alloc := Alloc;
[L202]               __tmp__balance_ADDR := balance_ADDR;
[L203]               __tmp__M_Ref_int := M_Ref_int;
[L204]               __tmp__sum__balances0 := sum__balances0;
[L205]               __tmp__alloc__allowances_ERC20_lvl0 := alloc__allowances_ERC20_lvl0;
[L206]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L207]               __tmp__sum__allowances1 := sum__allowances1;
[L208]               __tmp__Length := Length;
[L209]               __tmp__now := now;
[L210]               __tmp___balances_ERC20 := _balances_ERC20;
[L211]               __tmp___allowances_ERC20 := _allowances_ERC20;
[L212]               __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L213]               __tmp___name_ERC20Detailed := _name_ERC20Detailed;
[L214]               __tmp___symbol_ERC20Detailed := _symbol_ERC20Detailed;
[L215]               __tmp___decimals_ERC20Detailed := _decimals_ERC20Detailed;
[L216]               __tmp__NAME_KeepToken := NAME_KeepToken;
[L217]               __tmp__SYMBOL_KeepToken := SYMBOL_KeepToken;
[L218]               __tmp__DECIMALS_KeepToken := DECIMALS_KeepToken;
[L219]               __tmp__INITIAL_SUPPLY_KeepToken := INITIAL_SUPPLY_KeepToken;
[L220]   CALL        call __ret_0_ := transfer~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, recipient_s277, amount_s277);
[L893]   COND TRUE   __tmp__DType[this] == KeepToken
[L894]   CALL        call __var_1 := _msgSender_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L856]               __ret_0_ := msgsender_MSG;
[L894]   RET         call __var_1 := _msgSender_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L895]   COND FALSE  !(revert)
[L911]   COND TRUE   __tmp__DType[this] == KeepToken
[L912]   CALL        call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, __var_1, recipient_s277, amount_s277);
[L1250]              __var_6 := null;
[L1251]  COND TRUE   !(sender_s460 != null)
[L1252]              revert := true;
[L912]   RET         call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, __var_1, recipient_s277, amount_s277);
[L913]   COND TRUE   revert
[L220]   RET         call __ret_0_ := transfer~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, recipient_s277, amount_s277);
[L221]               assume revert || gas < 0;
[L2588]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s277, amount_s277);
[L2623]  RET         call CorralChoice_KeepToken(this);

Loop:
[L2623]        assume true;

[2020-11-24 14:45:42,266 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 14:45:42,266 INFO  L82        PathProgramCache]: Analyzing trace with hash 1187606841, now seen corresponding path program 1 times
[2020-11-24 14:45:42,267 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 14:45:42,274 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 14:45:42,303 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 14:45:42,304 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 14:45:42,304 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [8] imperfect sequences [] total 8
[2020-11-24 14:45:42,304 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 14:45:42,304 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 8 interpolants.
[2020-11-24 14:45:42,304 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=13, Invalid=43, Unknown=0, NotChecked=0, Total=56
[2020-11-24 14:45:42,304 INFO  L87              Difference]: Start difference. First operand 279 states and 302 transitions. cyclomatic complexity: 24 Second operand 8 states.
[2020-11-24 14:45:42,326 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 14:45:42,326 INFO  L93              Difference]: Finished difference Result 293 states and 317 transitions.
[2020-11-24 14:45:42,326 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 8 states. 
[2020-11-24 14:45:42,326 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 293 states and 317 transitions.
[2020-11-24 14:45:42,328 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 14:45:42,330 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 293 states to 278 states and 300 transitions.
[2020-11-24 14:45:42,330 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 278
[2020-11-24 14:45:42,330 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 278
[2020-11-24 14:45:42,330 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 278 states and 300 transitions.
[2020-11-24 14:45:42,331 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 14:45:42,331 INFO  L728         BuchiCegarLoop]: Abstraction has 278 states and 300 transitions.
[2020-11-24 14:45:42,331 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 278 states and 300 transitions.
[2020-11-24 14:45:42,334 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 278 to 278.
[2020-11-24 14:45:42,334 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 278 states.
[2020-11-24 14:45:42,335 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 278 states to 278 states and 300 transitions.
[2020-11-24 14:45:42,335 INFO  L751         BuchiCegarLoop]: Abstraction has 278 states and 300 transitions.
[2020-11-24 14:45:42,335 INFO  L631         BuchiCegarLoop]: Abstraction has 278 states and 300 transitions.
[2020-11-24 14:45:42,335 INFO  L445         BuchiCegarLoop]: ======== Iteration 6============
[2020-11-24 14:45:42,335 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 278 states and 300 transitions.
[2020-11-24 14:45:42,336 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 14:45:42,336 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 14:45:42,336 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 14:45:42,337 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 14:45:42,337 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L2]                 success_transfer_ERC200 := false;
[L2]                 call_transfer_ERC200 := false;
[L2]     CALL        call main();
[L2618]              assume null == 0;
[L2619]  CALL        call this := FreshRefGenerator__success();
[L800]               havoc newRef;
[L801]               assume Alloc[newRef] == false;
[L802]               Alloc[newRef] := true;
[L803]               assume newRef != null;
[L2619]  RET         call this := FreshRefGenerator__success();
[L2620]              assume now >= 0;
[L2621]              assume DType[this] == KeepToken;
[L2622]              assume !revert && gas >= 0;
[L2623]  CALL        call CorralChoice_KeepToken(this);
[L2522]              havoc msgsender_MSG;
[L2523]              havoc msgvalue_MSG;
[L2524]              havoc choice;
[L2525]              havoc __ret_0_totalSupply;
[L2526]              havoc account_s258;
[L2527]              havoc __ret_0_balanceOf;
[L2528]              havoc recipient_s277;
[L2529]              havoc amount_s277;
[L2530]              havoc __ret_0_transfer;
[L2531]              havoc owner_s293;
[L2532]              havoc spender_s293;
[L2533]              havoc __ret_0_allowance;
[L2534]              havoc spender_s312;
[L2535]              havoc amount_s312;
[L2536]              havoc __ret_0_approve;
[L2537]              havoc sender_s348;
[L2538]              havoc recipient_s348;
[L2539]              havoc amount_s348;
[L2540]              havoc __ret_0_transferFrom;
[L2541]              havoc spender_s375;
[L2542]              havoc addedValue_s375;
[L2543]              havoc __ret_0_increaseAllowance;
[L2544]              havoc spender_s403;
[L2545]              havoc subtractedValue_s403;
[L2546]              havoc __ret_0_decreaseAllowance;
[L2547]              havoc name_s650;
[L2548]              havoc symbol_s650;
[L2549]              havoc decimals_s650;
[L2550]              havoc __ret_0_name;
[L2551]              havoc __ret_0_symbol;
[L2552]              havoc __ret_0_decimals;
[L2553]              havoc amount_s691;
[L2554]              havoc account_s704;
[L2555]              havoc amount_s704;
[L2556]              havoc __ret_0_NAME;
[L2557]              havoc __ret_0_SYMBOL;
[L2558]              havoc __ret_0_DECIMALS;
[L2559]              havoc __ret_0_INITIAL_SUPPLY;
[L2560]              havoc _spender_s788;
[L2561]              havoc _value_s788;
[L2562]              havoc _extraData_s788;
[L2563]              havoc success_s788;
[L2564]              havoc tmpNow;
[L2565]              havoc gas;
[L2566]              assume gas > 4000000 && gas <= 8000000;
[L2567]              tmpNow := now;
[L2568]              havoc now;
[L2569]              assume now > tmpNow;
[L2570]              assume msgsender_MSG != null;
[L2571]  COND FALSE  !(choice == 6)
[L2577]  COND FALSE  !(choice == 5)
[L2583]  COND TRUE   choice == 4
[L2584]              gas := gas - 21000;
[L2585]  COND TRUE   gas >= 0
[L2586]              assume amount_s277 >= 0 && amount_s277 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2587]              assume msgvalue_MSG == 0;
[L2588]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s277, amount_s277);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == recipient_s277 && amount_s277 <= _balances_ERC20[this][msgsender_MSG]) && amount_s277 >= 0) && amount_s277 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s277] >= 0) && _balances_ERC20[this][recipient_s277] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_ERC200 := true;
[L2]                 call_transfer_ERC200 := false;
[L2]                 revert := revert_hold;
[L196]               havoc __exception;
[L197]               revert := false;
[L198]   COND TRUE   __exception
[L199]               __tmp__Balance := Balance;
[L200]               __tmp__DType := DType;
[L201]               __tmp__Alloc := Alloc;
[L202]               __tmp__balance_ADDR := balance_ADDR;
[L203]               __tmp__M_Ref_int := M_Ref_int;
[L204]               __tmp__sum__balances0 := sum__balances0;
[L205]               __tmp__alloc__allowances_ERC20_lvl0 := alloc__allowances_ERC20_lvl0;
[L206]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L207]               __tmp__sum__allowances1 := sum__allowances1;
[L208]               __tmp__Length := Length;
[L209]               __tmp__now := now;
[L210]               __tmp___balances_ERC20 := _balances_ERC20;
[L211]               __tmp___allowances_ERC20 := _allowances_ERC20;
[L212]               __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L213]               __tmp___name_ERC20Detailed := _name_ERC20Detailed;
[L214]               __tmp___symbol_ERC20Detailed := _symbol_ERC20Detailed;
[L215]               __tmp___decimals_ERC20Detailed := _decimals_ERC20Detailed;
[L216]               __tmp__NAME_KeepToken := NAME_KeepToken;
[L217]               __tmp__SYMBOL_KeepToken := SYMBOL_KeepToken;
[L218]               __tmp__DECIMALS_KeepToken := DECIMALS_KeepToken;
[L219]               __tmp__INITIAL_SUPPLY_KeepToken := INITIAL_SUPPLY_KeepToken;
[L220]   CALL        call __ret_0_ := transfer~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, recipient_s277, amount_s277);
[L893]   COND TRUE   __tmp__DType[this] == KeepToken
[L894]   CALL        call __var_1 := _msgSender_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L856]               __ret_0_ := msgsender_MSG;
[L894]   RET         call __var_1 := _msgSender_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L895]   COND FALSE  !(revert)
[L911]   COND TRUE   __tmp__DType[this] == KeepToken
[L912]   CALL        call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, __var_1, recipient_s277, amount_s277);
[L1250]              __var_6 := null;
[L1251]  COND FALSE  !(!(sender_s460 != null))
[L1255]              __var_7 := null;
[L1256]  COND TRUE   !(recipient_s460 != null)
[L1257]              revert := true;
[L912]   RET         call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, __var_1, recipient_s277, amount_s277);
[L913]   COND TRUE   revert
[L220]   RET         call __ret_0_ := transfer~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, recipient_s277, amount_s277);
[L221]               assume revert || gas < 0;
[L2588]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s277, amount_s277);
[L2623]  RET         call CorralChoice_KeepToken(this);

Loop:
[L2623]        assume true;

[2020-11-24 14:45:42,339 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 14:45:42,339 INFO  L82        PathProgramCache]: Analyzing trace with hash 2119237348, now seen corresponding path program 1 times
[2020-11-24 14:45:42,340 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 14:45:42,347 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 14:45:42,371 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 14:45:42,371 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 14:45:42,371 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [7] imperfect sequences [] total 7
[2020-11-24 14:45:42,371 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 14:45:42,372 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 7 interpolants.
[2020-11-24 14:45:42,372 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=11, Invalid=31, Unknown=0, NotChecked=0, Total=42
[2020-11-24 14:45:42,372 INFO  L87              Difference]: Start difference. First operand 278 states and 300 transitions. cyclomatic complexity: 23 Second operand 7 states.
[2020-11-24 14:45:42,387 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 14:45:42,387 INFO  L93              Difference]: Finished difference Result 292 states and 315 transitions.
[2020-11-24 14:45:42,387 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 7 states. 
[2020-11-24 14:45:42,388 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 292 states and 315 transitions.
[2020-11-24 14:45:42,389 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 14:45:42,391 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 292 states to 277 states and 298 transitions.
[2020-11-24 14:45:42,391 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 277
[2020-11-24 14:45:42,391 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 277
[2020-11-24 14:45:42,391 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 277 states and 298 transitions.
[2020-11-24 14:45:42,392 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 14:45:42,392 INFO  L728         BuchiCegarLoop]: Abstraction has 277 states and 298 transitions.
[2020-11-24 14:45:42,392 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 277 states and 298 transitions.
[2020-11-24 14:45:42,395 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 277 to 277.
[2020-11-24 14:45:42,395 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 277 states.
[2020-11-24 14:45:42,396 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 277 states to 277 states and 298 transitions.
[2020-11-24 14:45:42,396 INFO  L751         BuchiCegarLoop]: Abstraction has 277 states and 298 transitions.
[2020-11-24 14:45:42,396 INFO  L631         BuchiCegarLoop]: Abstraction has 277 states and 298 transitions.
[2020-11-24 14:45:42,396 INFO  L445         BuchiCegarLoop]: ======== Iteration 7============
[2020-11-24 14:45:42,396 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 277 states and 298 transitions.
[2020-11-24 14:45:42,397 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 14:45:42,397 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 14:45:42,397 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 14:45:42,398 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 14:45:42,398 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L2]                 success_transfer_ERC200 := false;
[L2]                 call_transfer_ERC200 := false;
[L2]     CALL        call main();
[L2618]              assume null == 0;
[L2619]  CALL        call this := FreshRefGenerator__success();
[L800]               havoc newRef;
[L801]               assume Alloc[newRef] == false;
[L802]               Alloc[newRef] := true;
[L803]               assume newRef != null;
[L2619]  RET         call this := FreshRefGenerator__success();
[L2620]              assume now >= 0;
[L2621]              assume DType[this] == KeepToken;
[L2622]              assume !revert && gas >= 0;
[L2623]  CALL        call CorralChoice_KeepToken(this);
[L2522]              havoc msgsender_MSG;
[L2523]              havoc msgvalue_MSG;
[L2524]              havoc choice;
[L2525]              havoc __ret_0_totalSupply;
[L2526]              havoc account_s258;
[L2527]              havoc __ret_0_balanceOf;
[L2528]              havoc recipient_s277;
[L2529]              havoc amount_s277;
[L2530]              havoc __ret_0_transfer;
[L2531]              havoc owner_s293;
[L2532]              havoc spender_s293;
[L2533]              havoc __ret_0_allowance;
[L2534]              havoc spender_s312;
[L2535]              havoc amount_s312;
[L2536]              havoc __ret_0_approve;
[L2537]              havoc sender_s348;
[L2538]              havoc recipient_s348;
[L2539]              havoc amount_s348;
[L2540]              havoc __ret_0_transferFrom;
[L2541]              havoc spender_s375;
[L2542]              havoc addedValue_s375;
[L2543]              havoc __ret_0_increaseAllowance;
[L2544]              havoc spender_s403;
[L2545]              havoc subtractedValue_s403;
[L2546]              havoc __ret_0_decreaseAllowance;
[L2547]              havoc name_s650;
[L2548]              havoc symbol_s650;
[L2549]              havoc decimals_s650;
[L2550]              havoc __ret_0_name;
[L2551]              havoc __ret_0_symbol;
[L2552]              havoc __ret_0_decimals;
[L2553]              havoc amount_s691;
[L2554]              havoc account_s704;
[L2555]              havoc amount_s704;
[L2556]              havoc __ret_0_NAME;
[L2557]              havoc __ret_0_SYMBOL;
[L2558]              havoc __ret_0_DECIMALS;
[L2559]              havoc __ret_0_INITIAL_SUPPLY;
[L2560]              havoc _spender_s788;
[L2561]              havoc _value_s788;
[L2562]              havoc _extraData_s788;
[L2563]              havoc success_s788;
[L2564]              havoc tmpNow;
[L2565]              havoc gas;
[L2566]              assume gas > 4000000 && gas <= 8000000;
[L2567]              tmpNow := now;
[L2568]              havoc now;
[L2569]              assume now > tmpNow;
[L2570]              assume msgsender_MSG != null;
[L2571]  COND FALSE  !(choice == 6)
[L2577]  COND FALSE  !(choice == 5)
[L2583]  COND TRUE   choice == 4
[L2584]              gas := gas - 21000;
[L2585]  COND TRUE   gas >= 0
[L2586]              assume amount_s277 >= 0 && amount_s277 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2587]              assume msgvalue_MSG == 0;
[L2588]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s277, amount_s277);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == recipient_s277 && amount_s277 <= _balances_ERC20[this][msgsender_MSG]) && amount_s277 >= 0) && amount_s277 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s277] >= 0) && _balances_ERC20[this][recipient_s277] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_ERC200 := true;
[L2]                 call_transfer_ERC200 := false;
[L2]                 revert := revert_hold;
[L196]               havoc __exception;
[L197]               revert := false;
[L198]   COND TRUE   __exception
[L199]               __tmp__Balance := Balance;
[L200]               __tmp__DType := DType;
[L201]               __tmp__Alloc := Alloc;
[L202]               __tmp__balance_ADDR := balance_ADDR;
[L203]               __tmp__M_Ref_int := M_Ref_int;
[L204]               __tmp__sum__balances0 := sum__balances0;
[L205]               __tmp__alloc__allowances_ERC20_lvl0 := alloc__allowances_ERC20_lvl0;
[L206]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L207]               __tmp__sum__allowances1 := sum__allowances1;
[L208]               __tmp__Length := Length;
[L209]               __tmp__now := now;
[L210]               __tmp___balances_ERC20 := _balances_ERC20;
[L211]               __tmp___allowances_ERC20 := _allowances_ERC20;
[L212]               __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L213]               __tmp___name_ERC20Detailed := _name_ERC20Detailed;
[L214]               __tmp___symbol_ERC20Detailed := _symbol_ERC20Detailed;
[L215]               __tmp___decimals_ERC20Detailed := _decimals_ERC20Detailed;
[L216]               __tmp__NAME_KeepToken := NAME_KeepToken;
[L217]               __tmp__SYMBOL_KeepToken := SYMBOL_KeepToken;
[L218]               __tmp__DECIMALS_KeepToken := DECIMALS_KeepToken;
[L219]               __tmp__INITIAL_SUPPLY_KeepToken := INITIAL_SUPPLY_KeepToken;
[L220]   CALL        call __ret_0_ := transfer~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, recipient_s277, amount_s277);
[L893]   COND TRUE   __tmp__DType[this] == KeepToken
[L894]   CALL        call __var_1 := _msgSender_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L856]               __ret_0_ := msgsender_MSG;
[L894]   RET         call __var_1 := _msgSender_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L895]   COND FALSE  !(revert)
[L911]   COND TRUE   __tmp__DType[this] == KeepToken
[L912]   CALL        call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, __var_1, recipient_s277, amount_s277);
[L1250]              __var_6 := null;
[L1251]  COND FALSE  !(!(sender_s460 != null))
[L1255]              __var_7 := null;
[L1256]  COND FALSE  !(!(recipient_s460 != null))
[L1260]  CALL        call __var_8 := sub~uint256~uint256~string_SafeMath__fail(this, this, 0, __tmp___balances_ERC20[this][sender_s460], amount_s460, 1887065314);
[L833]   COND TRUE   !(b_s53 <= a_s53)
[L834]               revert := true;
[L1260]  RET         call __var_8 := sub~uint256~uint256~string_SafeMath__fail(this, this, 0, __tmp___balances_ERC20[this][sender_s460], amount_s460, 1887065314);
[L1261]  COND TRUE   revert
[L912]   RET         call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, __var_1, recipient_s277, amount_s277);
[L913]   COND TRUE   revert
[L220]   RET         call __ret_0_ := transfer~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, recipient_s277, amount_s277);
[L221]               assume revert || gas < 0;
[L2588]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s277, amount_s277);
[L2623]  RET         call CorralChoice_KeepToken(this);

Loop:
[L2623]        assume true;

[2020-11-24 14:45:42,400 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 14:45:42,400 INFO  L82        PathProgramCache]: Analyzing trace with hash -118110343, now seen corresponding path program 1 times
[2020-11-24 14:45:42,401 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 14:45:42,410 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 14:45:42,463 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 14:45:42,464 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 14:45:42,464 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [10] imperfect sequences [] total 10
[2020-11-24 14:45:42,464 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 14:45:42,464 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 10 interpolants.
[2020-11-24 14:45:42,464 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=18, Invalid=72, Unknown=0, NotChecked=0, Total=90
[2020-11-24 14:45:42,465 INFO  L87              Difference]: Start difference. First operand 277 states and 298 transitions. cyclomatic complexity: 22 Second operand 10 states.
[2020-11-24 14:45:42,607 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 14:45:42,608 INFO  L93              Difference]: Finished difference Result 294 states and 316 transitions.
[2020-11-24 14:45:42,608 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 11 states. 
[2020-11-24 14:45:42,608 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 294 states and 316 transitions.
[2020-11-24 14:45:42,609 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 2
[2020-11-24 14:45:42,610 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 294 states to 279 states and 299 transitions.
[2020-11-24 14:45:42,610 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 279
[2020-11-24 14:45:42,611 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 279
[2020-11-24 14:45:42,611 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 279 states and 299 transitions.
[2020-11-24 14:45:42,611 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 14:45:42,611 INFO  L728         BuchiCegarLoop]: Abstraction has 279 states and 299 transitions.
[2020-11-24 14:45:42,611 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 279 states and 299 transitions.
[2020-11-24 14:45:42,614 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 279 to 272.
[2020-11-24 14:45:42,614 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 272 states.
[2020-11-24 14:45:42,614 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 272 states to 272 states and 292 transitions.
[2020-11-24 14:45:42,614 INFO  L751         BuchiCegarLoop]: Abstraction has 272 states and 292 transitions.
[2020-11-24 14:45:42,615 INFO  L631         BuchiCegarLoop]: Abstraction has 272 states and 292 transitions.
[2020-11-24 14:45:42,615 INFO  L445         BuchiCegarLoop]: ======== Iteration 8============
[2020-11-24 14:45:42,615 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 272 states and 292 transitions.
[2020-11-24 14:45:42,616 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 14:45:42,616 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 14:45:42,616 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 14:45:42,617 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 14:45:42,617 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L2]                 success_transfer_ERC200 := false;
[L2]                 call_transfer_ERC200 := false;
[L2]     CALL        call main();
[L2618]              assume null == 0;
[L2619]  CALL        call this := FreshRefGenerator__success();
[L800]               havoc newRef;
[L801]               assume Alloc[newRef] == false;
[L802]               Alloc[newRef] := true;
[L803]               assume newRef != null;
[L2619]  RET         call this := FreshRefGenerator__success();
[L2620]              assume now >= 0;
[L2621]              assume DType[this] == KeepToken;
[L2622]              assume !revert && gas >= 0;
[L2623]  CALL        call CorralChoice_KeepToken(this);
[L2522]              havoc msgsender_MSG;
[L2523]              havoc msgvalue_MSG;
[L2524]              havoc choice;
[L2525]              havoc __ret_0_totalSupply;
[L2526]              havoc account_s258;
[L2527]              havoc __ret_0_balanceOf;
[L2528]              havoc recipient_s277;
[L2529]              havoc amount_s277;
[L2530]              havoc __ret_0_transfer;
[L2531]              havoc owner_s293;
[L2532]              havoc spender_s293;
[L2533]              havoc __ret_0_allowance;
[L2534]              havoc spender_s312;
[L2535]              havoc amount_s312;
[L2536]              havoc __ret_0_approve;
[L2537]              havoc sender_s348;
[L2538]              havoc recipient_s348;
[L2539]              havoc amount_s348;
[L2540]              havoc __ret_0_transferFrom;
[L2541]              havoc spender_s375;
[L2542]              havoc addedValue_s375;
[L2543]              havoc __ret_0_increaseAllowance;
[L2544]              havoc spender_s403;
[L2545]              havoc subtractedValue_s403;
[L2546]              havoc __ret_0_decreaseAllowance;
[L2547]              havoc name_s650;
[L2548]              havoc symbol_s650;
[L2549]              havoc decimals_s650;
[L2550]              havoc __ret_0_name;
[L2551]              havoc __ret_0_symbol;
[L2552]              havoc __ret_0_decimals;
[L2553]              havoc amount_s691;
[L2554]              havoc account_s704;
[L2555]              havoc amount_s704;
[L2556]              havoc __ret_0_NAME;
[L2557]              havoc __ret_0_SYMBOL;
[L2558]              havoc __ret_0_DECIMALS;
[L2559]              havoc __ret_0_INITIAL_SUPPLY;
[L2560]              havoc _spender_s788;
[L2561]              havoc _value_s788;
[L2562]              havoc _extraData_s788;
[L2563]              havoc success_s788;
[L2564]              havoc tmpNow;
[L2565]              havoc gas;
[L2566]              assume gas > 4000000 && gas <= 8000000;
[L2567]              tmpNow := now;
[L2568]              havoc now;
[L2569]              assume now > tmpNow;
[L2570]              assume msgsender_MSG != null;
[L2571]  COND FALSE  !(choice == 6)
[L2577]  COND FALSE  !(choice == 5)
[L2583]  COND TRUE   choice == 4
[L2584]              gas := gas - 21000;
[L2585]  COND TRUE   gas >= 0
[L2586]              assume amount_s277 >= 0 && amount_s277 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2587]              assume msgvalue_MSG == 0;
[L2588]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s277, amount_s277);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == recipient_s277 && amount_s277 <= _balances_ERC20[this][msgsender_MSG]) && amount_s277 >= 0) && amount_s277 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s277] >= 0) && _balances_ERC20[this][recipient_s277] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_ERC200 := true;
[L2]                 call_transfer_ERC200 := false;
[L2]                 revert := revert_hold;
[L196]               havoc __exception;
[L197]               revert := false;
[L198]   COND FALSE  !(__exception)
[L223]   CALL        call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, recipient_s277, amount_s277);
[L936]   COND TRUE   DType[this] == KeepToken
[L937]   CALL        call __var_1 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L862]               __ret_0_ := msgsender_MSG;
[L937]   RET         call __var_1 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L938]   COND FALSE  !(revert)
[L954]   COND TRUE   DType[this] == KeepToken
[L955]   CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, __var_1, recipient_s277, amount_s277);
[L1282]              __var_6 := null;
[L1283]  COND FALSE  !(!(sender_s460 != null))
[L1287]              __var_7 := null;
[L1288]  COND FALSE  !(!(recipient_s460 != null))
[L1292]  CALL        call __var_8 := sub~uint256~uint256~string_SafeMath__success(this, this, 0, _balances_ERC20[this][sender_s460], amount_s460, 1887065314);
[L845]   COND FALSE  !(!(b_s53 <= a_s53))
[L849]               c_s53 := (a_s53 - b_s53) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L850]               __ret_0_ := c_s53;
[L1292]  RET         call __var_8 := sub~uint256~uint256~string_SafeMath__success(this, this, 0, _balances_ERC20[this][sender_s460], amount_s460, 1887065314);
[L1293]  COND FALSE  !(revert)
[L1296]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][sender_s460];
[L1297]              _balances_ERC20[this][sender_s460] := __var_8;
[L1298]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][sender_s460];
[L1299]  CALL        call __var_9 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][recipient_s460], amount_s460);
[L821]               c_s26 := (a_s26 + b_s26) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L822]   COND FALSE  !(!(c_s26 >= a_s26))
[L826]               __ret_0_ := c_s26;
[L1299]  RET         call __var_9 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][recipient_s460], amount_s460);
[L1300]  COND FALSE  !(revert)
[L1303]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][recipient_s460];
[L1304]              _balances_ERC20[this][recipient_s460] := __var_9;
[L1305]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][recipient_s460];
[L1306]              assert { :EventEmitted "Transfer_ERC20" } true;
[L955]   RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, __var_1, recipient_s277, amount_s277);
[L956]   COND FALSE  !(revert)
[L972]               __ret_0_ := true;
[L223]   RET         call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, recipient_s277, amount_s277);
[L224]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !((((((__ret_0_ == true && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _balances_ERC20[this] == old(_balances_ERC20[this])) && _allowances_ERC20[this] == old(_allowances_ERC20[this])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]));
[L2]                 revert := revert_hold;
[L2588]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s277, amount_s277);
[L2623]  RET         call CorralChoice_KeepToken(this);

Loop:
[L2623]        assume true;

[2020-11-24 14:45:42,618 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 14:45:42,618 INFO  L82        PathProgramCache]: Analyzing trace with hash 528431465, now seen corresponding path program 1 times
[2020-11-24 14:45:42,619 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 14:45:42,664 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 14:45:43,167 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 14:45:43,167 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 14:45:43,167 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [21] imperfect sequences [] total 21
[2020-11-24 14:45:43,168 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 14:45:43,168 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 21 interpolants.
[2020-11-24 14:45:43,168 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=54, Invalid=366, Unknown=0, NotChecked=0, Total=420
[2020-11-24 14:45:43,168 INFO  L87              Difference]: Start difference. First operand 272 states and 292 transitions. cyclomatic complexity: 21 Second operand 21 states.
[2020-11-24 14:45:43,736 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 14:45:43,736 INFO  L93              Difference]: Finished difference Result 277 states and 296 transitions.
[2020-11-24 14:45:43,736 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 21 states. 
[2020-11-24 14:45:43,736 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 277 states and 296 transitions.
[2020-11-24 14:45:43,737 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 14:45:43,738 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 277 states to 197 states and 208 transitions.
[2020-11-24 14:45:43,738 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 197
[2020-11-24 14:45:43,738 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 197
[2020-11-24 14:45:43,738 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 197 states and 208 transitions.
[2020-11-24 14:45:43,738 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 14:45:43,738 INFO  L728         BuchiCegarLoop]: Abstraction has 197 states and 208 transitions.
[2020-11-24 14:45:43,739 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 197 states and 208 transitions.
[2020-11-24 14:45:43,740 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 197 to 197.
[2020-11-24 14:45:43,740 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 197 states.
[2020-11-24 14:45:43,740 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 197 states to 197 states and 208 transitions.
[2020-11-24 14:45:43,740 INFO  L751         BuchiCegarLoop]: Abstraction has 197 states and 208 transitions.
[2020-11-24 14:45:43,740 INFO  L631         BuchiCegarLoop]: Abstraction has 197 states and 208 transitions.
[2020-11-24 14:45:43,741 INFO  L445         BuchiCegarLoop]: ======== Iteration 9============
[2020-11-24 14:45:43,741 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 197 states and 208 transitions.
[2020-11-24 14:45:43,741 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 14:45:43,741 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 14:45:43,741 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 14:45:43,742 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 14:45:43,742 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L2]                 success_transfer_ERC200 := false;
[L2]                 call_transfer_ERC200 := false;
[L2]     CALL        call main();
[L2618]              assume null == 0;
[L2619]  CALL        call this := FreshRefGenerator__success();
[L800]               havoc newRef;
[L801]               assume Alloc[newRef] == false;
[L802]               Alloc[newRef] := true;
[L803]               assume newRef != null;
[L2619]  RET         call this := FreshRefGenerator__success();
[L2620]              assume now >= 0;
[L2621]              assume DType[this] == KeepToken;
[L2622]              assume !revert && gas >= 0;
[L2623]  CALL        call CorralChoice_KeepToken(this);
[L2522]              havoc msgsender_MSG;
[L2523]              havoc msgvalue_MSG;
[L2524]              havoc choice;
[L2525]              havoc __ret_0_totalSupply;
[L2526]              havoc account_s258;
[L2527]              havoc __ret_0_balanceOf;
[L2528]              havoc recipient_s277;
[L2529]              havoc amount_s277;
[L2530]              havoc __ret_0_transfer;
[L2531]              havoc owner_s293;
[L2532]              havoc spender_s293;
[L2533]              havoc __ret_0_allowance;
[L2534]              havoc spender_s312;
[L2535]              havoc amount_s312;
[L2536]              havoc __ret_0_approve;
[L2537]              havoc sender_s348;
[L2538]              havoc recipient_s348;
[L2539]              havoc amount_s348;
[L2540]              havoc __ret_0_transferFrom;
[L2541]              havoc spender_s375;
[L2542]              havoc addedValue_s375;
[L2543]              havoc __ret_0_increaseAllowance;
[L2544]              havoc spender_s403;
[L2545]              havoc subtractedValue_s403;
[L2546]              havoc __ret_0_decreaseAllowance;
[L2547]              havoc name_s650;
[L2548]              havoc symbol_s650;
[L2549]              havoc decimals_s650;
[L2550]              havoc __ret_0_name;
[L2551]              havoc __ret_0_symbol;
[L2552]              havoc __ret_0_decimals;
[L2553]              havoc amount_s691;
[L2554]              havoc account_s704;
[L2555]              havoc amount_s704;
[L2556]              havoc __ret_0_NAME;
[L2557]              havoc __ret_0_SYMBOL;
[L2558]              havoc __ret_0_DECIMALS;
[L2559]              havoc __ret_0_INITIAL_SUPPLY;
[L2560]              havoc _spender_s788;
[L2561]              havoc _value_s788;
[L2562]              havoc _extraData_s788;
[L2563]              havoc success_s788;
[L2564]              havoc tmpNow;
[L2565]              havoc gas;
[L2566]              assume gas > 4000000 && gas <= 8000000;
[L2567]              tmpNow := now;
[L2568]              havoc now;
[L2569]              assume now > tmpNow;
[L2570]              assume msgsender_MSG != null;
[L2571]  COND FALSE  !(choice == 6)
[L2577]  COND FALSE  !(choice == 5)
[L2583]  COND TRUE   choice == 4
[L2584]              gas := gas - 21000;
[L2585]  COND TRUE   gas >= 0
[L2586]              assume amount_s277 >= 0 && amount_s277 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2587]              assume msgvalue_MSG == 0;
[L2588]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s277, amount_s277);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == recipient_s277 && amount_s277 <= _balances_ERC20[this][msgsender_MSG]) && amount_s277 >= 0) && amount_s277 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s277] >= 0) && _balances_ERC20[this][recipient_s277] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_ERC200 := true;
[L2]                 call_transfer_ERC200 := false;
[L2]                 revert := revert_hold;
[L196]               havoc __exception;
[L197]               revert := false;
[L198]   COND TRUE   __exception
[L199]               __tmp__Balance := Balance;
[L200]               __tmp__DType := DType;
[L201]               __tmp__Alloc := Alloc;
[L202]               __tmp__balance_ADDR := balance_ADDR;
[L203]               __tmp__M_Ref_int := M_Ref_int;
[L204]               __tmp__sum__balances0 := sum__balances0;
[L205]               __tmp__alloc__allowances_ERC20_lvl0 := alloc__allowances_ERC20_lvl0;
[L206]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L207]               __tmp__sum__allowances1 := sum__allowances1;
[L208]               __tmp__Length := Length;
[L209]               __tmp__now := now;
[L210]               __tmp___balances_ERC20 := _balances_ERC20;
[L211]               __tmp___allowances_ERC20 := _allowances_ERC20;
[L212]               __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L213]               __tmp___name_ERC20Detailed := _name_ERC20Detailed;
[L214]               __tmp___symbol_ERC20Detailed := _symbol_ERC20Detailed;
[L215]               __tmp___decimals_ERC20Detailed := _decimals_ERC20Detailed;
[L216]               __tmp__NAME_KeepToken := NAME_KeepToken;
[L217]               __tmp__SYMBOL_KeepToken := SYMBOL_KeepToken;
[L218]               __tmp__DECIMALS_KeepToken := DECIMALS_KeepToken;
[L219]               __tmp__INITIAL_SUPPLY_KeepToken := INITIAL_SUPPLY_KeepToken;
[L220]   CALL        call __ret_0_ := transfer~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, recipient_s277, amount_s277);
[L893]   COND TRUE   __tmp__DType[this] == KeepToken
[L894]   CALL        call __var_1 := _msgSender_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L856]               __ret_0_ := msgsender_MSG;
[L894]   RET         call __var_1 := _msgSender_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L895]   COND FALSE  !(revert)
[L911]   COND TRUE   __tmp__DType[this] == KeepToken
[L912]   CALL        call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, __var_1, recipient_s277, amount_s277);
[L1250]              __var_6 := null;
[L1251]  COND FALSE  !(!(sender_s460 != null))
[L1255]              __var_7 := null;
[L1256]  COND FALSE  !(!(recipient_s460 != null))
[L1260]  CALL        call __var_8 := sub~uint256~uint256~string_SafeMath__fail(this, this, 0, __tmp___balances_ERC20[this][sender_s460], amount_s460, 1887065314);
[L833]   COND FALSE  !(!(b_s53 <= a_s53))
[L837]               c_s53 := (a_s53 - b_s53) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L838]               __ret_0_ := c_s53;
[L1260]  RET         call __var_8 := sub~uint256~uint256~string_SafeMath__fail(this, this, 0, __tmp___balances_ERC20[this][sender_s460], amount_s460, 1887065314);
[L1261]  COND FALSE  !(revert)
[L1264]              __tmp__sum__balances0[this] := __tmp__sum__balances0[this] - __tmp___balances_ERC20[this][sender_s460];
[L1265]              __tmp___balances_ERC20[this][sender_s460] := __var_8;
[L1266]              __tmp__sum__balances0[this] := __tmp__sum__balances0[this] + __tmp___balances_ERC20[this][sender_s460];
[L1267]  CALL        call __var_9 := add~uint256~uint256_SafeMath__fail(this, this, 0, __tmp___balances_ERC20[this][recipient_s460], amount_s460);
[L809]               c_s26 := (a_s26 + b_s26) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L810]   COND TRUE   !(c_s26 >= a_s26)
[L811]               revert := true;
[L1267]  RET         call __var_9 := add~uint256~uint256_SafeMath__fail(this, this, 0, __tmp___balances_ERC20[this][recipient_s460], amount_s460);
[L1268]  COND TRUE   revert
[L912]   RET         call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, __var_1, recipient_s277, amount_s277);
[L913]   COND TRUE   revert
[L220]   RET         call __ret_0_ := transfer~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, recipient_s277, amount_s277);
[L221]               assume revert || gas < 0;
[L2588]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s277, amount_s277);
[L2623]  RET         call CorralChoice_KeepToken(this);

Loop:
[L2623]        assume true;

[2020-11-24 14:45:43,743 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 14:45:43,744 INFO  L82        PathProgramCache]: Analyzing trace with hash 1075383796, now seen corresponding path program 1 times
[2020-11-24 14:45:43,744 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 14:45:43,751 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 14:45:43,817 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 14:45:43,817 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 14:45:43,817 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [18] imperfect sequences [] total 18
[2020-11-24 14:45:43,817 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 14:45:43,818 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 18 interpolants.
[2020-11-24 14:45:43,818 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=37, Invalid=269, Unknown=0, NotChecked=0, Total=306
[2020-11-24 14:45:43,818 INFO  L87              Difference]: Start difference. First operand 197 states and 208 transitions. cyclomatic complexity: 12 Second operand 18 states.
[2020-11-24 14:45:43,927 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 14:45:43,927 INFO  L93              Difference]: Finished difference Result 203 states and 213 transitions.
[2020-11-24 14:45:43,927 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 20 states. 
[2020-11-24 14:45:43,927 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 203 states and 213 transitions.
[2020-11-24 14:45:43,928 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 14:45:43,929 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 203 states to 184 states and 192 transitions.
[2020-11-24 14:45:43,929 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 184
[2020-11-24 14:45:43,929 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 184
[2020-11-24 14:45:43,929 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 184 states and 192 transitions.
[2020-11-24 14:45:43,929 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 14:45:43,929 INFO  L728         BuchiCegarLoop]: Abstraction has 184 states and 192 transitions.
[2020-11-24 14:45:43,929 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 184 states and 192 transitions.
[2020-11-24 14:45:43,931 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 184 to 184.
[2020-11-24 14:45:43,931 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 184 states.
[2020-11-24 14:45:43,931 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 184 states to 184 states and 192 transitions.
[2020-11-24 14:45:43,931 INFO  L751         BuchiCegarLoop]: Abstraction has 184 states and 192 transitions.
[2020-11-24 14:45:43,931 INFO  L631         BuchiCegarLoop]: Abstraction has 184 states and 192 transitions.
[2020-11-24 14:45:43,931 INFO  L445         BuchiCegarLoop]: ======== Iteration 10============
[2020-11-24 14:45:43,931 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 184 states and 192 transitions.
[2020-11-24 14:45:43,932 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 14:45:43,932 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 14:45:43,932 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 14:45:43,932 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 14:45:43,933 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L2]                 success_transfer_ERC200 := false;
[L2]                 call_transfer_ERC200 := false;
[L2]     CALL        call main();
[L2618]              assume null == 0;
[L2619]  CALL        call this := FreshRefGenerator__success();
[L800]               havoc newRef;
[L801]               assume Alloc[newRef] == false;
[L802]               Alloc[newRef] := true;
[L803]               assume newRef != null;
[L2619]  RET         call this := FreshRefGenerator__success();
[L2620]              assume now >= 0;
[L2621]              assume DType[this] == KeepToken;
[L2622]              assume !revert && gas >= 0;
[L2623]  CALL        call CorralChoice_KeepToken(this);
[L2522]              havoc msgsender_MSG;
[L2523]              havoc msgvalue_MSG;
[L2524]              havoc choice;
[L2525]              havoc __ret_0_totalSupply;
[L2526]              havoc account_s258;
[L2527]              havoc __ret_0_balanceOf;
[L2528]              havoc recipient_s277;
[L2529]              havoc amount_s277;
[L2530]              havoc __ret_0_transfer;
[L2531]              havoc owner_s293;
[L2532]              havoc spender_s293;
[L2533]              havoc __ret_0_allowance;
[L2534]              havoc spender_s312;
[L2535]              havoc amount_s312;
[L2536]              havoc __ret_0_approve;
[L2537]              havoc sender_s348;
[L2538]              havoc recipient_s348;
[L2539]              havoc amount_s348;
[L2540]              havoc __ret_0_transferFrom;
[L2541]              havoc spender_s375;
[L2542]              havoc addedValue_s375;
[L2543]              havoc __ret_0_increaseAllowance;
[L2544]              havoc spender_s403;
[L2545]              havoc subtractedValue_s403;
[L2546]              havoc __ret_0_decreaseAllowance;
[L2547]              havoc name_s650;
[L2548]              havoc symbol_s650;
[L2549]              havoc decimals_s650;
[L2550]              havoc __ret_0_name;
[L2551]              havoc __ret_0_symbol;
[L2552]              havoc __ret_0_decimals;
[L2553]              havoc amount_s691;
[L2554]              havoc account_s704;
[L2555]              havoc amount_s704;
[L2556]              havoc __ret_0_NAME;
[L2557]              havoc __ret_0_SYMBOL;
[L2558]              havoc __ret_0_DECIMALS;
[L2559]              havoc __ret_0_INITIAL_SUPPLY;
[L2560]              havoc _spender_s788;
[L2561]              havoc _value_s788;
[L2562]              havoc _extraData_s788;
[L2563]              havoc success_s788;
[L2564]              havoc tmpNow;
[L2565]              havoc gas;
[L2566]              assume gas > 4000000 && gas <= 8000000;
[L2567]              tmpNow := now;
[L2568]              havoc now;
[L2569]              assume now > tmpNow;
[L2570]              assume msgsender_MSG != null;
[L2571]  COND FALSE  !(choice == 6)
[L2577]  COND FALSE  !(choice == 5)
[L2583]  COND TRUE   choice == 4
[L2584]              gas := gas - 21000;
[L2585]  COND TRUE   gas >= 0
[L2586]              assume amount_s277 >= 0 && amount_s277 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2587]              assume msgvalue_MSG == 0;
[L2588]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s277, amount_s277);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == recipient_s277 && amount_s277 <= _balances_ERC20[this][msgsender_MSG]) && amount_s277 >= 0) && amount_s277 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s277] >= 0) && _balances_ERC20[this][recipient_s277] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_ERC200 := true;
[L2]                 call_transfer_ERC200 := false;
[L2]                 revert := revert_hold;
[L196]               havoc __exception;
[L197]               revert := false;
[L198]   COND TRUE   __exception
[L199]               __tmp__Balance := Balance;
[L200]               __tmp__DType := DType;
[L201]               __tmp__Alloc := Alloc;
[L202]               __tmp__balance_ADDR := balance_ADDR;
[L203]               __tmp__M_Ref_int := M_Ref_int;
[L204]               __tmp__sum__balances0 := sum__balances0;
[L205]               __tmp__alloc__allowances_ERC20_lvl0 := alloc__allowances_ERC20_lvl0;
[L206]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L207]               __tmp__sum__allowances1 := sum__allowances1;
[L208]               __tmp__Length := Length;
[L209]               __tmp__now := now;
[L210]               __tmp___balances_ERC20 := _balances_ERC20;
[L211]               __tmp___allowances_ERC20 := _allowances_ERC20;
[L212]               __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L213]               __tmp___name_ERC20Detailed := _name_ERC20Detailed;
[L214]               __tmp___symbol_ERC20Detailed := _symbol_ERC20Detailed;
[L215]               __tmp___decimals_ERC20Detailed := _decimals_ERC20Detailed;
[L216]               __tmp__NAME_KeepToken := NAME_KeepToken;
[L217]               __tmp__SYMBOL_KeepToken := SYMBOL_KeepToken;
[L218]               __tmp__DECIMALS_KeepToken := DECIMALS_KeepToken;
[L219]               __tmp__INITIAL_SUPPLY_KeepToken := INITIAL_SUPPLY_KeepToken;
[L220]   CALL        call __ret_0_ := transfer~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, recipient_s277, amount_s277);
[L893]   COND TRUE   __tmp__DType[this] == KeepToken
[L894]   CALL        call __var_1 := _msgSender_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L856]               __ret_0_ := msgsender_MSG;
[L894]   RET         call __var_1 := _msgSender_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L895]   COND FALSE  !(revert)
[L911]   COND TRUE   __tmp__DType[this] == KeepToken
[L912]   CALL        call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, __var_1, recipient_s277, amount_s277);
[L1250]              __var_6 := null;
[L1251]  COND FALSE  !(!(sender_s460 != null))
[L1255]              __var_7 := null;
[L1256]  COND FALSE  !(!(recipient_s460 != null))
[L1260]  CALL        call __var_8 := sub~uint256~uint256~string_SafeMath__fail(this, this, 0, __tmp___balances_ERC20[this][sender_s460], amount_s460, 1887065314);
[L833]   COND FALSE  !(!(b_s53 <= a_s53))
[L837]               c_s53 := (a_s53 - b_s53) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L838]               __ret_0_ := c_s53;
[L1260]  RET         call __var_8 := sub~uint256~uint256~string_SafeMath__fail(this, this, 0, __tmp___balances_ERC20[this][sender_s460], amount_s460, 1887065314);
[L1261]  COND FALSE  !(revert)
[L1264]              __tmp__sum__balances0[this] := __tmp__sum__balances0[this] - __tmp___balances_ERC20[this][sender_s460];
[L1265]              __tmp___balances_ERC20[this][sender_s460] := __var_8;
[L1266]              __tmp__sum__balances0[this] := __tmp__sum__balances0[this] + __tmp___balances_ERC20[this][sender_s460];
[L1267]  CALL        call __var_9 := add~uint256~uint256_SafeMath__fail(this, this, 0, __tmp___balances_ERC20[this][recipient_s460], amount_s460);
[L809]               c_s26 := (a_s26 + b_s26) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L810]   COND FALSE  !(!(c_s26 >= a_s26))
[L814]               __ret_0_ := c_s26;
[L1267]  RET         call __var_9 := add~uint256~uint256_SafeMath__fail(this, this, 0, __tmp___balances_ERC20[this][recipient_s460], amount_s460);
[L1268]  COND FALSE  !(revert)
[L1271]              __tmp__sum__balances0[this] := __tmp__sum__balances0[this] - __tmp___balances_ERC20[this][recipient_s460];
[L1272]              __tmp___balances_ERC20[this][recipient_s460] := __var_9;
[L1273]              __tmp__sum__balances0[this] := __tmp__sum__balances0[this] + __tmp___balances_ERC20[this][recipient_s460];
[L912]   RET         call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, __var_1, recipient_s277, amount_s277);
[L913]   COND FALSE  !(revert)
[L929]               __ret_0_ := true;
[L220]   RET         call __ret_0_ := transfer~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, recipient_s277, amount_s277);
[L221]               assume revert || gas < 0;
[L2588]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s277, amount_s277);
[L2623]  RET         call CorralChoice_KeepToken(this);

Loop:
[L2623]        assume true;

[2020-11-24 14:45:43,934 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 14:45:43,934 INFO  L82        PathProgramCache]: Analyzing trace with hash -1250596212, now seen corresponding path program 1 times
[2020-11-24 14:45:43,935 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 14:45:43,940 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 14:45:43,955 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 14:45:43,955 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 14:45:43,956 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [5] imperfect sequences [] total 5
[2020-11-24 14:45:43,956 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 14:45:43,956 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 5 interpolants.
[2020-11-24 14:45:43,956 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=7, Invalid=13, Unknown=0, NotChecked=0, Total=20
[2020-11-24 14:45:43,956 INFO  L87              Difference]: Start difference. First operand 184 states and 192 transitions. cyclomatic complexity: 9 Second operand 5 states.
[2020-11-24 14:45:43,969 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 14:45:43,969 INFO  L93              Difference]: Finished difference Result 177 states and 184 transitions.
[2020-11-24 14:45:43,969 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 5 states. 
[2020-11-24 14:45:43,970 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 177 states and 184 transitions.
[2020-11-24 14:45:43,970 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-24 14:45:43,971 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 177 states to 0 states and 0 transitions.
[2020-11-24 14:45:43,971 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 0
[2020-11-24 14:45:43,971 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 0
[2020-11-24 14:45:43,971 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 0 states and 0 transitions.
[2020-11-24 14:45:43,971 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 14:45:43,971 INFO  L728         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-24 14:45:43,971 INFO  L751         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-24 14:45:43,971 INFO  L631         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-24 14:45:43,971 INFO  L445         BuchiCegarLoop]: ======== Iteration 11============
[2020-11-24 14:45:43,971 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 0 states and 0 transitions.
[2020-11-24 14:45:43,971 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-24 14:45:43,971 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is true
[2020-11-24 14:45:43,974 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 24.11 02:45:43 BasicIcfg
[2020-11-24 14:45:43,974 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-24 14:45:43,975 INFO  L168              Benchmark]: Toolchain (without parser) took 4501.81 ms. Allocated memory was 1.0 GB in the beginning and 1.3 GB in the end (delta: 285.2 MB). Free memory was 940.6 MB in the beginning and 756.7 MB in the end (delta: 183.9 MB). Peak memory consumption was 469.1 MB. Max. memory is 15.3 GB.
[2020-11-24 14:45:43,976 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.21 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-24 14:45:43,976 INFO  L168              Benchmark]: Boogie Preprocessor took 79.49 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 935.2 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-24 14:45:43,976 INFO  L168              Benchmark]: UtopiaSpecLang took 50.09 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 929.8 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-24 14:45:43,977 INFO  L168              Benchmark]: Boogie Printer took 11.45 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 924.5 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-24 14:45:43,977 INFO  L168              Benchmark]: RCFGBuilder took 644.28 ms. Allocated memory is still 1.0 GB. Free memory was 924.5 MB in the beginning and 849.3 MB in the end (delta: 75.2 MB). Peak memory consumption was 75.2 MB. Max. memory is 15.3 GB.
[2020-11-24 14:45:43,977 INFO  L168              Benchmark]: UtopiaLTL2Aut took 43.66 ms. Allocated memory is still 1.0 GB. Free memory was 849.3 MB in the beginning and 845.7 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
[2020-11-24 14:45:43,978 INFO  L168              Benchmark]: BÃ¼chi Program Product took 988.62 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 67.6 MB). Free memory was 845.7 MB in the beginning and 789.4 MB in the end (delta: 56.3 MB). Peak memory consumption was 130.0 MB. Max. memory is 15.3 GB.
[2020-11-24 14:45:43,978 INFO  L168              Benchmark]: BlockEncodingV2 took 92.81 ms. Allocated memory is still 1.1 GB. Free memory was 789.4 MB in the beginning and 747.5 MB in the end (delta: 41.9 MB). Peak memory consumption was 41.9 MB. Max. memory is 15.3 GB.
[2020-11-24 14:45:43,978 INFO  L168              Benchmark]: BuchiAutomizer took 2587.67 ms. Allocated memory was 1.1 GB in the beginning and 1.3 GB in the end (delta: 217.6 MB). Free memory was 747.5 MB in the beginning and 756.7 MB in the end (delta: -9.1 MB). Peak memory consumption was 208.5 MB. Max. memory is 15.3 GB.
[2020-11-24 14:45:43,981 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    2338 locations, 4332 edges
  - StatisticsResult: Encoded RCFG
    2266 locations, 4145 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.21 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 79.49 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 935.2 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 50.09 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 929.8 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 11.45 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 924.5 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * RCFGBuilder took 644.28 ms. Allocated memory is still 1.0 GB. Free memory was 924.5 MB in the beginning and 849.3 MB in the end (delta: 75.2 MB). Peak memory consumption was 75.2 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 43.66 ms. Allocated memory is still 1.0 GB. Free memory was 849.3 MB in the beginning and 845.7 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 988.62 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 67.6 MB). Free memory was 845.7 MB in the beginning and 789.4 MB in the end (delta: 56.3 MB). Peak memory consumption was 130.0 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 92.81 ms. Allocated memory is still 1.1 GB. Free memory was 789.4 MB in the beginning and 747.5 MB in the end (delta: 41.9 MB). Peak memory consumption was 41.9 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 2587.67 ms. Allocated memory was 1.1 GB in the beginning and 1.3 GB in the end (delta: 217.6 MB). Free memory was 747.5 MB in the beginning and 756.7 MB in the end (delta: -9.1 MB). Peak memory consumption was 208.5 MB. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    937 locations, 1326 edges
  - StatisticsResult: BuchiProgram size
    2338 locations, 4332 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 10 terminating modules (10 trivial, 0 deterministic, 0 nondeterministic). 10 modules have a trivial ranking function, the largest among these consists of 21 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 2.5s and 11 iterations.  TraceHistogramMax:1. Analysis of lassos took 1.0s. Construction of modules took 0.7s. BÃ¼chi inclusion checks took 0.5s. Highest rank in rank-based complementation 0. Minimization of det autom 10. Minimization of nondet autom 0. Automata minimization 0.0s AutomataMinimizationTime, 9 MinimizatonAttempts, 32 StatesRemovedByMinimization, 4 NontrivialMinimizations. Non-live state removal took 0.0s Buchi closure took 0.0s. Biggest automaton had 279 states and ocurred in iteration 4.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 3400 SDtfs, 2448 SDslu, 8918 SDs, 0 SdLazy, 4223 SolverSat, 846 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 0.7s Time	LassoAnalysisResults: nont0 unkn0 SFLI0 SFLT0 conc0 concLT0 SILN0 SILU10 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - AllSpecificationsHoldResult: All specifications hold
    Buchi Automizer proved that the LTL property ! ( ( []( (call_transfer_ERC200) ==> ( <>(success_transfer_ERC200) ) ) )) holds
RESULT: Ultimate proved your program to be correct!
Received shutdown request...
