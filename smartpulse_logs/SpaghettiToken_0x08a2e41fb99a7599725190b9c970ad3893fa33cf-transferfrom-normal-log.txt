This is Ultimate 0.1.24-f1553f5-m
[2020-11-24 16:12:36,070 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-24 16:12:36,071 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-24 16:12:36,081 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-24 16:12:36,082 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-24 16:12:36,082 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-24 16:12:36,083 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-24 16:12:36,086 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-24 16:12:36,087 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-24 16:12:36,088 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-24 16:12:36,089 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-24 16:12:36,089 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-24 16:12:36,090 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-24 16:12:36,090 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-24 16:12:36,091 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-24 16:12:36,092 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-24 16:12:36,092 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-24 16:12:36,094 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-24 16:12:36,095 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-24 16:12:36,096 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-24 16:12:36,097 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-24 16:12:36,098 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-24 16:12:36,100 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-24 16:12:36,100 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-24 16:12:36,100 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-24 16:12:36,101 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-24 16:12:36,101 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-24 16:12:36,102 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-24 16:12:36,102 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-24 16:12:36,102 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-24 16:12:36,103 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-24 16:12:36,103 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-24 16:12:36,104 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-24 16:12:36,104 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-24 16:12:36,105 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-24 16:12:36,105 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-24 16:12:36,106 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-24 16:12:36,106 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-24 16:12:36,106 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-24 16:12:36,107 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-24 16:12:36,107 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-24 16:12:36,108 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-24 16:12:36,119 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-24 16:12:36,119 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-24 16:12:36,120 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-24 16:12:36,120 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-24 16:12:36,121 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-24 16:12:36,121 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-24 16:12:36,121 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-24 16:12:36,121 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-24 16:12:36,121 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-24 16:12:36,121 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-24 16:12:36,121 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-24 16:12:36,121 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-24 16:12:36,121 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-24 16:12:36,122 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-24 16:12:36,122 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-24 16:12:36,122 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-24 16:12:36,122 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-24 16:12:36,122 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-24 16:12:36,122 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-24 16:12:36,122 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-24 16:12:36,122 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-24 16:12:36,122 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-24 16:12:36,122 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-24 16:12:36,123 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-24 16:12:36,123 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-24 16:12:36,123 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-24 16:12:36,146 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-24 16:12:36,160 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-24 16:12:36,163 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-24 16:12:36,164 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-24 16:12:36,164 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-24 16:12:36,165 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/SpaghettiToken_0x08a2e41fb99a7599725190b9c970ad3893fa33cf_transferfrom-normal.bpl
[2020-11-24 16:12:36,165 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/SpaghettiToken_0x08a2e41fb99a7599725190b9c970ad3893fa33cf_transferfrom-normal.bpl'
[2020-11-24 16:12:36,217 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-24 16:12:36,218 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-24 16:12:36,218 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-24 16:12:36,219 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-24 16:12:36,219 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-24 16:12:36,235 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "SpaghettiToken_0x08a2e41fb99a7599725190b9c970ad3893fa33cf_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 04:12:36" (1/1) ...
[2020-11-24 16:12:36,236 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "SpaghettiToken_0x08a2e41fb99a7599725190b9c970ad3893fa33cf_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 04:12:36" (1/1) ...
[2020-11-24 16:12:36,253 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "SpaghettiToken_0x08a2e41fb99a7599725190b9c970ad3893fa33cf_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 04:12:36" (1/1) ...
[2020-11-24 16:12:36,254 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "SpaghettiToken_0x08a2e41fb99a7599725190b9c970ad3893fa33cf_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 04:12:36" (1/1) ...
[2020-11-24 16:12:36,266 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "SpaghettiToken_0x08a2e41fb99a7599725190b9c970ad3893fa33cf_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 04:12:36" (1/1) ...
[2020-11-24 16:12:36,273 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "SpaghettiToken_0x08a2e41fb99a7599725190b9c970ad3893fa33cf_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 04:12:36" (1/1) ...
[2020-11-24 16:12:36,276 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "SpaghettiToken_0x08a2e41fb99a7599725190b9c970ad3893fa33cf_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 04:12:36" (1/1) ...
[2020-11-24 16:12:36,282 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-24 16:12:36,282 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-24 16:12:36,282 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-24 16:12:36,284 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-24 16:12:36,289 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "SpaghettiToken_0x08a2e41fb99a7599725190b9c970ad3893fa33cf_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 04:12:36" (1/1) ...
[2020-11-24 16:12:36,301 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(SpaghettiToken.transferFrom(from, to, value), p1 != from && p1 != to && (p2 != from || p3 != msg.sender) && from != to && value <= balanceOf_SpaghettiToken[this][from] && value <= allowance_SpaghettiToken[this][from][msg.sender] && balanceOf_SpaghettiToken[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_SpaghettiToken[this][to] >= 0 && balanceOf_SpaghettiToken[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_SpaghettiToken[this][from] >= 0 &&  balanceOf_SpaghettiToken[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && allowance_SpaghettiToken[this][from][msg.sender] >= 0 && allowance_SpaghettiToken[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(SpaghettiToken.transferFrom(from, to, value), return == true && balanceOf_SpaghettiToken[this][from] == old(balanceOf_SpaghettiToken[this][from]) - value && balanceOf_SpaghettiToken[this][to] == old(balanceOf_SpaghettiToken[this][to]) + value && allowance_SpaghettiToken[this][from][msg.sender] == old(allowance_SpaghettiToken[this][from][msg.sender]) - value && totalSupply_SpaghettiToken[this] == old(totalSupply_SpaghettiToken[this]) && balanceOf_SpaghettiToken[this][p1] == old(balanceOf_SpaghettiToken[this][p1]) && allowance_SpaghettiToken[this][p2][p3] == old(allowance_SpaghettiToken[this][p2][p3]) && symbol_SpaghettiToken[this] == old(symbol_SpaghettiToken[this]) && decimals_SpaghettiToken[this] == old(decimals_SpaghettiToken[this]) && name_SpaghettiToken[this] == old(name_SpaghettiToken[this]))))
[2020-11-24 16:12:36,306 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(SpaghettiToken.transferFrom(from, to, value), p1 != from && p1 != to && (p2 != from || p3 != msg.sender) && from != to && value <= balanceOf_SpaghettiToken[this][from] && value <= allowance_SpaghettiToken[this][from][msg.sender] && balanceOf_SpaghettiToken[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_SpaghettiToken[this][to] >= 0 && balanceOf_SpaghettiToken[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_SpaghettiToken[this][from] >= 0 &&  balanceOf_SpaghettiToken[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && allowance_SpaghettiToken[this][from][msg.sender] >= 0 && allowance_SpaghettiToken[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(SpaghettiToken.transferFrom(from, to, value), return == true && balanceOf_SpaghettiToken[this][from] == old(balanceOf_SpaghettiToken[this][from]) - value && balanceOf_SpaghettiToken[this][to] == old(balanceOf_SpaghettiToken[this][to]) + value && allowance_SpaghettiToken[this][from][msg.sender] == old(allowance_SpaghettiToken[this][from][msg.sender]) - value && totalSupply_SpaghettiToken[this] == old(totalSupply_SpaghettiToken[this]) && balanceOf_SpaghettiToken[this][p1] == old(balanceOf_SpaghettiToken[this][p1]) && allowance_SpaghettiToken[this][p2][p3] == old(allowance_SpaghettiToken[this][p2][p3]) && symbol_SpaghettiToken[this] == old(symbol_SpaghettiToken[this]) && decimals_SpaghettiToken[this] == old(decimals_SpaghettiToken[this]) && name_SpaghettiToken[this] == old(name_SpaghettiToken[this]))))
[2020-11-24 16:12:36,313 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(SpaghettiToken.transferFrom(from, to, value), p1 != from && p1 != to && (p2 != from || p3 != msg.sender) && from != to && value <= balanceOf_SpaghettiToken[this][from] && value <= allowance_SpaghettiToken[this][from][msg.sender] && balanceOf_SpaghettiToken[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_SpaghettiToken[this][to] >= 0 && balanceOf_SpaghettiToken[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_SpaghettiToken[this][from] >= 0 &&  balanceOf_SpaghettiToken[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && allowance_SpaghettiToken[this][from][msg.sender] >= 0 && allowance_SpaghettiToken[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(SpaghettiToken.transferFrom(from, to, value), return == true && balanceOf_SpaghettiToken[this][from] == old(balanceOf_SpaghettiToken[this][from]) - value && balanceOf_SpaghettiToken[this][to] == old(balanceOf_SpaghettiToken[this][to]) + value && allowance_SpaghettiToken[this][from][msg.sender] == old(allowance_SpaghettiToken[this][from][msg.sender]) - value && totalSupply_SpaghettiToken[this] == old(totalSupply_SpaghettiToken[this]) && balanceOf_SpaghettiToken[this][p1] == old(balanceOf_SpaghettiToken[this][p1]) && allowance_SpaghettiToken[this][p2][p3] == old(allowance_SpaghettiToken[this][p2][p3]) && symbol_SpaghettiToken[this] == old(symbol_SpaghettiToken[this]) && decimals_SpaghettiToken[this] == old(decimals_SpaghettiToken[this]) && name_SpaghettiToken[this] == old(name_SpaghettiToken[this]))))
[2020-11-24 16:12:36,320 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( ( ( ( ( ( ( p1!=src_s309 && p1!=dst_s309 ) && ( p2!=src_s309 || p3!=msg.sender ) ) && src_s309!=dst_s309 ) && wad_s309<=balanceOf_SpaghettiToken[this][src_s309] ) && wad_s309<=allowance_SpaghettiToken[this][src_s309][msg.sender] ) && ( balanceOf_SpaghettiToken[this][dst_s309] + wad_s309 )<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && wad_s309>=0 ) && wad_s309<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && balanceOf_SpaghettiToken[this][dst_s309]>=0 ) && balanceOf_SpaghettiToken[this][dst_s309]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && balanceOf_SpaghettiToken[this][src_s309]>=0 ) && balanceOf_SpaghettiToken[this][src_s309]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && allowance_SpaghettiToken[this][src_s309][msg.sender]>=0 ) && allowance_SpaghettiToken[this][src_s309][msg.sender]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPNEQ,IdentifierExpression[p1,GLOBAL],IdentifierExpression[src_s309,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_SpaghettiToken>]],BinaryExpression[COMPNEQ,IdentifierExpression[p1,GLOBAL],IdentifierExpression[dst_s309,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_SpaghettiToken>]]],BinaryExpression[LOGICOR,BinaryExpression[COMPNEQ,IdentifierExpression[p2,GLOBAL],IdentifierExpression[src_s309,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_SpaghettiToken>]],BinaryExpression[COMPNEQ,IdentifierExpression[p3,GLOBAL],IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_SpaghettiToken>]]]],BinaryExpression[COMPNEQ,IdentifierExpression[src_s309,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_SpaghettiToken>],IdentifierExpression[dst_s309,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_SpaghettiToken>]]],BinaryExpression[COMPLEQ,IdentifierExpression[wad_s309,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_SpaghettiToken>],ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_SpaghettiToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_SpaghettiToken>]]],[IdentifierExpression[src_s309,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_SpaghettiToken>]]]]],BinaryExpression[COMPLEQ,IdentifierExpression[wad_s309,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_SpaghettiToken>],ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowance_SpaghettiToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_SpaghettiToken>]]],[IdentifierExpression[src_s309,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_SpaghettiToken>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_SpaghettiToken>]]]]],BinaryExpression[COMPLT,BinaryExpression[ARITHPLUS,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_SpaghettiToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_SpaghettiToken>]]],[IdentifierExpression[dst_s309,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_SpaghettiToken>]]],IdentifierExpression[wad_s309,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_SpaghettiToken>]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,IdentifierExpression[wad_s309,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_SpaghettiToken>],IntegerLiteral[0]]],BinaryExpression[COMPLT,IdentifierExpression[wad_s309,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_SpaghettiToken>],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_SpaghettiToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_SpaghettiToken>]]],[IdentifierExpression[dst_s309,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_SpaghettiToken>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_SpaghettiToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_SpaghettiToken>]]],[IdentifierExpression[dst_s309,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_SpaghettiToken>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_SpaghettiToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_SpaghettiToken>]]],[IdentifierExpression[src_s309,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_SpaghettiToken>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_SpaghettiToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_SpaghettiToken>]]],[IdentifierExpression[src_s309,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_SpaghettiToken>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowance_SpaghettiToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_SpaghettiToken>]]],[IdentifierExpression[src_s309,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_SpaghettiToken>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_SpaghettiToken>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowance_SpaghettiToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_SpaghettiToken>]]],[IdentifierExpression[src_s309,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_SpaghettiToken>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_SpaghettiToken>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]]
[2020-11-24 16:12:36,323 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( ( __ret_0_==true && balanceOf_SpaghettiToken[this][src_s309]==( ( old(balanceOf_SpaghettiToken[this][src_s309]) ) - wad_s309 ) ) && balanceOf_SpaghettiToken[this][dst_s309]==( ( old(balanceOf_SpaghettiToken[this][dst_s309]) ) + wad_s309 ) ) && allowance_SpaghettiToken[this][src_s309][msg.sender]==( ( old(allowance_SpaghettiToken[this][src_s309][msg.sender]) ) - wad_s309 ) ) && totalSupply_SpaghettiToken[this]==( old(totalSupply_SpaghettiToken[this]) ) ) && balanceOf_SpaghettiToken[this][p1]==( old(balanceOf_SpaghettiToken[this][p1]) ) ) && allowance_SpaghettiToken[this][p2][p3]==( old(allowance_SpaghettiToken[this][p2][p3]) ) ) && symbol_SpaghettiToken[this]==( old(symbol_SpaghettiToken[this]) ) ) && decimals_SpaghettiToken[this]==( old(decimals_SpaghettiToken[this]) ) ) && name_SpaghettiToken[this]==( old(name_SpaghettiToken[this]) ) ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[__ret_0_,<IMPLEMENTATION_OUTPARAM,transferFrom~address~address~uint256_SpaghettiToken>],BooleanLiteral[true]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_SpaghettiToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_SpaghettiToken>]]],[IdentifierExpression[src_s309,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_SpaghettiToken>]]],BinaryExpression[ARITHMINUS,UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_SpaghettiToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_SpaghettiToken>]]],[IdentifierExpression[src_s309,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_SpaghettiToken>]]]],IdentifierExpression[wad_s309,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_SpaghettiToken>]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_SpaghettiToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_SpaghettiToken>]]],[IdentifierExpression[dst_s309,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_SpaghettiToken>]]],BinaryExpression[ARITHPLUS,UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_SpaghettiToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_SpaghettiToken>]]],[IdentifierExpression[dst_s309,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_SpaghettiToken>]]]],IdentifierExpression[wad_s309,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_SpaghettiToken>]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowance_SpaghettiToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_SpaghettiToken>]]],[IdentifierExpression[src_s309,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_SpaghettiToken>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_SpaghettiToken>]]],BinaryExpression[ARITHMINUS,UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowance_SpaghettiToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_SpaghettiToken>]]],[IdentifierExpression[src_s309,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_SpaghettiToken>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_SpaghettiToken>]]]],IdentifierExpression[wad_s309,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_SpaghettiToken>]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[totalSupply_SpaghettiToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_SpaghettiToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[totalSupply_SpaghettiToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_SpaghettiToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_SpaghettiToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_SpaghettiToken>]]],[IdentifierExpression[p1,GLOBAL]]],UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_SpaghettiToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_SpaghettiToken>]]],[IdentifierExpression[p1,GLOBAL]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowance_SpaghettiToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_SpaghettiToken>]]],[IdentifierExpression[p2,GLOBAL]]],[IdentifierExpression[p3,GLOBAL]]],UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowance_SpaghettiToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_SpaghettiToken>]]],[IdentifierExpression[p2,GLOBAL]]],[IdentifierExpression[p3,GLOBAL]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[symbol_SpaghettiToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_SpaghettiToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[symbol_SpaghettiToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_SpaghettiToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[decimals_SpaghettiToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_SpaghettiToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[decimals_SpaghettiToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_SpaghettiToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[name_SpaghettiToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_SpaghettiToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[name_SpaghettiToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_SpaghettiToken>]]]]]]
[2020-11-24 16:12:36,325 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(SpaghettiToken.transferFrom(from, to, value), p1 != from && p1 != to && (p2 != from || p3 != msg.sender) && from != to && value <= balanceOf_SpaghettiToken[this][from] && value <= allowance_SpaghettiToken[this][from][msg.sender] && balanceOf_SpaghettiToken[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_SpaghettiToken[this][to] >= 0 && balanceOf_SpaghettiToken[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_SpaghettiToken[this][from] >= 0 &&  balanceOf_SpaghettiToken[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && allowance_SpaghettiToken[this][from][msg.sender] >= 0 && allowance_SpaghettiToken[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(SpaghettiToken.transferFrom(from, to, value), return == true && balanceOf_SpaghettiToken[this][from] == old(balanceOf_SpaghettiToken[this][from]) - value && balanceOf_SpaghettiToken[this][to] == old(balanceOf_SpaghettiToken[this][to]) + value && allowance_SpaghettiToken[this][from][msg.sender] == old(allowance_SpaghettiToken[this][from][msg.sender]) - value && totalSupply_SpaghettiToken[this] == old(totalSupply_SpaghettiToken[this]) && balanceOf_SpaghettiToken[this][p1] == old(balanceOf_SpaghettiToken[this][p1]) && allowance_SpaghettiToken[this][p2][p3] == old(allowance_SpaghettiToken[this][p2][p3]) && symbol_SpaghettiToken[this] == old(symbol_SpaghettiToken[this]) && decimals_SpaghettiToken[this] == old(decimals_SpaghettiToken[this]) && name_SpaghettiToken[this] == old(name_SpaghettiToken[this]))))
[2020-11-24 16:12:36,326 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_transferFrom_SpaghettiToken0) ==> ( <>AP(success_transferFrom_SpaghettiToken0) ) ) )
Executed UtopiaSpecLang
[2020-11-24 16:12:36,330 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 04:12:36 PropertyContainer
[2020-11-24 16:12:36,330 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-24 16:12:36,330 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-24 16:12:36,331 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-24 16:12:36,331 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-24 16:12:36,332 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "SpaghettiToken_0x08a2e41fb99a7599725190b9c970ad3893fa33cf_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 04:12:36" (1/2) ...
[2020-11-24 16:12:36,332 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-24 16:12:36,332 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-24 16:12:36,342 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 04:12:36" (2/2) ...
[2020-11-24 16:12:36,342 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-24 16:12:36,343 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-24 16:12:36,343 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-24 16:12:36,343 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-24 16:12:36,344 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "SpaghettiToken_0x08a2e41fb99a7599725190b9c970ad3893fa33cf_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 04:12:36" (1/2) ...
[2020-11-24 16:12:36,402 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-24 16:12:36,402 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_DSMath__success
[2020-11-24 16:12:36,402 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_DSMath__success
[2020-11-24 16:12:36,402 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address_SpaghettiToken
[2020-11-24 16:12:36,402 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address_SpaghettiToken
[2020-11-24 16:12:36,402 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_SpaghettiToken
[2020-11-24 16:12:36,403 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_SpaghettiToken
[2020-11-24 16:12:36,403 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_SpaghettiToken
[2020-11-24 16:12:36,403 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_SpaghettiToken
[2020-11-24 16:12:36,403 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_SpaghettiToken
[2020-11-24 16:12:36,403 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_SpaghettiToken
[2020-11-24 16:12:36,403 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_SpaghettiToken__success
[2020-11-24 16:12:36,403 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_SpaghettiToken
[2020-11-24 16:12:36,403 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_SpaghettiToken
[2020-11-24 16:12:36,403 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_SpaghettiToken
[2020-11-24 16:12:36,403 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_SpaghettiToken
[2020-11-24 16:12:36,404 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_SpaghettiToken
[2020-11-24 16:12:36,404 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_SpaghettiToken
[2020-11-24 16:12:36,404 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-24 16:12:36,404 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-24 16:12:36,404 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-24 16:12:36,404 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_DSMath
[2020-11-24 16:12:36,404 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_DSMath
[2020-11-24 16:12:36,404 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_SpaghettiToken
[2020-11-24 16:12:36,404 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-24 16:12:36,404 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-24 16:12:36,405 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_DSMath__fail
[2020-11-24 16:12:36,405 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_DSMath__fail
[2020-11-24 16:12:36,405 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address_SpaghettiToken__success
[2020-11-24 16:12:36,405 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address_SpaghettiToken__fail
[2020-11-24 16:12:36,405 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_SpaghettiToken__success
[2020-11-24 16:12:36,405 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_SpaghettiToken__fail
[2020-11-24 16:12:36,405 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_SpaghettiToken__success
[2020-11-24 16:12:36,405 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_SpaghettiToken__fail
[2020-11-24 16:12:36,405 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_SpaghettiToken__success
[2020-11-24 16:12:36,405 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_SpaghettiToken__fail
[2020-11-24 16:12:36,405 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_SpaghettiToken__fail
[2020-11-24 16:12:36,405 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_SpaghettiToken__success
[2020-11-24 16:12:36,405 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_SpaghettiToken__fail
[2020-11-24 16:12:36,406 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_SpaghettiToken__success
[2020-11-24 16:12:36,406 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_SpaghettiToken__fail
[2020-11-24 16:12:36,406 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_SpaghettiToken__success
[2020-11-24 16:12:36,406 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_SpaghettiToken__fail
[2020-11-24 16:12:36,406 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-24 16:12:36,406 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-24 16:12:36,406 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-24 16:12:36,406 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-24 16:12:36,406 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-24 16:12:36,406 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_DSMath__fail
[2020-11-24 16:12:36,406 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_DSMath__success
[2020-11-24 16:12:36,407 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_DSMath__fail
[2020-11-24 16:12:36,407 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_DSMath__success
[2020-11-24 16:12:36,407 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address_SpaghettiToken__fail
[2020-11-24 16:12:36,407 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address_SpaghettiToken__success
[2020-11-24 16:12:36,407 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_SpaghettiToken__fail
[2020-11-24 16:12:36,407 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_SpaghettiToken__success
[2020-11-24 16:12:36,407 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_SpaghettiToken__fail
[2020-11-24 16:12:36,407 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_SpaghettiToken__success
[2020-11-24 16:12:36,407 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_SpaghettiToken__fail
[2020-11-24 16:12:36,407 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_SpaghettiToken__success
[2020-11-24 16:12:36,407 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_SpaghettiToken__fail
[2020-11-24 16:12:36,407 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_SpaghettiToken__success
[2020-11-24 16:12:36,407 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_SpaghettiToken__fail
[2020-11-24 16:12:36,408 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_SpaghettiToken__success
[2020-11-24 16:12:36,408 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_SpaghettiToken__fail
[2020-11-24 16:12:36,408 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_SpaghettiToken__success
[2020-11-24 16:12:36,408 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_SpaghettiToken__fail
[2020-11-24 16:12:36,408 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_SpaghettiToken__success
[2020-11-24 16:12:36,408 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-24 16:12:36,408 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-24 16:12:36,408 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-24 16:12:36,408 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-24 16:12:36,408 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-24 16:12:36,408 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-24 16:12:36,408 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_DSMath
[2020-11-24 16:12:36,409 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_DSMath
[2020-11-24 16:12:36,409 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_SpaghettiToken
[2020-11-24 16:12:36,409 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-24 16:12:36,409 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-24 16:12:36,409 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-24 16:12:36,575 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 16:12:36,801 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 16:12:36,802 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 16:12:36,802 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 16:12:36,844 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-24 16:12:36,845 INFO  L286             CfgBuilder]: Removed 2 assue(true) statements.
[2020-11-24 16:12:36,846 INFO  L202        PluginConnector]: Adding new model SpaghettiToken_0x08a2e41fb99a7599725190b9c970ad3893fa33cf_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 04:12:36 BoogieIcfgContainer
[2020-11-24 16:12:36,846 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 04:12:36" (2/2) ...
[2020-11-24 16:12:36,846 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-24 16:12:36,847 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@220a8bf2 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 04:12:36, skipping insertion in model container
[2020-11-24 16:12:36,847 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-24 16:12:36,847 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-24 16:12:36,847 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-24 16:12:36,849 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-24 16:12:36,849 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "SpaghettiToken_0x08a2e41fb99a7599725190b9c970ad3893fa33cf_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 04:12:36" (1/3) ...
[2020-11-24 16:12:36,849 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@718bfb76 and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 04:12:36, skipping insertion in model container
[2020-11-24 16:12:36,850 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 04:12:36" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-24 16:12:36,886 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 04:12:36 NWAContainer
[2020-11-24 16:12:36,886 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-24 16:12:36,886 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-24 16:12:36,886 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-24 16:12:36,887 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-24 16:12:36,888 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "SpaghettiToken_0x08a2e41fb99a7599725190b9c970ad3893fa33cf_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 04:12:36" (3/4) ...
[2020-11-24 16:12:36,888 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@6a0323c2 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 04:12:36, skipping insertion in model container
[2020-11-24 16:12:36,889 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 04:12:36" (4/4) ...
[2020-11-24 16:12:36,892 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-24 16:12:36,894 INFO  L110   BuchiProductObserver]: Initial RCFG 530 locations, 671 edges
[2020-11-24 16:12:36,895 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-24 16:12:36,905 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-24 16:12:37,692 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-24 16:12:37,694 INFO  L110   BuchiProductObserver]: BuchiProgram size 1256 locations, 2162 edges
[2020-11-24 16:12:37,695 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 04:12:37 BoogieIcfgContainer
[2020-11-24 16:12:37,695 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-24 16:12:37,695 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-24 16:12:37,695 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-24 16:12:37,697 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-24 16:12:37,698 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 04:12:37" (1/1) ...
[2020-11-24 16:12:37,738 INFO  L313           BlockEncoder]: Initial Icfg 1256 locations, 2162 edges
[2020-11-24 16:12:37,738 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-24 16:12:37,739 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-24 16:12:37,739 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-24 16:12:37,740 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-24 16:12:37,747 INFO  L70    emoveInfeasibleEdges]: Removed 57 edges and 7 locations because of local infeasibility
[2020-11-24 16:12:37,751 INFO  L70        RemoveSinkStates]: Removed 32 edges and 21 locations by removing sink states
[2020-11-24 16:12:37,756 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-24 16:12:37,758 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-24 16:12:37,760 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-24 16:12:37,760 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-24 16:12:37,762 INFO  L313           BlockEncoder]: Encoded RCFG 1218 locations, 2059 edges
[2020-11-24 16:12:37,762 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 24.11 04:12:37 BasicIcfg
[2020-11-24 16:12:37,763 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-24 16:12:37,763 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-24 16:12:37,763 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-24 16:12:37,765 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-24 16:12:37,766 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 16:12:37,766 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "SpaghettiToken_0x08a2e41fb99a7599725190b9c970ad3893fa33cf_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 04:12:36" (1/6) ...
[2020-11-24 16:12:37,767 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@62db64b8 and model type SpaghettiToken_0x08a2e41fb99a7599725190b9c970ad3893fa33cf_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 24.11 04:12:37, skipping insertion in model container
[2020-11-24 16:12:37,767 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 16:12:37,768 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 04:12:36" (2/6) ...
[2020-11-24 16:12:37,768 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@62db64b8 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 24.11 04:12:37, skipping insertion in model container
[2020-11-24 16:12:37,768 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 16:12:37,768 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "SpaghettiToken_0x08a2e41fb99a7599725190b9c970ad3893fa33cf_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 04:12:36" (3/6) ...
[2020-11-24 16:12:37,768 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@62db64b8 and model type SpaghettiToken_0x08a2e41fb99a7599725190b9c970ad3893fa33cf_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 24.11 04:12:37, skipping insertion in model container
[2020-11-24 16:12:37,768 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 16:12:37,769 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 04:12:36" (4/6) ...
[2020-11-24 16:12:37,769 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@62db64b8 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 24.11 04:12:37, skipping insertion in model container
[2020-11-24 16:12:37,769 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 16:12:37,769 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 04:12:37" (5/6) ...
[2020-11-24 16:12:37,769 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@62db64b8 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 24.11 04:12:37, skipping insertion in model container
[2020-11-24 16:12:37,769 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 16:12:37,770 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 24.11 04:12:37" (6/6) ...
[2020-11-24 16:12:37,771 INFO  L404   chiAutomizerObserver]: Analyzing ICFG SpaghettiToken_0x08a2e41fb99a7599725190b9c970ad3893fa33cf_transferfrom-normal.bpl_BEv2
[2020-11-24 16:12:37,807 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-24 16:12:37,808 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-24 16:12:37,808 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-24 16:12:37,808 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-24 16:12:37,808 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-24 16:12:37,808 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-24 16:12:37,808 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-24 16:12:37,808 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-24 16:12:37,808 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-24 16:12:37,824 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1218 states.
[2020-11-24 16:12:37,862 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 16:12:37,862 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 16:12:37,862 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 16:12:37,871 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 16:12:37,871 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
[2020-11-24 16:12:37,871 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-24 16:12:37,871 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1218 states.
[2020-11-24 16:12:37,881 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 16:12:37,881 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 16:12:37,881 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 16:12:37,882 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 16:12:37,882 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L3]                 success_transferFrom_SpaghettiToken0 := false;
[L3]                 call_transferFrom_SpaghettiToken0 := false;
[L3]     CALL        call main();
[L3]                 havoc p3;
[L3]                 havoc p2;
[L3]                 havoc p1;
[L1461]              assume null == 0;
[L1462]  CALL        call this := FreshRefGenerator__success();
[L640]               havoc newRef;
[L641]               assume Alloc[newRef] == false;
[L642]               Alloc[newRef] := true;
[L643]               assume newRef != null;
[L1462]  RET         call this := FreshRefGenerator__success();
[L1463]              assume now >= 0;
[L1464]              assume DType[this] == SpaghettiToken;
[L1465]              assume !revert && gas >= 0;
[L1466]  CALL        call CorralChoice_SpaghettiToken(this);
[L1376]              havoc msgsender_MSG;
[L1377]              havoc msgvalue_MSG;
[L1378]              havoc choice;
[L1379]              havoc __ret_0_totalSupply;
[L1380]              havoc arg329_s0;
[L1381]              havoc __ret_0_balanceOf;
[L1382]              havoc arg330_s0;
[L1383]              havoc arg331_s0;
[L1384]              havoc __ret_0_allowance;
[L1385]              havoc __ret_0_symbol;
[L1386]              havoc __ret_0_decimals;
[L1387]              havoc __ret_0_name;
[L1388]              havoc chef_s113;
[L1389]              havoc guy_s149;
[L1390]              havoc __ret_0_approve;
[L1391]              havoc guy_s177;
[L1392]              havoc wad_s177;
[L1393]              havoc dst_s194;
[L1394]              havoc wad_s194;
[L1395]              havoc __ret_0_transfer;
[L1396]              havoc src_s309;
[L1397]              havoc dst_s309;
[L1398]              havoc wad_s309;
[L1399]              havoc __ret_0_transferFrom;
[L1400]              havoc tmpNow;
[L1401]              havoc gas;
[L1402]              assume gas > 4000000 && gas <= 8000000;
[L1403]              tmpNow := now;
[L1404]              havoc now;
[L1405]              assume now > tmpNow;
[L1406]              assume msgsender_MSG != null;
[L1407]  COND TRUE   choice == 7
[L1408]              gas := gas - 21000;
[L1409]  COND FALSE  !(gas >= 0)
[L1466]  RET         call CorralChoice_SpaghettiToken(this);

Loop:
[L1466]        assume true;

[2020-11-24 16:12:37,898 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 16:12:37,898 INFO  L82        PathProgramCache]: Analyzing trace with hash 1206812155, now seen corresponding path program 1 times
[2020-11-24 16:12:37,903 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 16:12:37,928 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 16:12:37,982 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 16:12:37,984 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 16:12:37,985 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [5] imperfect sequences [] total 5
[2020-11-24 16:12:37,993 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 16:12:38,006 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 5 interpolants.
[2020-11-24 16:12:38,007 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=9, Invalid=11, Unknown=0, NotChecked=0, Total=20
[2020-11-24 16:12:38,008 INFO  L87              Difference]: Start difference. First operand 1218 states. Second operand 5 states.
[2020-11-24 16:12:38,272 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 16:12:38,273 INFO  L93              Difference]: Finished difference Result 684 states and 773 transitions.
[2020-11-24 16:12:38,273 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-24 16:12:38,274 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 684 states and 773 transitions.
[2020-11-24 16:12:38,281 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 16:12:38,287 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 684 states to 236 states and 265 transitions.
[2020-11-24 16:12:38,288 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 4
[2020-11-24 16:12:38,288 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 112
[2020-11-24 16:12:38,289 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 236 states and 265 transitions.
[2020-11-24 16:12:38,291 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 16:12:38,291 INFO  L728         BuchiCegarLoop]: Abstraction has 236 states and 265 transitions.
[2020-11-24 16:12:38,306 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 236 states and 265 transitions.
[2020-11-24 16:12:38,321 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 236 to 236.
[2020-11-24 16:12:38,321 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 236 states.
[2020-11-24 16:12:38,322 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 236 states to 236 states and 265 transitions.
[2020-11-24 16:12:38,323 INFO  L751         BuchiCegarLoop]: Abstraction has 236 states and 265 transitions.
[2020-11-24 16:12:38,323 INFO  L631         BuchiCegarLoop]: Abstraction has 236 states and 265 transitions.
[2020-11-24 16:12:38,323 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-24 16:12:38,323 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 236 states and 265 transitions.
[2020-11-24 16:12:38,325 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 16:12:38,325 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 16:12:38,325 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 16:12:38,326 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 16:12:38,326 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L3]                 success_transferFrom_SpaghettiToken0 := false;
[L3]                 call_transferFrom_SpaghettiToken0 := false;
[L3]     CALL        call main();
[L3]                 havoc p3;
[L3]                 havoc p2;
[L3]                 havoc p1;
[L1461]              assume null == 0;
[L1462]  CALL        call this := FreshRefGenerator__success();
[L640]               havoc newRef;
[L641]               assume Alloc[newRef] == false;
[L642]               Alloc[newRef] := true;
[L643]               assume newRef != null;
[L1462]  RET         call this := FreshRefGenerator__success();
[L1463]              assume now >= 0;
[L1464]              assume DType[this] == SpaghettiToken;
[L1465]              assume !revert && gas >= 0;
[L1466]  CALL        call CorralChoice_SpaghettiToken(this);
[L1376]              havoc msgsender_MSG;
[L1377]              havoc msgvalue_MSG;
[L1378]              havoc choice;
[L1379]              havoc __ret_0_totalSupply;
[L1380]              havoc arg329_s0;
[L1381]              havoc __ret_0_balanceOf;
[L1382]              havoc arg330_s0;
[L1383]              havoc arg331_s0;
[L1384]              havoc __ret_0_allowance;
[L1385]              havoc __ret_0_symbol;
[L1386]              havoc __ret_0_decimals;
[L1387]              havoc __ret_0_name;
[L1388]              havoc chef_s113;
[L1389]              havoc guy_s149;
[L1390]              havoc __ret_0_approve;
[L1391]              havoc guy_s177;
[L1392]              havoc wad_s177;
[L1393]              havoc dst_s194;
[L1394]              havoc wad_s194;
[L1395]              havoc __ret_0_transfer;
[L1396]              havoc src_s309;
[L1397]              havoc dst_s309;
[L1398]              havoc wad_s309;
[L1399]              havoc __ret_0_transferFrom;
[L1400]              havoc tmpNow;
[L1401]              havoc gas;
[L1402]              assume gas > 4000000 && gas <= 8000000;
[L1403]              tmpNow := now;
[L1404]              havoc now;
[L1405]              assume now > tmpNow;
[L1406]              assume msgsender_MSG != null;
[L1407]  COND FALSE  !(choice == 7)
[L1413]  COND FALSE  !(choice == 6)
[L1419]  COND FALSE  !(choice == 5)
[L1425]  COND FALSE  !(choice == 4)
[L1431]  COND FALSE  !(choice == 3)
[L1438]  COND FALSE  !(choice == 2)
[L1445]  COND TRUE   choice == 1
[L1446]              gas := gas - 21000;
[L1447]  COND TRUE   gas >= 0
[L1448]              assume wad_s309 >= 0 && wad_s309 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1449]              assume msgvalue_MSG == 0;
[L1450]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_SpaghettiToken(this, msgsender_MSG, msgvalue_MSG, src_s309, dst_s309, wad_s309);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != src_s309 && p1 != dst_s309) && (p2 != src_s309 || p3 != msgsender_MSG)) && src_s309 != dst_s309) && wad_s309 <= balanceOf_SpaghettiToken[this][src_s309]) && wad_s309 <= allowance_SpaghettiToken[this][src_s309][msgsender_MSG]) && balanceOf_SpaghettiToken[this][dst_s309] + wad_s309 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && wad_s309 >= 0) && wad_s309 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_SpaghettiToken[this][dst_s309] >= 0) && balanceOf_SpaghettiToken[this][dst_s309] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_SpaghettiToken[this][src_s309] >= 0) && balanceOf_SpaghettiToken[this][src_s309] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowance_SpaghettiToken[this][src_s309][msgsender_MSG] >= 0) && allowance_SpaghettiToken[this][src_s309][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_SpaghettiToken0 := true;
[L3]                 call_transferFrom_SpaghettiToken0 := false;
[L3]                 revert := revert_hold;
[L235]               havoc __exception;
[L236]               revert := false;
[L237]   COND FALSE  !(__exception)
[L258]   CALL        call __ret_0_ := transferFrom~address~address~uint256_SpaghettiToken__success(this, msgsender_MSG, msgvalue_MSG, src_s309, dst_s309, wad_s309);
[L827]               __var_4 := -1 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L828]   COND TRUE   src_s309 != msgsender_MSG && allowance_SpaghettiToken[this][src_s309][msgsender_MSG] != -1 % 115792089237316195423570985008687907853269984665640564039457584007913129639936
[L829]   COND TRUE   !(allowance_SpaghettiToken[this][src_s309][msgsender_MSG] >= wad_s309)
[L830]               revert := true;
[L258]   RET         call __ret_0_ := transferFrom~address~address~uint256_SpaghettiToken__success(this, msgsender_MSG, msgvalue_MSG, src_s309, dst_s309, wad_s309);
[L259]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((((__ret_0_ == true && balanceOf_SpaghettiToken[this][src_s309] == old(balanceOf_SpaghettiToken[this][src_s309]) - wad_s309) && balanceOf_SpaghettiToken[this][dst_s309] == old(balanceOf_SpaghettiToken[this][dst_s309]) + wad_s309) && allowance_SpaghettiToken[this][src_s309][msgsender_MSG] == old(allowance_SpaghettiToken[this][src_s309][msgsender_MSG]) - wad_s309) && totalSupply_SpaghettiToken[this] == old(totalSupply_SpaghettiToken[this])) && balanceOf_SpaghettiToken[this][p1] == old(balanceOf_SpaghettiToken[this][p1])) && allowance_SpaghettiToken[this][p2][p3] == old(allowance_SpaghettiToken[this][p2][p3])) && symbol_SpaghettiToken[this] == old(symbol_SpaghettiToken[this])) && decimals_SpaghettiToken[this] == old(decimals_SpaghettiToken[this])) && name_SpaghettiToken[this] == old(name_SpaghettiToken[this]));
[L3]                 revert := revert_hold;
[L1450]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_SpaghettiToken(this, msgsender_MSG, msgvalue_MSG, src_s309, dst_s309, wad_s309);
[L1466]  RET         call CorralChoice_SpaghettiToken(this);

Loop:
[L1466]        assume true;

[2020-11-24 16:12:38,329 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 16:12:38,329 INFO  L82        PathProgramCache]: Analyzing trace with hash -913756850, now seen corresponding path program 1 times
[2020-11-24 16:12:38,330 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 16:12:38,341 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 16:12:38,356 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 16:12:38,357 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 16:12:38,357 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-24 16:12:38,358 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 16:12:38,358 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-24 16:12:38,358 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-24 16:12:38,359 INFO  L87              Difference]: Start difference. First operand 236 states and 265 transitions. cyclomatic complexity: 30 Second operand 3 states.
[2020-11-24 16:12:38,370 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 16:12:38,370 INFO  L93              Difference]: Finished difference Result 287 states and 321 transitions.
[2020-11-24 16:12:38,370 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-24 16:12:38,370 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 287 states and 321 transitions.
[2020-11-24 16:12:38,372 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 2
[2020-11-24 16:12:38,374 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 287 states to 261 states and 283 transitions.
[2020-11-24 16:12:38,374 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 127
[2020-11-24 16:12:38,375 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 141
[2020-11-24 16:12:38,375 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 261 states and 283 transitions.
[2020-11-24 16:12:38,376 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 16:12:38,376 INFO  L728         BuchiCegarLoop]: Abstraction has 261 states and 283 transitions.
[2020-11-24 16:12:38,376 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 261 states and 283 transitions.
[2020-11-24 16:12:38,382 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 261 to 250.
[2020-11-24 16:12:38,382 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 250 states.
[2020-11-24 16:12:38,383 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 250 states to 250 states and 272 transitions.
[2020-11-24 16:12:38,383 INFO  L751         BuchiCegarLoop]: Abstraction has 250 states and 272 transitions.
[2020-11-24 16:12:38,383 INFO  L631         BuchiCegarLoop]: Abstraction has 250 states and 272 transitions.
[2020-11-24 16:12:38,383 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-24 16:12:38,383 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 250 states and 272 transitions.
[2020-11-24 16:12:38,385 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 16:12:38,385 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 16:12:38,385 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 16:12:38,386 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 16:12:38,386 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L3]                 success_transferFrom_SpaghettiToken0 := false;
[L3]                 call_transferFrom_SpaghettiToken0 := false;
[L3]     CALL        call main();
[L3]                 havoc p3;
[L3]                 havoc p2;
[L3]                 havoc p1;
[L1461]              assume null == 0;
[L1462]  CALL        call this := FreshRefGenerator__success();
[L640]               havoc newRef;
[L641]               assume Alloc[newRef] == false;
[L642]               Alloc[newRef] := true;
[L643]               assume newRef != null;
[L1462]  RET         call this := FreshRefGenerator__success();
[L1463]              assume now >= 0;
[L1464]              assume DType[this] == SpaghettiToken;
[L1465]              assume !revert && gas >= 0;
[L1466]  CALL        call CorralChoice_SpaghettiToken(this);
[L1376]              havoc msgsender_MSG;
[L1377]              havoc msgvalue_MSG;
[L1378]              havoc choice;
[L1379]              havoc __ret_0_totalSupply;
[L1380]              havoc arg329_s0;
[L1381]              havoc __ret_0_balanceOf;
[L1382]              havoc arg330_s0;
[L1383]              havoc arg331_s0;
[L1384]              havoc __ret_0_allowance;
[L1385]              havoc __ret_0_symbol;
[L1386]              havoc __ret_0_decimals;
[L1387]              havoc __ret_0_name;
[L1388]              havoc chef_s113;
[L1389]              havoc guy_s149;
[L1390]              havoc __ret_0_approve;
[L1391]              havoc guy_s177;
[L1392]              havoc wad_s177;
[L1393]              havoc dst_s194;
[L1394]              havoc wad_s194;
[L1395]              havoc __ret_0_transfer;
[L1396]              havoc src_s309;
[L1397]              havoc dst_s309;
[L1398]              havoc wad_s309;
[L1399]              havoc __ret_0_transferFrom;
[L1400]              havoc tmpNow;
[L1401]              havoc gas;
[L1402]              assume gas > 4000000 && gas <= 8000000;
[L1403]              tmpNow := now;
[L1404]              havoc now;
[L1405]              assume now > tmpNow;
[L1406]              assume msgsender_MSG != null;
[L1407]  COND FALSE  !(choice == 7)
[L1413]  COND FALSE  !(choice == 6)
[L1419]  COND FALSE  !(choice == 5)
[L1425]  COND FALSE  !(choice == 4)
[L1431]  COND FALSE  !(choice == 3)
[L1438]  COND FALSE  !(choice == 2)
[L1445]  COND TRUE   choice == 1
[L1446]              gas := gas - 21000;
[L1447]  COND TRUE   gas >= 0
[L1448]              assume wad_s309 >= 0 && wad_s309 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1449]              assume msgvalue_MSG == 0;
[L1450]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_SpaghettiToken(this, msgsender_MSG, msgvalue_MSG, src_s309, dst_s309, wad_s309);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != src_s309 && p1 != dst_s309) && (p2 != src_s309 || p3 != msgsender_MSG)) && src_s309 != dst_s309) && wad_s309 <= balanceOf_SpaghettiToken[this][src_s309]) && wad_s309 <= allowance_SpaghettiToken[this][src_s309][msgsender_MSG]) && balanceOf_SpaghettiToken[this][dst_s309] + wad_s309 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && wad_s309 >= 0) && wad_s309 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_SpaghettiToken[this][dst_s309] >= 0) && balanceOf_SpaghettiToken[this][dst_s309] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_SpaghettiToken[this][src_s309] >= 0) && balanceOf_SpaghettiToken[this][src_s309] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowance_SpaghettiToken[this][src_s309][msgsender_MSG] >= 0) && allowance_SpaghettiToken[this][src_s309][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_SpaghettiToken0 := true;
[L3]                 call_transferFrom_SpaghettiToken0 := false;
[L3]                 revert := revert_hold;
[L235]               havoc __exception;
[L236]               revert := false;
[L237]   COND TRUE   __exception
[L238]               __tmp__Balance := Balance;
[L239]               __tmp__DType := DType;
[L240]               __tmp__Alloc := Alloc;
[L241]               __tmp__balance_ADDR := balance_ADDR;
[L242]               __tmp__M_Ref_int := M_Ref_int;
[L243]               __tmp__sum_balanceOf0 := sum_balanceOf0;
[L244]               __tmp__alloc_allowance_SpaghettiToken_lvl0 := alloc_allowance_SpaghettiToken_lvl0;
[L245]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L246]               __tmp__sum_allowance1 := sum_allowance1;
[L247]               __tmp__Length := Length;
[L248]               __tmp__now := now;
[L249]               __tmp__totalSupply_SpaghettiToken := totalSupply_SpaghettiToken;
[L250]               __tmp__balanceOf_SpaghettiToken := balanceOf_SpaghettiToken;
[L251]               __tmp__allowance_SpaghettiToken := allowance_SpaghettiToken;
[L252]               __tmp__symbol_SpaghettiToken := symbol_SpaghettiToken;
[L253]               __tmp__decimals_SpaghettiToken := decimals_SpaghettiToken;
[L254]               __tmp__name_SpaghettiToken := name_SpaghettiToken;
[L255]   CALL        call __ret_0_ := transferFrom~address~address~uint256_SpaghettiToken__fail(this, msgsender_MSG, msgvalue_MSG, src_s309, dst_s309, wad_s309);
[L757]               __var_4 := -1 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L758]   COND TRUE   src_s309 != msgsender_MSG && __tmp__allowance_SpaghettiToken[this][src_s309][msgsender_MSG] != -1 % 115792089237316195423570985008687907853269984665640564039457584007913129639936
[L759]   COND TRUE   !(__tmp__allowance_SpaghettiToken[this][src_s309][msgsender_MSG] >= wad_s309)
[L760]               revert := true;
[L255]   RET         call __ret_0_ := transferFrom~address~address~uint256_SpaghettiToken__fail(this, msgsender_MSG, msgvalue_MSG, src_s309, dst_s309, wad_s309);
[L256]               assume revert || gas < 0;
[L1450]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_SpaghettiToken(this, msgsender_MSG, msgvalue_MSG, src_s309, dst_s309, wad_s309);
[L1466]  RET         call CorralChoice_SpaghettiToken(this);

Loop:
[L1466]        assume true;

[2020-11-24 16:12:38,388 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 16:12:38,388 INFO  L82        PathProgramCache]: Analyzing trace with hash 401238098, now seen corresponding path program 1 times
[2020-11-24 16:12:38,389 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 16:12:38,398 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 16:12:38,440 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 16:12:38,440 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 16:12:38,440 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [6] imperfect sequences [] total 6
[2020-11-24 16:12:38,441 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 16:12:38,441 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 6 interpolants.
[2020-11-24 16:12:38,441 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=9, Invalid=21, Unknown=0, NotChecked=0, Total=30
[2020-11-24 16:12:38,441 INFO  L87              Difference]: Start difference. First operand 250 states and 272 transitions. cyclomatic complexity: 23 Second operand 6 states.
[2020-11-24 16:12:38,557 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 16:12:38,557 INFO  L93              Difference]: Finished difference Result 299 states and 333 transitions.
[2020-11-24 16:12:38,557 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 7 states. 
[2020-11-24 16:12:38,557 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 299 states and 333 transitions.
[2020-11-24 16:12:38,560 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 2
[2020-11-24 16:12:38,562 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 299 states to 296 states and 330 transitions.
[2020-11-24 16:12:38,562 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 154
[2020-11-24 16:12:38,562 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 154
[2020-11-24 16:12:38,562 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 296 states and 330 transitions.
[2020-11-24 16:12:38,563 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 16:12:38,563 INFO  L728         BuchiCegarLoop]: Abstraction has 296 states and 330 transitions.
[2020-11-24 16:12:38,563 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 296 states and 330 transitions.
[2020-11-24 16:12:38,568 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 296 to 249.
[2020-11-24 16:12:38,568 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 249 states.
[2020-11-24 16:12:38,569 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 249 states to 249 states and 270 transitions.
[2020-11-24 16:12:38,569 INFO  L751         BuchiCegarLoop]: Abstraction has 249 states and 270 transitions.
[2020-11-24 16:12:38,569 INFO  L631         BuchiCegarLoop]: Abstraction has 249 states and 270 transitions.
[2020-11-24 16:12:38,569 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-24 16:12:38,570 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 249 states and 270 transitions.
[2020-11-24 16:12:38,571 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 16:12:38,571 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 16:12:38,571 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 16:12:38,572 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 16:12:38,572 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L3]                 success_transferFrom_SpaghettiToken0 := false;
[L3]                 call_transferFrom_SpaghettiToken0 := false;
[L3]     CALL        call main();
[L3]                 havoc p3;
[L3]                 havoc p2;
[L3]                 havoc p1;
[L1461]              assume null == 0;
[L1462]  CALL        call this := FreshRefGenerator__success();
[L640]               havoc newRef;
[L641]               assume Alloc[newRef] == false;
[L642]               Alloc[newRef] := true;
[L643]               assume newRef != null;
[L1462]  RET         call this := FreshRefGenerator__success();
[L1463]              assume now >= 0;
[L1464]              assume DType[this] == SpaghettiToken;
[L1465]              assume !revert && gas >= 0;
[L1466]  CALL        call CorralChoice_SpaghettiToken(this);
[L1376]              havoc msgsender_MSG;
[L1377]              havoc msgvalue_MSG;
[L1378]              havoc choice;
[L1379]              havoc __ret_0_totalSupply;
[L1380]              havoc arg329_s0;
[L1381]              havoc __ret_0_balanceOf;
[L1382]              havoc arg330_s0;
[L1383]              havoc arg331_s0;
[L1384]              havoc __ret_0_allowance;
[L1385]              havoc __ret_0_symbol;
[L1386]              havoc __ret_0_decimals;
[L1387]              havoc __ret_0_name;
[L1388]              havoc chef_s113;
[L1389]              havoc guy_s149;
[L1390]              havoc __ret_0_approve;
[L1391]              havoc guy_s177;
[L1392]              havoc wad_s177;
[L1393]              havoc dst_s194;
[L1394]              havoc wad_s194;
[L1395]              havoc __ret_0_transfer;
[L1396]              havoc src_s309;
[L1397]              havoc dst_s309;
[L1398]              havoc wad_s309;
[L1399]              havoc __ret_0_transferFrom;
[L1400]              havoc tmpNow;
[L1401]              havoc gas;
[L1402]              assume gas > 4000000 && gas <= 8000000;
[L1403]              tmpNow := now;
[L1404]              havoc now;
[L1405]              assume now > tmpNow;
[L1406]              assume msgsender_MSG != null;
[L1407]  COND FALSE  !(choice == 7)
[L1413]  COND FALSE  !(choice == 6)
[L1419]  COND FALSE  !(choice == 5)
[L1425]  COND FALSE  !(choice == 4)
[L1431]  COND FALSE  !(choice == 3)
[L1438]  COND FALSE  !(choice == 2)
[L1445]  COND TRUE   choice == 1
[L1446]              gas := gas - 21000;
[L1447]  COND TRUE   gas >= 0
[L1448]              assume wad_s309 >= 0 && wad_s309 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1449]              assume msgvalue_MSG == 0;
[L1450]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_SpaghettiToken(this, msgsender_MSG, msgvalue_MSG, src_s309, dst_s309, wad_s309);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != src_s309 && p1 != dst_s309) && (p2 != src_s309 || p3 != msgsender_MSG)) && src_s309 != dst_s309) && wad_s309 <= balanceOf_SpaghettiToken[this][src_s309]) && wad_s309 <= allowance_SpaghettiToken[this][src_s309][msgsender_MSG]) && balanceOf_SpaghettiToken[this][dst_s309] + wad_s309 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && wad_s309 >= 0) && wad_s309 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_SpaghettiToken[this][dst_s309] >= 0) && balanceOf_SpaghettiToken[this][dst_s309] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_SpaghettiToken[this][src_s309] >= 0) && balanceOf_SpaghettiToken[this][src_s309] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowance_SpaghettiToken[this][src_s309][msgsender_MSG] >= 0) && allowance_SpaghettiToken[this][src_s309][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_SpaghettiToken0 := true;
[L3]                 call_transferFrom_SpaghettiToken0 := false;
[L3]                 revert := revert_hold;
[L235]               havoc __exception;
[L236]               revert := false;
[L237]   COND TRUE   __exception
[L238]               __tmp__Balance := Balance;
[L239]               __tmp__DType := DType;
[L240]               __tmp__Alloc := Alloc;
[L241]               __tmp__balance_ADDR := balance_ADDR;
[L242]               __tmp__M_Ref_int := M_Ref_int;
[L243]               __tmp__sum_balanceOf0 := sum_balanceOf0;
[L244]               __tmp__alloc_allowance_SpaghettiToken_lvl0 := alloc_allowance_SpaghettiToken_lvl0;
[L245]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L246]               __tmp__sum_allowance1 := sum_allowance1;
[L247]               __tmp__Length := Length;
[L248]               __tmp__now := now;
[L249]               __tmp__totalSupply_SpaghettiToken := totalSupply_SpaghettiToken;
[L250]               __tmp__balanceOf_SpaghettiToken := balanceOf_SpaghettiToken;
[L251]               __tmp__allowance_SpaghettiToken := allowance_SpaghettiToken;
[L252]               __tmp__symbol_SpaghettiToken := symbol_SpaghettiToken;
[L253]               __tmp__decimals_SpaghettiToken := decimals_SpaghettiToken;
[L254]               __tmp__name_SpaghettiToken := name_SpaghettiToken;
[L255]   CALL        call __ret_0_ := transferFrom~address~address~uint256_SpaghettiToken__fail(this, msgsender_MSG, msgvalue_MSG, src_s309, dst_s309, wad_s309);
[L757]               __var_4 := -1 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L758]   COND FALSE  !(src_s309 != msgsender_MSG && __tmp__allowance_SpaghettiToken[this][src_s309][msgsender_MSG] != -1 % 115792089237316195423570985008687907853269984665640564039457584007913129639936)
[L775]   COND TRUE   !(__tmp__balanceOf_SpaghettiToken[this][src_s309] >= wad_s309)
[L776]               revert := true;
[L255]   RET         call __ret_0_ := transferFrom~address~address~uint256_SpaghettiToken__fail(this, msgsender_MSG, msgvalue_MSG, src_s309, dst_s309, wad_s309);
[L256]               assume revert || gas < 0;
[L1450]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_SpaghettiToken(this, msgsender_MSG, msgvalue_MSG, src_s309, dst_s309, wad_s309);
[L1466]  RET         call CorralChoice_SpaghettiToken(this);

Loop:
[L1466]        assume true;

[2020-11-24 16:12:38,574 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 16:12:38,575 INFO  L82        PathProgramCache]: Analyzing trace with hash -178641744, now seen corresponding path program 1 times
[2020-11-24 16:12:38,575 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 16:12:38,584 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 16:12:38,606 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 16:12:38,606 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 16:12:38,606 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [6] imperfect sequences [] total 6
[2020-11-24 16:12:38,607 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 16:12:38,607 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 6 interpolants.
[2020-11-24 16:12:38,607 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=9, Invalid=21, Unknown=0, NotChecked=0, Total=30
[2020-11-24 16:12:38,607 INFO  L87              Difference]: Start difference. First operand 249 states and 270 transitions. cyclomatic complexity: 22 Second operand 6 states.
[2020-11-24 16:12:38,677 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 16:12:38,677 INFO  L93              Difference]: Finished difference Result 264 states and 284 transitions.
[2020-11-24 16:12:38,677 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 7 states. 
[2020-11-24 16:12:38,678 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 264 states and 284 transitions.
[2020-11-24 16:12:38,679 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 2
[2020-11-24 16:12:38,680 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 264 states to 261 states and 281 transitions.
[2020-11-24 16:12:38,680 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 141
[2020-11-24 16:12:38,680 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 141
[2020-11-24 16:12:38,680 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 261 states and 281 transitions.
[2020-11-24 16:12:38,681 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 16:12:38,681 INFO  L728         BuchiCegarLoop]: Abstraction has 261 states and 281 transitions.
[2020-11-24 16:12:38,681 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 261 states and 281 transitions.
[2020-11-24 16:12:38,683 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 261 to 248.
[2020-11-24 16:12:38,683 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 248 states.
[2020-11-24 16:12:38,684 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 248 states to 248 states and 268 transitions.
[2020-11-24 16:12:38,684 INFO  L751         BuchiCegarLoop]: Abstraction has 248 states and 268 transitions.
[2020-11-24 16:12:38,684 INFO  L631         BuchiCegarLoop]: Abstraction has 248 states and 268 transitions.
[2020-11-24 16:12:38,684 INFO  L445         BuchiCegarLoop]: ======== Iteration 5============
[2020-11-24 16:12:38,684 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 248 states and 268 transitions.
[2020-11-24 16:12:38,685 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 16:12:38,685 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 16:12:38,685 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 16:12:38,685 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 16:12:38,685 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L3]                 success_transferFrom_SpaghettiToken0 := false;
[L3]                 call_transferFrom_SpaghettiToken0 := false;
[L3]     CALL        call main();
[L3]                 havoc p3;
[L3]                 havoc p2;
[L3]                 havoc p1;
[L1461]              assume null == 0;
[L1462]  CALL        call this := FreshRefGenerator__success();
[L640]               havoc newRef;
[L641]               assume Alloc[newRef] == false;
[L642]               Alloc[newRef] := true;
[L643]               assume newRef != null;
[L1462]  RET         call this := FreshRefGenerator__success();
[L1463]              assume now >= 0;
[L1464]              assume DType[this] == SpaghettiToken;
[L1465]              assume !revert && gas >= 0;
[L1466]  CALL        call CorralChoice_SpaghettiToken(this);
[L1376]              havoc msgsender_MSG;
[L1377]              havoc msgvalue_MSG;
[L1378]              havoc choice;
[L1379]              havoc __ret_0_totalSupply;
[L1380]              havoc arg329_s0;
[L1381]              havoc __ret_0_balanceOf;
[L1382]              havoc arg330_s0;
[L1383]              havoc arg331_s0;
[L1384]              havoc __ret_0_allowance;
[L1385]              havoc __ret_0_symbol;
[L1386]              havoc __ret_0_decimals;
[L1387]              havoc __ret_0_name;
[L1388]              havoc chef_s113;
[L1389]              havoc guy_s149;
[L1390]              havoc __ret_0_approve;
[L1391]              havoc guy_s177;
[L1392]              havoc wad_s177;
[L1393]              havoc dst_s194;
[L1394]              havoc wad_s194;
[L1395]              havoc __ret_0_transfer;
[L1396]              havoc src_s309;
[L1397]              havoc dst_s309;
[L1398]              havoc wad_s309;
[L1399]              havoc __ret_0_transferFrom;
[L1400]              havoc tmpNow;
[L1401]              havoc gas;
[L1402]              assume gas > 4000000 && gas <= 8000000;
[L1403]              tmpNow := now;
[L1404]              havoc now;
[L1405]              assume now > tmpNow;
[L1406]              assume msgsender_MSG != null;
[L1407]  COND FALSE  !(choice == 7)
[L1413]  COND FALSE  !(choice == 6)
[L1419]  COND FALSE  !(choice == 5)
[L1425]  COND FALSE  !(choice == 4)
[L1431]  COND FALSE  !(choice == 3)
[L1438]  COND FALSE  !(choice == 2)
[L1445]  COND TRUE   choice == 1
[L1446]              gas := gas - 21000;
[L1447]  COND TRUE   gas >= 0
[L1448]              assume wad_s309 >= 0 && wad_s309 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1449]              assume msgvalue_MSG == 0;
[L1450]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_SpaghettiToken(this, msgsender_MSG, msgvalue_MSG, src_s309, dst_s309, wad_s309);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != src_s309 && p1 != dst_s309) && (p2 != src_s309 || p3 != msgsender_MSG)) && src_s309 != dst_s309) && wad_s309 <= balanceOf_SpaghettiToken[this][src_s309]) && wad_s309 <= allowance_SpaghettiToken[this][src_s309][msgsender_MSG]) && balanceOf_SpaghettiToken[this][dst_s309] + wad_s309 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && wad_s309 >= 0) && wad_s309 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_SpaghettiToken[this][dst_s309] >= 0) && balanceOf_SpaghettiToken[this][dst_s309] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_SpaghettiToken[this][src_s309] >= 0) && balanceOf_SpaghettiToken[this][src_s309] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowance_SpaghettiToken[this][src_s309][msgsender_MSG] >= 0) && allowance_SpaghettiToken[this][src_s309][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_SpaghettiToken0 := true;
[L3]                 call_transferFrom_SpaghettiToken0 := false;
[L3]                 revert := revert_hold;
[L235]               havoc __exception;
[L236]               revert := false;
[L237]   COND TRUE   __exception
[L238]               __tmp__Balance := Balance;
[L239]               __tmp__DType := DType;
[L240]               __tmp__Alloc := Alloc;
[L241]               __tmp__balance_ADDR := balance_ADDR;
[L242]               __tmp__M_Ref_int := M_Ref_int;
[L243]               __tmp__sum_balanceOf0 := sum_balanceOf0;
[L244]               __tmp__alloc_allowance_SpaghettiToken_lvl0 := alloc_allowance_SpaghettiToken_lvl0;
[L245]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L246]               __tmp__sum_allowance1 := sum_allowance1;
[L247]               __tmp__Length := Length;
[L248]               __tmp__now := now;
[L249]               __tmp__totalSupply_SpaghettiToken := totalSupply_SpaghettiToken;
[L250]               __tmp__balanceOf_SpaghettiToken := balanceOf_SpaghettiToken;
[L251]               __tmp__allowance_SpaghettiToken := allowance_SpaghettiToken;
[L252]               __tmp__symbol_SpaghettiToken := symbol_SpaghettiToken;
[L253]               __tmp__decimals_SpaghettiToken := decimals_SpaghettiToken;
[L254]               __tmp__name_SpaghettiToken := name_SpaghettiToken;
[L255]   CALL        call __ret_0_ := transferFrom~address~address~uint256_SpaghettiToken__fail(this, msgsender_MSG, msgvalue_MSG, src_s309, dst_s309, wad_s309);
[L757]               __var_4 := -1 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L758]   COND FALSE  !(src_s309 != msgsender_MSG && __tmp__allowance_SpaghettiToken[this][src_s309][msgsender_MSG] != -1 % 115792089237316195423570985008687907853269984665640564039457584007913129639936)
[L775]   COND FALSE  !(!(__tmp__balanceOf_SpaghettiToken[this][src_s309] >= wad_s309))
[L779]   COND TRUE   __tmp__DType[this] == SpaghettiToken
[L780]   CALL        call __var_6 := sub~uint256~uint256_DSMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balanceOf_SpaghettiToken[this][src_s309], wad_s309);
[L666]               z_s45 := (x_s45 - y_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L667]   COND FALSE  !(!((x_s45 - y_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 <= x_s45))
[L780]   RET         call __var_6 := sub~uint256~uint256_DSMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balanceOf_SpaghettiToken[this][src_s309], wad_s309);
[L781]   COND TRUE   revert
[L255]   RET         call __ret_0_ := transferFrom~address~address~uint256_SpaghettiToken__fail(this, msgsender_MSG, msgvalue_MSG, src_s309, dst_s309, wad_s309);
[L256]               assume revert || gas < 0;
[L1450]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_SpaghettiToken(this, msgsender_MSG, msgvalue_MSG, src_s309, dst_s309, wad_s309);
[L1466]  RET         call CorralChoice_SpaghettiToken(this);

Loop:
[L1466]        assume true;

[2020-11-24 16:12:38,687 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 16:12:38,687 INFO  L82        PathProgramCache]: Analyzing trace with hash -261054763, now seen corresponding path program 1 times
[2020-11-24 16:12:38,688 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 16:12:38,694 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 16:12:38,706 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 16:12:38,707 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 16:12:38,707 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [5] imperfect sequences [] total 5
[2020-11-24 16:12:38,707 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 16:12:38,708 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 5 interpolants.
[2020-11-24 16:12:38,708 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=9, Invalid=11, Unknown=0, NotChecked=0, Total=20
[2020-11-24 16:12:38,708 INFO  L87              Difference]: Start difference. First operand 248 states and 268 transitions. cyclomatic complexity: 21 Second operand 5 states.
[2020-11-24 16:12:38,718 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 16:12:38,718 INFO  L93              Difference]: Finished difference Result 259 states and 273 transitions.
[2020-11-24 16:12:38,718 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-24 16:12:38,718 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 259 states and 273 transitions.
[2020-11-24 16:12:38,719 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 2
[2020-11-24 16:12:38,720 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 259 states to 259 states and 273 transitions.
[2020-11-24 16:12:38,720 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 139
[2020-11-24 16:12:38,720 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 139
[2020-11-24 16:12:38,720 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 259 states and 273 transitions.
[2020-11-24 16:12:38,721 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 16:12:38,721 INFO  L728         BuchiCegarLoop]: Abstraction has 259 states and 273 transitions.
[2020-11-24 16:12:38,722 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 259 states and 273 transitions.
[2020-11-24 16:12:38,723 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 259 to 248.
[2020-11-24 16:12:38,723 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 248 states.
[2020-11-24 16:12:38,724 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 248 states to 248 states and 262 transitions.
[2020-11-24 16:12:38,724 INFO  L751         BuchiCegarLoop]: Abstraction has 248 states and 262 transitions.
[2020-11-24 16:12:38,724 INFO  L631         BuchiCegarLoop]: Abstraction has 248 states and 262 transitions.
[2020-11-24 16:12:38,724 INFO  L445         BuchiCegarLoop]: ======== Iteration 6============
[2020-11-24 16:12:38,724 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 248 states and 262 transitions.
[2020-11-24 16:12:38,725 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 16:12:38,725 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 16:12:38,725 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 16:12:38,725 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 16:12:38,725 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L3]                 success_transferFrom_SpaghettiToken0 := false;
[L3]                 call_transferFrom_SpaghettiToken0 := false;
[L3]     CALL        call main();
[L3]                 havoc p3;
[L3]                 havoc p2;
[L3]                 havoc p1;
[L1461]              assume null == 0;
[L1462]  CALL        call this := FreshRefGenerator__success();
[L640]               havoc newRef;
[L641]               assume Alloc[newRef] == false;
[L642]               Alloc[newRef] := true;
[L643]               assume newRef != null;
[L1462]  RET         call this := FreshRefGenerator__success();
[L1463]              assume now >= 0;
[L1464]              assume DType[this] == SpaghettiToken;
[L1465]              assume !revert && gas >= 0;
[L1466]  CALL        call CorralChoice_SpaghettiToken(this);
[L1376]              havoc msgsender_MSG;
[L1377]              havoc msgvalue_MSG;
[L1378]              havoc choice;
[L1379]              havoc __ret_0_totalSupply;
[L1380]              havoc arg329_s0;
[L1381]              havoc __ret_0_balanceOf;
[L1382]              havoc arg330_s0;
[L1383]              havoc arg331_s0;
[L1384]              havoc __ret_0_allowance;
[L1385]              havoc __ret_0_symbol;
[L1386]              havoc __ret_0_decimals;
[L1387]              havoc __ret_0_name;
[L1388]              havoc chef_s113;
[L1389]              havoc guy_s149;
[L1390]              havoc __ret_0_approve;
[L1391]              havoc guy_s177;
[L1392]              havoc wad_s177;
[L1393]              havoc dst_s194;
[L1394]              havoc wad_s194;
[L1395]              havoc __ret_0_transfer;
[L1396]              havoc src_s309;
[L1397]              havoc dst_s309;
[L1398]              havoc wad_s309;
[L1399]              havoc __ret_0_transferFrom;
[L1400]              havoc tmpNow;
[L1401]              havoc gas;
[L1402]              assume gas > 4000000 && gas <= 8000000;
[L1403]              tmpNow := now;
[L1404]              havoc now;
[L1405]              assume now > tmpNow;
[L1406]              assume msgsender_MSG != null;
[L1407]  COND FALSE  !(choice == 7)
[L1413]  COND FALSE  !(choice == 6)
[L1419]  COND FALSE  !(choice == 5)
[L1425]  COND FALSE  !(choice == 4)
[L1431]  COND FALSE  !(choice == 3)
[L1438]  COND FALSE  !(choice == 2)
[L1445]  COND TRUE   choice == 1
[L1446]              gas := gas - 21000;
[L1447]  COND TRUE   gas >= 0
[L1448]              assume wad_s309 >= 0 && wad_s309 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1449]              assume msgvalue_MSG == 0;
[L1450]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_SpaghettiToken(this, msgsender_MSG, msgvalue_MSG, src_s309, dst_s309, wad_s309);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != src_s309 && p1 != dst_s309) && (p2 != src_s309 || p3 != msgsender_MSG)) && src_s309 != dst_s309) && wad_s309 <= balanceOf_SpaghettiToken[this][src_s309]) && wad_s309 <= allowance_SpaghettiToken[this][src_s309][msgsender_MSG]) && balanceOf_SpaghettiToken[this][dst_s309] + wad_s309 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && wad_s309 >= 0) && wad_s309 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_SpaghettiToken[this][dst_s309] >= 0) && balanceOf_SpaghettiToken[this][dst_s309] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_SpaghettiToken[this][src_s309] >= 0) && balanceOf_SpaghettiToken[this][src_s309] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowance_SpaghettiToken[this][src_s309][msgsender_MSG] >= 0) && allowance_SpaghettiToken[this][src_s309][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_SpaghettiToken0 := true;
[L3]                 call_transferFrom_SpaghettiToken0 := false;
[L3]                 revert := revert_hold;
[L235]               havoc __exception;
[L236]               revert := false;
[L237]   COND TRUE   __exception
[L238]               __tmp__Balance := Balance;
[L239]               __tmp__DType := DType;
[L240]               __tmp__Alloc := Alloc;
[L241]               __tmp__balance_ADDR := balance_ADDR;
[L242]               __tmp__M_Ref_int := M_Ref_int;
[L243]               __tmp__sum_balanceOf0 := sum_balanceOf0;
[L244]               __tmp__alloc_allowance_SpaghettiToken_lvl0 := alloc_allowance_SpaghettiToken_lvl0;
[L245]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L246]               __tmp__sum_allowance1 := sum_allowance1;
[L247]               __tmp__Length := Length;
[L248]               __tmp__now := now;
[L249]               __tmp__totalSupply_SpaghettiToken := totalSupply_SpaghettiToken;
[L250]               __tmp__balanceOf_SpaghettiToken := balanceOf_SpaghettiToken;
[L251]               __tmp__allowance_SpaghettiToken := allowance_SpaghettiToken;
[L252]               __tmp__symbol_SpaghettiToken := symbol_SpaghettiToken;
[L253]               __tmp__decimals_SpaghettiToken := decimals_SpaghettiToken;
[L254]               __tmp__name_SpaghettiToken := name_SpaghettiToken;
[L255]   CALL        call __ret_0_ := transferFrom~address~address~uint256_SpaghettiToken__fail(this, msgsender_MSG, msgvalue_MSG, src_s309, dst_s309, wad_s309);
[L757]               __var_4 := -1 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L758]   COND TRUE   src_s309 != msgsender_MSG && __tmp__allowance_SpaghettiToken[this][src_s309][msgsender_MSG] != -1 % 115792089237316195423570985008687907853269984665640564039457584007913129639936
[L759]   COND FALSE  !(!(__tmp__allowance_SpaghettiToken[this][src_s309][msgsender_MSG] >= wad_s309))
[L763]   COND TRUE   __tmp__DType[this] == SpaghettiToken
[L764]   CALL        call __var_5 := sub~uint256~uint256_DSMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__allowance_SpaghettiToken[this][src_s309][msgsender_MSG], wad_s309);
[L666]               z_s45 := (x_s45 - y_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L667]   COND TRUE   !((x_s45 - y_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 <= x_s45)
[L668]               revert := true;
[L764]   RET         call __var_5 := sub~uint256~uint256_DSMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__allowance_SpaghettiToken[this][src_s309][msgsender_MSG], wad_s309);
[L765]   COND TRUE   revert
[L255]   RET         call __ret_0_ := transferFrom~address~address~uint256_SpaghettiToken__fail(this, msgsender_MSG, msgvalue_MSG, src_s309, dst_s309, wad_s309);
[L256]               assume revert || gas < 0;
[L1450]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_SpaghettiToken(this, msgsender_MSG, msgvalue_MSG, src_s309, dst_s309, wad_s309);
[L1466]  RET         call CorralChoice_SpaghettiToken(this);

Loop:
[L1466]        assume true;

[2020-11-24 16:12:38,727 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 16:12:38,727 INFO  L82        PathProgramCache]: Analyzing trace with hash -44322517, now seen corresponding path program 1 times
[2020-11-24 16:12:38,727 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 16:12:38,735 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 16:12:38,775 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 16:12:38,775 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 16:12:38,776 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [7] imperfect sequences [] total 7
[2020-11-24 16:12:38,776 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 16:12:38,776 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 7 interpolants.
[2020-11-24 16:12:38,776 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=11, Invalid=31, Unknown=0, NotChecked=0, Total=42
[2020-11-24 16:12:38,776 INFO  L87              Difference]: Start difference. First operand 248 states and 262 transitions. cyclomatic complexity: 15 Second operand 7 states.
[2020-11-24 16:12:38,908 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 16:12:38,908 INFO  L93              Difference]: Finished difference Result 296 states and 317 transitions.
[2020-11-24 16:12:38,908 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 8 states. 
[2020-11-24 16:12:38,908 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 296 states and 317 transitions.
[2020-11-24 16:12:38,910 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 2
[2020-11-24 16:12:38,912 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 296 states to 292 states and 313 transitions.
[2020-11-24 16:12:38,912 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 150
[2020-11-24 16:12:38,912 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 150
[2020-11-24 16:12:38,912 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 292 states and 313 transitions.
[2020-11-24 16:12:38,913 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 16:12:38,913 INFO  L728         BuchiCegarLoop]: Abstraction has 292 states and 313 transitions.
[2020-11-24 16:12:38,913 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 292 states and 313 transitions.
[2020-11-24 16:12:38,915 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 292 to 246.
[2020-11-24 16:12:38,916 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 246 states.
[2020-11-24 16:12:38,916 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 246 states to 246 states and 259 transitions.
[2020-11-24 16:12:38,916 INFO  L751         BuchiCegarLoop]: Abstraction has 246 states and 259 transitions.
[2020-11-24 16:12:38,916 INFO  L631         BuchiCegarLoop]: Abstraction has 246 states and 259 transitions.
[2020-11-24 16:12:38,917 INFO  L445         BuchiCegarLoop]: ======== Iteration 7============
[2020-11-24 16:12:38,917 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 246 states and 259 transitions.
[2020-11-24 16:12:38,917 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 16:12:38,917 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 16:12:38,918 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 16:12:38,918 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 16:12:38,918 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L3]                 success_transferFrom_SpaghettiToken0 := false;
[L3]                 call_transferFrom_SpaghettiToken0 := false;
[L3]     CALL        call main();
[L3]                 havoc p3;
[L3]                 havoc p2;
[L3]                 havoc p1;
[L1461]              assume null == 0;
[L1462]  CALL        call this := FreshRefGenerator__success();
[L640]               havoc newRef;
[L641]               assume Alloc[newRef] == false;
[L642]               Alloc[newRef] := true;
[L643]               assume newRef != null;
[L1462]  RET         call this := FreshRefGenerator__success();
[L1463]              assume now >= 0;
[L1464]              assume DType[this] == SpaghettiToken;
[L1465]              assume !revert && gas >= 0;
[L1466]  CALL        call CorralChoice_SpaghettiToken(this);
[L1376]              havoc msgsender_MSG;
[L1377]              havoc msgvalue_MSG;
[L1378]              havoc choice;
[L1379]              havoc __ret_0_totalSupply;
[L1380]              havoc arg329_s0;
[L1381]              havoc __ret_0_balanceOf;
[L1382]              havoc arg330_s0;
[L1383]              havoc arg331_s0;
[L1384]              havoc __ret_0_allowance;
[L1385]              havoc __ret_0_symbol;
[L1386]              havoc __ret_0_decimals;
[L1387]              havoc __ret_0_name;
[L1388]              havoc chef_s113;
[L1389]              havoc guy_s149;
[L1390]              havoc __ret_0_approve;
[L1391]              havoc guy_s177;
[L1392]              havoc wad_s177;
[L1393]              havoc dst_s194;
[L1394]              havoc wad_s194;
[L1395]              havoc __ret_0_transfer;
[L1396]              havoc src_s309;
[L1397]              havoc dst_s309;
[L1398]              havoc wad_s309;
[L1399]              havoc __ret_0_transferFrom;
[L1400]              havoc tmpNow;
[L1401]              havoc gas;
[L1402]              assume gas > 4000000 && gas <= 8000000;
[L1403]              tmpNow := now;
[L1404]              havoc now;
[L1405]              assume now > tmpNow;
[L1406]              assume msgsender_MSG != null;
[L1407]  COND FALSE  !(choice == 7)
[L1413]  COND FALSE  !(choice == 6)
[L1419]  COND FALSE  !(choice == 5)
[L1425]  COND FALSE  !(choice == 4)
[L1431]  COND FALSE  !(choice == 3)
[L1438]  COND FALSE  !(choice == 2)
[L1445]  COND TRUE   choice == 1
[L1446]              gas := gas - 21000;
[L1447]  COND TRUE   gas >= 0
[L1448]              assume wad_s309 >= 0 && wad_s309 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1449]              assume msgvalue_MSG == 0;
[L1450]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_SpaghettiToken(this, msgsender_MSG, msgvalue_MSG, src_s309, dst_s309, wad_s309);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != src_s309 && p1 != dst_s309) && (p2 != src_s309 || p3 != msgsender_MSG)) && src_s309 != dst_s309) && wad_s309 <= balanceOf_SpaghettiToken[this][src_s309]) && wad_s309 <= allowance_SpaghettiToken[this][src_s309][msgsender_MSG]) && balanceOf_SpaghettiToken[this][dst_s309] + wad_s309 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && wad_s309 >= 0) && wad_s309 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_SpaghettiToken[this][dst_s309] >= 0) && balanceOf_SpaghettiToken[this][dst_s309] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_SpaghettiToken[this][src_s309] >= 0) && balanceOf_SpaghettiToken[this][src_s309] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowance_SpaghettiToken[this][src_s309][msgsender_MSG] >= 0) && allowance_SpaghettiToken[this][src_s309][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_SpaghettiToken0 := true;
[L3]                 call_transferFrom_SpaghettiToken0 := false;
[L3]                 revert := revert_hold;
[L235]               havoc __exception;
[L236]               revert := false;
[L237]   COND TRUE   __exception
[L238]               __tmp__Balance := Balance;
[L239]               __tmp__DType := DType;
[L240]               __tmp__Alloc := Alloc;
[L241]               __tmp__balance_ADDR := balance_ADDR;
[L242]               __tmp__M_Ref_int := M_Ref_int;
[L243]               __tmp__sum_balanceOf0 := sum_balanceOf0;
[L244]               __tmp__alloc_allowance_SpaghettiToken_lvl0 := alloc_allowance_SpaghettiToken_lvl0;
[L245]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L246]               __tmp__sum_allowance1 := sum_allowance1;
[L247]               __tmp__Length := Length;
[L248]               __tmp__now := now;
[L249]               __tmp__totalSupply_SpaghettiToken := totalSupply_SpaghettiToken;
[L250]               __tmp__balanceOf_SpaghettiToken := balanceOf_SpaghettiToken;
[L251]               __tmp__allowance_SpaghettiToken := allowance_SpaghettiToken;
[L252]               __tmp__symbol_SpaghettiToken := symbol_SpaghettiToken;
[L253]               __tmp__decimals_SpaghettiToken := decimals_SpaghettiToken;
[L254]               __tmp__name_SpaghettiToken := name_SpaghettiToken;
[L255]   CALL        call __ret_0_ := transferFrom~address~address~uint256_SpaghettiToken__fail(this, msgsender_MSG, msgvalue_MSG, src_s309, dst_s309, wad_s309);
[L757]               __var_4 := -1 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L758]   COND FALSE  !(src_s309 != msgsender_MSG && __tmp__allowance_SpaghettiToken[this][src_s309][msgsender_MSG] != -1 % 115792089237316195423570985008687907853269984665640564039457584007913129639936)
[L775]   COND FALSE  !(!(__tmp__balanceOf_SpaghettiToken[this][src_s309] >= wad_s309))
[L779]   COND TRUE   __tmp__DType[this] == SpaghettiToken
[L780]   CALL        call __var_6 := sub~uint256~uint256_DSMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balanceOf_SpaghettiToken[this][src_s309], wad_s309);
[L666]               z_s45 := (x_s45 - y_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L667]   COND TRUE   !((x_s45 - y_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 <= x_s45)
[L668]               revert := true;
[L780]   RET         call __var_6 := sub~uint256~uint256_DSMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balanceOf_SpaghettiToken[this][src_s309], wad_s309);
[L781]   COND TRUE   revert
[L255]   RET         call __ret_0_ := transferFrom~address~address~uint256_SpaghettiToken__fail(this, msgsender_MSG, msgvalue_MSG, src_s309, dst_s309, wad_s309);
[L256]               assume revert || gas < 0;
[L1450]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_SpaghettiToken(this, msgsender_MSG, msgvalue_MSG, src_s309, dst_s309, wad_s309);
[L1466]  RET         call CorralChoice_SpaghettiToken(this);

Loop:
[L1466]        assume true;

[2020-11-24 16:12:38,920 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 16:12:38,920 INFO  L82        PathProgramCache]: Analyzing trace with hash -1558539707, now seen corresponding path program 1 times
[2020-11-24 16:12:38,920 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 16:12:38,928 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 16:12:38,982 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 16:12:38,982 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 16:12:38,982 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [7] imperfect sequences [] total 7
[2020-11-24 16:12:38,983 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 16:12:38,983 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 7 interpolants.
[2020-11-24 16:12:38,983 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=11, Invalid=31, Unknown=0, NotChecked=0, Total=42
[2020-11-24 16:12:38,983 INFO  L87              Difference]: Start difference. First operand 246 states and 259 transitions. cyclomatic complexity: 14 Second operand 7 states.
[2020-11-24 16:12:39,139 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 16:12:39,140 INFO  L93              Difference]: Finished difference Result 255 states and 267 transitions.
[2020-11-24 16:12:39,140 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 8 states. 
[2020-11-24 16:12:39,140 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 255 states and 267 transitions.
[2020-11-24 16:12:39,142 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 2
[2020-11-24 16:12:39,143 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 255 states to 251 states and 263 transitions.
[2020-11-24 16:12:39,143 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 131
[2020-11-24 16:12:39,144 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 131
[2020-11-24 16:12:39,144 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 251 states and 263 transitions.
[2020-11-24 16:12:39,144 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 16:12:39,144 INFO  L728         BuchiCegarLoop]: Abstraction has 251 states and 263 transitions.
[2020-11-24 16:12:39,145 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 251 states and 263 transitions.
[2020-11-24 16:12:39,148 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 251 to 244.
[2020-11-24 16:12:39,148 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 244 states.
[2020-11-24 16:12:39,149 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 244 states to 244 states and 256 transitions.
[2020-11-24 16:12:39,149 INFO  L751         BuchiCegarLoop]: Abstraction has 244 states and 256 transitions.
[2020-11-24 16:12:39,149 INFO  L631         BuchiCegarLoop]: Abstraction has 244 states and 256 transitions.
[2020-11-24 16:12:39,149 INFO  L445         BuchiCegarLoop]: ======== Iteration 8============
[2020-11-24 16:12:39,149 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 244 states and 256 transitions.
[2020-11-24 16:12:39,150 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 16:12:39,150 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 16:12:39,151 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 16:12:39,152 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 16:12:39,152 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L3]                 success_transferFrom_SpaghettiToken0 := false;
[L3]                 call_transferFrom_SpaghettiToken0 := false;
[L3]     CALL        call main();
[L3]                 havoc p3;
[L3]                 havoc p2;
[L3]                 havoc p1;
[L1461]              assume null == 0;
[L1462]  CALL        call this := FreshRefGenerator__success();
[L640]               havoc newRef;
[L641]               assume Alloc[newRef] == false;
[L642]               Alloc[newRef] := true;
[L643]               assume newRef != null;
[L1462]  RET         call this := FreshRefGenerator__success();
[L1463]              assume now >= 0;
[L1464]              assume DType[this] == SpaghettiToken;
[L1465]              assume !revert && gas >= 0;
[L1466]  CALL        call CorralChoice_SpaghettiToken(this);
[L1376]              havoc msgsender_MSG;
[L1377]              havoc msgvalue_MSG;
[L1378]              havoc choice;
[L1379]              havoc __ret_0_totalSupply;
[L1380]              havoc arg329_s0;
[L1381]              havoc __ret_0_balanceOf;
[L1382]              havoc arg330_s0;
[L1383]              havoc arg331_s0;
[L1384]              havoc __ret_0_allowance;
[L1385]              havoc __ret_0_symbol;
[L1386]              havoc __ret_0_decimals;
[L1387]              havoc __ret_0_name;
[L1388]              havoc chef_s113;
[L1389]              havoc guy_s149;
[L1390]              havoc __ret_0_approve;
[L1391]              havoc guy_s177;
[L1392]              havoc wad_s177;
[L1393]              havoc dst_s194;
[L1394]              havoc wad_s194;
[L1395]              havoc __ret_0_transfer;
[L1396]              havoc src_s309;
[L1397]              havoc dst_s309;
[L1398]              havoc wad_s309;
[L1399]              havoc __ret_0_transferFrom;
[L1400]              havoc tmpNow;
[L1401]              havoc gas;
[L1402]              assume gas > 4000000 && gas <= 8000000;
[L1403]              tmpNow := now;
[L1404]              havoc now;
[L1405]              assume now > tmpNow;
[L1406]              assume msgsender_MSG != null;
[L1407]  COND FALSE  !(choice == 7)
[L1413]  COND FALSE  !(choice == 6)
[L1419]  COND FALSE  !(choice == 5)
[L1425]  COND FALSE  !(choice == 4)
[L1431]  COND FALSE  !(choice == 3)
[L1438]  COND FALSE  !(choice == 2)
[L1445]  COND TRUE   choice == 1
[L1446]              gas := gas - 21000;
[L1447]  COND TRUE   gas >= 0
[L1448]              assume wad_s309 >= 0 && wad_s309 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1449]              assume msgvalue_MSG == 0;
[L1450]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_SpaghettiToken(this, msgsender_MSG, msgvalue_MSG, src_s309, dst_s309, wad_s309);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != src_s309 && p1 != dst_s309) && (p2 != src_s309 || p3 != msgsender_MSG)) && src_s309 != dst_s309) && wad_s309 <= balanceOf_SpaghettiToken[this][src_s309]) && wad_s309 <= allowance_SpaghettiToken[this][src_s309][msgsender_MSG]) && balanceOf_SpaghettiToken[this][dst_s309] + wad_s309 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && wad_s309 >= 0) && wad_s309 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_SpaghettiToken[this][dst_s309] >= 0) && balanceOf_SpaghettiToken[this][dst_s309] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_SpaghettiToken[this][src_s309] >= 0) && balanceOf_SpaghettiToken[this][src_s309] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowance_SpaghettiToken[this][src_s309][msgsender_MSG] >= 0) && allowance_SpaghettiToken[this][src_s309][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_SpaghettiToken0 := true;
[L3]                 call_transferFrom_SpaghettiToken0 := false;
[L3]                 revert := revert_hold;
[L235]               havoc __exception;
[L236]               revert := false;
[L237]   COND TRUE   __exception
[L238]               __tmp__Balance := Balance;
[L239]               __tmp__DType := DType;
[L240]               __tmp__Alloc := Alloc;
[L241]               __tmp__balance_ADDR := balance_ADDR;
[L242]               __tmp__M_Ref_int := M_Ref_int;
[L243]               __tmp__sum_balanceOf0 := sum_balanceOf0;
[L244]               __tmp__alloc_allowance_SpaghettiToken_lvl0 := alloc_allowance_SpaghettiToken_lvl0;
[L245]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L246]               __tmp__sum_allowance1 := sum_allowance1;
[L247]               __tmp__Length := Length;
[L248]               __tmp__now := now;
[L249]               __tmp__totalSupply_SpaghettiToken := totalSupply_SpaghettiToken;
[L250]               __tmp__balanceOf_SpaghettiToken := balanceOf_SpaghettiToken;
[L251]               __tmp__allowance_SpaghettiToken := allowance_SpaghettiToken;
[L252]               __tmp__symbol_SpaghettiToken := symbol_SpaghettiToken;
[L253]               __tmp__decimals_SpaghettiToken := decimals_SpaghettiToken;
[L254]               __tmp__name_SpaghettiToken := name_SpaghettiToken;
[L255]   CALL        call __ret_0_ := transferFrom~address~address~uint256_SpaghettiToken__fail(this, msgsender_MSG, msgvalue_MSG, src_s309, dst_s309, wad_s309);
[L757]               __var_4 := -1 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L758]   COND FALSE  !(src_s309 != msgsender_MSG && __tmp__allowance_SpaghettiToken[this][src_s309][msgsender_MSG] != -1 % 115792089237316195423570985008687907853269984665640564039457584007913129639936)
[L775]   COND FALSE  !(!(__tmp__balanceOf_SpaghettiToken[this][src_s309] >= wad_s309))
[L779]   COND TRUE   __tmp__DType[this] == SpaghettiToken
[L780]   CALL        call __var_6 := sub~uint256~uint256_DSMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balanceOf_SpaghettiToken[this][src_s309], wad_s309);
[L666]               z_s45 := (x_s45 - y_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L667]   COND FALSE  !(!((x_s45 - y_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 <= x_s45))
[L780]   RET         call __var_6 := sub~uint256~uint256_DSMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balanceOf_SpaghettiToken[this][src_s309], wad_s309);
[L781]   COND FALSE  !(revert)
[L787]               __tmp__sum_balanceOf0[this] := __tmp__sum_balanceOf0[this] - __tmp__balanceOf_SpaghettiToken[this][src_s309];
[L788]               __tmp__balanceOf_SpaghettiToken[this][src_s309] := __var_6;
[L789]               __tmp__sum_balanceOf0[this] := __tmp__sum_balanceOf0[this] + __tmp__balanceOf_SpaghettiToken[this][src_s309];
[L790]               one_s309 := wad_s309 / 100 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L791]   COND TRUE   __tmp__DType[this] == SpaghettiToken
[L792]   CALL        call ninetynine_s309 := sub~uint256~uint256_DSMath__fail(this, msgsender_MSG, msgvalue_MSG, wad_s309, one_s309);
[L666]               z_s45 := (x_s45 - y_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L667]   COND FALSE  !(!((x_s45 - y_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 <= x_s45))
[L792]   RET         call ninetynine_s309 := sub~uint256~uint256_DSMath__fail(this, msgsender_MSG, msgvalue_MSG, wad_s309, one_s309);
[L793]   COND FALSE  !(revert)
[L799]               ninetynine_s309 := ninetynine_s309;
[L800]   COND TRUE   __tmp__DType[this] == SpaghettiToken
[L801]   CALL        call __var_7 := add~uint256~uint256_DSMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balanceOf_SpaghettiToken[this][dst_s309], ninetynine_s309);
[L648]               z_s23 := (x_s23 + y_s23) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L649]   COND TRUE   !((x_s23 + y_s23) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 >= x_s23)
[L650]               revert := true;
[L801]   RET         call __var_7 := add~uint256~uint256_DSMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balanceOf_SpaghettiToken[this][dst_s309], ninetynine_s309);
[L802]   COND TRUE   revert
[L255]   RET         call __ret_0_ := transferFrom~address~address~uint256_SpaghettiToken__fail(this, msgsender_MSG, msgvalue_MSG, src_s309, dst_s309, wad_s309);
[L256]               assume revert || gas < 0;
[L1450]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_SpaghettiToken(this, msgsender_MSG, msgvalue_MSG, src_s309, dst_s309, wad_s309);
[L1466]  RET         call CorralChoice_SpaghettiToken(this);

Loop:
[L1466]        assume true;

[2020-11-24 16:12:39,154 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 16:12:39,154 INFO  L82        PathProgramCache]: Analyzing trace with hash -1216833899, now seen corresponding path program 1 times
[2020-11-24 16:12:39,155 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 16:12:39,168 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 16:12:39,272 INFO  L134       CoverageAnalysis]: Checked inductivity of 4 backedges. 3 proven. 0 refuted. 0 times theorem prover too weak. 1 trivial. 0 not checked.
[2020-11-24 16:12:39,272 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 16:12:39,272 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [11] imperfect sequences [] total 11
[2020-11-24 16:12:39,273 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 16:12:39,273 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 11 interpolants.
[2020-11-24 16:12:39,273 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=21, Invalid=89, Unknown=0, NotChecked=0, Total=110
[2020-11-24 16:12:39,273 INFO  L87              Difference]: Start difference. First operand 244 states and 256 transitions. cyclomatic complexity: 13 Second operand 11 states.
[2020-11-24 16:12:39,497 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 16:12:39,497 INFO  L93              Difference]: Finished difference Result 259 states and 270 transitions.
[2020-11-24 16:12:39,497 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 12 states. 
[2020-11-24 16:12:39,497 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 259 states and 270 transitions.
[2020-11-24 16:12:39,498 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 2
[2020-11-24 16:12:39,500 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 259 states to 252 states and 263 transitions.
[2020-11-24 16:12:39,500 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 132
[2020-11-24 16:12:39,500 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 132
[2020-11-24 16:12:39,501 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 252 states and 263 transitions.
[2020-11-24 16:12:39,501 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 16:12:39,501 INFO  L728         BuchiCegarLoop]: Abstraction has 252 states and 263 transitions.
[2020-11-24 16:12:39,501 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 252 states and 263 transitions.
[2020-11-24 16:12:39,504 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 252 to 239.
[2020-11-24 16:12:39,504 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 239 states.
[2020-11-24 16:12:39,505 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 239 states to 239 states and 250 transitions.
[2020-11-24 16:12:39,505 INFO  L751         BuchiCegarLoop]: Abstraction has 239 states and 250 transitions.
[2020-11-24 16:12:39,505 INFO  L631         BuchiCegarLoop]: Abstraction has 239 states and 250 transitions.
[2020-11-24 16:12:39,505 INFO  L445         BuchiCegarLoop]: ======== Iteration 9============
[2020-11-24 16:12:39,505 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 239 states and 250 transitions.
[2020-11-24 16:12:39,506 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 16:12:39,506 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 16:12:39,506 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 16:12:39,507 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 16:12:39,507 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L3]                 success_transferFrom_SpaghettiToken0 := false;
[L3]                 call_transferFrom_SpaghettiToken0 := false;
[L3]     CALL        call main();
[L3]                 havoc p3;
[L3]                 havoc p2;
[L3]                 havoc p1;
[L1461]              assume null == 0;
[L1462]  CALL        call this := FreshRefGenerator__success();
[L640]               havoc newRef;
[L641]               assume Alloc[newRef] == false;
[L642]               Alloc[newRef] := true;
[L643]               assume newRef != null;
[L1462]  RET         call this := FreshRefGenerator__success();
[L1463]              assume now >= 0;
[L1464]              assume DType[this] == SpaghettiToken;
[L1465]              assume !revert && gas >= 0;
[L1466]  CALL        call CorralChoice_SpaghettiToken(this);
[L1376]              havoc msgsender_MSG;
[L1377]              havoc msgvalue_MSG;
[L1378]              havoc choice;
[L1379]              havoc __ret_0_totalSupply;
[L1380]              havoc arg329_s0;
[L1381]              havoc __ret_0_balanceOf;
[L1382]              havoc arg330_s0;
[L1383]              havoc arg331_s0;
[L1384]              havoc __ret_0_allowance;
[L1385]              havoc __ret_0_symbol;
[L1386]              havoc __ret_0_decimals;
[L1387]              havoc __ret_0_name;
[L1388]              havoc chef_s113;
[L1389]              havoc guy_s149;
[L1390]              havoc __ret_0_approve;
[L1391]              havoc guy_s177;
[L1392]              havoc wad_s177;
[L1393]              havoc dst_s194;
[L1394]              havoc wad_s194;
[L1395]              havoc __ret_0_transfer;
[L1396]              havoc src_s309;
[L1397]              havoc dst_s309;
[L1398]              havoc wad_s309;
[L1399]              havoc __ret_0_transferFrom;
[L1400]              havoc tmpNow;
[L1401]              havoc gas;
[L1402]              assume gas > 4000000 && gas <= 8000000;
[L1403]              tmpNow := now;
[L1404]              havoc now;
[L1405]              assume now > tmpNow;
[L1406]              assume msgsender_MSG != null;
[L1407]  COND FALSE  !(choice == 7)
[L1413]  COND FALSE  !(choice == 6)
[L1419]  COND FALSE  !(choice == 5)
[L1425]  COND FALSE  !(choice == 4)
[L1431]  COND FALSE  !(choice == 3)
[L1438]  COND FALSE  !(choice == 2)
[L1445]  COND TRUE   choice == 1
[L1446]              gas := gas - 21000;
[L1447]  COND TRUE   gas >= 0
[L1448]              assume wad_s309 >= 0 && wad_s309 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1449]              assume msgvalue_MSG == 0;
[L1450]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_SpaghettiToken(this, msgsender_MSG, msgvalue_MSG, src_s309, dst_s309, wad_s309);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != src_s309 && p1 != dst_s309) && (p2 != src_s309 || p3 != msgsender_MSG)) && src_s309 != dst_s309) && wad_s309 <= balanceOf_SpaghettiToken[this][src_s309]) && wad_s309 <= allowance_SpaghettiToken[this][src_s309][msgsender_MSG]) && balanceOf_SpaghettiToken[this][dst_s309] + wad_s309 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && wad_s309 >= 0) && wad_s309 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_SpaghettiToken[this][dst_s309] >= 0) && balanceOf_SpaghettiToken[this][dst_s309] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_SpaghettiToken[this][src_s309] >= 0) && balanceOf_SpaghettiToken[this][src_s309] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowance_SpaghettiToken[this][src_s309][msgsender_MSG] >= 0) && allowance_SpaghettiToken[this][src_s309][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_SpaghettiToken0 := true;
[L3]                 call_transferFrom_SpaghettiToken0 := false;
[L3]                 revert := revert_hold;
[L235]               havoc __exception;
[L236]               revert := false;
[L237]   COND TRUE   __exception
[L238]               __tmp__Balance := Balance;
[L239]               __tmp__DType := DType;
[L240]               __tmp__Alloc := Alloc;
[L241]               __tmp__balance_ADDR := balance_ADDR;
[L242]               __tmp__M_Ref_int := M_Ref_int;
[L243]               __tmp__sum_balanceOf0 := sum_balanceOf0;
[L244]               __tmp__alloc_allowance_SpaghettiToken_lvl0 := alloc_allowance_SpaghettiToken_lvl0;
[L245]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L246]               __tmp__sum_allowance1 := sum_allowance1;
[L247]               __tmp__Length := Length;
[L248]               __tmp__now := now;
[L249]               __tmp__totalSupply_SpaghettiToken := totalSupply_SpaghettiToken;
[L250]               __tmp__balanceOf_SpaghettiToken := balanceOf_SpaghettiToken;
[L251]               __tmp__allowance_SpaghettiToken := allowance_SpaghettiToken;
[L252]               __tmp__symbol_SpaghettiToken := symbol_SpaghettiToken;
[L253]               __tmp__decimals_SpaghettiToken := decimals_SpaghettiToken;
[L254]               __tmp__name_SpaghettiToken := name_SpaghettiToken;
[L255]   CALL        call __ret_0_ := transferFrom~address~address~uint256_SpaghettiToken__fail(this, msgsender_MSG, msgvalue_MSG, src_s309, dst_s309, wad_s309);
[L757]               __var_4 := -1 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L758]   COND FALSE  !(src_s309 != msgsender_MSG && __tmp__allowance_SpaghettiToken[this][src_s309][msgsender_MSG] != -1 % 115792089237316195423570985008687907853269984665640564039457584007913129639936)
[L775]   COND FALSE  !(!(__tmp__balanceOf_SpaghettiToken[this][src_s309] >= wad_s309))
[L779]   COND TRUE   __tmp__DType[this] == SpaghettiToken
[L780]   CALL        call __var_6 := sub~uint256~uint256_DSMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balanceOf_SpaghettiToken[this][src_s309], wad_s309);
[L666]               z_s45 := (x_s45 - y_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L667]   COND FALSE  !(!((x_s45 - y_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 <= x_s45))
[L780]   RET         call __var_6 := sub~uint256~uint256_DSMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balanceOf_SpaghettiToken[this][src_s309], wad_s309);
[L781]   COND FALSE  !(revert)
[L787]               __tmp__sum_balanceOf0[this] := __tmp__sum_balanceOf0[this] - __tmp__balanceOf_SpaghettiToken[this][src_s309];
[L788]               __tmp__balanceOf_SpaghettiToken[this][src_s309] := __var_6;
[L789]               __tmp__sum_balanceOf0[this] := __tmp__sum_balanceOf0[this] + __tmp__balanceOf_SpaghettiToken[this][src_s309];
[L790]               one_s309 := wad_s309 / 100 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L791]   COND TRUE   __tmp__DType[this] == SpaghettiToken
[L792]   CALL        call ninetynine_s309 := sub~uint256~uint256_DSMath__fail(this, msgsender_MSG, msgvalue_MSG, wad_s309, one_s309);
[L666]               z_s45 := (x_s45 - y_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L667]   COND TRUE   !((x_s45 - y_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 <= x_s45)
[L668]               revert := true;
[L792]   RET         call ninetynine_s309 := sub~uint256~uint256_DSMath__fail(this, msgsender_MSG, msgvalue_MSG, wad_s309, one_s309);
[L793]   COND TRUE   revert
[L255]   RET         call __ret_0_ := transferFrom~address~address~uint256_SpaghettiToken__fail(this, msgsender_MSG, msgvalue_MSG, src_s309, dst_s309, wad_s309);
[L256]               assume revert || gas < 0;
[L1450]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_SpaghettiToken(this, msgsender_MSG, msgvalue_MSG, src_s309, dst_s309, wad_s309);
[L1466]  RET         call CorralChoice_SpaghettiToken(this);

Loop:
[L1466]        assume true;

[2020-11-24 16:12:39,509 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 16:12:39,509 INFO  L82        PathProgramCache]: Analyzing trace with hash -2107207409, now seen corresponding path program 1 times
[2020-11-24 16:12:39,510 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 16:12:39,519 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 16:12:39,549 INFO  L134       CoverageAnalysis]: Checked inductivity of 4 backedges. 2 proven. 0 refuted. 0 times theorem prover too weak. 2 trivial. 0 not checked.
[2020-11-24 16:12:39,550 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 16:12:39,550 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [6] imperfect sequences [] total 6
[2020-11-24 16:12:39,550 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 16:12:39,550 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 6 interpolants.
[2020-11-24 16:12:39,550 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=9, Invalid=21, Unknown=0, NotChecked=0, Total=30
[2020-11-24 16:12:39,551 INFO  L87              Difference]: Start difference. First operand 239 states and 250 transitions. cyclomatic complexity: 12 Second operand 6 states.
[2020-11-24 16:12:39,576 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 16:12:39,576 INFO  L93              Difference]: Finished difference Result 241 states and 251 transitions.
[2020-11-24 16:12:39,576 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 6 states. 
[2020-11-24 16:12:39,577 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 241 states and 251 transitions.
[2020-11-24 16:12:39,578 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 16:12:39,579 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 241 states to 237 states and 247 transitions.
[2020-11-24 16:12:39,579 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 117
[2020-11-24 16:12:39,579 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 117
[2020-11-24 16:12:39,579 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 237 states and 247 transitions.
[2020-11-24 16:12:39,580 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 16:12:39,580 INFO  L728         BuchiCegarLoop]: Abstraction has 237 states and 247 transitions.
[2020-11-24 16:12:39,580 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 237 states and 247 transitions.
[2020-11-24 16:12:39,582 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 237 to 237.
[2020-11-24 16:12:39,582 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 237 states.
[2020-11-24 16:12:39,583 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 237 states to 237 states and 247 transitions.
[2020-11-24 16:12:39,583 INFO  L751         BuchiCegarLoop]: Abstraction has 237 states and 247 transitions.
[2020-11-24 16:12:39,583 INFO  L631         BuchiCegarLoop]: Abstraction has 237 states and 247 transitions.
[2020-11-24 16:12:39,583 INFO  L445         BuchiCegarLoop]: ======== Iteration 10============
[2020-11-24 16:12:39,583 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 237 states and 247 transitions.
[2020-11-24 16:12:39,584 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 16:12:39,584 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 16:12:39,584 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 16:12:39,585 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 16:12:39,585 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L3]                 success_transferFrom_SpaghettiToken0 := false;
[L3]                 call_transferFrom_SpaghettiToken0 := false;
[L3]     CALL        call main();
[L3]                 havoc p3;
[L3]                 havoc p2;
[L3]                 havoc p1;
[L1461]              assume null == 0;
[L1462]  CALL        call this := FreshRefGenerator__success();
[L640]               havoc newRef;
[L641]               assume Alloc[newRef] == false;
[L642]               Alloc[newRef] := true;
[L643]               assume newRef != null;
[L1462]  RET         call this := FreshRefGenerator__success();
[L1463]              assume now >= 0;
[L1464]              assume DType[this] == SpaghettiToken;
[L1465]              assume !revert && gas >= 0;
[L1466]  CALL        call CorralChoice_SpaghettiToken(this);
[L1376]              havoc msgsender_MSG;
[L1377]              havoc msgvalue_MSG;
[L1378]              havoc choice;
[L1379]              havoc __ret_0_totalSupply;
[L1380]              havoc arg329_s0;
[L1381]              havoc __ret_0_balanceOf;
[L1382]              havoc arg330_s0;
[L1383]              havoc arg331_s0;
[L1384]              havoc __ret_0_allowance;
[L1385]              havoc __ret_0_symbol;
[L1386]              havoc __ret_0_decimals;
[L1387]              havoc __ret_0_name;
[L1388]              havoc chef_s113;
[L1389]              havoc guy_s149;
[L1390]              havoc __ret_0_approve;
[L1391]              havoc guy_s177;
[L1392]              havoc wad_s177;
[L1393]              havoc dst_s194;
[L1394]              havoc wad_s194;
[L1395]              havoc __ret_0_transfer;
[L1396]              havoc src_s309;
[L1397]              havoc dst_s309;
[L1398]              havoc wad_s309;
[L1399]              havoc __ret_0_transferFrom;
[L1400]              havoc tmpNow;
[L1401]              havoc gas;
[L1402]              assume gas > 4000000 && gas <= 8000000;
[L1403]              tmpNow := now;
[L1404]              havoc now;
[L1405]              assume now > tmpNow;
[L1406]              assume msgsender_MSG != null;
[L1407]  COND FALSE  !(choice == 7)
[L1413]  COND FALSE  !(choice == 6)
[L1419]  COND FALSE  !(choice == 5)
[L1425]  COND FALSE  !(choice == 4)
[L1431]  COND FALSE  !(choice == 3)
[L1438]  COND FALSE  !(choice == 2)
[L1445]  COND TRUE   choice == 1
[L1446]              gas := gas - 21000;
[L1447]  COND TRUE   gas >= 0
[L1448]              assume wad_s309 >= 0 && wad_s309 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1449]              assume msgvalue_MSG == 0;
[L1450]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_SpaghettiToken(this, msgsender_MSG, msgvalue_MSG, src_s309, dst_s309, wad_s309);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != src_s309 && p1 != dst_s309) && (p2 != src_s309 || p3 != msgsender_MSG)) && src_s309 != dst_s309) && wad_s309 <= balanceOf_SpaghettiToken[this][src_s309]) && wad_s309 <= allowance_SpaghettiToken[this][src_s309][msgsender_MSG]) && balanceOf_SpaghettiToken[this][dst_s309] + wad_s309 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && wad_s309 >= 0) && wad_s309 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_SpaghettiToken[this][dst_s309] >= 0) && balanceOf_SpaghettiToken[this][dst_s309] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_SpaghettiToken[this][src_s309] >= 0) && balanceOf_SpaghettiToken[this][src_s309] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowance_SpaghettiToken[this][src_s309][msgsender_MSG] >= 0) && allowance_SpaghettiToken[this][src_s309][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_SpaghettiToken0 := true;
[L3]                 call_transferFrom_SpaghettiToken0 := false;
[L3]                 revert := revert_hold;
[L235]               havoc __exception;
[L236]               revert := false;
[L237]   COND FALSE  !(__exception)
[L258]   CALL        call __ret_0_ := transferFrom~address~address~uint256_SpaghettiToken__success(this, msgsender_MSG, msgvalue_MSG, src_s309, dst_s309, wad_s309);
[L827]               __var_4 := -1 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L828]   COND FALSE  !(src_s309 != msgsender_MSG && allowance_SpaghettiToken[this][src_s309][msgsender_MSG] != -1 % 115792089237316195423570985008687907853269984665640564039457584007913129639936)
[L845]   COND FALSE  !(!(balanceOf_SpaghettiToken[this][src_s309] >= wad_s309))
[L849]   COND TRUE   DType[this] == SpaghettiToken
[L850]   CALL        call __var_6 := sub~uint256~uint256_DSMath__success(this, msgsender_MSG, msgvalue_MSG, balanceOf_SpaghettiToken[this][src_s309], wad_s309);
[L675]               z_s45 := (x_s45 - y_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L676]   COND FALSE  !(!((x_s45 - y_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 <= x_s45))
[L850]   RET         call __var_6 := sub~uint256~uint256_DSMath__success(this, msgsender_MSG, msgvalue_MSG, balanceOf_SpaghettiToken[this][src_s309], wad_s309);
[L851]   COND FALSE  !(revert)
[L857]               sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_SpaghettiToken[this][src_s309];
[L858]               balanceOf_SpaghettiToken[this][src_s309] := __var_6;
[L859]               sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_SpaghettiToken[this][src_s309];
[L860]               one_s309 := wad_s309 / 100 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L861]   COND TRUE   DType[this] == SpaghettiToken
[L862]   CALL        call ninetynine_s309 := sub~uint256~uint256_DSMath__success(this, msgsender_MSG, msgvalue_MSG, wad_s309, one_s309);
[L675]               z_s45 := (x_s45 - y_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L676]   COND FALSE  !(!((x_s45 - y_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 <= x_s45))
[L862]   RET         call ninetynine_s309 := sub~uint256~uint256_DSMath__success(this, msgsender_MSG, msgvalue_MSG, wad_s309, one_s309);
[L863]   COND FALSE  !(revert)
[L869]               ninetynine_s309 := ninetynine_s309;
[L870]   COND TRUE   DType[this] == SpaghettiToken
[L871]   CALL        call __var_7 := add~uint256~uint256_DSMath__success(this, msgsender_MSG, msgvalue_MSG, balanceOf_SpaghettiToken[this][dst_s309], ninetynine_s309);
[L657]               z_s23 := (x_s23 + y_s23) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L658]   COND FALSE  !(!((x_s23 + y_s23) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 >= x_s23))
[L871]   RET         call __var_7 := add~uint256~uint256_DSMath__success(this, msgsender_MSG, msgvalue_MSG, balanceOf_SpaghettiToken[this][dst_s309], ninetynine_s309);
[L872]   COND FALSE  !(revert)
[L878]               sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_SpaghettiToken[this][dst_s309];
[L879]               balanceOf_SpaghettiToken[this][dst_s309] := __var_7;
[L880]               sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_SpaghettiToken[this][dst_s309];
[L881]   CALL        call burn~uint256_SpaghettiToken__success(this, msgsender_MSG, msgvalue_MSG, one_s309);
[L907]   COND TRUE   DType[this] == SpaghettiToken
[L908]   CALL        call __var_8 := sub~uint256~uint256_DSMath__success(this, msgsender_MSG, msgvalue_MSG, totalSupply_SpaghettiToken[this], wad_s326);
[L675]               z_s45 := (x_s45 - y_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L676]   COND FALSE  !(!((x_s45 - y_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 <= x_s45))
[L908]   RET         call __var_8 := sub~uint256~uint256_DSMath__success(this, msgsender_MSG, msgvalue_MSG, totalSupply_SpaghettiToken[this], wad_s326);
[L909]   COND FALSE  !(revert)
[L915]               totalSupply_SpaghettiToken[this] := __var_8;
[L916]               assert { :EventEmitted "Burn_SpaghettiToken" } true;
[L881]   RET         call burn~uint256_SpaghettiToken__success(this, msgsender_MSG, msgvalue_MSG, one_s309);
[L882]   COND FALSE  !(revert)
[L885]               assert { :EventEmitted "Transfer_SpaghettiToken" } true;
[L886]               __ret_0_ := true;
[L258]   RET         call __ret_0_ := transferFrom~address~address~uint256_SpaghettiToken__success(this, msgsender_MSG, msgvalue_MSG, src_s309, dst_s309, wad_s309);
[L259]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((((__ret_0_ == true && balanceOf_SpaghettiToken[this][src_s309] == old(balanceOf_SpaghettiToken[this][src_s309]) - wad_s309) && balanceOf_SpaghettiToken[this][dst_s309] == old(balanceOf_SpaghettiToken[this][dst_s309]) + wad_s309) && allowance_SpaghettiToken[this][src_s309][msgsender_MSG] == old(allowance_SpaghettiToken[this][src_s309][msgsender_MSG]) - wad_s309) && totalSupply_SpaghettiToken[this] == old(totalSupply_SpaghettiToken[this])) && balanceOf_SpaghettiToken[this][p1] == old(balanceOf_SpaghettiToken[this][p1])) && allowance_SpaghettiToken[this][p2][p3] == old(allowance_SpaghettiToken[this][p2][p3])) && symbol_SpaghettiToken[this] == old(symbol_SpaghettiToken[this])) && decimals_SpaghettiToken[this] == old(decimals_SpaghettiToken[this])) && name_SpaghettiToken[this] == old(name_SpaghettiToken[this]));
[L3]                 revert := revert_hold;
[L1450]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_SpaghettiToken(this, msgsender_MSG, msgvalue_MSG, src_s309, dst_s309, wad_s309);
[L1466]  RET         call CorralChoice_SpaghettiToken(this);

Loop:
[L1466]        assume true;

[2020-11-24 16:12:39,587 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 16:12:39,587 INFO  L82        PathProgramCache]: Analyzing trace with hash -1978170979, now seen corresponding path program 1 times
[2020-11-24 16:12:39,588 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 16:12:39,625 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 16:12:39,710 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 16:12:39,760 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 16:12:39,760 INFO  L82        PathProgramCache]: Analyzing trace with hash 5293, now seen corresponding path program 1 times
[2020-11-24 16:12:39,761 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 16:12:39,762 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 16:12:39,762 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 16:12:39,763 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 16:12:39,763 INFO  L82        PathProgramCache]: Analyzing trace with hash -1193752943, now seen corresponding path program 1 times
[2020-11-24 16:12:39,764 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 16:12:39,798 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 16:12:39,835 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #4: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #4: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
[2020-11-24 16:12:40,586 WARN  L188               SmtUtils]: Spent 621.00 ms on a formula simplification. DAG size of input: 170 DAG size of output: 164
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
[2020-11-24 16:12:40,825 WARN  L188               SmtUtils]: Spent 219.00 ms on a formula simplification. DAG size of input: 80 DAG size of output: 79
[2020-11-24 16:12:41,033 WARN  L188               SmtUtils]: Spent 207.00 ms on a formula simplification. DAG size of input: 124 DAG size of output: 119
Garbage collection #1: 41 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 41 to 79
Garbage collection #2: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #3: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #4: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #5: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
[2020-11-24 16:12:41,330 WARN  L188               SmtUtils]: Spent 294.00 ms on a formula simplification. DAG size of input: 111 DAG size of output: 110
[2020-11-24 16:12:42,176 WARN  L188               SmtUtils]: Spent 844.00 ms on a formula simplification. DAG size of input: 219 DAG size of output: 204
Garbage collection #1: 67 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 67 to 131
Garbage collection #2: 131 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 131 to 257
Garbage collection #3: 257 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 257 to 509
Garbage collection #4: 509 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 509 to 1013
Garbage collection #5: 1013 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1013 to 2017
Garbage collection #1: 47 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 47 to 89
Garbage collection #2: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #3: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #4: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #5: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #6: 1327 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 1327 to 2647
Garbage collection #7: 2647 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 2647 to 5281
Garbage collection #8: 5281 nodes / 0 free / 0.002s / 0.004s total
Resizing node table from 5281 to 10559
Garbage collection #9: 10559 nodes / 0 free / 0.002s / 0.006s total
Resizing node table from 10559 to 21107
[2020-11-24 16:12:46,517 WARN  L188               SmtUtils]: Spent 4.25 s on a formula simplification. DAG size of input: 186 DAG size of output: 159
[2020-11-24 16:12:48,257 WARN  L188               SmtUtils]: Spent 1.74 s on a formula simplification. DAG size of input: 300 DAG size of output: 259
Garbage collection #1: 97 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3019 to 6037
[2020-11-24 16:12:50,983 WARN  L188               SmtUtils]: Spent 2.72 s on a formula simplification. DAG size of input: 239 DAG size of output: 238
[2020-11-24 16:12:53,897 WARN  L188               SmtUtils]: Spent 2.91 s on a formula simplification. DAG size of input: 279 DAG size of output: 258
Garbage collection #1: 97 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3019 to 6037
Garbage collection #7: 6037 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 6037 to 12073
Garbage collection #8: 12073 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 12073 to 24137
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #6: 1759 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1759 to 3517
Garbage collection #7: 3517 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3517 to 7027
Garbage collection #8: 7027 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 7027 to 14051
[2020-11-24 16:12:55,564 WARN  L188               SmtUtils]: Spent 1.62 s on a formula simplification. DAG size of input: 185 DAG size of output: 178
[2020-11-24 16:12:56,664 WARN  L188               SmtUtils]: Spent 1.10 s on a formula simplification that was a NOOP. DAG size: 297
Garbage collection #1: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #2: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #3: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #4: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #5: 1759 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1759 to 3517
Garbage collection #6: 3517 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3517 to 7027
Garbage collection #7: 7027 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 7027 to 14051
[2020-11-24 16:13:01,080 WARN  L188               SmtUtils]: Spent 4.38 s on a formula simplification. DAG size of input: 259 DAG size of output: 240
[2020-11-24 16:13:04,089 WARN  L188               SmtUtils]: Spent 3.01 s on a formula simplification. DAG size of input: 260 DAG size of output: 258
Garbage collection #1: 97 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 3019 to 6037
Garbage collection #7: 6037 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 6037 to 12073
Garbage collection #8: 12073 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 12073 to 24137
Garbage collection #1: 97 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3019 to 6037
Garbage collection #7: 6037 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 6037 to 12073
Garbage collection #8: 12073 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 12073 to 24137
Received shutdown request...
Cannot interrupt operation gracefully because timeout expired. Forcing shutdown
