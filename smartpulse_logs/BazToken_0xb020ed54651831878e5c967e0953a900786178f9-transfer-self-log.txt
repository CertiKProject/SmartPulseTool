This is Ultimate 0.1.24-f1553f5-m
[2020-11-24 15:38:57,471 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-24 15:38:57,473 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-24 15:38:57,484 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-24 15:38:57,485 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-24 15:38:57,486 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-24 15:38:57,487 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-24 15:38:57,488 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-24 15:38:57,492 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-24 15:38:57,493 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-24 15:38:57,493 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-24 15:38:57,494 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-24 15:38:57,494 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-24 15:38:57,495 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-24 15:38:57,496 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-24 15:38:57,496 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-24 15:38:57,497 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-24 15:38:57,498 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-24 15:38:57,500 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-24 15:38:57,501 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-24 15:38:57,501 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-24 15:38:57,502 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-24 15:38:57,504 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-24 15:38:57,504 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-24 15:38:57,504 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-24 15:38:57,504 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-24 15:38:57,505 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-24 15:38:57,505 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-24 15:38:57,505 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-24 15:38:57,506 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-24 15:38:57,506 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-24 15:38:57,507 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-24 15:38:57,507 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-24 15:38:57,508 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-24 15:38:57,509 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-24 15:38:57,509 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-24 15:38:57,509 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-24 15:38:57,509 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-24 15:38:57,510 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-24 15:38:57,510 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-24 15:38:57,511 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-24 15:38:57,511 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-24 15:38:57,519 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-24 15:38:57,519 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-24 15:38:57,520 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-24 15:38:57,520 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-24 15:38:57,521 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-24 15:38:57,521 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-24 15:38:57,521 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-24 15:38:57,521 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-24 15:38:57,521 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-24 15:38:57,521 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-24 15:38:57,521 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-24 15:38:57,521 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-24 15:38:57,522 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-24 15:38:57,522 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-24 15:38:57,522 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-24 15:38:57,522 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-24 15:38:57,522 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-24 15:38:57,522 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-24 15:38:57,522 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-24 15:38:57,522 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-24 15:38:57,522 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-24 15:38:57,523 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-24 15:38:57,523 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-24 15:38:57,523 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-24 15:38:57,523 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-24 15:38:57,523 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-24 15:38:57,549 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-24 15:38:57,563 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-24 15:38:57,565 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-24 15:38:57,566 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-24 15:38:57,566 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-24 15:38:57,567 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/BazToken_0xb020ed54651831878e5c967e0953a900786178f9_transfer-self.bpl
[2020-11-24 15:38:57,567 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/BazToken_0xb020ed54651831878e5c967e0953a900786178f9_transfer-self.bpl'
[2020-11-24 15:38:57,629 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-24 15:38:57,630 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-24 15:38:57,630 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-24 15:38:57,630 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-24 15:38:57,630 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-24 15:38:57,647 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "BazToken_0xb020ed54651831878e5c967e0953a900786178f9_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 03:38:57" (1/1) ...
[2020-11-24 15:38:57,648 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "BazToken_0xb020ed54651831878e5c967e0953a900786178f9_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 03:38:57" (1/1) ...
[2020-11-24 15:38:57,670 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "BazToken_0xb020ed54651831878e5c967e0953a900786178f9_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 03:38:57" (1/1) ...
[2020-11-24 15:38:57,670 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "BazToken_0xb020ed54651831878e5c967e0953a900786178f9_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 03:38:57" (1/1) ...
[2020-11-24 15:38:57,687 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "BazToken_0xb020ed54651831878e5c967e0953a900786178f9_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 03:38:57" (1/1) ...
[2020-11-24 15:38:57,694 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "BazToken_0xb020ed54651831878e5c967e0953a900786178f9_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 03:38:57" (1/1) ...
[2020-11-24 15:38:57,698 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "BazToken_0xb020ed54651831878e5c967e0953a900786178f9_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 03:38:57" (1/1) ...
[2020-11-24 15:38:57,705 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-24 15:38:57,706 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-24 15:38:57,706 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-24 15:38:57,708 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-24 15:38:57,712 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "BazToken_0xb020ed54651831878e5c967e0953a900786178f9_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 03:38:57" (1/1) ...
[2020-11-24 15:38:57,725 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(BazToken.transfer(to, value), msg.sender == to && value <= balances_BazToken[this][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_BazToken[this][to] >= 0 && balances_BazToken[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_BazToken[this][msg.sender] >= 0 &&  balances_BazToken[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(BazToken.transfer(to, value), return == true && _totalSupply_BazToken[this] == old(_totalSupply_BazToken[this]) && balances_BazToken[this] == old(balances_BazToken[this]) && allowed_BazToken[this] == old(allowed_BazToken[this]) && symbol_BazToken[this] == old(symbol_BazToken[this]) && name_BazToken[this] == old(name_BazToken[this]) && decimals_BazToken[this] == old(decimals_BazToken[this]) && owner_Owned[this] == old(owner_Owned[this]) && newOwner_Owned[this] == old(newOwner_Owned[this]))))
[2020-11-24 15:38:57,731 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(BazToken.transfer(to, value), msg.sender == to && value <= balances_BazToken[this][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_BazToken[this][to] >= 0 && balances_BazToken[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_BazToken[this][msg.sender] >= 0 &&  balances_BazToken[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(BazToken.transfer(to, value), return == true && _totalSupply_BazToken[this] == old(_totalSupply_BazToken[this]) && balances_BazToken[this] == old(balances_BazToken[this]) && allowed_BazToken[this] == old(allowed_BazToken[this]) && symbol_BazToken[this] == old(symbol_BazToken[this]) && name_BazToken[this] == old(name_BazToken[this]) && decimals_BazToken[this] == old(decimals_BazToken[this]) && owner_Owned[this] == old(owner_Owned[this]) && newOwner_Owned[this] == old(newOwner_Owned[this]))))
[2020-11-24 15:38:57,738 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(BazToken.transfer(to, value), msg.sender == to && value <= balances_BazToken[this][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_BazToken[this][to] >= 0 && balances_BazToken[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_BazToken[this][msg.sender] >= 0 &&  balances_BazToken[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(BazToken.transfer(to, value), return == true && _totalSupply_BazToken[this] == old(_totalSupply_BazToken[this]) && balances_BazToken[this] == old(balances_BazToken[this]) && allowed_BazToken[this] == old(allowed_BazToken[this]) && symbol_BazToken[this] == old(symbol_BazToken[this]) && name_BazToken[this] == old(name_BazToken[this]) && decimals_BazToken[this] == old(decimals_BazToken[this]) && owner_Owned[this] == old(owner_Owned[this]) && newOwner_Owned[this] == old(newOwner_Owned[this]))))
[2020-11-24 15:38:57,744 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( msg.sender==to_s371 && tokens_s371<=balances_BazToken[this][msg.sender] ) && tokens_s371>=0 ) && tokens_s371<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && balances_BazToken[this][to_s371]>=0 ) && balances_BazToken[this][to_s371]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && balances_BazToken[this][msg.sender]>=0 ) && balances_BazToken[this][msg.sender]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_BazToken>],IdentifierExpression[to_s371,<IMPLEMENTATION_INPARAM,transfer~address~uint256_BazToken>]],BinaryExpression[COMPLEQ,IdentifierExpression[tokens_s371,<IMPLEMENTATION_INPARAM,transfer~address~uint256_BazToken>],ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_BazToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_BazToken>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_BazToken>]]]]],BinaryExpression[COMPGEQ,IdentifierExpression[tokens_s371,<IMPLEMENTATION_INPARAM,transfer~address~uint256_BazToken>],IntegerLiteral[0]]],BinaryExpression[COMPLT,IdentifierExpression[tokens_s371,<IMPLEMENTATION_INPARAM,transfer~address~uint256_BazToken>],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_BazToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_BazToken>]]],[IdentifierExpression[to_s371,<IMPLEMENTATION_INPARAM,transfer~address~uint256_BazToken>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_BazToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_BazToken>]]],[IdentifierExpression[to_s371,<IMPLEMENTATION_INPARAM,transfer~address~uint256_BazToken>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_BazToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_BazToken>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_BazToken>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_BazToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_BazToken>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_BazToken>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]]
[2020-11-24 15:38:57,746 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( success_s371==true && _totalSupply_BazToken[this]==( old(_totalSupply_BazToken[this]) ) ) && balances_BazToken[this]==( old(balances_BazToken[this]) ) ) && allowed_BazToken[this]==( old(allowed_BazToken[this]) ) ) && symbol_BazToken[this]==( old(symbol_BazToken[this]) ) ) && name_BazToken[this]==( old(name_BazToken[this]) ) ) && decimals_BazToken[this]==( old(decimals_BazToken[this]) ) ) && owner_Owned[this]==( old(owner_Owned[this]) ) ) && newOwner_Owned[this]==( old(newOwner_Owned[this]) ) ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[success_s371,<IMPLEMENTATION_OUTPARAM,transfer~address~uint256_BazToken>],BooleanLiteral[true]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_totalSupply_BazToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_BazToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_totalSupply_BazToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_BazToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[balances_BazToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_BazToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[balances_BazToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_BazToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[allowed_BazToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_BazToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[allowed_BazToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_BazToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[symbol_BazToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_BazToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[symbol_BazToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_BazToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[name_BazToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_BazToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[name_BazToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_BazToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[decimals_BazToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_BazToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[decimals_BazToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_BazToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[owner_Owned,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_BazToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[owner_Owned,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_BazToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[newOwner_Owned,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_BazToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[newOwner_Owned,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_BazToken>]]]]]]
[2020-11-24 15:38:57,750 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(BazToken.transfer(to, value), msg.sender == to && value <= balances_BazToken[this][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_BazToken[this][to] >= 0 && balances_BazToken[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_BazToken[this][msg.sender] >= 0 &&  balances_BazToken[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(BazToken.transfer(to, value), return == true && _totalSupply_BazToken[this] == old(_totalSupply_BazToken[this]) && balances_BazToken[this] == old(balances_BazToken[this]) && allowed_BazToken[this] == old(allowed_BazToken[this]) && symbol_BazToken[this] == old(symbol_BazToken[this]) && name_BazToken[this] == old(name_BazToken[this]) && decimals_BazToken[this] == old(decimals_BazToken[this]) && owner_Owned[this] == old(owner_Owned[this]) && newOwner_Owned[this] == old(newOwner_Owned[this]))))
[2020-11-24 15:38:57,750 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_transfer_BazToken0) ==> ( <>AP(success_transfer_BazToken0) ) ) )
Executed UtopiaSpecLang
[2020-11-24 15:38:57,755 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 03:38:57 PropertyContainer
[2020-11-24 15:38:57,755 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-24 15:38:57,755 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-24 15:38:57,755 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-24 15:38:57,755 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-24 15:38:57,756 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "BazToken_0xb020ed54651831878e5c967e0953a900786178f9_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 03:38:57" (1/2) ...
[2020-11-24 15:38:57,756 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-24 15:38:57,757 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-24 15:38:57,765 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 03:38:57" (2/2) ...
[2020-11-24 15:38:57,765 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-24 15:38:57,765 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-24 15:38:57,766 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-24 15:38:57,766 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-24 15:38:57,766 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "BazToken_0xb020ed54651831878e5c967e0953a900786178f9_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 03:38:57" (1/2) ...
[2020-11-24 15:38:57,823 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-24 15:38:57,824 INFO  L130     BoogieDeclarations]: Found specification of procedure safeAdd~uint256~uint256_SafeMath
[2020-11-24 15:38:57,824 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeAdd~uint256~uint256_SafeMath
[2020-11-24 15:38:57,824 INFO  L130     BoogieDeclarations]: Found specification of procedure safeSub~uint256~uint256_SafeMath
[2020-11-24 15:38:57,825 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeSub~uint256~uint256_SafeMath
[2020-11-24 15:38:57,825 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_BazToken
[2020-11-24 15:38:57,825 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_BazToken
[2020-11-24 15:38:57,825 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_BazToken
[2020-11-24 15:38:57,825 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_BazToken
[2020-11-24 15:38:57,826 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_BazToken
[2020-11-24 15:38:57,826 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_BazToken
[2020-11-24 15:38:57,826 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_BazToken
[2020-11-24 15:38:57,826 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_BazToken
[2020-11-24 15:38:57,827 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_BazToken
[2020-11-24 15:38:57,827 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_BazToken
[2020-11-24 15:38:57,827 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_BazToken
[2020-11-24 15:38:57,827 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_BazToken
[2020-11-24 15:38:57,828 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-24 15:38:57,828 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-24 15:38:57,828 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-24 15:38:57,828 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__success
[2020-11-24 15:38:57,828 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_SafeMath
[2020-11-24 15:38:57,829 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_SafeMath
[2020-11-24 15:38:57,829 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20Interface
[2020-11-24 15:38:57,829 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20Interface
[2020-11-24 15:38:57,829 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ApproveAndCallFallBack
[2020-11-24 15:38:57,829 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ApproveAndCallFallBack
[2020-11-24 15:38:57,830 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_Owned
[2020-11-24 15:38:57,830 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_Owned
[2020-11-24 15:38:57,830 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_BazToken
[2020-11-24 15:38:57,830 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-24 15:38:57,830 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-24 15:38:57,831 INFO  L130     BoogieDeclarations]: Found specification of procedure safeAdd~uint256~uint256_SafeMath__success
[2020-11-24 15:38:57,831 INFO  L130     BoogieDeclarations]: Found specification of procedure safeAdd~uint256~uint256_SafeMath__fail
[2020-11-24 15:38:57,831 INFO  L130     BoogieDeclarations]: Found specification of procedure safeSub~uint256~uint256_SafeMath__success
[2020-11-24 15:38:57,831 INFO  L130     BoogieDeclarations]: Found specification of procedure safeSub~uint256~uint256_SafeMath__fail
[2020-11-24 15:38:57,831 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_BazToken__success
[2020-11-24 15:38:57,832 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_BazToken__fail
[2020-11-24 15:38:57,832 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_BazToken__success
[2020-11-24 15:38:57,832 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_BazToken__fail
[2020-11-24 15:38:57,832 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_BazToken__success
[2020-11-24 15:38:57,832 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_BazToken__fail
[2020-11-24 15:38:57,832 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_BazToken__success
[2020-11-24 15:38:57,832 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_BazToken__fail
[2020-11-24 15:38:57,832 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_BazToken__success
[2020-11-24 15:38:57,832 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_BazToken__fail
[2020-11-24 15:38:57,833 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_BazToken__success
[2020-11-24 15:38:57,833 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_BazToken__fail
[2020-11-24 15:38:57,833 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-24 15:38:57,833 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-24 15:38:57,833 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-24 15:38:57,833 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__fail
[2020-11-24 15:38:57,833 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-24 15:38:57,833 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-24 15:38:57,833 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeAdd~uint256~uint256_SafeMath__fail
[2020-11-24 15:38:57,833 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeAdd~uint256~uint256_SafeMath__success
[2020-11-24 15:38:57,833 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeSub~uint256~uint256_SafeMath__fail
[2020-11-24 15:38:57,833 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeSub~uint256~uint256_SafeMath__success
[2020-11-24 15:38:57,833 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_BazToken__fail
[2020-11-24 15:38:57,833 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_BazToken__success
[2020-11-24 15:38:57,834 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_BazToken__fail
[2020-11-24 15:38:57,834 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_BazToken__success
[2020-11-24 15:38:57,834 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_BazToken__fail
[2020-11-24 15:38:57,834 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_BazToken__success
[2020-11-24 15:38:57,834 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_BazToken__fail
[2020-11-24 15:38:57,834 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_BazToken__success
[2020-11-24 15:38:57,834 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_BazToken__fail
[2020-11-24 15:38:57,834 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_BazToken__success
[2020-11-24 15:38:57,834 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_BazToken__fail
[2020-11-24 15:38:57,834 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_BazToken__success
[2020-11-24 15:38:57,834 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-24 15:38:57,834 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-24 15:38:57,834 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-24 15:38:57,835 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-24 15:38:57,835 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-24 15:38:57,835 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-24 15:38:57,835 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__fail
[2020-11-24 15:38:57,835 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__success
[2020-11-24 15:38:57,835 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_SafeMath
[2020-11-24 15:38:57,835 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_SafeMath
[2020-11-24 15:38:57,835 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20Interface
[2020-11-24 15:38:57,835 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20Interface
[2020-11-24 15:38:57,835 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ApproveAndCallFallBack
[2020-11-24 15:38:57,835 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ApproveAndCallFallBack
[2020-11-24 15:38:57,836 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_Owned
[2020-11-24 15:38:57,836 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_Owned
[2020-11-24 15:38:57,836 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_BazToken
[2020-11-24 15:38:57,836 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-24 15:38:57,836 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-24 15:38:57,836 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-24 15:38:57,907 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 15:38:57,908 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 15:38:57,909 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 15:38:58,320 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-24 15:38:58,320 INFO  L286             CfgBuilder]: Removed 5 assue(true) statements.
[2020-11-24 15:38:58,322 INFO  L202        PluginConnector]: Adding new model BazToken_0xb020ed54651831878e5c967e0953a900786178f9_transfer-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 03:38:58 BoogieIcfgContainer
[2020-11-24 15:38:58,323 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 03:38:57" (2/2) ...
[2020-11-24 15:38:58,323 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-24 15:38:58,324 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@76a6a760 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 03:38:58, skipping insertion in model container
[2020-11-24 15:38:58,324 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-24 15:38:58,324 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-24 15:38:58,324 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-24 15:38:58,326 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-24 15:38:58,326 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "BazToken_0xb020ed54651831878e5c967e0953a900786178f9_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 03:38:57" (1/3) ...
[2020-11-24 15:38:58,326 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@43649714 and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 03:38:58, skipping insertion in model container
[2020-11-24 15:38:58,326 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 03:38:57" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-24 15:38:58,364 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 03:38:58 NWAContainer
[2020-11-24 15:38:58,364 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-24 15:38:58,364 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-24 15:38:58,364 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-24 15:38:58,365 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-24 15:38:58,366 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "BazToken_0xb020ed54651831878e5c967e0953a900786178f9_transfer-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 03:38:58" (3/4) ...
[2020-11-24 15:38:58,367 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@6e1e3bce and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 03:38:58, skipping insertion in model container
[2020-11-24 15:38:58,367 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 03:38:58" (4/4) ...
[2020-11-24 15:38:58,371 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-24 15:38:58,373 INFO  L110   BuchiProductObserver]: Initial RCFG 685 locations, 840 edges
[2020-11-24 15:38:58,373 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-24 15:38:58,384 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-24 15:38:59,272 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-24 15:38:59,275 INFO  L110   BuchiProductObserver]: BuchiProgram size 1592 locations, 2709 edges
[2020-11-24 15:38:59,275 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 03:38:59 BoogieIcfgContainer
[2020-11-24 15:38:59,276 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-24 15:38:59,276 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-24 15:38:59,276 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-24 15:38:59,278 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-24 15:38:59,278 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 03:38:59" (1/1) ...
[2020-11-24 15:38:59,325 INFO  L313           BlockEncoder]: Initial Icfg 1592 locations, 2709 edges
[2020-11-24 15:38:59,326 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-24 15:38:59,326 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-24 15:38:59,327 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-24 15:38:59,327 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-24 15:38:59,335 INFO  L70    emoveInfeasibleEdges]: Removed 75 edges and 13 locations because of local infeasibility
[2020-11-24 15:38:59,340 INFO  L70        RemoveSinkStates]: Removed 32 edges and 21 locations by removing sink states
[2020-11-24 15:38:59,346 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-24 15:38:59,349 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-24 15:38:59,351 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-24 15:38:59,351 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-24 15:38:59,354 INFO  L313           BlockEncoder]: Encoded RCFG 1542 locations, 2579 edges
[2020-11-24 15:38:59,354 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 24.11 03:38:59 BasicIcfg
[2020-11-24 15:38:59,355 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-24 15:38:59,355 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-24 15:38:59,355 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-24 15:38:59,360 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-24 15:38:59,361 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 15:38:59,361 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "BazToken_0xb020ed54651831878e5c967e0953a900786178f9_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 03:38:57" (1/6) ...
[2020-11-24 15:38:59,364 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@21ad4faf and model type BazToken_0xb020ed54651831878e5c967e0953a900786178f9_transfer-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 24.11 03:38:59, skipping insertion in model container
[2020-11-24 15:38:59,364 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 15:38:59,364 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 03:38:57" (2/6) ...
[2020-11-24 15:38:59,365 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@21ad4faf and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 24.11 03:38:59, skipping insertion in model container
[2020-11-24 15:38:59,365 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 15:38:59,365 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "BazToken_0xb020ed54651831878e5c967e0953a900786178f9_transfer-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 03:38:58" (3/6) ...
[2020-11-24 15:38:59,366 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@21ad4faf and model type BazToken_0xb020ed54651831878e5c967e0953a900786178f9_transfer-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 24.11 03:38:59, skipping insertion in model container
[2020-11-24 15:38:59,366 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 15:38:59,366 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 03:38:58" (4/6) ...
[2020-11-24 15:38:59,367 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@21ad4faf and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 24.11 03:38:59, skipping insertion in model container
[2020-11-24 15:38:59,367 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 15:38:59,367 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 03:38:59" (5/6) ...
[2020-11-24 15:38:59,368 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@21ad4faf and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 24.11 03:38:59, skipping insertion in model container
[2020-11-24 15:38:59,368 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 15:38:59,368 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 24.11 03:38:59" (6/6) ...
[2020-11-24 15:38:59,369 INFO  L404   chiAutomizerObserver]: Analyzing ICFG BazToken_0xb020ed54651831878e5c967e0953a900786178f9_transfer-self.bpl_BEv2
[2020-11-24 15:38:59,408 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-24 15:38:59,409 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-24 15:38:59,409 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-24 15:38:59,409 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-24 15:38:59,409 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-24 15:38:59,409 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-24 15:38:59,409 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-24 15:38:59,409 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-24 15:38:59,409 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-24 15:38:59,429 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1542 states.
[2020-11-24 15:38:59,468 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 15:38:59,468 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 15:38:59,468 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 15:38:59,477 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 15:38:59,477 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
[2020-11-24 15:38:59,477 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-24 15:38:59,477 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1542 states.
[2020-11-24 15:38:59,488 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 15:38:59,488 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 15:38:59,488 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 15:38:59,490 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 15:38:59,490 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L2]                 success_transfer_BazToken0 := false;
[L2]                 call_transfer_BazToken0 := false;
[L2]     CALL        call main();
[L1937]              assume null == 0;
[L1938]  CALL        call this := FreshRefGenerator__success();
[L766]               havoc newRef;
[L767]               assume Alloc[newRef] == false;
[L768]               Alloc[newRef] := true;
[L769]               assume newRef != null;
[L1938]  RET         call this := FreshRefGenerator__success();
[L1939]              assume now >= 0;
[L1940]              assume DType[this] == BazToken;
[L1941]              assume !revert && gas >= 0;
[L1942]  CALL        call CorralChoice_BazToken(this);
[L1822]              havoc msgsender_MSG;
[L1823]              havoc msgvalue_MSG;
[L1824]              havoc choice;
[L1825]              havoc a_s23;
[L1826]              havoc b_s23;
[L1827]              havoc c_s23;
[L1828]              havoc a_s45;
[L1829]              havoc b_s45;
[L1830]              havoc c_s45;
[L1831]              havoc a_s73;
[L1832]              havoc b_s73;
[L1833]              havoc c_s73;
[L1834]              havoc a_s95;
[L1835]              havoc b_s95;
[L1836]              havoc c_s95;
[L1837]              havoc __ret_0_totalSupply;
[L1838]              havoc tokenOwner_s328;
[L1839]              havoc balance_s328;
[L1840]              havoc tokenOwner_s474;
[L1841]              havoc spender_s474;
[L1842]              havoc remaining_s474;
[L1843]              havoc to_s371;
[L1844]              havoc tokens_s371;
[L1845]              havoc success_s371;
[L1846]              havoc spender_s399;
[L1847]              havoc tokens_s399;
[L1848]              havoc success_s399;
[L1849]              havoc from_s458;
[L1850]              havoc to_s458;
[L1851]              havoc tokens_s458;
[L1852]              havoc success_s458;
[L1853]              havoc __ret_0_owner;
[L1854]              havoc __ret_0_newOwner;
[L1855]              havoc _newOwner_s217;
[L1856]              havoc __ret_0_symbol;
[L1857]              havoc __ret_0_name;
[L1858]              havoc __ret_0_decimals;
[L1859]              havoc __ret_0__totalSupply;
[L1860]              havoc spender_s517;
[L1861]              havoc tokens_s517;
[L1862]              havoc data_s517;
[L1863]              havoc success_s517;
[L1864]              havoc tokenAddress_s544;
[L1865]              havoc tokens_s544;
[L1866]              havoc success_s544;
[L1867]              havoc tmpNow;
[L1868]              havoc gas;
[L1869]              assume gas > 4000000 && gas <= 8000000;
[L1870]              tmpNow := now;
[L1871]              havoc now;
[L1872]              assume now > tmpNow;
[L1873]              assume msgsender_MSG != null;
[L1874]  COND TRUE   choice == 8
[L1875]              gas := gas - 21000;
[L1876]  COND FALSE  !(gas >= 0)
[L1942]  RET         call CorralChoice_BazToken(this);

Loop:
[L1942]        assume true;

[2020-11-24 15:38:59,507 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 15:38:59,508 INFO  L82        PathProgramCache]: Analyzing trace with hash 721931886, now seen corresponding path program 1 times
[2020-11-24 15:38:59,512 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 15:38:59,533 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 15:38:59,584 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 15:38:59,586 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 15:38:59,587 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-24 15:38:59,590 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 15:38:59,602 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-24 15:38:59,603 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-24 15:38:59,604 INFO  L87              Difference]: Start difference. First operand 1542 states. Second operand 4 states.
[2020-11-24 15:38:59,842 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 15:38:59,842 INFO  L93              Difference]: Finished difference Result 654 states and 714 transitions.
[2020-11-24 15:38:59,842 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-24 15:38:59,843 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 654 states and 714 transitions.
[2020-11-24 15:38:59,847 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 15:38:59,851 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 654 states to 188 states and 197 transitions.
[2020-11-24 15:38:59,852 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 4
[2020-11-24 15:38:59,852 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 188
[2020-11-24 15:38:59,853 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 188 states and 197 transitions.
[2020-11-24 15:38:59,853 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 15:38:59,854 INFO  L728         BuchiCegarLoop]: Abstraction has 188 states and 197 transitions.
[2020-11-24 15:38:59,864 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 188 states and 197 transitions.
[2020-11-24 15:38:59,873 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 188 to 188.
[2020-11-24 15:38:59,874 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 188 states.
[2020-11-24 15:38:59,874 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 188 states to 188 states and 197 transitions.
[2020-11-24 15:38:59,875 INFO  L751         BuchiCegarLoop]: Abstraction has 188 states and 197 transitions.
[2020-11-24 15:38:59,875 INFO  L631         BuchiCegarLoop]: Abstraction has 188 states and 197 transitions.
[2020-11-24 15:38:59,876 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-24 15:38:59,876 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 188 states and 197 transitions.
[2020-11-24 15:38:59,877 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 15:38:59,877 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 15:38:59,877 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 15:38:59,878 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 15:38:59,878 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L2]                 success_transfer_BazToken0 := false;
[L2]                 call_transfer_BazToken0 := false;
[L2]     CALL        call main();
[L1937]              assume null == 0;
[L1938]  CALL        call this := FreshRefGenerator__success();
[L766]               havoc newRef;
[L767]               assume Alloc[newRef] == false;
[L768]               Alloc[newRef] := true;
[L769]               assume newRef != null;
[L1938]  RET         call this := FreshRefGenerator__success();
[L1939]              assume now >= 0;
[L1940]              assume DType[this] == BazToken;
[L1941]              assume !revert && gas >= 0;
[L1942]  CALL        call CorralChoice_BazToken(this);
[L1822]              havoc msgsender_MSG;
[L1823]              havoc msgvalue_MSG;
[L1824]              havoc choice;
[L1825]              havoc a_s23;
[L1826]              havoc b_s23;
[L1827]              havoc c_s23;
[L1828]              havoc a_s45;
[L1829]              havoc b_s45;
[L1830]              havoc c_s45;
[L1831]              havoc a_s73;
[L1832]              havoc b_s73;
[L1833]              havoc c_s73;
[L1834]              havoc a_s95;
[L1835]              havoc b_s95;
[L1836]              havoc c_s95;
[L1837]              havoc __ret_0_totalSupply;
[L1838]              havoc tokenOwner_s328;
[L1839]              havoc balance_s328;
[L1840]              havoc tokenOwner_s474;
[L1841]              havoc spender_s474;
[L1842]              havoc remaining_s474;
[L1843]              havoc to_s371;
[L1844]              havoc tokens_s371;
[L1845]              havoc success_s371;
[L1846]              havoc spender_s399;
[L1847]              havoc tokens_s399;
[L1848]              havoc success_s399;
[L1849]              havoc from_s458;
[L1850]              havoc to_s458;
[L1851]              havoc tokens_s458;
[L1852]              havoc success_s458;
[L1853]              havoc __ret_0_owner;
[L1854]              havoc __ret_0_newOwner;
[L1855]              havoc _newOwner_s217;
[L1856]              havoc __ret_0_symbol;
[L1857]              havoc __ret_0_name;
[L1858]              havoc __ret_0_decimals;
[L1859]              havoc __ret_0__totalSupply;
[L1860]              havoc spender_s517;
[L1861]              havoc tokens_s517;
[L1862]              havoc data_s517;
[L1863]              havoc success_s517;
[L1864]              havoc tokenAddress_s544;
[L1865]              havoc tokens_s544;
[L1866]              havoc success_s544;
[L1867]              havoc tmpNow;
[L1868]              havoc gas;
[L1869]              assume gas > 4000000 && gas <= 8000000;
[L1870]              tmpNow := now;
[L1871]              havoc now;
[L1872]              assume now > tmpNow;
[L1873]              assume msgsender_MSG != null;
[L1874]  COND FALSE  !(choice == 8)
[L1882]  COND FALSE  !(choice == 7)
[L1890]  COND FALSE  !(choice == 6)
[L1896]  COND FALSE  !(choice == 5)
[L1902]  COND FALSE  !(choice == 4)
[L1908]  COND TRUE   choice == 3
[L1909]              gas := gas - 21000;
[L1910]  COND TRUE   gas >= 0
[L1911]              assume tokens_s371 >= 0 && tokens_s371 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1912]              assume msgvalue_MSG == 0;
[L1913]  CALL        call success_s371 := transfer~address~uint256_BazToken(this, msgsender_MSG, msgvalue_MSG, to_s371, tokens_s371);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == to_s371 && tokens_s371 <= balances_BazToken[this][msgsender_MSG]) && tokens_s371 >= 0) && tokens_s371 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BazToken[this][to_s371] >= 0) && balances_BazToken[this][to_s371] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BazToken[this][msgsender_MSG] >= 0) && balances_BazToken[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_BazToken0 := true;
[L2]                 call_transfer_BazToken0 := false;
[L2]                 revert := revert_hold;
[L291]               havoc __exception;
[L292]               revert := false;
[L293]   COND FALSE  !(__exception)
[L316]   CALL        call success_s371 := transfer~address~uint256_BazToken__success(this, msgsender_MSG, msgvalue_MSG, to_s371, tokens_s371);
[L870]   COND TRUE   DType[this] == BazToken
[L871]   CALL        call __var_2 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_BazToken[this][msgsender_MSG], tokens_s371);
[L801]   COND TRUE   !(b_s45 <= a_s45)
[L802]               revert := true;
[L871]   RET         call __var_2 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_BazToken[this][msgsender_MSG], tokens_s371);
[L872]   COND TRUE   revert
[L316]   RET         call success_s371 := transfer~address~uint256_BazToken__success(this, msgsender_MSG, msgvalue_MSG, to_s371, tokens_s371);
[L317]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !((((((((success_s371 == true && _totalSupply_BazToken[this] == old(_totalSupply_BazToken[this])) && balances_BazToken[this] == old(balances_BazToken[this])) && allowed_BazToken[this] == old(allowed_BazToken[this])) && symbol_BazToken[this] == old(symbol_BazToken[this])) && name_BazToken[this] == old(name_BazToken[this])) && decimals_BazToken[this] == old(decimals_BazToken[this])) && owner_Owned[this] == old(owner_Owned[this])) && newOwner_Owned[this] == old(newOwner_Owned[this]));
[L2]                 revert := revert_hold;
[L1913]  RET         call success_s371 := transfer~address~uint256_BazToken(this, msgsender_MSG, msgvalue_MSG, to_s371, tokens_s371);
[L1942]  RET         call CorralChoice_BazToken(this);

Loop:
[L1942]        assume true;

[2020-11-24 15:38:59,882 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 15:38:59,882 INFO  L82        PathProgramCache]: Analyzing trace with hash -1069383982, now seen corresponding path program 1 times
[2020-11-24 15:38:59,883 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 15:38:59,893 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 15:38:59,907 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 15:38:59,908 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 15:38:59,908 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-24 15:38:59,909 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 15:38:59,909 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-24 15:38:59,909 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-24 15:38:59,909 INFO  L87              Difference]: Start difference. First operand 188 states and 197 transitions. cyclomatic complexity: 10 Second operand 3 states.
[2020-11-24 15:38:59,914 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 15:38:59,914 INFO  L93              Difference]: Finished difference Result 219 states and 227 transitions.
[2020-11-24 15:38:59,914 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-24 15:38:59,914 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 219 states and 227 transitions.
[2020-11-24 15:38:59,915 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 2
[2020-11-24 15:38:59,917 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 219 states to 205 states and 210 transitions.
[2020-11-24 15:38:59,917 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 205
[2020-11-24 15:38:59,917 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 205
[2020-11-24 15:38:59,917 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 205 states and 210 transitions.
[2020-11-24 15:38:59,918 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 15:38:59,918 INFO  L728         BuchiCegarLoop]: Abstraction has 205 states and 210 transitions.
[2020-11-24 15:38:59,918 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 205 states and 210 transitions.
[2020-11-24 15:38:59,922 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 205 to 194.
[2020-11-24 15:38:59,922 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 194 states.
[2020-11-24 15:38:59,922 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 194 states to 194 states and 199 transitions.
[2020-11-24 15:38:59,922 INFO  L751         BuchiCegarLoop]: Abstraction has 194 states and 199 transitions.
[2020-11-24 15:38:59,922 INFO  L631         BuchiCegarLoop]: Abstraction has 194 states and 199 transitions.
[2020-11-24 15:38:59,922 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-24 15:38:59,922 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 194 states and 199 transitions.
[2020-11-24 15:38:59,923 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 15:38:59,923 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 15:38:59,923 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 15:38:59,924 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 15:38:59,924 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L2]                 success_transfer_BazToken0 := false;
[L2]                 call_transfer_BazToken0 := false;
[L2]     CALL        call main();
[L1937]              assume null == 0;
[L1938]  CALL        call this := FreshRefGenerator__success();
[L766]               havoc newRef;
[L767]               assume Alloc[newRef] == false;
[L768]               Alloc[newRef] := true;
[L769]               assume newRef != null;
[L1938]  RET         call this := FreshRefGenerator__success();
[L1939]              assume now >= 0;
[L1940]              assume DType[this] == BazToken;
[L1941]              assume !revert && gas >= 0;
[L1942]  CALL        call CorralChoice_BazToken(this);
[L1822]              havoc msgsender_MSG;
[L1823]              havoc msgvalue_MSG;
[L1824]              havoc choice;
[L1825]              havoc a_s23;
[L1826]              havoc b_s23;
[L1827]              havoc c_s23;
[L1828]              havoc a_s45;
[L1829]              havoc b_s45;
[L1830]              havoc c_s45;
[L1831]              havoc a_s73;
[L1832]              havoc b_s73;
[L1833]              havoc c_s73;
[L1834]              havoc a_s95;
[L1835]              havoc b_s95;
[L1836]              havoc c_s95;
[L1837]              havoc __ret_0_totalSupply;
[L1838]              havoc tokenOwner_s328;
[L1839]              havoc balance_s328;
[L1840]              havoc tokenOwner_s474;
[L1841]              havoc spender_s474;
[L1842]              havoc remaining_s474;
[L1843]              havoc to_s371;
[L1844]              havoc tokens_s371;
[L1845]              havoc success_s371;
[L1846]              havoc spender_s399;
[L1847]              havoc tokens_s399;
[L1848]              havoc success_s399;
[L1849]              havoc from_s458;
[L1850]              havoc to_s458;
[L1851]              havoc tokens_s458;
[L1852]              havoc success_s458;
[L1853]              havoc __ret_0_owner;
[L1854]              havoc __ret_0_newOwner;
[L1855]              havoc _newOwner_s217;
[L1856]              havoc __ret_0_symbol;
[L1857]              havoc __ret_0_name;
[L1858]              havoc __ret_0_decimals;
[L1859]              havoc __ret_0__totalSupply;
[L1860]              havoc spender_s517;
[L1861]              havoc tokens_s517;
[L1862]              havoc data_s517;
[L1863]              havoc success_s517;
[L1864]              havoc tokenAddress_s544;
[L1865]              havoc tokens_s544;
[L1866]              havoc success_s544;
[L1867]              havoc tmpNow;
[L1868]              havoc gas;
[L1869]              assume gas > 4000000 && gas <= 8000000;
[L1870]              tmpNow := now;
[L1871]              havoc now;
[L1872]              assume now > tmpNow;
[L1873]              assume msgsender_MSG != null;
[L1874]  COND FALSE  !(choice == 8)
[L1882]  COND FALSE  !(choice == 7)
[L1890]  COND FALSE  !(choice == 6)
[L1896]  COND FALSE  !(choice == 5)
[L1902]  COND FALSE  !(choice == 4)
[L1908]  COND TRUE   choice == 3
[L1909]              gas := gas - 21000;
[L1910]  COND TRUE   gas >= 0
[L1911]              assume tokens_s371 >= 0 && tokens_s371 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1912]              assume msgvalue_MSG == 0;
[L1913]  CALL        call success_s371 := transfer~address~uint256_BazToken(this, msgsender_MSG, msgvalue_MSG, to_s371, tokens_s371);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == to_s371 && tokens_s371 <= balances_BazToken[this][msgsender_MSG]) && tokens_s371 >= 0) && tokens_s371 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BazToken[this][to_s371] >= 0) && balances_BazToken[this][to_s371] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BazToken[this][msgsender_MSG] >= 0) && balances_BazToken[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_BazToken0 := true;
[L2]                 call_transfer_BazToken0 := false;
[L2]                 revert := revert_hold;
[L291]               havoc __exception;
[L292]               revert := false;
[L293]   COND TRUE   __exception
[L294]               __tmp__Balance := Balance;
[L295]               __tmp__DType := DType;
[L296]               __tmp__Alloc := Alloc;
[L297]               __tmp__balance_ADDR := balance_ADDR;
[L298]               __tmp__M_Ref_int := M_Ref_int;
[L299]               __tmp__sum_balances0 := sum_balances0;
[L300]               __tmp__alloc_allowed_BazToken_lvl0 := alloc_allowed_BazToken_lvl0;
[L301]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L302]               __tmp__sum_allowed1 := sum_allowed1;
[L303]               __tmp__Length := Length;
[L304]               __tmp__now := now;
[L305]               __tmp__owner_Owned := owner_Owned;
[L306]               __tmp__newOwner_Owned := newOwner_Owned;
[L307]               __tmp__symbol_BazToken := symbol_BazToken;
[L308]               __tmp__name_BazToken := name_BazToken;
[L309]               __tmp__decimals_BazToken := decimals_BazToken;
[L310]               __tmp___totalSupply_BazToken := _totalSupply_BazToken;
[L311]               __tmp__balances_BazToken := balances_BazToken;
[L312]               __tmp__allowed_BazToken := allowed_BazToken;
[L313]   CALL        call success_s371 := transfer~address~uint256_BazToken__fail(this, msgsender_MSG, msgvalue_MSG, to_s371, tokens_s371);
[L840]   COND TRUE   __tmp__DType[this] == BazToken
[L841]   CALL        call __var_2 := safeSub~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balances_BazToken[this][msgsender_MSG], tokens_s371);
[L792]   COND TRUE   !(b_s45 <= a_s45)
[L793]               revert := true;
[L841]   RET         call __var_2 := safeSub~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balances_BazToken[this][msgsender_MSG], tokens_s371);
[L842]   COND TRUE   revert
[L313]   RET         call success_s371 := transfer~address~uint256_BazToken__fail(this, msgsender_MSG, msgvalue_MSG, to_s371, tokens_s371);
[L314]               assume revert || gas < 0;
[L1913]  RET         call success_s371 := transfer~address~uint256_BazToken(this, msgsender_MSG, msgvalue_MSG, to_s371, tokens_s371);
[L1942]  RET         call CorralChoice_BazToken(this);

Loop:
[L1942]        assume true;

[2020-11-24 15:38:59,926 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 15:38:59,926 INFO  L82        PathProgramCache]: Analyzing trace with hash 1196559278, now seen corresponding path program 1 times
[2020-11-24 15:38:59,927 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 15:38:59,937 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 15:38:59,991 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 15:38:59,991 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 15:38:59,991 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [7] imperfect sequences [] total 7
[2020-11-24 15:38:59,992 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 15:38:59,992 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 7 interpolants.
[2020-11-24 15:38:59,992 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=11, Invalid=31, Unknown=0, NotChecked=0, Total=42
[2020-11-24 15:38:59,992 INFO  L87              Difference]: Start difference. First operand 194 states and 199 transitions. cyclomatic complexity: 6 Second operand 7 states.
[2020-11-24 15:39:00,057 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 15:39:00,058 INFO  L93              Difference]: Finished difference Result 209 states and 213 transitions.
[2020-11-24 15:39:00,058 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 8 states. 
[2020-11-24 15:39:00,058 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 209 states and 213 transitions.
[2020-11-24 15:39:00,059 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 2
[2020-11-24 15:39:00,060 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 209 states to 202 states and 206 transitions.
[2020-11-24 15:39:00,060 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 202
[2020-11-24 15:39:00,061 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 202
[2020-11-24 15:39:00,061 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 202 states and 206 transitions.
[2020-11-24 15:39:00,061 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 15:39:00,061 INFO  L728         BuchiCegarLoop]: Abstraction has 202 states and 206 transitions.
[2020-11-24 15:39:00,061 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 202 states and 206 transitions.
[2020-11-24 15:39:00,065 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 202 to 189.
[2020-11-24 15:39:00,065 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 189 states.
[2020-11-24 15:39:00,066 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 189 states to 189 states and 193 transitions.
[2020-11-24 15:39:00,066 INFO  L751         BuchiCegarLoop]: Abstraction has 189 states and 193 transitions.
[2020-11-24 15:39:00,066 INFO  L631         BuchiCegarLoop]: Abstraction has 189 states and 193 transitions.
[2020-11-24 15:39:00,066 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-24 15:39:00,066 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 189 states and 193 transitions.
[2020-11-24 15:39:00,066 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 15:39:00,066 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 15:39:00,067 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 15:39:00,067 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 15:39:00,067 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L2]                 success_transfer_BazToken0 := false;
[L2]                 call_transfer_BazToken0 := false;
[L2]     CALL        call main();
[L1937]              assume null == 0;
[L1938]  CALL        call this := FreshRefGenerator__success();
[L766]               havoc newRef;
[L767]               assume Alloc[newRef] == false;
[L768]               Alloc[newRef] := true;
[L769]               assume newRef != null;
[L1938]  RET         call this := FreshRefGenerator__success();
[L1939]              assume now >= 0;
[L1940]              assume DType[this] == BazToken;
[L1941]              assume !revert && gas >= 0;
[L1942]  CALL        call CorralChoice_BazToken(this);
[L1822]              havoc msgsender_MSG;
[L1823]              havoc msgvalue_MSG;
[L1824]              havoc choice;
[L1825]              havoc a_s23;
[L1826]              havoc b_s23;
[L1827]              havoc c_s23;
[L1828]              havoc a_s45;
[L1829]              havoc b_s45;
[L1830]              havoc c_s45;
[L1831]              havoc a_s73;
[L1832]              havoc b_s73;
[L1833]              havoc c_s73;
[L1834]              havoc a_s95;
[L1835]              havoc b_s95;
[L1836]              havoc c_s95;
[L1837]              havoc __ret_0_totalSupply;
[L1838]              havoc tokenOwner_s328;
[L1839]              havoc balance_s328;
[L1840]              havoc tokenOwner_s474;
[L1841]              havoc spender_s474;
[L1842]              havoc remaining_s474;
[L1843]              havoc to_s371;
[L1844]              havoc tokens_s371;
[L1845]              havoc success_s371;
[L1846]              havoc spender_s399;
[L1847]              havoc tokens_s399;
[L1848]              havoc success_s399;
[L1849]              havoc from_s458;
[L1850]              havoc to_s458;
[L1851]              havoc tokens_s458;
[L1852]              havoc success_s458;
[L1853]              havoc __ret_0_owner;
[L1854]              havoc __ret_0_newOwner;
[L1855]              havoc _newOwner_s217;
[L1856]              havoc __ret_0_symbol;
[L1857]              havoc __ret_0_name;
[L1858]              havoc __ret_0_decimals;
[L1859]              havoc __ret_0__totalSupply;
[L1860]              havoc spender_s517;
[L1861]              havoc tokens_s517;
[L1862]              havoc data_s517;
[L1863]              havoc success_s517;
[L1864]              havoc tokenAddress_s544;
[L1865]              havoc tokens_s544;
[L1866]              havoc success_s544;
[L1867]              havoc tmpNow;
[L1868]              havoc gas;
[L1869]              assume gas > 4000000 && gas <= 8000000;
[L1870]              tmpNow := now;
[L1871]              havoc now;
[L1872]              assume now > tmpNow;
[L1873]              assume msgsender_MSG != null;
[L1874]  COND FALSE  !(choice == 8)
[L1882]  COND FALSE  !(choice == 7)
[L1890]  COND FALSE  !(choice == 6)
[L1896]  COND FALSE  !(choice == 5)
[L1902]  COND FALSE  !(choice == 4)
[L1908]  COND TRUE   choice == 3
[L1909]              gas := gas - 21000;
[L1910]  COND TRUE   gas >= 0
[L1911]              assume tokens_s371 >= 0 && tokens_s371 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1912]              assume msgvalue_MSG == 0;
[L1913]  CALL        call success_s371 := transfer~address~uint256_BazToken(this, msgsender_MSG, msgvalue_MSG, to_s371, tokens_s371);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == to_s371 && tokens_s371 <= balances_BazToken[this][msgsender_MSG]) && tokens_s371 >= 0) && tokens_s371 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BazToken[this][to_s371] >= 0) && balances_BazToken[this][to_s371] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BazToken[this][msgsender_MSG] >= 0) && balances_BazToken[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_BazToken0 := true;
[L2]                 call_transfer_BazToken0 := false;
[L2]                 revert := revert_hold;
[L291]               havoc __exception;
[L292]               revert := false;
[L293]   COND TRUE   __exception
[L294]               __tmp__Balance := Balance;
[L295]               __tmp__DType := DType;
[L296]               __tmp__Alloc := Alloc;
[L297]               __tmp__balance_ADDR := balance_ADDR;
[L298]               __tmp__M_Ref_int := M_Ref_int;
[L299]               __tmp__sum_balances0 := sum_balances0;
[L300]               __tmp__alloc_allowed_BazToken_lvl0 := alloc_allowed_BazToken_lvl0;
[L301]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L302]               __tmp__sum_allowed1 := sum_allowed1;
[L303]               __tmp__Length := Length;
[L304]               __tmp__now := now;
[L305]               __tmp__owner_Owned := owner_Owned;
[L306]               __tmp__newOwner_Owned := newOwner_Owned;
[L307]               __tmp__symbol_BazToken := symbol_BazToken;
[L308]               __tmp__name_BazToken := name_BazToken;
[L309]               __tmp__decimals_BazToken := decimals_BazToken;
[L310]               __tmp___totalSupply_BazToken := _totalSupply_BazToken;
[L311]               __tmp__balances_BazToken := balances_BazToken;
[L312]               __tmp__allowed_BazToken := allowed_BazToken;
[L313]   CALL        call success_s371 := transfer~address~uint256_BazToken__fail(this, msgsender_MSG, msgvalue_MSG, to_s371, tokens_s371);
[L840]   COND TRUE   __tmp__DType[this] == BazToken
[L841]   CALL        call __var_2 := safeSub~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balances_BazToken[this][msgsender_MSG], tokens_s371);
[L792]   COND FALSE  !(!(b_s45 <= a_s45))
[L796]               c_s45 := (a_s45 - b_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L841]   RET         call __var_2 := safeSub~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balances_BazToken[this][msgsender_MSG], tokens_s371);
[L842]   COND TRUE   revert
[L313]   RET         call success_s371 := transfer~address~uint256_BazToken__fail(this, msgsender_MSG, msgvalue_MSG, to_s371, tokens_s371);
[L314]               assume revert || gas < 0;
[L1913]  RET         call success_s371 := transfer~address~uint256_BazToken(this, msgsender_MSG, msgvalue_MSG, to_s371, tokens_s371);
[L1942]  RET         call CorralChoice_BazToken(this);

Loop:
[L1942]        assume true;

[2020-11-24 15:39:00,069 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 15:39:00,069 INFO  L82        PathProgramCache]: Analyzing trace with hash -447946789, now seen corresponding path program 1 times
[2020-11-24 15:39:00,070 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 15:39:00,079 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 15:39:00,095 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 15:39:00,095 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 15:39:00,095 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [5] imperfect sequences [] total 5
[2020-11-24 15:39:00,095 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 15:39:00,095 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 5 interpolants.
[2020-11-24 15:39:00,096 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=9, Invalid=11, Unknown=0, NotChecked=0, Total=20
[2020-11-24 15:39:00,096 INFO  L87              Difference]: Start difference. First operand 189 states and 193 transitions. cyclomatic complexity: 5 Second operand 5 states.
[2020-11-24 15:39:00,110 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 15:39:00,110 INFO  L93              Difference]: Finished difference Result 200 states and 202 transitions.
[2020-11-24 15:39:00,111 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-24 15:39:00,111 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 200 states and 202 transitions.
[2020-11-24 15:39:00,112 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 2
[2020-11-24 15:39:00,112 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 200 states to 200 states and 202 transitions.
[2020-11-24 15:39:00,112 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 200
[2020-11-24 15:39:00,113 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 200
[2020-11-24 15:39:00,113 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 200 states and 202 transitions.
[2020-11-24 15:39:00,113 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 15:39:00,113 INFO  L728         BuchiCegarLoop]: Abstraction has 200 states and 202 transitions.
[2020-11-24 15:39:00,113 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 200 states and 202 transitions.
[2020-11-24 15:39:00,115 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 200 to 189.
[2020-11-24 15:39:00,115 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 189 states.
[2020-11-24 15:39:00,115 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 189 states to 189 states and 191 transitions.
[2020-11-24 15:39:00,115 INFO  L751         BuchiCegarLoop]: Abstraction has 189 states and 191 transitions.
[2020-11-24 15:39:00,115 INFO  L631         BuchiCegarLoop]: Abstraction has 189 states and 191 transitions.
[2020-11-24 15:39:00,115 INFO  L445         BuchiCegarLoop]: ======== Iteration 5============
[2020-11-24 15:39:00,115 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 189 states and 191 transitions.
[2020-11-24 15:39:00,116 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 15:39:00,116 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 15:39:00,116 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 15:39:00,117 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 15:39:00,117 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L2]                 success_transfer_BazToken0 := false;
[L2]                 call_transfer_BazToken0 := false;
[L2]     CALL        call main();
[L1937]              assume null == 0;
[L1938]  CALL        call this := FreshRefGenerator__success();
[L766]               havoc newRef;
[L767]               assume Alloc[newRef] == false;
[L768]               Alloc[newRef] := true;
[L769]               assume newRef != null;
[L1938]  RET         call this := FreshRefGenerator__success();
[L1939]              assume now >= 0;
[L1940]              assume DType[this] == BazToken;
[L1941]              assume !revert && gas >= 0;
[L1942]  CALL        call CorralChoice_BazToken(this);
[L1822]              havoc msgsender_MSG;
[L1823]              havoc msgvalue_MSG;
[L1824]              havoc choice;
[L1825]              havoc a_s23;
[L1826]              havoc b_s23;
[L1827]              havoc c_s23;
[L1828]              havoc a_s45;
[L1829]              havoc b_s45;
[L1830]              havoc c_s45;
[L1831]              havoc a_s73;
[L1832]              havoc b_s73;
[L1833]              havoc c_s73;
[L1834]              havoc a_s95;
[L1835]              havoc b_s95;
[L1836]              havoc c_s95;
[L1837]              havoc __ret_0_totalSupply;
[L1838]              havoc tokenOwner_s328;
[L1839]              havoc balance_s328;
[L1840]              havoc tokenOwner_s474;
[L1841]              havoc spender_s474;
[L1842]              havoc remaining_s474;
[L1843]              havoc to_s371;
[L1844]              havoc tokens_s371;
[L1845]              havoc success_s371;
[L1846]              havoc spender_s399;
[L1847]              havoc tokens_s399;
[L1848]              havoc success_s399;
[L1849]              havoc from_s458;
[L1850]              havoc to_s458;
[L1851]              havoc tokens_s458;
[L1852]              havoc success_s458;
[L1853]              havoc __ret_0_owner;
[L1854]              havoc __ret_0_newOwner;
[L1855]              havoc _newOwner_s217;
[L1856]              havoc __ret_0_symbol;
[L1857]              havoc __ret_0_name;
[L1858]              havoc __ret_0_decimals;
[L1859]              havoc __ret_0__totalSupply;
[L1860]              havoc spender_s517;
[L1861]              havoc tokens_s517;
[L1862]              havoc data_s517;
[L1863]              havoc success_s517;
[L1864]              havoc tokenAddress_s544;
[L1865]              havoc tokens_s544;
[L1866]              havoc success_s544;
[L1867]              havoc tmpNow;
[L1868]              havoc gas;
[L1869]              assume gas > 4000000 && gas <= 8000000;
[L1870]              tmpNow := now;
[L1871]              havoc now;
[L1872]              assume now > tmpNow;
[L1873]              assume msgsender_MSG != null;
[L1874]  COND FALSE  !(choice == 8)
[L1882]  COND FALSE  !(choice == 7)
[L1890]  COND FALSE  !(choice == 6)
[L1896]  COND FALSE  !(choice == 5)
[L1902]  COND FALSE  !(choice == 4)
[L1908]  COND TRUE   choice == 3
[L1909]              gas := gas - 21000;
[L1910]  COND TRUE   gas >= 0
[L1911]              assume tokens_s371 >= 0 && tokens_s371 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1912]              assume msgvalue_MSG == 0;
[L1913]  CALL        call success_s371 := transfer~address~uint256_BazToken(this, msgsender_MSG, msgvalue_MSG, to_s371, tokens_s371);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == to_s371 && tokens_s371 <= balances_BazToken[this][msgsender_MSG]) && tokens_s371 >= 0) && tokens_s371 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BazToken[this][to_s371] >= 0) && balances_BazToken[this][to_s371] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BazToken[this][msgsender_MSG] >= 0) && balances_BazToken[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_BazToken0 := true;
[L2]                 call_transfer_BazToken0 := false;
[L2]                 revert := revert_hold;
[L291]               havoc __exception;
[L292]               revert := false;
[L293]   COND FALSE  !(__exception)
[L316]   CALL        call success_s371 := transfer~address~uint256_BazToken__success(this, msgsender_MSG, msgvalue_MSG, to_s371, tokens_s371);
[L870]   COND TRUE   DType[this] == BazToken
[L871]   CALL        call __var_2 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_BazToken[this][msgsender_MSG], tokens_s371);
[L801]   COND FALSE  !(!(b_s45 <= a_s45))
[L805]               c_s45 := (a_s45 - b_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L871]   RET         call __var_2 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_BazToken[this][msgsender_MSG], tokens_s371);
[L872]   COND FALSE  !(revert)
[L878]               sum_balances0[this] := sum_balances0[this] - balances_BazToken[this][msgsender_MSG];
[L879]               balances_BazToken[this][msgsender_MSG] := __var_2;
[L880]               sum_balances0[this] := sum_balances0[this] + balances_BazToken[this][msgsender_MSG];
[L881]   COND TRUE   DType[this] == BazToken
[L882]   CALL        call __var_3 := safeAdd~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_BazToken[this][to_s371], tokens_s371);
[L783]               c_s23 := (a_s23 + b_s23) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L784]   COND FALSE  !(!(c_s23 >= a_s23))
[L882]   RET         call __var_3 := safeAdd~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_BazToken[this][to_s371], tokens_s371);
[L883]   COND FALSE  !(revert)
[L889]               sum_balances0[this] := sum_balances0[this] - balances_BazToken[this][to_s371];
[L890]               balances_BazToken[this][to_s371] := __var_3;
[L891]               sum_balances0[this] := sum_balances0[this] + balances_BazToken[this][to_s371];
[L892]               assert { :EventEmitted "Transfer_BazToken" } true;
[L893]               success_s371 := true;
[L316]   RET         call success_s371 := transfer~address~uint256_BazToken__success(this, msgsender_MSG, msgvalue_MSG, to_s371, tokens_s371);
[L317]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !((((((((success_s371 == true && _totalSupply_BazToken[this] == old(_totalSupply_BazToken[this])) && balances_BazToken[this] == old(balances_BazToken[this])) && allowed_BazToken[this] == old(allowed_BazToken[this])) && symbol_BazToken[this] == old(symbol_BazToken[this])) && name_BazToken[this] == old(name_BazToken[this])) && decimals_BazToken[this] == old(decimals_BazToken[this])) && owner_Owned[this] == old(owner_Owned[this])) && newOwner_Owned[this] == old(newOwner_Owned[this]));
[L2]                 revert := revert_hold;
[L1913]  RET         call success_s371 := transfer~address~uint256_BazToken(this, msgsender_MSG, msgvalue_MSG, to_s371, tokens_s371);
[L1942]  RET         call CorralChoice_BazToken(this);

Loop:
[L1942]        assume true;

[2020-11-24 15:39:00,118 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 15:39:00,118 INFO  L82        PathProgramCache]: Analyzing trace with hash 1264358849, now seen corresponding path program 1 times
[2020-11-24 15:39:00,119 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 15:39:00,143 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 15:39:00,289 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 15:39:00,289 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 15:39:00,289 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [14] imperfect sequences [] total 14
[2020-11-24 15:39:00,289 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 15:39:00,289 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 14 interpolants.
[2020-11-24 15:39:00,289 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=29, Invalid=153, Unknown=0, NotChecked=0, Total=182
[2020-11-24 15:39:00,289 INFO  L87              Difference]: Start difference. First operand 189 states and 191 transitions. cyclomatic complexity: 3 Second operand 14 states.
[2020-11-24 15:39:00,613 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 15:39:00,613 INFO  L93              Difference]: Finished difference Result 188 states and 189 transitions.
[2020-11-24 15:39:00,613 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 13 states. 
[2020-11-24 15:39:00,614 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 188 states and 189 transitions.
[2020-11-24 15:39:00,615 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 15:39:00,616 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 188 states to 153 states and 154 transitions.
[2020-11-24 15:39:00,616 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 153
[2020-11-24 15:39:00,616 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 153
[2020-11-24 15:39:00,616 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 153 states and 154 transitions.
[2020-11-24 15:39:00,617 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 15:39:00,617 INFO  L728         BuchiCegarLoop]: Abstraction has 153 states and 154 transitions.
[2020-11-24 15:39:00,617 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 153 states and 154 transitions.
[2020-11-24 15:39:00,619 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 153 to 153.
[2020-11-24 15:39:00,619 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 153 states.
[2020-11-24 15:39:00,619 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 153 states to 153 states and 154 transitions.
[2020-11-24 15:39:00,620 INFO  L751         BuchiCegarLoop]: Abstraction has 153 states and 154 transitions.
[2020-11-24 15:39:00,620 INFO  L631         BuchiCegarLoop]: Abstraction has 153 states and 154 transitions.
[2020-11-24 15:39:00,620 INFO  L445         BuchiCegarLoop]: ======== Iteration 6============
[2020-11-24 15:39:00,620 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 153 states and 154 transitions.
[2020-11-24 15:39:00,621 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 15:39:00,622 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 15:39:00,622 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 15:39:00,623 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 15:39:00,623 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L2]                 success_transfer_BazToken0 := false;
[L2]                 call_transfer_BazToken0 := false;
[L2]     CALL        call main();
[L1937]              assume null == 0;
[L1938]  CALL        call this := FreshRefGenerator__success();
[L766]               havoc newRef;
[L767]               assume Alloc[newRef] == false;
[L768]               Alloc[newRef] := true;
[L769]               assume newRef != null;
[L1938]  RET         call this := FreshRefGenerator__success();
[L1939]              assume now >= 0;
[L1940]              assume DType[this] == BazToken;
[L1941]              assume !revert && gas >= 0;
[L1942]  CALL        call CorralChoice_BazToken(this);
[L1822]              havoc msgsender_MSG;
[L1823]              havoc msgvalue_MSG;
[L1824]              havoc choice;
[L1825]              havoc a_s23;
[L1826]              havoc b_s23;
[L1827]              havoc c_s23;
[L1828]              havoc a_s45;
[L1829]              havoc b_s45;
[L1830]              havoc c_s45;
[L1831]              havoc a_s73;
[L1832]              havoc b_s73;
[L1833]              havoc c_s73;
[L1834]              havoc a_s95;
[L1835]              havoc b_s95;
[L1836]              havoc c_s95;
[L1837]              havoc __ret_0_totalSupply;
[L1838]              havoc tokenOwner_s328;
[L1839]              havoc balance_s328;
[L1840]              havoc tokenOwner_s474;
[L1841]              havoc spender_s474;
[L1842]              havoc remaining_s474;
[L1843]              havoc to_s371;
[L1844]              havoc tokens_s371;
[L1845]              havoc success_s371;
[L1846]              havoc spender_s399;
[L1847]              havoc tokens_s399;
[L1848]              havoc success_s399;
[L1849]              havoc from_s458;
[L1850]              havoc to_s458;
[L1851]              havoc tokens_s458;
[L1852]              havoc success_s458;
[L1853]              havoc __ret_0_owner;
[L1854]              havoc __ret_0_newOwner;
[L1855]              havoc _newOwner_s217;
[L1856]              havoc __ret_0_symbol;
[L1857]              havoc __ret_0_name;
[L1858]              havoc __ret_0_decimals;
[L1859]              havoc __ret_0__totalSupply;
[L1860]              havoc spender_s517;
[L1861]              havoc tokens_s517;
[L1862]              havoc data_s517;
[L1863]              havoc success_s517;
[L1864]              havoc tokenAddress_s544;
[L1865]              havoc tokens_s544;
[L1866]              havoc success_s544;
[L1867]              havoc tmpNow;
[L1868]              havoc gas;
[L1869]              assume gas > 4000000 && gas <= 8000000;
[L1870]              tmpNow := now;
[L1871]              havoc now;
[L1872]              assume now > tmpNow;
[L1873]              assume msgsender_MSG != null;
[L1874]  COND FALSE  !(choice == 8)
[L1882]  COND FALSE  !(choice == 7)
[L1890]  COND FALSE  !(choice == 6)
[L1896]  COND FALSE  !(choice == 5)
[L1902]  COND FALSE  !(choice == 4)
[L1908]  COND TRUE   choice == 3
[L1909]              gas := gas - 21000;
[L1910]  COND TRUE   gas >= 0
[L1911]              assume tokens_s371 >= 0 && tokens_s371 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1912]              assume msgvalue_MSG == 0;
[L1913]  CALL        call success_s371 := transfer~address~uint256_BazToken(this, msgsender_MSG, msgvalue_MSG, to_s371, tokens_s371);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == to_s371 && tokens_s371 <= balances_BazToken[this][msgsender_MSG]) && tokens_s371 >= 0) && tokens_s371 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BazToken[this][to_s371] >= 0) && balances_BazToken[this][to_s371] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BazToken[this][msgsender_MSG] >= 0) && balances_BazToken[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_BazToken0 := true;
[L2]                 call_transfer_BazToken0 := false;
[L2]                 revert := revert_hold;
[L291]               havoc __exception;
[L292]               revert := false;
[L293]   COND TRUE   __exception
[L294]               __tmp__Balance := Balance;
[L295]               __tmp__DType := DType;
[L296]               __tmp__Alloc := Alloc;
[L297]               __tmp__balance_ADDR := balance_ADDR;
[L298]               __tmp__M_Ref_int := M_Ref_int;
[L299]               __tmp__sum_balances0 := sum_balances0;
[L300]               __tmp__alloc_allowed_BazToken_lvl0 := alloc_allowed_BazToken_lvl0;
[L301]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L302]               __tmp__sum_allowed1 := sum_allowed1;
[L303]               __tmp__Length := Length;
[L304]               __tmp__now := now;
[L305]               __tmp__owner_Owned := owner_Owned;
[L306]               __tmp__newOwner_Owned := newOwner_Owned;
[L307]               __tmp__symbol_BazToken := symbol_BazToken;
[L308]               __tmp__name_BazToken := name_BazToken;
[L309]               __tmp__decimals_BazToken := decimals_BazToken;
[L310]               __tmp___totalSupply_BazToken := _totalSupply_BazToken;
[L311]               __tmp__balances_BazToken := balances_BazToken;
[L312]               __tmp__allowed_BazToken := allowed_BazToken;
[L313]   CALL        call success_s371 := transfer~address~uint256_BazToken__fail(this, msgsender_MSG, msgvalue_MSG, to_s371, tokens_s371);
[L840]   COND TRUE   __tmp__DType[this] == BazToken
[L841]   CALL        call __var_2 := safeSub~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balances_BazToken[this][msgsender_MSG], tokens_s371);
[L792]   COND FALSE  !(!(b_s45 <= a_s45))
[L796]               c_s45 := (a_s45 - b_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L841]   RET         call __var_2 := safeSub~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balances_BazToken[this][msgsender_MSG], tokens_s371);
[L842]   COND FALSE  !(revert)
[L848]               __tmp__sum_balances0[this] := __tmp__sum_balances0[this] - __tmp__balances_BazToken[this][msgsender_MSG];
[L849]               __tmp__balances_BazToken[this][msgsender_MSG] := __var_2;
[L850]               __tmp__sum_balances0[this] := __tmp__sum_balances0[this] + __tmp__balances_BazToken[this][msgsender_MSG];
[L851]   COND TRUE   __tmp__DType[this] == BazToken
[L852]   CALL        call __var_3 := safeAdd~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balances_BazToken[this][to_s371], tokens_s371);
[L774]               c_s23 := (a_s23 + b_s23) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L775]   COND TRUE   !(c_s23 >= a_s23)
[L776]               revert := true;
[L852]   RET         call __var_3 := safeAdd~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balances_BazToken[this][to_s371], tokens_s371);
[L853]   COND TRUE   revert
[L313]   RET         call success_s371 := transfer~address~uint256_BazToken__fail(this, msgsender_MSG, msgvalue_MSG, to_s371, tokens_s371);
[L314]               assume revert || gas < 0;
[L1913]  RET         call success_s371 := transfer~address~uint256_BazToken(this, msgsender_MSG, msgvalue_MSG, to_s371, tokens_s371);
[L1942]  RET         call CorralChoice_BazToken(this);

Loop:
[L1942]        assume true;

[2020-11-24 15:39:00,625 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 15:39:00,625 INFO  L82        PathProgramCache]: Analyzing trace with hash 214585919, now seen corresponding path program 1 times
[2020-11-24 15:39:00,626 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 15:39:00,638 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 15:39:00,743 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 15:39:00,743 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 15:39:00,743 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [12] imperfect sequences [] total 12
[2020-11-24 15:39:00,744 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 15:39:00,744 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 12 interpolants.
[2020-11-24 15:39:00,744 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=23, Invalid=109, Unknown=0, NotChecked=0, Total=132
[2020-11-24 15:39:00,744 INFO  L87              Difference]: Start difference. First operand 153 states and 154 transitions. cyclomatic complexity: 2 Second operand 12 states.
[2020-11-24 15:39:00,854 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 15:39:00,854 INFO  L93              Difference]: Finished difference Result 155 states and 155 transitions.
[2020-11-24 15:39:00,855 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 13 states. 
[2020-11-24 15:39:00,855 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 155 states and 155 transitions.
[2020-11-24 15:39:00,855 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 15:39:00,856 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 155 states to 148 states and 148 transitions.
[2020-11-24 15:39:00,856 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 148
[2020-11-24 15:39:00,856 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 148
[2020-11-24 15:39:00,856 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 148 states and 148 transitions.
[2020-11-24 15:39:00,857 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 15:39:00,857 INFO  L728         BuchiCegarLoop]: Abstraction has 148 states and 148 transitions.
[2020-11-24 15:39:00,857 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 148 states and 148 transitions.
[2020-11-24 15:39:00,858 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 148 to 148.
[2020-11-24 15:39:00,858 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 148 states.
[2020-11-24 15:39:00,858 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 148 states to 148 states and 148 transitions.
[2020-11-24 15:39:00,858 INFO  L751         BuchiCegarLoop]: Abstraction has 148 states and 148 transitions.
[2020-11-24 15:39:00,858 INFO  L631         BuchiCegarLoop]: Abstraction has 148 states and 148 transitions.
[2020-11-24 15:39:00,858 INFO  L445         BuchiCegarLoop]: ======== Iteration 7============
[2020-11-24 15:39:00,858 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 148 states and 148 transitions.
[2020-11-24 15:39:00,859 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 15:39:00,859 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 15:39:00,859 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 15:39:00,859 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 15:39:00,859 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L2]                 success_transfer_BazToken0 := false;
[L2]                 call_transfer_BazToken0 := false;
[L2]     CALL        call main();
[L1937]              assume null == 0;
[L1938]  CALL        call this := FreshRefGenerator__success();
[L766]               havoc newRef;
[L767]               assume Alloc[newRef] == false;
[L768]               Alloc[newRef] := true;
[L769]               assume newRef != null;
[L1938]  RET         call this := FreshRefGenerator__success();
[L1939]              assume now >= 0;
[L1940]              assume DType[this] == BazToken;
[L1941]              assume !revert && gas >= 0;
[L1942]  CALL        call CorralChoice_BazToken(this);
[L1822]              havoc msgsender_MSG;
[L1823]              havoc msgvalue_MSG;
[L1824]              havoc choice;
[L1825]              havoc a_s23;
[L1826]              havoc b_s23;
[L1827]              havoc c_s23;
[L1828]              havoc a_s45;
[L1829]              havoc b_s45;
[L1830]              havoc c_s45;
[L1831]              havoc a_s73;
[L1832]              havoc b_s73;
[L1833]              havoc c_s73;
[L1834]              havoc a_s95;
[L1835]              havoc b_s95;
[L1836]              havoc c_s95;
[L1837]              havoc __ret_0_totalSupply;
[L1838]              havoc tokenOwner_s328;
[L1839]              havoc balance_s328;
[L1840]              havoc tokenOwner_s474;
[L1841]              havoc spender_s474;
[L1842]              havoc remaining_s474;
[L1843]              havoc to_s371;
[L1844]              havoc tokens_s371;
[L1845]              havoc success_s371;
[L1846]              havoc spender_s399;
[L1847]              havoc tokens_s399;
[L1848]              havoc success_s399;
[L1849]              havoc from_s458;
[L1850]              havoc to_s458;
[L1851]              havoc tokens_s458;
[L1852]              havoc success_s458;
[L1853]              havoc __ret_0_owner;
[L1854]              havoc __ret_0_newOwner;
[L1855]              havoc _newOwner_s217;
[L1856]              havoc __ret_0_symbol;
[L1857]              havoc __ret_0_name;
[L1858]              havoc __ret_0_decimals;
[L1859]              havoc __ret_0__totalSupply;
[L1860]              havoc spender_s517;
[L1861]              havoc tokens_s517;
[L1862]              havoc data_s517;
[L1863]              havoc success_s517;
[L1864]              havoc tokenAddress_s544;
[L1865]              havoc tokens_s544;
[L1866]              havoc success_s544;
[L1867]              havoc tmpNow;
[L1868]              havoc gas;
[L1869]              assume gas > 4000000 && gas <= 8000000;
[L1870]              tmpNow := now;
[L1871]              havoc now;
[L1872]              assume now > tmpNow;
[L1873]              assume msgsender_MSG != null;
[L1874]  COND FALSE  !(choice == 8)
[L1882]  COND FALSE  !(choice == 7)
[L1890]  COND FALSE  !(choice == 6)
[L1896]  COND FALSE  !(choice == 5)
[L1902]  COND FALSE  !(choice == 4)
[L1908]  COND TRUE   choice == 3
[L1909]              gas := gas - 21000;
[L1910]  COND TRUE   gas >= 0
[L1911]              assume tokens_s371 >= 0 && tokens_s371 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1912]              assume msgvalue_MSG == 0;
[L1913]  CALL        call success_s371 := transfer~address~uint256_BazToken(this, msgsender_MSG, msgvalue_MSG, to_s371, tokens_s371);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == to_s371 && tokens_s371 <= balances_BazToken[this][msgsender_MSG]) && tokens_s371 >= 0) && tokens_s371 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BazToken[this][to_s371] >= 0) && balances_BazToken[this][to_s371] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BazToken[this][msgsender_MSG] >= 0) && balances_BazToken[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_BazToken0 := true;
[L2]                 call_transfer_BazToken0 := false;
[L2]                 revert := revert_hold;
[L291]               havoc __exception;
[L292]               revert := false;
[L293]   COND TRUE   __exception
[L294]               __tmp__Balance := Balance;
[L295]               __tmp__DType := DType;
[L296]               __tmp__Alloc := Alloc;
[L297]               __tmp__balance_ADDR := balance_ADDR;
[L298]               __tmp__M_Ref_int := M_Ref_int;
[L299]               __tmp__sum_balances0 := sum_balances0;
[L300]               __tmp__alloc_allowed_BazToken_lvl0 := alloc_allowed_BazToken_lvl0;
[L301]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L302]               __tmp__sum_allowed1 := sum_allowed1;
[L303]               __tmp__Length := Length;
[L304]               __tmp__now := now;
[L305]               __tmp__owner_Owned := owner_Owned;
[L306]               __tmp__newOwner_Owned := newOwner_Owned;
[L307]               __tmp__symbol_BazToken := symbol_BazToken;
[L308]               __tmp__name_BazToken := name_BazToken;
[L309]               __tmp__decimals_BazToken := decimals_BazToken;
[L310]               __tmp___totalSupply_BazToken := _totalSupply_BazToken;
[L311]               __tmp__balances_BazToken := balances_BazToken;
[L312]               __tmp__allowed_BazToken := allowed_BazToken;
[L313]   CALL        call success_s371 := transfer~address~uint256_BazToken__fail(this, msgsender_MSG, msgvalue_MSG, to_s371, tokens_s371);
[L840]   COND TRUE   __tmp__DType[this] == BazToken
[L841]   CALL        call __var_2 := safeSub~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balances_BazToken[this][msgsender_MSG], tokens_s371);
[L792]   COND FALSE  !(!(b_s45 <= a_s45))
[L796]               c_s45 := (a_s45 - b_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L841]   RET         call __var_2 := safeSub~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balances_BazToken[this][msgsender_MSG], tokens_s371);
[L842]   COND FALSE  !(revert)
[L848]               __tmp__sum_balances0[this] := __tmp__sum_balances0[this] - __tmp__balances_BazToken[this][msgsender_MSG];
[L849]               __tmp__balances_BazToken[this][msgsender_MSG] := __var_2;
[L850]               __tmp__sum_balances0[this] := __tmp__sum_balances0[this] + __tmp__balances_BazToken[this][msgsender_MSG];
[L851]   COND TRUE   __tmp__DType[this] == BazToken
[L852]   CALL        call __var_3 := safeAdd~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balances_BazToken[this][to_s371], tokens_s371);
[L774]               c_s23 := (a_s23 + b_s23) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L775]   COND FALSE  !(!(c_s23 >= a_s23))
[L852]   RET         call __var_3 := safeAdd~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balances_BazToken[this][to_s371], tokens_s371);
[L853]   COND FALSE  !(revert)
[L859]               __tmp__sum_balances0[this] := __tmp__sum_balances0[this] - __tmp__balances_BazToken[this][to_s371];
[L860]               __tmp__balances_BazToken[this][to_s371] := __var_3;
[L861]               __tmp__sum_balances0[this] := __tmp__sum_balances0[this] + __tmp__balances_BazToken[this][to_s371];
[L862]               success_s371 := true;
[L313]   RET         call success_s371 := transfer~address~uint256_BazToken__fail(this, msgsender_MSG, msgvalue_MSG, to_s371, tokens_s371);
[L314]               assume revert || gas < 0;
[L1913]  RET         call success_s371 := transfer~address~uint256_BazToken(this, msgsender_MSG, msgvalue_MSG, to_s371, tokens_s371);
[L1942]  RET         call CorralChoice_BazToken(this);

Loop:
[L1942]        assume true;

[2020-11-24 15:39:00,861 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 15:39:00,861 INFO  L82        PathProgramCache]: Analyzing trace with hash 610964015, now seen corresponding path program 1 times
[2020-11-24 15:39:00,862 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 15:39:00,867 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 15:39:00,881 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 15:39:00,881 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 15:39:00,881 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [5] imperfect sequences [] total 5
[2020-11-24 15:39:00,881 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 15:39:00,882 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 5 interpolants.
[2020-11-24 15:39:00,882 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=7, Invalid=13, Unknown=0, NotChecked=0, Total=20
[2020-11-24 15:39:00,882 INFO  L87              Difference]: Start difference. First operand 148 states and 148 transitions. cyclomatic complexity: 1 Second operand 5 states.
[2020-11-24 15:39:00,888 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 15:39:00,889 INFO  L93              Difference]: Finished difference Result 141 states and 140 transitions.
[2020-11-24 15:39:00,889 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 5 states. 
[2020-11-24 15:39:00,889 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 141 states and 140 transitions.
[2020-11-24 15:39:00,890 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-24 15:39:00,890 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 141 states to 0 states and 0 transitions.
[2020-11-24 15:39:00,890 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 0
[2020-11-24 15:39:00,890 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 0
[2020-11-24 15:39:00,890 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 0 states and 0 transitions.
[2020-11-24 15:39:00,890 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 15:39:00,890 INFO  L728         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-24 15:39:00,890 INFO  L751         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-24 15:39:00,890 INFO  L631         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-24 15:39:00,890 INFO  L445         BuchiCegarLoop]: ======== Iteration 8============
[2020-11-24 15:39:00,890 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 0 states and 0 transitions.
[2020-11-24 15:39:00,890 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-24 15:39:00,891 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is true
[2020-11-24 15:39:00,895 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 24.11 03:39:00 BasicIcfg
[2020-11-24 15:39:00,895 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-24 15:39:00,895 INFO  L168              Benchmark]: Toolchain (without parser) took 3266.07 ms. Allocated memory was 1.0 GB in the beginning and 1.3 GB in the end (delta: 296.7 MB). Free memory was 940.6 MB in the beginning and 1.2 GB in the end (delta: -275.4 MB). Peak memory consumption was 21.4 MB. Max. memory is 15.3 GB.
[2020-11-24 15:39:00,897 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.16 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-24 15:39:00,897 INFO  L168              Benchmark]: Boogie Preprocessor took 75.35 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 935.2 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-24 15:39:00,897 INFO  L168              Benchmark]: UtopiaSpecLang took 49.19 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 929.8 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-24 15:39:00,898 INFO  L168              Benchmark]: Boogie Printer took 10.04 ms. Allocated memory is still 1.0 GB. Free memory is still 929.8 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-24 15:39:00,898 INFO  L168              Benchmark]: RCFGBuilder took 558.49 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 881.5 MB in the end (delta: 48.3 MB). Peak memory consumption was 48.3 MB. Max. memory is 15.3 GB.
[2020-11-24 15:39:00,898 INFO  L168              Benchmark]: UtopiaLTL2Aut took 39.80 ms. Allocated memory is still 1.0 GB. Free memory was 881.5 MB in the beginning and 872.5 MB in the end (delta: 8.9 MB). Peak memory consumption was 8.9 MB. Max. memory is 15.3 GB.
[2020-11-24 15:39:00,899 INFO  L168              Benchmark]: BÃ¼chi Program Product took 911.57 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 48.2 MB). Free memory was 872.5 MB in the beginning and 933.9 MB in the end (delta: -61.3 MB). Peak memory consumption was 156.1 MB. Max. memory is 15.3 GB.
[2020-11-24 15:39:00,899 INFO  L168              Benchmark]: BlockEncodingV2 took 78.72 ms. Allocated memory is still 1.1 GB. Free memory was 933.9 MB in the beginning and 899.8 MB in the end (delta: 34.0 MB). Peak memory consumption was 34.0 MB. Max. memory is 15.3 GB.
[2020-11-24 15:39:00,900 INFO  L168              Benchmark]: BuchiAutomizer took 1539.87 ms. Allocated memory was 1.1 GB in the beginning and 1.3 GB in the end (delta: 248.5 MB). Free memory was 899.8 MB in the beginning and 1.2 GB in the end (delta: -316.1 MB). There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-24 15:39:00,902 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    1592 locations, 2709 edges
  - StatisticsResult: Encoded RCFG
    1542 locations, 2579 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.16 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 75.35 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 935.2 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 49.19 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 929.8 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 10.04 ms. Allocated memory is still 1.0 GB. Free memory is still 929.8 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * RCFGBuilder took 558.49 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 881.5 MB in the end (delta: 48.3 MB). Peak memory consumption was 48.3 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 39.80 ms. Allocated memory is still 1.0 GB. Free memory was 881.5 MB in the beginning and 872.5 MB in the end (delta: 8.9 MB). Peak memory consumption was 8.9 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 911.57 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 48.2 MB). Free memory was 872.5 MB in the beginning and 933.9 MB in the end (delta: -61.3 MB). Peak memory consumption was 156.1 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 78.72 ms. Allocated memory is still 1.1 GB. Free memory was 933.9 MB in the beginning and 899.8 MB in the end (delta: 34.0 MB). Peak memory consumption was 34.0 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 1539.87 ms. Allocated memory was 1.1 GB in the beginning and 1.3 GB in the end (delta: 248.5 MB). Free memory was 899.8 MB in the beginning and 1.2 GB in the end (delta: -316.1 MB). There was no memory consumed. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    685 locations, 840 edges
  - StatisticsResult: BuchiProgram size
    1592 locations, 2709 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 7 terminating modules (7 trivial, 0 deterministic, 0 nondeterministic). 7 modules have a trivial ranking function, the largest among these consists of 14 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 1.5s and 8 iterations.  TraceHistogramMax:1. Analysis of lassos took 0.5s. Construction of modules took 0.3s. BÃ¼chi inclusion checks took 0.4s. Highest rank in rank-based complementation 0. Minimization of det autom 7. Minimization of nondet autom 0. Automata minimization 0.0s AutomataMinimizationTime, 6 MinimizatonAttempts, 35 StatesRemovedByMinimization, 3 NontrivialMinimizations. Non-live state removal took 0.0s Buchi closure took 0.0s. Biggest automaton had 194 states and ocurred in iteration 2.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 1731 SDtfs, 1601 SDslu, 3737 SDs, 0 SdLazy, 1380 SolverSat, 574 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 0.3s Time	LassoAnalysisResults: nont0 unkn0 SFLI0 SFLT0 conc0 concLT0 SILN0 SILU7 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - AllSpecificationsHoldResult: All specifications hold
    Buchi Automizer proved that the LTL property ! ( ( []( (call_transfer_(success_transfer_BazToken0)azToken0) ==> ( <>(success_transfer_BazToken0) ) ) )) holds
RESULT: Ultimate proved your program to be correct!
Received shutdown request...
