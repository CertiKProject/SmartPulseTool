This is Ultimate 0.1.24-f1553f5-m
[2020-11-28 15:31:02,365 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-28 15:31:02,367 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-28 15:31:02,376 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-28 15:31:02,377 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-28 15:31:02,377 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-28 15:31:02,378 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-28 15:31:02,379 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-28 15:31:02,381 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-28 15:31:02,381 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-28 15:31:02,382 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-28 15:31:02,382 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-28 15:31:02,383 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-28 15:31:02,383 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-28 15:31:02,384 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-28 15:31:02,385 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-28 15:31:02,385 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-28 15:31:02,386 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-28 15:31:02,388 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-28 15:31:02,389 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-28 15:31:02,390 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-28 15:31:02,390 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-28 15:31:02,392 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-28 15:31:02,392 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-28 15:31:02,392 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-28 15:31:02,393 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-28 15:31:02,393 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-28 15:31:02,394 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-28 15:31:02,394 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-28 15:31:02,394 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-28 15:31:02,394 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-28 15:31:02,395 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-28 15:31:02,395 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-28 15:31:02,396 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-28 15:31:02,396 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-28 15:31:02,396 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-28 15:31:02,397 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-28 15:31:02,397 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-28 15:31:02,397 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-28 15:31:02,398 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-28 15:31:02,398 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-28 15:31:02,398 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-28 15:31:02,408 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-28 15:31:02,409 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-28 15:31:02,410 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-28 15:31:02,410 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-28 15:31:02,410 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-28 15:31:02,411 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-28 15:31:02,411 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-28 15:31:02,411 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-28 15:31:02,411 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-28 15:31:02,411 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-28 15:31:02,412 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-28 15:31:02,412 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-28 15:31:02,412 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-28 15:31:02,412 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-28 15:31:02,412 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-28 15:31:02,412 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-28 15:31:02,413 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-28 15:31:02,413 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-28 15:31:02,413 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-28 15:31:02,413 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-28 15:31:02,413 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-28 15:31:02,413 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-28 15:31:02,414 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-28 15:31:02,414 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-28 15:31:02,414 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-28 15:31:02,414 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-28 15:31:02,438 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-28 15:31:02,450 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-28 15:31:02,453 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-28 15:31:02,454 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-28 15:31:02,454 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-28 15:31:02,454 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/_0xMoneroToken_0x035df12e0f3ac6671126525f1015e47d79dfeddf_transfer-self.bpl
[2020-11-28 15:31:02,455 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/_0xMoneroToken_0x035df12e0f3ac6671126525f1015e47d79dfeddf_transfer-self.bpl'
[2020-11-28 15:31:02,514 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-28 15:31:02,515 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-28 15:31:02,515 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-28 15:31:02,515 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-28 15:31:02,515 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-28 15:31:02,526 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "_0xMoneroToken_0x035df12e0f3ac6671126525f1015e47d79dfeddf_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 28.11 03:31:02" (1/1) ...
[2020-11-28 15:31:02,526 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "_0xMoneroToken_0x035df12e0f3ac6671126525f1015e47d79dfeddf_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 28.11 03:31:02" (1/1) ...
[2020-11-28 15:31:02,541 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "_0xMoneroToken_0x035df12e0f3ac6671126525f1015e47d79dfeddf_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 28.11 03:31:02" (1/1) ...
[2020-11-28 15:31:02,542 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "_0xMoneroToken_0x035df12e0f3ac6671126525f1015e47d79dfeddf_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 28.11 03:31:02" (1/1) ...
[2020-11-28 15:31:02,556 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "_0xMoneroToken_0x035df12e0f3ac6671126525f1015e47d79dfeddf_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 28.11 03:31:02" (1/1) ...
[2020-11-28 15:31:02,561 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "_0xMoneroToken_0x035df12e0f3ac6671126525f1015e47d79dfeddf_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 28.11 03:31:02" (1/1) ...
[2020-11-28 15:31:02,565 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "_0xMoneroToken_0x035df12e0f3ac6671126525f1015e47d79dfeddf_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 28.11 03:31:02" (1/1) ...
[2020-11-28 15:31:02,571 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-28 15:31:02,571 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-28 15:31:02,572 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-28 15:31:02,573 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-28 15:31:02,577 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "_0xMoneroToken_0x035df12e0f3ac6671126525f1015e47d79dfeddf_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 28.11 03:31:02" (1/1) ...
[2020-11-28 15:31:02,594 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(_0xMoneroToken.transfer(to, value), msg.sender == to && value <= balances__0xMoneroToken[this][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances__0xMoneroToken[this][to] >= 0 && balances__0xMoneroToken[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances__0xMoneroToken[this][msg.sender] >= 0 &&  balances__0xMoneroToken[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(_0xMoneroToken.transfer(to, value), return == true && _totalSupply__0xMoneroToken[this] == old(_totalSupply__0xMoneroToken[this]) && balances__0xMoneroToken[this] == old(balances__0xMoneroToken[this]) && allowed__0xMoneroToken[this] == old(allowed__0xMoneroToken[this]) && symbol__0xMoneroToken[this] == old(symbol__0xMoneroToken[this]) && name__0xMoneroToken[this] == old(name__0xMoneroToken[this]) && decimals__0xMoneroToken[this] == old(decimals__0xMoneroToken[this]) && latestDifficultyPeriodStarted__0xMoneroToken[this] == old(latestDifficultyPeriodStarted__0xMoneroToken[this]) && epochCount__0xMoneroToken[this] == old(epochCount__0xMoneroToken[this]) && _BLOCKS_PER_READJUSTMENT__0xMoneroToken[this] == old(_BLOCKS_PER_READJUSTMENT__0xMoneroToken[this]) && _MINIMUM_TARGET__0xMoneroToken[this] == old(_MINIMUM_TARGET__0xMoneroToken[this]) && _MAXIMUM_TARGET__0xMoneroToken[this] == old(_MAXIMUM_TARGET__0xMoneroToken[this]) && miningTarget__0xMoneroToken[this] == old(miningTarget__0xMoneroToken[this]) && challengeNumber__0xMoneroToken[this] == old(challengeNumber__0xMoneroToken[this]) && rewardEra__0xMoneroToken[this] == old(rewardEra__0xMoneroToken[this]) && maxSupplyForEra__0xMoneroToken[this] == old(maxSupplyForEra__0xMoneroToken[this]) && lastRewardTo__0xMoneroToken[this] == old(lastRewardTo__0xMoneroToken[this]) && lastRewardAmount__0xMoneroToken[this] == old(lastRewardAmount__0xMoneroToken[this]) && lastRewardEthBlockNumber__0xMoneroToken[this] == old(lastRewardEthBlockNumber__0xMoneroToken[this]) && locked__0xMoneroToken[this] == old(locked__0xMoneroToken[this]) && solutionForChallenge__0xMoneroToken[this] == old(solutionForChallenge__0xMoneroToken[this]) && tokensMinted__0xMoneroToken[this] == old(tokensMinted__0xMoneroToken[this]) && owner_Owned[this] == old(owner_Owned[this]) && newOwner_Owned[this] == old(newOwner_Owned[this]))))
[2020-11-28 15:31:02,599 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(_0xMoneroToken.transfer(to, value), msg.sender == to && value <= balances__0xMoneroToken[this][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances__0xMoneroToken[this][to] >= 0 && balances__0xMoneroToken[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances__0xMoneroToken[this][msg.sender] >= 0 &&  balances__0xMoneroToken[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(_0xMoneroToken.transfer(to, value), return == true && _totalSupply__0xMoneroToken[this] == old(_totalSupply__0xMoneroToken[this]) && balances__0xMoneroToken[this] == old(balances__0xMoneroToken[this]) && allowed__0xMoneroToken[this] == old(allowed__0xMoneroToken[this]) && symbol__0xMoneroToken[this] == old(symbol__0xMoneroToken[this]) && name__0xMoneroToken[this] == old(name__0xMoneroToken[this]) && decimals__0xMoneroToken[this] == old(decimals__0xMoneroToken[this]) && latestDifficultyPeriodStarted__0xMoneroToken[this] == old(latestDifficultyPeriodStarted__0xMoneroToken[this]) && epochCount__0xMoneroToken[this] == old(epochCount__0xMoneroToken[this]) && _BLOCKS_PER_READJUSTMENT__0xMoneroToken[this] == old(_BLOCKS_PER_READJUSTMENT__0xMoneroToken[this]) && _MINIMUM_TARGET__0xMoneroToken[this] == old(_MINIMUM_TARGET__0xMoneroToken[this]) && _MAXIMUM_TARGET__0xMoneroToken[this] == old(_MAXIMUM_TARGET__0xMoneroToken[this]) && miningTarget__0xMoneroToken[this] == old(miningTarget__0xMoneroToken[this]) && challengeNumber__0xMoneroToken[this] == old(challengeNumber__0xMoneroToken[this]) && rewardEra__0xMoneroToken[this] == old(rewardEra__0xMoneroToken[this]) && maxSupplyForEra__0xMoneroToken[this] == old(maxSupplyForEra__0xMoneroToken[this]) && lastRewardTo__0xMoneroToken[this] == old(lastRewardTo__0xMoneroToken[this]) && lastRewardAmount__0xMoneroToken[this] == old(lastRewardAmount__0xMoneroToken[this]) && lastRewardEthBlockNumber__0xMoneroToken[this] == old(lastRewardEthBlockNumber__0xMoneroToken[this]) && locked__0xMoneroToken[this] == old(locked__0xMoneroToken[this]) && solutionForChallenge__0xMoneroToken[this] == old(solutionForChallenge__0xMoneroToken[this]) && tokensMinted__0xMoneroToken[this] == old(tokensMinted__0xMoneroToken[this]) && owner_Owned[this] == old(owner_Owned[this]) && newOwner_Owned[this] == old(newOwner_Owned[this]))))
[2020-11-28 15:31:02,606 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(_0xMoneroToken.transfer(to, value), msg.sender == to && value <= balances__0xMoneroToken[this][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances__0xMoneroToken[this][to] >= 0 && balances__0xMoneroToken[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances__0xMoneroToken[this][msg.sender] >= 0 &&  balances__0xMoneroToken[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(_0xMoneroToken.transfer(to, value), return == true && _totalSupply__0xMoneroToken[this] == old(_totalSupply__0xMoneroToken[this]) && balances__0xMoneroToken[this] == old(balances__0xMoneroToken[this]) && allowed__0xMoneroToken[this] == old(allowed__0xMoneroToken[this]) && symbol__0xMoneroToken[this] == old(symbol__0xMoneroToken[this]) && name__0xMoneroToken[this] == old(name__0xMoneroToken[this]) && decimals__0xMoneroToken[this] == old(decimals__0xMoneroToken[this]) && latestDifficultyPeriodStarted__0xMoneroToken[this] == old(latestDifficultyPeriodStarted__0xMoneroToken[this]) && epochCount__0xMoneroToken[this] == old(epochCount__0xMoneroToken[this]) && _BLOCKS_PER_READJUSTMENT__0xMoneroToken[this] == old(_BLOCKS_PER_READJUSTMENT__0xMoneroToken[this]) && _MINIMUM_TARGET__0xMoneroToken[this] == old(_MINIMUM_TARGET__0xMoneroToken[this]) && _MAXIMUM_TARGET__0xMoneroToken[this] == old(_MAXIMUM_TARGET__0xMoneroToken[this]) && miningTarget__0xMoneroToken[this] == old(miningTarget__0xMoneroToken[this]) && challengeNumber__0xMoneroToken[this] == old(challengeNumber__0xMoneroToken[this]) && rewardEra__0xMoneroToken[this] == old(rewardEra__0xMoneroToken[this]) && maxSupplyForEra__0xMoneroToken[this] == old(maxSupplyForEra__0xMoneroToken[this]) && lastRewardTo__0xMoneroToken[this] == old(lastRewardTo__0xMoneroToken[this]) && lastRewardAmount__0xMoneroToken[this] == old(lastRewardAmount__0xMoneroToken[this]) && lastRewardEthBlockNumber__0xMoneroToken[this] == old(lastRewardEthBlockNumber__0xMoneroToken[this]) && locked__0xMoneroToken[this] == old(locked__0xMoneroToken[this]) && solutionForChallenge__0xMoneroToken[this] == old(solutionForChallenge__0xMoneroToken[this]) && tokensMinted__0xMoneroToken[this] == old(tokensMinted__0xMoneroToken[this]) && owner_Owned[this] == old(owner_Owned[this]) && newOwner_Owned[this] == old(newOwner_Owned[this]))))
[2020-11-28 15:31:02,611 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( msg.sender==to_s884 && tokens_s884<=balances__0xMoneroToken[this][msg.sender] ) && tokens_s884>=0 ) && tokens_s884<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && balances__0xMoneroToken[this][to_s884]>=0 ) && balances__0xMoneroToken[this][to_s884]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && balances__0xMoneroToken[this][msg.sender]>=0 ) && balances__0xMoneroToken[this][msg.sender]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256__0xMoneroToken>],IdentifierExpression[to_s884,<IMPLEMENTATION_INPARAM,transfer~address~uint256__0xMoneroToken>]],BinaryExpression[COMPLEQ,IdentifierExpression[tokens_s884,<IMPLEMENTATION_INPARAM,transfer~address~uint256__0xMoneroToken>],ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances__0xMoneroToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256__0xMoneroToken>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256__0xMoneroToken>]]]]],BinaryExpression[COMPGEQ,IdentifierExpression[tokens_s884,<IMPLEMENTATION_INPARAM,transfer~address~uint256__0xMoneroToken>],IntegerLiteral[0]]],BinaryExpression[COMPLT,IdentifierExpression[tokens_s884,<IMPLEMENTATION_INPARAM,transfer~address~uint256__0xMoneroToken>],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances__0xMoneroToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256__0xMoneroToken>]]],[IdentifierExpression[to_s884,<IMPLEMENTATION_INPARAM,transfer~address~uint256__0xMoneroToken>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances__0xMoneroToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256__0xMoneroToken>]]],[IdentifierExpression[to_s884,<IMPLEMENTATION_INPARAM,transfer~address~uint256__0xMoneroToken>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances__0xMoneroToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256__0xMoneroToken>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256__0xMoneroToken>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances__0xMoneroToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256__0xMoneroToken>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256__0xMoneroToken>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]]
[2020-11-28 15:31:02,616 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( success_s884==true && _totalSupply__0xMoneroToken[this]==( old(_totalSupply__0xMoneroToken[this]) ) ) && balances__0xMoneroToken[this]==( old(balances__0xMoneroToken[this]) ) ) && allowed__0xMoneroToken[this]==( old(allowed__0xMoneroToken[this]) ) ) && symbol__0xMoneroToken[this]==( old(symbol__0xMoneroToken[this]) ) ) && name__0xMoneroToken[this]==( old(name__0xMoneroToken[this]) ) ) && decimals__0xMoneroToken[this]==( old(decimals__0xMoneroToken[this]) ) ) && latestDifficultyPeriodStarted__0xMoneroToken[this]==( old(latestDifficultyPeriodStarted__0xMoneroToken[this]) ) ) && epochCount__0xMoneroToken[this]==( old(epochCount__0xMoneroToken[this]) ) ) && _BLOCKS_PER_READJUSTMENT__0xMoneroToken[this]==( old(_BLOCKS_PER_READJUSTMENT__0xMoneroToken[this]) ) ) && _MINIMUM_TARGET__0xMoneroToken[this]==( old(_MINIMUM_TARGET__0xMoneroToken[this]) ) ) && _MAXIMUM_TARGET__0xMoneroToken[this]==( old(_MAXIMUM_TARGET__0xMoneroToken[this]) ) ) && miningTarget__0xMoneroToken[this]==( old(miningTarget__0xMoneroToken[this]) ) ) && challengeNumber__0xMoneroToken[this]==( old(challengeNumber__0xMoneroToken[this]) ) ) && rewardEra__0xMoneroToken[this]==( old(rewardEra__0xMoneroToken[this]) ) ) && maxSupplyForEra__0xMoneroToken[this]==( old(maxSupplyForEra__0xMoneroToken[this]) ) ) && lastRewardTo__0xMoneroToken[this]==( old(lastRewardTo__0xMoneroToken[this]) ) ) && lastRewardAmount__0xMoneroToken[this]==( old(lastRewardAmount__0xMoneroToken[this]) ) ) && lastRewardEthBlockNumber__0xMoneroToken[this]==( old(lastRewardEthBlockNumber__0xMoneroToken[this]) ) ) && locked__0xMoneroToken[this]==( old(locked__0xMoneroToken[this]) ) ) && solutionForChallenge__0xMoneroToken[this]==( old(solutionForChallenge__0xMoneroToken[this]) ) ) && tokensMinted__0xMoneroToken[this]==( old(tokensMinted__0xMoneroToken[this]) ) ) && owner_Owned[this]==( old(owner_Owned[this]) ) ) && newOwner_Owned[this]==( old(newOwner_Owned[this]) ) ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[success_s884,<IMPLEMENTATION_OUTPARAM,transfer~address~uint256__0xMoneroToken>],BooleanLiteral[true]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_totalSupply__0xMoneroToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256__0xMoneroToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_totalSupply__0xMoneroToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256__0xMoneroToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[balances__0xMoneroToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256__0xMoneroToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[balances__0xMoneroToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256__0xMoneroToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[allowed__0xMoneroToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256__0xMoneroToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[allowed__0xMoneroToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256__0xMoneroToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[symbol__0xMoneroToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256__0xMoneroToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[symbol__0xMoneroToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256__0xMoneroToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[name__0xMoneroToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256__0xMoneroToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[name__0xMoneroToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256__0xMoneroToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[decimals__0xMoneroToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256__0xMoneroToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[decimals__0xMoneroToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256__0xMoneroToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[latestDifficultyPeriodStarted__0xMoneroToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256__0xMoneroToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[latestDifficultyPeriodStarted__0xMoneroToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256__0xMoneroToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[epochCount__0xMoneroToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256__0xMoneroToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[epochCount__0xMoneroToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256__0xMoneroToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_BLOCKS_PER_READJUSTMENT__0xMoneroToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256__0xMoneroToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_BLOCKS_PER_READJUSTMENT__0xMoneroToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256__0xMoneroToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_MINIMUM_TARGET__0xMoneroToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256__0xMoneroToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_MINIMUM_TARGET__0xMoneroToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256__0xMoneroToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_MAXIMUM_TARGET__0xMoneroToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256__0xMoneroToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_MAXIMUM_TARGET__0xMoneroToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256__0xMoneroToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[miningTarget__0xMoneroToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256__0xMoneroToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[miningTarget__0xMoneroToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256__0xMoneroToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[challengeNumber__0xMoneroToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256__0xMoneroToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[challengeNumber__0xMoneroToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256__0xMoneroToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[rewardEra__0xMoneroToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256__0xMoneroToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[rewardEra__0xMoneroToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256__0xMoneroToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[maxSupplyForEra__0xMoneroToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256__0xMoneroToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[maxSupplyForEra__0xMoneroToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256__0xMoneroToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[lastRewardTo__0xMoneroToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256__0xMoneroToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[lastRewardTo__0xMoneroToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256__0xMoneroToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[lastRewardAmount__0xMoneroToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256__0xMoneroToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[lastRewardAmount__0xMoneroToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256__0xMoneroToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[lastRewardEthBlockNumber__0xMoneroToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256__0xMoneroToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[lastRewardEthBlockNumber__0xMoneroToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256__0xMoneroToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[locked__0xMoneroToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256__0xMoneroToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[locked__0xMoneroToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256__0xMoneroToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[solutionForChallenge__0xMoneroToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256__0xMoneroToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[solutionForChallenge__0xMoneroToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256__0xMoneroToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[tokensMinted__0xMoneroToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256__0xMoneroToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[tokensMinted__0xMoneroToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256__0xMoneroToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[owner_Owned,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256__0xMoneroToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[owner_Owned,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256__0xMoneroToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[newOwner_Owned,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256__0xMoneroToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[newOwner_Owned,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256__0xMoneroToken>]]]]]]
[2020-11-28 15:31:02,620 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(_0xMoneroToken.transfer(to, value), msg.sender == to && value <= balances__0xMoneroToken[this][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances__0xMoneroToken[this][to] >= 0 && balances__0xMoneroToken[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances__0xMoneroToken[this][msg.sender] >= 0 &&  balances__0xMoneroToken[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(_0xMoneroToken.transfer(to, value), return == true && _totalSupply__0xMoneroToken[this] == old(_totalSupply__0xMoneroToken[this]) && balances__0xMoneroToken[this] == old(balances__0xMoneroToken[this]) && allowed__0xMoneroToken[this] == old(allowed__0xMoneroToken[this]) && symbol__0xMoneroToken[this] == old(symbol__0xMoneroToken[this]) && name__0xMoneroToken[this] == old(name__0xMoneroToken[this]) && decimals__0xMoneroToken[this] == old(decimals__0xMoneroToken[this]) && latestDifficultyPeriodStarted__0xMoneroToken[this] == old(latestDifficultyPeriodStarted__0xMoneroToken[this]) && epochCount__0xMoneroToken[this] == old(epochCount__0xMoneroToken[this]) && _BLOCKS_PER_READJUSTMENT__0xMoneroToken[this] == old(_BLOCKS_PER_READJUSTMENT__0xMoneroToken[this]) && _MINIMUM_TARGET__0xMoneroToken[this] == old(_MINIMUM_TARGET__0xMoneroToken[this]) && _MAXIMUM_TARGET__0xMoneroToken[this] == old(_MAXIMUM_TARGET__0xMoneroToken[this]) && miningTarget__0xMoneroToken[this] == old(miningTarget__0xMoneroToken[this]) && challengeNumber__0xMoneroToken[this] == old(challengeNumber__0xMoneroToken[this]) && rewardEra__0xMoneroToken[this] == old(rewardEra__0xMoneroToken[this]) && maxSupplyForEra__0xMoneroToken[this] == old(maxSupplyForEra__0xMoneroToken[this]) && lastRewardTo__0xMoneroToken[this] == old(lastRewardTo__0xMoneroToken[this]) && lastRewardAmount__0xMoneroToken[this] == old(lastRewardAmount__0xMoneroToken[this]) && lastRewardEthBlockNumber__0xMoneroToken[this] == old(lastRewardEthBlockNumber__0xMoneroToken[this]) && locked__0xMoneroToken[this] == old(locked__0xMoneroToken[this]) && solutionForChallenge__0xMoneroToken[this] == old(solutionForChallenge__0xMoneroToken[this]) && tokensMinted__0xMoneroToken[this] == old(tokensMinted__0xMoneroToken[this]) && owner_Owned[this] == old(owner_Owned[this]) && newOwner_Owned[this] == old(newOwner_Owned[this]))))
[2020-11-28 15:31:02,620 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_transfer__0xMoneroToken0) ==> ( <>AP(success_transfer__0xMoneroToken0) ) ) )
Executed UtopiaSpecLang
[2020-11-28 15:31:02,625 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 28.11 03:31:02 PropertyContainer
[2020-11-28 15:31:02,625 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-28 15:31:02,625 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-28 15:31:02,625 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-28 15:31:02,625 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-28 15:31:02,626 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "_0xMoneroToken_0x035df12e0f3ac6671126525f1015e47d79dfeddf_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 28.11 03:31:02" (1/2) ...
[2020-11-28 15:31:02,626 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-28 15:31:02,626 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-28 15:31:02,634 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 28.11 03:31:02" (2/2) ...
[2020-11-28 15:31:02,634 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-28 15:31:02,635 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-28 15:31:02,635 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-28 15:31:02,635 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-28 15:31:02,635 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "_0xMoneroToken_0x035df12e0f3ac6671126525f1015e47d79dfeddf_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 28.11 03:31:02" (1/2) ...
[2020-11-28 15:31:02,688 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-28 15:31:02,688 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__success
[2020-11-28 15:31:02,688 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__success
[2020-11-28 15:31:02,688 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply__0xMoneroToken
[2020-11-28 15:31:02,688 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply__0xMoneroToken
[2020-11-28 15:31:02,688 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address__0xMoneroToken
[2020-11-28 15:31:02,688 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address__0xMoneroToken
[2020-11-28 15:31:02,688 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256__0xMoneroToken
[2020-11-28 15:31:02,689 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256__0xMoneroToken
[2020-11-28 15:31:02,689 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256__0xMoneroToken
[2020-11-28 15:31:02,689 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256__0xMoneroToken
[2020-11-28 15:31:02,689 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256__0xMoneroToken
[2020-11-28 15:31:02,689 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256__0xMoneroToken
[2020-11-28 15:31:02,689 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address__0xMoneroToken
[2020-11-28 15:31:02,689 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address__0xMoneroToken
[2020-11-28 15:31:02,689 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-28 15:31:02,689 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-28 15:31:02,690 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-28 15:31:02,690 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__success
[2020-11-28 15:31:02,690 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_SafeMath
[2020-11-28 15:31:02,690 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_SafeMath
[2020-11-28 15:31:02,690 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ExtendedMath
[2020-11-28 15:31:02,690 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ExtendedMath
[2020-11-28 15:31:02,690 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20Interface
[2020-11-28 15:31:02,690 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20Interface
[2020-11-28 15:31:02,690 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ApproveAndCallFallBack
[2020-11-28 15:31:02,690 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ApproveAndCallFallBack
[2020-11-28 15:31:02,691 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_Owned
[2020-11-28 15:31:02,691 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_Owned
[2020-11-28 15:31:02,691 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice__0xMoneroToken
[2020-11-28 15:31:02,691 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-28 15:31:02,691 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-28 15:31:02,691 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__fail
[2020-11-28 15:31:02,691 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-28 15:31:02,691 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply__0xMoneroToken__success
[2020-11-28 15:31:02,691 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply__0xMoneroToken__fail
[2020-11-28 15:31:02,691 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address__0xMoneroToken__success
[2020-11-28 15:31:02,691 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address__0xMoneroToken__fail
[2020-11-28 15:31:02,691 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256__0xMoneroToken__success
[2020-11-28 15:31:02,692 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256__0xMoneroToken__fail
[2020-11-28 15:31:02,692 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256__0xMoneroToken__success
[2020-11-28 15:31:02,692 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256__0xMoneroToken__fail
[2020-11-28 15:31:02,692 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256__0xMoneroToken__success
[2020-11-28 15:31:02,692 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256__0xMoneroToken__fail
[2020-11-28 15:31:02,692 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address__0xMoneroToken__success
[2020-11-28 15:31:02,692 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address__0xMoneroToken__fail
[2020-11-28 15:31:02,692 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-28 15:31:02,692 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-28 15:31:02,692 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-28 15:31:02,692 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__fail
[2020-11-28 15:31:02,693 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-28 15:31:02,693 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-28 15:31:02,693 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__fail
[2020-11-28 15:31:02,693 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__success
[2020-11-28 15:31:02,693 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-28 15:31:02,693 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__success
[2020-11-28 15:31:02,693 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply__0xMoneroToken__fail
[2020-11-28 15:31:02,693 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply__0xMoneroToken__success
[2020-11-28 15:31:02,693 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address__0xMoneroToken__fail
[2020-11-28 15:31:02,693 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address__0xMoneroToken__success
[2020-11-28 15:31:02,693 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256__0xMoneroToken__fail
[2020-11-28 15:31:02,693 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256__0xMoneroToken__success
[2020-11-28 15:31:02,694 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256__0xMoneroToken__fail
[2020-11-28 15:31:02,694 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256__0xMoneroToken__success
[2020-11-28 15:31:02,694 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256__0xMoneroToken__fail
[2020-11-28 15:31:02,694 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256__0xMoneroToken__success
[2020-11-28 15:31:02,694 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address__0xMoneroToken__fail
[2020-11-28 15:31:02,694 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address__0xMoneroToken__success
[2020-11-28 15:31:02,694 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-28 15:31:02,694 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-28 15:31:02,694 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-28 15:31:02,694 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-28 15:31:02,694 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-28 15:31:02,694 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-28 15:31:02,695 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__fail
[2020-11-28 15:31:02,695 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__success
[2020-11-28 15:31:02,695 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_SafeMath
[2020-11-28 15:31:02,695 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_SafeMath
[2020-11-28 15:31:02,695 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ExtendedMath
[2020-11-28 15:31:02,695 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ExtendedMath
[2020-11-28 15:31:02,695 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20Interface
[2020-11-28 15:31:02,695 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20Interface
[2020-11-28 15:31:02,695 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ApproveAndCallFallBack
[2020-11-28 15:31:02,695 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ApproveAndCallFallBack
[2020-11-28 15:31:02,696 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_Owned
[2020-11-28 15:31:02,696 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_Owned
[2020-11-28 15:31:02,696 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice__0xMoneroToken
[2020-11-28 15:31:02,696 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-28 15:31:02,696 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-28 15:31:02,696 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-28 15:31:02,812 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-28 15:31:02,812 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-28 15:31:02,813 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-28 15:31:03,087 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-28 15:31:03,088 INFO  L286             CfgBuilder]: Removed 6 assue(true) statements.
[2020-11-28 15:31:03,089 INFO  L202        PluginConnector]: Adding new model _0xMoneroToken_0x035df12e0f3ac6671126525f1015e47d79dfeddf_transfer-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 28.11 03:31:03 BoogieIcfgContainer
[2020-11-28 15:31:03,089 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 28.11 03:31:02" (2/2) ...
[2020-11-28 15:31:03,089 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-28 15:31:03,090 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@697886d and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 28.11 03:31:03, skipping insertion in model container
[2020-11-28 15:31:03,090 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-28 15:31:03,090 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-28 15:31:03,090 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-28 15:31:03,091 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-28 15:31:03,092 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "_0xMoneroToken_0x035df12e0f3ac6671126525f1015e47d79dfeddf_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 28.11 03:31:02" (1/3) ...
[2020-11-28 15:31:03,092 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@1d54c802 and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 28.11 03:31:03, skipping insertion in model container
[2020-11-28 15:31:03,092 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 28.11 03:31:02" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-28 15:31:03,132 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 28.11 03:31:03 NWAContainer
[2020-11-28 15:31:03,132 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-28 15:31:03,132 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-28 15:31:03,133 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-28 15:31:03,134 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-28 15:31:03,135 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "_0xMoneroToken_0x035df12e0f3ac6671126525f1015e47d79dfeddf_transfer-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 28.11 03:31:03" (3/4) ...
[2020-11-28 15:31:03,136 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@37b5f605 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 28.11 03:31:03, skipping insertion in model container
[2020-11-28 15:31:03,136 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 28.11 03:31:03" (4/4) ...
[2020-11-28 15:31:03,139 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-28 15:31:03,142 INFO  L110   BuchiProductObserver]: Initial RCFG 716 locations, 823 edges
[2020-11-28 15:31:03,142 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-28 15:31:03,153 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-28 15:31:04,049 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-28 15:31:04,052 INFO  L110   BuchiProductObserver]: BuchiProgram size 1612 locations, 2626 edges
[2020-11-28 15:31:04,052 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 28.11 03:31:04 BoogieIcfgContainer
[2020-11-28 15:31:04,052 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-28 15:31:04,053 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-28 15:31:04,053 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-28 15:31:04,054 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-28 15:31:04,055 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 28.11 03:31:04" (1/1) ...
[2020-11-28 15:31:04,100 INFO  L313           BlockEncoder]: Initial Icfg 1612 locations, 2626 edges
[2020-11-28 15:31:04,101 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-28 15:31:04,101 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-28 15:31:04,101 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-28 15:31:04,102 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-28 15:31:04,110 INFO  L70    emoveInfeasibleEdges]: Removed 51 edges and 15 locations because of local infeasibility
[2020-11-28 15:31:04,115 INFO  L70        RemoveSinkStates]: Removed 2 edges and 1 locations by removing sink states
[2020-11-28 15:31:04,121 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-28 15:31:04,124 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-28 15:31:04,125 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-28 15:31:04,126 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-28 15:31:04,128 INFO  L313           BlockEncoder]: Encoded RCFG 1578 locations, 2547 edges
[2020-11-28 15:31:04,129 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 28.11 03:31:04 BasicIcfg
[2020-11-28 15:31:04,129 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-28 15:31:04,129 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-28 15:31:04,129 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-28 15:31:04,132 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-28 15:31:04,132 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-28 15:31:04,133 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "_0xMoneroToken_0x035df12e0f3ac6671126525f1015e47d79dfeddf_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 28.11 03:31:02" (1/6) ...
[2020-11-28 15:31:04,134 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@19847d80 and model type _0xMoneroToken_0x035df12e0f3ac6671126525f1015e47d79dfeddf_transfer-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 28.11 03:31:04, skipping insertion in model container
[2020-11-28 15:31:04,135 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-28 15:31:04,135 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 28.11 03:31:02" (2/6) ...
[2020-11-28 15:31:04,135 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@19847d80 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 28.11 03:31:04, skipping insertion in model container
[2020-11-28 15:31:04,135 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-28 15:31:04,135 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "_0xMoneroToken_0x035df12e0f3ac6671126525f1015e47d79dfeddf_transfer-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 28.11 03:31:03" (3/6) ...
[2020-11-28 15:31:04,135 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@19847d80 and model type _0xMoneroToken_0x035df12e0f3ac6671126525f1015e47d79dfeddf_transfer-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 28.11 03:31:04, skipping insertion in model container
[2020-11-28 15:31:04,135 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-28 15:31:04,136 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 28.11 03:31:03" (4/6) ...
[2020-11-28 15:31:04,136 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@19847d80 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 28.11 03:31:04, skipping insertion in model container
[2020-11-28 15:31:04,136 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-28 15:31:04,136 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 28.11 03:31:04" (5/6) ...
[2020-11-28 15:31:04,136 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@19847d80 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 28.11 03:31:04, skipping insertion in model container
[2020-11-28 15:31:04,136 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-28 15:31:04,136 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 28.11 03:31:04" (6/6) ...
[2020-11-28 15:31:04,137 INFO  L404   chiAutomizerObserver]: Analyzing ICFG _0xMoneroToken_0x035df12e0f3ac6671126525f1015e47d79dfeddf_transfer-self.bpl_BEv2
[2020-11-28 15:31:04,175 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-28 15:31:04,175 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-28 15:31:04,175 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-28 15:31:04,175 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-28 15:31:04,175 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-28 15:31:04,176 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-28 15:31:04,176 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-28 15:31:04,176 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-28 15:31:04,176 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-28 15:31:04,196 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1578 states.
[2020-11-28 15:31:04,235 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-28 15:31:04,235 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-28 15:31:04,235 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-28 15:31:04,244 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-28 15:31:04,244 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
[2020-11-28 15:31:04,244 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-28 15:31:04,244 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1578 states.
[2020-11-28 15:31:04,254 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-28 15:31:04,254 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-28 15:31:04,255 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-28 15:31:04,257 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-28 15:31:04,257 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L2]                 success_transfer__0xMoneroToken0 := false;
[L2]                 call_transfer__0xMoneroToken0 := false;
[L2]     CALL        call main();
[L2081]              assume null == 0;
[L2082]  CALL        call this := FreshRefGenerator__success();
[L933]               havoc newRef;
[L934]               assume Alloc[newRef] == false;
[L935]               Alloc[newRef] := true;
[L936]               assume newRef != null;
[L2082]  RET         call this := FreshRefGenerator__success();
[L2083]              assume now >= 0;
[L2084]              assume DType[this] == _0xMoneroToken;
[L2085]              assume !revert && gas >= 0;
[L2086]  CALL        call CorralChoice__0xMoneroToken(this);
[L1965]              havoc msgsender_MSG;
[L1966]              havoc msgvalue_MSG;
[L1967]              havoc choice;
[L1968]              havoc __ret_0_totalSupply;
[L1969]              havoc tokenOwner_s841;
[L1970]              havoc balance_s841;
[L1971]              havoc tokenOwner_s987;
[L1972]              havoc spender_s987;
[L1973]              havoc remaining_s987;
[L1974]              havoc to_s884;
[L1975]              havoc tokens_s884;
[L1976]              havoc success_s884;
[L1977]              havoc spender_s912;
[L1978]              havoc tokens_s912;
[L1979]              havoc success_s912;
[L1980]              havoc from_s971;
[L1981]              havoc to_s971;
[L1982]              havoc tokens_s971;
[L1983]              havoc success_s971;
[L1984]              havoc __ret_0_owner;
[L1985]              havoc __ret_0_newOwner;
[L1986]              havoc _newOwner_s236;
[L1987]              havoc __ret_0_symbol;
[L1988]              havoc __ret_0_name;
[L1989]              havoc __ret_0_decimals;
[L1990]              havoc __ret_0__totalSupply;
[L1991]              havoc __ret_0_latestDifficultyPeriodStarted;
[L1992]              havoc __ret_0_epochCount;
[L1993]              havoc __ret_0__BLOCKS_PER_READJUSTMENT;
[L1994]              havoc __ret_0__MINIMUM_TARGET;
[L1995]              havoc __ret_0__MAXIMUM_TARGET;
[L1996]              havoc __ret_0_miningTarget;
[L1997]              havoc __ret_0_challengeNumber;
[L1998]              havoc __ret_0_rewardEra;
[L1999]              havoc __ret_0_maxSupplyForEra;
[L2000]              havoc __ret_0_lastRewardTo;
[L2001]              havoc __ret_0_lastRewardAmount;
[L2002]              havoc __ret_0_lastRewardEthBlockNumber;
[L2003]              havoc __ret_0_tokensMinted;
[L2004]              havoc nonce_s520;
[L2005]              havoc challenge_digest_s520;
[L2006]              havoc success_s520;
[L2007]              havoc __ret_0_getChallengeNumber;
[L2008]              havoc __ret_0_getMiningDifficulty;
[L2009]              havoc __ret_0_getMiningTarget;
[L2010]              havoc __ret_0_getMiningReward;
[L2011]              havoc nonce_s775;
[L2012]              havoc challenge_digest_s775;
[L2013]              havoc challenge_number_s775;
[L2014]              havoc digesttest_s775;
[L2015]              havoc nonce_s815;
[L2016]              havoc challenge_digest_s815;
[L2017]              havoc challenge_number_s815;
[L2018]              havoc testTarget_s815;
[L2019]              havoc success_s815;
[L2020]              havoc spender_s1030;
[L2021]              havoc tokens_s1030;
[L2022]              havoc data_s1030;
[L2023]              havoc success_s1030;
[L2024]              havoc tokenAddress_s1057;
[L2025]              havoc tokens_s1057;
[L2026]              havoc success_s1057;
[L2027]              havoc tmpNow;
[L2028]              havoc gas;
[L2029]              assume gas > 4000000 && gas <= 8000000;
[L2030]              tmpNow := now;
[L2031]              havoc now;
[L2032]              assume now > tmpNow;
[L2033]              assume msgsender_MSG != null;
[L2034]  COND TRUE   choice == 6
[L2035]              gas := gas - 21000;
[L2036]  COND FALSE  !(gas >= 0)
[L2086]  RET         call CorralChoice__0xMoneroToken(this);

Loop:
[L2086]        assume true;

[2020-11-28 15:31:04,273 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-28 15:31:04,273 INFO  L82        PathProgramCache]: Analyzing trace with hash -1396525507, now seen corresponding path program 1 times
[2020-11-28 15:31:04,278 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-28 15:31:04,304 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-28 15:31:04,371 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-28 15:31:04,373 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-28 15:31:04,373 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [5] imperfect sequences [] total 5
[2020-11-28 15:31:04,377 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-28 15:31:04,388 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 5 interpolants.
[2020-11-28 15:31:04,389 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=9, Invalid=11, Unknown=0, NotChecked=0, Total=20
[2020-11-28 15:31:04,390 INFO  L87              Difference]: Start difference. First operand 1578 states. Second operand 5 states.
[2020-11-28 15:31:04,655 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-28 15:31:04,655 INFO  L93              Difference]: Finished difference Result 694 states and 744 transitions.
[2020-11-28 15:31:04,655 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-28 15:31:04,657 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 694 states and 744 transitions.
[2020-11-28 15:31:04,662 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-28 15:31:04,668 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 694 states to 216 states and 225 transitions.
[2020-11-28 15:31:04,669 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 4
[2020-11-28 15:31:04,669 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 216
[2020-11-28 15:31:04,670 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 216 states and 225 transitions.
[2020-11-28 15:31:04,671 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-28 15:31:04,671 INFO  L728         BuchiCegarLoop]: Abstraction has 216 states and 225 transitions.
[2020-11-28 15:31:04,686 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 216 states and 225 transitions.
[2020-11-28 15:31:04,699 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 216 to 216.
[2020-11-28 15:31:04,699 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 216 states.
[2020-11-28 15:31:04,700 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 216 states to 216 states and 225 transitions.
[2020-11-28 15:31:04,701 INFO  L751         BuchiCegarLoop]: Abstraction has 216 states and 225 transitions.
[2020-11-28 15:31:04,701 INFO  L631         BuchiCegarLoop]: Abstraction has 216 states and 225 transitions.
[2020-11-28 15:31:04,701 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-28 15:31:04,701 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 216 states and 225 transitions.
[2020-11-28 15:31:04,703 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-28 15:31:04,703 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-28 15:31:04,703 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-28 15:31:04,705 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-28 15:31:04,705 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L2]                 success_transfer__0xMoneroToken0 := false;
[L2]                 call_transfer__0xMoneroToken0 := false;
[L2]     CALL        call main();
[L2081]              assume null == 0;
[L2082]  CALL        call this := FreshRefGenerator__success();
[L933]               havoc newRef;
[L934]               assume Alloc[newRef] == false;
[L935]               Alloc[newRef] := true;
[L936]               assume newRef != null;
[L2082]  RET         call this := FreshRefGenerator__success();
[L2083]              assume now >= 0;
[L2084]              assume DType[this] == _0xMoneroToken;
[L2085]              assume !revert && gas >= 0;
[L2086]  CALL        call CorralChoice__0xMoneroToken(this);
[L1965]              havoc msgsender_MSG;
[L1966]              havoc msgvalue_MSG;
[L1967]              havoc choice;
[L1968]              havoc __ret_0_totalSupply;
[L1969]              havoc tokenOwner_s841;
[L1970]              havoc balance_s841;
[L1971]              havoc tokenOwner_s987;
[L1972]              havoc spender_s987;
[L1973]              havoc remaining_s987;
[L1974]              havoc to_s884;
[L1975]              havoc tokens_s884;
[L1976]              havoc success_s884;
[L1977]              havoc spender_s912;
[L1978]              havoc tokens_s912;
[L1979]              havoc success_s912;
[L1980]              havoc from_s971;
[L1981]              havoc to_s971;
[L1982]              havoc tokens_s971;
[L1983]              havoc success_s971;
[L1984]              havoc __ret_0_owner;
[L1985]              havoc __ret_0_newOwner;
[L1986]              havoc _newOwner_s236;
[L1987]              havoc __ret_0_symbol;
[L1988]              havoc __ret_0_name;
[L1989]              havoc __ret_0_decimals;
[L1990]              havoc __ret_0__totalSupply;
[L1991]              havoc __ret_0_latestDifficultyPeriodStarted;
[L1992]              havoc __ret_0_epochCount;
[L1993]              havoc __ret_0__BLOCKS_PER_READJUSTMENT;
[L1994]              havoc __ret_0__MINIMUM_TARGET;
[L1995]              havoc __ret_0__MAXIMUM_TARGET;
[L1996]              havoc __ret_0_miningTarget;
[L1997]              havoc __ret_0_challengeNumber;
[L1998]              havoc __ret_0_rewardEra;
[L1999]              havoc __ret_0_maxSupplyForEra;
[L2000]              havoc __ret_0_lastRewardTo;
[L2001]              havoc __ret_0_lastRewardAmount;
[L2002]              havoc __ret_0_lastRewardEthBlockNumber;
[L2003]              havoc __ret_0_tokensMinted;
[L2004]              havoc nonce_s520;
[L2005]              havoc challenge_digest_s520;
[L2006]              havoc success_s520;
[L2007]              havoc __ret_0_getChallengeNumber;
[L2008]              havoc __ret_0_getMiningDifficulty;
[L2009]              havoc __ret_0_getMiningTarget;
[L2010]              havoc __ret_0_getMiningReward;
[L2011]              havoc nonce_s775;
[L2012]              havoc challenge_digest_s775;
[L2013]              havoc challenge_number_s775;
[L2014]              havoc digesttest_s775;
[L2015]              havoc nonce_s815;
[L2016]              havoc challenge_digest_s815;
[L2017]              havoc challenge_number_s815;
[L2018]              havoc testTarget_s815;
[L2019]              havoc success_s815;
[L2020]              havoc spender_s1030;
[L2021]              havoc tokens_s1030;
[L2022]              havoc data_s1030;
[L2023]              havoc success_s1030;
[L2024]              havoc tokenAddress_s1057;
[L2025]              havoc tokens_s1057;
[L2026]              havoc success_s1057;
[L2027]              havoc tmpNow;
[L2028]              havoc gas;
[L2029]              assume gas > 4000000 && gas <= 8000000;
[L2030]              tmpNow := now;
[L2031]              havoc now;
[L2032]              assume now > tmpNow;
[L2033]              assume msgsender_MSG != null;
[L2034]  COND FALSE  !(choice == 6)
[L2040]  COND FALSE  !(choice == 5)
[L2046]  COND FALSE  !(choice == 4)
[L2052]  COND TRUE   choice == 3
[L2053]              gas := gas - 21000;
[L2054]  COND TRUE   gas >= 0
[L2055]              assume tokens_s884 >= 0 && tokens_s884 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2056]              assume msgvalue_MSG == 0;
[L2057]  CALL        call success_s884 := transfer~address~uint256__0xMoneroToken(this, msgsender_MSG, msgvalue_MSG, to_s884, tokens_s884);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == to_s884 && tokens_s884 <= balances__0xMoneroToken[this][msgsender_MSG]) && tokens_s884 >= 0) && tokens_s884 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances__0xMoneroToken[this][to_s884] >= 0) && balances__0xMoneroToken[this][to_s884] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances__0xMoneroToken[this][msgsender_MSG] >= 0) && balances__0xMoneroToken[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer__0xMoneroToken0 := true;
[L2]                 call_transfer__0xMoneroToken0 := false;
[L2]                 revert := revert_hold;
[L291]               havoc __exception;
[L292]               revert := false;
[L293]   COND FALSE  !(__exception)
[L333]   CALL        call success_s884 := transfer~address~uint256__0xMoneroToken__success(this, msgsender_MSG, msgvalue_MSG, to_s884, tokens_s884);
[L1029]  CALL        call __var_2 := sub~uint256~uint256_SafeMath__success(this, this, 0, balances__0xMoneroToken[this][msgsender_MSG], tokens_s884);
[L968]   COND TRUE   !(b_s45 <= a_s45)
[L969]               revert := true;
[L1029]  RET         call __var_2 := sub~uint256~uint256_SafeMath__success(this, this, 0, balances__0xMoneroToken[this][msgsender_MSG], tokens_s884);
[L1030]  COND TRUE   revert
[L333]   RET         call success_s884 := transfer~address~uint256__0xMoneroToken__success(this, msgsender_MSG, msgvalue_MSG, to_s884, tokens_s884);
[L334]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !(((((((((((((((((((((((success_s884 == true && _totalSupply__0xMoneroToken[this] == old(_totalSupply__0xMoneroToken[this])) && balances__0xMoneroToken[this] == old(balances__0xMoneroToken[this])) && allowed__0xMoneroToken[this] == old(allowed__0xMoneroToken[this])) && symbol__0xMoneroToken[this] == old(symbol__0xMoneroToken[this])) && name__0xMoneroToken[this] == old(name__0xMoneroToken[this])) && decimals__0xMoneroToken[this] == old(decimals__0xMoneroToken[this])) && latestDifficultyPeriodStarted__0xMoneroToken[this] == old(latestDifficultyPeriodStarted__0xMoneroToken[this])) && epochCount__0xMoneroToken[this] == old(epochCount__0xMoneroToken[this])) && _BLOCKS_PER_READJUSTMENT__0xMoneroToken[this] == old(_BLOCKS_PER_READJUSTMENT__0xMoneroToken[this])) && _MINIMUM_TARGET__0xMoneroToken[this] == old(_MINIMUM_TARGET__0xMoneroToken[this])) && _MAXIMUM_TARGET__0xMoneroToken[this] == old(_MAXIMUM_TARGET__0xMoneroToken[this])) && miningTarget__0xMoneroToken[this] == old(miningTarget__0xMoneroToken[this])) && challengeNumber__0xMoneroToken[this] == old(challengeNumber__0xMoneroToken[this])) && rewardEra__0xMoneroToken[this] == old(rewardEra__0xMoneroToken[this])) && maxSupplyForEra__0xMoneroToken[this] == old(maxSupplyForEra__0xMoneroToken[this])) && lastRewardTo__0xMoneroToken[this] == old(lastRewardTo__0xMoneroToken[this])) && lastRewardAmount__0xMoneroToken[this] == old(lastRewardAmount__0xMoneroToken[this])) && lastRewardEthBlockNumber__0xMoneroToken[this] == old(lastRewardEthBlockNumber__0xMoneroToken[this])) && locked__0xMoneroToken[this] == old(locked__0xMoneroToken[this])) && solutionForChallenge__0xMoneroToken[this] == old(solutionForChallenge__0xMoneroToken[this])) && tokensMinted__0xMoneroToken[this] == old(tokensMinted__0xMoneroToken[this])) && owner_Owned[this] == old(owner_Owned[this])) && newOwner_Owned[this] == old(newOwner_Owned[this]));
[L2]                 revert := revert_hold;
[L2057]  RET         call success_s884 := transfer~address~uint256__0xMoneroToken(this, msgsender_MSG, msgvalue_MSG, to_s884, tokens_s884);
[L2086]  RET         call CorralChoice__0xMoneroToken(this);

Loop:
[L2086]        assume true;

[2020-11-28 15:31:04,708 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-28 15:31:04,708 INFO  L82        PathProgramCache]: Analyzing trace with hash 1508419078, now seen corresponding path program 1 times
[2020-11-28 15:31:04,709 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-28 15:31:04,723 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-28 15:31:04,744 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-28 15:31:04,744 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-28 15:31:04,745 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-28 15:31:04,746 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-28 15:31:04,746 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-28 15:31:04,746 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-28 15:31:04,747 INFO  L87              Difference]: Start difference. First operand 216 states and 225 transitions. cyclomatic complexity: 10 Second operand 3 states.
[2020-11-28 15:31:04,754 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-28 15:31:04,754 INFO  L93              Difference]: Finished difference Result 247 states and 255 transitions.
[2020-11-28 15:31:04,754 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-28 15:31:04,754 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 247 states and 255 transitions.
[2020-11-28 15:31:04,756 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 2
[2020-11-28 15:31:04,758 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 247 states to 233 states and 238 transitions.
[2020-11-28 15:31:04,758 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 233
[2020-11-28 15:31:04,758 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 233
[2020-11-28 15:31:04,758 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 233 states and 238 transitions.
[2020-11-28 15:31:04,760 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-28 15:31:04,760 INFO  L728         BuchiCegarLoop]: Abstraction has 233 states and 238 transitions.
[2020-11-28 15:31:04,760 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 233 states and 238 transitions.
[2020-11-28 15:31:04,767 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 233 to 222.
[2020-11-28 15:31:04,767 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 222 states.
[2020-11-28 15:31:04,767 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 222 states to 222 states and 227 transitions.
[2020-11-28 15:31:04,768 INFO  L751         BuchiCegarLoop]: Abstraction has 222 states and 227 transitions.
[2020-11-28 15:31:04,768 INFO  L631         BuchiCegarLoop]: Abstraction has 222 states and 227 transitions.
[2020-11-28 15:31:04,768 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-28 15:31:04,768 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 222 states and 227 transitions.
[2020-11-28 15:31:04,769 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-28 15:31:04,769 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-28 15:31:04,769 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-28 15:31:04,770 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-28 15:31:04,770 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L2]                 success_transfer__0xMoneroToken0 := false;
[L2]                 call_transfer__0xMoneroToken0 := false;
[L2]     CALL        call main();
[L2081]              assume null == 0;
[L2082]  CALL        call this := FreshRefGenerator__success();
[L933]               havoc newRef;
[L934]               assume Alloc[newRef] == false;
[L935]               Alloc[newRef] := true;
[L936]               assume newRef != null;
[L2082]  RET         call this := FreshRefGenerator__success();
[L2083]              assume now >= 0;
[L2084]              assume DType[this] == _0xMoneroToken;
[L2085]              assume !revert && gas >= 0;
[L2086]  CALL        call CorralChoice__0xMoneroToken(this);
[L1965]              havoc msgsender_MSG;
[L1966]              havoc msgvalue_MSG;
[L1967]              havoc choice;
[L1968]              havoc __ret_0_totalSupply;
[L1969]              havoc tokenOwner_s841;
[L1970]              havoc balance_s841;
[L1971]              havoc tokenOwner_s987;
[L1972]              havoc spender_s987;
[L1973]              havoc remaining_s987;
[L1974]              havoc to_s884;
[L1975]              havoc tokens_s884;
[L1976]              havoc success_s884;
[L1977]              havoc spender_s912;
[L1978]              havoc tokens_s912;
[L1979]              havoc success_s912;
[L1980]              havoc from_s971;
[L1981]              havoc to_s971;
[L1982]              havoc tokens_s971;
[L1983]              havoc success_s971;
[L1984]              havoc __ret_0_owner;
[L1985]              havoc __ret_0_newOwner;
[L1986]              havoc _newOwner_s236;
[L1987]              havoc __ret_0_symbol;
[L1988]              havoc __ret_0_name;
[L1989]              havoc __ret_0_decimals;
[L1990]              havoc __ret_0__totalSupply;
[L1991]              havoc __ret_0_latestDifficultyPeriodStarted;
[L1992]              havoc __ret_0_epochCount;
[L1993]              havoc __ret_0__BLOCKS_PER_READJUSTMENT;
[L1994]              havoc __ret_0__MINIMUM_TARGET;
[L1995]              havoc __ret_0__MAXIMUM_TARGET;
[L1996]              havoc __ret_0_miningTarget;
[L1997]              havoc __ret_0_challengeNumber;
[L1998]              havoc __ret_0_rewardEra;
[L1999]              havoc __ret_0_maxSupplyForEra;
[L2000]              havoc __ret_0_lastRewardTo;
[L2001]              havoc __ret_0_lastRewardAmount;
[L2002]              havoc __ret_0_lastRewardEthBlockNumber;
[L2003]              havoc __ret_0_tokensMinted;
[L2004]              havoc nonce_s520;
[L2005]              havoc challenge_digest_s520;
[L2006]              havoc success_s520;
[L2007]              havoc __ret_0_getChallengeNumber;
[L2008]              havoc __ret_0_getMiningDifficulty;
[L2009]              havoc __ret_0_getMiningTarget;
[L2010]              havoc __ret_0_getMiningReward;
[L2011]              havoc nonce_s775;
[L2012]              havoc challenge_digest_s775;
[L2013]              havoc challenge_number_s775;
[L2014]              havoc digesttest_s775;
[L2015]              havoc nonce_s815;
[L2016]              havoc challenge_digest_s815;
[L2017]              havoc challenge_number_s815;
[L2018]              havoc testTarget_s815;
[L2019]              havoc success_s815;
[L2020]              havoc spender_s1030;
[L2021]              havoc tokens_s1030;
[L2022]              havoc data_s1030;
[L2023]              havoc success_s1030;
[L2024]              havoc tokenAddress_s1057;
[L2025]              havoc tokens_s1057;
[L2026]              havoc success_s1057;
[L2027]              havoc tmpNow;
[L2028]              havoc gas;
[L2029]              assume gas > 4000000 && gas <= 8000000;
[L2030]              tmpNow := now;
[L2031]              havoc now;
[L2032]              assume now > tmpNow;
[L2033]              assume msgsender_MSG != null;
[L2034]  COND FALSE  !(choice == 6)
[L2040]  COND FALSE  !(choice == 5)
[L2046]  COND FALSE  !(choice == 4)
[L2052]  COND TRUE   choice == 3
[L2053]              gas := gas - 21000;
[L2054]  COND TRUE   gas >= 0
[L2055]              assume tokens_s884 >= 0 && tokens_s884 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2056]              assume msgvalue_MSG == 0;
[L2057]  CALL        call success_s884 := transfer~address~uint256__0xMoneroToken(this, msgsender_MSG, msgvalue_MSG, to_s884, tokens_s884);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == to_s884 && tokens_s884 <= balances__0xMoneroToken[this][msgsender_MSG]) && tokens_s884 >= 0) && tokens_s884 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances__0xMoneroToken[this][to_s884] >= 0) && balances__0xMoneroToken[this][to_s884] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances__0xMoneroToken[this][msgsender_MSG] >= 0) && balances__0xMoneroToken[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer__0xMoneroToken0 := true;
[L2]                 call_transfer__0xMoneroToken0 := false;
[L2]                 revert := revert_hold;
[L291]               havoc __exception;
[L292]               revert := false;
[L293]   COND FALSE  !(__exception)
[L333]   CALL        call success_s884 := transfer~address~uint256__0xMoneroToken__success(this, msgsender_MSG, msgvalue_MSG, to_s884, tokens_s884);
[L1029]  CALL        call __var_2 := sub~uint256~uint256_SafeMath__success(this, this, 0, balances__0xMoneroToken[this][msgsender_MSG], tokens_s884);
[L968]   COND FALSE  !(!(b_s45 <= a_s45))
[L972]               c_s45 := (a_s45 - b_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1029]  RET         call __var_2 := sub~uint256~uint256_SafeMath__success(this, this, 0, balances__0xMoneroToken[this][msgsender_MSG], tokens_s884);
[L1030]  COND FALSE  !(revert)
[L1033]              sum_balances1[this] := sum_balances1[this] - balances__0xMoneroToken[this][msgsender_MSG];
[L1034]              balances__0xMoneroToken[this][msgsender_MSG] := __var_2;
[L1035]              sum_balances1[this] := sum_balances1[this] + balances__0xMoneroToken[this][msgsender_MSG];
[L1036]  CALL        call __var_3 := add~uint256~uint256_SafeMath__success(this, this, 0, balances__0xMoneroToken[this][to_s884], tokens_s884);
[L950]               c_s23 := (a_s23 + b_s23) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L951]   COND FALSE  !(!(c_s23 >= a_s23))
[L1036]  RET         call __var_3 := add~uint256~uint256_SafeMath__success(this, this, 0, balances__0xMoneroToken[this][to_s884], tokens_s884);
[L1037]  COND FALSE  !(revert)
[L1040]              sum_balances1[this] := sum_balances1[this] - balances__0xMoneroToken[this][to_s884];
[L1041]              balances__0xMoneroToken[this][to_s884] := __var_3;
[L1042]              sum_balances1[this] := sum_balances1[this] + balances__0xMoneroToken[this][to_s884];
[L1043]              assert { :EventEmitted "Transfer__0xMoneroToken" } true;
[L1044]              success_s884 := true;
[L333]   RET         call success_s884 := transfer~address~uint256__0xMoneroToken__success(this, msgsender_MSG, msgvalue_MSG, to_s884, tokens_s884);
[L334]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !(((((((((((((((((((((((success_s884 == true && _totalSupply__0xMoneroToken[this] == old(_totalSupply__0xMoneroToken[this])) && balances__0xMoneroToken[this] == old(balances__0xMoneroToken[this])) && allowed__0xMoneroToken[this] == old(allowed__0xMoneroToken[this])) && symbol__0xMoneroToken[this] == old(symbol__0xMoneroToken[this])) && name__0xMoneroToken[this] == old(name__0xMoneroToken[this])) && decimals__0xMoneroToken[this] == old(decimals__0xMoneroToken[this])) && latestDifficultyPeriodStarted__0xMoneroToken[this] == old(latestDifficultyPeriodStarted__0xMoneroToken[this])) && epochCount__0xMoneroToken[this] == old(epochCount__0xMoneroToken[this])) && _BLOCKS_PER_READJUSTMENT__0xMoneroToken[this] == old(_BLOCKS_PER_READJUSTMENT__0xMoneroToken[this])) && _MINIMUM_TARGET__0xMoneroToken[this] == old(_MINIMUM_TARGET__0xMoneroToken[this])) && _MAXIMUM_TARGET__0xMoneroToken[this] == old(_MAXIMUM_TARGET__0xMoneroToken[this])) && miningTarget__0xMoneroToken[this] == old(miningTarget__0xMoneroToken[this])) && challengeNumber__0xMoneroToken[this] == old(challengeNumber__0xMoneroToken[this])) && rewardEra__0xMoneroToken[this] == old(rewardEra__0xMoneroToken[this])) && maxSupplyForEra__0xMoneroToken[this] == old(maxSupplyForEra__0xMoneroToken[this])) && lastRewardTo__0xMoneroToken[this] == old(lastRewardTo__0xMoneroToken[this])) && lastRewardAmount__0xMoneroToken[this] == old(lastRewardAmount__0xMoneroToken[this])) && lastRewardEthBlockNumber__0xMoneroToken[this] == old(lastRewardEthBlockNumber__0xMoneroToken[this])) && locked__0xMoneroToken[this] == old(locked__0xMoneroToken[this])) && solutionForChallenge__0xMoneroToken[this] == old(solutionForChallenge__0xMoneroToken[this])) && tokensMinted__0xMoneroToken[this] == old(tokensMinted__0xMoneroToken[this])) && owner_Owned[this] == old(owner_Owned[this])) && newOwner_Owned[this] == old(newOwner_Owned[this]));
[L2]                 revert := revert_hold;
[L2057]  RET         call success_s884 := transfer~address~uint256__0xMoneroToken(this, msgsender_MSG, msgvalue_MSG, to_s884, tokens_s884);
[L2086]  RET         call CorralChoice__0xMoneroToken(this);

Loop:
[L2086]        assume true;

[2020-11-28 15:31:04,774 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-28 15:31:04,774 INFO  L82        PathProgramCache]: Analyzing trace with hash 1903507156, now seen corresponding path program 1 times
[2020-11-28 15:31:04,775 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-28 15:31:04,817 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-28 15:31:05,030 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-28 15:31:05,031 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-28 15:31:05,031 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [14] imperfect sequences [] total 14
[2020-11-28 15:31:05,031 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-28 15:31:05,031 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 14 interpolants.
[2020-11-28 15:31:05,031 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=29, Invalid=153, Unknown=0, NotChecked=0, Total=182
[2020-11-28 15:31:05,031 INFO  L87              Difference]: Start difference. First operand 222 states and 227 transitions. cyclomatic complexity: 6 Second operand 14 states.
[2020-11-28 15:31:05,301 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-28 15:31:05,301 INFO  L93              Difference]: Finished difference Result 221 states and 225 transitions.
[2020-11-28 15:31:05,301 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 13 states. 
[2020-11-28 15:31:05,301 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 221 states and 225 transitions.
[2020-11-28 15:31:05,302 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-28 15:31:05,303 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 221 states to 188 states and 192 transitions.
[2020-11-28 15:31:05,303 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 188
[2020-11-28 15:31:05,303 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 188
[2020-11-28 15:31:05,303 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 188 states and 192 transitions.
[2020-11-28 15:31:05,303 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-28 15:31:05,304 INFO  L728         BuchiCegarLoop]: Abstraction has 188 states and 192 transitions.
[2020-11-28 15:31:05,304 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 188 states and 192 transitions.
[2020-11-28 15:31:05,306 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 188 to 188.
[2020-11-28 15:31:05,306 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 188 states.
[2020-11-28 15:31:05,307 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 188 states to 188 states and 192 transitions.
[2020-11-28 15:31:05,307 INFO  L751         BuchiCegarLoop]: Abstraction has 188 states and 192 transitions.
[2020-11-28 15:31:05,307 INFO  L631         BuchiCegarLoop]: Abstraction has 188 states and 192 transitions.
[2020-11-28 15:31:05,307 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-28 15:31:05,307 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 188 states and 192 transitions.
[2020-11-28 15:31:05,307 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-28 15:31:05,308 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-28 15:31:05,308 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-28 15:31:05,309 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-28 15:31:05,309 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L2]                 success_transfer__0xMoneroToken0 := false;
[L2]                 call_transfer__0xMoneroToken0 := false;
[L2]     CALL        call main();
[L2081]              assume null == 0;
[L2082]  CALL        call this := FreshRefGenerator__success();
[L933]               havoc newRef;
[L934]               assume Alloc[newRef] == false;
[L935]               Alloc[newRef] := true;
[L936]               assume newRef != null;
[L2082]  RET         call this := FreshRefGenerator__success();
[L2083]              assume now >= 0;
[L2084]              assume DType[this] == _0xMoneroToken;
[L2085]              assume !revert && gas >= 0;
[L2086]  CALL        call CorralChoice__0xMoneroToken(this);
[L1965]              havoc msgsender_MSG;
[L1966]              havoc msgvalue_MSG;
[L1967]              havoc choice;
[L1968]              havoc __ret_0_totalSupply;
[L1969]              havoc tokenOwner_s841;
[L1970]              havoc balance_s841;
[L1971]              havoc tokenOwner_s987;
[L1972]              havoc spender_s987;
[L1973]              havoc remaining_s987;
[L1974]              havoc to_s884;
[L1975]              havoc tokens_s884;
[L1976]              havoc success_s884;
[L1977]              havoc spender_s912;
[L1978]              havoc tokens_s912;
[L1979]              havoc success_s912;
[L1980]              havoc from_s971;
[L1981]              havoc to_s971;
[L1982]              havoc tokens_s971;
[L1983]              havoc success_s971;
[L1984]              havoc __ret_0_owner;
[L1985]              havoc __ret_0_newOwner;
[L1986]              havoc _newOwner_s236;
[L1987]              havoc __ret_0_symbol;
[L1988]              havoc __ret_0_name;
[L1989]              havoc __ret_0_decimals;
[L1990]              havoc __ret_0__totalSupply;
[L1991]              havoc __ret_0_latestDifficultyPeriodStarted;
[L1992]              havoc __ret_0_epochCount;
[L1993]              havoc __ret_0__BLOCKS_PER_READJUSTMENT;
[L1994]              havoc __ret_0__MINIMUM_TARGET;
[L1995]              havoc __ret_0__MAXIMUM_TARGET;
[L1996]              havoc __ret_0_miningTarget;
[L1997]              havoc __ret_0_challengeNumber;
[L1998]              havoc __ret_0_rewardEra;
[L1999]              havoc __ret_0_maxSupplyForEra;
[L2000]              havoc __ret_0_lastRewardTo;
[L2001]              havoc __ret_0_lastRewardAmount;
[L2002]              havoc __ret_0_lastRewardEthBlockNumber;
[L2003]              havoc __ret_0_tokensMinted;
[L2004]              havoc nonce_s520;
[L2005]              havoc challenge_digest_s520;
[L2006]              havoc success_s520;
[L2007]              havoc __ret_0_getChallengeNumber;
[L2008]              havoc __ret_0_getMiningDifficulty;
[L2009]              havoc __ret_0_getMiningTarget;
[L2010]              havoc __ret_0_getMiningReward;
[L2011]              havoc nonce_s775;
[L2012]              havoc challenge_digest_s775;
[L2013]              havoc challenge_number_s775;
[L2014]              havoc digesttest_s775;
[L2015]              havoc nonce_s815;
[L2016]              havoc challenge_digest_s815;
[L2017]              havoc challenge_number_s815;
[L2018]              havoc testTarget_s815;
[L2019]              havoc success_s815;
[L2020]              havoc spender_s1030;
[L2021]              havoc tokens_s1030;
[L2022]              havoc data_s1030;
[L2023]              havoc success_s1030;
[L2024]              havoc tokenAddress_s1057;
[L2025]              havoc tokens_s1057;
[L2026]              havoc success_s1057;
[L2027]              havoc tmpNow;
[L2028]              havoc gas;
[L2029]              assume gas > 4000000 && gas <= 8000000;
[L2030]              tmpNow := now;
[L2031]              havoc now;
[L2032]              assume now > tmpNow;
[L2033]              assume msgsender_MSG != null;
[L2034]  COND FALSE  !(choice == 6)
[L2040]  COND FALSE  !(choice == 5)
[L2046]  COND FALSE  !(choice == 4)
[L2052]  COND TRUE   choice == 3
[L2053]              gas := gas - 21000;
[L2054]  COND TRUE   gas >= 0
[L2055]              assume tokens_s884 >= 0 && tokens_s884 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2056]              assume msgvalue_MSG == 0;
[L2057]  CALL        call success_s884 := transfer~address~uint256__0xMoneroToken(this, msgsender_MSG, msgvalue_MSG, to_s884, tokens_s884);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == to_s884 && tokens_s884 <= balances__0xMoneroToken[this][msgsender_MSG]) && tokens_s884 >= 0) && tokens_s884 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances__0xMoneroToken[this][to_s884] >= 0) && balances__0xMoneroToken[this][to_s884] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances__0xMoneroToken[this][msgsender_MSG] >= 0) && balances__0xMoneroToken[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer__0xMoneroToken0 := true;
[L2]                 call_transfer__0xMoneroToken0 := false;
[L2]                 revert := revert_hold;
[L291]               havoc __exception;
[L292]               revert := false;
[L293]   COND TRUE   __exception
[L294]               __tmp__Balance := Balance;
[L295]               __tmp__DType := DType;
[L296]               __tmp__Alloc := Alloc;
[L297]               __tmp__balance_ADDR := balance_ADDR;
[L298]               __tmp__M_int_int := M_int_int;
[L299]               __tmp__sum_solutionForChallenge0 := sum_solutionForChallenge0;
[L300]               __tmp__M_Ref_int := M_Ref_int;
[L301]               __tmp__sum_balances1 := sum_balances1;
[L302]               __tmp__alloc_allowed__0xMoneroToken_lvl0 := alloc_allowed__0xMoneroToken_lvl0;
[L303]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L304]               __tmp__sum_allowed2 := sum_allowed2;
[L305]               __tmp__Length := Length;
[L306]               __tmp__now := now;
[L307]               __tmp__owner_Owned := owner_Owned;
[L308]               __tmp__newOwner_Owned := newOwner_Owned;
[L309]               __tmp__symbol__0xMoneroToken := symbol__0xMoneroToken;
[L310]               __tmp__name__0xMoneroToken := name__0xMoneroToken;
[L311]               __tmp__decimals__0xMoneroToken := decimals__0xMoneroToken;
[L312]               __tmp___totalSupply__0xMoneroToken := _totalSupply__0xMoneroToken;
[L313]               __tmp__latestDifficultyPeriodStarted__0xMoneroToken := latestDifficultyPeriodStarted__0xMoneroToken;
[L314]               __tmp__epochCount__0xMoneroToken := epochCount__0xMoneroToken;
[L315]               __tmp___BLOCKS_PER_READJUSTMENT__0xMoneroToken := _BLOCKS_PER_READJUSTMENT__0xMoneroToken;
[L316]               __tmp___MINIMUM_TARGET__0xMoneroToken := _MINIMUM_TARGET__0xMoneroToken;
[L317]               __tmp___MAXIMUM_TARGET__0xMoneroToken := _MAXIMUM_TARGET__0xMoneroToken;
[L318]               __tmp__miningTarget__0xMoneroToken := miningTarget__0xMoneroToken;
[L319]               __tmp__challengeNumber__0xMoneroToken := challengeNumber__0xMoneroToken;
[L320]               __tmp__rewardEra__0xMoneroToken := rewardEra__0xMoneroToken;
[L321]               __tmp__maxSupplyForEra__0xMoneroToken := maxSupplyForEra__0xMoneroToken;
[L322]               __tmp__lastRewardTo__0xMoneroToken := lastRewardTo__0xMoneroToken;
[L323]               __tmp__lastRewardAmount__0xMoneroToken := lastRewardAmount__0xMoneroToken;
[L324]               __tmp__lastRewardEthBlockNumber__0xMoneroToken := lastRewardEthBlockNumber__0xMoneroToken;
[L325]               __tmp__locked__0xMoneroToken := locked__0xMoneroToken;
[L326]               __tmp__solutionForChallenge__0xMoneroToken := solutionForChallenge__0xMoneroToken;
[L327]               __tmp__tokensMinted__0xMoneroToken := tokensMinted__0xMoneroToken;
[L328]               __tmp__balances__0xMoneroToken := balances__0xMoneroToken;
[L329]               __tmp__allowed__0xMoneroToken := allowed__0xMoneroToken;
[L330]   CALL        call success_s884 := transfer~address~uint256__0xMoneroToken__fail(this, msgsender_MSG, msgvalue_MSG, to_s884, tokens_s884);
[L1007]  CALL        call __var_2 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __tmp__balances__0xMoneroToken[this][msgsender_MSG], tokens_s884);
[L959]   COND TRUE   !(b_s45 <= a_s45)
[L960]               revert := true;
[L1007]  RET         call __var_2 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __tmp__balances__0xMoneroToken[this][msgsender_MSG], tokens_s884);
[L1008]  COND TRUE   revert
[L330]   RET         call success_s884 := transfer~address~uint256__0xMoneroToken__fail(this, msgsender_MSG, msgvalue_MSG, to_s884, tokens_s884);
[L331]               assume revert || gas < 0;
[L2057]  RET         call success_s884 := transfer~address~uint256__0xMoneroToken(this, msgsender_MSG, msgvalue_MSG, to_s884, tokens_s884);
[L2086]  RET         call CorralChoice__0xMoneroToken(this);

Loop:
[L2086]        assume true;

[2020-11-28 15:31:05,311 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-28 15:31:05,311 INFO  L82        PathProgramCache]: Analyzing trace with hash 1865300433, now seen corresponding path program 1 times
[2020-11-28 15:31:05,312 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-28 15:31:05,318 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-28 15:31:05,371 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-28 15:31:05,371 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-28 15:31:05,372 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [7] imperfect sequences [] total 7
[2020-11-28 15:31:05,372 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-28 15:31:05,372 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 7 interpolants.
[2020-11-28 15:31:05,372 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=11, Invalid=31, Unknown=0, NotChecked=0, Total=42
[2020-11-28 15:31:05,372 INFO  L87              Difference]: Start difference. First operand 188 states and 192 transitions. cyclomatic complexity: 5 Second operand 7 states.
[2020-11-28 15:31:05,404 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-28 15:31:05,404 INFO  L93              Difference]: Finished difference Result 196 states and 199 transitions.
[2020-11-28 15:31:05,404 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 8 states. 
[2020-11-28 15:31:05,405 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 196 states and 199 transitions.
[2020-11-28 15:31:05,405 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-28 15:31:05,407 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 196 states to 189 states and 192 transitions.
[2020-11-28 15:31:05,407 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 189
[2020-11-28 15:31:05,407 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 189
[2020-11-28 15:31:05,407 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 189 states and 192 transitions.
[2020-11-28 15:31:05,407 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-28 15:31:05,407 INFO  L728         BuchiCegarLoop]: Abstraction has 189 states and 192 transitions.
[2020-11-28 15:31:05,408 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 189 states and 192 transitions.
[2020-11-28 15:31:05,409 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 189 to 183.
[2020-11-28 15:31:05,409 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 183 states.
[2020-11-28 15:31:05,410 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 183 states to 183 states and 186 transitions.
[2020-11-28 15:31:05,410 INFO  L751         BuchiCegarLoop]: Abstraction has 183 states and 186 transitions.
[2020-11-28 15:31:05,410 INFO  L631         BuchiCegarLoop]: Abstraction has 183 states and 186 transitions.
[2020-11-28 15:31:05,410 INFO  L445         BuchiCegarLoop]: ======== Iteration 5============
[2020-11-28 15:31:05,410 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 183 states and 186 transitions.
[2020-11-28 15:31:05,411 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-28 15:31:05,411 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-28 15:31:05,411 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-28 15:31:05,412 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-28 15:31:05,412 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L2]                 success_transfer__0xMoneroToken0 := false;
[L2]                 call_transfer__0xMoneroToken0 := false;
[L2]     CALL        call main();
[L2081]              assume null == 0;
[L2082]  CALL        call this := FreshRefGenerator__success();
[L933]               havoc newRef;
[L934]               assume Alloc[newRef] == false;
[L935]               Alloc[newRef] := true;
[L936]               assume newRef != null;
[L2082]  RET         call this := FreshRefGenerator__success();
[L2083]              assume now >= 0;
[L2084]              assume DType[this] == _0xMoneroToken;
[L2085]              assume !revert && gas >= 0;
[L2086]  CALL        call CorralChoice__0xMoneroToken(this);
[L1965]              havoc msgsender_MSG;
[L1966]              havoc msgvalue_MSG;
[L1967]              havoc choice;
[L1968]              havoc __ret_0_totalSupply;
[L1969]              havoc tokenOwner_s841;
[L1970]              havoc balance_s841;
[L1971]              havoc tokenOwner_s987;
[L1972]              havoc spender_s987;
[L1973]              havoc remaining_s987;
[L1974]              havoc to_s884;
[L1975]              havoc tokens_s884;
[L1976]              havoc success_s884;
[L1977]              havoc spender_s912;
[L1978]              havoc tokens_s912;
[L1979]              havoc success_s912;
[L1980]              havoc from_s971;
[L1981]              havoc to_s971;
[L1982]              havoc tokens_s971;
[L1983]              havoc success_s971;
[L1984]              havoc __ret_0_owner;
[L1985]              havoc __ret_0_newOwner;
[L1986]              havoc _newOwner_s236;
[L1987]              havoc __ret_0_symbol;
[L1988]              havoc __ret_0_name;
[L1989]              havoc __ret_0_decimals;
[L1990]              havoc __ret_0__totalSupply;
[L1991]              havoc __ret_0_latestDifficultyPeriodStarted;
[L1992]              havoc __ret_0_epochCount;
[L1993]              havoc __ret_0__BLOCKS_PER_READJUSTMENT;
[L1994]              havoc __ret_0__MINIMUM_TARGET;
[L1995]              havoc __ret_0__MAXIMUM_TARGET;
[L1996]              havoc __ret_0_miningTarget;
[L1997]              havoc __ret_0_challengeNumber;
[L1998]              havoc __ret_0_rewardEra;
[L1999]              havoc __ret_0_maxSupplyForEra;
[L2000]              havoc __ret_0_lastRewardTo;
[L2001]              havoc __ret_0_lastRewardAmount;
[L2002]              havoc __ret_0_lastRewardEthBlockNumber;
[L2003]              havoc __ret_0_tokensMinted;
[L2004]              havoc nonce_s520;
[L2005]              havoc challenge_digest_s520;
[L2006]              havoc success_s520;
[L2007]              havoc __ret_0_getChallengeNumber;
[L2008]              havoc __ret_0_getMiningDifficulty;
[L2009]              havoc __ret_0_getMiningTarget;
[L2010]              havoc __ret_0_getMiningReward;
[L2011]              havoc nonce_s775;
[L2012]              havoc challenge_digest_s775;
[L2013]              havoc challenge_number_s775;
[L2014]              havoc digesttest_s775;
[L2015]              havoc nonce_s815;
[L2016]              havoc challenge_digest_s815;
[L2017]              havoc challenge_number_s815;
[L2018]              havoc testTarget_s815;
[L2019]              havoc success_s815;
[L2020]              havoc spender_s1030;
[L2021]              havoc tokens_s1030;
[L2022]              havoc data_s1030;
[L2023]              havoc success_s1030;
[L2024]              havoc tokenAddress_s1057;
[L2025]              havoc tokens_s1057;
[L2026]              havoc success_s1057;
[L2027]              havoc tmpNow;
[L2028]              havoc gas;
[L2029]              assume gas > 4000000 && gas <= 8000000;
[L2030]              tmpNow := now;
[L2031]              havoc now;
[L2032]              assume now > tmpNow;
[L2033]              assume msgsender_MSG != null;
[L2034]  COND FALSE  !(choice == 6)
[L2040]  COND FALSE  !(choice == 5)
[L2046]  COND FALSE  !(choice == 4)
[L2052]  COND TRUE   choice == 3
[L2053]              gas := gas - 21000;
[L2054]  COND TRUE   gas >= 0
[L2055]              assume tokens_s884 >= 0 && tokens_s884 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2056]              assume msgvalue_MSG == 0;
[L2057]  CALL        call success_s884 := transfer~address~uint256__0xMoneroToken(this, msgsender_MSG, msgvalue_MSG, to_s884, tokens_s884);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == to_s884 && tokens_s884 <= balances__0xMoneroToken[this][msgsender_MSG]) && tokens_s884 >= 0) && tokens_s884 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances__0xMoneroToken[this][to_s884] >= 0) && balances__0xMoneroToken[this][to_s884] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances__0xMoneroToken[this][msgsender_MSG] >= 0) && balances__0xMoneroToken[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer__0xMoneroToken0 := true;
[L2]                 call_transfer__0xMoneroToken0 := false;
[L2]                 revert := revert_hold;
[L291]               havoc __exception;
[L292]               revert := false;
[L293]   COND TRUE   __exception
[L294]               __tmp__Balance := Balance;
[L295]               __tmp__DType := DType;
[L296]               __tmp__Alloc := Alloc;
[L297]               __tmp__balance_ADDR := balance_ADDR;
[L298]               __tmp__M_int_int := M_int_int;
[L299]               __tmp__sum_solutionForChallenge0 := sum_solutionForChallenge0;
[L300]               __tmp__M_Ref_int := M_Ref_int;
[L301]               __tmp__sum_balances1 := sum_balances1;
[L302]               __tmp__alloc_allowed__0xMoneroToken_lvl0 := alloc_allowed__0xMoneroToken_lvl0;
[L303]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L304]               __tmp__sum_allowed2 := sum_allowed2;
[L305]               __tmp__Length := Length;
[L306]               __tmp__now := now;
[L307]               __tmp__owner_Owned := owner_Owned;
[L308]               __tmp__newOwner_Owned := newOwner_Owned;
[L309]               __tmp__symbol__0xMoneroToken := symbol__0xMoneroToken;
[L310]               __tmp__name__0xMoneroToken := name__0xMoneroToken;
[L311]               __tmp__decimals__0xMoneroToken := decimals__0xMoneroToken;
[L312]               __tmp___totalSupply__0xMoneroToken := _totalSupply__0xMoneroToken;
[L313]               __tmp__latestDifficultyPeriodStarted__0xMoneroToken := latestDifficultyPeriodStarted__0xMoneroToken;
[L314]               __tmp__epochCount__0xMoneroToken := epochCount__0xMoneroToken;
[L315]               __tmp___BLOCKS_PER_READJUSTMENT__0xMoneroToken := _BLOCKS_PER_READJUSTMENT__0xMoneroToken;
[L316]               __tmp___MINIMUM_TARGET__0xMoneroToken := _MINIMUM_TARGET__0xMoneroToken;
[L317]               __tmp___MAXIMUM_TARGET__0xMoneroToken := _MAXIMUM_TARGET__0xMoneroToken;
[L318]               __tmp__miningTarget__0xMoneroToken := miningTarget__0xMoneroToken;
[L319]               __tmp__challengeNumber__0xMoneroToken := challengeNumber__0xMoneroToken;
[L320]               __tmp__rewardEra__0xMoneroToken := rewardEra__0xMoneroToken;
[L321]               __tmp__maxSupplyForEra__0xMoneroToken := maxSupplyForEra__0xMoneroToken;
[L322]               __tmp__lastRewardTo__0xMoneroToken := lastRewardTo__0xMoneroToken;
[L323]               __tmp__lastRewardAmount__0xMoneroToken := lastRewardAmount__0xMoneroToken;
[L324]               __tmp__lastRewardEthBlockNumber__0xMoneroToken := lastRewardEthBlockNumber__0xMoneroToken;
[L325]               __tmp__locked__0xMoneroToken := locked__0xMoneroToken;
[L326]               __tmp__solutionForChallenge__0xMoneroToken := solutionForChallenge__0xMoneroToken;
[L327]               __tmp__tokensMinted__0xMoneroToken := tokensMinted__0xMoneroToken;
[L328]               __tmp__balances__0xMoneroToken := balances__0xMoneroToken;
[L329]               __tmp__allowed__0xMoneroToken := allowed__0xMoneroToken;
[L330]   CALL        call success_s884 := transfer~address~uint256__0xMoneroToken__fail(this, msgsender_MSG, msgvalue_MSG, to_s884, tokens_s884);
[L1007]  CALL        call __var_2 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __tmp__balances__0xMoneroToken[this][msgsender_MSG], tokens_s884);
[L959]   COND FALSE  !(!(b_s45 <= a_s45))
[L963]               c_s45 := (a_s45 - b_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1007]  RET         call __var_2 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __tmp__balances__0xMoneroToken[this][msgsender_MSG], tokens_s884);
[L1008]  COND TRUE   revert
[L330]   RET         call success_s884 := transfer~address~uint256__0xMoneroToken__fail(this, msgsender_MSG, msgvalue_MSG, to_s884, tokens_s884);
[L331]               assume revert || gas < 0;
[L2057]  RET         call success_s884 := transfer~address~uint256__0xMoneroToken(this, msgsender_MSG, msgvalue_MSG, to_s884, tokens_s884);
[L2086]  RET         call CorralChoice__0xMoneroToken(this);

Loop:
[L2086]        assume true;

[2020-11-28 15:31:05,413 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-28 15:31:05,414 INFO  L82        PathProgramCache]: Analyzing trace with hash 1098852241, now seen corresponding path program 1 times
[2020-11-28 15:31:05,414 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-28 15:31:05,424 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-28 15:31:05,455 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-28 15:31:05,455 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-28 15:31:05,456 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [5] imperfect sequences [] total 5
[2020-11-28 15:31:05,456 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-28 15:31:05,457 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 5 interpolants.
[2020-11-28 15:31:05,457 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=9, Invalid=11, Unknown=0, NotChecked=0, Total=20
[2020-11-28 15:31:05,457 INFO  L87              Difference]: Start difference. First operand 183 states and 186 transitions. cyclomatic complexity: 4 Second operand 5 states.
[2020-11-28 15:31:05,471 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-28 15:31:05,471 INFO  L93              Difference]: Finished difference Result 194 states and 195 transitions.
[2020-11-28 15:31:05,471 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-28 15:31:05,471 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 194 states and 195 transitions.
[2020-11-28 15:31:05,472 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 2
[2020-11-28 15:31:05,473 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 194 states to 194 states and 195 transitions.
[2020-11-28 15:31:05,474 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 194
[2020-11-28 15:31:05,474 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 194
[2020-11-28 15:31:05,474 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 194 states and 195 transitions.
[2020-11-28 15:31:05,474 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-28 15:31:05,474 INFO  L728         BuchiCegarLoop]: Abstraction has 194 states and 195 transitions.
[2020-11-28 15:31:05,475 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 194 states and 195 transitions.
[2020-11-28 15:31:05,477 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 194 to 183.
[2020-11-28 15:31:05,477 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 183 states.
[2020-11-28 15:31:05,477 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 183 states to 183 states and 184 transitions.
[2020-11-28 15:31:05,477 INFO  L751         BuchiCegarLoop]: Abstraction has 183 states and 184 transitions.
[2020-11-28 15:31:05,477 INFO  L631         BuchiCegarLoop]: Abstraction has 183 states and 184 transitions.
[2020-11-28 15:31:05,478 INFO  L445         BuchiCegarLoop]: ======== Iteration 6============
[2020-11-28 15:31:05,478 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 183 states and 184 transitions.
[2020-11-28 15:31:05,479 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-28 15:31:05,479 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-28 15:31:05,479 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-28 15:31:05,480 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-28 15:31:05,480 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L2]                 success_transfer__0xMoneroToken0 := false;
[L2]                 call_transfer__0xMoneroToken0 := false;
[L2]     CALL        call main();
[L2081]              assume null == 0;
[L2082]  CALL        call this := FreshRefGenerator__success();
[L933]               havoc newRef;
[L934]               assume Alloc[newRef] == false;
[L935]               Alloc[newRef] := true;
[L936]               assume newRef != null;
[L2082]  RET         call this := FreshRefGenerator__success();
[L2083]              assume now >= 0;
[L2084]              assume DType[this] == _0xMoneroToken;
[L2085]              assume !revert && gas >= 0;
[L2086]  CALL        call CorralChoice__0xMoneroToken(this);
[L1965]              havoc msgsender_MSG;
[L1966]              havoc msgvalue_MSG;
[L1967]              havoc choice;
[L1968]              havoc __ret_0_totalSupply;
[L1969]              havoc tokenOwner_s841;
[L1970]              havoc balance_s841;
[L1971]              havoc tokenOwner_s987;
[L1972]              havoc spender_s987;
[L1973]              havoc remaining_s987;
[L1974]              havoc to_s884;
[L1975]              havoc tokens_s884;
[L1976]              havoc success_s884;
[L1977]              havoc spender_s912;
[L1978]              havoc tokens_s912;
[L1979]              havoc success_s912;
[L1980]              havoc from_s971;
[L1981]              havoc to_s971;
[L1982]              havoc tokens_s971;
[L1983]              havoc success_s971;
[L1984]              havoc __ret_0_owner;
[L1985]              havoc __ret_0_newOwner;
[L1986]              havoc _newOwner_s236;
[L1987]              havoc __ret_0_symbol;
[L1988]              havoc __ret_0_name;
[L1989]              havoc __ret_0_decimals;
[L1990]              havoc __ret_0__totalSupply;
[L1991]              havoc __ret_0_latestDifficultyPeriodStarted;
[L1992]              havoc __ret_0_epochCount;
[L1993]              havoc __ret_0__BLOCKS_PER_READJUSTMENT;
[L1994]              havoc __ret_0__MINIMUM_TARGET;
[L1995]              havoc __ret_0__MAXIMUM_TARGET;
[L1996]              havoc __ret_0_miningTarget;
[L1997]              havoc __ret_0_challengeNumber;
[L1998]              havoc __ret_0_rewardEra;
[L1999]              havoc __ret_0_maxSupplyForEra;
[L2000]              havoc __ret_0_lastRewardTo;
[L2001]              havoc __ret_0_lastRewardAmount;
[L2002]              havoc __ret_0_lastRewardEthBlockNumber;
[L2003]              havoc __ret_0_tokensMinted;
[L2004]              havoc nonce_s520;
[L2005]              havoc challenge_digest_s520;
[L2006]              havoc success_s520;
[L2007]              havoc __ret_0_getChallengeNumber;
[L2008]              havoc __ret_0_getMiningDifficulty;
[L2009]              havoc __ret_0_getMiningTarget;
[L2010]              havoc __ret_0_getMiningReward;
[L2011]              havoc nonce_s775;
[L2012]              havoc challenge_digest_s775;
[L2013]              havoc challenge_number_s775;
[L2014]              havoc digesttest_s775;
[L2015]              havoc nonce_s815;
[L2016]              havoc challenge_digest_s815;
[L2017]              havoc challenge_number_s815;
[L2018]              havoc testTarget_s815;
[L2019]              havoc success_s815;
[L2020]              havoc spender_s1030;
[L2021]              havoc tokens_s1030;
[L2022]              havoc data_s1030;
[L2023]              havoc success_s1030;
[L2024]              havoc tokenAddress_s1057;
[L2025]              havoc tokens_s1057;
[L2026]              havoc success_s1057;
[L2027]              havoc tmpNow;
[L2028]              havoc gas;
[L2029]              assume gas > 4000000 && gas <= 8000000;
[L2030]              tmpNow := now;
[L2031]              havoc now;
[L2032]              assume now > tmpNow;
[L2033]              assume msgsender_MSG != null;
[L2034]  COND FALSE  !(choice == 6)
[L2040]  COND FALSE  !(choice == 5)
[L2046]  COND FALSE  !(choice == 4)
[L2052]  COND TRUE   choice == 3
[L2053]              gas := gas - 21000;
[L2054]  COND TRUE   gas >= 0
[L2055]              assume tokens_s884 >= 0 && tokens_s884 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2056]              assume msgvalue_MSG == 0;
[L2057]  CALL        call success_s884 := transfer~address~uint256__0xMoneroToken(this, msgsender_MSG, msgvalue_MSG, to_s884, tokens_s884);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == to_s884 && tokens_s884 <= balances__0xMoneroToken[this][msgsender_MSG]) && tokens_s884 >= 0) && tokens_s884 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances__0xMoneroToken[this][to_s884] >= 0) && balances__0xMoneroToken[this][to_s884] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances__0xMoneroToken[this][msgsender_MSG] >= 0) && balances__0xMoneroToken[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer__0xMoneroToken0 := true;
[L2]                 call_transfer__0xMoneroToken0 := false;
[L2]                 revert := revert_hold;
[L291]               havoc __exception;
[L292]               revert := false;
[L293]   COND TRUE   __exception
[L294]               __tmp__Balance := Balance;
[L295]               __tmp__DType := DType;
[L296]               __tmp__Alloc := Alloc;
[L297]               __tmp__balance_ADDR := balance_ADDR;
[L298]               __tmp__M_int_int := M_int_int;
[L299]               __tmp__sum_solutionForChallenge0 := sum_solutionForChallenge0;
[L300]               __tmp__M_Ref_int := M_Ref_int;
[L301]               __tmp__sum_balances1 := sum_balances1;
[L302]               __tmp__alloc_allowed__0xMoneroToken_lvl0 := alloc_allowed__0xMoneroToken_lvl0;
[L303]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L304]               __tmp__sum_allowed2 := sum_allowed2;
[L305]               __tmp__Length := Length;
[L306]               __tmp__now := now;
[L307]               __tmp__owner_Owned := owner_Owned;
[L308]               __tmp__newOwner_Owned := newOwner_Owned;
[L309]               __tmp__symbol__0xMoneroToken := symbol__0xMoneroToken;
[L310]               __tmp__name__0xMoneroToken := name__0xMoneroToken;
[L311]               __tmp__decimals__0xMoneroToken := decimals__0xMoneroToken;
[L312]               __tmp___totalSupply__0xMoneroToken := _totalSupply__0xMoneroToken;
[L313]               __tmp__latestDifficultyPeriodStarted__0xMoneroToken := latestDifficultyPeriodStarted__0xMoneroToken;
[L314]               __tmp__epochCount__0xMoneroToken := epochCount__0xMoneroToken;
[L315]               __tmp___BLOCKS_PER_READJUSTMENT__0xMoneroToken := _BLOCKS_PER_READJUSTMENT__0xMoneroToken;
[L316]               __tmp___MINIMUM_TARGET__0xMoneroToken := _MINIMUM_TARGET__0xMoneroToken;
[L317]               __tmp___MAXIMUM_TARGET__0xMoneroToken := _MAXIMUM_TARGET__0xMoneroToken;
[L318]               __tmp__miningTarget__0xMoneroToken := miningTarget__0xMoneroToken;
[L319]               __tmp__challengeNumber__0xMoneroToken := challengeNumber__0xMoneroToken;
[L320]               __tmp__rewardEra__0xMoneroToken := rewardEra__0xMoneroToken;
[L321]               __tmp__maxSupplyForEra__0xMoneroToken := maxSupplyForEra__0xMoneroToken;
[L322]               __tmp__lastRewardTo__0xMoneroToken := lastRewardTo__0xMoneroToken;
[L323]               __tmp__lastRewardAmount__0xMoneroToken := lastRewardAmount__0xMoneroToken;
[L324]               __tmp__lastRewardEthBlockNumber__0xMoneroToken := lastRewardEthBlockNumber__0xMoneroToken;
[L325]               __tmp__locked__0xMoneroToken := locked__0xMoneroToken;
[L326]               __tmp__solutionForChallenge__0xMoneroToken := solutionForChallenge__0xMoneroToken;
[L327]               __tmp__tokensMinted__0xMoneroToken := tokensMinted__0xMoneroToken;
[L328]               __tmp__balances__0xMoneroToken := balances__0xMoneroToken;
[L329]               __tmp__allowed__0xMoneroToken := allowed__0xMoneroToken;
[L330]   CALL        call success_s884 := transfer~address~uint256__0xMoneroToken__fail(this, msgsender_MSG, msgvalue_MSG, to_s884, tokens_s884);
[L1007]  CALL        call __var_2 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __tmp__balances__0xMoneroToken[this][msgsender_MSG], tokens_s884);
[L959]   COND FALSE  !(!(b_s45 <= a_s45))
[L963]               c_s45 := (a_s45 - b_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1007]  RET         call __var_2 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __tmp__balances__0xMoneroToken[this][msgsender_MSG], tokens_s884);
[L1008]  COND FALSE  !(revert)
[L1011]              __tmp__sum_balances1[this] := __tmp__sum_balances1[this] - __tmp__balances__0xMoneroToken[this][msgsender_MSG];
[L1012]              __tmp__balances__0xMoneroToken[this][msgsender_MSG] := __var_2;
[L1013]              __tmp__sum_balances1[this] := __tmp__sum_balances1[this] + __tmp__balances__0xMoneroToken[this][msgsender_MSG];
[L1014]  CALL        call __var_3 := add~uint256~uint256_SafeMath__fail(this, this, 0, __tmp__balances__0xMoneroToken[this][to_s884], tokens_s884);
[L941]               c_s23 := (a_s23 + b_s23) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L942]   COND TRUE   !(c_s23 >= a_s23)
[L943]               revert := true;
[L1014]  RET         call __var_3 := add~uint256~uint256_SafeMath__fail(this, this, 0, __tmp__balances__0xMoneroToken[this][to_s884], tokens_s884);
[L1015]  COND TRUE   revert
[L330]   RET         call success_s884 := transfer~address~uint256__0xMoneroToken__fail(this, msgsender_MSG, msgvalue_MSG, to_s884, tokens_s884);
[L331]               assume revert || gas < 0;
[L2057]  RET         call success_s884 := transfer~address~uint256__0xMoneroToken(this, msgsender_MSG, msgvalue_MSG, to_s884, tokens_s884);
[L2086]  RET         call CorralChoice__0xMoneroToken(this);

Loop:
[L2086]        assume true;

[2020-11-28 15:31:05,483 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-28 15:31:05,483 INFO  L82        PathProgramCache]: Analyzing trace with hash 1987604957, now seen corresponding path program 1 times
[2020-11-28 15:31:05,484 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-28 15:31:05,497 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-28 15:31:05,622 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-28 15:31:05,622 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-28 15:31:05,622 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [12] imperfect sequences [] total 12
[2020-11-28 15:31:05,623 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-28 15:31:05,623 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 12 interpolants.
[2020-11-28 15:31:05,623 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=23, Invalid=109, Unknown=0, NotChecked=0, Total=132
[2020-11-28 15:31:05,623 INFO  L87              Difference]: Start difference. First operand 183 states and 184 transitions. cyclomatic complexity: 2 Second operand 12 states.
[2020-11-28 15:31:05,735 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-28 15:31:05,735 INFO  L93              Difference]: Finished difference Result 185 states and 185 transitions.
[2020-11-28 15:31:05,735 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 13 states. 
[2020-11-28 15:31:05,735 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 185 states and 185 transitions.
[2020-11-28 15:31:05,736 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-28 15:31:05,737 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 185 states to 178 states and 178 transitions.
[2020-11-28 15:31:05,737 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 178
[2020-11-28 15:31:05,738 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 178
[2020-11-28 15:31:05,738 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 178 states and 178 transitions.
[2020-11-28 15:31:05,738 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-28 15:31:05,738 INFO  L728         BuchiCegarLoop]: Abstraction has 178 states and 178 transitions.
[2020-11-28 15:31:05,738 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 178 states and 178 transitions.
[2020-11-28 15:31:05,740 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 178 to 178.
[2020-11-28 15:31:05,740 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 178 states.
[2020-11-28 15:31:05,740 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 178 states to 178 states and 178 transitions.
[2020-11-28 15:31:05,740 INFO  L751         BuchiCegarLoop]: Abstraction has 178 states and 178 transitions.
[2020-11-28 15:31:05,740 INFO  L631         BuchiCegarLoop]: Abstraction has 178 states and 178 transitions.
[2020-11-28 15:31:05,741 INFO  L445         BuchiCegarLoop]: ======== Iteration 7============
[2020-11-28 15:31:05,741 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 178 states and 178 transitions.
[2020-11-28 15:31:05,741 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-28 15:31:05,741 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-28 15:31:05,741 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-28 15:31:05,743 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-28 15:31:05,743 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L2]                 success_transfer__0xMoneroToken0 := false;
[L2]                 call_transfer__0xMoneroToken0 := false;
[L2]     CALL        call main();
[L2081]              assume null == 0;
[L2082]  CALL        call this := FreshRefGenerator__success();
[L933]               havoc newRef;
[L934]               assume Alloc[newRef] == false;
[L935]               Alloc[newRef] := true;
[L936]               assume newRef != null;
[L2082]  RET         call this := FreshRefGenerator__success();
[L2083]              assume now >= 0;
[L2084]              assume DType[this] == _0xMoneroToken;
[L2085]              assume !revert && gas >= 0;
[L2086]  CALL        call CorralChoice__0xMoneroToken(this);
[L1965]              havoc msgsender_MSG;
[L1966]              havoc msgvalue_MSG;
[L1967]              havoc choice;
[L1968]              havoc __ret_0_totalSupply;
[L1969]              havoc tokenOwner_s841;
[L1970]              havoc balance_s841;
[L1971]              havoc tokenOwner_s987;
[L1972]              havoc spender_s987;
[L1973]              havoc remaining_s987;
[L1974]              havoc to_s884;
[L1975]              havoc tokens_s884;
[L1976]              havoc success_s884;
[L1977]              havoc spender_s912;
[L1978]              havoc tokens_s912;
[L1979]              havoc success_s912;
[L1980]              havoc from_s971;
[L1981]              havoc to_s971;
[L1982]              havoc tokens_s971;
[L1983]              havoc success_s971;
[L1984]              havoc __ret_0_owner;
[L1985]              havoc __ret_0_newOwner;
[L1986]              havoc _newOwner_s236;
[L1987]              havoc __ret_0_symbol;
[L1988]              havoc __ret_0_name;
[L1989]              havoc __ret_0_decimals;
[L1990]              havoc __ret_0__totalSupply;
[L1991]              havoc __ret_0_latestDifficultyPeriodStarted;
[L1992]              havoc __ret_0_epochCount;
[L1993]              havoc __ret_0__BLOCKS_PER_READJUSTMENT;
[L1994]              havoc __ret_0__MINIMUM_TARGET;
[L1995]              havoc __ret_0__MAXIMUM_TARGET;
[L1996]              havoc __ret_0_miningTarget;
[L1997]              havoc __ret_0_challengeNumber;
[L1998]              havoc __ret_0_rewardEra;
[L1999]              havoc __ret_0_maxSupplyForEra;
[L2000]              havoc __ret_0_lastRewardTo;
[L2001]              havoc __ret_0_lastRewardAmount;
[L2002]              havoc __ret_0_lastRewardEthBlockNumber;
[L2003]              havoc __ret_0_tokensMinted;
[L2004]              havoc nonce_s520;
[L2005]              havoc challenge_digest_s520;
[L2006]              havoc success_s520;
[L2007]              havoc __ret_0_getChallengeNumber;
[L2008]              havoc __ret_0_getMiningDifficulty;
[L2009]              havoc __ret_0_getMiningTarget;
[L2010]              havoc __ret_0_getMiningReward;
[L2011]              havoc nonce_s775;
[L2012]              havoc challenge_digest_s775;
[L2013]              havoc challenge_number_s775;
[L2014]              havoc digesttest_s775;
[L2015]              havoc nonce_s815;
[L2016]              havoc challenge_digest_s815;
[L2017]              havoc challenge_number_s815;
[L2018]              havoc testTarget_s815;
[L2019]              havoc success_s815;
[L2020]              havoc spender_s1030;
[L2021]              havoc tokens_s1030;
[L2022]              havoc data_s1030;
[L2023]              havoc success_s1030;
[L2024]              havoc tokenAddress_s1057;
[L2025]              havoc tokens_s1057;
[L2026]              havoc success_s1057;
[L2027]              havoc tmpNow;
[L2028]              havoc gas;
[L2029]              assume gas > 4000000 && gas <= 8000000;
[L2030]              tmpNow := now;
[L2031]              havoc now;
[L2032]              assume now > tmpNow;
[L2033]              assume msgsender_MSG != null;
[L2034]  COND FALSE  !(choice == 6)
[L2040]  COND FALSE  !(choice == 5)
[L2046]  COND FALSE  !(choice == 4)
[L2052]  COND TRUE   choice == 3
[L2053]              gas := gas - 21000;
[L2054]  COND TRUE   gas >= 0
[L2055]              assume tokens_s884 >= 0 && tokens_s884 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2056]              assume msgvalue_MSG == 0;
[L2057]  CALL        call success_s884 := transfer~address~uint256__0xMoneroToken(this, msgsender_MSG, msgvalue_MSG, to_s884, tokens_s884);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == to_s884 && tokens_s884 <= balances__0xMoneroToken[this][msgsender_MSG]) && tokens_s884 >= 0) && tokens_s884 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances__0xMoneroToken[this][to_s884] >= 0) && balances__0xMoneroToken[this][to_s884] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances__0xMoneroToken[this][msgsender_MSG] >= 0) && balances__0xMoneroToken[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer__0xMoneroToken0 := true;
[L2]                 call_transfer__0xMoneroToken0 := false;
[L2]                 revert := revert_hold;
[L291]               havoc __exception;
[L292]               revert := false;
[L293]   COND TRUE   __exception
[L294]               __tmp__Balance := Balance;
[L295]               __tmp__DType := DType;
[L296]               __tmp__Alloc := Alloc;
[L297]               __tmp__balance_ADDR := balance_ADDR;
[L298]               __tmp__M_int_int := M_int_int;
[L299]               __tmp__sum_solutionForChallenge0 := sum_solutionForChallenge0;
[L300]               __tmp__M_Ref_int := M_Ref_int;
[L301]               __tmp__sum_balances1 := sum_balances1;
[L302]               __tmp__alloc_allowed__0xMoneroToken_lvl0 := alloc_allowed__0xMoneroToken_lvl0;
[L303]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L304]               __tmp__sum_allowed2 := sum_allowed2;
[L305]               __tmp__Length := Length;
[L306]               __tmp__now := now;
[L307]               __tmp__owner_Owned := owner_Owned;
[L308]               __tmp__newOwner_Owned := newOwner_Owned;
[L309]               __tmp__symbol__0xMoneroToken := symbol__0xMoneroToken;
[L310]               __tmp__name__0xMoneroToken := name__0xMoneroToken;
[L311]               __tmp__decimals__0xMoneroToken := decimals__0xMoneroToken;
[L312]               __tmp___totalSupply__0xMoneroToken := _totalSupply__0xMoneroToken;
[L313]               __tmp__latestDifficultyPeriodStarted__0xMoneroToken := latestDifficultyPeriodStarted__0xMoneroToken;
[L314]               __tmp__epochCount__0xMoneroToken := epochCount__0xMoneroToken;
[L315]               __tmp___BLOCKS_PER_READJUSTMENT__0xMoneroToken := _BLOCKS_PER_READJUSTMENT__0xMoneroToken;
[L316]               __tmp___MINIMUM_TARGET__0xMoneroToken := _MINIMUM_TARGET__0xMoneroToken;
[L317]               __tmp___MAXIMUM_TARGET__0xMoneroToken := _MAXIMUM_TARGET__0xMoneroToken;
[L318]               __tmp__miningTarget__0xMoneroToken := miningTarget__0xMoneroToken;
[L319]               __tmp__challengeNumber__0xMoneroToken := challengeNumber__0xMoneroToken;
[L320]               __tmp__rewardEra__0xMoneroToken := rewardEra__0xMoneroToken;
[L321]               __tmp__maxSupplyForEra__0xMoneroToken := maxSupplyForEra__0xMoneroToken;
[L322]               __tmp__lastRewardTo__0xMoneroToken := lastRewardTo__0xMoneroToken;
[L323]               __tmp__lastRewardAmount__0xMoneroToken := lastRewardAmount__0xMoneroToken;
[L324]               __tmp__lastRewardEthBlockNumber__0xMoneroToken := lastRewardEthBlockNumber__0xMoneroToken;
[L325]               __tmp__locked__0xMoneroToken := locked__0xMoneroToken;
[L326]               __tmp__solutionForChallenge__0xMoneroToken := solutionForChallenge__0xMoneroToken;
[L327]               __tmp__tokensMinted__0xMoneroToken := tokensMinted__0xMoneroToken;
[L328]               __tmp__balances__0xMoneroToken := balances__0xMoneroToken;
[L329]               __tmp__allowed__0xMoneroToken := allowed__0xMoneroToken;
[L330]   CALL        call success_s884 := transfer~address~uint256__0xMoneroToken__fail(this, msgsender_MSG, msgvalue_MSG, to_s884, tokens_s884);
[L1007]  CALL        call __var_2 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __tmp__balances__0xMoneroToken[this][msgsender_MSG], tokens_s884);
[L959]   COND FALSE  !(!(b_s45 <= a_s45))
[L963]               c_s45 := (a_s45 - b_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1007]  RET         call __var_2 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __tmp__balances__0xMoneroToken[this][msgsender_MSG], tokens_s884);
[L1008]  COND FALSE  !(revert)
[L1011]              __tmp__sum_balances1[this] := __tmp__sum_balances1[this] - __tmp__balances__0xMoneroToken[this][msgsender_MSG];
[L1012]              __tmp__balances__0xMoneroToken[this][msgsender_MSG] := __var_2;
[L1013]              __tmp__sum_balances1[this] := __tmp__sum_balances1[this] + __tmp__balances__0xMoneroToken[this][msgsender_MSG];
[L1014]  CALL        call __var_3 := add~uint256~uint256_SafeMath__fail(this, this, 0, __tmp__balances__0xMoneroToken[this][to_s884], tokens_s884);
[L941]               c_s23 := (a_s23 + b_s23) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L942]   COND FALSE  !(!(c_s23 >= a_s23))
[L1014]  RET         call __var_3 := add~uint256~uint256_SafeMath__fail(this, this, 0, __tmp__balances__0xMoneroToken[this][to_s884], tokens_s884);
[L1015]  COND FALSE  !(revert)
[L1018]              __tmp__sum_balances1[this] := __tmp__sum_balances1[this] - __tmp__balances__0xMoneroToken[this][to_s884];
[L1019]              __tmp__balances__0xMoneroToken[this][to_s884] := __var_3;
[L1020]              __tmp__sum_balances1[this] := __tmp__sum_balances1[this] + __tmp__balances__0xMoneroToken[this][to_s884];
[L1021]              success_s884 := true;
[L330]   RET         call success_s884 := transfer~address~uint256__0xMoneroToken__fail(this, msgsender_MSG, msgvalue_MSG, to_s884, tokens_s884);
[L331]               assume revert || gas < 0;
[L2057]  RET         call success_s884 := transfer~address~uint256__0xMoneroToken(this, msgsender_MSG, msgvalue_MSG, to_s884, tokens_s884);
[L2086]  RET         call CorralChoice__0xMoneroToken(this);

Loop:
[L2086]        assume true;

[2020-11-28 15:31:05,745 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-28 15:31:05,745 INFO  L82        PathProgramCache]: Analyzing trace with hash -186829748, now seen corresponding path program 1 times
[2020-11-28 15:31:05,746 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-28 15:31:05,755 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-28 15:31:05,777 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-28 15:31:05,778 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-28 15:31:05,778 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [5] imperfect sequences [] total 5
[2020-11-28 15:31:05,778 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-28 15:31:05,778 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 5 interpolants.
[2020-11-28 15:31:05,778 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=7, Invalid=13, Unknown=0, NotChecked=0, Total=20
[2020-11-28 15:31:05,778 INFO  L87              Difference]: Start difference. First operand 178 states and 178 transitions. cyclomatic complexity: 1 Second operand 5 states.
[2020-11-28 15:31:05,788 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-28 15:31:05,788 INFO  L93              Difference]: Finished difference Result 171 states and 170 transitions.
[2020-11-28 15:31:05,788 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 5 states. 
[2020-11-28 15:31:05,788 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 171 states and 170 transitions.
[2020-11-28 15:31:05,789 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-28 15:31:05,789 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 171 states to 0 states and 0 transitions.
[2020-11-28 15:31:05,790 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 0
[2020-11-28 15:31:05,790 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 0
[2020-11-28 15:31:05,790 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 0 states and 0 transitions.
[2020-11-28 15:31:05,790 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-28 15:31:05,790 INFO  L728         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-28 15:31:05,790 INFO  L751         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-28 15:31:05,790 INFO  L631         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-28 15:31:05,790 INFO  L445         BuchiCegarLoop]: ======== Iteration 8============
[2020-11-28 15:31:05,790 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 0 states and 0 transitions.
[2020-11-28 15:31:05,790 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-28 15:31:05,790 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is true
[2020-11-28 15:31:05,794 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 28.11 03:31:05 BasicIcfg
[2020-11-28 15:31:05,794 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-28 15:31:05,795 INFO  L168              Benchmark]: Toolchain (without parser) took 3280.17 ms. Allocated memory was 1.0 GB in the beginning and 1.3 GB in the end (delta: 251.1 MB). Free memory was 940.6 MB in the beginning and 1.2 GB in the end (delta: -221.1 MB). Peak memory consumption was 30.0 MB. Max. memory is 15.3 GB.
[2020-11-28 15:31:05,796 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.15 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-28 15:31:05,796 INFO  L168              Benchmark]: Boogie Preprocessor took 56.15 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 935.2 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-28 15:31:05,797 INFO  L168              Benchmark]: UtopiaSpecLang took 53.34 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 929.8 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-28 15:31:05,797 INFO  L168              Benchmark]: Boogie Printer took 9.34 ms. Allocated memory is still 1.0 GB. Free memory is still 929.8 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-28 15:31:05,797 INFO  L168              Benchmark]: RCFGBuilder took 455.25 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 876.1 MB in the end (delta: 53.7 MB). Peak memory consumption was 53.7 MB. Max. memory is 15.3 GB.
[2020-11-28 15:31:05,797 INFO  L168              Benchmark]: UtopiaLTL2Aut took 42.23 ms. Allocated memory is still 1.0 GB. Free memory was 876.1 MB in the beginning and 872.6 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
[2020-11-28 15:31:05,798 INFO  L168              Benchmark]: BÃ¼chi Program Product took 919.89 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 72.4 MB). Free memory was 872.6 MB in the beginning and 957.2 MB in the end (delta: -84.6 MB). Peak memory consumption was 155.8 MB. Max. memory is 15.3 GB.
[2020-11-28 15:31:05,798 INFO  L168              Benchmark]: BlockEncodingV2 took 76.44 ms. Allocated memory is still 1.1 GB. Free memory was 957.2 MB in the beginning and 927.1 MB in the end (delta: 30.1 MB). Peak memory consumption was 30.1 MB. Max. memory is 15.3 GB.
[2020-11-28 15:31:05,799 INFO  L168              Benchmark]: BuchiAutomizer took 1665.00 ms. Allocated memory was 1.1 GB in the beginning and 1.3 GB in the end (delta: 178.8 MB). Free memory was 927.1 MB in the beginning and 1.2 GB in the end (delta: -234.7 MB). There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-28 15:31:05,803 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    1612 locations, 2626 edges
  - StatisticsResult: Encoded RCFG
    1578 locations, 2547 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.15 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 56.15 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 935.2 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 53.34 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 929.8 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 9.34 ms. Allocated memory is still 1.0 GB. Free memory is still 929.8 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * RCFGBuilder took 455.25 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 876.1 MB in the end (delta: 53.7 MB). Peak memory consumption was 53.7 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 42.23 ms. Allocated memory is still 1.0 GB. Free memory was 876.1 MB in the beginning and 872.6 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 919.89 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 72.4 MB). Free memory was 872.6 MB in the beginning and 957.2 MB in the end (delta: -84.6 MB). Peak memory consumption was 155.8 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 76.44 ms. Allocated memory is still 1.1 GB. Free memory was 957.2 MB in the beginning and 927.1 MB in the end (delta: 30.1 MB). Peak memory consumption was 30.1 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 1665.00 ms. Allocated memory was 1.1 GB in the beginning and 1.3 GB in the end (delta: 178.8 MB). Free memory was 927.1 MB in the beginning and 1.2 GB in the end (delta: -234.7 MB). There was no memory consumed. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    716 locations, 823 edges
  - StatisticsResult: BuchiProgram size
    1612 locations, 2626 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 7 terminating modules (7 trivial, 0 deterministic, 0 nondeterministic). 7 modules have a trivial ranking function, the largest among these consists of 14 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 1.6s and 8 iterations.  TraceHistogramMax:1. Analysis of lassos took 0.7s. Construction of modules took 0.3s. BÃ¼chi inclusion checks took 0.4s. Highest rank in rank-based complementation 0. Minimization of det autom 7. Minimization of nondet autom 0. Automata minimization 0.0s AutomataMinimizationTime, 6 MinimizatonAttempts, 28 StatesRemovedByMinimization, 3 NontrivialMinimizations. Non-live state removal took 0.0s Buchi closure took 0.0s. Biggest automaton had 222 states and ocurred in iteration 2.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 1877 SDtfs, 1940 SDslu, 4050 SDs, 0 SdLazy, 1588 SolverSat, 618 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 0.3s Time	LassoAnalysisResults: nont0 unkn0 SFLI0 SFLT0 conc0 concLT0 SILN0 SILU7 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - AllSpecificationsHoldResult: All specifications hold
    Buchi Automizer proved that the LTL property ! ( ( []( (call_transfer__0xMoneroToken0) ==> ( <>(success_transfer__0xMoneroToken0) ) ) )) holds
RESULT: Ultimate proved your program to be correct!
Received shutdown request...
