This is Ultimate 0.1.24-f1553f5-m
[2020-11-24 18:11:52,413 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-24 18:11:52,414 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-24 18:11:52,426 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-24 18:11:52,426 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-24 18:11:52,426 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-24 18:11:52,428 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-24 18:11:52,429 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-24 18:11:52,431 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-24 18:11:52,431 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-24 18:11:52,432 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-24 18:11:52,432 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-24 18:11:52,433 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-24 18:11:52,434 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-24 18:11:52,435 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-24 18:11:52,436 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-24 18:11:52,436 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-24 18:11:52,437 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-24 18:11:52,439 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-24 18:11:52,440 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-24 18:11:52,441 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-24 18:11:52,442 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-24 18:11:52,443 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-24 18:11:52,444 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-24 18:11:52,444 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-24 18:11:52,444 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-24 18:11:52,445 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-24 18:11:52,446 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-24 18:11:52,446 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-24 18:11:52,446 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-24 18:11:52,447 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-24 18:11:52,447 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-24 18:11:52,448 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-24 18:11:52,448 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-24 18:11:52,449 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-24 18:11:52,449 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-24 18:11:52,450 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-24 18:11:52,450 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-24 18:11:52,450 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-24 18:11:52,451 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-24 18:11:52,451 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-24 18:11:52,451 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-24 18:11:52,459 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-24 18:11:52,459 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-24 18:11:52,460 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-24 18:11:52,460 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-24 18:11:52,461 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-24 18:11:52,461 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-24 18:11:52,461 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-24 18:11:52,461 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-24 18:11:52,461 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-24 18:11:52,461 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-24 18:11:52,461 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-24 18:11:52,461 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-24 18:11:52,461 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-24 18:11:52,462 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-24 18:11:52,462 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-24 18:11:52,462 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-24 18:11:52,462 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-24 18:11:52,462 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-24 18:11:52,462 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-24 18:11:52,462 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-24 18:11:52,462 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-24 18:11:52,462 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-24 18:11:52,462 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-24 18:11:52,463 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-24 18:11:52,463 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-24 18:11:52,463 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-24 18:11:52,488 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-24 18:11:52,498 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-24 18:11:52,501 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-24 18:11:52,502 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-24 18:11:52,502 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-24 18:11:52,503 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/ZXL_0xfb3B4D413Fb8dF96C6336E8DD103f8af38B48F87_transferfrom-normal.bpl
[2020-11-24 18:11:52,503 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/ZXL_0xfb3B4D413Fb8dF96C6336E8DD103f8af38B48F87_transferfrom-normal.bpl'
[2020-11-24 18:11:52,556 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-24 18:11:52,557 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-24 18:11:52,557 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-24 18:11:52,557 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-24 18:11:52,558 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-24 18:11:52,574 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "ZXL_0xfb3B4D413Fb8dF96C6336E8DD103f8af38B48F87_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 06:11:52" (1/1) ...
[2020-11-24 18:11:52,575 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "ZXL_0xfb3B4D413Fb8dF96C6336E8DD103f8af38B48F87_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 06:11:52" (1/1) ...
[2020-11-24 18:11:52,593 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "ZXL_0xfb3B4D413Fb8dF96C6336E8DD103f8af38B48F87_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 06:11:52" (1/1) ...
[2020-11-24 18:11:52,594 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "ZXL_0xfb3B4D413Fb8dF96C6336E8DD103f8af38B48F87_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 06:11:52" (1/1) ...
[2020-11-24 18:11:52,607 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "ZXL_0xfb3B4D413Fb8dF96C6336E8DD103f8af38B48F87_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 06:11:52" (1/1) ...
[2020-11-24 18:11:52,615 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "ZXL_0xfb3B4D413Fb8dF96C6336E8DD103f8af38B48F87_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 06:11:52" (1/1) ...
[2020-11-24 18:11:52,622 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "ZXL_0xfb3B4D413Fb8dF96C6336E8DD103f8af38B48F87_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 06:11:52" (1/1) ...
[2020-11-24 18:11:52,630 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-24 18:11:52,630 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-24 18:11:52,631 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-24 18:11:52,633 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-24 18:11:52,636 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "ZXL_0xfb3B4D413Fb8dF96C6336E8DD103f8af38B48F87_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 06:11:52" (1/1) ...
[2020-11-24 18:11:52,651 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(ZXL.transferFrom(from, to, value), p1 != from && p1 != to && (p2 != from || p3 != msg.sender) && from != to && value <= balanceOf_ZXL[this][from] && value <= allowance_ZXL[this][from][msg.sender] && balanceOf_ZXL[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_ZXL[this][to] >= 0 && balanceOf_ZXL[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_ZXL[this][from] >= 0 &&  balanceOf_ZXL[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && allowance_ZXL[this][from][msg.sender] >= 0 && allowance_ZXL[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(ZXL.transferFrom(from, to, value), return == true && balanceOf_ZXL[this][from] == old(balanceOf_ZXL[this][from]) - value && balanceOf_ZXL[this][to] == old(balanceOf_ZXL[this][to]) + value && allowance_ZXL[this][from][msg.sender] == old(allowance_ZXL[this][from][msg.sender]) - value && totalSupply_ZXL[this] == old(totalSupply_ZXL[this]) && balanceOf_ZXL[this][p1] == old(balanceOf_ZXL[this][p1]) && allowance_ZXL[this][p2][p3] == old(allowance_ZXL[this][p2][p3]) && name_ZXL[this] == old(name_ZXL[this]) && symbol_ZXL[this] == old(symbol_ZXL[this]) && decimals_ZXL[this] == old(decimals_ZXL[this]) && owner_ZXL[this] == old(owner_ZXL[this]))))
[2020-11-24 18:11:52,657 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(ZXL.transferFrom(from, to, value), p1 != from && p1 != to && (p2 != from || p3 != msg.sender) && from != to && value <= balanceOf_ZXL[this][from] && value <= allowance_ZXL[this][from][msg.sender] && balanceOf_ZXL[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_ZXL[this][to] >= 0 && balanceOf_ZXL[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_ZXL[this][from] >= 0 &&  balanceOf_ZXL[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && allowance_ZXL[this][from][msg.sender] >= 0 && allowance_ZXL[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(ZXL.transferFrom(from, to, value), return == true && balanceOf_ZXL[this][from] == old(balanceOf_ZXL[this][from]) - value && balanceOf_ZXL[this][to] == old(balanceOf_ZXL[this][to]) + value && allowance_ZXL[this][from][msg.sender] == old(allowance_ZXL[this][from][msg.sender]) - value && totalSupply_ZXL[this] == old(totalSupply_ZXL[this]) && balanceOf_ZXL[this][p1] == old(balanceOf_ZXL[this][p1]) && allowance_ZXL[this][p2][p3] == old(allowance_ZXL[this][p2][p3]) && name_ZXL[this] == old(name_ZXL[this]) && symbol_ZXL[this] == old(symbol_ZXL[this]) && decimals_ZXL[this] == old(decimals_ZXL[this]) && owner_ZXL[this] == old(owner_ZXL[this]))))
[2020-11-24 18:11:52,665 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(ZXL.transferFrom(from, to, value), p1 != from && p1 != to && (p2 != from || p3 != msg.sender) && from != to && value <= balanceOf_ZXL[this][from] && value <= allowance_ZXL[this][from][msg.sender] && balanceOf_ZXL[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_ZXL[this][to] >= 0 && balanceOf_ZXL[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_ZXL[this][from] >= 0 &&  balanceOf_ZXL[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && allowance_ZXL[this][from][msg.sender] >= 0 && allowance_ZXL[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(ZXL.transferFrom(from, to, value), return == true && balanceOf_ZXL[this][from] == old(balanceOf_ZXL[this][from]) - value && balanceOf_ZXL[this][to] == old(balanceOf_ZXL[this][to]) + value && allowance_ZXL[this][from][msg.sender] == old(allowance_ZXL[this][from][msg.sender]) - value && totalSupply_ZXL[this] == old(totalSupply_ZXL[this]) && balanceOf_ZXL[this][p1] == old(balanceOf_ZXL[this][p1]) && allowance_ZXL[this][p2][p3] == old(allowance_ZXL[this][p2][p3]) && name_ZXL[this] == old(name_ZXL[this]) && symbol_ZXL[this] == old(symbol_ZXL[this]) && decimals_ZXL[this] == old(decimals_ZXL[this]) && owner_ZXL[this] == old(owner_ZXL[this]))))
[2020-11-24 18:11:52,671 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( ( ( ( ( ( ( p1!=_from_s200 && p1!=_to_s200 ) && ( p2!=_from_s200 || p3!=msg.sender ) ) && _from_s200!=_to_s200 ) && _value_s200<=balanceOf_ZXL[this][_from_s200] ) && _value_s200<=allowance_ZXL[this][_from_s200][msg.sender] ) && ( balanceOf_ZXL[this][_to_s200] + _value_s200 )<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && _value_s200>=0 ) && _value_s200<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && balanceOf_ZXL[this][_to_s200]>=0 ) && balanceOf_ZXL[this][_to_s200]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && balanceOf_ZXL[this][_from_s200]>=0 ) && balanceOf_ZXL[this][_from_s200]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && allowance_ZXL[this][_from_s200][msg.sender]>=0 ) && allowance_ZXL[this][_from_s200][msg.sender]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPNEQ,IdentifierExpression[p1,GLOBAL],IdentifierExpression[_from_s200,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ZXL>]],BinaryExpression[COMPNEQ,IdentifierExpression[p1,GLOBAL],IdentifierExpression[_to_s200,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ZXL>]]],BinaryExpression[LOGICOR,BinaryExpression[COMPNEQ,IdentifierExpression[p2,GLOBAL],IdentifierExpression[_from_s200,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ZXL>]],BinaryExpression[COMPNEQ,IdentifierExpression[p3,GLOBAL],IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ZXL>]]]],BinaryExpression[COMPNEQ,IdentifierExpression[_from_s200,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ZXL>],IdentifierExpression[_to_s200,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ZXL>]]],BinaryExpression[COMPLEQ,IdentifierExpression[_value_s200,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ZXL>],ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_ZXL,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ZXL>]]],[IdentifierExpression[_from_s200,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ZXL>]]]]],BinaryExpression[COMPLEQ,IdentifierExpression[_value_s200,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ZXL>],ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowance_ZXL,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ZXL>]]],[IdentifierExpression[_from_s200,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ZXL>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ZXL>]]]]],BinaryExpression[COMPLT,BinaryExpression[ARITHPLUS,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_ZXL,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ZXL>]]],[IdentifierExpression[_to_s200,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ZXL>]]],IdentifierExpression[_value_s200,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ZXL>]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,IdentifierExpression[_value_s200,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ZXL>],IntegerLiteral[0]]],BinaryExpression[COMPLT,IdentifierExpression[_value_s200,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ZXL>],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_ZXL,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ZXL>]]],[IdentifierExpression[_to_s200,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ZXL>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_ZXL,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ZXL>]]],[IdentifierExpression[_to_s200,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ZXL>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_ZXL,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ZXL>]]],[IdentifierExpression[_from_s200,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ZXL>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_ZXL,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ZXL>]]],[IdentifierExpression[_from_s200,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ZXL>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowance_ZXL,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ZXL>]]],[IdentifierExpression[_from_s200,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ZXL>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ZXL>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowance_ZXL,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ZXL>]]],[IdentifierExpression[_from_s200,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ZXL>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ZXL>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]]
[2020-11-24 18:11:52,674 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( ( ( success_s200==true && balanceOf_ZXL[this][_from_s200]==( ( old(balanceOf_ZXL[this][_from_s200]) ) - _value_s200 ) ) && balanceOf_ZXL[this][_to_s200]==( ( old(balanceOf_ZXL[this][_to_s200]) ) + _value_s200 ) ) && allowance_ZXL[this][_from_s200][msg.sender]==( ( old(allowance_ZXL[this][_from_s200][msg.sender]) ) - _value_s200 ) ) && totalSupply_ZXL[this]==( old(totalSupply_ZXL[this]) ) ) && balanceOf_ZXL[this][p1]==( old(balanceOf_ZXL[this][p1]) ) ) && allowance_ZXL[this][p2][p3]==( old(allowance_ZXL[this][p2][p3]) ) ) && name_ZXL[this]==( old(name_ZXL[this]) ) ) && symbol_ZXL[this]==( old(symbol_ZXL[this]) ) ) && decimals_ZXL[this]==( old(decimals_ZXL[this]) ) ) && owner_ZXL[this]==( old(owner_ZXL[this]) ) ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[success_s200,<IMPLEMENTATION_OUTPARAM,transferFrom~address~address~uint256_ZXL>],BooleanLiteral[true]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_ZXL,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ZXL>]]],[IdentifierExpression[_from_s200,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ZXL>]]],BinaryExpression[ARITHMINUS,UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_ZXL,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ZXL>]]],[IdentifierExpression[_from_s200,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ZXL>]]]],IdentifierExpression[_value_s200,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ZXL>]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_ZXL,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ZXL>]]],[IdentifierExpression[_to_s200,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ZXL>]]],BinaryExpression[ARITHPLUS,UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_ZXL,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ZXL>]]],[IdentifierExpression[_to_s200,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ZXL>]]]],IdentifierExpression[_value_s200,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ZXL>]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowance_ZXL,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ZXL>]]],[IdentifierExpression[_from_s200,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ZXL>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ZXL>]]],BinaryExpression[ARITHMINUS,UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowance_ZXL,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ZXL>]]],[IdentifierExpression[_from_s200,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ZXL>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ZXL>]]]],IdentifierExpression[_value_s200,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ZXL>]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[totalSupply_ZXL,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ZXL>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[totalSupply_ZXL,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ZXL>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_ZXL,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ZXL>]]],[IdentifierExpression[p1,GLOBAL]]],UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_ZXL,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ZXL>]]],[IdentifierExpression[p1,GLOBAL]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowance_ZXL,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ZXL>]]],[IdentifierExpression[p2,GLOBAL]]],[IdentifierExpression[p3,GLOBAL]]],UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowance_ZXL,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ZXL>]]],[IdentifierExpression[p2,GLOBAL]]],[IdentifierExpression[p3,GLOBAL]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[name_ZXL,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ZXL>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[name_ZXL,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ZXL>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[symbol_ZXL,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ZXL>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[symbol_ZXL,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ZXL>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[decimals_ZXL,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ZXL>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[decimals_ZXL,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ZXL>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[owner_ZXL,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ZXL>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[owner_ZXL,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ZXL>]]]]]]
[2020-11-24 18:11:52,679 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(ZXL.transferFrom(from, to, value), p1 != from && p1 != to && (p2 != from || p3 != msg.sender) && from != to && value <= balanceOf_ZXL[this][from] && value <= allowance_ZXL[this][from][msg.sender] && balanceOf_ZXL[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_ZXL[this][to] >= 0 && balanceOf_ZXL[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_ZXL[this][from] >= 0 &&  balanceOf_ZXL[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && allowance_ZXL[this][from][msg.sender] >= 0 && allowance_ZXL[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(ZXL.transferFrom(from, to, value), return == true && balanceOf_ZXL[this][from] == old(balanceOf_ZXL[this][from]) - value && balanceOf_ZXL[this][to] == old(balanceOf_ZXL[this][to]) + value && allowance_ZXL[this][from][msg.sender] == old(allowance_ZXL[this][from][msg.sender]) - value && totalSupply_ZXL[this] == old(totalSupply_ZXL[this]) && balanceOf_ZXL[this][p1] == old(balanceOf_ZXL[this][p1]) && allowance_ZXL[this][p2][p3] == old(allowance_ZXL[this][p2][p3]) && name_ZXL[this] == old(name_ZXL[this]) && symbol_ZXL[this] == old(symbol_ZXL[this]) && decimals_ZXL[this] == old(decimals_ZXL[this]) && owner_ZXL[this] == old(owner_ZXL[this]))))
[2020-11-24 18:11:52,679 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_transferFrom_ZXL0) ==> ( <>AP(success_transferFrom_ZXL0) ) ) )
Executed UtopiaSpecLang
[2020-11-24 18:11:52,683 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 06:11:52 PropertyContainer
[2020-11-24 18:11:52,683 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-24 18:11:52,684 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-24 18:11:52,684 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-24 18:11:52,684 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-24 18:11:52,685 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "ZXL_0xfb3B4D413Fb8dF96C6336E8DD103f8af38B48F87_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 06:11:52" (1/2) ...
[2020-11-24 18:11:52,685 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-24 18:11:52,685 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-24 18:11:52,695 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 06:11:52" (2/2) ...
[2020-11-24 18:11:52,695 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-24 18:11:52,696 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-24 18:11:52,696 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-24 18:11:52,696 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-24 18:11:52,697 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "ZXL_0xfb3B4D413Fb8dF96C6336E8DD103f8af38B48F87_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 06:11:52" (1/2) ...
[2020-11-24 18:11:52,753 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-24 18:11:52,754 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_ZXL__success
[2020-11-24 18:11:52,754 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ZXL
[2020-11-24 18:11:52,754 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ZXL
[2020-11-24 18:11:52,754 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ZXL
[2020-11-24 18:11:52,754 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ZXL
[2020-11-24 18:11:52,754 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ZXL
[2020-11-24 18:11:52,754 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ZXL
[2020-11-24 18:11:52,754 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ZXL
[2020-11-24 18:11:52,754 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ZXL
[2020-11-24 18:11:52,754 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ZXL
[2020-11-24 18:11:52,754 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ZXL
[2020-11-24 18:11:52,755 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ZXL
[2020-11-24 18:11:52,755 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ZXL
[2020-11-24 18:11:52,755 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-24 18:11:52,755 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-24 18:11:52,755 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-24 18:11:52,755 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_tokenRecipient
[2020-11-24 18:11:52,755 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_tokenRecipient
[2020-11-24 18:11:52,755 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ZXL
[2020-11-24 18:11:52,755 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-24 18:11:52,755 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-24 18:11:52,755 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_ZXL__fail
[2020-11-24 18:11:52,756 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ZXL__success
[2020-11-24 18:11:52,756 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ZXL__fail
[2020-11-24 18:11:52,756 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ZXL__success
[2020-11-24 18:11:52,756 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ZXL__fail
[2020-11-24 18:11:52,756 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ZXL__success
[2020-11-24 18:11:52,756 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ZXL__fail
[2020-11-24 18:11:52,757 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ZXL__success
[2020-11-24 18:11:52,757 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ZXL__fail
[2020-11-24 18:11:52,757 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ZXL__success
[2020-11-24 18:11:52,757 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ZXL__fail
[2020-11-24 18:11:52,758 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ZXL__success
[2020-11-24 18:11:52,758 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ZXL__fail
[2020-11-24 18:11:52,758 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-24 18:11:52,758 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-24 18:11:52,758 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-24 18:11:52,758 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-24 18:11:52,758 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-24 18:11:52,758 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_ZXL__fail
[2020-11-24 18:11:52,758 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_ZXL__success
[2020-11-24 18:11:52,758 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ZXL__fail
[2020-11-24 18:11:52,758 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ZXL__success
[2020-11-24 18:11:52,758 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ZXL__fail
[2020-11-24 18:11:52,759 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ZXL__success
[2020-11-24 18:11:52,759 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ZXL__fail
[2020-11-24 18:11:52,759 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ZXL__success
[2020-11-24 18:11:52,759 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ZXL__fail
[2020-11-24 18:11:52,759 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ZXL__success
[2020-11-24 18:11:52,759 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ZXL__fail
[2020-11-24 18:11:52,759 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ZXL__success
[2020-11-24 18:11:52,759 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ZXL__fail
[2020-11-24 18:11:52,759 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ZXL__success
[2020-11-24 18:11:52,759 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-24 18:11:52,759 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-24 18:11:52,759 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-24 18:11:52,760 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-24 18:11:52,760 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-24 18:11:52,760 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-24 18:11:52,760 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_tokenRecipient
[2020-11-24 18:11:52,760 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_tokenRecipient
[2020-11-24 18:11:52,760 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ZXL
[2020-11-24 18:11:52,760 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-24 18:11:52,760 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-24 18:11:52,760 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-24 18:11:52,943 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 18:11:53,051 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 18:11:53,051 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 18:11:53,051 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 18:11:53,164 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-24 18:11:53,164 INFO  L286             CfgBuilder]: Removed 2 assue(true) statements.
[2020-11-24 18:11:53,165 INFO  L202        PluginConnector]: Adding new model ZXL_0xfb3B4D413Fb8dF96C6336E8DD103f8af38B48F87_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 06:11:53 BoogieIcfgContainer
[2020-11-24 18:11:53,165 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 06:11:52" (2/2) ...
[2020-11-24 18:11:53,166 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-24 18:11:53,166 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@f0f16bb and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 06:11:53, skipping insertion in model container
[2020-11-24 18:11:53,166 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-24 18:11:53,166 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-24 18:11:53,166 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-24 18:11:53,168 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-24 18:11:53,168 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "ZXL_0xfb3B4D413Fb8dF96C6336E8DD103f8af38B48F87_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 06:11:52" (1/3) ...
[2020-11-24 18:11:53,169 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@653b1fb9 and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 06:11:53, skipping insertion in model container
[2020-11-24 18:11:53,169 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 06:11:52" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-24 18:11:53,212 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 06:11:53 NWAContainer
[2020-11-24 18:11:53,212 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-24 18:11:53,212 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-24 18:11:53,212 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-24 18:11:53,213 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-24 18:11:53,214 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "ZXL_0xfb3B4D413Fb8dF96C6336E8DD103f8af38B48F87_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 06:11:53" (3/4) ...
[2020-11-24 18:11:53,214 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@6d712f6b and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 06:11:53, skipping insertion in model container
[2020-11-24 18:11:53,215 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 06:11:53" (4/4) ...
[2020-11-24 18:11:53,218 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-24 18:11:53,220 INFO  L110   BuchiProductObserver]: Initial RCFG 436 locations, 523 edges
[2020-11-24 18:11:53,220 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-24 18:11:53,230 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-24 18:11:53,995 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-24 18:11:53,997 INFO  L110   BuchiProductObserver]: BuchiProgram size 1004 locations, 1679 edges
[2020-11-24 18:11:53,997 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 06:11:53 BoogieIcfgContainer
[2020-11-24 18:11:53,997 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-24 18:11:53,998 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-24 18:11:53,998 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-24 18:11:53,999 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-24 18:11:54,000 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 06:11:53" (1/1) ...
[2020-11-24 18:11:54,039 INFO  L313           BlockEncoder]: Initial Icfg 1004 locations, 1679 edges
[2020-11-24 18:11:54,039 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-24 18:11:54,040 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-24 18:11:54,040 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-24 18:11:54,041 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-24 18:11:54,047 INFO  L70    emoveInfeasibleEdges]: Removed 21 edges and 7 locations because of local infeasibility
[2020-11-24 18:11:54,051 INFO  L70        RemoveSinkStates]: Removed 2 edges and 1 locations by removing sink states
[2020-11-24 18:11:54,056 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-24 18:11:54,057 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-24 18:11:54,058 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-24 18:11:54,059 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-24 18:11:54,061 INFO  L313           BlockEncoder]: Encoded RCFG 990 locations, 1648 edges
[2020-11-24 18:11:54,061 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 24.11 06:11:54 BasicIcfg
[2020-11-24 18:11:54,061 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-24 18:11:54,062 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-24 18:11:54,062 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-24 18:11:54,064 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-24 18:11:54,064 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 18:11:54,064 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "ZXL_0xfb3B4D413Fb8dF96C6336E8DD103f8af38B48F87_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 06:11:52" (1/6) ...
[2020-11-24 18:11:54,065 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@5d3332e0 and model type ZXL_0xfb3B4D413Fb8dF96C6336E8DD103f8af38B48F87_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 24.11 06:11:54, skipping insertion in model container
[2020-11-24 18:11:54,065 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 18:11:54,066 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 06:11:52" (2/6) ...
[2020-11-24 18:11:54,066 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@5d3332e0 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 24.11 06:11:54, skipping insertion in model container
[2020-11-24 18:11:54,066 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 18:11:54,066 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "ZXL_0xfb3B4D413Fb8dF96C6336E8DD103f8af38B48F87_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 06:11:53" (3/6) ...
[2020-11-24 18:11:54,066 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@5d3332e0 and model type ZXL_0xfb3B4D413Fb8dF96C6336E8DD103f8af38B48F87_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 24.11 06:11:54, skipping insertion in model container
[2020-11-24 18:11:54,066 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 18:11:54,066 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 06:11:53" (4/6) ...
[2020-11-24 18:11:54,067 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@5d3332e0 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 24.11 06:11:54, skipping insertion in model container
[2020-11-24 18:11:54,067 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 18:11:54,067 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 06:11:53" (5/6) ...
[2020-11-24 18:11:54,067 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@5d3332e0 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 24.11 06:11:54, skipping insertion in model container
[2020-11-24 18:11:54,067 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 18:11:54,067 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 24.11 06:11:54" (6/6) ...
[2020-11-24 18:11:54,068 INFO  L404   chiAutomizerObserver]: Analyzing ICFG ZXL_0xfb3B4D413Fb8dF96C6336E8DD103f8af38B48F87_transferfrom-normal.bpl_BEv2
[2020-11-24 18:11:54,108 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-24 18:11:54,109 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-24 18:11:54,109 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-24 18:11:54,109 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-24 18:11:54,109 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-24 18:11:54,109 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-24 18:11:54,109 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-24 18:11:54,109 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-24 18:11:54,109 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-24 18:11:54,125 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 990 states.
[2020-11-24 18:11:54,161 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 18:11:54,161 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 18:11:54,161 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 18:11:54,170 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 18:11:54,170 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
[2020-11-24 18:11:54,170 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-24 18:11:54,170 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 990 states.
[2020-11-24 18:11:54,178 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 18:11:54,178 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 18:11:54,178 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 18:11:54,179 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 18:11:54,179 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L3]                 success_transferFrom_ZXL0 := false;
[L3]                 call_transferFrom_ZXL0 := false;
[L3]     CALL        call main();
[L3]                 havoc p3;
[L3]                 havoc p2;
[L3]                 havoc p1;
[L1248]              assume null == 0;
[L1249]  CALL        call this := FreshRefGenerator__success();
[L575]               havoc newRef;
[L576]               assume Alloc[newRef] == false;
[L577]               Alloc[newRef] := true;
[L578]               assume newRef != null;
[L1249]  RET         call this := FreshRefGenerator__success();
[L1250]              assume now >= 0;
[L1251]              assume DType[this] == ZXL;
[L1252]              assume !revert && gas >= 0;
[L1253]  CALL        call CorralChoice_ZXL(this);
[L1164]              havoc msgsender_MSG;
[L1165]              havoc msgvalue_MSG;
[L1166]              havoc choice;
[L1167]              havoc __ret_0_name;
[L1168]              havoc __ret_0_symbol;
[L1169]              havoc __ret_0_decimals;
[L1170]              havoc __ret_0_totalSupply;
[L1171]              havoc arg353_s0;
[L1172]              havoc __ret_0_balanceOf;
[L1173]              havoc arg354_s0;
[L1174]              havoc arg355_s0;
[L1175]              havoc __ret_0_allowance;
[L1176]              havoc _to_s160;
[L1177]              havoc _value_s160;
[L1178]              havoc _from_s200;
[L1179]              havoc _to_s200;
[L1180]              havoc _value_s200;
[L1181]              havoc success_s200;
[L1182]              havoc _spender_s221;
[L1183]              havoc _value_s221;
[L1184]              havoc success_s221;
[L1185]              havoc _spender_s259;
[L1186]              havoc _value_s259;
[L1187]              havoc _extraData_s259;
[L1188]              havoc success_s259;
[L1189]              havoc _value_s295;
[L1190]              havoc success_s295;
[L1191]              havoc _from_s350;
[L1192]              havoc _value_s350;
[L1193]              havoc success_s350;
[L1194]              havoc tmpNow;
[L1195]              havoc gas;
[L1196]              assume gas > 4000000 && gas <= 8000000;
[L1197]              tmpNow := now;
[L1198]              havoc now;
[L1199]              assume now > tmpNow;
[L1200]              assume msgsender_MSG != null;
[L1201]  COND TRUE   choice == 6
[L1202]              gas := gas - 21000;
[L1203]  COND FALSE  !(gas >= 0)
[L1253]  RET         call CorralChoice_ZXL(this);

Loop:
[L1253]        assume true;

[2020-11-24 18:11:54,196 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 18:11:54,196 INFO  L82        PathProgramCache]: Analyzing trace with hash -1155421667, now seen corresponding path program 1 times
[2020-11-24 18:11:54,200 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 18:11:54,220 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 18:11:54,278 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 18:11:54,281 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 18:11:54,281 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [5] imperfect sequences [] total 5
[2020-11-24 18:11:54,285 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 18:11:54,297 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 5 interpolants.
[2020-11-24 18:11:54,297 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=9, Invalid=11, Unknown=0, NotChecked=0, Total=20
[2020-11-24 18:11:54,298 INFO  L87              Difference]: Start difference. First operand 990 states. Second operand 5 states.
[2020-11-24 18:11:54,523 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 18:11:54,523 INFO  L93              Difference]: Finished difference Result 507 states and 555 transitions.
[2020-11-24 18:11:54,524 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-24 18:11:54,525 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 507 states and 555 transitions.
[2020-11-24 18:11:54,530 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 18:11:54,535 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 507 states to 173 states and 184 transitions.
[2020-11-24 18:11:54,536 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 4
[2020-11-24 18:11:54,537 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 173
[2020-11-24 18:11:54,537 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 173 states and 184 transitions.
[2020-11-24 18:11:54,538 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 18:11:54,539 INFO  L728         BuchiCegarLoop]: Abstraction has 173 states and 184 transitions.
[2020-11-24 18:11:54,553 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 173 states and 184 transitions.
[2020-11-24 18:11:54,565 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 173 to 173.
[2020-11-24 18:11:54,565 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 173 states.
[2020-11-24 18:11:54,566 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 173 states to 173 states and 184 transitions.
[2020-11-24 18:11:54,567 INFO  L751         BuchiCegarLoop]: Abstraction has 173 states and 184 transitions.
[2020-11-24 18:11:54,567 INFO  L631         BuchiCegarLoop]: Abstraction has 173 states and 184 transitions.
[2020-11-24 18:11:54,567 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-24 18:11:54,567 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 173 states and 184 transitions.
[2020-11-24 18:11:54,568 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 18:11:54,568 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 18:11:54,568 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 18:11:54,569 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 18:11:54,569 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L3]                 success_transferFrom_ZXL0 := false;
[L3]                 call_transferFrom_ZXL0 := false;
[L3]     CALL        call main();
[L3]                 havoc p3;
[L3]                 havoc p2;
[L3]                 havoc p1;
[L1248]              assume null == 0;
[L1249]  CALL        call this := FreshRefGenerator__success();
[L575]               havoc newRef;
[L576]               assume Alloc[newRef] == false;
[L577]               Alloc[newRef] := true;
[L578]               assume newRef != null;
[L1249]  RET         call this := FreshRefGenerator__success();
[L1250]              assume now >= 0;
[L1251]              assume DType[this] == ZXL;
[L1252]              assume !revert && gas >= 0;
[L1253]  CALL        call CorralChoice_ZXL(this);
[L1164]              havoc msgsender_MSG;
[L1165]              havoc msgvalue_MSG;
[L1166]              havoc choice;
[L1167]              havoc __ret_0_name;
[L1168]              havoc __ret_0_symbol;
[L1169]              havoc __ret_0_decimals;
[L1170]              havoc __ret_0_totalSupply;
[L1171]              havoc arg353_s0;
[L1172]              havoc __ret_0_balanceOf;
[L1173]              havoc arg354_s0;
[L1174]              havoc arg355_s0;
[L1175]              havoc __ret_0_allowance;
[L1176]              havoc _to_s160;
[L1177]              havoc _value_s160;
[L1178]              havoc _from_s200;
[L1179]              havoc _to_s200;
[L1180]              havoc _value_s200;
[L1181]              havoc success_s200;
[L1182]              havoc _spender_s221;
[L1183]              havoc _value_s221;
[L1184]              havoc success_s221;
[L1185]              havoc _spender_s259;
[L1186]              havoc _value_s259;
[L1187]              havoc _extraData_s259;
[L1188]              havoc success_s259;
[L1189]              havoc _value_s295;
[L1190]              havoc success_s295;
[L1191]              havoc _from_s350;
[L1192]              havoc _value_s350;
[L1193]              havoc success_s350;
[L1194]              havoc tmpNow;
[L1195]              havoc gas;
[L1196]              assume gas > 4000000 && gas <= 8000000;
[L1197]              tmpNow := now;
[L1198]              havoc now;
[L1199]              assume now > tmpNow;
[L1200]              assume msgsender_MSG != null;
[L1201]  COND FALSE  !(choice == 6)
[L1207]  COND FALSE  !(choice == 5)
[L1213]  COND FALSE  !(choice == 4)
[L1219]  COND FALSE  !(choice == 3)
[L1226]  COND TRUE   choice == 2
[L1227]              gas := gas - 21000;
[L1228]  COND TRUE   gas >= 0
[L1229]              assume _value_s200 >= 0 && _value_s200 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1230]              assume msgvalue_MSG == 0;
[L1231]  CALL        call success_s200 := transferFrom~address~address~uint256_ZXL(this, msgsender_MSG, msgvalue_MSG, _from_s200, _to_s200, _value_s200);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != _from_s200 && p1 != _to_s200) && (p2 != _from_s200 || p3 != msgsender_MSG)) && _from_s200 != _to_s200) && _value_s200 <= balanceOf_ZXL[this][_from_s200]) && _value_s200 <= allowance_ZXL[this][_from_s200][msgsender_MSG]) && balanceOf_ZXL[this][_to_s200] + _value_s200 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _value_s200 >= 0) && _value_s200 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_ZXL[this][_to_s200] >= 0) && balanceOf_ZXL[this][_to_s200] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_ZXL[this][_from_s200] >= 0) && balanceOf_ZXL[this][_from_s200] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowance_ZXL[this][_from_s200][msgsender_MSG] >= 0) && allowance_ZXL[this][_from_s200][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_ZXL0 := true;
[L3]                 call_transferFrom_ZXL0 := false;
[L3]                 revert := revert_hold;
[L131]               havoc __exception;
[L132]               revert := false;
[L133]   COND FALSE  !(__exception)
[L155]   CALL        call success_s200 := transferFrom~address~address~uint256_ZXL__success(this, msgsender_MSG, msgvalue_MSG, _from_s200, _to_s200, _value_s200);
[L670]   COND TRUE   !(_value_s200 <= allowance_ZXL[this][_from_s200][msgsender_MSG])
[L671]               revert := true;
[L155]   RET         call success_s200 := transferFrom~address~address~uint256_ZXL__success(this, msgsender_MSG, msgvalue_MSG, _from_s200, _to_s200, _value_s200);
[L156]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !((((((((((success_s200 == true && balanceOf_ZXL[this][_from_s200] == old(balanceOf_ZXL[this][_from_s200]) - _value_s200) && balanceOf_ZXL[this][_to_s200] == old(balanceOf_ZXL[this][_to_s200]) + _value_s200) && allowance_ZXL[this][_from_s200][msgsender_MSG] == old(allowance_ZXL[this][_from_s200][msgsender_MSG]) - _value_s200) && totalSupply_ZXL[this] == old(totalSupply_ZXL[this])) && balanceOf_ZXL[this][p1] == old(balanceOf_ZXL[this][p1])) && allowance_ZXL[this][p2][p3] == old(allowance_ZXL[this][p2][p3])) && name_ZXL[this] == old(name_ZXL[this])) && symbol_ZXL[this] == old(symbol_ZXL[this])) && decimals_ZXL[this] == old(decimals_ZXL[this])) && owner_ZXL[this] == old(owner_ZXL[this]));
[L3]                 revert := revert_hold;
[L1231]  RET         call success_s200 := transferFrom~address~address~uint256_ZXL(this, msgsender_MSG, msgvalue_MSG, _from_s200, _to_s200, _value_s200);
[L1253]  RET         call CorralChoice_ZXL(this);

Loop:
[L1253]        assume true;

[2020-11-24 18:11:54,572 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 18:11:54,572 INFO  L82        PathProgramCache]: Analyzing trace with hash 239173017, now seen corresponding path program 1 times
[2020-11-24 18:11:54,573 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 18:11:54,584 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 18:11:54,600 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 18:11:54,600 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 18:11:54,600 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-24 18:11:54,602 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 18:11:54,602 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-24 18:11:54,602 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-24 18:11:54,602 INFO  L87              Difference]: Start difference. First operand 173 states and 184 transitions. cyclomatic complexity: 12 Second operand 3 states.
[2020-11-24 18:11:54,608 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 18:11:54,608 INFO  L93              Difference]: Finished difference Result 196 states and 206 transitions.
[2020-11-24 18:11:54,608 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-24 18:11:54,609 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 196 states and 206 transitions.
[2020-11-24 18:11:54,610 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 2
[2020-11-24 18:11:54,612 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 196 states to 184 states and 190 transitions.
[2020-11-24 18:11:54,612 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 184
[2020-11-24 18:11:54,612 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 184
[2020-11-24 18:11:54,612 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 184 states and 190 transitions.
[2020-11-24 18:11:54,613 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 18:11:54,613 INFO  L728         BuchiCegarLoop]: Abstraction has 184 states and 190 transitions.
[2020-11-24 18:11:54,613 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 184 states and 190 transitions.
[2020-11-24 18:11:54,618 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 184 to 173.
[2020-11-24 18:11:54,618 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 173 states.
[2020-11-24 18:11:54,619 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 173 states to 173 states and 179 transitions.
[2020-11-24 18:11:54,619 INFO  L751         BuchiCegarLoop]: Abstraction has 173 states and 179 transitions.
[2020-11-24 18:11:54,619 INFO  L631         BuchiCegarLoop]: Abstraction has 173 states and 179 transitions.
[2020-11-24 18:11:54,619 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-24 18:11:54,619 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 173 states and 179 transitions.
[2020-11-24 18:11:54,620 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 18:11:54,620 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 18:11:54,620 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 18:11:54,621 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 18:11:54,621 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L3]                 success_transferFrom_ZXL0 := false;
[L3]                 call_transferFrom_ZXL0 := false;
[L3]     CALL        call main();
[L3]                 havoc p3;
[L3]                 havoc p2;
[L3]                 havoc p1;
[L1248]              assume null == 0;
[L1249]  CALL        call this := FreshRefGenerator__success();
[L575]               havoc newRef;
[L576]               assume Alloc[newRef] == false;
[L577]               Alloc[newRef] := true;
[L578]               assume newRef != null;
[L1249]  RET         call this := FreshRefGenerator__success();
[L1250]              assume now >= 0;
[L1251]              assume DType[this] == ZXL;
[L1252]              assume !revert && gas >= 0;
[L1253]  CALL        call CorralChoice_ZXL(this);
[L1164]              havoc msgsender_MSG;
[L1165]              havoc msgvalue_MSG;
[L1166]              havoc choice;
[L1167]              havoc __ret_0_name;
[L1168]              havoc __ret_0_symbol;
[L1169]              havoc __ret_0_decimals;
[L1170]              havoc __ret_0_totalSupply;
[L1171]              havoc arg353_s0;
[L1172]              havoc __ret_0_balanceOf;
[L1173]              havoc arg354_s0;
[L1174]              havoc arg355_s0;
[L1175]              havoc __ret_0_allowance;
[L1176]              havoc _to_s160;
[L1177]              havoc _value_s160;
[L1178]              havoc _from_s200;
[L1179]              havoc _to_s200;
[L1180]              havoc _value_s200;
[L1181]              havoc success_s200;
[L1182]              havoc _spender_s221;
[L1183]              havoc _value_s221;
[L1184]              havoc success_s221;
[L1185]              havoc _spender_s259;
[L1186]              havoc _value_s259;
[L1187]              havoc _extraData_s259;
[L1188]              havoc success_s259;
[L1189]              havoc _value_s295;
[L1190]              havoc success_s295;
[L1191]              havoc _from_s350;
[L1192]              havoc _value_s350;
[L1193]              havoc success_s350;
[L1194]              havoc tmpNow;
[L1195]              havoc gas;
[L1196]              assume gas > 4000000 && gas <= 8000000;
[L1197]              tmpNow := now;
[L1198]              havoc now;
[L1199]              assume now > tmpNow;
[L1200]              assume msgsender_MSG != null;
[L1201]  COND FALSE  !(choice == 6)
[L1207]  COND FALSE  !(choice == 5)
[L1213]  COND FALSE  !(choice == 4)
[L1219]  COND FALSE  !(choice == 3)
[L1226]  COND TRUE   choice == 2
[L1227]              gas := gas - 21000;
[L1228]  COND TRUE   gas >= 0
[L1229]              assume _value_s200 >= 0 && _value_s200 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1230]              assume msgvalue_MSG == 0;
[L1231]  CALL        call success_s200 := transferFrom~address~address~uint256_ZXL(this, msgsender_MSG, msgvalue_MSG, _from_s200, _to_s200, _value_s200);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != _from_s200 && p1 != _to_s200) && (p2 != _from_s200 || p3 != msgsender_MSG)) && _from_s200 != _to_s200) && _value_s200 <= balanceOf_ZXL[this][_from_s200]) && _value_s200 <= allowance_ZXL[this][_from_s200][msgsender_MSG]) && balanceOf_ZXL[this][_to_s200] + _value_s200 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _value_s200 >= 0) && _value_s200 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_ZXL[this][_to_s200] >= 0) && balanceOf_ZXL[this][_to_s200] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_ZXL[this][_from_s200] >= 0) && balanceOf_ZXL[this][_from_s200] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowance_ZXL[this][_from_s200][msgsender_MSG] >= 0) && allowance_ZXL[this][_from_s200][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_ZXL0 := true;
[L3]                 call_transferFrom_ZXL0 := false;
[L3]                 revert := revert_hold;
[L131]               havoc __exception;
[L132]               revert := false;
[L133]   COND TRUE   __exception
[L134]               __tmp__Balance := Balance;
[L135]               __tmp__DType := DType;
[L136]               __tmp__Alloc := Alloc;
[L137]               __tmp__balance_ADDR := balance_ADDR;
[L138]               __tmp__M_Ref_int := M_Ref_int;
[L139]               __tmp__sum_balanceOf0 := sum_balanceOf0;
[L140]               __tmp__alloc_allowance_ZXL_lvl0 := alloc_allowance_ZXL_lvl0;
[L141]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L142]               __tmp__sum_allowance1 := sum_allowance1;
[L143]               __tmp__Length := Length;
[L144]               __tmp__now := now;
[L145]               __tmp__name_ZXL := name_ZXL;
[L146]               __tmp__symbol_ZXL := symbol_ZXL;
[L147]               __tmp__decimals_ZXL := decimals_ZXL;
[L148]               __tmp__totalSupply_ZXL := totalSupply_ZXL;
[L149]               __tmp__owner_ZXL := owner_ZXL;
[L150]               __tmp__balanceOf_ZXL := balanceOf_ZXL;
[L151]               __tmp__allowance_ZXL := allowance_ZXL;
[L152]   CALL        call success_s200 := transferFrom~address~address~uint256_ZXL__fail(this, msgsender_MSG, msgvalue_MSG, _from_s200, _to_s200, _value_s200);
[L653]   COND TRUE   !(_value_s200 <= __tmp__allowance_ZXL[this][_from_s200][msgsender_MSG])
[L654]               revert := true;
[L152]   RET         call success_s200 := transferFrom~address~address~uint256_ZXL__fail(this, msgsender_MSG, msgvalue_MSG, _from_s200, _to_s200, _value_s200);
[L153]               assume revert || gas < 0;
[L1231]  RET         call success_s200 := transferFrom~address~address~uint256_ZXL(this, msgsender_MSG, msgvalue_MSG, _from_s200, _to_s200, _value_s200);
[L1253]  RET         call CorralChoice_ZXL(this);

Loop:
[L1253]        assume true;

[2020-11-24 18:11:54,624 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 18:11:54,624 INFO  L82        PathProgramCache]: Analyzing trace with hash -806001987, now seen corresponding path program 1 times
[2020-11-24 18:11:54,624 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 18:11:54,634 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 18:11:54,678 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 18:11:54,678 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 18:11:54,678 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [6] imperfect sequences [] total 6
[2020-11-24 18:11:54,678 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 18:11:54,679 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 6 interpolants.
[2020-11-24 18:11:54,679 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=9, Invalid=21, Unknown=0, NotChecked=0, Total=30
[2020-11-24 18:11:54,679 INFO  L87              Difference]: Start difference. First operand 173 states and 179 transitions. cyclomatic complexity: 7 Second operand 6 states.
[2020-11-24 18:11:54,772 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 18:11:54,772 INFO  L93              Difference]: Finished difference Result 182 states and 187 transitions.
[2020-11-24 18:11:54,772 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 7 states. 
[2020-11-24 18:11:54,772 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 182 states and 187 transitions.
[2020-11-24 18:11:54,773 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 2
[2020-11-24 18:11:54,775 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 182 states to 179 states and 184 transitions.
[2020-11-24 18:11:54,775 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 179
[2020-11-24 18:11:54,775 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 179
[2020-11-24 18:11:54,775 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 179 states and 184 transitions.
[2020-11-24 18:11:54,776 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 18:11:54,776 INFO  L728         BuchiCegarLoop]: Abstraction has 179 states and 184 transitions.
[2020-11-24 18:11:54,776 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 179 states and 184 transitions.
[2020-11-24 18:11:54,780 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 179 to 172.
[2020-11-24 18:11:54,780 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 172 states.
[2020-11-24 18:11:54,781 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 172 states to 172 states and 177 transitions.
[2020-11-24 18:11:54,781 INFO  L751         BuchiCegarLoop]: Abstraction has 172 states and 177 transitions.
[2020-11-24 18:11:54,781 INFO  L631         BuchiCegarLoop]: Abstraction has 172 states and 177 transitions.
[2020-11-24 18:11:54,781 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-24 18:11:54,781 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 172 states and 177 transitions.
[2020-11-24 18:11:54,782 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 18:11:54,782 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 18:11:54,782 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 18:11:54,783 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 18:11:54,783 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L3]                 success_transferFrom_ZXL0 := false;
[L3]                 call_transferFrom_ZXL0 := false;
[L3]     CALL        call main();
[L3]                 havoc p3;
[L3]                 havoc p2;
[L3]                 havoc p1;
[L1248]              assume null == 0;
[L1249]  CALL        call this := FreshRefGenerator__success();
[L575]               havoc newRef;
[L576]               assume Alloc[newRef] == false;
[L577]               Alloc[newRef] := true;
[L578]               assume newRef != null;
[L1249]  RET         call this := FreshRefGenerator__success();
[L1250]              assume now >= 0;
[L1251]              assume DType[this] == ZXL;
[L1252]              assume !revert && gas >= 0;
[L1253]  CALL        call CorralChoice_ZXL(this);
[L1164]              havoc msgsender_MSG;
[L1165]              havoc msgvalue_MSG;
[L1166]              havoc choice;
[L1167]              havoc __ret_0_name;
[L1168]              havoc __ret_0_symbol;
[L1169]              havoc __ret_0_decimals;
[L1170]              havoc __ret_0_totalSupply;
[L1171]              havoc arg353_s0;
[L1172]              havoc __ret_0_balanceOf;
[L1173]              havoc arg354_s0;
[L1174]              havoc arg355_s0;
[L1175]              havoc __ret_0_allowance;
[L1176]              havoc _to_s160;
[L1177]              havoc _value_s160;
[L1178]              havoc _from_s200;
[L1179]              havoc _to_s200;
[L1180]              havoc _value_s200;
[L1181]              havoc success_s200;
[L1182]              havoc _spender_s221;
[L1183]              havoc _value_s221;
[L1184]              havoc success_s221;
[L1185]              havoc _spender_s259;
[L1186]              havoc _value_s259;
[L1187]              havoc _extraData_s259;
[L1188]              havoc success_s259;
[L1189]              havoc _value_s295;
[L1190]              havoc success_s295;
[L1191]              havoc _from_s350;
[L1192]              havoc _value_s350;
[L1193]              havoc success_s350;
[L1194]              havoc tmpNow;
[L1195]              havoc gas;
[L1196]              assume gas > 4000000 && gas <= 8000000;
[L1197]              tmpNow := now;
[L1198]              havoc now;
[L1199]              assume now > tmpNow;
[L1200]              assume msgsender_MSG != null;
[L1201]  COND FALSE  !(choice == 6)
[L1207]  COND FALSE  !(choice == 5)
[L1213]  COND FALSE  !(choice == 4)
[L1219]  COND FALSE  !(choice == 3)
[L1226]  COND TRUE   choice == 2
[L1227]              gas := gas - 21000;
[L1228]  COND TRUE   gas >= 0
[L1229]              assume _value_s200 >= 0 && _value_s200 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1230]              assume msgvalue_MSG == 0;
[L1231]  CALL        call success_s200 := transferFrom~address~address~uint256_ZXL(this, msgsender_MSG, msgvalue_MSG, _from_s200, _to_s200, _value_s200);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != _from_s200 && p1 != _to_s200) && (p2 != _from_s200 || p3 != msgsender_MSG)) && _from_s200 != _to_s200) && _value_s200 <= balanceOf_ZXL[this][_from_s200]) && _value_s200 <= allowance_ZXL[this][_from_s200][msgsender_MSG]) && balanceOf_ZXL[this][_to_s200] + _value_s200 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _value_s200 >= 0) && _value_s200 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_ZXL[this][_to_s200] >= 0) && balanceOf_ZXL[this][_to_s200] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_ZXL[this][_from_s200] >= 0) && balanceOf_ZXL[this][_from_s200] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowance_ZXL[this][_from_s200][msgsender_MSG] >= 0) && allowance_ZXL[this][_from_s200][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_ZXL0 := true;
[L3]                 call_transferFrom_ZXL0 := false;
[L3]                 revert := revert_hold;
[L131]               havoc __exception;
[L132]               revert := false;
[L133]   COND FALSE  !(__exception)
[L155]   CALL        call success_s200 := transferFrom~address~address~uint256_ZXL__success(this, msgsender_MSG, msgvalue_MSG, _from_s200, _to_s200, _value_s200);
[L670]   COND FALSE  !(!(_value_s200 <= allowance_ZXL[this][_from_s200][msgsender_MSG]))
[L674]               sum_allowance1[_from_s200] := sum_allowance1[_from_s200] - allowance_ZXL[this][_from_s200][msgsender_MSG];
[L675]               allowance_ZXL[this][_from_s200][msgsender_MSG] := (allowance_ZXL[this][_from_s200][msgsender_MSG] - _value_s200) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L676]               sum_allowance1[_from_s200] := sum_allowance1[_from_s200] + allowance_ZXL[this][_from_s200][msgsender_MSG];
[L677]   CALL        call _transfer~address~address~uint256_ZXL__success(this, msgsender_MSG, msgvalue_MSG, _from_s200, _to_s200, _value_s200);
[L611]               __var_1 := null;
[L612]   COND FALSE  !(!(_to_s145 != null))
[L616]   COND FALSE  !(!(balanceOf_ZXL[this][_from_s145] >= _value_s145))
[L620]   COND FALSE  !(!((balanceOf_ZXL[this][_to_s145] + _value_s145) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 > balanceOf_ZXL[this][_to_s145]))
[L624]               previousBalances_s145 := (balanceOf_ZXL[this][_from_s145] + balanceOf_ZXL[this][_to_s145]) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L625]               sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_ZXL[this][_from_s145];
[L626]               balanceOf_ZXL[this][_from_s145] := (balanceOf_ZXL[this][_from_s145] - _value_s145) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L627]               sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_ZXL[this][_from_s145];
[L628]               sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_ZXL[this][_to_s145];
[L629]               balanceOf_ZXL[this][_to_s145] := (balanceOf_ZXL[this][_to_s145] + _value_s145) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L630]               sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_ZXL[this][_to_s145];
[L631]               assert { :EventEmitted "Transfer_ZXL" } true;
[L632]               assert (balanceOf_ZXL[this][_from_s145] + balanceOf_ZXL[this][_to_s145]) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 == previousBalances_s145;
[L677]   RET         call _transfer~address~address~uint256_ZXL__success(this, msgsender_MSG, msgvalue_MSG, _from_s200, _to_s200, _value_s200);
[L678]   COND FALSE  !(revert)
[L681]               success_s200 := true;
[L155]   RET         call success_s200 := transferFrom~address~address~uint256_ZXL__success(this, msgsender_MSG, msgvalue_MSG, _from_s200, _to_s200, _value_s200);
[L156]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !((((((((((success_s200 == true && balanceOf_ZXL[this][_from_s200] == old(balanceOf_ZXL[this][_from_s200]) - _value_s200) && balanceOf_ZXL[this][_to_s200] == old(balanceOf_ZXL[this][_to_s200]) + _value_s200) && allowance_ZXL[this][_from_s200][msgsender_MSG] == old(allowance_ZXL[this][_from_s200][msgsender_MSG]) - _value_s200) && totalSupply_ZXL[this] == old(totalSupply_ZXL[this])) && balanceOf_ZXL[this][p1] == old(balanceOf_ZXL[this][p1])) && allowance_ZXL[this][p2][p3] == old(allowance_ZXL[this][p2][p3])) && name_ZXL[this] == old(name_ZXL[this])) && symbol_ZXL[this] == old(symbol_ZXL[this])) && decimals_ZXL[this] == old(decimals_ZXL[this])) && owner_ZXL[this] == old(owner_ZXL[this]));
[L3]                 revert := revert_hold;
[L1231]  RET         call success_s200 := transferFrom~address~address~uint256_ZXL(this, msgsender_MSG, msgvalue_MSG, _from_s200, _to_s200, _value_s200);
[L1253]  RET         call CorralChoice_ZXL(this);

Loop:
[L1253]        assume true;

[2020-11-24 18:11:54,786 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 18:11:54,786 INFO  L82        PathProgramCache]: Analyzing trace with hash -98447120, now seen corresponding path program 1 times
[2020-11-24 18:11:54,786 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 18:11:54,821 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 18:11:55,443 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 18:11:55,444 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 18:11:55,444 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [16] imperfect sequences [] total 16
[2020-11-24 18:11:55,444 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 18:11:55,445 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 16 interpolants.
[2020-11-24 18:11:55,445 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=38, Invalid=202, Unknown=0, NotChecked=0, Total=240
[2020-11-24 18:11:55,445 INFO  L87              Difference]: Start difference. First operand 172 states and 177 transitions. cyclomatic complexity: 6 Second operand 16 states.
[2020-11-24 18:11:55,891 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 18:11:55,891 INFO  L93              Difference]: Finished difference Result 177 states and 181 transitions.
[2020-11-24 18:11:55,892 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 15 states. 
[2020-11-24 18:11:55,892 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 177 states and 181 transitions.
[2020-11-24 18:11:55,893 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 18:11:55,894 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 177 states to 138 states and 142 transitions.
[2020-11-24 18:11:55,894 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 138
[2020-11-24 18:11:55,894 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 138
[2020-11-24 18:11:55,894 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 138 states and 142 transitions.
[2020-11-24 18:11:55,894 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 18:11:55,895 INFO  L728         BuchiCegarLoop]: Abstraction has 138 states and 142 transitions.
[2020-11-24 18:11:55,895 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 138 states and 142 transitions.
[2020-11-24 18:11:55,897 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 138 to 138.
[2020-11-24 18:11:55,897 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 138 states.
[2020-11-24 18:11:55,898 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 138 states to 138 states and 142 transitions.
[2020-11-24 18:11:55,898 INFO  L751         BuchiCegarLoop]: Abstraction has 138 states and 142 transitions.
[2020-11-24 18:11:55,898 INFO  L631         BuchiCegarLoop]: Abstraction has 138 states and 142 transitions.
[2020-11-24 18:11:55,898 INFO  L445         BuchiCegarLoop]: ======== Iteration 5============
[2020-11-24 18:11:55,898 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 138 states and 142 transitions.
[2020-11-24 18:11:55,899 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 18:11:55,899 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 18:11:55,899 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 18:11:55,900 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 18:11:55,900 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L3]                 success_transferFrom_ZXL0 := false;
[L3]                 call_transferFrom_ZXL0 := false;
[L3]     CALL        call main();
[L3]                 havoc p3;
[L3]                 havoc p2;
[L3]                 havoc p1;
[L1248]              assume null == 0;
[L1249]  CALL        call this := FreshRefGenerator__success();
[L575]               havoc newRef;
[L576]               assume Alloc[newRef] == false;
[L577]               Alloc[newRef] := true;
[L578]               assume newRef != null;
[L1249]  RET         call this := FreshRefGenerator__success();
[L1250]              assume now >= 0;
[L1251]              assume DType[this] == ZXL;
[L1252]              assume !revert && gas >= 0;
[L1253]  CALL        call CorralChoice_ZXL(this);
[L1164]              havoc msgsender_MSG;
[L1165]              havoc msgvalue_MSG;
[L1166]              havoc choice;
[L1167]              havoc __ret_0_name;
[L1168]              havoc __ret_0_symbol;
[L1169]              havoc __ret_0_decimals;
[L1170]              havoc __ret_0_totalSupply;
[L1171]              havoc arg353_s0;
[L1172]              havoc __ret_0_balanceOf;
[L1173]              havoc arg354_s0;
[L1174]              havoc arg355_s0;
[L1175]              havoc __ret_0_allowance;
[L1176]              havoc _to_s160;
[L1177]              havoc _value_s160;
[L1178]              havoc _from_s200;
[L1179]              havoc _to_s200;
[L1180]              havoc _value_s200;
[L1181]              havoc success_s200;
[L1182]              havoc _spender_s221;
[L1183]              havoc _value_s221;
[L1184]              havoc success_s221;
[L1185]              havoc _spender_s259;
[L1186]              havoc _value_s259;
[L1187]              havoc _extraData_s259;
[L1188]              havoc success_s259;
[L1189]              havoc _value_s295;
[L1190]              havoc success_s295;
[L1191]              havoc _from_s350;
[L1192]              havoc _value_s350;
[L1193]              havoc success_s350;
[L1194]              havoc tmpNow;
[L1195]              havoc gas;
[L1196]              assume gas > 4000000 && gas <= 8000000;
[L1197]              tmpNow := now;
[L1198]              havoc now;
[L1199]              assume now > tmpNow;
[L1200]              assume msgsender_MSG != null;
[L1201]  COND FALSE  !(choice == 6)
[L1207]  COND FALSE  !(choice == 5)
[L1213]  COND FALSE  !(choice == 4)
[L1219]  COND FALSE  !(choice == 3)
[L1226]  COND TRUE   choice == 2
[L1227]              gas := gas - 21000;
[L1228]  COND TRUE   gas >= 0
[L1229]              assume _value_s200 >= 0 && _value_s200 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1230]              assume msgvalue_MSG == 0;
[L1231]  CALL        call success_s200 := transferFrom~address~address~uint256_ZXL(this, msgsender_MSG, msgvalue_MSG, _from_s200, _to_s200, _value_s200);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != _from_s200 && p1 != _to_s200) && (p2 != _from_s200 || p3 != msgsender_MSG)) && _from_s200 != _to_s200) && _value_s200 <= balanceOf_ZXL[this][_from_s200]) && _value_s200 <= allowance_ZXL[this][_from_s200][msgsender_MSG]) && balanceOf_ZXL[this][_to_s200] + _value_s200 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _value_s200 >= 0) && _value_s200 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_ZXL[this][_to_s200] >= 0) && balanceOf_ZXL[this][_to_s200] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_ZXL[this][_from_s200] >= 0) && balanceOf_ZXL[this][_from_s200] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowance_ZXL[this][_from_s200][msgsender_MSG] >= 0) && allowance_ZXL[this][_from_s200][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_ZXL0 := true;
[L3]                 call_transferFrom_ZXL0 := false;
[L3]                 revert := revert_hold;
[L131]               havoc __exception;
[L132]               revert := false;
[L133]   COND TRUE   __exception
[L134]               __tmp__Balance := Balance;
[L135]               __tmp__DType := DType;
[L136]               __tmp__Alloc := Alloc;
[L137]               __tmp__balance_ADDR := balance_ADDR;
[L138]               __tmp__M_Ref_int := M_Ref_int;
[L139]               __tmp__sum_balanceOf0 := sum_balanceOf0;
[L140]               __tmp__alloc_allowance_ZXL_lvl0 := alloc_allowance_ZXL_lvl0;
[L141]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L142]               __tmp__sum_allowance1 := sum_allowance1;
[L143]               __tmp__Length := Length;
[L144]               __tmp__now := now;
[L145]               __tmp__name_ZXL := name_ZXL;
[L146]               __tmp__symbol_ZXL := symbol_ZXL;
[L147]               __tmp__decimals_ZXL := decimals_ZXL;
[L148]               __tmp__totalSupply_ZXL := totalSupply_ZXL;
[L149]               __tmp__owner_ZXL := owner_ZXL;
[L150]               __tmp__balanceOf_ZXL := balanceOf_ZXL;
[L151]               __tmp__allowance_ZXL := allowance_ZXL;
[L152]   CALL        call success_s200 := transferFrom~address~address~uint256_ZXL__fail(this, msgsender_MSG, msgvalue_MSG, _from_s200, _to_s200, _value_s200);
[L653]   COND FALSE  !(!(_value_s200 <= __tmp__allowance_ZXL[this][_from_s200][msgsender_MSG]))
[L657]               __tmp__sum_allowance1[_from_s200] := __tmp__sum_allowance1[_from_s200] - __tmp__allowance_ZXL[this][_from_s200][msgsender_MSG];
[L658]               __tmp__allowance_ZXL[this][_from_s200][msgsender_MSG] := (__tmp__allowance_ZXL[this][_from_s200][msgsender_MSG] - _value_s200) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L659]               __tmp__sum_allowance1[_from_s200] := __tmp__sum_allowance1[_from_s200] + __tmp__allowance_ZXL[this][_from_s200][msgsender_MSG];
[L660]   CALL        call _transfer~address~address~uint256_ZXL__fail(this, msgsender_MSG, msgvalue_MSG, _from_s200, _to_s200, _value_s200);
[L585]               __var_1 := null;
[L586]   COND TRUE   !(_to_s145 != null)
[L587]               revert := true;
[L660]   RET         call _transfer~address~address~uint256_ZXL__fail(this, msgsender_MSG, msgvalue_MSG, _from_s200, _to_s200, _value_s200);
[L661]   COND TRUE   revert
[L152]   RET         call success_s200 := transferFrom~address~address~uint256_ZXL__fail(this, msgsender_MSG, msgvalue_MSG, _from_s200, _to_s200, _value_s200);
[L153]               assume revert || gas < 0;
[L1231]  RET         call success_s200 := transferFrom~address~address~uint256_ZXL(this, msgsender_MSG, msgvalue_MSG, _from_s200, _to_s200, _value_s200);
[L1253]  RET         call CorralChoice_ZXL(this);

Loop:
[L1253]        assume true;

[2020-11-24 18:11:55,901 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 18:11:55,901 INFO  L82        PathProgramCache]: Analyzing trace with hash -190979368, now seen corresponding path program 1 times
[2020-11-24 18:11:55,902 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 18:11:55,908 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 18:11:55,914 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 18:11:55,944 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 18:11:55,945 INFO  L82        PathProgramCache]: Analyzing trace with hash 4169, now seen corresponding path program 1 times
[2020-11-24 18:11:55,945 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 18:11:55,945 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 18:11:55,946 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 18:11:55,947 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 18:11:55,947 INFO  L82        PathProgramCache]: Analyzing trace with hash -1625388974, now seen corresponding path program 1 times
[2020-11-24 18:11:55,947 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 18:11:55,953 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 18:11:55,959 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
[2020-11-24 18:11:56,279 WARN  L188               SmtUtils]: Spent 194.00 ms on a formula simplification. DAG size of input: 179 DAG size of output: 171
Garbage collection #1: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 883 to 1759
Garbage collection #1: 47 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 47 to 89
Garbage collection #2: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #3: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #4: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #5: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #6: 1327 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1327 to 2647
Garbage collection #7: 2647 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 2647 to 5281
[2020-11-24 18:11:56,611 WARN  L188               SmtUtils]: Spent 303.00 ms on a formula simplification. DAG size of input: 126 DAG size of output: 120
[2020-11-24 18:11:56,850 WARN  L188               SmtUtils]: Spent 237.00 ms on a formula simplification that was a NOOP. DAG size: 265
Garbage collection #1: 101 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 101 to 199
Garbage collection #2: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #3: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #4: 787 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 787 to 1571
Garbage collection #5: 1571 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 1571 to 3137
Garbage collection #6: 3137 nodes / 0 free / 0.001s / 0.003s total
Resizing node table from 3137 to 6271
Garbage collection #7: 6271 nodes / 0 free / 0.002s / 0.005s total
Resizing node table from 6271 to 12541
[2020-11-24 18:11:57,805 WARN  L188               SmtUtils]: Spent 938.00 ms on a formula simplification. DAG size of input: 223 DAG size of output: 223
[2020-11-24 18:11:58,700 WARN  L188               SmtUtils]: Spent 891.00 ms on a formula simplification. DAG size of input: 258 DAG size of output: 243
Garbage collection #1: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #2: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #3: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #4: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #5: 1327 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1327 to 2647
Garbage collection #6: 2647 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 2647 to 5281
Garbage collection #7: 5281 nodes / 0 free / 0.002s / 0.003s total
Resizing node table from 5281 to 10559
Garbage collection #8: 10559 nodes / 0 free / 0.001s / 0.004s total
Resizing node table from 10559 to 21107
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #6: 1759 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1759 to 3517
Garbage collection #7: 3517 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3517 to 7027
Garbage collection #8: 7027 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 7027 to 14051
[2020-11-24 18:11:59,353 WARN  L188               SmtUtils]: Spent 615.00 ms on a formula simplification. DAG size of input: 175 DAG size of output: 148
[2020-11-24 18:11:59,641 WARN  L188               SmtUtils]: Spent 286.00 ms on a formula simplification that was a NOOP. DAG size: 284
Garbage collection #1: 109 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 109 to 211
Garbage collection #2: 211 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 211 to 421
Garbage collection #3: 421 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 421 to 839
Garbage collection #4: 839 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 839 to 1669
Garbage collection #5: 1669 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1669 to 3331
Garbage collection #6: 3331 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3331 to 6661
Garbage collection #7: 6661 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 6661 to 13313
[2020-11-24 18:12:00,199 WARN  L188               SmtUtils]: Spent 543.00 ms on a formula simplification. DAG size of input: 230 DAG size of output: 226
[2020-11-24 18:12:00,616 WARN  L188               SmtUtils]: Spent 415.00 ms on a formula simplification. DAG size of input: 246 DAG size of output: 243
Garbage collection #1: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #2: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #3: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #4: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #5: 1327 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1327 to 2647
Garbage collection #6: 2647 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2647 to 5281
Garbage collection #7: 5281 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 5281 to 10559
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #6: 1759 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1759 to 3517
[2020-11-24 18:12:01,814 WARN  L188               SmtUtils]: Spent 1.19 s on a formula simplification. DAG size of input: 174 DAG size of output: 167
[2020-11-24 18:12:02,364 WARN  L188               SmtUtils]: Spent 539.00 ms on a formula simplification that was a NOOP. DAG size: 255
Garbage collection #1: 97 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3019 to 6037
Garbage collection #7: 6037 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 6037 to 12073
Garbage collection #1: 67 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 67 to 131
Garbage collection #2: 131 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 131 to 257
Garbage collection #3: 257 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 257 to 509
Garbage collection #4: 509 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 509 to 1013
Garbage collection #5: 1013 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1013 to 2017
Garbage collection #6: 2017 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2017 to 4027
Garbage collection #7: 4027 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4027 to 8053
[2020-11-24 18:12:06,208 WARN  L188               SmtUtils]: Spent 3.82 s on a formula simplification. DAG size of input: 272 DAG size of output: 197
[2020-11-24 18:12:09,348 WARN  L188               SmtUtils]: Spent 3.14 s on a formula simplification. DAG size of input: 287 DAG size of output: 286
Garbage collection #1: 101 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 101 to 199
Garbage collection #2: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #3: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #4: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #5: 1571 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1571 to 3137
Garbage collection #6: 3137 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3137 to 6271
Garbage collection #7: 6271 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 6271 to 12541
Garbage collection #1: 109 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 109 to 211
Garbage collection #2: 211 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 211 to 421
Garbage collection #3: 421 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 421 to 839
Garbage collection #4: 839 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 839 to 1669
Garbage collection #5: 1669 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1669 to 3331
Garbage collection #6: 3331 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 3331 to 6661
Garbage collection #7: 6661 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 6661 to 13313
Garbage collection #8: 13313 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 13313 to 26597
Garbage collection #9: 26597 nodes / 0 free / 0.0s / 0.002s total
Resizing node table from 26597 to 53189
Garbage collection #10: 53189 nodes / 0 free / 0.001s / 0.003s total
Resizing node table from 53189 to 103183
Garbage collection #11: 103183 nodes / 0 free / 0.002s / 0.005s total
Resizing node table from 103183 to 153151
Garbage collection #12: 153151 nodes / 0 free / 0.003s / 0.008s total
Resizing node table from 153151 to 203141
[2020-11-24 18:12:29,464 WARN  L188               SmtUtils]: Spent 19.97 s on a formula simplification. DAG size of input: 738 DAG size of output: 281
[2020-11-24 18:12:29,473 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 18:12:29,477 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 24.11 06:12:29 BasicIcfg
[2020-11-24 18:12:29,477 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-24 18:12:29,477 INFO  L168              Benchmark]: Toolchain (without parser) took 36921.00 ms. Allocated memory was 1.0 GB in the beginning and 3.3 GB in the end (delta: 2.3 GB). Free memory was 945.9 MB in the beginning and 956.7 MB in the end (delta: -10.7 MB). Peak memory consumption was 2.5 GB. Max. memory is 15.3 GB.
[2020-11-24 18:12:29,478 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.16 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-24 18:12:29,478 INFO  L168              Benchmark]: Boogie Preprocessor took 72.88 ms. Allocated memory is still 1.0 GB. Free memory was 945.9 MB in the beginning and 940.6 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-24 18:12:29,478 INFO  L168              Benchmark]: UtopiaSpecLang took 53.07 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 935.2 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-24 18:12:29,478 INFO  L168              Benchmark]: Boogie Printer took 11.56 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 929.8 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-24 18:12:29,479 INFO  L168              Benchmark]: RCFGBuilder took 470.57 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 897.6 MB in the end (delta: 32.2 MB). Peak memory consumption was 32.2 MB. Max. memory is 15.3 GB.
[2020-11-24 18:12:29,479 INFO  L168              Benchmark]: UtopiaLTL2Aut took 45.54 ms. Allocated memory is still 1.0 GB. Free memory was 897.6 MB in the beginning and 888.7 MB in the end (delta: 8.9 MB). Peak memory consumption was 8.9 MB. Max. memory is 15.3 GB.
[2020-11-24 18:12:29,479 INFO  L168              Benchmark]: BÃ¼chi Program Product took 785.25 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 49.3 MB). Free memory was 888.7 MB in the beginning and 1.0 GB in the end (delta: -139.1 MB). Peak memory consumption was 169.1 MB. Max. memory is 15.3 GB.
[2020-11-24 18:12:29,479 INFO  L168              Benchmark]: BlockEncodingV2 took 63.71 ms. Allocated memory is still 1.1 GB. Free memory was 1.0 GB in the beginning and 999.6 MB in the end (delta: 28.1 MB). Peak memory consumption was 28.1 MB. Max. memory is 15.3 GB.
[2020-11-24 18:12:29,480 INFO  L168              Benchmark]: BuchiAutomizer took 35415.38 ms. Allocated memory was 1.1 GB in the beginning and 3.3 GB in the end (delta: 2.2 GB). Free memory was 999.6 MB in the beginning and 956.7 MB in the end (delta: 43.0 MB). Peak memory consumption was 2.5 GB. Max. memory is 15.3 GB.
[2020-11-24 18:12:29,482 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    1004 locations, 1679 edges
  - StatisticsResult: Encoded RCFG
    990 locations, 1648 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.16 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 72.88 ms. Allocated memory is still 1.0 GB. Free memory was 945.9 MB in the beginning and 940.6 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 53.07 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 935.2 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 11.56 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 929.8 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * RCFGBuilder took 470.57 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 897.6 MB in the end (delta: 32.2 MB). Peak memory consumption was 32.2 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 45.54 ms. Allocated memory is still 1.0 GB. Free memory was 897.6 MB in the beginning and 888.7 MB in the end (delta: 8.9 MB). Peak memory consumption was 8.9 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 785.25 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 49.3 MB). Free memory was 888.7 MB in the beginning and 1.0 GB in the end (delta: -139.1 MB). Peak memory consumption was 169.1 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 63.71 ms. Allocated memory is still 1.1 GB. Free memory was 1.0 GB in the beginning and 999.6 MB in the end (delta: 28.1 MB). Peak memory consumption was 28.1 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 35415.38 ms. Allocated memory was 1.1 GB in the beginning and 3.3 GB in the end (delta: 2.2 GB). Free memory was 999.6 MB in the beginning and 956.7 MB in the end (delta: 43.0 MB). Peak memory consumption was 2.5 GB. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    436 locations, 523 edges
  - StatisticsResult: BuchiProgram size
    1004 locations, 1679 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 4 terminating modules (4 trivial, 0 deterministic, 0 nondeterministic) and one nonterminating remainder module.4 modules have a trivial ranking function, the largest among these consists of 16 locations. The remainder module has 138 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 35.3s and 5 iterations.  TraceHistogramMax:1. Analysis of lassos took 34.4s. Construction of modules took 0.4s. BÃ¼chi inclusion checks took 0.2s. Highest rank in rank-based complementation 0. Minimization of det autom 4. Minimization of nondet autom 0. Automata minimization 0.0s AutomataMinimizationTime, 4 MinimizatonAttempts, 18 StatesRemovedByMinimization, 2 NontrivialMinimizations. Non-live state removal took 0.0s Buchi closure took 0.0s. Biggest automaton had 173 states and ocurred in iteration 1.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 1054 SDtfs, 889 SDslu, 1578 SDs, 0 SdLazy, 1241 SolverSat, 405 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 0.4s Time	LassoAnalysisResults: nont1 unkn0 SFLI0 SFLT0 conc0 concLT0 SILN0 SILU4 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - TransactionCounterexample: Violation of LTL property LTL
    Found an infinite, lasso-shaped execution that violates the LTL property LTL.
Stem:
ZXL(7).transferFrom~address~address~uint256.gas(3979001)({from : 6, _from : 15, _to : 0, _value : 0});
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != _from_s200 && p1 != _to_s200) && (p2 != _from_s200 || p3 != msgsender_MSG)) && _from_s200 != _to_s200) && _value_s200 <= balanceOf_ZXL[this][_from_s200]) && _value_s200 <= allowance_ZXL[this][_from_s200][msgsender_MSG]) && balanceOf_ZXL[this][_to_s200] + _value_s200 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _value_s200 >= 0) && _value_s200 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_ZXL[this][_to_s200] >= 0) && balanceOf_ZXL[this][_to_s200] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_ZXL[this][_from_s200] >= 0) && balanceOf_ZXL[this][_from_s200] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowance_ZXL[this][_from_s200][msgsender_MSG] >= 0) && allowance_ZXL[this][_from_s200][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_ZXL0 := true;
[L3]                 call_transferFrom_ZXL0 := false;
[L3]                 revert := revert_hold;
[L131]               havoc __exception;
[L132]               revert := false;
[L133]   COND TRUE   __exception
[L134]               __tmp__Balance := Balance;
[L135]               __tmp__DType := DType;
[L136]               __tmp__Alloc := Alloc;
[L137]               __tmp__balance_ADDR := balance_ADDR;
[L138]               __tmp__M_Ref_int := M_Ref_int;
[L139]               __tmp__sum_balanceOf0 := sum_balanceOf0;
[L140]               __tmp__alloc_allowance_ZXL_lvl0 := alloc_allowance_ZXL_lvl0;
[L141]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L142]               __tmp__sum_allowance1 := sum_allowance1;
[L143]               __tmp__Length := Length;
[L144]               __tmp__now := now;
[L145]               __tmp__name_ZXL := name_ZXL;
[L146]               __tmp__symbol_ZXL := symbol_ZXL;
[L147]               __tmp__decimals_ZXL := decimals_ZXL;
[L148]               __tmp__totalSupply_ZXL := totalSupply_ZXL;
[L149]               __tmp__owner_ZXL := owner_ZXL;
[L150]               __tmp__balanceOf_ZXL := balanceOf_ZXL;
[L151]               __tmp__allowance_ZXL := allowance_ZXL;
[L152]   CALL        call success_s200 := transferFrom~address~address~uint256_ZXL__fail(this, msgsender_MSG, msgvalue_MSG, _from_s200, _to_s200, _value_s200);
[L653]   COND FALSE  !(!(_value_s200 <= __tmp__allowance_ZXL[this][_from_s200][msgsender_MSG]))
[L657]               __tmp__sum_allowance1[_from_s200] := __tmp__sum_allowance1[_from_s200] - __tmp__allowance_ZXL[this][_from_s200][msgsender_MSG];
[L658]               __tmp__allowance_ZXL[this][_from_s200][msgsender_MSG] := (__tmp__allowance_ZXL[this][_from_s200][msgsender_MSG] - _value_s200) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L659]               __tmp__sum_allowance1[_from_s200] := __tmp__sum_allowance1[_from_s200] + __tmp__allowance_ZXL[this][_from_s200][msgsender_MSG];
[L660]   CALL        call _transfer~address~address~uint256_ZXL__fail(this, msgsender_MSG, msgvalue_MSG, _from_s200, _to_s200, _value_s200);
[L585]               __var_1 := null;
[L586]   COND TRUE   !(_to_s145 != null)
[L587]               revert := true;
[L660]   RET         call _transfer~address~address~uint256_ZXL__fail(this, msgsender_MSG, msgvalue_MSG, _from_s200, _to_s200, _value_s200);
[L661]   COND TRUE   revert
[L152]   RET         call success_s200 := transferFrom~address~address~uint256_ZXL__fail(this, msgsender_MSG, msgvalue_MSG, _from_s200, _to_s200, _value_s200);
[L153]               assume revert || gas < 0;
[L1231]  RET         call success_s200 := transferFrom~address~address~uint256_ZXL(this, msgsender_MSG, msgvalue_MSG, _from_s200, _to_s200, _value_s200);

Loop:

End of lasso representation.
RESULT: Ultimate could not prove your program: Toolchain returned no result.
Received shutdown request...
