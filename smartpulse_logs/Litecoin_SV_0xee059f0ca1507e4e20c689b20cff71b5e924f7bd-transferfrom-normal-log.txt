This is Ultimate 0.1.24-f1553f5-m
[2020-11-24 15:04:29,842 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-24 15:04:29,843 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-24 15:04:29,853 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-24 15:04:29,853 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-24 15:04:29,854 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-24 15:04:29,854 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-24 15:04:29,856 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-24 15:04:29,857 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-24 15:04:29,858 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-24 15:04:29,858 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-24 15:04:29,859 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-24 15:04:29,859 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-24 15:04:29,860 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-24 15:04:29,861 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-24 15:04:29,861 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-24 15:04:29,862 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-24 15:04:29,863 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-24 15:04:29,864 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-24 15:04:29,865 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-24 15:04:29,866 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-24 15:04:29,867 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-24 15:04:29,868 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-24 15:04:29,868 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-24 15:04:29,869 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-24 15:04:29,869 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-24 15:04:29,869 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-24 15:04:29,870 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-24 15:04:29,870 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-24 15:04:29,870 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-24 15:04:29,871 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-24 15:04:29,871 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-24 15:04:29,872 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-24 15:04:29,872 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-24 15:04:29,873 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-24 15:04:29,873 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-24 15:04:29,873 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-24 15:04:29,874 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-24 15:04:29,874 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-24 15:04:29,874 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-24 15:04:29,875 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-24 15:04:29,875 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-24 15:04:29,882 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-24 15:04:29,883 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-24 15:04:29,883 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-24 15:04:29,884 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-24 15:04:29,884 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-24 15:04:29,884 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-24 15:04:29,884 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-24 15:04:29,884 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-24 15:04:29,884 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-24 15:04:29,884 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-24 15:04:29,884 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-24 15:04:29,885 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-24 15:04:29,885 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-24 15:04:29,885 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-24 15:04:29,885 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-24 15:04:29,885 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-24 15:04:29,885 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-24 15:04:29,885 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-24 15:04:29,885 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-24 15:04:29,886 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-24 15:04:29,886 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-24 15:04:29,886 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-24 15:04:29,886 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-24 15:04:29,886 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-24 15:04:29,886 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-24 15:04:29,886 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-24 15:04:29,906 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-24 15:04:29,915 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-24 15:04:29,919 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-24 15:04:29,920 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-24 15:04:29,921 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-24 15:04:29,921 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/Litecoin_SV_0xee059f0ca1507e4e20c689b20cff71b5e924f7bd_transferfrom-normal.bpl
[2020-11-24 15:04:29,921 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/Litecoin_SV_0xee059f0ca1507e4e20c689b20cff71b5e924f7bd_transferfrom-normal.bpl'
[2020-11-24 15:04:29,982 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-24 15:04:29,984 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-24 15:04:29,985 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-24 15:04:29,985 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-24 15:04:29,985 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-24 15:04:30,002 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "Litecoin_SV_0xee059f0ca1507e4e20c689b20cff71b5e924f7bd_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 03:04:29" (1/1) ...
[2020-11-24 15:04:30,003 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "Litecoin_SV_0xee059f0ca1507e4e20c689b20cff71b5e924f7bd_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 03:04:29" (1/1) ...
[2020-11-24 15:04:30,024 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "Litecoin_SV_0xee059f0ca1507e4e20c689b20cff71b5e924f7bd_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 03:04:29" (1/1) ...
[2020-11-24 15:04:30,025 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "Litecoin_SV_0xee059f0ca1507e4e20c689b20cff71b5e924f7bd_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 03:04:29" (1/1) ...
[2020-11-24 15:04:30,037 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "Litecoin_SV_0xee059f0ca1507e4e20c689b20cff71b5e924f7bd_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 03:04:29" (1/1) ...
[2020-11-24 15:04:30,042 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "Litecoin_SV_0xee059f0ca1507e4e20c689b20cff71b5e924f7bd_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 03:04:29" (1/1) ...
[2020-11-24 15:04:30,045 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "Litecoin_SV_0xee059f0ca1507e4e20c689b20cff71b5e924f7bd_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 03:04:29" (1/1) ...
[2020-11-24 15:04:30,051 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-24 15:04:30,051 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-24 15:04:30,052 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-24 15:04:30,053 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-24 15:04:30,058 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "Litecoin_SV_0xee059f0ca1507e4e20c689b20cff71b5e924f7bd_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 03:04:29" (1/1) ...
[2020-11-24 15:04:30,071 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(Litecoin_SV.transferFrom(from, to, value), p1 != from && p1 != to && (p2 != from || p3 != msg.sender) && from != to && value <= balances_Litecoin_SV[this][from] && value <= allowed_Litecoin_SV[this][from][msg.sender] && balances_Litecoin_SV[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_Litecoin_SV[this][to] >= 0 && balances_Litecoin_SV[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_Litecoin_SV[this][from] >= 0 &&  balances_Litecoin_SV[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && allowed_Litecoin_SV[this][from][msg.sender] >= 0 && allowed_Litecoin_SV[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(Litecoin_SV.transferFrom(from, to, value), return == true && balances_Litecoin_SV[this][from] == old(balances_Litecoin_SV[this][from]) - value && balances_Litecoin_SV[this][to] == old(balances_Litecoin_SV[this][to]) + value && allowed_Litecoin_SV[this][from][msg.sender] == old(allowed_Litecoin_SV[this][from][msg.sender]) - value && _totalSupply_Litecoin_SV[this] == old(_totalSupply_Litecoin_SV[this]) && balances_Litecoin_SV[this][p1] == old(balances_Litecoin_SV[this][p1]) && allowed_Litecoin_SV[this][p2][p3] == old(allowed_Litecoin_SV[this][p2][p3]) && businessName_Litecoin_SV[this] == old(businessName_Litecoin_SV[this]) && businessCountry_Litecoin_SV[this] == old(businessCountry_Litecoin_SV[this]) && symbol_Litecoin_SV[this] == old(symbol_Litecoin_SV[this]) && name_Litecoin_SV[this] == old(name_Litecoin_SV[this]) && decimals_Litecoin_SV[this] == old(decimals_Litecoin_SV[this]) && owner_Owned[this] == old(owner_Owned[this]) && newOwner_Owned[this] == old(newOwner_Owned[this]))))
[2020-11-24 15:04:30,075 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(Litecoin_SV.transferFrom(from, to, value), p1 != from && p1 != to && (p2 != from || p3 != msg.sender) && from != to && value <= balances_Litecoin_SV[this][from] && value <= allowed_Litecoin_SV[this][from][msg.sender] && balances_Litecoin_SV[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_Litecoin_SV[this][to] >= 0 && balances_Litecoin_SV[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_Litecoin_SV[this][from] >= 0 &&  balances_Litecoin_SV[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && allowed_Litecoin_SV[this][from][msg.sender] >= 0 && allowed_Litecoin_SV[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(Litecoin_SV.transferFrom(from, to, value), return == true && balances_Litecoin_SV[this][from] == old(balances_Litecoin_SV[this][from]) - value && balances_Litecoin_SV[this][to] == old(balances_Litecoin_SV[this][to]) + value && allowed_Litecoin_SV[this][from][msg.sender] == old(allowed_Litecoin_SV[this][from][msg.sender]) - value && _totalSupply_Litecoin_SV[this] == old(_totalSupply_Litecoin_SV[this]) && balances_Litecoin_SV[this][p1] == old(balances_Litecoin_SV[this][p1]) && allowed_Litecoin_SV[this][p2][p3] == old(allowed_Litecoin_SV[this][p2][p3]) && businessName_Litecoin_SV[this] == old(businessName_Litecoin_SV[this]) && businessCountry_Litecoin_SV[this] == old(businessCountry_Litecoin_SV[this]) && symbol_Litecoin_SV[this] == old(symbol_Litecoin_SV[this]) && name_Litecoin_SV[this] == old(name_Litecoin_SV[this]) && decimals_Litecoin_SV[this] == old(decimals_Litecoin_SV[this]) && owner_Owned[this] == old(owner_Owned[this]) && newOwner_Owned[this] == old(newOwner_Owned[this]))))
[2020-11-24 15:04:30,081 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(Litecoin_SV.transferFrom(from, to, value), p1 != from && p1 != to && (p2 != from || p3 != msg.sender) && from != to && value <= balances_Litecoin_SV[this][from] && value <= allowed_Litecoin_SV[this][from][msg.sender] && balances_Litecoin_SV[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_Litecoin_SV[this][to] >= 0 && balances_Litecoin_SV[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_Litecoin_SV[this][from] >= 0 &&  balances_Litecoin_SV[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && allowed_Litecoin_SV[this][from][msg.sender] >= 0 && allowed_Litecoin_SV[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(Litecoin_SV.transferFrom(from, to, value), return == true && balances_Litecoin_SV[this][from] == old(balances_Litecoin_SV[this][from]) - value && balances_Litecoin_SV[this][to] == old(balances_Litecoin_SV[this][to]) + value && allowed_Litecoin_SV[this][from][msg.sender] == old(allowed_Litecoin_SV[this][from][msg.sender]) - value && _totalSupply_Litecoin_SV[this] == old(_totalSupply_Litecoin_SV[this]) && balances_Litecoin_SV[this][p1] == old(balances_Litecoin_SV[this][p1]) && allowed_Litecoin_SV[this][p2][p3] == old(allowed_Litecoin_SV[this][p2][p3]) && businessName_Litecoin_SV[this] == old(businessName_Litecoin_SV[this]) && businessCountry_Litecoin_SV[this] == old(businessCountry_Litecoin_SV[this]) && symbol_Litecoin_SV[this] == old(symbol_Litecoin_SV[this]) && name_Litecoin_SV[this] == old(name_Litecoin_SV[this]) && decimals_Litecoin_SV[this] == old(decimals_Litecoin_SV[this]) && owner_Owned[this] == old(owner_Owned[this]) && newOwner_Owned[this] == old(newOwner_Owned[this]))))
[2020-11-24 15:04:30,090 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( ( ( ( ( ( ( p1!=from_s470 && p1!=to_s470 ) && ( p2!=from_s470 || p3!=msg.sender ) ) && from_s470!=to_s470 ) && tokens_s470<=balances_Litecoin_SV[this][from_s470] ) && tokens_s470<=allowed_Litecoin_SV[this][from_s470][msg.sender] ) && ( balances_Litecoin_SV[this][to_s470] + tokens_s470 )<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && tokens_s470>=0 ) && tokens_s470<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && balances_Litecoin_SV[this][to_s470]>=0 ) && balances_Litecoin_SV[this][to_s470]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && balances_Litecoin_SV[this][from_s470]>=0 ) && balances_Litecoin_SV[this][from_s470]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && allowed_Litecoin_SV[this][from_s470][msg.sender]>=0 ) && allowed_Litecoin_SV[this][from_s470][msg.sender]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPNEQ,IdentifierExpression[p1,GLOBAL],IdentifierExpression[from_s470,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Litecoin_SV>]],BinaryExpression[COMPNEQ,IdentifierExpression[p1,GLOBAL],IdentifierExpression[to_s470,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Litecoin_SV>]]],BinaryExpression[LOGICOR,BinaryExpression[COMPNEQ,IdentifierExpression[p2,GLOBAL],IdentifierExpression[from_s470,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Litecoin_SV>]],BinaryExpression[COMPNEQ,IdentifierExpression[p3,GLOBAL],IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Litecoin_SV>]]]],BinaryExpression[COMPNEQ,IdentifierExpression[from_s470,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Litecoin_SV>],IdentifierExpression[to_s470,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Litecoin_SV>]]],BinaryExpression[COMPLEQ,IdentifierExpression[tokens_s470,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Litecoin_SV>],ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_Litecoin_SV,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Litecoin_SV>]]],[IdentifierExpression[from_s470,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Litecoin_SV>]]]]],BinaryExpression[COMPLEQ,IdentifierExpression[tokens_s470,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Litecoin_SV>],ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowed_Litecoin_SV,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Litecoin_SV>]]],[IdentifierExpression[from_s470,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Litecoin_SV>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Litecoin_SV>]]]]],BinaryExpression[COMPLT,BinaryExpression[ARITHPLUS,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_Litecoin_SV,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Litecoin_SV>]]],[IdentifierExpression[to_s470,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Litecoin_SV>]]],IdentifierExpression[tokens_s470,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Litecoin_SV>]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,IdentifierExpression[tokens_s470,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Litecoin_SV>],IntegerLiteral[0]]],BinaryExpression[COMPLT,IdentifierExpression[tokens_s470,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Litecoin_SV>],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_Litecoin_SV,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Litecoin_SV>]]],[IdentifierExpression[to_s470,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Litecoin_SV>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_Litecoin_SV,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Litecoin_SV>]]],[IdentifierExpression[to_s470,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Litecoin_SV>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_Litecoin_SV,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Litecoin_SV>]]],[IdentifierExpression[from_s470,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Litecoin_SV>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_Litecoin_SV,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Litecoin_SV>]]],[IdentifierExpression[from_s470,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Litecoin_SV>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowed_Litecoin_SV,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Litecoin_SV>]]],[IdentifierExpression[from_s470,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Litecoin_SV>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Litecoin_SV>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowed_Litecoin_SV,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Litecoin_SV>]]],[IdentifierExpression[from_s470,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Litecoin_SV>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Litecoin_SV>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]]
[2020-11-24 15:04:30,094 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( ( ( ( ( ( success_s470==true && balances_Litecoin_SV[this][from_s470]==( ( old(balances_Litecoin_SV[this][from_s470]) ) - tokens_s470 ) ) && balances_Litecoin_SV[this][to_s470]==( ( old(balances_Litecoin_SV[this][to_s470]) ) + tokens_s470 ) ) && allowed_Litecoin_SV[this][from_s470][msg.sender]==( ( old(allowed_Litecoin_SV[this][from_s470][msg.sender]) ) - tokens_s470 ) ) && _totalSupply_Litecoin_SV[this]==( old(_totalSupply_Litecoin_SV[this]) ) ) && balances_Litecoin_SV[this][p1]==( old(balances_Litecoin_SV[this][p1]) ) ) && allowed_Litecoin_SV[this][p2][p3]==( old(allowed_Litecoin_SV[this][p2][p3]) ) ) && businessName_Litecoin_SV[this]==( old(businessName_Litecoin_SV[this]) ) ) && businessCountry_Litecoin_SV[this]==( old(businessCountry_Litecoin_SV[this]) ) ) && symbol_Litecoin_SV[this]==( old(symbol_Litecoin_SV[this]) ) ) && name_Litecoin_SV[this]==( old(name_Litecoin_SV[this]) ) ) && decimals_Litecoin_SV[this]==( old(decimals_Litecoin_SV[this]) ) ) && owner_Owned[this]==( old(owner_Owned[this]) ) ) && newOwner_Owned[this]==( old(newOwner_Owned[this]) ) ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[success_s470,<IMPLEMENTATION_OUTPARAM,transferFrom~address~address~uint256_Litecoin_SV>],BooleanLiteral[true]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_Litecoin_SV,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Litecoin_SV>]]],[IdentifierExpression[from_s470,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Litecoin_SV>]]],BinaryExpression[ARITHMINUS,UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_Litecoin_SV,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Litecoin_SV>]]],[IdentifierExpression[from_s470,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Litecoin_SV>]]]],IdentifierExpression[tokens_s470,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Litecoin_SV>]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_Litecoin_SV,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Litecoin_SV>]]],[IdentifierExpression[to_s470,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Litecoin_SV>]]],BinaryExpression[ARITHPLUS,UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_Litecoin_SV,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Litecoin_SV>]]],[IdentifierExpression[to_s470,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Litecoin_SV>]]]],IdentifierExpression[tokens_s470,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Litecoin_SV>]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowed_Litecoin_SV,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Litecoin_SV>]]],[IdentifierExpression[from_s470,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Litecoin_SV>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Litecoin_SV>]]],BinaryExpression[ARITHMINUS,UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowed_Litecoin_SV,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Litecoin_SV>]]],[IdentifierExpression[from_s470,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Litecoin_SV>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Litecoin_SV>]]]],IdentifierExpression[tokens_s470,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Litecoin_SV>]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_totalSupply_Litecoin_SV,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Litecoin_SV>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_totalSupply_Litecoin_SV,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Litecoin_SV>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_Litecoin_SV,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Litecoin_SV>]]],[IdentifierExpression[p1,GLOBAL]]],UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_Litecoin_SV,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Litecoin_SV>]]],[IdentifierExpression[p1,GLOBAL]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowed_Litecoin_SV,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Litecoin_SV>]]],[IdentifierExpression[p2,GLOBAL]]],[IdentifierExpression[p3,GLOBAL]]],UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowed_Litecoin_SV,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Litecoin_SV>]]],[IdentifierExpression[p2,GLOBAL]]],[IdentifierExpression[p3,GLOBAL]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[businessName_Litecoin_SV,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Litecoin_SV>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[businessName_Litecoin_SV,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Litecoin_SV>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[businessCountry_Litecoin_SV,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Litecoin_SV>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[businessCountry_Litecoin_SV,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Litecoin_SV>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[symbol_Litecoin_SV,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Litecoin_SV>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[symbol_Litecoin_SV,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Litecoin_SV>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[name_Litecoin_SV,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Litecoin_SV>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[name_Litecoin_SV,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Litecoin_SV>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[decimals_Litecoin_SV,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Litecoin_SV>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[decimals_Litecoin_SV,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Litecoin_SV>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[owner_Owned,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Litecoin_SV>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[owner_Owned,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Litecoin_SV>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[newOwner_Owned,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Litecoin_SV>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[newOwner_Owned,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_Litecoin_SV>]]]]]]
[2020-11-24 15:04:30,098 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(Litecoin_SV.transferFrom(from, to, value), p1 != from && p1 != to && (p2 != from || p3 != msg.sender) && from != to && value <= balances_Litecoin_SV[this][from] && value <= allowed_Litecoin_SV[this][from][msg.sender] && balances_Litecoin_SV[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_Litecoin_SV[this][to] >= 0 && balances_Litecoin_SV[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_Litecoin_SV[this][from] >= 0 &&  balances_Litecoin_SV[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && allowed_Litecoin_SV[this][from][msg.sender] >= 0 && allowed_Litecoin_SV[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(Litecoin_SV.transferFrom(from, to, value), return == true && balances_Litecoin_SV[this][from] == old(balances_Litecoin_SV[this][from]) - value && balances_Litecoin_SV[this][to] == old(balances_Litecoin_SV[this][to]) + value && allowed_Litecoin_SV[this][from][msg.sender] == old(allowed_Litecoin_SV[this][from][msg.sender]) - value && _totalSupply_Litecoin_SV[this] == old(_totalSupply_Litecoin_SV[this]) && balances_Litecoin_SV[this][p1] == old(balances_Litecoin_SV[this][p1]) && allowed_Litecoin_SV[this][p2][p3] == old(allowed_Litecoin_SV[this][p2][p3]) && businessName_Litecoin_SV[this] == old(businessName_Litecoin_SV[this]) && businessCountry_Litecoin_SV[this] == old(businessCountry_Litecoin_SV[this]) && symbol_Litecoin_SV[this] == old(symbol_Litecoin_SV[this]) && name_Litecoin_SV[this] == old(name_Litecoin_SV[this]) && decimals_Litecoin_SV[this] == old(decimals_Litecoin_SV[this]) && owner_Owned[this] == old(owner_Owned[this]) && newOwner_Owned[this] == old(newOwner_Owned[this]))))
[2020-11-24 15:04:30,099 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_transferFrom_Litecoin_SV0) ==> ( <>AP(success_transferFrom_Litecoin_SV0) ) ) )
Executed UtopiaSpecLang
[2020-11-24 15:04:30,104 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 03:04:30 PropertyContainer
[2020-11-24 15:04:30,104 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-24 15:04:30,104 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-24 15:04:30,104 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-24 15:04:30,104 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-24 15:04:30,105 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Litecoin_SV_0xee059f0ca1507e4e20c689b20cff71b5e924f7bd_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 03:04:29" (1/2) ...
[2020-11-24 15:04:30,105 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-24 15:04:30,105 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-24 15:04:30,113 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 03:04:30" (2/2) ...
[2020-11-24 15:04:30,113 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-24 15:04:30,114 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-24 15:04:30,114 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-24 15:04:30,114 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-24 15:04:30,114 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Litecoin_SV_0xee059f0ca1507e4e20c689b20cff71b5e924f7bd_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 03:04:29" (1/2) ...
[2020-11-24 15:04:30,154 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-24 15:04:30,154 INFO  L130     BoogieDeclarations]: Found specification of procedure safeAdd~uint256~uint256_SafeMath
[2020-11-24 15:04:30,154 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeAdd~uint256~uint256_SafeMath
[2020-11-24 15:04:30,154 INFO  L130     BoogieDeclarations]: Found specification of procedure safeSub~uint256~uint256_SafeMath
[2020-11-24 15:04:30,154 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeSub~uint256~uint256_SafeMath
[2020-11-24 15:04:30,155 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_Litecoin_SV
[2020-11-24 15:04:30,155 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_Litecoin_SV
[2020-11-24 15:04:30,155 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_Litecoin_SV
[2020-11-24 15:04:30,155 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_Litecoin_SV
[2020-11-24 15:04:30,155 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_Litecoin_SV
[2020-11-24 15:04:30,155 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_Litecoin_SV
[2020-11-24 15:04:30,155 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_Litecoin_SV
[2020-11-24 15:04:30,155 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_Litecoin_SV
[2020-11-24 15:04:30,155 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_Litecoin_SV
[2020-11-24 15:04:30,155 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_Litecoin_SV
[2020-11-24 15:04:30,155 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_Litecoin_SV
[2020-11-24 15:04:30,156 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_Litecoin_SV
[2020-11-24 15:04:30,156 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-24 15:04:30,156 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-24 15:04:30,156 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-24 15:04:30,156 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__success
[2020-11-24 15:04:30,156 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_SafeMath
[2020-11-24 15:04:30,156 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_SafeMath
[2020-11-24 15:04:30,156 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20Interface
[2020-11-24 15:04:30,156 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20Interface
[2020-11-24 15:04:30,157 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ApproveAndCallFallBack
[2020-11-24 15:04:30,157 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ApproveAndCallFallBack
[2020-11-24 15:04:30,157 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_Owned
[2020-11-24 15:04:30,157 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_Owned
[2020-11-24 15:04:30,157 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_Litecoin_SV
[2020-11-24 15:04:30,157 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-24 15:04:30,157 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-24 15:04:30,157 INFO  L130     BoogieDeclarations]: Found specification of procedure safeAdd~uint256~uint256_SafeMath__success
[2020-11-24 15:04:30,157 INFO  L130     BoogieDeclarations]: Found specification of procedure safeAdd~uint256~uint256_SafeMath__fail
[2020-11-24 15:04:30,157 INFO  L130     BoogieDeclarations]: Found specification of procedure safeSub~uint256~uint256_SafeMath__success
[2020-11-24 15:04:30,157 INFO  L130     BoogieDeclarations]: Found specification of procedure safeSub~uint256~uint256_SafeMath__fail
[2020-11-24 15:04:30,157 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_Litecoin_SV__success
[2020-11-24 15:04:30,158 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_Litecoin_SV__fail
[2020-11-24 15:04:30,158 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_Litecoin_SV__success
[2020-11-24 15:04:30,158 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_Litecoin_SV__fail
[2020-11-24 15:04:30,158 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_Litecoin_SV__success
[2020-11-24 15:04:30,158 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_Litecoin_SV__fail
[2020-11-24 15:04:30,158 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_Litecoin_SV__success
[2020-11-24 15:04:30,158 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_Litecoin_SV__fail
[2020-11-24 15:04:30,158 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_Litecoin_SV__success
[2020-11-24 15:04:30,158 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_Litecoin_SV__fail
[2020-11-24 15:04:30,158 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_Litecoin_SV__success
[2020-11-24 15:04:30,158 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_Litecoin_SV__fail
[2020-11-24 15:04:30,158 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-24 15:04:30,158 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-24 15:04:30,158 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-24 15:04:30,159 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__fail
[2020-11-24 15:04:30,159 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-24 15:04:30,160 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-24 15:04:30,160 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeAdd~uint256~uint256_SafeMath__fail
[2020-11-24 15:04:30,160 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeAdd~uint256~uint256_SafeMath__success
[2020-11-24 15:04:30,160 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeSub~uint256~uint256_SafeMath__fail
[2020-11-24 15:04:30,160 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeSub~uint256~uint256_SafeMath__success
[2020-11-24 15:04:30,160 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_Litecoin_SV__fail
[2020-11-24 15:04:30,160 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_Litecoin_SV__success
[2020-11-24 15:04:30,160 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_Litecoin_SV__fail
[2020-11-24 15:04:30,160 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_Litecoin_SV__success
[2020-11-24 15:04:30,160 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_Litecoin_SV__fail
[2020-11-24 15:04:30,160 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_Litecoin_SV__success
[2020-11-24 15:04:30,160 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_Litecoin_SV__fail
[2020-11-24 15:04:30,160 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_Litecoin_SV__success
[2020-11-24 15:04:30,160 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_Litecoin_SV__fail
[2020-11-24 15:04:30,160 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_Litecoin_SV__success
[2020-11-24 15:04:30,161 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_Litecoin_SV__fail
[2020-11-24 15:04:30,161 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_Litecoin_SV__success
[2020-11-24 15:04:30,161 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-24 15:04:30,161 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-24 15:04:30,161 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-24 15:04:30,161 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-24 15:04:30,161 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-24 15:04:30,161 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-24 15:04:30,161 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__fail
[2020-11-24 15:04:30,161 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__success
[2020-11-24 15:04:30,161 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_SafeMath
[2020-11-24 15:04:30,161 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_SafeMath
[2020-11-24 15:04:30,161 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20Interface
[2020-11-24 15:04:30,161 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20Interface
[2020-11-24 15:04:30,161 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ApproveAndCallFallBack
[2020-11-24 15:04:30,161 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ApproveAndCallFallBack
[2020-11-24 15:04:30,161 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_Owned
[2020-11-24 15:04:30,161 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_Owned
[2020-11-24 15:04:30,161 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_Litecoin_SV
[2020-11-24 15:04:30,162 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-24 15:04:30,162 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-24 15:04:30,162 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-24 15:04:30,379 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 15:04:30,462 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 15:04:30,462 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 15:04:30,463 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 15:04:30,649 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-24 15:04:30,649 INFO  L286             CfgBuilder]: Removed 5 assue(true) statements.
[2020-11-24 15:04:30,652 INFO  L202        PluginConnector]: Adding new model Litecoin_SV_0xee059f0ca1507e4e20c689b20cff71b5e924f7bd_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 03:04:30 BoogieIcfgContainer
[2020-11-24 15:04:30,652 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 03:04:30" (2/2) ...
[2020-11-24 15:04:30,652 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-24 15:04:30,653 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@6f394418 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 03:04:30, skipping insertion in model container
[2020-11-24 15:04:30,653 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-24 15:04:30,653 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-24 15:04:30,653 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-24 15:04:30,655 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-24 15:04:30,655 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Litecoin_SV_0xee059f0ca1507e4e20c689b20cff71b5e924f7bd_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 03:04:29" (1/3) ...
[2020-11-24 15:04:30,655 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@727dfc3c and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 03:04:30, skipping insertion in model container
[2020-11-24 15:04:30,656 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 03:04:30" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-24 15:04:30,696 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 03:04:30 NWAContainer
[2020-11-24 15:04:30,697 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-24 15:04:30,697 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-24 15:04:30,697 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-24 15:04:30,698 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-24 15:04:30,699 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Litecoin_SV_0xee059f0ca1507e4e20c689b20cff71b5e924f7bd_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 03:04:30" (3/4) ...
[2020-11-24 15:04:30,700 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@1b05185e and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 03:04:30, skipping insertion in model container
[2020-11-24 15:04:30,700 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 03:04:30" (4/4) ...
[2020-11-24 15:04:30,703 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-24 15:04:30,705 INFO  L110   BuchiProductObserver]: Initial RCFG 708 locations, 863 edges
[2020-11-24 15:04:30,706 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-24 15:04:30,719 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-24 15:04:31,646 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-24 15:04:31,649 INFO  L110   BuchiProductObserver]: BuchiProgram size 1638 locations, 2778 edges
[2020-11-24 15:04:31,649 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 03:04:31 BoogieIcfgContainer
[2020-11-24 15:04:31,649 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-24 15:04:31,650 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-24 15:04:31,650 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-24 15:04:31,651 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-24 15:04:31,652 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 03:04:31" (1/1) ...
[2020-11-24 15:04:31,701 INFO  L313           BlockEncoder]: Initial Icfg 1638 locations, 2778 edges
[2020-11-24 15:04:31,701 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-24 15:04:31,702 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-24 15:04:31,702 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-24 15:04:31,703 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-24 15:04:31,711 INFO  L70    emoveInfeasibleEdges]: Removed 75 edges and 13 locations because of local infeasibility
[2020-11-24 15:04:31,715 INFO  L70        RemoveSinkStates]: Removed 32 edges and 21 locations by removing sink states
[2020-11-24 15:04:31,721 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-24 15:04:31,724 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-24 15:04:31,725 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-24 15:04:31,726 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-24 15:04:31,728 INFO  L313           BlockEncoder]: Encoded RCFG 1588 locations, 2648 edges
[2020-11-24 15:04:31,729 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 24.11 03:04:31 BasicIcfg
[2020-11-24 15:04:31,729 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-24 15:04:31,729 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-24 15:04:31,729 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-24 15:04:31,732 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-24 15:04:31,732 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 15:04:31,733 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Litecoin_SV_0xee059f0ca1507e4e20c689b20cff71b5e924f7bd_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 03:04:29" (1/6) ...
[2020-11-24 15:04:31,734 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@7171b017 and model type Litecoin_SV_0xee059f0ca1507e4e20c689b20cff71b5e924f7bd_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 24.11 03:04:31, skipping insertion in model container
[2020-11-24 15:04:31,734 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 15:04:31,735 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 03:04:30" (2/6) ...
[2020-11-24 15:04:31,735 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@7171b017 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 24.11 03:04:31, skipping insertion in model container
[2020-11-24 15:04:31,735 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 15:04:31,735 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Litecoin_SV_0xee059f0ca1507e4e20c689b20cff71b5e924f7bd_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 03:04:30" (3/6) ...
[2020-11-24 15:04:31,735 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@7171b017 and model type Litecoin_SV_0xee059f0ca1507e4e20c689b20cff71b5e924f7bd_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 24.11 03:04:31, skipping insertion in model container
[2020-11-24 15:04:31,735 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 15:04:31,735 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 03:04:30" (4/6) ...
[2020-11-24 15:04:31,736 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@7171b017 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 24.11 03:04:31, skipping insertion in model container
[2020-11-24 15:04:31,736 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 15:04:31,736 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 03:04:31" (5/6) ...
[2020-11-24 15:04:31,736 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@7171b017 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 24.11 03:04:31, skipping insertion in model container
[2020-11-24 15:04:31,736 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 15:04:31,736 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 24.11 03:04:31" (6/6) ...
[2020-11-24 15:04:31,737 INFO  L404   chiAutomizerObserver]: Analyzing ICFG Litecoin_SV_0xee059f0ca1507e4e20c689b20cff71b5e924f7bd_transferfrom-normal.bpl_BEv2
[2020-11-24 15:04:31,775 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-24 15:04:31,776 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-24 15:04:31,776 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-24 15:04:31,776 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-24 15:04:31,776 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-24 15:04:31,776 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-24 15:04:31,776 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-24 15:04:31,776 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-24 15:04:31,776 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-24 15:04:31,795 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1588 states.
[2020-11-24 15:04:31,834 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 15:04:31,834 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 15:04:31,834 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 15:04:31,843 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 15:04:31,843 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
[2020-11-24 15:04:31,843 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-24 15:04:31,843 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1588 states.
[2020-11-24 15:04:31,854 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 15:04:31,854 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 15:04:31,854 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 15:04:31,856 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 15:04:31,856 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L3]                 success_transferFrom_Litecoin_SV0 := false;
[L3]                 call_transferFrom_Litecoin_SV0 := false;
[L3]     CALL        call main();
[L3]                 havoc p3;
[L3]                 havoc p2;
[L3]                 havoc p1;
[L2002]              assume null == 0;
[L2003]  CALL        call this := FreshRefGenerator__success();
[L815]               havoc newRef;
[L816]               assume Alloc[newRef] == false;
[L817]               Alloc[newRef] := true;
[L818]               assume newRef != null;
[L2003]  RET         call this := FreshRefGenerator__success();
[L2004]              assume now >= 0;
[L2005]              assume DType[this] == Litecoin_SV;
[L2006]              assume !revert && gas >= 0;
[L2007]  CALL        call CorralChoice_Litecoin_SV(this);
[L1885]              havoc msgsender_MSG;
[L1886]              havoc msgvalue_MSG;
[L1887]              havoc choice;
[L1888]              havoc a_s23;
[L1889]              havoc b_s23;
[L1890]              havoc c_s23;
[L1891]              havoc a_s45;
[L1892]              havoc b_s45;
[L1893]              havoc c_s45;
[L1894]              havoc a_s73;
[L1895]              havoc b_s73;
[L1896]              havoc c_s73;
[L1897]              havoc a_s95;
[L1898]              havoc b_s95;
[L1899]              havoc c_s95;
[L1900]              havoc __ret_0_totalSupply;
[L1901]              havoc tokenOwner_s340;
[L1902]              havoc balance_s340;
[L1903]              havoc tokenOwner_s486;
[L1904]              havoc spender_s486;
[L1905]              havoc remaining_s486;
[L1906]              havoc to_s383;
[L1907]              havoc tokens_s383;
[L1908]              havoc success_s383;
[L1909]              havoc spender_s411;
[L1910]              havoc tokens_s411;
[L1911]              havoc success_s411;
[L1912]              havoc from_s470;
[L1913]              havoc to_s470;
[L1914]              havoc tokens_s470;
[L1915]              havoc success_s470;
[L1916]              havoc __ret_0_owner;
[L1917]              havoc __ret_0_newOwner;
[L1918]              havoc _newOwner_s217;
[L1919]              havoc __ret_0_businessName;
[L1920]              havoc __ret_0_businessCountry;
[L1921]              havoc __ret_0_symbol;
[L1922]              havoc __ret_0_name;
[L1923]              havoc __ret_0_decimals;
[L1924]              havoc __ret_0__totalSupply;
[L1925]              havoc spender_s529;
[L1926]              havoc tokens_s529;
[L1927]              havoc data_s529;
[L1928]              havoc success_s529;
[L1929]              havoc tokenAddress_s556;
[L1930]              havoc tokens_s556;
[L1931]              havoc success_s556;
[L1932]              havoc tmpNow;
[L1933]              havoc gas;
[L1934]              assume gas > 4000000 && gas <= 8000000;
[L1935]              tmpNow := now;
[L1936]              havoc now;
[L1937]              assume now > tmpNow;
[L1938]              assume msgsender_MSG != null;
[L1939]  COND TRUE   choice == 8
[L1940]              gas := gas - 21000;
[L1941]  COND FALSE  !(gas >= 0)
[L2007]  RET         call CorralChoice_Litecoin_SV(this);

Loop:
[L2007]        assume true;

[2020-11-24 15:04:31,873 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 15:04:31,873 INFO  L82        PathProgramCache]: Analyzing trace with hash 981396699, now seen corresponding path program 1 times
[2020-11-24 15:04:31,878 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 15:04:31,898 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 15:04:31,950 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 15:04:31,952 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 15:04:31,952 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-24 15:04:31,956 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 15:04:32,059 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-24 15:04:32,060 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-24 15:04:32,062 INFO  L87              Difference]: Start difference. First operand 1588 states. Second operand 3 states.
[2020-11-24 15:04:32,179 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 15:04:32,179 INFO  L93              Difference]: Finished difference Result 693 states and 757 transitions.
[2020-11-24 15:04:32,179 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-24 15:04:32,181 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 693 states and 757 transitions.
[2020-11-24 15:04:32,186 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 15:04:32,192 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 693 states to 213 states and 226 transitions.
[2020-11-24 15:04:32,193 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 4
[2020-11-24 15:04:32,194 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 153
[2020-11-24 15:04:32,194 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 213 states and 226 transitions.
[2020-11-24 15:04:32,196 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 15:04:32,196 INFO  L728         BuchiCegarLoop]: Abstraction has 213 states and 226 transitions.
[2020-11-24 15:04:32,211 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 213 states and 226 transitions.
[2020-11-24 15:04:32,230 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 213 to 213.
[2020-11-24 15:04:32,231 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 213 states.
[2020-11-24 15:04:32,232 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 213 states to 213 states and 226 transitions.
[2020-11-24 15:04:32,233 INFO  L751         BuchiCegarLoop]: Abstraction has 213 states and 226 transitions.
[2020-11-24 15:04:32,233 INFO  L631         BuchiCegarLoop]: Abstraction has 213 states and 226 transitions.
[2020-11-24 15:04:32,233 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-24 15:04:32,233 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 213 states and 226 transitions.
[2020-11-24 15:04:32,234 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 15:04:32,234 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 15:04:32,234 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 15:04:32,236 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 15:04:32,236 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L3]                 success_transferFrom_Litecoin_SV0 := false;
[L3]                 call_transferFrom_Litecoin_SV0 := false;
[L3]     CALL        call main();
[L3]                 havoc p3;
[L3]                 havoc p2;
[L3]                 havoc p1;
[L2002]              assume null == 0;
[L2003]  CALL        call this := FreshRefGenerator__success();
[L815]               havoc newRef;
[L816]               assume Alloc[newRef] == false;
[L817]               Alloc[newRef] := true;
[L818]               assume newRef != null;
[L2003]  RET         call this := FreshRefGenerator__success();
[L2004]              assume now >= 0;
[L2005]              assume DType[this] == Litecoin_SV;
[L2006]              assume !revert && gas >= 0;
[L2007]  CALL        call CorralChoice_Litecoin_SV(this);
[L1885]              havoc msgsender_MSG;
[L1886]              havoc msgvalue_MSG;
[L1887]              havoc choice;
[L1888]              havoc a_s23;
[L1889]              havoc b_s23;
[L1890]              havoc c_s23;
[L1891]              havoc a_s45;
[L1892]              havoc b_s45;
[L1893]              havoc c_s45;
[L1894]              havoc a_s73;
[L1895]              havoc b_s73;
[L1896]              havoc c_s73;
[L1897]              havoc a_s95;
[L1898]              havoc b_s95;
[L1899]              havoc c_s95;
[L1900]              havoc __ret_0_totalSupply;
[L1901]              havoc tokenOwner_s340;
[L1902]              havoc balance_s340;
[L1903]              havoc tokenOwner_s486;
[L1904]              havoc spender_s486;
[L1905]              havoc remaining_s486;
[L1906]              havoc to_s383;
[L1907]              havoc tokens_s383;
[L1908]              havoc success_s383;
[L1909]              havoc spender_s411;
[L1910]              havoc tokens_s411;
[L1911]              havoc success_s411;
[L1912]              havoc from_s470;
[L1913]              havoc to_s470;
[L1914]              havoc tokens_s470;
[L1915]              havoc success_s470;
[L1916]              havoc __ret_0_owner;
[L1917]              havoc __ret_0_newOwner;
[L1918]              havoc _newOwner_s217;
[L1919]              havoc __ret_0_businessName;
[L1920]              havoc __ret_0_businessCountry;
[L1921]              havoc __ret_0_symbol;
[L1922]              havoc __ret_0_name;
[L1923]              havoc __ret_0_decimals;
[L1924]              havoc __ret_0__totalSupply;
[L1925]              havoc spender_s529;
[L1926]              havoc tokens_s529;
[L1927]              havoc data_s529;
[L1928]              havoc success_s529;
[L1929]              havoc tokenAddress_s556;
[L1930]              havoc tokens_s556;
[L1931]              havoc success_s556;
[L1932]              havoc tmpNow;
[L1933]              havoc gas;
[L1934]              assume gas > 4000000 && gas <= 8000000;
[L1935]              tmpNow := now;
[L1936]              havoc now;
[L1937]              assume now > tmpNow;
[L1938]              assume msgsender_MSG != null;
[L1939]  COND FALSE  !(choice == 8)
[L1947]  COND FALSE  !(choice == 7)
[L1955]  COND FALSE  !(choice == 6)
[L1961]  COND FALSE  !(choice == 5)
[L1967]  COND FALSE  !(choice == 4)
[L1973]  COND FALSE  !(choice == 3)
[L1980]  COND FALSE  !(choice == 2)
[L1987]  COND TRUE   choice == 1
[L1988]              gas := gas - 21000;
[L1989]  COND TRUE   gas >= 0
[L1990]              assume tokens_s470 >= 0 && tokens_s470 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1991]              assume msgvalue_MSG == 0;
[L1992]  CALL        call success_s470 := transferFrom~address~address~uint256_Litecoin_SV(this, msgsender_MSG, msgvalue_MSG, from_s470, to_s470, tokens_s470);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != from_s470 && p1 != to_s470) && (p2 != from_s470 || p3 != msgsender_MSG)) && from_s470 != to_s470) && tokens_s470 <= balances_Litecoin_SV[this][from_s470]) && tokens_s470 <= allowed_Litecoin_SV[this][from_s470][msgsender_MSG]) && balances_Litecoin_SV[this][to_s470] + tokens_s470 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && tokens_s470 >= 0) && tokens_s470 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_Litecoin_SV[this][to_s470] >= 0) && balances_Litecoin_SV[this][to_s470] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_Litecoin_SV[this][from_s470] >= 0) && balances_Litecoin_SV[this][from_s470] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_Litecoin_SV[this][from_s470][msgsender_MSG] >= 0) && allowed_Litecoin_SV[this][from_s470][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_Litecoin_SV0 := true;
[L3]                 call_transferFrom_Litecoin_SV0 := false;
[L3]                 revert := revert_hold;
[L434]               havoc __exception;
[L435]               revert := false;
[L436]   COND FALSE  !(__exception)
[L461]   CALL        call success_s470 := transferFrom~address~address~uint256_Litecoin_SV__success(this, msgsender_MSG, msgvalue_MSG, from_s470, to_s470, tokens_s470);
[L1012]  COND TRUE   DType[this] == Litecoin_SV
[L1013]  CALL        call __var_4 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_Litecoin_SV[this][from_s470], tokens_s470);
[L850]   COND TRUE   !(b_s45 <= a_s45)
[L851]               revert := true;
[L1013]  RET         call __var_4 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_Litecoin_SV[this][from_s470], tokens_s470);
[L1014]  COND TRUE   revert
[L461]   RET         call success_s470 := transferFrom~address~address~uint256_Litecoin_SV__success(this, msgsender_MSG, msgvalue_MSG, from_s470, to_s470, tokens_s470);
[L462]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((((((((success_s470 == true && balances_Litecoin_SV[this][from_s470] == old(balances_Litecoin_SV[this][from_s470]) - tokens_s470) && balances_Litecoin_SV[this][to_s470] == old(balances_Litecoin_SV[this][to_s470]) + tokens_s470) && allowed_Litecoin_SV[this][from_s470][msgsender_MSG] == old(allowed_Litecoin_SV[this][from_s470][msgsender_MSG]) - tokens_s470) && _totalSupply_Litecoin_SV[this] == old(_totalSupply_Litecoin_SV[this])) && balances_Litecoin_SV[this][p1] == old(balances_Litecoin_SV[this][p1])) && allowed_Litecoin_SV[this][p2][p3] == old(allowed_Litecoin_SV[this][p2][p3])) && businessName_Litecoin_SV[this] == old(businessName_Litecoin_SV[this])) && businessCountry_Litecoin_SV[this] == old(businessCountry_Litecoin_SV[this])) && symbol_Litecoin_SV[this] == old(symbol_Litecoin_SV[this])) && name_Litecoin_SV[this] == old(name_Litecoin_SV[this])) && decimals_Litecoin_SV[this] == old(decimals_Litecoin_SV[this])) && owner_Owned[this] == old(owner_Owned[this])) && newOwner_Owned[this] == old(newOwner_Owned[this]));
[L3]                 revert := revert_hold;
[L1992]  RET         call success_s470 := transferFrom~address~address~uint256_Litecoin_SV(this, msgsender_MSG, msgvalue_MSG, from_s470, to_s470, tokens_s470);
[L2007]  RET         call CorralChoice_Litecoin_SV(this);

Loop:
[L2007]        assume true;

[2020-11-24 15:04:32,239 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 15:04:32,239 INFO  L82        PathProgramCache]: Analyzing trace with hash 198270504, now seen corresponding path program 1 times
[2020-11-24 15:04:32,240 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 15:04:32,252 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 15:04:32,272 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 15:04:32,272 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 15:04:32,272 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-24 15:04:32,274 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 15:04:32,274 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-24 15:04:32,274 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-24 15:04:32,274 INFO  L87              Difference]: Start difference. First operand 213 states and 226 transitions. cyclomatic complexity: 14 Second operand 3 states.
[2020-11-24 15:04:32,282 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 15:04:32,282 INFO  L93              Difference]: Finished difference Result 248 states and 262 transitions.
[2020-11-24 15:04:32,283 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-24 15:04:32,283 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 248 states and 262 transitions.
[2020-11-24 15:04:32,285 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 2
[2020-11-24 15:04:32,287 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 248 states to 232 states and 241 transitions.
[2020-11-24 15:04:32,287 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 169
[2020-11-24 15:04:32,287 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 174
[2020-11-24 15:04:32,287 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 232 states and 241 transitions.
[2020-11-24 15:04:32,288 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 15:04:32,288 INFO  L728         BuchiCegarLoop]: Abstraction has 232 states and 241 transitions.
[2020-11-24 15:04:32,289 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 232 states and 241 transitions.
[2020-11-24 15:04:32,294 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 232 to 221.
[2020-11-24 15:04:32,294 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 221 states.
[2020-11-24 15:04:32,295 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 221 states to 221 states and 230 transitions.
[2020-11-24 15:04:32,295 INFO  L751         BuchiCegarLoop]: Abstraction has 221 states and 230 transitions.
[2020-11-24 15:04:32,295 INFO  L631         BuchiCegarLoop]: Abstraction has 221 states and 230 transitions.
[2020-11-24 15:04:32,295 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-24 15:04:32,295 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 221 states and 230 transitions.
[2020-11-24 15:04:32,296 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 15:04:32,296 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 15:04:32,296 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 15:04:32,298 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 15:04:32,298 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L3]                 success_transferFrom_Litecoin_SV0 := false;
[L3]                 call_transferFrom_Litecoin_SV0 := false;
[L3]     CALL        call main();
[L3]                 havoc p3;
[L3]                 havoc p2;
[L3]                 havoc p1;
[L2002]              assume null == 0;
[L2003]  CALL        call this := FreshRefGenerator__success();
[L815]               havoc newRef;
[L816]               assume Alloc[newRef] == false;
[L817]               Alloc[newRef] := true;
[L818]               assume newRef != null;
[L2003]  RET         call this := FreshRefGenerator__success();
[L2004]              assume now >= 0;
[L2005]              assume DType[this] == Litecoin_SV;
[L2006]              assume !revert && gas >= 0;
[L2007]  CALL        call CorralChoice_Litecoin_SV(this);
[L1885]              havoc msgsender_MSG;
[L1886]              havoc msgvalue_MSG;
[L1887]              havoc choice;
[L1888]              havoc a_s23;
[L1889]              havoc b_s23;
[L1890]              havoc c_s23;
[L1891]              havoc a_s45;
[L1892]              havoc b_s45;
[L1893]              havoc c_s45;
[L1894]              havoc a_s73;
[L1895]              havoc b_s73;
[L1896]              havoc c_s73;
[L1897]              havoc a_s95;
[L1898]              havoc b_s95;
[L1899]              havoc c_s95;
[L1900]              havoc __ret_0_totalSupply;
[L1901]              havoc tokenOwner_s340;
[L1902]              havoc balance_s340;
[L1903]              havoc tokenOwner_s486;
[L1904]              havoc spender_s486;
[L1905]              havoc remaining_s486;
[L1906]              havoc to_s383;
[L1907]              havoc tokens_s383;
[L1908]              havoc success_s383;
[L1909]              havoc spender_s411;
[L1910]              havoc tokens_s411;
[L1911]              havoc success_s411;
[L1912]              havoc from_s470;
[L1913]              havoc to_s470;
[L1914]              havoc tokens_s470;
[L1915]              havoc success_s470;
[L1916]              havoc __ret_0_owner;
[L1917]              havoc __ret_0_newOwner;
[L1918]              havoc _newOwner_s217;
[L1919]              havoc __ret_0_businessName;
[L1920]              havoc __ret_0_businessCountry;
[L1921]              havoc __ret_0_symbol;
[L1922]              havoc __ret_0_name;
[L1923]              havoc __ret_0_decimals;
[L1924]              havoc __ret_0__totalSupply;
[L1925]              havoc spender_s529;
[L1926]              havoc tokens_s529;
[L1927]              havoc data_s529;
[L1928]              havoc success_s529;
[L1929]              havoc tokenAddress_s556;
[L1930]              havoc tokens_s556;
[L1931]              havoc success_s556;
[L1932]              havoc tmpNow;
[L1933]              havoc gas;
[L1934]              assume gas > 4000000 && gas <= 8000000;
[L1935]              tmpNow := now;
[L1936]              havoc now;
[L1937]              assume now > tmpNow;
[L1938]              assume msgsender_MSG != null;
[L1939]  COND FALSE  !(choice == 8)
[L1947]  COND FALSE  !(choice == 7)
[L1955]  COND FALSE  !(choice == 6)
[L1961]  COND FALSE  !(choice == 5)
[L1967]  COND FALSE  !(choice == 4)
[L1973]  COND FALSE  !(choice == 3)
[L1980]  COND FALSE  !(choice == 2)
[L1987]  COND TRUE   choice == 1
[L1988]              gas := gas - 21000;
[L1989]  COND TRUE   gas >= 0
[L1990]              assume tokens_s470 >= 0 && tokens_s470 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1991]              assume msgvalue_MSG == 0;
[L1992]  CALL        call success_s470 := transferFrom~address~address~uint256_Litecoin_SV(this, msgsender_MSG, msgvalue_MSG, from_s470, to_s470, tokens_s470);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != from_s470 && p1 != to_s470) && (p2 != from_s470 || p3 != msgsender_MSG)) && from_s470 != to_s470) && tokens_s470 <= balances_Litecoin_SV[this][from_s470]) && tokens_s470 <= allowed_Litecoin_SV[this][from_s470][msgsender_MSG]) && balances_Litecoin_SV[this][to_s470] + tokens_s470 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && tokens_s470 >= 0) && tokens_s470 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_Litecoin_SV[this][to_s470] >= 0) && balances_Litecoin_SV[this][to_s470] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_Litecoin_SV[this][from_s470] >= 0) && balances_Litecoin_SV[this][from_s470] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_Litecoin_SV[this][from_s470][msgsender_MSG] >= 0) && allowed_Litecoin_SV[this][from_s470][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_Litecoin_SV0 := true;
[L3]                 call_transferFrom_Litecoin_SV0 := false;
[L3]                 revert := revert_hold;
[L434]               havoc __exception;
[L435]               revert := false;
[L436]   COND TRUE   __exception
[L437]               __tmp__Balance := Balance;
[L438]               __tmp__DType := DType;
[L439]               __tmp__Alloc := Alloc;
[L440]               __tmp__balance_ADDR := balance_ADDR;
[L441]               __tmp__M_Ref_int := M_Ref_int;
[L442]               __tmp__sum_balances0 := sum_balances0;
[L443]               __tmp__alloc_allowed_Litecoin_SV_lvl0 := alloc_allowed_Litecoin_SV_lvl0;
[L444]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L445]               __tmp__sum_allowed1 := sum_allowed1;
[L446]               __tmp__Length := Length;
[L447]               __tmp__now := now;
[L448]               __tmp__owner_Owned := owner_Owned;
[L449]               __tmp__newOwner_Owned := newOwner_Owned;
[L450]               __tmp__businessName_Litecoin_SV := businessName_Litecoin_SV;
[L451]               __tmp__businessCountry_Litecoin_SV := businessCountry_Litecoin_SV;
[L452]               __tmp__symbol_Litecoin_SV := symbol_Litecoin_SV;
[L453]               __tmp__name_Litecoin_SV := name_Litecoin_SV;
[L454]               __tmp__decimals_Litecoin_SV := decimals_Litecoin_SV;
[L455]               __tmp___totalSupply_Litecoin_SV := _totalSupply_Litecoin_SV;
[L456]               __tmp__balances_Litecoin_SV := balances_Litecoin_SV;
[L457]               __tmp__allowed_Litecoin_SV := allowed_Litecoin_SV;
[L458]   CALL        call success_s470 := transferFrom~address~address~uint256_Litecoin_SV__fail(this, msgsender_MSG, msgvalue_MSG, from_s470, to_s470, tokens_s470);
[L970]   COND TRUE   __tmp__DType[this] == Litecoin_SV
[L971]   CALL        call __var_4 := safeSub~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balances_Litecoin_SV[this][from_s470], tokens_s470);
[L841]   COND TRUE   !(b_s45 <= a_s45)
[L842]               revert := true;
[L971]   RET         call __var_4 := safeSub~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balances_Litecoin_SV[this][from_s470], tokens_s470);
[L972]   COND TRUE   revert
[L458]   RET         call success_s470 := transferFrom~address~address~uint256_Litecoin_SV__fail(this, msgsender_MSG, msgvalue_MSG, from_s470, to_s470, tokens_s470);
[L459]               assume revert || gas < 0;
[L1992]  RET         call success_s470 := transferFrom~address~address~uint256_Litecoin_SV(this, msgsender_MSG, msgvalue_MSG, from_s470, to_s470, tokens_s470);
[L2007]  RET         call CorralChoice_Litecoin_SV(this);

Loop:
[L2007]        assume true;

[2020-11-24 15:04:32,301 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 15:04:32,301 INFO  L82        PathProgramCache]: Analyzing trace with hash -1286931911, now seen corresponding path program 1 times
[2020-11-24 15:04:32,302 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 15:04:32,312 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 15:04:32,365 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 15:04:32,365 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 15:04:32,365 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [7] imperfect sequences [] total 7
[2020-11-24 15:04:32,366 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 15:04:32,366 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 7 interpolants.
[2020-11-24 15:04:32,366 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=11, Invalid=31, Unknown=0, NotChecked=0, Total=42
[2020-11-24 15:04:32,366 INFO  L87              Difference]: Start difference. First operand 221 states and 230 transitions. cyclomatic complexity: 10 Second operand 7 states.
[2020-11-24 15:04:32,462 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 15:04:32,462 INFO  L93              Difference]: Finished difference Result 236 states and 244 transitions.
[2020-11-24 15:04:32,463 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 8 states. 
[2020-11-24 15:04:32,463 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 236 states and 244 transitions.
[2020-11-24 15:04:32,465 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 2
[2020-11-24 15:04:32,466 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 236 states to 232 states and 240 transitions.
[2020-11-24 15:04:32,466 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 174
[2020-11-24 15:04:32,467 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 174
[2020-11-24 15:04:32,467 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 232 states and 240 transitions.
[2020-11-24 15:04:32,468 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 15:04:32,468 INFO  L728         BuchiCegarLoop]: Abstraction has 232 states and 240 transitions.
[2020-11-24 15:04:32,468 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 232 states and 240 transitions.
[2020-11-24 15:04:32,471 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 232 to 219.
[2020-11-24 15:04:32,471 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 219 states.
[2020-11-24 15:04:32,472 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 219 states to 219 states and 227 transitions.
[2020-11-24 15:04:32,472 INFO  L751         BuchiCegarLoop]: Abstraction has 219 states and 227 transitions.
[2020-11-24 15:04:32,472 INFO  L631         BuchiCegarLoop]: Abstraction has 219 states and 227 transitions.
[2020-11-24 15:04:32,472 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-24 15:04:32,472 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 219 states and 227 transitions.
[2020-11-24 15:04:32,473 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 15:04:32,473 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 15:04:32,473 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 15:04:32,474 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 15:04:32,474 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L3]                 success_transferFrom_Litecoin_SV0 := false;
[L3]                 call_transferFrom_Litecoin_SV0 := false;
[L3]     CALL        call main();
[L3]                 havoc p3;
[L3]                 havoc p2;
[L3]                 havoc p1;
[L2002]              assume null == 0;
[L2003]  CALL        call this := FreshRefGenerator__success();
[L815]               havoc newRef;
[L816]               assume Alloc[newRef] == false;
[L817]               Alloc[newRef] := true;
[L818]               assume newRef != null;
[L2003]  RET         call this := FreshRefGenerator__success();
[L2004]              assume now >= 0;
[L2005]              assume DType[this] == Litecoin_SV;
[L2006]              assume !revert && gas >= 0;
[L2007]  CALL        call CorralChoice_Litecoin_SV(this);
[L1885]              havoc msgsender_MSG;
[L1886]              havoc msgvalue_MSG;
[L1887]              havoc choice;
[L1888]              havoc a_s23;
[L1889]              havoc b_s23;
[L1890]              havoc c_s23;
[L1891]              havoc a_s45;
[L1892]              havoc b_s45;
[L1893]              havoc c_s45;
[L1894]              havoc a_s73;
[L1895]              havoc b_s73;
[L1896]              havoc c_s73;
[L1897]              havoc a_s95;
[L1898]              havoc b_s95;
[L1899]              havoc c_s95;
[L1900]              havoc __ret_0_totalSupply;
[L1901]              havoc tokenOwner_s340;
[L1902]              havoc balance_s340;
[L1903]              havoc tokenOwner_s486;
[L1904]              havoc spender_s486;
[L1905]              havoc remaining_s486;
[L1906]              havoc to_s383;
[L1907]              havoc tokens_s383;
[L1908]              havoc success_s383;
[L1909]              havoc spender_s411;
[L1910]              havoc tokens_s411;
[L1911]              havoc success_s411;
[L1912]              havoc from_s470;
[L1913]              havoc to_s470;
[L1914]              havoc tokens_s470;
[L1915]              havoc success_s470;
[L1916]              havoc __ret_0_owner;
[L1917]              havoc __ret_0_newOwner;
[L1918]              havoc _newOwner_s217;
[L1919]              havoc __ret_0_businessName;
[L1920]              havoc __ret_0_businessCountry;
[L1921]              havoc __ret_0_symbol;
[L1922]              havoc __ret_0_name;
[L1923]              havoc __ret_0_decimals;
[L1924]              havoc __ret_0__totalSupply;
[L1925]              havoc spender_s529;
[L1926]              havoc tokens_s529;
[L1927]              havoc data_s529;
[L1928]              havoc success_s529;
[L1929]              havoc tokenAddress_s556;
[L1930]              havoc tokens_s556;
[L1931]              havoc success_s556;
[L1932]              havoc tmpNow;
[L1933]              havoc gas;
[L1934]              assume gas > 4000000 && gas <= 8000000;
[L1935]              tmpNow := now;
[L1936]              havoc now;
[L1937]              assume now > tmpNow;
[L1938]              assume msgsender_MSG != null;
[L1939]  COND FALSE  !(choice == 8)
[L1947]  COND FALSE  !(choice == 7)
[L1955]  COND FALSE  !(choice == 6)
[L1961]  COND FALSE  !(choice == 5)
[L1967]  COND FALSE  !(choice == 4)
[L1973]  COND FALSE  !(choice == 3)
[L1980]  COND FALSE  !(choice == 2)
[L1987]  COND TRUE   choice == 1
[L1988]              gas := gas - 21000;
[L1989]  COND TRUE   gas >= 0
[L1990]              assume tokens_s470 >= 0 && tokens_s470 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1991]              assume msgvalue_MSG == 0;
[L1992]  CALL        call success_s470 := transferFrom~address~address~uint256_Litecoin_SV(this, msgsender_MSG, msgvalue_MSG, from_s470, to_s470, tokens_s470);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != from_s470 && p1 != to_s470) && (p2 != from_s470 || p3 != msgsender_MSG)) && from_s470 != to_s470) && tokens_s470 <= balances_Litecoin_SV[this][from_s470]) && tokens_s470 <= allowed_Litecoin_SV[this][from_s470][msgsender_MSG]) && balances_Litecoin_SV[this][to_s470] + tokens_s470 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && tokens_s470 >= 0) && tokens_s470 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_Litecoin_SV[this][to_s470] >= 0) && balances_Litecoin_SV[this][to_s470] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_Litecoin_SV[this][from_s470] >= 0) && balances_Litecoin_SV[this][from_s470] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_Litecoin_SV[this][from_s470][msgsender_MSG] >= 0) && allowed_Litecoin_SV[this][from_s470][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_Litecoin_SV0 := true;
[L3]                 call_transferFrom_Litecoin_SV0 := false;
[L3]                 revert := revert_hold;
[L434]               havoc __exception;
[L435]               revert := false;
[L436]   COND TRUE   __exception
[L437]               __tmp__Balance := Balance;
[L438]               __tmp__DType := DType;
[L439]               __tmp__Alloc := Alloc;
[L440]               __tmp__balance_ADDR := balance_ADDR;
[L441]               __tmp__M_Ref_int := M_Ref_int;
[L442]               __tmp__sum_balances0 := sum_balances0;
[L443]               __tmp__alloc_allowed_Litecoin_SV_lvl0 := alloc_allowed_Litecoin_SV_lvl0;
[L444]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L445]               __tmp__sum_allowed1 := sum_allowed1;
[L446]               __tmp__Length := Length;
[L447]               __tmp__now := now;
[L448]               __tmp__owner_Owned := owner_Owned;
[L449]               __tmp__newOwner_Owned := newOwner_Owned;
[L450]               __tmp__businessName_Litecoin_SV := businessName_Litecoin_SV;
[L451]               __tmp__businessCountry_Litecoin_SV := businessCountry_Litecoin_SV;
[L452]               __tmp__symbol_Litecoin_SV := symbol_Litecoin_SV;
[L453]               __tmp__name_Litecoin_SV := name_Litecoin_SV;
[L454]               __tmp__decimals_Litecoin_SV := decimals_Litecoin_SV;
[L455]               __tmp___totalSupply_Litecoin_SV := _totalSupply_Litecoin_SV;
[L456]               __tmp__balances_Litecoin_SV := balances_Litecoin_SV;
[L457]               __tmp__allowed_Litecoin_SV := allowed_Litecoin_SV;
[L458]   CALL        call success_s470 := transferFrom~address~address~uint256_Litecoin_SV__fail(this, msgsender_MSG, msgvalue_MSG, from_s470, to_s470, tokens_s470);
[L970]   COND TRUE   __tmp__DType[this] == Litecoin_SV
[L971]   CALL        call __var_4 := safeSub~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balances_Litecoin_SV[this][from_s470], tokens_s470);
[L841]   COND FALSE  !(!(b_s45 <= a_s45))
[L845]               c_s45 := (a_s45 - b_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L971]   RET         call __var_4 := safeSub~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balances_Litecoin_SV[this][from_s470], tokens_s470);
[L972]   COND TRUE   revert
[L458]   RET         call success_s470 := transferFrom~address~address~uint256_Litecoin_SV__fail(this, msgsender_MSG, msgvalue_MSG, from_s470, to_s470, tokens_s470);
[L459]               assume revert || gas < 0;
[L1992]  RET         call success_s470 := transferFrom~address~address~uint256_Litecoin_SV(this, msgsender_MSG, msgvalue_MSG, from_s470, to_s470, tokens_s470);
[L2007]  RET         call CorralChoice_Litecoin_SV(this);

Loop:
[L2007]        assume true;

[2020-11-24 15:04:32,477 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 15:04:32,477 INFO  L82        PathProgramCache]: Analyzing trace with hash 738210546, now seen corresponding path program 1 times
[2020-11-24 15:04:32,478 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 15:04:32,485 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 15:04:32,508 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 15:04:32,508 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 15:04:32,508 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [5] imperfect sequences [] total 5
[2020-11-24 15:04:32,508 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 15:04:32,509 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 5 interpolants.
[2020-11-24 15:04:32,509 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=9, Invalid=11, Unknown=0, NotChecked=0, Total=20
[2020-11-24 15:04:32,509 INFO  L87              Difference]: Start difference. First operand 219 states and 227 transitions. cyclomatic complexity: 9 Second operand 5 states.
[2020-11-24 15:04:32,521 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 15:04:32,521 INFO  L93              Difference]: Finished difference Result 230 states and 235 transitions.
[2020-11-24 15:04:32,521 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-24 15:04:32,521 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 230 states and 235 transitions.
[2020-11-24 15:04:32,522 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 2
[2020-11-24 15:04:32,524 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 230 states to 230 states and 235 transitions.
[2020-11-24 15:04:32,524 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 172
[2020-11-24 15:04:32,524 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 172
[2020-11-24 15:04:32,524 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 230 states and 235 transitions.
[2020-11-24 15:04:32,524 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 15:04:32,524 INFO  L728         BuchiCegarLoop]: Abstraction has 230 states and 235 transitions.
[2020-11-24 15:04:32,525 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 230 states and 235 transitions.
[2020-11-24 15:04:32,527 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 230 to 219.
[2020-11-24 15:04:32,527 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 219 states.
[2020-11-24 15:04:32,528 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 219 states to 219 states and 224 transitions.
[2020-11-24 15:04:32,528 INFO  L751         BuchiCegarLoop]: Abstraction has 219 states and 224 transitions.
[2020-11-24 15:04:32,528 INFO  L631         BuchiCegarLoop]: Abstraction has 219 states and 224 transitions.
[2020-11-24 15:04:32,528 INFO  L445         BuchiCegarLoop]: ======== Iteration 5============
[2020-11-24 15:04:32,528 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 219 states and 224 transitions.
[2020-11-24 15:04:32,529 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 15:04:32,529 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 15:04:32,529 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 15:04:32,530 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 15:04:32,530 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L3]                 success_transferFrom_Litecoin_SV0 := false;
[L3]                 call_transferFrom_Litecoin_SV0 := false;
[L3]     CALL        call main();
[L3]                 havoc p3;
[L3]                 havoc p2;
[L3]                 havoc p1;
[L2002]              assume null == 0;
[L2003]  CALL        call this := FreshRefGenerator__success();
[L815]               havoc newRef;
[L816]               assume Alloc[newRef] == false;
[L817]               Alloc[newRef] := true;
[L818]               assume newRef != null;
[L2003]  RET         call this := FreshRefGenerator__success();
[L2004]              assume now >= 0;
[L2005]              assume DType[this] == Litecoin_SV;
[L2006]              assume !revert && gas >= 0;
[L2007]  CALL        call CorralChoice_Litecoin_SV(this);
[L1885]              havoc msgsender_MSG;
[L1886]              havoc msgvalue_MSG;
[L1887]              havoc choice;
[L1888]              havoc a_s23;
[L1889]              havoc b_s23;
[L1890]              havoc c_s23;
[L1891]              havoc a_s45;
[L1892]              havoc b_s45;
[L1893]              havoc c_s45;
[L1894]              havoc a_s73;
[L1895]              havoc b_s73;
[L1896]              havoc c_s73;
[L1897]              havoc a_s95;
[L1898]              havoc b_s95;
[L1899]              havoc c_s95;
[L1900]              havoc __ret_0_totalSupply;
[L1901]              havoc tokenOwner_s340;
[L1902]              havoc balance_s340;
[L1903]              havoc tokenOwner_s486;
[L1904]              havoc spender_s486;
[L1905]              havoc remaining_s486;
[L1906]              havoc to_s383;
[L1907]              havoc tokens_s383;
[L1908]              havoc success_s383;
[L1909]              havoc spender_s411;
[L1910]              havoc tokens_s411;
[L1911]              havoc success_s411;
[L1912]              havoc from_s470;
[L1913]              havoc to_s470;
[L1914]              havoc tokens_s470;
[L1915]              havoc success_s470;
[L1916]              havoc __ret_0_owner;
[L1917]              havoc __ret_0_newOwner;
[L1918]              havoc _newOwner_s217;
[L1919]              havoc __ret_0_businessName;
[L1920]              havoc __ret_0_businessCountry;
[L1921]              havoc __ret_0_symbol;
[L1922]              havoc __ret_0_name;
[L1923]              havoc __ret_0_decimals;
[L1924]              havoc __ret_0__totalSupply;
[L1925]              havoc spender_s529;
[L1926]              havoc tokens_s529;
[L1927]              havoc data_s529;
[L1928]              havoc success_s529;
[L1929]              havoc tokenAddress_s556;
[L1930]              havoc tokens_s556;
[L1931]              havoc success_s556;
[L1932]              havoc tmpNow;
[L1933]              havoc gas;
[L1934]              assume gas > 4000000 && gas <= 8000000;
[L1935]              tmpNow := now;
[L1936]              havoc now;
[L1937]              assume now > tmpNow;
[L1938]              assume msgsender_MSG != null;
[L1939]  COND FALSE  !(choice == 8)
[L1947]  COND FALSE  !(choice == 7)
[L1955]  COND FALSE  !(choice == 6)
[L1961]  COND FALSE  !(choice == 5)
[L1967]  COND FALSE  !(choice == 4)
[L1973]  COND FALSE  !(choice == 3)
[L1980]  COND FALSE  !(choice == 2)
[L1987]  COND TRUE   choice == 1
[L1988]              gas := gas - 21000;
[L1989]  COND TRUE   gas >= 0
[L1990]              assume tokens_s470 >= 0 && tokens_s470 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1991]              assume msgvalue_MSG == 0;
[L1992]  CALL        call success_s470 := transferFrom~address~address~uint256_Litecoin_SV(this, msgsender_MSG, msgvalue_MSG, from_s470, to_s470, tokens_s470);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != from_s470 && p1 != to_s470) && (p2 != from_s470 || p3 != msgsender_MSG)) && from_s470 != to_s470) && tokens_s470 <= balances_Litecoin_SV[this][from_s470]) && tokens_s470 <= allowed_Litecoin_SV[this][from_s470][msgsender_MSG]) && balances_Litecoin_SV[this][to_s470] + tokens_s470 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && tokens_s470 >= 0) && tokens_s470 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_Litecoin_SV[this][to_s470] >= 0) && balances_Litecoin_SV[this][to_s470] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_Litecoin_SV[this][from_s470] >= 0) && balances_Litecoin_SV[this][from_s470] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_Litecoin_SV[this][from_s470][msgsender_MSG] >= 0) && allowed_Litecoin_SV[this][from_s470][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_Litecoin_SV0 := true;
[L3]                 call_transferFrom_Litecoin_SV0 := false;
[L3]                 revert := revert_hold;
[L434]               havoc __exception;
[L435]               revert := false;
[L436]   COND FALSE  !(__exception)
[L461]   CALL        call success_s470 := transferFrom~address~address~uint256_Litecoin_SV__success(this, msgsender_MSG, msgvalue_MSG, from_s470, to_s470, tokens_s470);
[L1012]  COND TRUE   DType[this] == Litecoin_SV
[L1013]  CALL        call __var_4 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_Litecoin_SV[this][from_s470], tokens_s470);
[L850]   COND FALSE  !(!(b_s45 <= a_s45))
[L854]               c_s45 := (a_s45 - b_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1013]  RET         call __var_4 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_Litecoin_SV[this][from_s470], tokens_s470);
[L1014]  COND FALSE  !(revert)
[L1020]              sum_balances0[this] := sum_balances0[this] - balances_Litecoin_SV[this][from_s470];
[L1021]              balances_Litecoin_SV[this][from_s470] := __var_4;
[L1022]              sum_balances0[this] := sum_balances0[this] + balances_Litecoin_SV[this][from_s470];
[L1023]  COND TRUE   DType[this] == Litecoin_SV
[L1024]  CALL        call __var_5 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, allowed_Litecoin_SV[this][from_s470][msgsender_MSG], tokens_s470);
[L850]   COND FALSE  !(!(b_s45 <= a_s45))
[L854]               c_s45 := (a_s45 - b_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1024]  RET         call __var_5 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, allowed_Litecoin_SV[this][from_s470][msgsender_MSG], tokens_s470);
[L1025]  COND FALSE  !(revert)
[L1031]              sum_allowed1[from_s470] := sum_allowed1[from_s470] - allowed_Litecoin_SV[this][from_s470][msgsender_MSG];
[L1032]              allowed_Litecoin_SV[this][from_s470][msgsender_MSG] := __var_5;
[L1033]              sum_allowed1[from_s470] := sum_allowed1[from_s470] + allowed_Litecoin_SV[this][from_s470][msgsender_MSG];
[L1034]  COND TRUE   DType[this] == Litecoin_SV
[L1035]  CALL        call __var_6 := safeAdd~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_Litecoin_SV[this][to_s470], tokens_s470);
[L832]               c_s23 := (a_s23 + b_s23) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L833]   COND FALSE  !(!(c_s23 >= a_s23))
[L1035]  RET         call __var_6 := safeAdd~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_Litecoin_SV[this][to_s470], tokens_s470);
[L1036]  COND FALSE  !(revert)
[L1042]              sum_balances0[this] := sum_balances0[this] - balances_Litecoin_SV[this][to_s470];
[L1043]              balances_Litecoin_SV[this][to_s470] := __var_6;
[L1044]              sum_balances0[this] := sum_balances0[this] + balances_Litecoin_SV[this][to_s470];
[L1045]              assert { :EventEmitted "Transfer_Litecoin_SV" } true;
[L1046]              success_s470 := true;
[L461]   RET         call success_s470 := transferFrom~address~address~uint256_Litecoin_SV__success(this, msgsender_MSG, msgvalue_MSG, from_s470, to_s470, tokens_s470);
[L462]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((((((((success_s470 == true && balances_Litecoin_SV[this][from_s470] == old(balances_Litecoin_SV[this][from_s470]) - tokens_s470) && balances_Litecoin_SV[this][to_s470] == old(balances_Litecoin_SV[this][to_s470]) + tokens_s470) && allowed_Litecoin_SV[this][from_s470][msgsender_MSG] == old(allowed_Litecoin_SV[this][from_s470][msgsender_MSG]) - tokens_s470) && _totalSupply_Litecoin_SV[this] == old(_totalSupply_Litecoin_SV[this])) && balances_Litecoin_SV[this][p1] == old(balances_Litecoin_SV[this][p1])) && allowed_Litecoin_SV[this][p2][p3] == old(allowed_Litecoin_SV[this][p2][p3])) && businessName_Litecoin_SV[this] == old(businessName_Litecoin_SV[this])) && businessCountry_Litecoin_SV[this] == old(businessCountry_Litecoin_SV[this])) && symbol_Litecoin_SV[this] == old(symbol_Litecoin_SV[this])) && name_Litecoin_SV[this] == old(name_Litecoin_SV[this])) && decimals_Litecoin_SV[this] == old(decimals_Litecoin_SV[this])) && owner_Owned[this] == old(owner_Owned[this])) && newOwner_Owned[this] == old(newOwner_Owned[this]));
[L3]                 revert := revert_hold;
[L1992]  RET         call success_s470 := transferFrom~address~address~uint256_Litecoin_SV(this, msgsender_MSG, msgvalue_MSG, from_s470, to_s470, tokens_s470);
[L2007]  RET         call CorralChoice_Litecoin_SV(this);

Loop:
[L2007]        assume true;

[2020-11-24 15:04:32,532 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 15:04:32,532 INFO  L82        PathProgramCache]: Analyzing trace with hash -953505093, now seen corresponding path program 1 times
[2020-11-24 15:04:32,533 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 15:04:32,636 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 15:04:33,282 INFO  L134       CoverageAnalysis]: Checked inductivity of 4 backedges. 0 proven. 3 refuted. 0 times theorem prover too weak. 1 trivial. 0 not checked.
[2020-11-24 15:04:33,283 INFO  L312   seRefinementStrategy]: Constructing automaton from 0 perfect and 1 imperfect interpolant sequences.
[2020-11-24 15:04:33,283 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [] imperfect sequences [19] total 19
[2020-11-24 15:04:33,283 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 15:04:33,284 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 19 interpolants.
[2020-11-24 15:04:33,284 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=42, Invalid=300, Unknown=0, NotChecked=0, Total=342
[2020-11-24 15:04:33,284 INFO  L87              Difference]: Start difference. First operand 219 states and 224 transitions. cyclomatic complexity: 6 Second operand 19 states.
[2020-11-24 15:04:33,778 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 15:04:33,778 INFO  L93              Difference]: Finished difference Result 218 states and 222 transitions.
[2020-11-24 15:04:33,778 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 17 states. 
[2020-11-24 15:04:33,778 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 218 states and 222 transitions.
[2020-11-24 15:04:33,780 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 15:04:33,781 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 218 states to 175 states and 178 transitions.
[2020-11-24 15:04:33,781 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 134
[2020-11-24 15:04:33,781 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 134
[2020-11-24 15:04:33,781 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 175 states and 178 transitions.
[2020-11-24 15:04:33,782 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 15:04:33,782 INFO  L728         BuchiCegarLoop]: Abstraction has 175 states and 178 transitions.
[2020-11-24 15:04:33,782 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 175 states and 178 transitions.
[2020-11-24 15:04:33,784 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 175 to 175.
[2020-11-24 15:04:33,785 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 175 states.
[2020-11-24 15:04:33,785 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 175 states to 175 states and 178 transitions.
[2020-11-24 15:04:33,785 INFO  L751         BuchiCegarLoop]: Abstraction has 175 states and 178 transitions.
[2020-11-24 15:04:33,785 INFO  L631         BuchiCegarLoop]: Abstraction has 175 states and 178 transitions.
[2020-11-24 15:04:33,785 INFO  L445         BuchiCegarLoop]: ======== Iteration 6============
[2020-11-24 15:04:33,786 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 175 states and 178 transitions.
[2020-11-24 15:04:33,786 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 15:04:33,786 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 15:04:33,786 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 15:04:33,788 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 15:04:33,788 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L3]                 success_transferFrom_Litecoin_SV0 := false;
[L3]                 call_transferFrom_Litecoin_SV0 := false;
[L3]     CALL        call main();
[L3]                 havoc p3;
[L3]                 havoc p2;
[L3]                 havoc p1;
[L2002]              assume null == 0;
[L2003]  CALL        call this := FreshRefGenerator__success();
[L815]               havoc newRef;
[L816]               assume Alloc[newRef] == false;
[L817]               Alloc[newRef] := true;
[L818]               assume newRef != null;
[L2003]  RET         call this := FreshRefGenerator__success();
[L2004]              assume now >= 0;
[L2005]              assume DType[this] == Litecoin_SV;
[L2006]              assume !revert && gas >= 0;
[L2007]  CALL        call CorralChoice_Litecoin_SV(this);
[L1885]              havoc msgsender_MSG;
[L1886]              havoc msgvalue_MSG;
[L1887]              havoc choice;
[L1888]              havoc a_s23;
[L1889]              havoc b_s23;
[L1890]              havoc c_s23;
[L1891]              havoc a_s45;
[L1892]              havoc b_s45;
[L1893]              havoc c_s45;
[L1894]              havoc a_s73;
[L1895]              havoc b_s73;
[L1896]              havoc c_s73;
[L1897]              havoc a_s95;
[L1898]              havoc b_s95;
[L1899]              havoc c_s95;
[L1900]              havoc __ret_0_totalSupply;
[L1901]              havoc tokenOwner_s340;
[L1902]              havoc balance_s340;
[L1903]              havoc tokenOwner_s486;
[L1904]              havoc spender_s486;
[L1905]              havoc remaining_s486;
[L1906]              havoc to_s383;
[L1907]              havoc tokens_s383;
[L1908]              havoc success_s383;
[L1909]              havoc spender_s411;
[L1910]              havoc tokens_s411;
[L1911]              havoc success_s411;
[L1912]              havoc from_s470;
[L1913]              havoc to_s470;
[L1914]              havoc tokens_s470;
[L1915]              havoc success_s470;
[L1916]              havoc __ret_0_owner;
[L1917]              havoc __ret_0_newOwner;
[L1918]              havoc _newOwner_s217;
[L1919]              havoc __ret_0_businessName;
[L1920]              havoc __ret_0_businessCountry;
[L1921]              havoc __ret_0_symbol;
[L1922]              havoc __ret_0_name;
[L1923]              havoc __ret_0_decimals;
[L1924]              havoc __ret_0__totalSupply;
[L1925]              havoc spender_s529;
[L1926]              havoc tokens_s529;
[L1927]              havoc data_s529;
[L1928]              havoc success_s529;
[L1929]              havoc tokenAddress_s556;
[L1930]              havoc tokens_s556;
[L1931]              havoc success_s556;
[L1932]              havoc tmpNow;
[L1933]              havoc gas;
[L1934]              assume gas > 4000000 && gas <= 8000000;
[L1935]              tmpNow := now;
[L1936]              havoc now;
[L1937]              assume now > tmpNow;
[L1938]              assume msgsender_MSG != null;
[L1939]  COND FALSE  !(choice == 8)
[L1947]  COND FALSE  !(choice == 7)
[L1955]  COND FALSE  !(choice == 6)
[L1961]  COND FALSE  !(choice == 5)
[L1967]  COND FALSE  !(choice == 4)
[L1973]  COND FALSE  !(choice == 3)
[L1980]  COND FALSE  !(choice == 2)
[L1987]  COND TRUE   choice == 1
[L1988]              gas := gas - 21000;
[L1989]  COND TRUE   gas >= 0
[L1990]              assume tokens_s470 >= 0 && tokens_s470 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1991]              assume msgvalue_MSG == 0;
[L1992]  CALL        call success_s470 := transferFrom~address~address~uint256_Litecoin_SV(this, msgsender_MSG, msgvalue_MSG, from_s470, to_s470, tokens_s470);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != from_s470 && p1 != to_s470) && (p2 != from_s470 || p3 != msgsender_MSG)) && from_s470 != to_s470) && tokens_s470 <= balances_Litecoin_SV[this][from_s470]) && tokens_s470 <= allowed_Litecoin_SV[this][from_s470][msgsender_MSG]) && balances_Litecoin_SV[this][to_s470] + tokens_s470 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && tokens_s470 >= 0) && tokens_s470 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_Litecoin_SV[this][to_s470] >= 0) && balances_Litecoin_SV[this][to_s470] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_Litecoin_SV[this][from_s470] >= 0) && balances_Litecoin_SV[this][from_s470] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_Litecoin_SV[this][from_s470][msgsender_MSG] >= 0) && allowed_Litecoin_SV[this][from_s470][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_Litecoin_SV0 := true;
[L3]                 call_transferFrom_Litecoin_SV0 := false;
[L3]                 revert := revert_hold;
[L434]               havoc __exception;
[L435]               revert := false;
[L436]   COND TRUE   __exception
[L437]               __tmp__Balance := Balance;
[L438]               __tmp__DType := DType;
[L439]               __tmp__Alloc := Alloc;
[L440]               __tmp__balance_ADDR := balance_ADDR;
[L441]               __tmp__M_Ref_int := M_Ref_int;
[L442]               __tmp__sum_balances0 := sum_balances0;
[L443]               __tmp__alloc_allowed_Litecoin_SV_lvl0 := alloc_allowed_Litecoin_SV_lvl0;
[L444]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L445]               __tmp__sum_allowed1 := sum_allowed1;
[L446]               __tmp__Length := Length;
[L447]               __tmp__now := now;
[L448]               __tmp__owner_Owned := owner_Owned;
[L449]               __tmp__newOwner_Owned := newOwner_Owned;
[L450]               __tmp__businessName_Litecoin_SV := businessName_Litecoin_SV;
[L451]               __tmp__businessCountry_Litecoin_SV := businessCountry_Litecoin_SV;
[L452]               __tmp__symbol_Litecoin_SV := symbol_Litecoin_SV;
[L453]               __tmp__name_Litecoin_SV := name_Litecoin_SV;
[L454]               __tmp__decimals_Litecoin_SV := decimals_Litecoin_SV;
[L455]               __tmp___totalSupply_Litecoin_SV := _totalSupply_Litecoin_SV;
[L456]               __tmp__balances_Litecoin_SV := balances_Litecoin_SV;
[L457]               __tmp__allowed_Litecoin_SV := allowed_Litecoin_SV;
[L458]   CALL        call success_s470 := transferFrom~address~address~uint256_Litecoin_SV__fail(this, msgsender_MSG, msgvalue_MSG, from_s470, to_s470, tokens_s470);
[L970]   COND TRUE   __tmp__DType[this] == Litecoin_SV
[L971]   CALL        call __var_4 := safeSub~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balances_Litecoin_SV[this][from_s470], tokens_s470);
[L841]   COND FALSE  !(!(b_s45 <= a_s45))
[L845]               c_s45 := (a_s45 - b_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L971]   RET         call __var_4 := safeSub~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balances_Litecoin_SV[this][from_s470], tokens_s470);
[L972]   COND FALSE  !(revert)
[L978]               __tmp__sum_balances0[this] := __tmp__sum_balances0[this] - __tmp__balances_Litecoin_SV[this][from_s470];
[L979]               __tmp__balances_Litecoin_SV[this][from_s470] := __var_4;
[L980]               __tmp__sum_balances0[this] := __tmp__sum_balances0[this] + __tmp__balances_Litecoin_SV[this][from_s470];
[L981]   COND TRUE   __tmp__DType[this] == Litecoin_SV
[L982]   CALL        call __var_5 := safeSub~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__allowed_Litecoin_SV[this][from_s470][msgsender_MSG], tokens_s470);
[L841]   COND TRUE   !(b_s45 <= a_s45)
[L842]               revert := true;
[L982]   RET         call __var_5 := safeSub~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__allowed_Litecoin_SV[this][from_s470][msgsender_MSG], tokens_s470);
[L983]   COND TRUE   revert
[L458]   RET         call success_s470 := transferFrom~address~address~uint256_Litecoin_SV__fail(this, msgsender_MSG, msgvalue_MSG, from_s470, to_s470, tokens_s470);
[L459]               assume revert || gas < 0;
[L1992]  RET         call success_s470 := transferFrom~address~address~uint256_Litecoin_SV(this, msgsender_MSG, msgvalue_MSG, from_s470, to_s470, tokens_s470);
[L2007]  RET         call CorralChoice_Litecoin_SV(this);

Loop:
[L2007]        assume true;

[2020-11-24 15:04:33,790 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 15:04:33,790 INFO  L82        PathProgramCache]: Analyzing trace with hash -366472511, now seen corresponding path program 1 times
[2020-11-24 15:04:33,791 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 15:04:33,798 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 15:04:33,833 INFO  L134       CoverageAnalysis]: Checked inductivity of 3 backedges. 2 proven. 0 refuted. 0 times theorem prover too weak. 1 trivial. 0 not checked.
[2020-11-24 15:04:33,833 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 15:04:33,833 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [7] imperfect sequences [] total 7
[2020-11-24 15:04:33,833 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 15:04:33,834 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 7 interpolants.
[2020-11-24 15:04:33,834 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=11, Invalid=31, Unknown=0, NotChecked=0, Total=42
[2020-11-24 15:04:33,834 INFO  L87              Difference]: Start difference. First operand 175 states and 178 transitions. cyclomatic complexity: 4 Second operand 7 states.
[2020-11-24 15:04:33,871 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 15:04:33,871 INFO  L93              Difference]: Finished difference Result 177 states and 179 transitions.
[2020-11-24 15:04:33,871 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 8 states. 
[2020-11-24 15:04:33,871 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 177 states and 179 transitions.
[2020-11-24 15:04:33,872 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 15:04:33,873 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 177 states to 170 states and 172 transitions.
[2020-11-24 15:04:33,873 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 129
[2020-11-24 15:04:33,873 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 129
[2020-11-24 15:04:33,873 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 170 states and 172 transitions.
[2020-11-24 15:04:33,873 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 15:04:33,873 INFO  L728         BuchiCegarLoop]: Abstraction has 170 states and 172 transitions.
[2020-11-24 15:04:33,873 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 170 states and 172 transitions.
[2020-11-24 15:04:33,875 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 170 to 170.
[2020-11-24 15:04:33,875 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 170 states.
[2020-11-24 15:04:33,875 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 170 states to 170 states and 172 transitions.
[2020-11-24 15:04:33,875 INFO  L751         BuchiCegarLoop]: Abstraction has 170 states and 172 transitions.
[2020-11-24 15:04:33,875 INFO  L631         BuchiCegarLoop]: Abstraction has 170 states and 172 transitions.
[2020-11-24 15:04:33,875 INFO  L445         BuchiCegarLoop]: ======== Iteration 7============
[2020-11-24 15:04:33,875 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 170 states and 172 transitions.
[2020-11-24 15:04:33,876 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 15:04:33,876 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 15:04:33,876 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 15:04:33,876 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 15:04:33,877 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L3]                 success_transferFrom_Litecoin_SV0 := false;
[L3]                 call_transferFrom_Litecoin_SV0 := false;
[L3]     CALL        call main();
[L3]                 havoc p3;
[L3]                 havoc p2;
[L3]                 havoc p1;
[L2002]              assume null == 0;
[L2003]  CALL        call this := FreshRefGenerator__success();
[L815]               havoc newRef;
[L816]               assume Alloc[newRef] == false;
[L817]               Alloc[newRef] := true;
[L818]               assume newRef != null;
[L2003]  RET         call this := FreshRefGenerator__success();
[L2004]              assume now >= 0;
[L2005]              assume DType[this] == Litecoin_SV;
[L2006]              assume !revert && gas >= 0;
[L2007]  CALL        call CorralChoice_Litecoin_SV(this);
[L1885]              havoc msgsender_MSG;
[L1886]              havoc msgvalue_MSG;
[L1887]              havoc choice;
[L1888]              havoc a_s23;
[L1889]              havoc b_s23;
[L1890]              havoc c_s23;
[L1891]              havoc a_s45;
[L1892]              havoc b_s45;
[L1893]              havoc c_s45;
[L1894]              havoc a_s73;
[L1895]              havoc b_s73;
[L1896]              havoc c_s73;
[L1897]              havoc a_s95;
[L1898]              havoc b_s95;
[L1899]              havoc c_s95;
[L1900]              havoc __ret_0_totalSupply;
[L1901]              havoc tokenOwner_s340;
[L1902]              havoc balance_s340;
[L1903]              havoc tokenOwner_s486;
[L1904]              havoc spender_s486;
[L1905]              havoc remaining_s486;
[L1906]              havoc to_s383;
[L1907]              havoc tokens_s383;
[L1908]              havoc success_s383;
[L1909]              havoc spender_s411;
[L1910]              havoc tokens_s411;
[L1911]              havoc success_s411;
[L1912]              havoc from_s470;
[L1913]              havoc to_s470;
[L1914]              havoc tokens_s470;
[L1915]              havoc success_s470;
[L1916]              havoc __ret_0_owner;
[L1917]              havoc __ret_0_newOwner;
[L1918]              havoc _newOwner_s217;
[L1919]              havoc __ret_0_businessName;
[L1920]              havoc __ret_0_businessCountry;
[L1921]              havoc __ret_0_symbol;
[L1922]              havoc __ret_0_name;
[L1923]              havoc __ret_0_decimals;
[L1924]              havoc __ret_0__totalSupply;
[L1925]              havoc spender_s529;
[L1926]              havoc tokens_s529;
[L1927]              havoc data_s529;
[L1928]              havoc success_s529;
[L1929]              havoc tokenAddress_s556;
[L1930]              havoc tokens_s556;
[L1931]              havoc success_s556;
[L1932]              havoc tmpNow;
[L1933]              havoc gas;
[L1934]              assume gas > 4000000 && gas <= 8000000;
[L1935]              tmpNow := now;
[L1936]              havoc now;
[L1937]              assume now > tmpNow;
[L1938]              assume msgsender_MSG != null;
[L1939]  COND FALSE  !(choice == 8)
[L1947]  COND FALSE  !(choice == 7)
[L1955]  COND FALSE  !(choice == 6)
[L1961]  COND FALSE  !(choice == 5)
[L1967]  COND FALSE  !(choice == 4)
[L1973]  COND FALSE  !(choice == 3)
[L1980]  COND FALSE  !(choice == 2)
[L1987]  COND TRUE   choice == 1
[L1988]              gas := gas - 21000;
[L1989]  COND TRUE   gas >= 0
[L1990]              assume tokens_s470 >= 0 && tokens_s470 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1991]              assume msgvalue_MSG == 0;
[L1992]  CALL        call success_s470 := transferFrom~address~address~uint256_Litecoin_SV(this, msgsender_MSG, msgvalue_MSG, from_s470, to_s470, tokens_s470);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != from_s470 && p1 != to_s470) && (p2 != from_s470 || p3 != msgsender_MSG)) && from_s470 != to_s470) && tokens_s470 <= balances_Litecoin_SV[this][from_s470]) && tokens_s470 <= allowed_Litecoin_SV[this][from_s470][msgsender_MSG]) && balances_Litecoin_SV[this][to_s470] + tokens_s470 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && tokens_s470 >= 0) && tokens_s470 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_Litecoin_SV[this][to_s470] >= 0) && balances_Litecoin_SV[this][to_s470] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_Litecoin_SV[this][from_s470] >= 0) && balances_Litecoin_SV[this][from_s470] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_Litecoin_SV[this][from_s470][msgsender_MSG] >= 0) && allowed_Litecoin_SV[this][from_s470][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_Litecoin_SV0 := true;
[L3]                 call_transferFrom_Litecoin_SV0 := false;
[L3]                 revert := revert_hold;
[L434]               havoc __exception;
[L435]               revert := false;
[L436]   COND TRUE   __exception
[L437]               __tmp__Balance := Balance;
[L438]               __tmp__DType := DType;
[L439]               __tmp__Alloc := Alloc;
[L440]               __tmp__balance_ADDR := balance_ADDR;
[L441]               __tmp__M_Ref_int := M_Ref_int;
[L442]               __tmp__sum_balances0 := sum_balances0;
[L443]               __tmp__alloc_allowed_Litecoin_SV_lvl0 := alloc_allowed_Litecoin_SV_lvl0;
[L444]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L445]               __tmp__sum_allowed1 := sum_allowed1;
[L446]               __tmp__Length := Length;
[L447]               __tmp__now := now;
[L448]               __tmp__owner_Owned := owner_Owned;
[L449]               __tmp__newOwner_Owned := newOwner_Owned;
[L450]               __tmp__businessName_Litecoin_SV := businessName_Litecoin_SV;
[L451]               __tmp__businessCountry_Litecoin_SV := businessCountry_Litecoin_SV;
[L452]               __tmp__symbol_Litecoin_SV := symbol_Litecoin_SV;
[L453]               __tmp__name_Litecoin_SV := name_Litecoin_SV;
[L454]               __tmp__decimals_Litecoin_SV := decimals_Litecoin_SV;
[L455]               __tmp___totalSupply_Litecoin_SV := _totalSupply_Litecoin_SV;
[L456]               __tmp__balances_Litecoin_SV := balances_Litecoin_SV;
[L457]               __tmp__allowed_Litecoin_SV := allowed_Litecoin_SV;
[L458]   CALL        call success_s470 := transferFrom~address~address~uint256_Litecoin_SV__fail(this, msgsender_MSG, msgvalue_MSG, from_s470, to_s470, tokens_s470);
[L970]   COND TRUE   __tmp__DType[this] == Litecoin_SV
[L971]   CALL        call __var_4 := safeSub~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balances_Litecoin_SV[this][from_s470], tokens_s470);
[L841]   COND FALSE  !(!(b_s45 <= a_s45))
[L845]               c_s45 := (a_s45 - b_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L971]   RET         call __var_4 := safeSub~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balances_Litecoin_SV[this][from_s470], tokens_s470);
[L972]   COND FALSE  !(revert)
[L978]               __tmp__sum_balances0[this] := __tmp__sum_balances0[this] - __tmp__balances_Litecoin_SV[this][from_s470];
[L979]               __tmp__balances_Litecoin_SV[this][from_s470] := __var_4;
[L980]               __tmp__sum_balances0[this] := __tmp__sum_balances0[this] + __tmp__balances_Litecoin_SV[this][from_s470];
[L981]   COND TRUE   __tmp__DType[this] == Litecoin_SV
[L982]   CALL        call __var_5 := safeSub~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__allowed_Litecoin_SV[this][from_s470][msgsender_MSG], tokens_s470);
[L841]   COND FALSE  !(!(b_s45 <= a_s45))
[L845]               c_s45 := (a_s45 - b_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L982]   RET         call __var_5 := safeSub~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__allowed_Litecoin_SV[this][from_s470][msgsender_MSG], tokens_s470);
[L983]   COND FALSE  !(revert)
[L989]               __tmp__sum_allowed1[from_s470] := __tmp__sum_allowed1[from_s470] - __tmp__allowed_Litecoin_SV[this][from_s470][msgsender_MSG];
[L990]               __tmp__allowed_Litecoin_SV[this][from_s470][msgsender_MSG] := __var_5;
[L991]               __tmp__sum_allowed1[from_s470] := __tmp__sum_allowed1[from_s470] + __tmp__allowed_Litecoin_SV[this][from_s470][msgsender_MSG];
[L992]   COND TRUE   __tmp__DType[this] == Litecoin_SV
[L993]   CALL        call __var_6 := safeAdd~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balances_Litecoin_SV[this][to_s470], tokens_s470);
[L823]               c_s23 := (a_s23 + b_s23) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L824]   COND TRUE   !(c_s23 >= a_s23)
[L825]               revert := true;
[L993]   RET         call __var_6 := safeAdd~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balances_Litecoin_SV[this][to_s470], tokens_s470);
[L994]   COND TRUE   revert
[L458]   RET         call success_s470 := transferFrom~address~address~uint256_Litecoin_SV__fail(this, msgsender_MSG, msgvalue_MSG, from_s470, to_s470, tokens_s470);
[L459]               assume revert || gas < 0;
[L1992]  RET         call success_s470 := transferFrom~address~address~uint256_Litecoin_SV(this, msgsender_MSG, msgvalue_MSG, from_s470, to_s470, tokens_s470);
[L2007]  RET         call CorralChoice_Litecoin_SV(this);

Loop:
[L2007]        assume true;

[2020-11-24 15:04:33,878 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 15:04:33,878 INFO  L82        PathProgramCache]: Analyzing trace with hash -7379782, now seen corresponding path program 1 times
[2020-11-24 15:04:33,879 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 15:04:33,884 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 15:04:33,922 INFO  L134       CoverageAnalysis]: Checked inductivity of 4 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 4 trivial. 0 not checked.
[2020-11-24 15:04:33,923 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 15:04:33,923 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [9] imperfect sequences [] total 9
[2020-11-24 15:04:33,923 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 15:04:33,923 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 9 interpolants.
[2020-11-24 15:04:33,923 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=16, Invalid=56, Unknown=0, NotChecked=0, Total=72
[2020-11-24 15:04:33,923 INFO  L87              Difference]: Start difference. First operand 170 states and 172 transitions. cyclomatic complexity: 3 Second operand 9 states.
[2020-11-24 15:04:33,964 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 15:04:33,965 INFO  L93              Difference]: Finished difference Result 172 states and 173 transitions.
[2020-11-24 15:04:33,965 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 10 states. 
[2020-11-24 15:04:33,965 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 172 states and 173 transitions.
[2020-11-24 15:04:33,965 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 15:04:33,966 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 172 states to 165 states and 166 transitions.
[2020-11-24 15:04:33,966 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 124
[2020-11-24 15:04:33,966 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 124
[2020-11-24 15:04:33,966 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 165 states and 166 transitions.
[2020-11-24 15:04:33,967 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 15:04:33,967 INFO  L728         BuchiCegarLoop]: Abstraction has 165 states and 166 transitions.
[2020-11-24 15:04:33,967 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 165 states and 166 transitions.
[2020-11-24 15:04:33,968 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 165 to 165.
[2020-11-24 15:04:33,968 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 165 states.
[2020-11-24 15:04:33,968 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 165 states to 165 states and 166 transitions.
[2020-11-24 15:04:33,968 INFO  L751         BuchiCegarLoop]: Abstraction has 165 states and 166 transitions.
[2020-11-24 15:04:33,968 INFO  L631         BuchiCegarLoop]: Abstraction has 165 states and 166 transitions.
[2020-11-24 15:04:33,968 INFO  L445         BuchiCegarLoop]: ======== Iteration 8============
[2020-11-24 15:04:33,969 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 165 states and 166 transitions.
[2020-11-24 15:04:33,969 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 15:04:33,969 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 15:04:33,969 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 15:04:33,970 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 15:04:33,970 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L3]                 success_transferFrom_Litecoin_SV0 := false;
[L3]                 call_transferFrom_Litecoin_SV0 := false;
[L3]     CALL        call main();
[L3]                 havoc p3;
[L3]                 havoc p2;
[L3]                 havoc p1;
[L2002]              assume null == 0;
[L2003]  CALL        call this := FreshRefGenerator__success();
[L815]               havoc newRef;
[L816]               assume Alloc[newRef] == false;
[L817]               Alloc[newRef] := true;
[L818]               assume newRef != null;
[L2003]  RET         call this := FreshRefGenerator__success();
[L2004]              assume now >= 0;
[L2005]              assume DType[this] == Litecoin_SV;
[L2006]              assume !revert && gas >= 0;
[L2007]  CALL        call CorralChoice_Litecoin_SV(this);
[L1885]              havoc msgsender_MSG;
[L1886]              havoc msgvalue_MSG;
[L1887]              havoc choice;
[L1888]              havoc a_s23;
[L1889]              havoc b_s23;
[L1890]              havoc c_s23;
[L1891]              havoc a_s45;
[L1892]              havoc b_s45;
[L1893]              havoc c_s45;
[L1894]              havoc a_s73;
[L1895]              havoc b_s73;
[L1896]              havoc c_s73;
[L1897]              havoc a_s95;
[L1898]              havoc b_s95;
[L1899]              havoc c_s95;
[L1900]              havoc __ret_0_totalSupply;
[L1901]              havoc tokenOwner_s340;
[L1902]              havoc balance_s340;
[L1903]              havoc tokenOwner_s486;
[L1904]              havoc spender_s486;
[L1905]              havoc remaining_s486;
[L1906]              havoc to_s383;
[L1907]              havoc tokens_s383;
[L1908]              havoc success_s383;
[L1909]              havoc spender_s411;
[L1910]              havoc tokens_s411;
[L1911]              havoc success_s411;
[L1912]              havoc from_s470;
[L1913]              havoc to_s470;
[L1914]              havoc tokens_s470;
[L1915]              havoc success_s470;
[L1916]              havoc __ret_0_owner;
[L1917]              havoc __ret_0_newOwner;
[L1918]              havoc _newOwner_s217;
[L1919]              havoc __ret_0_businessName;
[L1920]              havoc __ret_0_businessCountry;
[L1921]              havoc __ret_0_symbol;
[L1922]              havoc __ret_0_name;
[L1923]              havoc __ret_0_decimals;
[L1924]              havoc __ret_0__totalSupply;
[L1925]              havoc spender_s529;
[L1926]              havoc tokens_s529;
[L1927]              havoc data_s529;
[L1928]              havoc success_s529;
[L1929]              havoc tokenAddress_s556;
[L1930]              havoc tokens_s556;
[L1931]              havoc success_s556;
[L1932]              havoc tmpNow;
[L1933]              havoc gas;
[L1934]              assume gas > 4000000 && gas <= 8000000;
[L1935]              tmpNow := now;
[L1936]              havoc now;
[L1937]              assume now > tmpNow;
[L1938]              assume msgsender_MSG != null;
[L1939]  COND FALSE  !(choice == 8)
[L1947]  COND FALSE  !(choice == 7)
[L1955]  COND FALSE  !(choice == 6)
[L1961]  COND FALSE  !(choice == 5)
[L1967]  COND FALSE  !(choice == 4)
[L1973]  COND FALSE  !(choice == 3)
[L1980]  COND FALSE  !(choice == 2)
[L1987]  COND TRUE   choice == 1
[L1988]              gas := gas - 21000;
[L1989]  COND TRUE   gas >= 0
[L1990]              assume tokens_s470 >= 0 && tokens_s470 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1991]              assume msgvalue_MSG == 0;
[L1992]  CALL        call success_s470 := transferFrom~address~address~uint256_Litecoin_SV(this, msgsender_MSG, msgvalue_MSG, from_s470, to_s470, tokens_s470);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != from_s470 && p1 != to_s470) && (p2 != from_s470 || p3 != msgsender_MSG)) && from_s470 != to_s470) && tokens_s470 <= balances_Litecoin_SV[this][from_s470]) && tokens_s470 <= allowed_Litecoin_SV[this][from_s470][msgsender_MSG]) && balances_Litecoin_SV[this][to_s470] + tokens_s470 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && tokens_s470 >= 0) && tokens_s470 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_Litecoin_SV[this][to_s470] >= 0) && balances_Litecoin_SV[this][to_s470] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_Litecoin_SV[this][from_s470] >= 0) && balances_Litecoin_SV[this][from_s470] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_Litecoin_SV[this][from_s470][msgsender_MSG] >= 0) && allowed_Litecoin_SV[this][from_s470][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_Litecoin_SV0 := true;
[L3]                 call_transferFrom_Litecoin_SV0 := false;
[L3]                 revert := revert_hold;
[L434]               havoc __exception;
[L435]               revert := false;
[L436]   COND TRUE   __exception
[L437]               __tmp__Balance := Balance;
[L438]               __tmp__DType := DType;
[L439]               __tmp__Alloc := Alloc;
[L440]               __tmp__balance_ADDR := balance_ADDR;
[L441]               __tmp__M_Ref_int := M_Ref_int;
[L442]               __tmp__sum_balances0 := sum_balances0;
[L443]               __tmp__alloc_allowed_Litecoin_SV_lvl0 := alloc_allowed_Litecoin_SV_lvl0;
[L444]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L445]               __tmp__sum_allowed1 := sum_allowed1;
[L446]               __tmp__Length := Length;
[L447]               __tmp__now := now;
[L448]               __tmp__owner_Owned := owner_Owned;
[L449]               __tmp__newOwner_Owned := newOwner_Owned;
[L450]               __tmp__businessName_Litecoin_SV := businessName_Litecoin_SV;
[L451]               __tmp__businessCountry_Litecoin_SV := businessCountry_Litecoin_SV;
[L452]               __tmp__symbol_Litecoin_SV := symbol_Litecoin_SV;
[L453]               __tmp__name_Litecoin_SV := name_Litecoin_SV;
[L454]               __tmp__decimals_Litecoin_SV := decimals_Litecoin_SV;
[L455]               __tmp___totalSupply_Litecoin_SV := _totalSupply_Litecoin_SV;
[L456]               __tmp__balances_Litecoin_SV := balances_Litecoin_SV;
[L457]               __tmp__allowed_Litecoin_SV := allowed_Litecoin_SV;
[L458]   CALL        call success_s470 := transferFrom~address~address~uint256_Litecoin_SV__fail(this, msgsender_MSG, msgvalue_MSG, from_s470, to_s470, tokens_s470);
[L970]   COND TRUE   __tmp__DType[this] == Litecoin_SV
[L971]   CALL        call __var_4 := safeSub~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balances_Litecoin_SV[this][from_s470], tokens_s470);
[L841]   COND FALSE  !(!(b_s45 <= a_s45))
[L845]               c_s45 := (a_s45 - b_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L971]   RET         call __var_4 := safeSub~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balances_Litecoin_SV[this][from_s470], tokens_s470);
[L972]   COND FALSE  !(revert)
[L978]               __tmp__sum_balances0[this] := __tmp__sum_balances0[this] - __tmp__balances_Litecoin_SV[this][from_s470];
[L979]               __tmp__balances_Litecoin_SV[this][from_s470] := __var_4;
[L980]               __tmp__sum_balances0[this] := __tmp__sum_balances0[this] + __tmp__balances_Litecoin_SV[this][from_s470];
[L981]   COND TRUE   __tmp__DType[this] == Litecoin_SV
[L982]   CALL        call __var_5 := safeSub~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__allowed_Litecoin_SV[this][from_s470][msgsender_MSG], tokens_s470);
[L841]   COND FALSE  !(!(b_s45 <= a_s45))
[L845]               c_s45 := (a_s45 - b_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L982]   RET         call __var_5 := safeSub~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__allowed_Litecoin_SV[this][from_s470][msgsender_MSG], tokens_s470);
[L983]   COND FALSE  !(revert)
[L989]               __tmp__sum_allowed1[from_s470] := __tmp__sum_allowed1[from_s470] - __tmp__allowed_Litecoin_SV[this][from_s470][msgsender_MSG];
[L990]               __tmp__allowed_Litecoin_SV[this][from_s470][msgsender_MSG] := __var_5;
[L991]               __tmp__sum_allowed1[from_s470] := __tmp__sum_allowed1[from_s470] + __tmp__allowed_Litecoin_SV[this][from_s470][msgsender_MSG];
[L992]   COND TRUE   __tmp__DType[this] == Litecoin_SV
[L993]   CALL        call __var_6 := safeAdd~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balances_Litecoin_SV[this][to_s470], tokens_s470);
[L823]               c_s23 := (a_s23 + b_s23) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L824]   COND FALSE  !(!(c_s23 >= a_s23))
[L993]   RET         call __var_6 := safeAdd~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balances_Litecoin_SV[this][to_s470], tokens_s470);
[L994]   COND FALSE  !(revert)
[L1000]              __tmp__sum_balances0[this] := __tmp__sum_balances0[this] - __tmp__balances_Litecoin_SV[this][to_s470];
[L1001]              __tmp__balances_Litecoin_SV[this][to_s470] := __var_6;
[L1002]              __tmp__sum_balances0[this] := __tmp__sum_balances0[this] + __tmp__balances_Litecoin_SV[this][to_s470];
[L1003]              success_s470 := true;
[L458]   RET         call success_s470 := transferFrom~address~address~uint256_Litecoin_SV__fail(this, msgsender_MSG, msgvalue_MSG, from_s470, to_s470, tokens_s470);
[L459]               assume revert || gas < 0;
[L1992]  RET         call success_s470 := transferFrom~address~address~uint256_Litecoin_SV(this, msgsender_MSG, msgvalue_MSG, from_s470, to_s470, tokens_s470);
[L2007]  RET         call CorralChoice_Litecoin_SV(this);

Loop:
[L2007]        assume true;

[2020-11-24 15:04:33,971 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 15:04:33,971 INFO  L82        PathProgramCache]: Analyzing trace with hash 1291610000, now seen corresponding path program 1 times
[2020-11-24 15:04:33,972 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 15:04:33,977 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 15:04:33,991 INFO  L134       CoverageAnalysis]: Checked inductivity of 4 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 4 trivial. 0 not checked.
[2020-11-24 15:04:33,991 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 15:04:33,991 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [5] imperfect sequences [] total 5
[2020-11-24 15:04:33,992 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 15:04:33,992 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 5 interpolants.
[2020-11-24 15:04:33,992 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=7, Invalid=13, Unknown=0, NotChecked=0, Total=20
[2020-11-24 15:04:33,992 INFO  L87              Difference]: Start difference. First operand 165 states and 166 transitions. cyclomatic complexity: 2 Second operand 5 states.
[2020-11-24 15:04:34,000 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 15:04:34,000 INFO  L93              Difference]: Finished difference Result 158 states and 158 transitions.
[2020-11-24 15:04:34,000 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 5 states. 
[2020-11-24 15:04:34,000 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 158 states and 158 transitions.
[2020-11-24 15:04:34,001 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-24 15:04:34,001 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 158 states to 0 states and 0 transitions.
[2020-11-24 15:04:34,001 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 0
[2020-11-24 15:04:34,001 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 0
[2020-11-24 15:04:34,001 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 0 states and 0 transitions.
[2020-11-24 15:04:34,001 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 15:04:34,001 INFO  L728         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-24 15:04:34,001 INFO  L751         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-24 15:04:34,001 INFO  L631         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-24 15:04:34,002 INFO  L445         BuchiCegarLoop]: ======== Iteration 9============
[2020-11-24 15:04:34,002 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 0 states and 0 transitions.
[2020-11-24 15:04:34,002 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-24 15:04:34,002 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is true
[2020-11-24 15:04:34,006 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 24.11 03:04:34 BasicIcfg
[2020-11-24 15:04:34,006 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-24 15:04:34,006 INFO  L168              Benchmark]: Toolchain (without parser) took 4023.37 ms. Allocated memory was 1.0 GB in the beginning and 1.3 GB in the end (delta: 287.8 MB). Free memory was 945.9 MB in the beginning and 851.5 MB in the end (delta: 94.5 MB). Peak memory consumption was 382.3 MB. Max. memory is 15.3 GB.
[2020-11-24 15:04:34,008 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.19 ms. Allocated memory is still 1.0 GB. Free memory is still 956.7 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-24 15:04:34,008 INFO  L168              Benchmark]: Boogie Preprocessor took 66.66 ms. Allocated memory is still 1.0 GB. Free memory was 945.9 MB in the beginning and 935.2 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
[2020-11-24 15:04:34,009 INFO  L168              Benchmark]: UtopiaSpecLang took 52.46 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 929.8 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-24 15:04:34,009 INFO  L168              Benchmark]: Boogie Printer took 9.41 ms. Allocated memory is still 1.0 GB. Free memory is still 929.8 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-24 15:04:34,009 INFO  L168              Benchmark]: RCFGBuilder took 539.30 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 876.1 MB in the end (delta: 53.7 MB). Peak memory consumption was 53.7 MB. Max. memory is 15.3 GB.
[2020-11-24 15:04:34,010 INFO  L168              Benchmark]: UtopiaLTL2Aut took 43.60 ms. Allocated memory is still 1.0 GB. Free memory was 876.1 MB in the beginning and 867.2 MB in the end (delta: 8.9 MB). Peak memory consumption was 8.9 MB. Max. memory is 15.3 GB.
[2020-11-24 15:04:34,010 INFO  L168              Benchmark]: BÃ¼chi Program Product took 952.46 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 54.0 MB). Free memory was 867.2 MB in the beginning and 926.8 MB in the end (delta: -59.6 MB). Peak memory consumption was 151.1 MB. Max. memory is 15.3 GB.
[2020-11-24 15:04:34,011 INFO  L168              Benchmark]: BlockEncodingV2 took 79.41 ms. Allocated memory is still 1.1 GB. Free memory was 926.8 MB in the beginning and 885.7 MB in the end (delta: 41.1 MB). Peak memory consumption was 41.1 MB. Max. memory is 15.3 GB.
[2020-11-24 15:04:34,011 INFO  L168              Benchmark]: BuchiAutomizer took 2276.63 ms. Allocated memory was 1.1 GB in the beginning and 1.3 GB in the end (delta: 233.8 MB). Free memory was 885.7 MB in the beginning and 851.5 MB in the end (delta: 34.2 MB). Peak memory consumption was 268.0 MB. Max. memory is 15.3 GB.
[2020-11-24 15:04:34,014 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    1638 locations, 2778 edges
  - StatisticsResult: Encoded RCFG
    1588 locations, 2648 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.19 ms. Allocated memory is still 1.0 GB. Free memory is still 956.7 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 66.66 ms. Allocated memory is still 1.0 GB. Free memory was 945.9 MB in the beginning and 935.2 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 52.46 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 929.8 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 9.41 ms. Allocated memory is still 1.0 GB. Free memory is still 929.8 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * RCFGBuilder took 539.30 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 876.1 MB in the end (delta: 53.7 MB). Peak memory consumption was 53.7 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 43.60 ms. Allocated memory is still 1.0 GB. Free memory was 876.1 MB in the beginning and 867.2 MB in the end (delta: 8.9 MB). Peak memory consumption was 8.9 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 952.46 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 54.0 MB). Free memory was 867.2 MB in the beginning and 926.8 MB in the end (delta: -59.6 MB). Peak memory consumption was 151.1 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 79.41 ms. Allocated memory is still 1.1 GB. Free memory was 926.8 MB in the beginning and 885.7 MB in the end (delta: 41.1 MB). Peak memory consumption was 41.1 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 2276.63 ms. Allocated memory was 1.1 GB in the beginning and 1.3 GB in the end (delta: 233.8 MB). Free memory was 885.7 MB in the beginning and 851.5 MB in the end (delta: 34.2 MB). Peak memory consumption was 268.0 MB. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    708 locations, 863 edges
  - StatisticsResult: BuchiProgram size
    1638 locations, 2778 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 8 terminating modules (8 trivial, 0 deterministic, 0 nondeterministic). 8 modules have a trivial ranking function, the largest among these consists of 19 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 2.2s and 9 iterations.  TraceHistogramMax:2. Analysis of lassos took 1.1s. Construction of modules took 0.5s. BÃ¼chi inclusion checks took 0.4s. Highest rank in rank-based complementation 0. Minimization of det autom 8. Minimization of nondet autom 0. Automata minimization 0.0s AutomataMinimizationTime, 7 MinimizatonAttempts, 35 StatesRemovedByMinimization, 3 NontrivialMinimizations. Non-live state removal took 0.0s Buchi closure took 0.0s. Biggest automaton had 221 states and ocurred in iteration 2.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 2076 SDtfs, 1876 SDslu, 3909 SDs, 0 SdLazy, 1813 SolverSat, 611 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 0.5s Time	LassoAnalysisResults: nont0 unkn0 SFLI0 SFLT0 conc0 concLT0 SILN0 SILU8 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - AllSpecificationsHoldResult: All specifications hold
    Buchi Automizer proved that the LTL property ! ( ( []( (call_transferFrom_Litecoin_SV0) ==> ( <>(success_transferFrom_Litecoin_SV0) ) ) )) holds
RESULT: Ultimate proved your program to be correct!
Received shutdown request...
