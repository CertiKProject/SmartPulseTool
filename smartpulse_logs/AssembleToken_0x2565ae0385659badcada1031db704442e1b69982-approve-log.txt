This is Ultimate 0.1.24-f1553f5-m
[2020-11-24 15:36:01,704 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-24 15:36:01,705 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-24 15:36:01,716 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-24 15:36:01,716 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-24 15:36:01,717 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-24 15:36:01,718 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-24 15:36:01,719 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-24 15:36:01,721 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-24 15:36:01,721 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-24 15:36:01,722 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-24 15:36:01,722 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-24 15:36:01,723 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-24 15:36:01,724 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-24 15:36:01,725 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-24 15:36:01,725 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-24 15:36:01,726 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-24 15:36:01,727 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-24 15:36:01,729 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-24 15:36:01,730 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-24 15:36:01,731 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-24 15:36:01,732 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-24 15:36:01,733 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-24 15:36:01,733 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-24 15:36:01,733 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-24 15:36:01,734 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-24 15:36:01,734 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-24 15:36:01,735 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-24 15:36:01,735 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-24 15:36:01,735 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-24 15:36:01,736 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-24 15:36:01,736 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-24 15:36:01,737 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-24 15:36:01,737 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-24 15:36:01,738 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-24 15:36:01,738 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-24 15:36:01,739 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-24 15:36:01,739 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-24 15:36:01,739 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-24 15:36:01,740 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-24 15:36:01,740 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-24 15:36:01,740 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-24 15:36:01,748 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-24 15:36:01,748 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-24 15:36:01,749 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-24 15:36:01,749 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-24 15:36:01,749 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-24 15:36:01,749 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-24 15:36:01,749 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-24 15:36:01,749 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-24 15:36:01,750 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-24 15:36:01,750 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-24 15:36:01,750 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-24 15:36:01,750 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-24 15:36:01,750 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-24 15:36:01,750 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-24 15:36:01,750 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-24 15:36:01,750 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-24 15:36:01,750 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-24 15:36:01,750 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-24 15:36:01,751 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-24 15:36:01,751 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-24 15:36:01,751 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-24 15:36:01,751 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-24 15:36:01,751 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-24 15:36:01,751 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-24 15:36:01,751 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-24 15:36:01,751 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-24 15:36:01,774 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-24 15:36:01,785 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-24 15:36:01,788 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-24 15:36:01,789 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-24 15:36:01,789 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-24 15:36:01,790 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/AssembleToken_0x2565ae0385659badcada1031db704442e1b69982_approve.bpl
[2020-11-24 15:36:01,790 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/AssembleToken_0x2565ae0385659badcada1031db704442e1b69982_approve.bpl'
[2020-11-24 15:36:01,860 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-24 15:36:01,861 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-24 15:36:01,861 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-24 15:36:01,862 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-24 15:36:01,862 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-24 15:36:01,878 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "AssembleToken_0x2565ae0385659badcada1031db704442e1b69982_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 03:36:01" (1/1) ...
[2020-11-24 15:36:01,880 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "AssembleToken_0x2565ae0385659badcada1031db704442e1b69982_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 03:36:01" (1/1) ...
[2020-11-24 15:36:01,907 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "AssembleToken_0x2565ae0385659badcada1031db704442e1b69982_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 03:36:01" (1/1) ...
[2020-11-24 15:36:01,907 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "AssembleToken_0x2565ae0385659badcada1031db704442e1b69982_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 03:36:01" (1/1) ...
[2020-11-24 15:36:01,926 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "AssembleToken_0x2565ae0385659badcada1031db704442e1b69982_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 03:36:01" (1/1) ...
[2020-11-24 15:36:01,934 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "AssembleToken_0x2565ae0385659badcada1031db704442e1b69982_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 03:36:01" (1/1) ...
[2020-11-24 15:36:01,939 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "AssembleToken_0x2565ae0385659badcada1031db704442e1b69982_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 03:36:01" (1/1) ...
[2020-11-24 15:36:01,950 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-24 15:36:01,950 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-24 15:36:01,951 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-24 15:36:01,953 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-24 15:36:01,957 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "AssembleToken_0x2565ae0385659badcada1031db704442e1b69982_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 03:36:01" (1/1) ...
[2020-11-24 15:36:01,982 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(AssembleToken.approve(spender, value), p1 != msg.sender || p2 != spender) ==> <>(finished(AssembleToken.approve(spender, value), return == true && approvals_AssembleToken[this][msg.sender][spender] == value &&  totalTokenSupply_AssembleToken[this] == old(totalTokenSupply_AssembleToken[this]) && balances_AssembleToken[this] == old(balances_AssembleToken[this]) && approvals_AssembleToken[this][p1][p2] == old(approvals_AssembleToken[this][p1][p2]) && name_AssembleToken[this] == old(name_AssembleToken[this]) && decimals_AssembleToken[this] == old(decimals_AssembleToken[this]) && symbol_AssembleToken[this] == old(symbol_AssembleToken[this]) && tokenIssuedSale_AssembleToken[this] == old(tokenIssuedSale_AssembleToken[this]) && tokenIssuedSP_AssembleToken[this] == old(tokenIssuedSP_AssembleToken[this]) && tokenIssuedEco_AssembleToken[this] == old(tokenIssuedEco_AssembleToken[this]) && tokenIssuedMkt_AssembleToken[this] == old(tokenIssuedMkt_AssembleToken[this]) && tokenIssuedDev_AssembleToken[this] == old(tokenIssuedDev_AssembleToken[this]) && tokenIssuedRsv_AssembleToken[this] == old(tokenIssuedRsv_AssembleToken[this]) && tokenIssuedTeam_AssembleToken[this] == old(tokenIssuedTeam_AssembleToken[this]) && tokenIssuedAdv_AssembleToken[this] == old(tokenIssuedAdv_AssembleToken[this]) && burnTokenSupply_AssembleToken[this] == old(burnTokenSupply_AssembleToken[this]) && tmVestingTimer_AssembleToken[this] == old(tmVestingTimer_AssembleToken[this]) && tmVestingBalances_AssembleToken[this] == old(tmVestingBalances_AssembleToken[this]) && advVestingTimer_AssembleToken[this] == old(advVestingTimer_AssembleToken[this]) && advVestingBalances_AssembleToken[this] == old(advVestingBalances_AssembleToken[this]) && tokenLock_AssembleToken[this] == old(tokenLock_AssembleToken[this]) && saleTime_AssembleToken[this] == old(saleTime_AssembleToken[this]) && endSaleTime_AssembleToken[this] == old(endSaleTime_AssembleToken[this]) && owner_OwnerHelper[this] == old(owner_OwnerHelper[this]))))
[2020-11-24 15:36:01,988 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(AssembleToken.approve(spender, value), p1 != msg.sender || p2 != spender) ==> <>(finished(AssembleToken.approve(spender, value), return == true && approvals_AssembleToken[this][msg.sender][spender] == value &&  totalTokenSupply_AssembleToken[this] == old(totalTokenSupply_AssembleToken[this]) && balances_AssembleToken[this] == old(balances_AssembleToken[this]) && approvals_AssembleToken[this][p1][p2] == old(approvals_AssembleToken[this][p1][p2]) && name_AssembleToken[this] == old(name_AssembleToken[this]) && decimals_AssembleToken[this] == old(decimals_AssembleToken[this]) && symbol_AssembleToken[this] == old(symbol_AssembleToken[this]) && tokenIssuedSale_AssembleToken[this] == old(tokenIssuedSale_AssembleToken[this]) && tokenIssuedSP_AssembleToken[this] == old(tokenIssuedSP_AssembleToken[this]) && tokenIssuedEco_AssembleToken[this] == old(tokenIssuedEco_AssembleToken[this]) && tokenIssuedMkt_AssembleToken[this] == old(tokenIssuedMkt_AssembleToken[this]) && tokenIssuedDev_AssembleToken[this] == old(tokenIssuedDev_AssembleToken[this]) && tokenIssuedRsv_AssembleToken[this] == old(tokenIssuedRsv_AssembleToken[this]) && tokenIssuedTeam_AssembleToken[this] == old(tokenIssuedTeam_AssembleToken[this]) && tokenIssuedAdv_AssembleToken[this] == old(tokenIssuedAdv_AssembleToken[this]) && burnTokenSupply_AssembleToken[this] == old(burnTokenSupply_AssembleToken[this]) && tmVestingTimer_AssembleToken[this] == old(tmVestingTimer_AssembleToken[this]) && tmVestingBalances_AssembleToken[this] == old(tmVestingBalances_AssembleToken[this]) && advVestingTimer_AssembleToken[this] == old(advVestingTimer_AssembleToken[this]) && advVestingBalances_AssembleToken[this] == old(advVestingBalances_AssembleToken[this]) && tokenLock_AssembleToken[this] == old(tokenLock_AssembleToken[this]) && saleTime_AssembleToken[this] == old(saleTime_AssembleToken[this]) && endSaleTime_AssembleToken[this] == old(endSaleTime_AssembleToken[this]) && owner_OwnerHelper[this] == old(owner_OwnerHelper[this]))))
[2020-11-24 15:36:01,996 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(AssembleToken.approve(spender, value), p1 != msg.sender || p2 != spender) ==> <>(finished(AssembleToken.approve(spender, value), return == true && approvals_AssembleToken[this][msg.sender][spender] == value &&  totalTokenSupply_AssembleToken[this] == old(totalTokenSupply_AssembleToken[this]) && balances_AssembleToken[this] == old(balances_AssembleToken[this]) && approvals_AssembleToken[this][p1][p2] == old(approvals_AssembleToken[this][p1][p2]) && name_AssembleToken[this] == old(name_AssembleToken[this]) && decimals_AssembleToken[this] == old(decimals_AssembleToken[this]) && symbol_AssembleToken[this] == old(symbol_AssembleToken[this]) && tokenIssuedSale_AssembleToken[this] == old(tokenIssuedSale_AssembleToken[this]) && tokenIssuedSP_AssembleToken[this] == old(tokenIssuedSP_AssembleToken[this]) && tokenIssuedEco_AssembleToken[this] == old(tokenIssuedEco_AssembleToken[this]) && tokenIssuedMkt_AssembleToken[this] == old(tokenIssuedMkt_AssembleToken[this]) && tokenIssuedDev_AssembleToken[this] == old(tokenIssuedDev_AssembleToken[this]) && tokenIssuedRsv_AssembleToken[this] == old(tokenIssuedRsv_AssembleToken[this]) && tokenIssuedTeam_AssembleToken[this] == old(tokenIssuedTeam_AssembleToken[this]) && tokenIssuedAdv_AssembleToken[this] == old(tokenIssuedAdv_AssembleToken[this]) && burnTokenSupply_AssembleToken[this] == old(burnTokenSupply_AssembleToken[this]) && tmVestingTimer_AssembleToken[this] == old(tmVestingTimer_AssembleToken[this]) && tmVestingBalances_AssembleToken[this] == old(tmVestingBalances_AssembleToken[this]) && advVestingTimer_AssembleToken[this] == old(advVestingTimer_AssembleToken[this]) && advVestingBalances_AssembleToken[this] == old(advVestingBalances_AssembleToken[this]) && tokenLock_AssembleToken[this] == old(tokenLock_AssembleToken[this]) && saleTime_AssembleToken[this] == old(saleTime_AssembleToken[this]) && endSaleTime_AssembleToken[this] == old(endSaleTime_AssembleToken[this]) && owner_OwnerHelper[this] == old(owner_OwnerHelper[this]))))
[2020-11-24 15:36:02,000 INFO  L636   opiaSpecLangObserver]: Parsed ( p1!=msg.sender || p2!=_spender_s676 ) to BinaryExpression[LOGICOR,BinaryExpression[COMPNEQ,IdentifierExpression[p1,GLOBAL],IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,approve~address~uint256_AssembleToken>]],BinaryExpression[COMPNEQ,IdentifierExpression[p2,GLOBAL],IdentifierExpression[_spender_s676,<IMPLEMENTATION_INPARAM,approve~address~uint256_AssembleToken>]]]
[2020-11-24 15:36:02,005 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( __ret_0_==true && approvals_AssembleToken[this][msg.sender][_spender_s676]==_value_s676 ) && totalTokenSupply_AssembleToken[this]==( old(totalTokenSupply_AssembleToken[this]) ) ) && balances_AssembleToken[this]==( old(balances_AssembleToken[this]) ) ) && approvals_AssembleToken[this][p1][p2]==( old(approvals_AssembleToken[this][p1][p2]) ) ) && name_AssembleToken[this]==( old(name_AssembleToken[this]) ) ) && decimals_AssembleToken[this]==( old(decimals_AssembleToken[this]) ) ) && symbol_AssembleToken[this]==( old(symbol_AssembleToken[this]) ) ) && tokenIssuedSale_AssembleToken[this]==( old(tokenIssuedSale_AssembleToken[this]) ) ) && tokenIssuedSP_AssembleToken[this]==( old(tokenIssuedSP_AssembleToken[this]) ) ) && tokenIssuedEco_AssembleToken[this]==( old(tokenIssuedEco_AssembleToken[this]) ) ) && tokenIssuedMkt_AssembleToken[this]==( old(tokenIssuedMkt_AssembleToken[this]) ) ) && tokenIssuedDev_AssembleToken[this]==( old(tokenIssuedDev_AssembleToken[this]) ) ) && tokenIssuedRsv_AssembleToken[this]==( old(tokenIssuedRsv_AssembleToken[this]) ) ) && tokenIssuedTeam_AssembleToken[this]==( old(tokenIssuedTeam_AssembleToken[this]) ) ) && tokenIssuedAdv_AssembleToken[this]==( old(tokenIssuedAdv_AssembleToken[this]) ) ) && burnTokenSupply_AssembleToken[this]==( old(burnTokenSupply_AssembleToken[this]) ) ) && tmVestingTimer_AssembleToken[this]==( old(tmVestingTimer_AssembleToken[this]) ) ) && tmVestingBalances_AssembleToken[this]==( old(tmVestingBalances_AssembleToken[this]) ) ) && advVestingTimer_AssembleToken[this]==( old(advVestingTimer_AssembleToken[this]) ) ) && advVestingBalances_AssembleToken[this]==( old(advVestingBalances_AssembleToken[this]) ) ) && tokenLock_AssembleToken[this]==( old(tokenLock_AssembleToken[this]) ) ) && saleTime_AssembleToken[this]==( old(saleTime_AssembleToken[this]) ) ) && endSaleTime_AssembleToken[this]==( old(endSaleTime_AssembleToken[this]) ) ) && owner_OwnerHelper[this]==( old(owner_OwnerHelper[this]) ) ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[__ret_0_,<IMPLEMENTATION_OUTPARAM,approve~address~uint256_AssembleToken>],BooleanLiteral[true]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[approvals_AssembleToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_AssembleToken>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,approve~address~uint256_AssembleToken>]]],[IdentifierExpression[_spender_s676,<IMPLEMENTATION_INPARAM,approve~address~uint256_AssembleToken>]]],IdentifierExpression[_value_s676,<IMPLEMENTATION_INPARAM,approve~address~uint256_AssembleToken>]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[totalTokenSupply_AssembleToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_AssembleToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[totalTokenSupply_AssembleToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_AssembleToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[balances_AssembleToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_AssembleToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[balances_AssembleToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_AssembleToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[approvals_AssembleToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_AssembleToken>]]],[IdentifierExpression[p1,GLOBAL]]],[IdentifierExpression[p2,GLOBAL]]],UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[approvals_AssembleToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_AssembleToken>]]],[IdentifierExpression[p1,GLOBAL]]],[IdentifierExpression[p2,GLOBAL]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[name_AssembleToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_AssembleToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[name_AssembleToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_AssembleToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[decimals_AssembleToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_AssembleToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[decimals_AssembleToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_AssembleToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[symbol_AssembleToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_AssembleToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[symbol_AssembleToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_AssembleToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[tokenIssuedSale_AssembleToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_AssembleToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[tokenIssuedSale_AssembleToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_AssembleToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[tokenIssuedSP_AssembleToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_AssembleToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[tokenIssuedSP_AssembleToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_AssembleToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[tokenIssuedEco_AssembleToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_AssembleToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[tokenIssuedEco_AssembleToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_AssembleToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[tokenIssuedMkt_AssembleToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_AssembleToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[tokenIssuedMkt_AssembleToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_AssembleToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[tokenIssuedDev_AssembleToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_AssembleToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[tokenIssuedDev_AssembleToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_AssembleToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[tokenIssuedRsv_AssembleToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_AssembleToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[tokenIssuedRsv_AssembleToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_AssembleToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[tokenIssuedTeam_AssembleToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_AssembleToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[tokenIssuedTeam_AssembleToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_AssembleToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[tokenIssuedAdv_AssembleToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_AssembleToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[tokenIssuedAdv_AssembleToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_AssembleToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[burnTokenSupply_AssembleToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_AssembleToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[burnTokenSupply_AssembleToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_AssembleToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[tmVestingTimer_AssembleToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_AssembleToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[tmVestingTimer_AssembleToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_AssembleToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[tmVestingBalances_AssembleToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_AssembleToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[tmVestingBalances_AssembleToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_AssembleToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[advVestingTimer_AssembleToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_AssembleToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[advVestingTimer_AssembleToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_AssembleToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[advVestingBalances_AssembleToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_AssembleToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[advVestingBalances_AssembleToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_AssembleToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[tokenLock_AssembleToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_AssembleToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[tokenLock_AssembleToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_AssembleToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[saleTime_AssembleToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_AssembleToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[saleTime_AssembleToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_AssembleToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[endSaleTime_AssembleToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_AssembleToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[endSaleTime_AssembleToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_AssembleToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[owner_OwnerHelper,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_AssembleToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[owner_OwnerHelper,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_AssembleToken>]]]]]]
[2020-11-24 15:36:02,008 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(AssembleToken.approve(spender, value), p1 != msg.sender || p2 != spender) ==> <>(finished(AssembleToken.approve(spender, value), return == true && approvals_AssembleToken[this][msg.sender][spender] == value &&  totalTokenSupply_AssembleToken[this] == old(totalTokenSupply_AssembleToken[this]) && balances_AssembleToken[this] == old(balances_AssembleToken[this]) && approvals_AssembleToken[this][p1][p2] == old(approvals_AssembleToken[this][p1][p2]) && name_AssembleToken[this] == old(name_AssembleToken[this]) && decimals_AssembleToken[this] == old(decimals_AssembleToken[this]) && symbol_AssembleToken[this] == old(symbol_AssembleToken[this]) && tokenIssuedSale_AssembleToken[this] == old(tokenIssuedSale_AssembleToken[this]) && tokenIssuedSP_AssembleToken[this] == old(tokenIssuedSP_AssembleToken[this]) && tokenIssuedEco_AssembleToken[this] == old(tokenIssuedEco_AssembleToken[this]) && tokenIssuedMkt_AssembleToken[this] == old(tokenIssuedMkt_AssembleToken[this]) && tokenIssuedDev_AssembleToken[this] == old(tokenIssuedDev_AssembleToken[this]) && tokenIssuedRsv_AssembleToken[this] == old(tokenIssuedRsv_AssembleToken[this]) && tokenIssuedTeam_AssembleToken[this] == old(tokenIssuedTeam_AssembleToken[this]) && tokenIssuedAdv_AssembleToken[this] == old(tokenIssuedAdv_AssembleToken[this]) && burnTokenSupply_AssembleToken[this] == old(burnTokenSupply_AssembleToken[this]) && tmVestingTimer_AssembleToken[this] == old(tmVestingTimer_AssembleToken[this]) && tmVestingBalances_AssembleToken[this] == old(tmVestingBalances_AssembleToken[this]) && advVestingTimer_AssembleToken[this] == old(advVestingTimer_AssembleToken[this]) && advVestingBalances_AssembleToken[this] == old(advVestingBalances_AssembleToken[this]) && tokenLock_AssembleToken[this] == old(tokenLock_AssembleToken[this]) && saleTime_AssembleToken[this] == old(saleTime_AssembleToken[this]) && endSaleTime_AssembleToken[this] == old(endSaleTime_AssembleToken[this]) && owner_OwnerHelper[this] == old(owner_OwnerHelper[this]))))
[2020-11-24 15:36:02,008 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_approve_AssembleToken0) ==> ( <>AP(success_approve_AssembleToken0) ) ) )
Executed UtopiaSpecLang
[2020-11-24 15:36:02,016 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 03:36:02 PropertyContainer
[2020-11-24 15:36:02,016 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-24 15:36:02,016 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-24 15:36:02,016 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-24 15:36:02,016 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-24 15:36:02,017 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "AssembleToken_0x2565ae0385659badcada1031db704442e1b69982_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 03:36:01" (1/2) ...
[2020-11-24 15:36:02,017 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-24 15:36:02,017 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-24 15:36:02,027 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 03:36:02" (2/2) ...
[2020-11-24 15:36:02,027 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-24 15:36:02,027 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-24 15:36:02,027 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-24 15:36:02,027 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-24 15:36:02,028 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "AssembleToken_0x2565ae0385659badcada1031db704442e1b69982_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 03:36:01" (1/2) ...
[2020-11-24 15:36:02,086 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-24 15:36:02,086 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__success
[2020-11-24 15:36:02,086 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__success
[2020-11-24 15:36:02,086 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_AssembleToken
[2020-11-24 15:36:02,086 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_AssembleToken
[2020-11-24 15:36:02,086 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_AssembleToken
[2020-11-24 15:36:02,087 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_AssembleToken
[2020-11-24 15:36:02,087 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_AssembleToken
[2020-11-24 15:36:02,087 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_AssembleToken
[2020-11-24 15:36:02,087 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_AssembleToken
[2020-11-24 15:36:02,087 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_AssembleToken
[2020-11-24 15:36:02,087 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_AssembleToken
[2020-11-24 15:36:02,087 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_AssembleToken
[2020-11-24 15:36:02,087 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_AssembleToken
[2020-11-24 15:36:02,087 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_AssembleToken
[2020-11-24 15:36:02,087 INFO  L130     BoogieDeclarations]: Found specification of procedure isTransferable_AssembleToken__success
[2020-11-24 15:36:02,088 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-24 15:36:02,088 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-24 15:36:02,088 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-24 15:36:02,088 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__success
[2020-11-24 15:36:02,088 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_SafeMath
[2020-11-24 15:36:02,088 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_SafeMath
[2020-11-24 15:36:02,088 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_OwnerHelper
[2020-11-24 15:36:02,088 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_OwnerHelper
[2020-11-24 15:36:02,088 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20Interface
[2020-11-24 15:36:02,088 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20Interface
[2020-11-24 15:36:02,089 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_AssembleToken
[2020-11-24 15:36:02,089 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-24 15:36:02,089 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-24 15:36:02,089 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-24 15:36:02,089 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__fail
[2020-11-24 15:36:02,089 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_AssembleToken__success
[2020-11-24 15:36:02,089 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_AssembleToken__fail
[2020-11-24 15:36:02,089 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_AssembleToken__success
[2020-11-24 15:36:02,089 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_AssembleToken__fail
[2020-11-24 15:36:02,089 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_AssembleToken__success
[2020-11-24 15:36:02,089 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_AssembleToken__fail
[2020-11-24 15:36:02,090 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_AssembleToken__success
[2020-11-24 15:36:02,090 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_AssembleToken__fail
[2020-11-24 15:36:02,090 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_AssembleToken__success
[2020-11-24 15:36:02,090 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_AssembleToken__fail
[2020-11-24 15:36:02,090 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_AssembleToken__success
[2020-11-24 15:36:02,090 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_AssembleToken__fail
[2020-11-24 15:36:02,090 INFO  L130     BoogieDeclarations]: Found specification of procedure isTransferable_AssembleToken__fail
[2020-11-24 15:36:02,090 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-24 15:36:02,090 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-24 15:36:02,090 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-24 15:36:02,090 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__fail
[2020-11-24 15:36:02,090 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-24 15:36:02,091 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-24 15:36:02,091 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-24 15:36:02,091 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__success
[2020-11-24 15:36:02,091 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__fail
[2020-11-24 15:36:02,091 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__success
[2020-11-24 15:36:02,091 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_AssembleToken__fail
[2020-11-24 15:36:02,091 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_AssembleToken__success
[2020-11-24 15:36:02,091 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_AssembleToken__fail
[2020-11-24 15:36:02,091 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_AssembleToken__success
[2020-11-24 15:36:02,091 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_AssembleToken__fail
[2020-11-24 15:36:02,091 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_AssembleToken__success
[2020-11-24 15:36:02,092 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_AssembleToken__fail
[2020-11-24 15:36:02,092 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_AssembleToken__success
[2020-11-24 15:36:02,092 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_AssembleToken__fail
[2020-11-24 15:36:02,092 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_AssembleToken__success
[2020-11-24 15:36:02,092 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_AssembleToken__fail
[2020-11-24 15:36:02,092 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_AssembleToken__success
[2020-11-24 15:36:02,092 INFO  L138     BoogieDeclarations]: Found implementation of procedure isTransferable_AssembleToken__fail
[2020-11-24 15:36:02,092 INFO  L138     BoogieDeclarations]: Found implementation of procedure isTransferable_AssembleToken__success
[2020-11-24 15:36:02,092 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-24 15:36:02,092 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-24 15:36:02,092 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-24 15:36:02,092 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-24 15:36:02,093 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-24 15:36:02,093 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-24 15:36:02,093 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__fail
[2020-11-24 15:36:02,093 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__success
[2020-11-24 15:36:02,093 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_SafeMath
[2020-11-24 15:36:02,093 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_SafeMath
[2020-11-24 15:36:02,093 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_OwnerHelper
[2020-11-24 15:36:02,093 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_OwnerHelper
[2020-11-24 15:36:02,093 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20Interface
[2020-11-24 15:36:02,093 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20Interface
[2020-11-24 15:36:02,093 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_AssembleToken
[2020-11-24 15:36:02,094 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-24 15:36:02,094 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-24 15:36:02,094 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-24 15:36:02,384 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 15:36:02,501 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 15:36:02,501 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 15:36:02,501 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 15:36:02,590 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-24 15:36:02,590 INFO  L286             CfgBuilder]: Removed 4 assue(true) statements.
[2020-11-24 15:36:02,592 INFO  L202        PluginConnector]: Adding new model AssembleToken_0x2565ae0385659badcada1031db704442e1b69982_approve.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 03:36:02 BoogieIcfgContainer
[2020-11-24 15:36:02,592 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 03:36:02" (2/2) ...
[2020-11-24 15:36:02,592 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-24 15:36:02,592 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@d3c268a and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 03:36:02, skipping insertion in model container
[2020-11-24 15:36:02,592 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-24 15:36:02,593 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-24 15:36:02,593 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-24 15:36:02,594 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-24 15:36:02,594 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "AssembleToken_0x2565ae0385659badcada1031db704442e1b69982_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 03:36:01" (1/3) ...
[2020-11-24 15:36:02,595 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@3b98f1b7 and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 03:36:02, skipping insertion in model container
[2020-11-24 15:36:02,595 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 03:36:02" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-24 15:36:02,631 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 03:36:02 NWAContainer
[2020-11-24 15:36:02,631 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-24 15:36:02,632 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-24 15:36:02,632 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-24 15:36:02,632 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-24 15:36:02,634 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "AssembleToken_0x2565ae0385659badcada1031db704442e1b69982_approve.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 03:36:02" (3/4) ...
[2020-11-24 15:36:02,635 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@1f97b58a and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 03:36:02, skipping insertion in model container
[2020-11-24 15:36:02,636 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 03:36:02" (4/4) ...
[2020-11-24 15:36:02,639 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-24 15:36:02,642 INFO  L110   BuchiProductObserver]: Initial RCFG 908 locations, 1041 edges
[2020-11-24 15:36:02,642 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-24 15:36:02,654 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-24 15:36:03,517 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-24 15:36:03,520 INFO  L110   BuchiProductObserver]: BuchiProgram size 2008 locations, 3282 edges
[2020-11-24 15:36:03,520 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 03:36:03 BoogieIcfgContainer
[2020-11-24 15:36:03,520 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-24 15:36:03,520 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-24 15:36:03,520 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-24 15:36:03,522 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-24 15:36:03,522 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 03:36:03" (1/1) ...
[2020-11-24 15:36:03,564 INFO  L313           BlockEncoder]: Initial Icfg 2008 locations, 3282 edges
[2020-11-24 15:36:03,564 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-24 15:36:03,564 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-24 15:36:03,564 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-24 15:36:03,565 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-24 15:36:03,574 INFO  L70    emoveInfeasibleEdges]: Removed 39 edges and 11 locations because of local infeasibility
[2020-11-24 15:36:03,585 INFO  L70        RemoveSinkStates]: Removed 2 edges and 1 locations by removing sink states
[2020-11-24 15:36:03,592 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-24 15:36:03,595 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-24 15:36:03,597 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-24 15:36:03,597 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-24 15:36:03,600 INFO  L313           BlockEncoder]: Encoded RCFG 1982 locations, 3221 edges
[2020-11-24 15:36:03,601 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 24.11 03:36:03 BasicIcfg
[2020-11-24 15:36:03,601 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-24 15:36:03,601 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-24 15:36:03,601 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-24 15:36:03,604 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-24 15:36:03,604 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 15:36:03,604 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "AssembleToken_0x2565ae0385659badcada1031db704442e1b69982_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 03:36:01" (1/6) ...
[2020-11-24 15:36:03,606 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@7e505615 and model type AssembleToken_0x2565ae0385659badcada1031db704442e1b69982_approve.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 24.11 03:36:03, skipping insertion in model container
[2020-11-24 15:36:03,607 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 15:36:03,607 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 03:36:02" (2/6) ...
[2020-11-24 15:36:03,607 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@7e505615 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 24.11 03:36:03, skipping insertion in model container
[2020-11-24 15:36:03,607 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 15:36:03,607 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "AssembleToken_0x2565ae0385659badcada1031db704442e1b69982_approve.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 03:36:02" (3/6) ...
[2020-11-24 15:36:03,607 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@7e505615 and model type AssembleToken_0x2565ae0385659badcada1031db704442e1b69982_approve.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 24.11 03:36:03, skipping insertion in model container
[2020-11-24 15:36:03,607 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 15:36:03,608 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 03:36:02" (4/6) ...
[2020-11-24 15:36:03,608 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@7e505615 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 24.11 03:36:03, skipping insertion in model container
[2020-11-24 15:36:03,608 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 15:36:03,608 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 03:36:03" (5/6) ...
[2020-11-24 15:36:03,608 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@7e505615 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 24.11 03:36:03, skipping insertion in model container
[2020-11-24 15:36:03,608 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 15:36:03,609 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 24.11 03:36:03" (6/6) ...
[2020-11-24 15:36:03,610 INFO  L404   chiAutomizerObserver]: Analyzing ICFG AssembleToken_0x2565ae0385659badcada1031db704442e1b69982_approve.bpl_BEv2
[2020-11-24 15:36:03,648 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-24 15:36:03,649 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-24 15:36:03,649 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-24 15:36:03,649 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-24 15:36:03,649 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-24 15:36:03,649 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-24 15:36:03,649 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-24 15:36:03,649 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-24 15:36:03,649 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-24 15:36:03,672 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1982 states.
[2020-11-24 15:36:03,716 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 15:36:03,716 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 15:36:03,716 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 15:36:03,726 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 15:36:03,726 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
[2020-11-24 15:36:03,726 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-24 15:36:03,727 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1982 states.
[2020-11-24 15:36:03,740 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 15:36:03,740 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 15:36:03,740 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 15:36:03,742 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 15:36:03,742 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L3]                 success_approve_AssembleToken0 := false;
[L3]                 call_approve_AssembleToken0 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L2678]              assume null == 0;
[L2679]  CALL        call this := FreshRefGenerator__success();
[L1332]              havoc newRef;
[L1333]              assume Alloc[newRef] == false;
[L1334]              Alloc[newRef] := true;
[L1335]              assume newRef != null;
[L2679]  RET         call this := FreshRefGenerator__success();
[L2680]              assume now >= 0;
[L2681]              assume DType[this] == AssembleToken;
[L2682]              assume !revert && gas >= 0;
[L2683]  CALL        call CorralChoice_AssembleToken(this);
[L2540]              havoc msgsender_MSG;
[L2541]              havoc msgvalue_MSG;
[L2542]              havoc choice;
[L2543]              havoc __ret_0_owner;
[L2544]              havoc _to_s157;
[L2545]              havoc __ret_0_totalSupply;
[L2546]              havoc _who_s573;
[L2547]              havoc __ret_0_balanceOf;
[L2548]              havoc _to_s632;
[L2549]              havoc _value_s632;
[L2550]              havoc __ret_0_transfer;
[L2551]              havoc _spender_s676;
[L2552]              havoc _value_s676;
[L2553]              havoc __ret_0_approve;
[L2554]              havoc _owner_s692;
[L2555]              havoc _spender_s692;
[L2556]              havoc __ret_0_allowance;
[L2557]              havoc _from_s777;
[L2558]              havoc _to_s777;
[L2559]              havoc _value_s777;
[L2560]              havoc __ret_0_transferFrom;
[L2561]              havoc __ret_0_name;
[L2562]              havoc __ret_0_decimals;
[L2563]              havoc __ret_0_symbol;
[L2564]              havoc __ret_0_maxTotalSupply;
[L2565]              havoc __ret_0_maxSaleSupply;
[L2566]              havoc __ret_0_maxSPSupply;
[L2567]              havoc __ret_0_maxEcoSupply;
[L2568]              havoc __ret_0_maxMktSupply;
[L2569]              havoc __ret_0_maxDevSupply;
[L2570]              havoc __ret_0_maxReserveSupply;
[L2571]              havoc __ret_0_maxTeamSupply;
[L2572]              havoc __ret_0_maxAdvisorSupply;
[L2573]              havoc __ret_0_seedSaleSupply;
[L2574]              havoc __ret_0_privateSaleSupply;
[L2575]              havoc __ret_0_publicSaleSupply;
[L2576]              havoc __ret_0_teamVestingSupply;
[L2577]              havoc __ret_0_teamVestingLockDate;
[L2578]              havoc __ret_0_teamVestingTime;
[L2579]              havoc __ret_0_advisorVestingSupply;
[L2580]              havoc __ret_0_advisorVestingLockDate;
[L2581]              havoc __ret_0_advisorVestingTime;
[L2582]              havoc __ret_0_totalTokenSupply;
[L2583]              havoc __ret_0_tokenIssuedSale;
[L2584]              havoc __ret_0_tokenIssuedSP;
[L2585]              havoc __ret_0_tokenIssuedEco;
[L2586]              havoc __ret_0_tokenIssuedMkt;
[L2587]              havoc __ret_0_tokenIssuedDev;
[L2588]              havoc __ret_0_tokenIssuedRsv;
[L2589]              havoc __ret_0_tokenIssuedTeam;
[L2590]              havoc __ret_0_tokenIssuedAdv;
[L2591]              havoc __ret_0_burnTokenSupply;
[L2592]              havoc arg1677_s0;
[L2593]              havoc __ret_0_balances;
[L2594]              havoc arg1678_s0;
[L2595]              havoc arg1679_s0;
[L2596]              havoc __ret_0_approvals;
[L2597]              havoc arg1680_s0;
[L2598]              havoc __ret_0_tmVestingTimer;
[L2599]              havoc arg1681_s0;
[L2600]              havoc __ret_0_tmVestingBalances;
[L2601]              havoc arg1682_s0;
[L2602]              havoc __ret_0_advVestingTimer;
[L2603]              havoc arg1683_s0;
[L2604]              havoc __ret_0_advVestingBalances;
[L2605]              havoc __ret_0_tokenLock;
[L2606]              havoc __ret_0_saleTime;
[L2607]              havoc __ret_0_endSaleTime;
[L2608]              havoc _to_s831;
[L2609]              havoc _to_s885;
[L2610]              havoc _to_s939;
[L2611]              havoc _to_s993;
[L2612]              havoc _to_s1047;
[L2613]              havoc _to_s1138;
[L2614]              havoc _time_s1138;
[L2615]              havoc _to_s1229;
[L2616]              havoc _time_s1229;
[L2617]              havoc _to_s1277;
[L2618]              havoc _to_s1325;
[L2619]              havoc _to_s1375;
[L2620]              havoc _contract_s1607;
[L2621]              havoc _decimals_s1607;
[L2622]              havoc _value_s1607;
[L2623]              havoc _value_s1663;
[L2624]              havoc tmpNow;
[L2625]              havoc gas;
[L2626]              assume gas > 4000000 && gas <= 8000000;
[L2627]              tmpNow := now;
[L2628]              havoc now;
[L2629]              assume now > tmpNow;
[L2630]              assume msgsender_MSG != null;
[L2631]  COND TRUE   choice == 6
[L2632]              gas := gas - 21000;
[L2633]  COND FALSE  !(gas >= 0)
[L2683]  RET         call CorralChoice_AssembleToken(this);

Loop:
[L2683]        assume true;

[2020-11-24 15:36:03,759 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 15:36:03,759 INFO  L82        PathProgramCache]: Analyzing trace with hash 1043058946, now seen corresponding path program 1 times
[2020-11-24 15:36:03,764 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 15:36:03,790 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 15:36:03,854 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 15:36:03,856 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 15:36:03,856 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-24 15:36:03,860 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 15:36:03,872 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-24 15:36:03,872 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-24 15:36:03,874 INFO  L87              Difference]: Start difference. First operand 1982 states. Second operand 3 states.
[2020-11-24 15:36:04,122 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 15:36:04,122 INFO  L93              Difference]: Finished difference Result 929 states and 1007 transitions.
[2020-11-24 15:36:04,122 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-24 15:36:04,124 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 929 states and 1007 transitions.
[2020-11-24 15:36:04,130 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 15:36:04,136 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 929 states to 251 states and 262 transitions.
[2020-11-24 15:36:04,136 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 4
[2020-11-24 15:36:04,137 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 251
[2020-11-24 15:36:04,138 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 251 states and 262 transitions.
[2020-11-24 15:36:04,139 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 15:36:04,139 INFO  L728         BuchiCegarLoop]: Abstraction has 251 states and 262 transitions.
[2020-11-24 15:36:04,154 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 251 states and 262 transitions.
[2020-11-24 15:36:04,169 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 251 to 251.
[2020-11-24 15:36:04,169 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 251 states.
[2020-11-24 15:36:04,170 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 251 states to 251 states and 262 transitions.
[2020-11-24 15:36:04,171 INFO  L751         BuchiCegarLoop]: Abstraction has 251 states and 262 transitions.
[2020-11-24 15:36:04,171 INFO  L631         BuchiCegarLoop]: Abstraction has 251 states and 262 transitions.
[2020-11-24 15:36:04,171 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-24 15:36:04,171 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 251 states and 262 transitions.
[2020-11-24 15:36:04,172 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 15:36:04,172 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 15:36:04,172 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 15:36:04,174 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 15:36:04,174 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L3]                 success_approve_AssembleToken0 := false;
[L3]                 call_approve_AssembleToken0 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L2678]              assume null == 0;
[L2679]  CALL        call this := FreshRefGenerator__success();
[L1332]              havoc newRef;
[L1333]              assume Alloc[newRef] == false;
[L1334]              Alloc[newRef] := true;
[L1335]              assume newRef != null;
[L2679]  RET         call this := FreshRefGenerator__success();
[L2680]              assume now >= 0;
[L2681]              assume DType[this] == AssembleToken;
[L2682]              assume !revert && gas >= 0;
[L2683]  CALL        call CorralChoice_AssembleToken(this);
[L2540]              havoc msgsender_MSG;
[L2541]              havoc msgvalue_MSG;
[L2542]              havoc choice;
[L2543]              havoc __ret_0_owner;
[L2544]              havoc _to_s157;
[L2545]              havoc __ret_0_totalSupply;
[L2546]              havoc _who_s573;
[L2547]              havoc __ret_0_balanceOf;
[L2548]              havoc _to_s632;
[L2549]              havoc _value_s632;
[L2550]              havoc __ret_0_transfer;
[L2551]              havoc _spender_s676;
[L2552]              havoc _value_s676;
[L2553]              havoc __ret_0_approve;
[L2554]              havoc _owner_s692;
[L2555]              havoc _spender_s692;
[L2556]              havoc __ret_0_allowance;
[L2557]              havoc _from_s777;
[L2558]              havoc _to_s777;
[L2559]              havoc _value_s777;
[L2560]              havoc __ret_0_transferFrom;
[L2561]              havoc __ret_0_name;
[L2562]              havoc __ret_0_decimals;
[L2563]              havoc __ret_0_symbol;
[L2564]              havoc __ret_0_maxTotalSupply;
[L2565]              havoc __ret_0_maxSaleSupply;
[L2566]              havoc __ret_0_maxSPSupply;
[L2567]              havoc __ret_0_maxEcoSupply;
[L2568]              havoc __ret_0_maxMktSupply;
[L2569]              havoc __ret_0_maxDevSupply;
[L2570]              havoc __ret_0_maxReserveSupply;
[L2571]              havoc __ret_0_maxTeamSupply;
[L2572]              havoc __ret_0_maxAdvisorSupply;
[L2573]              havoc __ret_0_seedSaleSupply;
[L2574]              havoc __ret_0_privateSaleSupply;
[L2575]              havoc __ret_0_publicSaleSupply;
[L2576]              havoc __ret_0_teamVestingSupply;
[L2577]              havoc __ret_0_teamVestingLockDate;
[L2578]              havoc __ret_0_teamVestingTime;
[L2579]              havoc __ret_0_advisorVestingSupply;
[L2580]              havoc __ret_0_advisorVestingLockDate;
[L2581]              havoc __ret_0_advisorVestingTime;
[L2582]              havoc __ret_0_totalTokenSupply;
[L2583]              havoc __ret_0_tokenIssuedSale;
[L2584]              havoc __ret_0_tokenIssuedSP;
[L2585]              havoc __ret_0_tokenIssuedEco;
[L2586]              havoc __ret_0_tokenIssuedMkt;
[L2587]              havoc __ret_0_tokenIssuedDev;
[L2588]              havoc __ret_0_tokenIssuedRsv;
[L2589]              havoc __ret_0_tokenIssuedTeam;
[L2590]              havoc __ret_0_tokenIssuedAdv;
[L2591]              havoc __ret_0_burnTokenSupply;
[L2592]              havoc arg1677_s0;
[L2593]              havoc __ret_0_balances;
[L2594]              havoc arg1678_s0;
[L2595]              havoc arg1679_s0;
[L2596]              havoc __ret_0_approvals;
[L2597]              havoc arg1680_s0;
[L2598]              havoc __ret_0_tmVestingTimer;
[L2599]              havoc arg1681_s0;
[L2600]              havoc __ret_0_tmVestingBalances;
[L2601]              havoc arg1682_s0;
[L2602]              havoc __ret_0_advVestingTimer;
[L2603]              havoc arg1683_s0;
[L2604]              havoc __ret_0_advVestingBalances;
[L2605]              havoc __ret_0_tokenLock;
[L2606]              havoc __ret_0_saleTime;
[L2607]              havoc __ret_0_endSaleTime;
[L2608]              havoc _to_s831;
[L2609]              havoc _to_s885;
[L2610]              havoc _to_s939;
[L2611]              havoc _to_s993;
[L2612]              havoc _to_s1047;
[L2613]              havoc _to_s1138;
[L2614]              havoc _time_s1138;
[L2615]              havoc _to_s1229;
[L2616]              havoc _time_s1229;
[L2617]              havoc _to_s1277;
[L2618]              havoc _to_s1325;
[L2619]              havoc _to_s1375;
[L2620]              havoc _contract_s1607;
[L2621]              havoc _decimals_s1607;
[L2622]              havoc _value_s1607;
[L2623]              havoc _value_s1663;
[L2624]              havoc tmpNow;
[L2625]              havoc gas;
[L2626]              assume gas > 4000000 && gas <= 8000000;
[L2627]              tmpNow := now;
[L2628]              havoc now;
[L2629]              assume now > tmpNow;
[L2630]              assume msgsender_MSG != null;
[L2631]  COND FALSE  !(choice == 6)
[L2637]  COND FALSE  !(choice == 5)
[L2643]  COND FALSE  !(choice == 4)
[L2650]  COND TRUE   choice == 3
[L2651]              gas := gas - 21000;
[L2652]  COND TRUE   gas >= 0
[L2653]              assume _value_s676 >= 0 && _value_s676 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2654]              assume msgvalue_MSG == 0;
[L2655]  CALL        call __ret_0_approve := approve~address~uint256_AssembleToken(this, msgsender_MSG, msgvalue_MSG, _spender_s676, _value_s676);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != _spender_s676;
[L3]                 call_approve_AssembleToken0 := true;
[L3]                 call_approve_AssembleToken0 := false;
[L3]                 revert := revert_hold;
[L562]               havoc __exception;
[L563]               revert := false;
[L564]   COND FALSE  !(__exception)
[L627]   CALL        call __ret_0_ := approve~address~uint256_AssembleToken__success(this, msgsender_MSG, msgvalue_MSG, _spender_s676, _value_s676);
[L1488]  CALL        call __var_4 := isTransferable_AssembleToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1630]  COND TRUE   tokenLock_AssembleToken[this] == false
[L1631]              __ret_0_ := true;
[L1488]  RET         call __var_4 := isTransferable_AssembleToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1489]  COND TRUE   revert
[L627]   RET         call __ret_0_ := approve~address~uint256_AssembleToken__success(this, msgsender_MSG, msgvalue_MSG, _spender_s676, _value_s676);
[L628]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !((((((((((((((((((((((((__ret_0_ == true && approvals_AssembleToken[this][msgsender_MSG][_spender_s676] == _value_s676) && totalTokenSupply_AssembleToken[this] == old(totalTokenSupply_AssembleToken[this])) && balances_AssembleToken[this] == old(balances_AssembleToken[this])) && approvals_AssembleToken[this][p1][p2] == old(approvals_AssembleToken[this][p1][p2])) && name_AssembleToken[this] == old(name_AssembleToken[this])) && decimals_AssembleToken[this] == old(decimals_AssembleToken[this])) && symbol_AssembleToken[this] == old(symbol_AssembleToken[this])) && tokenIssuedSale_AssembleToken[this] == old(tokenIssuedSale_AssembleToken[this])) && tokenIssuedSP_AssembleToken[this] == old(tokenIssuedSP_AssembleToken[this])) && tokenIssuedEco_AssembleToken[this] == old(tokenIssuedEco_AssembleToken[this])) && tokenIssuedMkt_AssembleToken[this] == old(tokenIssuedMkt_AssembleToken[this])) && tokenIssuedDev_AssembleToken[this] == old(tokenIssuedDev_AssembleToken[this])) && tokenIssuedRsv_AssembleToken[this] == old(tokenIssuedRsv_AssembleToken[this])) && tokenIssuedTeam_AssembleToken[this] == old(tokenIssuedTeam_AssembleToken[this])) && tokenIssuedAdv_AssembleToken[this] == old(tokenIssuedAdv_AssembleToken[this])) && burnTokenSupply_AssembleToken[this] == old(burnTokenSupply_AssembleToken[this])) && tmVestingTimer_AssembleToken[this] == old(tmVestingTimer_AssembleToken[this])) && tmVestingBalances_AssembleToken[this] == old(tmVestingBalances_AssembleToken[this])) && advVestingTimer_AssembleToken[this] == old(advVestingTimer_AssembleToken[this])) && advVestingBalances_AssembleToken[this] == old(advVestingBalances_AssembleToken[this])) && tokenLock_AssembleToken[this] == old(tokenLock_AssembleToken[this])) && saleTime_AssembleToken[this] == old(saleTime_AssembleToken[this])) && endSaleTime_AssembleToken[this] == old(endSaleTime_AssembleToken[this])) && owner_OwnerHelper[this] == old(owner_OwnerHelper[this]));
[L3]                 revert := revert_hold;
[L2655]  RET         call __ret_0_approve := approve~address~uint256_AssembleToken(this, msgsender_MSG, msgvalue_MSG, _spender_s676, _value_s676);
[L2683]  RET         call CorralChoice_AssembleToken(this);

Loop:
[L2683]        assume true;

[2020-11-24 15:36:04,177 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 15:36:04,178 INFO  L82        PathProgramCache]: Analyzing trace with hash 391062830, now seen corresponding path program 1 times
[2020-11-24 15:36:04,179 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 15:36:04,195 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 15:36:04,224 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 15:36:04,225 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 15:36:04,225 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-24 15:36:04,226 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 15:36:04,226 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-24 15:36:04,226 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-24 15:36:04,227 INFO  L87              Difference]: Start difference. First operand 251 states and 262 transitions. cyclomatic complexity: 12 Second operand 3 states.
[2020-11-24 15:36:04,234 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 15:36:04,234 INFO  L93              Difference]: Finished difference Result 266 states and 276 transitions.
[2020-11-24 15:36:04,234 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-24 15:36:04,234 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 266 states and 276 transitions.
[2020-11-24 15:36:04,236 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 2
[2020-11-24 15:36:04,238 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 266 states to 260 states and 268 transitions.
[2020-11-24 15:36:04,238 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 260
[2020-11-24 15:36:04,238 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 260
[2020-11-24 15:36:04,238 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 260 states and 268 transitions.
[2020-11-24 15:36:04,239 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 15:36:04,239 INFO  L728         BuchiCegarLoop]: Abstraction has 260 states and 268 transitions.
[2020-11-24 15:36:04,240 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 260 states and 268 transitions.
[2020-11-24 15:36:04,244 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 260 to 249.
[2020-11-24 15:36:04,245 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 249 states.
[2020-11-24 15:36:04,245 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 249 states to 249 states and 257 transitions.
[2020-11-24 15:36:04,245 INFO  L751         BuchiCegarLoop]: Abstraction has 249 states and 257 transitions.
[2020-11-24 15:36:04,245 INFO  L631         BuchiCegarLoop]: Abstraction has 249 states and 257 transitions.
[2020-11-24 15:36:04,245 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-24 15:36:04,245 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 249 states and 257 transitions.
[2020-11-24 15:36:04,246 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 15:36:04,247 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 15:36:04,247 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 15:36:04,248 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 15:36:04,248 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L3]                 success_approve_AssembleToken0 := false;
[L3]                 call_approve_AssembleToken0 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L2678]              assume null == 0;
[L2679]  CALL        call this := FreshRefGenerator__success();
[L1332]              havoc newRef;
[L1333]              assume Alloc[newRef] == false;
[L1334]              Alloc[newRef] := true;
[L1335]              assume newRef != null;
[L2679]  RET         call this := FreshRefGenerator__success();
[L2680]              assume now >= 0;
[L2681]              assume DType[this] == AssembleToken;
[L2682]              assume !revert && gas >= 0;
[L2683]  CALL        call CorralChoice_AssembleToken(this);
[L2540]              havoc msgsender_MSG;
[L2541]              havoc msgvalue_MSG;
[L2542]              havoc choice;
[L2543]              havoc __ret_0_owner;
[L2544]              havoc _to_s157;
[L2545]              havoc __ret_0_totalSupply;
[L2546]              havoc _who_s573;
[L2547]              havoc __ret_0_balanceOf;
[L2548]              havoc _to_s632;
[L2549]              havoc _value_s632;
[L2550]              havoc __ret_0_transfer;
[L2551]              havoc _spender_s676;
[L2552]              havoc _value_s676;
[L2553]              havoc __ret_0_approve;
[L2554]              havoc _owner_s692;
[L2555]              havoc _spender_s692;
[L2556]              havoc __ret_0_allowance;
[L2557]              havoc _from_s777;
[L2558]              havoc _to_s777;
[L2559]              havoc _value_s777;
[L2560]              havoc __ret_0_transferFrom;
[L2561]              havoc __ret_0_name;
[L2562]              havoc __ret_0_decimals;
[L2563]              havoc __ret_0_symbol;
[L2564]              havoc __ret_0_maxTotalSupply;
[L2565]              havoc __ret_0_maxSaleSupply;
[L2566]              havoc __ret_0_maxSPSupply;
[L2567]              havoc __ret_0_maxEcoSupply;
[L2568]              havoc __ret_0_maxMktSupply;
[L2569]              havoc __ret_0_maxDevSupply;
[L2570]              havoc __ret_0_maxReserveSupply;
[L2571]              havoc __ret_0_maxTeamSupply;
[L2572]              havoc __ret_0_maxAdvisorSupply;
[L2573]              havoc __ret_0_seedSaleSupply;
[L2574]              havoc __ret_0_privateSaleSupply;
[L2575]              havoc __ret_0_publicSaleSupply;
[L2576]              havoc __ret_0_teamVestingSupply;
[L2577]              havoc __ret_0_teamVestingLockDate;
[L2578]              havoc __ret_0_teamVestingTime;
[L2579]              havoc __ret_0_advisorVestingSupply;
[L2580]              havoc __ret_0_advisorVestingLockDate;
[L2581]              havoc __ret_0_advisorVestingTime;
[L2582]              havoc __ret_0_totalTokenSupply;
[L2583]              havoc __ret_0_tokenIssuedSale;
[L2584]              havoc __ret_0_tokenIssuedSP;
[L2585]              havoc __ret_0_tokenIssuedEco;
[L2586]              havoc __ret_0_tokenIssuedMkt;
[L2587]              havoc __ret_0_tokenIssuedDev;
[L2588]              havoc __ret_0_tokenIssuedRsv;
[L2589]              havoc __ret_0_tokenIssuedTeam;
[L2590]              havoc __ret_0_tokenIssuedAdv;
[L2591]              havoc __ret_0_burnTokenSupply;
[L2592]              havoc arg1677_s0;
[L2593]              havoc __ret_0_balances;
[L2594]              havoc arg1678_s0;
[L2595]              havoc arg1679_s0;
[L2596]              havoc __ret_0_approvals;
[L2597]              havoc arg1680_s0;
[L2598]              havoc __ret_0_tmVestingTimer;
[L2599]              havoc arg1681_s0;
[L2600]              havoc __ret_0_tmVestingBalances;
[L2601]              havoc arg1682_s0;
[L2602]              havoc __ret_0_advVestingTimer;
[L2603]              havoc arg1683_s0;
[L2604]              havoc __ret_0_advVestingBalances;
[L2605]              havoc __ret_0_tokenLock;
[L2606]              havoc __ret_0_saleTime;
[L2607]              havoc __ret_0_endSaleTime;
[L2608]              havoc _to_s831;
[L2609]              havoc _to_s885;
[L2610]              havoc _to_s939;
[L2611]              havoc _to_s993;
[L2612]              havoc _to_s1047;
[L2613]              havoc _to_s1138;
[L2614]              havoc _time_s1138;
[L2615]              havoc _to_s1229;
[L2616]              havoc _time_s1229;
[L2617]              havoc _to_s1277;
[L2618]              havoc _to_s1325;
[L2619]              havoc _to_s1375;
[L2620]              havoc _contract_s1607;
[L2621]              havoc _decimals_s1607;
[L2622]              havoc _value_s1607;
[L2623]              havoc _value_s1663;
[L2624]              havoc tmpNow;
[L2625]              havoc gas;
[L2626]              assume gas > 4000000 && gas <= 8000000;
[L2627]              tmpNow := now;
[L2628]              havoc now;
[L2629]              assume now > tmpNow;
[L2630]              assume msgsender_MSG != null;
[L2631]  COND FALSE  !(choice == 6)
[L2637]  COND FALSE  !(choice == 5)
[L2643]  COND FALSE  !(choice == 4)
[L2650]  COND TRUE   choice == 3
[L2651]              gas := gas - 21000;
[L2652]  COND TRUE   gas >= 0
[L2653]              assume _value_s676 >= 0 && _value_s676 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2654]              assume msgvalue_MSG == 0;
[L2655]  CALL        call __ret_0_approve := approve~address~uint256_AssembleToken(this, msgsender_MSG, msgvalue_MSG, _spender_s676, _value_s676);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != _spender_s676;
[L3]                 call_approve_AssembleToken0 := true;
[L3]                 call_approve_AssembleToken0 := false;
[L3]                 revert := revert_hold;
[L562]               havoc __exception;
[L563]               revert := false;
[L564]   COND FALSE  !(__exception)
[L627]   CALL        call __ret_0_ := approve~address~uint256_AssembleToken__success(this, msgsender_MSG, msgvalue_MSG, _spender_s676, _value_s676);
[L1488]  CALL        call __var_4 := isTransferable_AssembleToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1630]  COND TRUE   tokenLock_AssembleToken[this] == false
[L1631]              __ret_0_ := true;
[L1488]  RET         call __var_4 := isTransferable_AssembleToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1489]  COND FALSE  !(revert)
[L1492]  COND FALSE  !(!(__var_4 == true))
[L1496]  COND FALSE  !(!(balances_AssembleToken[this][msgsender_MSG] >= _value_s676))
[L1500]              sum_approvals1[msgsender_MSG] := sum_approvals1[msgsender_MSG] - approvals_AssembleToken[this][msgsender_MSG][_spender_s676];
[L1501]              approvals_AssembleToken[this][msgsender_MSG][_spender_s676] := _value_s676;
[L1502]              sum_approvals1[msgsender_MSG] := sum_approvals1[msgsender_MSG] + approvals_AssembleToken[this][msgsender_MSG][_spender_s676];
[L1503]              assert { :EventEmitted "Approval_AssembleToken" } true;
[L1504]              __ret_0_ := true;
[L627]   RET         call __ret_0_ := approve~address~uint256_AssembleToken__success(this, msgsender_MSG, msgvalue_MSG, _spender_s676, _value_s676);
[L628]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !((((((((((((((((((((((((__ret_0_ == true && approvals_AssembleToken[this][msgsender_MSG][_spender_s676] == _value_s676) && totalTokenSupply_AssembleToken[this] == old(totalTokenSupply_AssembleToken[this])) && balances_AssembleToken[this] == old(balances_AssembleToken[this])) && approvals_AssembleToken[this][p1][p2] == old(approvals_AssembleToken[this][p1][p2])) && name_AssembleToken[this] == old(name_AssembleToken[this])) && decimals_AssembleToken[this] == old(decimals_AssembleToken[this])) && symbol_AssembleToken[this] == old(symbol_AssembleToken[this])) && tokenIssuedSale_AssembleToken[this] == old(tokenIssuedSale_AssembleToken[this])) && tokenIssuedSP_AssembleToken[this] == old(tokenIssuedSP_AssembleToken[this])) && tokenIssuedEco_AssembleToken[this] == old(tokenIssuedEco_AssembleToken[this])) && tokenIssuedMkt_AssembleToken[this] == old(tokenIssuedMkt_AssembleToken[this])) && tokenIssuedDev_AssembleToken[this] == old(tokenIssuedDev_AssembleToken[this])) && tokenIssuedRsv_AssembleToken[this] == old(tokenIssuedRsv_AssembleToken[this])) && tokenIssuedTeam_AssembleToken[this] == old(tokenIssuedTeam_AssembleToken[this])) && tokenIssuedAdv_AssembleToken[this] == old(tokenIssuedAdv_AssembleToken[this])) && burnTokenSupply_AssembleToken[this] == old(burnTokenSupply_AssembleToken[this])) && tmVestingTimer_AssembleToken[this] == old(tmVestingTimer_AssembleToken[this])) && tmVestingBalances_AssembleToken[this] == old(tmVestingBalances_AssembleToken[this])) && advVestingTimer_AssembleToken[this] == old(advVestingTimer_AssembleToken[this])) && advVestingBalances_AssembleToken[this] == old(advVestingBalances_AssembleToken[this])) && tokenLock_AssembleToken[this] == old(tokenLock_AssembleToken[this])) && saleTime_AssembleToken[this] == old(saleTime_AssembleToken[this])) && endSaleTime_AssembleToken[this] == old(endSaleTime_AssembleToken[this])) && owner_OwnerHelper[this] == old(owner_OwnerHelper[this]));
[L3]                 revert := revert_hold;
[L2655]  RET         call __ret_0_approve := approve~address~uint256_AssembleToken(this, msgsender_MSG, msgvalue_MSG, _spender_s676, _value_s676);
[L2683]  RET         call CorralChoice_AssembleToken(this);

Loop:
[L2683]        assume true;

[2020-11-24 15:36:04,251 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 15:36:04,251 INFO  L82        PathProgramCache]: Analyzing trace with hash 669271049, now seen corresponding path program 1 times
[2020-11-24 15:36:04,252 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 15:36:04,275 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 15:36:04,370 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 15:36:04,370 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 15:36:04,370 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [7] imperfect sequences [] total 7
[2020-11-24 15:36:04,371 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 15:36:04,371 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 7 interpolants.
[2020-11-24 15:36:04,371 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=13, Invalid=29, Unknown=0, NotChecked=0, Total=42
[2020-11-24 15:36:04,371 INFO  L87              Difference]: Start difference. First operand 249 states and 257 transitions. cyclomatic complexity: 9 Second operand 7 states.
[2020-11-24 15:36:04,434 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 15:36:04,434 INFO  L93              Difference]: Finished difference Result 248 states and 255 transitions.
[2020-11-24 15:36:04,435 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 7 states. 
[2020-11-24 15:36:04,435 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 248 states and 255 transitions.
[2020-11-24 15:36:04,436 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 15:36:04,437 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 248 states to 221 states and 226 transitions.
[2020-11-24 15:36:04,438 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 221
[2020-11-24 15:36:04,438 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 221
[2020-11-24 15:36:04,438 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 221 states and 226 transitions.
[2020-11-24 15:36:04,438 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 15:36:04,439 INFO  L728         BuchiCegarLoop]: Abstraction has 221 states and 226 transitions.
[2020-11-24 15:36:04,439 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 221 states and 226 transitions.
[2020-11-24 15:36:04,442 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 221 to 221.
[2020-11-24 15:36:04,442 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 221 states.
[2020-11-24 15:36:04,443 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 221 states to 221 states and 226 transitions.
[2020-11-24 15:36:04,443 INFO  L751         BuchiCegarLoop]: Abstraction has 221 states and 226 transitions.
[2020-11-24 15:36:04,443 INFO  L631         BuchiCegarLoop]: Abstraction has 221 states and 226 transitions.
[2020-11-24 15:36:04,443 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-24 15:36:04,443 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 221 states and 226 transitions.
[2020-11-24 15:36:04,444 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 15:36:04,444 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 15:36:04,444 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 15:36:04,445 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 15:36:04,446 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L3]                 success_approve_AssembleToken0 := false;
[L3]                 call_approve_AssembleToken0 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L2678]              assume null == 0;
[L2679]  CALL        call this := FreshRefGenerator__success();
[L1332]              havoc newRef;
[L1333]              assume Alloc[newRef] == false;
[L1334]              Alloc[newRef] := true;
[L1335]              assume newRef != null;
[L2679]  RET         call this := FreshRefGenerator__success();
[L2680]              assume now >= 0;
[L2681]              assume DType[this] == AssembleToken;
[L2682]              assume !revert && gas >= 0;
[L2683]  CALL        call CorralChoice_AssembleToken(this);
[L2540]              havoc msgsender_MSG;
[L2541]              havoc msgvalue_MSG;
[L2542]              havoc choice;
[L2543]              havoc __ret_0_owner;
[L2544]              havoc _to_s157;
[L2545]              havoc __ret_0_totalSupply;
[L2546]              havoc _who_s573;
[L2547]              havoc __ret_0_balanceOf;
[L2548]              havoc _to_s632;
[L2549]              havoc _value_s632;
[L2550]              havoc __ret_0_transfer;
[L2551]              havoc _spender_s676;
[L2552]              havoc _value_s676;
[L2553]              havoc __ret_0_approve;
[L2554]              havoc _owner_s692;
[L2555]              havoc _spender_s692;
[L2556]              havoc __ret_0_allowance;
[L2557]              havoc _from_s777;
[L2558]              havoc _to_s777;
[L2559]              havoc _value_s777;
[L2560]              havoc __ret_0_transferFrom;
[L2561]              havoc __ret_0_name;
[L2562]              havoc __ret_0_decimals;
[L2563]              havoc __ret_0_symbol;
[L2564]              havoc __ret_0_maxTotalSupply;
[L2565]              havoc __ret_0_maxSaleSupply;
[L2566]              havoc __ret_0_maxSPSupply;
[L2567]              havoc __ret_0_maxEcoSupply;
[L2568]              havoc __ret_0_maxMktSupply;
[L2569]              havoc __ret_0_maxDevSupply;
[L2570]              havoc __ret_0_maxReserveSupply;
[L2571]              havoc __ret_0_maxTeamSupply;
[L2572]              havoc __ret_0_maxAdvisorSupply;
[L2573]              havoc __ret_0_seedSaleSupply;
[L2574]              havoc __ret_0_privateSaleSupply;
[L2575]              havoc __ret_0_publicSaleSupply;
[L2576]              havoc __ret_0_teamVestingSupply;
[L2577]              havoc __ret_0_teamVestingLockDate;
[L2578]              havoc __ret_0_teamVestingTime;
[L2579]              havoc __ret_0_advisorVestingSupply;
[L2580]              havoc __ret_0_advisorVestingLockDate;
[L2581]              havoc __ret_0_advisorVestingTime;
[L2582]              havoc __ret_0_totalTokenSupply;
[L2583]              havoc __ret_0_tokenIssuedSale;
[L2584]              havoc __ret_0_tokenIssuedSP;
[L2585]              havoc __ret_0_tokenIssuedEco;
[L2586]              havoc __ret_0_tokenIssuedMkt;
[L2587]              havoc __ret_0_tokenIssuedDev;
[L2588]              havoc __ret_0_tokenIssuedRsv;
[L2589]              havoc __ret_0_tokenIssuedTeam;
[L2590]              havoc __ret_0_tokenIssuedAdv;
[L2591]              havoc __ret_0_burnTokenSupply;
[L2592]              havoc arg1677_s0;
[L2593]              havoc __ret_0_balances;
[L2594]              havoc arg1678_s0;
[L2595]              havoc arg1679_s0;
[L2596]              havoc __ret_0_approvals;
[L2597]              havoc arg1680_s0;
[L2598]              havoc __ret_0_tmVestingTimer;
[L2599]              havoc arg1681_s0;
[L2600]              havoc __ret_0_tmVestingBalances;
[L2601]              havoc arg1682_s0;
[L2602]              havoc __ret_0_advVestingTimer;
[L2603]              havoc arg1683_s0;
[L2604]              havoc __ret_0_advVestingBalances;
[L2605]              havoc __ret_0_tokenLock;
[L2606]              havoc __ret_0_saleTime;
[L2607]              havoc __ret_0_endSaleTime;
[L2608]              havoc _to_s831;
[L2609]              havoc _to_s885;
[L2610]              havoc _to_s939;
[L2611]              havoc _to_s993;
[L2612]              havoc _to_s1047;
[L2613]              havoc _to_s1138;
[L2614]              havoc _time_s1138;
[L2615]              havoc _to_s1229;
[L2616]              havoc _time_s1229;
[L2617]              havoc _to_s1277;
[L2618]              havoc _to_s1325;
[L2619]              havoc _to_s1375;
[L2620]              havoc _contract_s1607;
[L2621]              havoc _decimals_s1607;
[L2622]              havoc _value_s1607;
[L2623]              havoc _value_s1663;
[L2624]              havoc tmpNow;
[L2625]              havoc gas;
[L2626]              assume gas > 4000000 && gas <= 8000000;
[L2627]              tmpNow := now;
[L2628]              havoc now;
[L2629]              assume now > tmpNow;
[L2630]              assume msgsender_MSG != null;
[L2631]  COND FALSE  !(choice == 6)
[L2637]  COND FALSE  !(choice == 5)
[L2643]  COND FALSE  !(choice == 4)
[L2650]  COND TRUE   choice == 3
[L2651]              gas := gas - 21000;
[L2652]  COND TRUE   gas >= 0
[L2653]              assume _value_s676 >= 0 && _value_s676 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2654]              assume msgvalue_MSG == 0;
[L2655]  CALL        call __ret_0_approve := approve~address~uint256_AssembleToken(this, msgsender_MSG, msgvalue_MSG, _spender_s676, _value_s676);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != _spender_s676;
[L3]                 call_approve_AssembleToken0 := true;
[L3]                 call_approve_AssembleToken0 := false;
[L3]                 revert := revert_hold;
[L562]               havoc __exception;
[L563]               revert := false;
[L564]   COND TRUE   __exception
[L565]               __tmp__Balance := Balance;
[L566]               __tmp__DType := DType;
[L567]               __tmp__Alloc := Alloc;
[L568]               __tmp__balance_ADDR := balance_ADDR;
[L569]               __tmp__M_Ref_int := M_Ref_int;
[L570]               __tmp__sum_balances0 := sum_balances0;
[L571]               __tmp__alloc_approvals_AssembleToken_lvl0 := alloc_approvals_AssembleToken_lvl0;
[L572]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L573]               __tmp__sum_approvals1 := sum_approvals1;
[L574]               __tmp__M_int_int := M_int_int;
[L575]               __tmp__sum_tmVestingTimer2 := sum_tmVestingTimer2;
[L576]               __tmp__sum_tmVestingBalances3 := sum_tmVestingBalances3;
[L577]               __tmp__sum_advVestingTimer4 := sum_advVestingTimer4;
[L578]               __tmp__sum_advVestingBalances5 := sum_advVestingBalances5;
[L579]               __tmp__Length := Length;
[L580]               __tmp__now := now;
[L581]               __tmp__owner_OwnerHelper := owner_OwnerHelper;
[L582]               __tmp__name_AssembleToken := name_AssembleToken;
[L583]               __tmp__decimals_AssembleToken := decimals_AssembleToken;
[L584]               __tmp__symbol_AssembleToken := symbol_AssembleToken;
[L585]               __tmp__E18_AssembleToken := E18_AssembleToken;
[L586]               __tmp__month_AssembleToken := month_AssembleToken;
[L587]               __tmp__maxTotalSupply_AssembleToken := maxTotalSupply_AssembleToken;
[L588]               __tmp__maxSaleSupply_AssembleToken := maxSaleSupply_AssembleToken;
[L589]               __tmp__maxSPSupply_AssembleToken := maxSPSupply_AssembleToken;
[L590]               __tmp__maxEcoSupply_AssembleToken := maxEcoSupply_AssembleToken;
[L591]               __tmp__maxMktSupply_AssembleToken := maxMktSupply_AssembleToken;
[L592]               __tmp__maxDevSupply_AssembleToken := maxDevSupply_AssembleToken;
[L593]               __tmp__maxReserveSupply_AssembleToken := maxReserveSupply_AssembleToken;
[L594]               __tmp__maxTeamSupply_AssembleToken := maxTeamSupply_AssembleToken;
[L595]               __tmp__maxAdvisorSupply_AssembleToken := maxAdvisorSupply_AssembleToken;
[L596]               __tmp__seedSaleSupply_AssembleToken := seedSaleSupply_AssembleToken;
[L597]               __tmp__privateSaleSupply_AssembleToken := privateSaleSupply_AssembleToken;
[L598]               __tmp__publicSaleSupply_AssembleToken := publicSaleSupply_AssembleToken;
[L599]               __tmp__teamVestingSupply_AssembleToken := teamVestingSupply_AssembleToken;
[L600]               __tmp__teamVestingLockDate_AssembleToken := teamVestingLockDate_AssembleToken;
[L601]               __tmp__teamVestingTime_AssembleToken := teamVestingTime_AssembleToken;
[L602]               __tmp__advisorVestingSupply_AssembleToken := advisorVestingSupply_AssembleToken;
[L603]               __tmp__advisorVestingLockDate_AssembleToken := advisorVestingLockDate_AssembleToken;
[L604]               __tmp__advisorVestingTime_AssembleToken := advisorVestingTime_AssembleToken;
[L605]               __tmp__totalTokenSupply_AssembleToken := totalTokenSupply_AssembleToken;
[L606]               __tmp__tokenIssuedSale_AssembleToken := tokenIssuedSale_AssembleToken;
[L607]               __tmp__tokenIssuedSP_AssembleToken := tokenIssuedSP_AssembleToken;
[L608]               __tmp__tokenIssuedEco_AssembleToken := tokenIssuedEco_AssembleToken;
[L609]               __tmp__tokenIssuedMkt_AssembleToken := tokenIssuedMkt_AssembleToken;
[L610]               __tmp__tokenIssuedDev_AssembleToken := tokenIssuedDev_AssembleToken;
[L611]               __tmp__tokenIssuedRsv_AssembleToken := tokenIssuedRsv_AssembleToken;
[L612]               __tmp__tokenIssuedTeam_AssembleToken := tokenIssuedTeam_AssembleToken;
[L613]               __tmp__tokenIssuedAdv_AssembleToken := tokenIssuedAdv_AssembleToken;
[L614]               __tmp__burnTokenSupply_AssembleToken := burnTokenSupply_AssembleToken;
[L615]               __tmp__balances_AssembleToken := balances_AssembleToken;
[L616]               __tmp__approvals_AssembleToken := approvals_AssembleToken;
[L617]               __tmp__tmVestingTimer_AssembleToken := tmVestingTimer_AssembleToken;
[L618]               __tmp__tmVestingBalances_AssembleToken := tmVestingBalances_AssembleToken;
[L619]               __tmp__advVestingTimer_AssembleToken := advVestingTimer_AssembleToken;
[L620]               __tmp__advVestingBalances_AssembleToken := advVestingBalances_AssembleToken;
[L621]               __tmp__tokenLock_AssembleToken := tokenLock_AssembleToken;
[L622]               __tmp__saleTime_AssembleToken := saleTime_AssembleToken;
[L623]               __tmp__endSaleTime_AssembleToken := endSaleTime_AssembleToken;
[L624]   CALL        call __ret_0_ := approve~address~uint256_AssembleToken__fail(this, msgsender_MSG, msgvalue_MSG, _spender_s676, _value_s676);
[L1466]  CALL        call __var_4 := isTransferable_AssembleToken__fail(this, msgsender_MSG, msgvalue_MSG);
[L1617]  COND TRUE   __tmp__tokenLock_AssembleToken[this] == false
[L1618]              __ret_0_ := true;
[L1466]  RET         call __var_4 := isTransferable_AssembleToken__fail(this, msgsender_MSG, msgvalue_MSG);
[L1467]  COND TRUE   revert
[L624]   RET         call __ret_0_ := approve~address~uint256_AssembleToken__fail(this, msgsender_MSG, msgvalue_MSG, _spender_s676, _value_s676);
[L625]               assume revert || gas < 0;
[L2655]  RET         call __ret_0_approve := approve~address~uint256_AssembleToken(this, msgsender_MSG, msgvalue_MSG, _spender_s676, _value_s676);
[L2683]  RET         call CorralChoice_AssembleToken(this);

Loop:
[L2683]        assume true;

[2020-11-24 15:36:04,448 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 15:36:04,449 INFO  L82        PathProgramCache]: Analyzing trace with hash 831423196, now seen corresponding path program 1 times
[2020-11-24 15:36:04,449 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 15:36:04,462 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 15:36:04,497 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 15:36:04,497 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 15:36:04,497 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [5] imperfect sequences [] total 5
[2020-11-24 15:36:04,498 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 15:36:04,498 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 5 interpolants.
[2020-11-24 15:36:04,498 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=9, Invalid=11, Unknown=0, NotChecked=0, Total=20
[2020-11-24 15:36:04,498 INFO  L87              Difference]: Start difference. First operand 221 states and 226 transitions. cyclomatic complexity: 6 Second operand 5 states.
[2020-11-24 15:36:04,513 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 15:36:04,513 INFO  L93              Difference]: Finished difference Result 232 states and 236 transitions.
[2020-11-24 15:36:04,513 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-24 15:36:04,513 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 232 states and 236 transitions.
[2020-11-24 15:36:04,515 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 2
[2020-11-24 15:36:04,516 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 232 states to 232 states and 236 transitions.
[2020-11-24 15:36:04,516 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 232
[2020-11-24 15:36:04,516 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 232
[2020-11-24 15:36:04,516 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 232 states and 236 transitions.
[2020-11-24 15:36:04,516 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 15:36:04,516 INFO  L728         BuchiCegarLoop]: Abstraction has 232 states and 236 transitions.
[2020-11-24 15:36:04,517 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 232 states and 236 transitions.
[2020-11-24 15:36:04,519 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 232 to 221.
[2020-11-24 15:36:04,519 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 221 states.
[2020-11-24 15:36:04,519 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 221 states to 221 states and 225 transitions.
[2020-11-24 15:36:04,519 INFO  L751         BuchiCegarLoop]: Abstraction has 221 states and 225 transitions.
[2020-11-24 15:36:04,519 INFO  L631         BuchiCegarLoop]: Abstraction has 221 states and 225 transitions.
[2020-11-24 15:36:04,519 INFO  L445         BuchiCegarLoop]: ======== Iteration 5============
[2020-11-24 15:36:04,519 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 221 states and 225 transitions.
[2020-11-24 15:36:04,520 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 15:36:04,520 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 15:36:04,520 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 15:36:04,522 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 15:36:04,522 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L3]                 success_approve_AssembleToken0 := false;
[L3]                 call_approve_AssembleToken0 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L2678]              assume null == 0;
[L2679]  CALL        call this := FreshRefGenerator__success();
[L1332]              havoc newRef;
[L1333]              assume Alloc[newRef] == false;
[L1334]              Alloc[newRef] := true;
[L1335]              assume newRef != null;
[L2679]  RET         call this := FreshRefGenerator__success();
[L2680]              assume now >= 0;
[L2681]              assume DType[this] == AssembleToken;
[L2682]              assume !revert && gas >= 0;
[L2683]  CALL        call CorralChoice_AssembleToken(this);
[L2540]              havoc msgsender_MSG;
[L2541]              havoc msgvalue_MSG;
[L2542]              havoc choice;
[L2543]              havoc __ret_0_owner;
[L2544]              havoc _to_s157;
[L2545]              havoc __ret_0_totalSupply;
[L2546]              havoc _who_s573;
[L2547]              havoc __ret_0_balanceOf;
[L2548]              havoc _to_s632;
[L2549]              havoc _value_s632;
[L2550]              havoc __ret_0_transfer;
[L2551]              havoc _spender_s676;
[L2552]              havoc _value_s676;
[L2553]              havoc __ret_0_approve;
[L2554]              havoc _owner_s692;
[L2555]              havoc _spender_s692;
[L2556]              havoc __ret_0_allowance;
[L2557]              havoc _from_s777;
[L2558]              havoc _to_s777;
[L2559]              havoc _value_s777;
[L2560]              havoc __ret_0_transferFrom;
[L2561]              havoc __ret_0_name;
[L2562]              havoc __ret_0_decimals;
[L2563]              havoc __ret_0_symbol;
[L2564]              havoc __ret_0_maxTotalSupply;
[L2565]              havoc __ret_0_maxSaleSupply;
[L2566]              havoc __ret_0_maxSPSupply;
[L2567]              havoc __ret_0_maxEcoSupply;
[L2568]              havoc __ret_0_maxMktSupply;
[L2569]              havoc __ret_0_maxDevSupply;
[L2570]              havoc __ret_0_maxReserveSupply;
[L2571]              havoc __ret_0_maxTeamSupply;
[L2572]              havoc __ret_0_maxAdvisorSupply;
[L2573]              havoc __ret_0_seedSaleSupply;
[L2574]              havoc __ret_0_privateSaleSupply;
[L2575]              havoc __ret_0_publicSaleSupply;
[L2576]              havoc __ret_0_teamVestingSupply;
[L2577]              havoc __ret_0_teamVestingLockDate;
[L2578]              havoc __ret_0_teamVestingTime;
[L2579]              havoc __ret_0_advisorVestingSupply;
[L2580]              havoc __ret_0_advisorVestingLockDate;
[L2581]              havoc __ret_0_advisorVestingTime;
[L2582]              havoc __ret_0_totalTokenSupply;
[L2583]              havoc __ret_0_tokenIssuedSale;
[L2584]              havoc __ret_0_tokenIssuedSP;
[L2585]              havoc __ret_0_tokenIssuedEco;
[L2586]              havoc __ret_0_tokenIssuedMkt;
[L2587]              havoc __ret_0_tokenIssuedDev;
[L2588]              havoc __ret_0_tokenIssuedRsv;
[L2589]              havoc __ret_0_tokenIssuedTeam;
[L2590]              havoc __ret_0_tokenIssuedAdv;
[L2591]              havoc __ret_0_burnTokenSupply;
[L2592]              havoc arg1677_s0;
[L2593]              havoc __ret_0_balances;
[L2594]              havoc arg1678_s0;
[L2595]              havoc arg1679_s0;
[L2596]              havoc __ret_0_approvals;
[L2597]              havoc arg1680_s0;
[L2598]              havoc __ret_0_tmVestingTimer;
[L2599]              havoc arg1681_s0;
[L2600]              havoc __ret_0_tmVestingBalances;
[L2601]              havoc arg1682_s0;
[L2602]              havoc __ret_0_advVestingTimer;
[L2603]              havoc arg1683_s0;
[L2604]              havoc __ret_0_advVestingBalances;
[L2605]              havoc __ret_0_tokenLock;
[L2606]              havoc __ret_0_saleTime;
[L2607]              havoc __ret_0_endSaleTime;
[L2608]              havoc _to_s831;
[L2609]              havoc _to_s885;
[L2610]              havoc _to_s939;
[L2611]              havoc _to_s993;
[L2612]              havoc _to_s1047;
[L2613]              havoc _to_s1138;
[L2614]              havoc _time_s1138;
[L2615]              havoc _to_s1229;
[L2616]              havoc _time_s1229;
[L2617]              havoc _to_s1277;
[L2618]              havoc _to_s1325;
[L2619]              havoc _to_s1375;
[L2620]              havoc _contract_s1607;
[L2621]              havoc _decimals_s1607;
[L2622]              havoc _value_s1607;
[L2623]              havoc _value_s1663;
[L2624]              havoc tmpNow;
[L2625]              havoc gas;
[L2626]              assume gas > 4000000 && gas <= 8000000;
[L2627]              tmpNow := now;
[L2628]              havoc now;
[L2629]              assume now > tmpNow;
[L2630]              assume msgsender_MSG != null;
[L2631]  COND FALSE  !(choice == 6)
[L2637]  COND FALSE  !(choice == 5)
[L2643]  COND FALSE  !(choice == 4)
[L2650]  COND TRUE   choice == 3
[L2651]              gas := gas - 21000;
[L2652]  COND TRUE   gas >= 0
[L2653]              assume _value_s676 >= 0 && _value_s676 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2654]              assume msgvalue_MSG == 0;
[L2655]  CALL        call __ret_0_approve := approve~address~uint256_AssembleToken(this, msgsender_MSG, msgvalue_MSG, _spender_s676, _value_s676);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != _spender_s676;
[L3]                 call_approve_AssembleToken0 := true;
[L3]                 call_approve_AssembleToken0 := false;
[L3]                 revert := revert_hold;
[L562]               havoc __exception;
[L563]               revert := false;
[L564]   COND TRUE   __exception
[L565]               __tmp__Balance := Balance;
[L566]               __tmp__DType := DType;
[L567]               __tmp__Alloc := Alloc;
[L568]               __tmp__balance_ADDR := balance_ADDR;
[L569]               __tmp__M_Ref_int := M_Ref_int;
[L570]               __tmp__sum_balances0 := sum_balances0;
[L571]               __tmp__alloc_approvals_AssembleToken_lvl0 := alloc_approvals_AssembleToken_lvl0;
[L572]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L573]               __tmp__sum_approvals1 := sum_approvals1;
[L574]               __tmp__M_int_int := M_int_int;
[L575]               __tmp__sum_tmVestingTimer2 := sum_tmVestingTimer2;
[L576]               __tmp__sum_tmVestingBalances3 := sum_tmVestingBalances3;
[L577]               __tmp__sum_advVestingTimer4 := sum_advVestingTimer4;
[L578]               __tmp__sum_advVestingBalances5 := sum_advVestingBalances5;
[L579]               __tmp__Length := Length;
[L580]               __tmp__now := now;
[L581]               __tmp__owner_OwnerHelper := owner_OwnerHelper;
[L582]               __tmp__name_AssembleToken := name_AssembleToken;
[L583]               __tmp__decimals_AssembleToken := decimals_AssembleToken;
[L584]               __tmp__symbol_AssembleToken := symbol_AssembleToken;
[L585]               __tmp__E18_AssembleToken := E18_AssembleToken;
[L586]               __tmp__month_AssembleToken := month_AssembleToken;
[L587]               __tmp__maxTotalSupply_AssembleToken := maxTotalSupply_AssembleToken;
[L588]               __tmp__maxSaleSupply_AssembleToken := maxSaleSupply_AssembleToken;
[L589]               __tmp__maxSPSupply_AssembleToken := maxSPSupply_AssembleToken;
[L590]               __tmp__maxEcoSupply_AssembleToken := maxEcoSupply_AssembleToken;
[L591]               __tmp__maxMktSupply_AssembleToken := maxMktSupply_AssembleToken;
[L592]               __tmp__maxDevSupply_AssembleToken := maxDevSupply_AssembleToken;
[L593]               __tmp__maxReserveSupply_AssembleToken := maxReserveSupply_AssembleToken;
[L594]               __tmp__maxTeamSupply_AssembleToken := maxTeamSupply_AssembleToken;
[L595]               __tmp__maxAdvisorSupply_AssembleToken := maxAdvisorSupply_AssembleToken;
[L596]               __tmp__seedSaleSupply_AssembleToken := seedSaleSupply_AssembleToken;
[L597]               __tmp__privateSaleSupply_AssembleToken := privateSaleSupply_AssembleToken;
[L598]               __tmp__publicSaleSupply_AssembleToken := publicSaleSupply_AssembleToken;
[L599]               __tmp__teamVestingSupply_AssembleToken := teamVestingSupply_AssembleToken;
[L600]               __tmp__teamVestingLockDate_AssembleToken := teamVestingLockDate_AssembleToken;
[L601]               __tmp__teamVestingTime_AssembleToken := teamVestingTime_AssembleToken;
[L602]               __tmp__advisorVestingSupply_AssembleToken := advisorVestingSupply_AssembleToken;
[L603]               __tmp__advisorVestingLockDate_AssembleToken := advisorVestingLockDate_AssembleToken;
[L604]               __tmp__advisorVestingTime_AssembleToken := advisorVestingTime_AssembleToken;
[L605]               __tmp__totalTokenSupply_AssembleToken := totalTokenSupply_AssembleToken;
[L606]               __tmp__tokenIssuedSale_AssembleToken := tokenIssuedSale_AssembleToken;
[L607]               __tmp__tokenIssuedSP_AssembleToken := tokenIssuedSP_AssembleToken;
[L608]               __tmp__tokenIssuedEco_AssembleToken := tokenIssuedEco_AssembleToken;
[L609]               __tmp__tokenIssuedMkt_AssembleToken := tokenIssuedMkt_AssembleToken;
[L610]               __tmp__tokenIssuedDev_AssembleToken := tokenIssuedDev_AssembleToken;
[L611]               __tmp__tokenIssuedRsv_AssembleToken := tokenIssuedRsv_AssembleToken;
[L612]               __tmp__tokenIssuedTeam_AssembleToken := tokenIssuedTeam_AssembleToken;
[L613]               __tmp__tokenIssuedAdv_AssembleToken := tokenIssuedAdv_AssembleToken;
[L614]               __tmp__burnTokenSupply_AssembleToken := burnTokenSupply_AssembleToken;
[L615]               __tmp__balances_AssembleToken := balances_AssembleToken;
[L616]               __tmp__approvals_AssembleToken := approvals_AssembleToken;
[L617]               __tmp__tmVestingTimer_AssembleToken := tmVestingTimer_AssembleToken;
[L618]               __tmp__tmVestingBalances_AssembleToken := tmVestingBalances_AssembleToken;
[L619]               __tmp__advVestingTimer_AssembleToken := advVestingTimer_AssembleToken;
[L620]               __tmp__advVestingBalances_AssembleToken := advVestingBalances_AssembleToken;
[L621]               __tmp__tokenLock_AssembleToken := tokenLock_AssembleToken;
[L622]               __tmp__saleTime_AssembleToken := saleTime_AssembleToken;
[L623]               __tmp__endSaleTime_AssembleToken := endSaleTime_AssembleToken;
[L624]   CALL        call __ret_0_ := approve~address~uint256_AssembleToken__fail(this, msgsender_MSG, msgvalue_MSG, _spender_s676, _value_s676);
[L1466]  CALL        call __var_4 := isTransferable_AssembleToken__fail(this, msgsender_MSG, msgvalue_MSG);
[L1617]  COND TRUE   __tmp__tokenLock_AssembleToken[this] == false
[L1618]              __ret_0_ := true;
[L1466]  RET         call __var_4 := isTransferable_AssembleToken__fail(this, msgsender_MSG, msgvalue_MSG);
[L1467]  COND FALSE  !(revert)
[L1470]  COND TRUE   !(__var_4 == true)
[L1471]              revert := true;
[L624]   RET         call __ret_0_ := approve~address~uint256_AssembleToken__fail(this, msgsender_MSG, msgvalue_MSG, _spender_s676, _value_s676);
[L625]               assume revert || gas < 0;
[L2655]  RET         call __ret_0_approve := approve~address~uint256_AssembleToken(this, msgsender_MSG, msgvalue_MSG, _spender_s676, _value_s676);
[L2683]  RET         call CorralChoice_AssembleToken(this);

Loop:
[L2683]        assume true;

[2020-11-24 15:36:04,525 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 15:36:04,525 INFO  L82        PathProgramCache]: Analyzing trace with hash -1115420383, now seen corresponding path program 1 times
[2020-11-24 15:36:04,526 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 15:36:04,538 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 15:36:04,579 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 15:36:04,580 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 15:36:04,580 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-24 15:36:04,580 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 15:36:04,580 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-24 15:36:04,580 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-24 15:36:04,581 INFO  L87              Difference]: Start difference. First operand 221 states and 225 transitions. cyclomatic complexity: 5 Second operand 4 states.
[2020-11-24 15:36:04,584 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 15:36:04,584 INFO  L93              Difference]: Finished difference Result 228 states and 232 transitions.
[2020-11-24 15:36:04,584 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-24 15:36:04,585 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 228 states and 232 transitions.
[2020-11-24 15:36:04,586 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 15:36:04,587 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 228 states to 228 states and 232 transitions.
[2020-11-24 15:36:04,587 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 228
[2020-11-24 15:36:04,588 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 228
[2020-11-24 15:36:04,588 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 228 states and 232 transitions.
[2020-11-24 15:36:04,588 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 15:36:04,588 INFO  L728         BuchiCegarLoop]: Abstraction has 228 states and 232 transitions.
[2020-11-24 15:36:04,588 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 228 states and 232 transitions.
[2020-11-24 15:36:04,591 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 228 to 226.
[2020-11-24 15:36:04,591 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 226 states.
[2020-11-24 15:36:04,592 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 226 states to 226 states and 230 transitions.
[2020-11-24 15:36:04,592 INFO  L751         BuchiCegarLoop]: Abstraction has 226 states and 230 transitions.
[2020-11-24 15:36:04,592 INFO  L631         BuchiCegarLoop]: Abstraction has 226 states and 230 transitions.
[2020-11-24 15:36:04,592 INFO  L445         BuchiCegarLoop]: ======== Iteration 6============
[2020-11-24 15:36:04,592 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 226 states and 230 transitions.
[2020-11-24 15:36:04,593 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 15:36:04,593 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 15:36:04,593 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 15:36:04,595 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 15:36:04,595 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L3]                 success_approve_AssembleToken0 := false;
[L3]                 call_approve_AssembleToken0 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L2678]              assume null == 0;
[L2679]  CALL        call this := FreshRefGenerator__success();
[L1332]              havoc newRef;
[L1333]              assume Alloc[newRef] == false;
[L1334]              Alloc[newRef] := true;
[L1335]              assume newRef != null;
[L2679]  RET         call this := FreshRefGenerator__success();
[L2680]              assume now >= 0;
[L2681]              assume DType[this] == AssembleToken;
[L2682]              assume !revert && gas >= 0;
[L2683]  CALL        call CorralChoice_AssembleToken(this);
[L2540]              havoc msgsender_MSG;
[L2541]              havoc msgvalue_MSG;
[L2542]              havoc choice;
[L2543]              havoc __ret_0_owner;
[L2544]              havoc _to_s157;
[L2545]              havoc __ret_0_totalSupply;
[L2546]              havoc _who_s573;
[L2547]              havoc __ret_0_balanceOf;
[L2548]              havoc _to_s632;
[L2549]              havoc _value_s632;
[L2550]              havoc __ret_0_transfer;
[L2551]              havoc _spender_s676;
[L2552]              havoc _value_s676;
[L2553]              havoc __ret_0_approve;
[L2554]              havoc _owner_s692;
[L2555]              havoc _spender_s692;
[L2556]              havoc __ret_0_allowance;
[L2557]              havoc _from_s777;
[L2558]              havoc _to_s777;
[L2559]              havoc _value_s777;
[L2560]              havoc __ret_0_transferFrom;
[L2561]              havoc __ret_0_name;
[L2562]              havoc __ret_0_decimals;
[L2563]              havoc __ret_0_symbol;
[L2564]              havoc __ret_0_maxTotalSupply;
[L2565]              havoc __ret_0_maxSaleSupply;
[L2566]              havoc __ret_0_maxSPSupply;
[L2567]              havoc __ret_0_maxEcoSupply;
[L2568]              havoc __ret_0_maxMktSupply;
[L2569]              havoc __ret_0_maxDevSupply;
[L2570]              havoc __ret_0_maxReserveSupply;
[L2571]              havoc __ret_0_maxTeamSupply;
[L2572]              havoc __ret_0_maxAdvisorSupply;
[L2573]              havoc __ret_0_seedSaleSupply;
[L2574]              havoc __ret_0_privateSaleSupply;
[L2575]              havoc __ret_0_publicSaleSupply;
[L2576]              havoc __ret_0_teamVestingSupply;
[L2577]              havoc __ret_0_teamVestingLockDate;
[L2578]              havoc __ret_0_teamVestingTime;
[L2579]              havoc __ret_0_advisorVestingSupply;
[L2580]              havoc __ret_0_advisorVestingLockDate;
[L2581]              havoc __ret_0_advisorVestingTime;
[L2582]              havoc __ret_0_totalTokenSupply;
[L2583]              havoc __ret_0_tokenIssuedSale;
[L2584]              havoc __ret_0_tokenIssuedSP;
[L2585]              havoc __ret_0_tokenIssuedEco;
[L2586]              havoc __ret_0_tokenIssuedMkt;
[L2587]              havoc __ret_0_tokenIssuedDev;
[L2588]              havoc __ret_0_tokenIssuedRsv;
[L2589]              havoc __ret_0_tokenIssuedTeam;
[L2590]              havoc __ret_0_tokenIssuedAdv;
[L2591]              havoc __ret_0_burnTokenSupply;
[L2592]              havoc arg1677_s0;
[L2593]              havoc __ret_0_balances;
[L2594]              havoc arg1678_s0;
[L2595]              havoc arg1679_s0;
[L2596]              havoc __ret_0_approvals;
[L2597]              havoc arg1680_s0;
[L2598]              havoc __ret_0_tmVestingTimer;
[L2599]              havoc arg1681_s0;
[L2600]              havoc __ret_0_tmVestingBalances;
[L2601]              havoc arg1682_s0;
[L2602]              havoc __ret_0_advVestingTimer;
[L2603]              havoc arg1683_s0;
[L2604]              havoc __ret_0_advVestingBalances;
[L2605]              havoc __ret_0_tokenLock;
[L2606]              havoc __ret_0_saleTime;
[L2607]              havoc __ret_0_endSaleTime;
[L2608]              havoc _to_s831;
[L2609]              havoc _to_s885;
[L2610]              havoc _to_s939;
[L2611]              havoc _to_s993;
[L2612]              havoc _to_s1047;
[L2613]              havoc _to_s1138;
[L2614]              havoc _time_s1138;
[L2615]              havoc _to_s1229;
[L2616]              havoc _time_s1229;
[L2617]              havoc _to_s1277;
[L2618]              havoc _to_s1325;
[L2619]              havoc _to_s1375;
[L2620]              havoc _contract_s1607;
[L2621]              havoc _decimals_s1607;
[L2622]              havoc _value_s1607;
[L2623]              havoc _value_s1663;
[L2624]              havoc tmpNow;
[L2625]              havoc gas;
[L2626]              assume gas > 4000000 && gas <= 8000000;
[L2627]              tmpNow := now;
[L2628]              havoc now;
[L2629]              assume now > tmpNow;
[L2630]              assume msgsender_MSG != null;
[L2631]  COND FALSE  !(choice == 6)
[L2637]  COND FALSE  !(choice == 5)
[L2643]  COND FALSE  !(choice == 4)
[L2650]  COND TRUE   choice == 3
[L2651]              gas := gas - 21000;
[L2652]  COND TRUE   gas >= 0
[L2653]              assume _value_s676 >= 0 && _value_s676 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2654]              assume msgvalue_MSG == 0;
[L2655]  CALL        call __ret_0_approve := approve~address~uint256_AssembleToken(this, msgsender_MSG, msgvalue_MSG, _spender_s676, _value_s676);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != _spender_s676;
[L3]                 call_approve_AssembleToken0 := true;
[L3]                 call_approve_AssembleToken0 := false;
[L3]                 revert := revert_hold;
[L562]               havoc __exception;
[L563]               revert := false;
[L564]   COND TRUE   __exception
[L565]               __tmp__Balance := Balance;
[L566]               __tmp__DType := DType;
[L567]               __tmp__Alloc := Alloc;
[L568]               __tmp__balance_ADDR := balance_ADDR;
[L569]               __tmp__M_Ref_int := M_Ref_int;
[L570]               __tmp__sum_balances0 := sum_balances0;
[L571]               __tmp__alloc_approvals_AssembleToken_lvl0 := alloc_approvals_AssembleToken_lvl0;
[L572]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L573]               __tmp__sum_approvals1 := sum_approvals1;
[L574]               __tmp__M_int_int := M_int_int;
[L575]               __tmp__sum_tmVestingTimer2 := sum_tmVestingTimer2;
[L576]               __tmp__sum_tmVestingBalances3 := sum_tmVestingBalances3;
[L577]               __tmp__sum_advVestingTimer4 := sum_advVestingTimer4;
[L578]               __tmp__sum_advVestingBalances5 := sum_advVestingBalances5;
[L579]               __tmp__Length := Length;
[L580]               __tmp__now := now;
[L581]               __tmp__owner_OwnerHelper := owner_OwnerHelper;
[L582]               __tmp__name_AssembleToken := name_AssembleToken;
[L583]               __tmp__decimals_AssembleToken := decimals_AssembleToken;
[L584]               __tmp__symbol_AssembleToken := symbol_AssembleToken;
[L585]               __tmp__E18_AssembleToken := E18_AssembleToken;
[L586]               __tmp__month_AssembleToken := month_AssembleToken;
[L587]               __tmp__maxTotalSupply_AssembleToken := maxTotalSupply_AssembleToken;
[L588]               __tmp__maxSaleSupply_AssembleToken := maxSaleSupply_AssembleToken;
[L589]               __tmp__maxSPSupply_AssembleToken := maxSPSupply_AssembleToken;
[L590]               __tmp__maxEcoSupply_AssembleToken := maxEcoSupply_AssembleToken;
[L591]               __tmp__maxMktSupply_AssembleToken := maxMktSupply_AssembleToken;
[L592]               __tmp__maxDevSupply_AssembleToken := maxDevSupply_AssembleToken;
[L593]               __tmp__maxReserveSupply_AssembleToken := maxReserveSupply_AssembleToken;
[L594]               __tmp__maxTeamSupply_AssembleToken := maxTeamSupply_AssembleToken;
[L595]               __tmp__maxAdvisorSupply_AssembleToken := maxAdvisorSupply_AssembleToken;
[L596]               __tmp__seedSaleSupply_AssembleToken := seedSaleSupply_AssembleToken;
[L597]               __tmp__privateSaleSupply_AssembleToken := privateSaleSupply_AssembleToken;
[L598]               __tmp__publicSaleSupply_AssembleToken := publicSaleSupply_AssembleToken;
[L599]               __tmp__teamVestingSupply_AssembleToken := teamVestingSupply_AssembleToken;
[L600]               __tmp__teamVestingLockDate_AssembleToken := teamVestingLockDate_AssembleToken;
[L601]               __tmp__teamVestingTime_AssembleToken := teamVestingTime_AssembleToken;
[L602]               __tmp__advisorVestingSupply_AssembleToken := advisorVestingSupply_AssembleToken;
[L603]               __tmp__advisorVestingLockDate_AssembleToken := advisorVestingLockDate_AssembleToken;
[L604]               __tmp__advisorVestingTime_AssembleToken := advisorVestingTime_AssembleToken;
[L605]               __tmp__totalTokenSupply_AssembleToken := totalTokenSupply_AssembleToken;
[L606]               __tmp__tokenIssuedSale_AssembleToken := tokenIssuedSale_AssembleToken;
[L607]               __tmp__tokenIssuedSP_AssembleToken := tokenIssuedSP_AssembleToken;
[L608]               __tmp__tokenIssuedEco_AssembleToken := tokenIssuedEco_AssembleToken;
[L609]               __tmp__tokenIssuedMkt_AssembleToken := tokenIssuedMkt_AssembleToken;
[L610]               __tmp__tokenIssuedDev_AssembleToken := tokenIssuedDev_AssembleToken;
[L611]               __tmp__tokenIssuedRsv_AssembleToken := tokenIssuedRsv_AssembleToken;
[L612]               __tmp__tokenIssuedTeam_AssembleToken := tokenIssuedTeam_AssembleToken;
[L613]               __tmp__tokenIssuedAdv_AssembleToken := tokenIssuedAdv_AssembleToken;
[L614]               __tmp__burnTokenSupply_AssembleToken := burnTokenSupply_AssembleToken;
[L615]               __tmp__balances_AssembleToken := balances_AssembleToken;
[L616]               __tmp__approvals_AssembleToken := approvals_AssembleToken;
[L617]               __tmp__tmVestingTimer_AssembleToken := tmVestingTimer_AssembleToken;
[L618]               __tmp__tmVestingBalances_AssembleToken := tmVestingBalances_AssembleToken;
[L619]               __tmp__advVestingTimer_AssembleToken := advVestingTimer_AssembleToken;
[L620]               __tmp__advVestingBalances_AssembleToken := advVestingBalances_AssembleToken;
[L621]               __tmp__tokenLock_AssembleToken := tokenLock_AssembleToken;
[L622]               __tmp__saleTime_AssembleToken := saleTime_AssembleToken;
[L623]               __tmp__endSaleTime_AssembleToken := endSaleTime_AssembleToken;
[L624]   CALL        call __ret_0_ := approve~address~uint256_AssembleToken__fail(this, msgsender_MSG, msgvalue_MSG, _spender_s676, _value_s676);
[L1466]  CALL        call __var_4 := isTransferable_AssembleToken__fail(this, msgsender_MSG, msgvalue_MSG);
[L1617]  COND TRUE   __tmp__tokenLock_AssembleToken[this] == false
[L1618]              __ret_0_ := true;
[L1466]  RET         call __var_4 := isTransferable_AssembleToken__fail(this, msgsender_MSG, msgvalue_MSG);
[L1467]  COND FALSE  !(revert)
[L1470]  COND FALSE  !(!(__var_4 == true))
[L1474]  COND TRUE   !(__tmp__balances_AssembleToken[this][msgsender_MSG] >= _value_s676)
[L1475]              revert := true;
[L624]   RET         call __ret_0_ := approve~address~uint256_AssembleToken__fail(this, msgsender_MSG, msgvalue_MSG, _spender_s676, _value_s676);
[L625]               assume revert || gas < 0;
[L2655]  RET         call __ret_0_approve := approve~address~uint256_AssembleToken(this, msgsender_MSG, msgvalue_MSG, _spender_s676, _value_s676);
[L2683]  RET         call CorralChoice_AssembleToken(this);

Loop:
[L2683]        assume true;

[2020-11-24 15:36:04,598 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 15:36:04,598 INFO  L82        PathProgramCache]: Analyzing trace with hash -2101751367, now seen corresponding path program 1 times
[2020-11-24 15:36:04,599 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 15:36:04,614 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 15:36:04,630 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 15:36:04,711 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 15:36:04,711 INFO  L82        PathProgramCache]: Analyzing trace with hash 7108, now seen corresponding path program 1 times
[2020-11-24 15:36:04,712 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 15:36:04,713 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 15:36:04,713 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 15:36:04,714 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 15:36:04,715 INFO  L82        PathProgramCache]: Analyzing trace with hash -729775860, now seen corresponding path program 1 times
[2020-11-24 15:36:04,715 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 15:36:04,730 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 15:36:04,746 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
[2020-11-24 15:36:05,128 WARN  L188               SmtUtils]: Spent 252.00 ms on a formula simplification. DAG size of input: 252 DAG size of output: 247
Garbage collection #1: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #2: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #3: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #4: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #5: 1327 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 1327 to 2647
Garbage collection #6: 2647 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 2647 to 5281
Garbage collection #1: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #2: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #3: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #4: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #5: 1237 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 1237 to 2473
Garbage collection #6: 2473 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 2473 to 4943
Garbage collection #7: 4943 nodes / 0 free / 0.002s / 0.004s total
Resizing node table from 4943 to 9883
Garbage collection #8: 9883 nodes / 0 free / 0.004s / 0.008s total
Resizing node table from 9883 to 19763
[2020-11-24 15:36:05,470 WARN  L188               SmtUtils]: Spent 293.00 ms on a formula simplification. DAG size of input: 213 DAG size of output: 207
[2020-11-24 15:36:05,954 WARN  L188               SmtUtils]: Spent 481.00 ms on a formula simplification that was a NOOP. DAG size: 547
Garbage collection #1: 211 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 211 to 421
Garbage collection #2: 421 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 421 to 839
Garbage collection #3: 839 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 839 to 1669
Garbage collection #4: 1669 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 1669 to 3331
Garbage collection #5: 3331 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 3331 to 6661
Garbage collection #6: 6661 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 6661 to 13313
Garbage collection #7: 13313 nodes / 0 free / 0.001s / 0.003s total
Resizing node table from 13313 to 26597
[2020-11-24 15:36:07,293 WARN  L188               SmtUtils]: Spent 1.30 s on a formula simplification. DAG size of input: 423 DAG size of output: 423
[2020-11-24 15:36:09,031 WARN  L188               SmtUtils]: Spent 1.73 s on a formula simplification. DAG size of input: 458 DAG size of output: 448
Garbage collection #1: 157 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 157 to 313
Garbage collection #2: 313 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 313 to 619
Garbage collection #3: 619 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 619 to 1237
Garbage collection #4: 1237 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 1237 to 2473
Garbage collection #5: 2473 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 2473 to 4943
Garbage collection #6: 4943 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 4943 to 9883
Garbage collection #7: 9883 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 9883 to 19763
Garbage collection #8: 19763 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 19763 to 39521
Garbage collection #9: 39521 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 39521 to 79039
Garbage collection #1: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #2: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #3: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #4: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #5: 1327 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1327 to 2647
Garbage collection #6: 2647 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2647 to 5281
Garbage collection #7: 5281 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 5281 to 10559
Garbage collection #8: 10559 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 10559 to 21107
Garbage collection #9: 21107 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 21107 to 42209
[2020-11-24 15:36:09,385 WARN  L188               SmtUtils]: Spent 312.00 ms on a formula simplification. DAG size of input: 241 DAG size of output: 235
[2020-11-24 15:36:09,899 WARN  L188               SmtUtils]: Spent 511.00 ms on a formula simplification that was a NOOP. DAG size: 576
Garbage collection #1: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #2: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #3: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #4: 1759 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1759 to 3517
Garbage collection #5: 3517 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3517 to 7027
Garbage collection #6: 7027 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 7027 to 14051
Garbage collection #7: 14051 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 14051 to 28099
Garbage collection #8: 28099 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 28099 to 56197
[2020-11-24 15:36:10,810 WARN  L188               SmtUtils]: Spent 875.00 ms on a formula simplification. DAG size of input: 443 DAG size of output: 441
[2020-11-24 15:36:11,401 WARN  L188               SmtUtils]: Spent 588.00 ms on a formula simplification. DAG size of input: 461 DAG size of output: 458
Garbage collection #1: 167 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 167 to 331
Garbage collection #2: 331 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 331 to 661
Garbage collection #3: 661 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 661 to 1321
Garbage collection #4: 1321 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1321 to 2633
Garbage collection #5: 2633 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2633 to 5261
Garbage collection #6: 5261 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 5261 to 10513
Garbage collection #7: 10513 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 10513 to 21023
Garbage collection #8: 21023 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 21023 to 42043
Garbage collection #1: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #2: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #3: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #4: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #5: 1327 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1327 to 2647
Garbage collection #6: 2647 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2647 to 5281
Garbage collection #7: 5281 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 5281 to 10559
[2020-11-24 15:36:11,630 WARN  L188               SmtUtils]: Spent 202.00 ms on a formula simplification. DAG size of input: 242 DAG size of output: 238
[2020-11-24 15:36:11,935 WARN  L188               SmtUtils]: Spent 250.00 ms on a formula simplification that was a NOOP. DAG size: 446
Garbage collection #1: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #2: 317 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 317 to 631
Garbage collection #3: 631 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 631 to 1259
Garbage collection #4: 1259 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1259 to 2503
Garbage collection #5: 2503 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2503 to 5003
Garbage collection #6: 5003 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 5003 to 9973
Garbage collection #7: 9973 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 9973 to 19937
Garbage collection #1: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #2: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #3: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #4: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #5: 1327 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1327 to 2647
Garbage collection #6: 2647 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2647 to 5281
Garbage collection #7: 5281 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 5281 to 10559
[2020-11-24 15:36:12,116 WARN  L188               SmtUtils]: Spent 167.00 ms on a formula simplification. DAG size of input: 241 DAG size of output: 238
[2020-11-24 15:36:12,558 WARN  L188               SmtUtils]: Spent 440.00 ms on a formula simplification. DAG size of input: 448 DAG size of output: 447
Garbage collection #1: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #2: 317 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 317 to 631
Garbage collection #3: 631 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 631 to 1259
Garbage collection #4: 1259 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1259 to 2503
Garbage collection #5: 2503 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2503 to 5003
Garbage collection #6: 5003 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 5003 to 9973
Garbage collection #7: 9973 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 9973 to 19937
Garbage collection #1: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #2: 317 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 317 to 631
Garbage collection #3: 631 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 631 to 1259
Garbage collection #4: 1259 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1259 to 2503
Garbage collection #5: 2503 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2503 to 5003
Garbage collection #6: 5003 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 5003 to 9973
Garbage collection #7: 9973 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 9973 to 19937
Garbage collection #8: 19937 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19937 to 39869
[2020-11-24 15:36:13,099 WARN  L188               SmtUtils]: Spent 531.00 ms on a formula simplification. DAG size of input: 444 DAG size of output: 442
[2020-11-24 15:36:13,111 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 15:36:13,115 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 24.11 03:36:13 BasicIcfg
[2020-11-24 15:36:13,116 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-24 15:36:13,116 INFO  L168              Benchmark]: Toolchain (without parser) took 11255.61 ms. Allocated memory was 1.0 GB in the beginning and 2.0 GB in the end (delta: 1.0 GB). Free memory was 945.9 MB in the beginning and 1.2 GB in the end (delta: -256.4 MB). Peak memory consumption was 1.1 GB. Max. memory is 15.3 GB.
[2020-11-24 15:36:13,117 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.14 ms. Allocated memory is still 1.0 GB. Free memory is still 956.7 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-24 15:36:13,117 INFO  L168              Benchmark]: Boogie Preprocessor took 88.68 ms. Allocated memory is still 1.0 GB. Free memory was 945.9 MB in the beginning and 935.2 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
[2020-11-24 15:36:13,117 INFO  L168              Benchmark]: UtopiaSpecLang took 65.41 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 924.4 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
[2020-11-24 15:36:13,117 INFO  L168              Benchmark]: Boogie Printer took 10.91 ms. Allocated memory is still 1.0 GB. Free memory is still 924.4 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-24 15:36:13,117 INFO  L168              Benchmark]: RCFGBuilder took 565.35 ms. Allocated memory is still 1.0 GB. Free memory was 924.4 MB in the beginning and 865.4 MB in the end (delta: 59.1 MB). Peak memory consumption was 59.1 MB. Max. memory is 15.3 GB.
[2020-11-24 15:36:13,118 INFO  L168              Benchmark]: UtopiaLTL2Aut took 38.83 ms. Allocated memory is still 1.0 GB. Free memory was 865.4 MB in the beginning and 856.4 MB in the end (delta: 8.9 MB). Peak memory consumption was 8.9 MB. Max. memory is 15.3 GB.
[2020-11-24 15:36:13,118 INFO  L168              Benchmark]: BÃ¼chi Program Product took 888.29 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 60.8 MB). Free memory was 856.4 MB in the beginning and 885.9 MB in the end (delta: -29.4 MB). Peak memory consumption was 141.6 MB. Max. memory is 15.3 GB.
[2020-11-24 15:36:13,118 INFO  L168              Benchmark]: BlockEncodingV2 took 80.84 ms. Allocated memory is still 1.1 GB. Free memory was 885.9 MB in the beginning and 847.8 MB in the end (delta: 38.1 MB). Peak memory consumption was 38.1 MB. Max. memory is 15.3 GB.
[2020-11-24 15:36:13,119 INFO  L168              Benchmark]: BuchiAutomizer took 9514.31 ms. Allocated memory was 1.1 GB in the beginning and 2.0 GB in the end (delta: 958.9 MB). Free memory was 847.8 MB in the beginning and 1.2 GB in the end (delta: -354.6 MB). Peak memory consumption was 912.9 MB. Max. memory is 15.3 GB.
[2020-11-24 15:36:13,121 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    2008 locations, 3282 edges
  - StatisticsResult: Encoded RCFG
    1982 locations, 3221 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.14 ms. Allocated memory is still 1.0 GB. Free memory is still 956.7 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 88.68 ms. Allocated memory is still 1.0 GB. Free memory was 945.9 MB in the beginning and 935.2 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 65.41 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 924.4 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 10.91 ms. Allocated memory is still 1.0 GB. Free memory is still 924.4 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * RCFGBuilder took 565.35 ms. Allocated memory is still 1.0 GB. Free memory was 924.4 MB in the beginning and 865.4 MB in the end (delta: 59.1 MB). Peak memory consumption was 59.1 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 38.83 ms. Allocated memory is still 1.0 GB. Free memory was 865.4 MB in the beginning and 856.4 MB in the end (delta: 8.9 MB). Peak memory consumption was 8.9 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 888.29 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 60.8 MB). Free memory was 856.4 MB in the beginning and 885.9 MB in the end (delta: -29.4 MB). Peak memory consumption was 141.6 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 80.84 ms. Allocated memory is still 1.1 GB. Free memory was 885.9 MB in the beginning and 847.8 MB in the end (delta: 38.1 MB). Peak memory consumption was 38.1 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 9514.31 ms. Allocated memory was 1.1 GB in the beginning and 2.0 GB in the end (delta: 958.9 MB). Free memory was 847.8 MB in the beginning and 1.2 GB in the end (delta: -354.6 MB). Peak memory consumption was 912.9 MB. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    908 locations, 1041 edges
  - StatisticsResult: BuchiProgram size
    2008 locations, 3282 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 5 terminating modules (5 trivial, 0 deterministic, 0 nondeterministic) and one nonterminating remainder module.5 modules have a trivial ranking function, the largest among these consists of 7 locations. The remainder module has 226 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 9.4s and 6 iterations.  TraceHistogramMax:1. Analysis of lassos took 8.9s. Construction of modules took 0.1s. BÃ¼chi inclusion checks took 0.2s. Highest rank in rank-based complementation 0. Minimization of det autom 5. Minimization of nondet autom 0. Automata minimization 0.0s AutomataMinimizationTime, 5 MinimizatonAttempts, 24 StatesRemovedByMinimization, 3 NontrivialMinimizations. Non-live state removal took 0.0s Buchi closure took 0.0s. Biggest automaton had 251 states and ocurred in iteration 1.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 1974 SDtfs, 1517 SDslu, 1412 SDs, 0 SdLazy, 260 SolverSat, 777 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 0.1s Time	LassoAnalysisResults: nont1 unkn0 SFLI0 SFLT0 conc0 concLT0 SILN0 SILU5 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - TransactionCounterexample: Violation of LTL property LTL
    Found an infinite, lasso-shaped execution that violates the LTL property LTL.
Stem:
AssembleToken(11).approve~address~uint256.gas(3979001)({from : 12, _spender : 9, _value : 0});
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != _spender_s676;
[L3]                 call_approve_AssembleToken0 := true;
[L3]                 call_approve_AssembleToken0 := false;
[L3]                 revert := revert_hold;
[L562]               havoc __exception;
[L563]               revert := false;
[L564]   COND TRUE   __exception
[L565]               __tmp__Balance := Balance;
[L566]               __tmp__DType := DType;
[L567]               __tmp__Alloc := Alloc;
[L568]               __tmp__balance_ADDR := balance_ADDR;
[L569]               __tmp__M_Ref_int := M_Ref_int;
[L570]               __tmp__sum_balances0 := sum_balances0;
[L571]               __tmp__alloc_approvals_AssembleToken_lvl0 := alloc_approvals_AssembleToken_lvl0;
[L572]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L573]               __tmp__sum_approvals1 := sum_approvals1;
[L574]               __tmp__M_int_int := M_int_int;
[L575]               __tmp__sum_tmVestingTimer2 := sum_tmVestingTimer2;
[L576]               __tmp__sum_tmVestingBalances3 := sum_tmVestingBalances3;
[L577]               __tmp__sum_advVestingTimer4 := sum_advVestingTimer4;
[L578]               __tmp__sum_advVestingBalances5 := sum_advVestingBalances5;
[L579]               __tmp__Length := Length;
[L580]               __tmp__now := now;
[L581]               __tmp__owner_OwnerHelper := owner_OwnerHelper;
[L582]               __tmp__name_AssembleToken := name_AssembleToken;
[L583]               __tmp__decimals_AssembleToken := decimals_AssembleToken;
[L584]               __tmp__symbol_AssembleToken := symbol_AssembleToken;
[L585]               __tmp__E18_AssembleToken := E18_AssembleToken;
[L586]               __tmp__month_AssembleToken := month_AssembleToken;
[L587]               __tmp__maxTotalSupply_AssembleToken := maxTotalSupply_AssembleToken;
[L588]               __tmp__maxSaleSupply_AssembleToken := maxSaleSupply_AssembleToken;
[L589]               __tmp__maxSPSupply_AssembleToken := maxSPSupply_AssembleToken;
[L590]               __tmp__maxEcoSupply_AssembleToken := maxEcoSupply_AssembleToken;
[L591]               __tmp__maxMktSupply_AssembleToken := maxMktSupply_AssembleToken;
[L592]               __tmp__maxDevSupply_AssembleToken := maxDevSupply_AssembleToken;
[L593]               __tmp__maxReserveSupply_AssembleToken := maxReserveSupply_AssembleToken;
[L594]               __tmp__maxTeamSupply_AssembleToken := maxTeamSupply_AssembleToken;
[L595]               __tmp__maxAdvisorSupply_AssembleToken := maxAdvisorSupply_AssembleToken;
[L596]               __tmp__seedSaleSupply_AssembleToken := seedSaleSupply_AssembleToken;
[L597]               __tmp__privateSaleSupply_AssembleToken := privateSaleSupply_AssembleToken;
[L598]               __tmp__publicSaleSupply_AssembleToken := publicSaleSupply_AssembleToken;
[L599]               __tmp__teamVestingSupply_AssembleToken := teamVestingSupply_AssembleToken;
[L600]               __tmp__teamVestingLockDate_AssembleToken := teamVestingLockDate_AssembleToken;
[L601]               __tmp__teamVestingTime_AssembleToken := teamVestingTime_AssembleToken;
[L602]               __tmp__advisorVestingSupply_AssembleToken := advisorVestingSupply_AssembleToken;
[L603]               __tmp__advisorVestingLockDate_AssembleToken := advisorVestingLockDate_AssembleToken;
[L604]               __tmp__advisorVestingTime_AssembleToken := advisorVestingTime_AssembleToken;
[L605]               __tmp__totalTokenSupply_AssembleToken := totalTokenSupply_AssembleToken;
[L606]               __tmp__tokenIssuedSale_AssembleToken := tokenIssuedSale_AssembleToken;
[L607]               __tmp__tokenIssuedSP_AssembleToken := tokenIssuedSP_AssembleToken;
[L608]               __tmp__tokenIssuedEco_AssembleToken := tokenIssuedEco_AssembleToken;
[L609]               __tmp__tokenIssuedMkt_AssembleToken := tokenIssuedMkt_AssembleToken;
[L610]               __tmp__tokenIssuedDev_AssembleToken := tokenIssuedDev_AssembleToken;
[L611]               __tmp__tokenIssuedRsv_AssembleToken := tokenIssuedRsv_AssembleToken;
[L612]               __tmp__tokenIssuedTeam_AssembleToken := tokenIssuedTeam_AssembleToken;
[L613]               __tmp__tokenIssuedAdv_AssembleToken := tokenIssuedAdv_AssembleToken;
[L614]               __tmp__burnTokenSupply_AssembleToken := burnTokenSupply_AssembleToken;
[L615]               __tmp__balances_AssembleToken := balances_AssembleToken;
[L616]               __tmp__approvals_AssembleToken := approvals_AssembleToken;
[L617]               __tmp__tmVestingTimer_AssembleToken := tmVestingTimer_AssembleToken;
[L618]               __tmp__tmVestingBalances_AssembleToken := tmVestingBalances_AssembleToken;
[L619]               __tmp__advVestingTimer_AssembleToken := advVestingTimer_AssembleToken;
[L620]               __tmp__advVestingBalances_AssembleToken := advVestingBalances_AssembleToken;
[L621]               __tmp__tokenLock_AssembleToken := tokenLock_AssembleToken;
[L622]               __tmp__saleTime_AssembleToken := saleTime_AssembleToken;
[L623]               __tmp__endSaleTime_AssembleToken := endSaleTime_AssembleToken;
[L624]   CALL        call __ret_0_ := approve~address~uint256_AssembleToken__fail(this, msgsender_MSG, msgvalue_MSG, _spender_s676, _value_s676);
[L1466]  CALL        call __var_4 := isTransferable_AssembleToken__fail(this, msgsender_MSG, msgvalue_MSG);
[L1617]  COND TRUE   __tmp__tokenLock_AssembleToken[this] == false
[L1618]              __ret_0_ := true;
[L1466]  RET         call __var_4 := isTransferable_AssembleToken__fail(this, msgsender_MSG, msgvalue_MSG);
[L1467]  COND FALSE  !(revert)
[L1470]  COND FALSE  !(!(__var_4 == true))
[L1474]  COND TRUE   !(__tmp__balances_AssembleToken[this][msgsender_MSG] >= _value_s676)
[L1475]              revert := true;
[L624]   RET         call __ret_0_ := approve~address~uint256_AssembleToken__fail(this, msgsender_MSG, msgvalue_MSG, _spender_s676, _value_s676);
[L625]               assume revert || gas < 0;
[L2655]  RET         call __ret_0_approve := approve~address~uint256_AssembleToken(this, msgsender_MSG, msgvalue_MSG, _spender_s676, _value_s676);

Loop:

End of lasso representation.
RESULT: Ultimate could not prove your program: Toolchain returned no result.
Received shutdown request...
