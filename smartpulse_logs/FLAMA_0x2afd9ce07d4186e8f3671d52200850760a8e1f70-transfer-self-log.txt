This is Ultimate 0.1.24-f1553f5-m
[2020-11-24 19:04:42,952 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-24 19:04:42,954 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-24 19:04:42,964 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-24 19:04:42,964 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-24 19:04:42,965 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-24 19:04:42,966 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-24 19:04:42,968 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-24 19:04:42,969 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-24 19:04:42,970 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-24 19:04:42,970 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-24 19:04:42,971 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-24 19:04:42,971 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-24 19:04:42,972 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-24 19:04:42,973 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-24 19:04:42,973 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-24 19:04:42,974 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-24 19:04:42,975 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-24 19:04:42,976 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-24 19:04:42,978 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-24 19:04:42,978 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-24 19:04:42,979 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-24 19:04:42,981 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-24 19:04:42,981 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-24 19:04:42,981 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-24 19:04:42,982 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-24 19:04:42,982 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-24 19:04:42,982 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-24 19:04:42,983 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-24 19:04:42,983 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-24 19:04:42,983 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-24 19:04:42,984 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-24 19:04:42,984 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-24 19:04:42,985 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-24 19:04:42,985 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-24 19:04:42,986 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-24 19:04:42,986 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-24 19:04:42,986 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-24 19:04:42,987 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-24 19:04:42,987 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-24 19:04:42,988 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-24 19:04:42,988 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-24 19:04:42,996 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-24 19:04:42,996 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-24 19:04:42,996 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-24 19:04:42,997 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-24 19:04:42,997 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-24 19:04:42,997 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-24 19:04:42,997 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-24 19:04:42,997 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-24 19:04:42,997 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-24 19:04:42,997 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-24 19:04:42,997 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-24 19:04:42,997 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-24 19:04:42,998 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-24 19:04:42,998 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-24 19:04:42,998 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-24 19:04:42,998 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-24 19:04:42,998 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-24 19:04:42,998 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-24 19:04:42,998 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-24 19:04:42,998 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-24 19:04:42,998 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-24 19:04:42,998 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-24 19:04:42,999 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-24 19:04:42,999 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-24 19:04:42,999 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-24 19:04:42,999 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-24 19:04:43,021 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-24 19:04:43,037 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-24 19:04:43,039 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-24 19:04:43,041 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-24 19:04:43,041 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-24 19:04:43,041 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/FLAMA_0x2afd9ce07d4186e8f3671d52200850760a8e1f70_transfer-self.bpl
[2020-11-24 19:04:43,042 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/FLAMA_0x2afd9ce07d4186e8f3671d52200850760a8e1f70_transfer-self.bpl'
[2020-11-24 19:04:43,096 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-24 19:04:43,097 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-24 19:04:43,097 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-24 19:04:43,097 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-24 19:04:43,097 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-24 19:04:43,113 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "FLAMA_0x2afd9ce07d4186e8f3671d52200850760a8e1f70_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 07:04:43" (1/1) ...
[2020-11-24 19:04:43,114 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "FLAMA_0x2afd9ce07d4186e8f3671d52200850760a8e1f70_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 07:04:43" (1/1) ...
[2020-11-24 19:04:43,131 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "FLAMA_0x2afd9ce07d4186e8f3671d52200850760a8e1f70_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 07:04:43" (1/1) ...
[2020-11-24 19:04:43,132 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "FLAMA_0x2afd9ce07d4186e8f3671d52200850760a8e1f70_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 07:04:43" (1/1) ...
[2020-11-24 19:04:43,145 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "FLAMA_0x2afd9ce07d4186e8f3671d52200850760a8e1f70_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 07:04:43" (1/1) ...
[2020-11-24 19:04:43,152 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "FLAMA_0x2afd9ce07d4186e8f3671d52200850760a8e1f70_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 07:04:43" (1/1) ...
[2020-11-24 19:04:43,156 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "FLAMA_0x2afd9ce07d4186e8f3671d52200850760a8e1f70_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 07:04:43" (1/1) ...
[2020-11-24 19:04:43,161 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-24 19:04:43,162 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-24 19:04:43,162 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-24 19:04:43,164 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-24 19:04:43,168 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "FLAMA_0x2afd9ce07d4186e8f3671d52200850760a8e1f70_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 07:04:43" (1/1) ...
[2020-11-24 19:04:43,180 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(FLAMA.transfer(to, value), msg.sender == to && value <= _balances_FLAMA[this][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_FLAMA[this][to] >= 0 && _balances_FLAMA[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_FLAMA[this][msg.sender] >= 0 &&  _balances_FLAMA[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(FLAMA.transfer(to, value), return == true && _totalSupply_FLAMA[this] == old(_totalSupply_FLAMA[this]) && _balances_FLAMA[this] == old(_balances_FLAMA[this]) && _allowed_FLAMA[this] == old(_allowed_FLAMA[this]) && _name_FLAMA[this] == old(_name_FLAMA[this]) && _symbol_FLAMA[this] == old(_symbol_FLAMA[this]) && _decimals_FLAMA[this] == old(_decimals_FLAMA[this]))))
[2020-11-24 19:04:43,185 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(FLAMA.transfer(to, value), msg.sender == to && value <= _balances_FLAMA[this][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_FLAMA[this][to] >= 0 && _balances_FLAMA[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_FLAMA[this][msg.sender] >= 0 &&  _balances_FLAMA[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(FLAMA.transfer(to, value), return == true && _totalSupply_FLAMA[this] == old(_totalSupply_FLAMA[this]) && _balances_FLAMA[this] == old(_balances_FLAMA[this]) && _allowed_FLAMA[this] == old(_allowed_FLAMA[this]) && _name_FLAMA[this] == old(_name_FLAMA[this]) && _symbol_FLAMA[this] == old(_symbol_FLAMA[this]) && _decimals_FLAMA[this] == old(_decimals_FLAMA[this]))))
[2020-11-24 19:04:43,191 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(FLAMA.transfer(to, value), msg.sender == to && value <= _balances_FLAMA[this][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_FLAMA[this][to] >= 0 && _balances_FLAMA[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_FLAMA[this][msg.sender] >= 0 &&  _balances_FLAMA[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(FLAMA.transfer(to, value), return == true && _totalSupply_FLAMA[this] == old(_totalSupply_FLAMA[this]) && _balances_FLAMA[this] == old(_balances_FLAMA[this]) && _allowed_FLAMA[this] == old(_allowed_FLAMA[this]) && _name_FLAMA[this] == old(_name_FLAMA[this]) && _symbol_FLAMA[this] == old(_symbol_FLAMA[this]) && _decimals_FLAMA[this] == old(_decimals_FLAMA[this]))))
[2020-11-24 19:04:43,197 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( msg.sender==to_s343 && value_s343<=_balances_FLAMA[this][msg.sender] ) && value_s343>=0 ) && value_s343<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && _balances_FLAMA[this][to_s343]>=0 ) && _balances_FLAMA[this][to_s343]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && _balances_FLAMA[this][msg.sender]>=0 ) && _balances_FLAMA[this][msg.sender]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_FLAMA>],IdentifierExpression[to_s343,<IMPLEMENTATION_INPARAM,transfer~address~uint256_FLAMA>]],BinaryExpression[COMPLEQ,IdentifierExpression[value_s343,<IMPLEMENTATION_INPARAM,transfer~address~uint256_FLAMA>],ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_FLAMA,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_FLAMA>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_FLAMA>]]]]],BinaryExpression[COMPGEQ,IdentifierExpression[value_s343,<IMPLEMENTATION_INPARAM,transfer~address~uint256_FLAMA>],IntegerLiteral[0]]],BinaryExpression[COMPLT,IdentifierExpression[value_s343,<IMPLEMENTATION_INPARAM,transfer~address~uint256_FLAMA>],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_FLAMA,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_FLAMA>]]],[IdentifierExpression[to_s343,<IMPLEMENTATION_INPARAM,transfer~address~uint256_FLAMA>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_FLAMA,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_FLAMA>]]],[IdentifierExpression[to_s343,<IMPLEMENTATION_INPARAM,transfer~address~uint256_FLAMA>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_FLAMA,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_FLAMA>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_FLAMA>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_FLAMA,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_FLAMA>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_FLAMA>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]]
[2020-11-24 19:04:43,199 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( __ret_0_==true && _totalSupply_FLAMA[this]==( old(_totalSupply_FLAMA[this]) ) ) && _balances_FLAMA[this]==( old(_balances_FLAMA[this]) ) ) && _allowed_FLAMA[this]==( old(_allowed_FLAMA[this]) ) ) && _name_FLAMA[this]==( old(_name_FLAMA[this]) ) ) && _symbol_FLAMA[this]==( old(_symbol_FLAMA[this]) ) ) && _decimals_FLAMA[this]==( old(_decimals_FLAMA[this]) ) ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[__ret_0_,<IMPLEMENTATION_OUTPARAM,transfer~address~uint256_FLAMA>],BooleanLiteral[true]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_totalSupply_FLAMA,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_FLAMA>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_totalSupply_FLAMA,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_FLAMA>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_balances_FLAMA,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_FLAMA>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_balances_FLAMA,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_FLAMA>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_allowed_FLAMA,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_FLAMA>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_allowed_FLAMA,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_FLAMA>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_name_FLAMA,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_FLAMA>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_name_FLAMA,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_FLAMA>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_symbol_FLAMA,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_FLAMA>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_symbol_FLAMA,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_FLAMA>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_decimals_FLAMA,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_FLAMA>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_decimals_FLAMA,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_FLAMA>]]]]]]
[2020-11-24 19:04:43,202 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(FLAMA.transfer(to, value), msg.sender == to && value <= _balances_FLAMA[this][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_FLAMA[this][to] >= 0 && _balances_FLAMA[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_FLAMA[this][msg.sender] >= 0 &&  _balances_FLAMA[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(FLAMA.transfer(to, value), return == true && _totalSupply_FLAMA[this] == old(_totalSupply_FLAMA[this]) && _balances_FLAMA[this] == old(_balances_FLAMA[this]) && _allowed_FLAMA[this] == old(_allowed_FLAMA[this]) && _name_FLAMA[this] == old(_name_FLAMA[this]) && _symbol_FLAMA[this] == old(_symbol_FLAMA[this]) && _decimals_FLAMA[this] == old(_decimals_FLAMA[this]))))
[2020-11-24 19:04:43,202 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_transfer_FLAMA0) ==> ( <>AP(success_transfer_FLAMA0) ) ) )
Executed UtopiaSpecLang
[2020-11-24 19:04:43,206 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 07:04:43 PropertyContainer
[2020-11-24 19:04:43,206 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-24 19:04:43,206 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-24 19:04:43,206 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-24 19:04:43,206 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-24 19:04:43,207 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "FLAMA_0x2afd9ce07d4186e8f3671d52200850760a8e1f70_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 07:04:43" (1/2) ...
[2020-11-24 19:04:43,208 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-24 19:04:43,208 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-24 19:04:43,216 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 07:04:43" (2/2) ...
[2020-11-24 19:04:43,216 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-24 19:04:43,216 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-24 19:04:43,216 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-24 19:04:43,216 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-24 19:04:43,217 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "FLAMA_0x2afd9ce07d4186e8f3671d52200850760a8e1f70_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 07:04:43" (1/2) ...
[2020-11-24 19:04:43,270 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-24 19:04:43,271 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__success
[2020-11-24 19:04:43,271 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256_SafeMath__success
[2020-11-24 19:04:43,271 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__success
[2020-11-24 19:04:43,271 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__success
[2020-11-24 19:04:43,271 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_FLAMA
[2020-11-24 19:04:43,271 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_FLAMA
[2020-11-24 19:04:43,271 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_FLAMA
[2020-11-24 19:04:43,271 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_FLAMA
[2020-11-24 19:04:43,271 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_FLAMA
[2020-11-24 19:04:43,271 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_FLAMA
[2020-11-24 19:04:43,272 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_FLAMA
[2020-11-24 19:04:43,272 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_FLAMA
[2020-11-24 19:04:43,272 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_FLAMA
[2020-11-24 19:04:43,272 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_FLAMA
[2020-11-24 19:04:43,272 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_FLAMA
[2020-11-24 19:04:43,272 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_FLAMA
[2020-11-24 19:04:43,272 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_FLAMA__success
[2020-11-24 19:04:43,272 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-24 19:04:43,272 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-24 19:04:43,272 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-24 19:04:43,272 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_SafeMath
[2020-11-24 19:04:43,273 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_SafeMath
[2020-11-24 19:04:43,273 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_IERC20
[2020-11-24 19:04:43,273 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_IERC20
[2020-11-24 19:04:43,273 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_FLAMA
[2020-11-24 19:04:43,273 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-24 19:04:43,273 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-24 19:04:43,273 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-24 19:04:43,273 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256_SafeMath__fail
[2020-11-24 19:04:43,273 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-24 19:04:43,273 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__fail
[2020-11-24 19:04:43,273 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_FLAMA__success
[2020-11-24 19:04:43,274 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_FLAMA__fail
[2020-11-24 19:04:43,274 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_FLAMA__success
[2020-11-24 19:04:43,274 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_FLAMA__fail
[2020-11-24 19:04:43,274 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_FLAMA__success
[2020-11-24 19:04:43,274 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_FLAMA__fail
[2020-11-24 19:04:43,274 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_FLAMA__success
[2020-11-24 19:04:43,274 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_FLAMA__fail
[2020-11-24 19:04:43,274 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_FLAMA__success
[2020-11-24 19:04:43,274 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_FLAMA__fail
[2020-11-24 19:04:43,274 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_FLAMA__success
[2020-11-24 19:04:43,274 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_FLAMA__fail
[2020-11-24 19:04:43,274 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_FLAMA__fail
[2020-11-24 19:04:43,274 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-24 19:04:43,275 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-24 19:04:43,275 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-24 19:04:43,275 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-24 19:04:43,275 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-24 19:04:43,275 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-24 19:04:43,275 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__success
[2020-11-24 19:04:43,275 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256_SafeMath__fail
[2020-11-24 19:04:43,275 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256_SafeMath__success
[2020-11-24 19:04:43,275 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-24 19:04:43,275 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__success
[2020-11-24 19:04:43,275 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__fail
[2020-11-24 19:04:43,276 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__success
[2020-11-24 19:04:43,276 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_FLAMA__fail
[2020-11-24 19:04:43,276 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_FLAMA__success
[2020-11-24 19:04:43,276 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_FLAMA__fail
[2020-11-24 19:04:43,276 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_FLAMA__success
[2020-11-24 19:04:43,276 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_FLAMA__fail
[2020-11-24 19:04:43,276 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_FLAMA__success
[2020-11-24 19:04:43,276 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_FLAMA__fail
[2020-11-24 19:04:43,276 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_FLAMA__success
[2020-11-24 19:04:43,276 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_FLAMA__fail
[2020-11-24 19:04:43,277 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_FLAMA__success
[2020-11-24 19:04:43,277 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_FLAMA__fail
[2020-11-24 19:04:43,277 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_FLAMA__success
[2020-11-24 19:04:43,277 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_FLAMA__fail
[2020-11-24 19:04:43,277 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_FLAMA__success
[2020-11-24 19:04:43,277 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-24 19:04:43,277 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-24 19:04:43,277 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-24 19:04:43,277 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-24 19:04:43,277 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-24 19:04:43,277 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-24 19:04:43,277 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_SafeMath
[2020-11-24 19:04:43,278 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_SafeMath
[2020-11-24 19:04:43,278 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_IERC20
[2020-11-24 19:04:43,278 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_IERC20
[2020-11-24 19:04:43,278 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_FLAMA
[2020-11-24 19:04:43,278 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-24 19:04:43,278 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-24 19:04:43,279 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-24 19:04:43,441 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 19:04:43,441 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 19:04:43,442 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 19:04:43,667 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-24 19:04:43,667 INFO  L286             CfgBuilder]: Removed 3 assue(true) statements.
[2020-11-24 19:04:43,672 INFO  L202        PluginConnector]: Adding new model FLAMA_0x2afd9ce07d4186e8f3671d52200850760a8e1f70_transfer-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 07:04:43 BoogieIcfgContainer
[2020-11-24 19:04:43,673 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 07:04:43" (2/2) ...
[2020-11-24 19:04:43,673 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-24 19:04:43,674 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@73b273f1 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 07:04:43, skipping insertion in model container
[2020-11-24 19:04:43,674 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-24 19:04:43,675 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-24 19:04:43,675 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-24 19:04:43,678 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-24 19:04:43,678 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "FLAMA_0x2afd9ce07d4186e8f3671d52200850760a8e1f70_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 07:04:43" (1/3) ...
[2020-11-24 19:04:43,679 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@6044e145 and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 07:04:43, skipping insertion in model container
[2020-11-24 19:04:43,680 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 07:04:43" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-24 19:04:43,721 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 07:04:43 NWAContainer
[2020-11-24 19:04:43,721 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-24 19:04:43,721 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-24 19:04:43,721 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-24 19:04:43,722 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-24 19:04:43,723 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "FLAMA_0x2afd9ce07d4186e8f3671d52200850760a8e1f70_transfer-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 07:04:43" (3/4) ...
[2020-11-24 19:04:43,724 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@547bb14a and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 07:04:43, skipping insertion in model container
[2020-11-24 19:04:43,724 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 07:04:43" (4/4) ...
[2020-11-24 19:04:43,728 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-24 19:04:43,730 INFO  L110   BuchiProductObserver]: Initial RCFG 532 locations, 661 edges
[2020-11-24 19:04:43,730 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-24 19:04:43,743 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-24 19:04:44,536 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-24 19:04:44,539 INFO  L110   BuchiProductObserver]: BuchiProgram size 1258 locations, 2132 edges
[2020-11-24 19:04:44,539 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 07:04:44 BoogieIcfgContainer
[2020-11-24 19:04:44,539 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-24 19:04:44,539 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-24 19:04:44,539 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-24 19:04:44,541 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-24 19:04:44,542 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 07:04:44" (1/1) ...
[2020-11-24 19:04:44,580 INFO  L313           BlockEncoder]: Initial Icfg 1258 locations, 2132 edges
[2020-11-24 19:04:44,581 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-24 19:04:44,581 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-24 19:04:44,581 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-24 19:04:44,582 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-24 19:04:44,589 INFO  L70    emoveInfeasibleEdges]: Removed 33 edges and 9 locations because of local infeasibility
[2020-11-24 19:04:44,593 INFO  L70        RemoveSinkStates]: Removed 2 edges and 1 locations by removing sink states
[2020-11-24 19:04:44,598 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-24 19:04:44,600 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-24 19:04:44,602 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-24 19:04:44,602 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-24 19:04:44,604 INFO  L313           BlockEncoder]: Encoded RCFG 1236 locations, 2080 edges
[2020-11-24 19:04:44,605 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 24.11 07:04:44 BasicIcfg
[2020-11-24 19:04:44,605 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-24 19:04:44,605 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-24 19:04:44,605 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-24 19:04:44,608 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-24 19:04:44,608 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 19:04:44,608 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "FLAMA_0x2afd9ce07d4186e8f3671d52200850760a8e1f70_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 07:04:43" (1/6) ...
[2020-11-24 19:04:44,611 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@35acca9e and model type FLAMA_0x2afd9ce07d4186e8f3671d52200850760a8e1f70_transfer-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 24.11 07:04:44, skipping insertion in model container
[2020-11-24 19:04:44,611 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 19:04:44,611 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 07:04:43" (2/6) ...
[2020-11-24 19:04:44,611 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@35acca9e and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 24.11 07:04:44, skipping insertion in model container
[2020-11-24 19:04:44,611 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 19:04:44,611 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "FLAMA_0x2afd9ce07d4186e8f3671d52200850760a8e1f70_transfer-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 07:04:43" (3/6) ...
[2020-11-24 19:04:44,612 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@35acca9e and model type FLAMA_0x2afd9ce07d4186e8f3671d52200850760a8e1f70_transfer-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 24.11 07:04:44, skipping insertion in model container
[2020-11-24 19:04:44,612 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 19:04:44,612 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 07:04:43" (4/6) ...
[2020-11-24 19:04:44,612 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@35acca9e and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 24.11 07:04:44, skipping insertion in model container
[2020-11-24 19:04:44,612 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 19:04:44,612 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 07:04:44" (5/6) ...
[2020-11-24 19:04:44,613 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@35acca9e and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 24.11 07:04:44, skipping insertion in model container
[2020-11-24 19:04:44,613 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 19:04:44,613 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 24.11 07:04:44" (6/6) ...
[2020-11-24 19:04:44,614 INFO  L404   chiAutomizerObserver]: Analyzing ICFG FLAMA_0x2afd9ce07d4186e8f3671d52200850760a8e1f70_transfer-self.bpl_BEv2
[2020-11-24 19:04:44,652 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-24 19:04:44,653 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-24 19:04:44,653 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-24 19:04:44,653 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-24 19:04:44,653 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-24 19:04:44,653 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-24 19:04:44,653 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-24 19:04:44,653 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-24 19:04:44,653 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-24 19:04:44,671 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1236 states.
[2020-11-24 19:04:44,710 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 19:04:44,710 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 19:04:44,710 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 19:04:44,718 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 19:04:44,718 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
[2020-11-24 19:04:44,718 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-24 19:04:44,719 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1236 states.
[2020-11-24 19:04:44,728 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 19:04:44,728 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 19:04:44,728 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 19:04:44,730 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 19:04:44,730 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L2]                 success_transfer_FLAMA0 := false;
[L2]                 call_transfer_FLAMA0 := false;
[L2]     CALL        call main();
[L1487]              assume null == 0;
[L1488]  CALL        call this := FreshRefGenerator__success();
[L597]               havoc newRef;
[L598]               assume Alloc[newRef] == false;
[L599]               Alloc[newRef] := true;
[L600]               assume newRef != null;
[L1488]  RET         call this := FreshRefGenerator__success();
[L1489]              assume now >= 0;
[L1490]              assume DType[this] == FLAMA;
[L1491]              assume !revert && gas >= 0;
[L1492]  CALL        call CorralChoice_FLAMA(this);
[L1396]              havoc msgsender_MSG;
[L1397]              havoc msgvalue_MSG;
[L1398]              havoc choice;
[L1399]              havoc __ret_0_totalSupply;
[L1400]              havoc owner_s308;
[L1401]              havoc __ret_0_balanceOf;
[L1402]              havoc owner_s324;
[L1403]              havoc spender_s324;
[L1404]              havoc __ret_0_allowance;
[L1405]              havoc to_s343;
[L1406]              havoc value_s343;
[L1407]              havoc __ret_0_transfer;
[L1408]              havoc spender_s379;
[L1409]              havoc value_s379;
[L1410]              havoc __ret_0_approve;
[L1411]              havoc from_s416;
[L1412]              havoc to_s416;
[L1413]              havoc value_s416;
[L1414]              havoc __ret_0_transferFrom;
[L1415]              havoc value_s229;
[L1416]              havoc name_s264;
[L1417]              havoc symbol_s264;
[L1418]              havoc decimals_s264;
[L1419]              havoc totalSupply_s264;
[L1420]              havoc __ret_0_name;
[L1421]              havoc __ret_0_symbol;
[L1422]              havoc __ret_0_decimals;
[L1423]              havoc spender_s466;
[L1424]              havoc addedValue_s466;
[L1425]              havoc __ret_0_increaseAllowance;
[L1426]              havoc spender_s516;
[L1427]              havoc subtractedValue_s516;
[L1428]              havoc __ret_0_decreaseAllowance;
[L1429]              havoc tmpNow;
[L1430]              havoc gas;
[L1431]              assume gas > 4000000 && gas <= 8000000;
[L1432]              tmpNow := now;
[L1433]              havoc now;
[L1434]              assume now > tmpNow;
[L1435]              assume msgsender_MSG != null;
[L1436]  COND TRUE   choice == 6
[L1437]              gas := gas - 21000;
[L1438]  COND FALSE  !(gas >= 0)
[L1492]  RET         call CorralChoice_FLAMA(this);

Loop:
[L1492]        assume true;

[2020-11-24 19:04:44,749 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 19:04:44,749 INFO  L82        PathProgramCache]: Analyzing trace with hash 2100899125, now seen corresponding path program 1 times
[2020-11-24 19:04:44,755 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 19:04:44,774 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 19:04:44,823 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 19:04:44,826 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 19:04:44,827 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-24 19:04:44,833 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 19:04:44,845 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-24 19:04:44,845 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-24 19:04:44,847 INFO  L87              Difference]: Start difference. First operand 1236 states. Second operand 3 states.
[2020-11-24 19:04:45,010 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 19:04:45,010 INFO  L93              Difference]: Finished difference Result 697 states and 789 transitions.
[2020-11-24 19:04:45,010 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-24 19:04:45,012 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 697 states and 789 transitions.
[2020-11-24 19:04:45,016 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 19:04:45,022 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 697 states to 259 states and 290 transitions.
[2020-11-24 19:04:45,023 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 4
[2020-11-24 19:04:45,024 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 143
[2020-11-24 19:04:45,024 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 259 states and 290 transitions.
[2020-11-24 19:04:45,027 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 19:04:45,027 INFO  L728         BuchiCegarLoop]: Abstraction has 259 states and 290 transitions.
[2020-11-24 19:04:45,040 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 259 states and 290 transitions.
[2020-11-24 19:04:45,055 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 259 to 259.
[2020-11-24 19:04:45,055 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 259 states.
[2020-11-24 19:04:45,056 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 259 states to 259 states and 290 transitions.
[2020-11-24 19:04:45,057 INFO  L751         BuchiCegarLoop]: Abstraction has 259 states and 290 transitions.
[2020-11-24 19:04:45,057 INFO  L631         BuchiCegarLoop]: Abstraction has 259 states and 290 transitions.
[2020-11-24 19:04:45,057 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-24 19:04:45,057 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 259 states and 290 transitions.
[2020-11-24 19:04:45,059 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 19:04:45,060 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 19:04:45,060 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 19:04:45,061 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 19:04:45,061 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L2]                 success_transfer_FLAMA0 := false;
[L2]                 call_transfer_FLAMA0 := false;
[L2]     CALL        call main();
[L1487]              assume null == 0;
[L1488]  CALL        call this := FreshRefGenerator__success();
[L597]               havoc newRef;
[L598]               assume Alloc[newRef] == false;
[L599]               Alloc[newRef] := true;
[L600]               assume newRef != null;
[L1488]  RET         call this := FreshRefGenerator__success();
[L1489]              assume now >= 0;
[L1490]              assume DType[this] == FLAMA;
[L1491]              assume !revert && gas >= 0;
[L1492]  CALL        call CorralChoice_FLAMA(this);
[L1396]              havoc msgsender_MSG;
[L1397]              havoc msgvalue_MSG;
[L1398]              havoc choice;
[L1399]              havoc __ret_0_totalSupply;
[L1400]              havoc owner_s308;
[L1401]              havoc __ret_0_balanceOf;
[L1402]              havoc owner_s324;
[L1403]              havoc spender_s324;
[L1404]              havoc __ret_0_allowance;
[L1405]              havoc to_s343;
[L1406]              havoc value_s343;
[L1407]              havoc __ret_0_transfer;
[L1408]              havoc spender_s379;
[L1409]              havoc value_s379;
[L1410]              havoc __ret_0_approve;
[L1411]              havoc from_s416;
[L1412]              havoc to_s416;
[L1413]              havoc value_s416;
[L1414]              havoc __ret_0_transferFrom;
[L1415]              havoc value_s229;
[L1416]              havoc name_s264;
[L1417]              havoc symbol_s264;
[L1418]              havoc decimals_s264;
[L1419]              havoc totalSupply_s264;
[L1420]              havoc __ret_0_name;
[L1421]              havoc __ret_0_symbol;
[L1422]              havoc __ret_0_decimals;
[L1423]              havoc spender_s466;
[L1424]              havoc addedValue_s466;
[L1425]              havoc __ret_0_increaseAllowance;
[L1426]              havoc spender_s516;
[L1427]              havoc subtractedValue_s516;
[L1428]              havoc __ret_0_decreaseAllowance;
[L1429]              havoc tmpNow;
[L1430]              havoc gas;
[L1431]              assume gas > 4000000 && gas <= 8000000;
[L1432]              tmpNow := now;
[L1433]              havoc now;
[L1434]              assume now > tmpNow;
[L1435]              assume msgsender_MSG != null;
[L1436]  COND FALSE  !(choice == 6)
[L1442]  COND FALSE  !(choice == 5)
[L1448]  COND FALSE  !(choice == 4)
[L1454]  COND TRUE   choice == 3
[L1455]              gas := gas - 21000;
[L1456]  COND TRUE   gas >= 0
[L1457]              assume value_s343 >= 0 && value_s343 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1458]              assume msgvalue_MSG == 0;
[L1459]  CALL        call __ret_0_transfer := transfer~address~uint256_FLAMA(this, msgsender_MSG, msgvalue_MSG, to_s343, value_s343);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == to_s343 && value_s343 <= _balances_FLAMA[this][msgsender_MSG]) && value_s343 >= 0) && value_s343 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_FLAMA[this][to_s343] >= 0) && _balances_FLAMA[this][to_s343] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_FLAMA[this][msgsender_MSG] >= 0) && _balances_FLAMA[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_FLAMA0 := true;
[L2]                 call_transfer_FLAMA0 := false;
[L2]                 revert := revert_hold;
[L228]               havoc __exception;
[L229]               revert := false;
[L230]   COND FALSE  !(__exception)
[L251]   CALL        call __ret_0_ := transfer~address~uint256_FLAMA__success(this, msgsender_MSG, msgvalue_MSG, to_s343, value_s343);
[L755]   CALL        call _transfer~address~address~uint256_FLAMA__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s343, value_s343);
[L889]               __var_3 := null;
[L890]   COND TRUE   !(to_s598 != null)
[L891]               revert := true;
[L755]   RET         call _transfer~address~address~uint256_FLAMA__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s343, value_s343);
[L756]   COND TRUE   revert
[L251]   RET         call __ret_0_ := transfer~address~uint256_FLAMA__success(this, msgsender_MSG, msgvalue_MSG, to_s343, value_s343);
[L252]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !((((((__ret_0_ == true && _totalSupply_FLAMA[this] == old(_totalSupply_FLAMA[this])) && _balances_FLAMA[this] == old(_balances_FLAMA[this])) && _allowed_FLAMA[this] == old(_allowed_FLAMA[this])) && _name_FLAMA[this] == old(_name_FLAMA[this])) && _symbol_FLAMA[this] == old(_symbol_FLAMA[this])) && _decimals_FLAMA[this] == old(_decimals_FLAMA[this]));
[L2]                 revert := revert_hold;
[L1459]  RET         call __ret_0_transfer := transfer~address~uint256_FLAMA(this, msgsender_MSG, msgvalue_MSG, to_s343, value_s343);
[L1492]  RET         call CorralChoice_FLAMA(this);

Loop:
[L1492]        assume true;

[2020-11-24 19:04:45,064 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 19:04:45,064 INFO  L82        PathProgramCache]: Analyzing trace with hash -571835242, now seen corresponding path program 1 times
[2020-11-24 19:04:45,065 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 19:04:45,076 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 19:04:45,101 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 19:04:45,101 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 19:04:45,101 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [7] imperfect sequences [] total 7
[2020-11-24 19:04:45,102 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 19:04:45,102 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 7 interpolants.
[2020-11-24 19:04:45,102 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=11, Invalid=31, Unknown=0, NotChecked=0, Total=42
[2020-11-24 19:04:45,102 INFO  L87              Difference]: Start difference. First operand 259 states and 290 transitions. cyclomatic complexity: 32 Second operand 7 states.
[2020-11-24 19:04:45,118 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 19:04:45,118 INFO  L93              Difference]: Finished difference Result 274 states and 305 transitions.
[2020-11-24 19:04:45,118 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 7 states. 
[2020-11-24 19:04:45,119 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 274 states and 305 transitions.
[2020-11-24 19:04:45,120 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 19:04:45,122 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 274 states to 258 states and 288 transitions.
[2020-11-24 19:04:45,122 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 142
[2020-11-24 19:04:45,122 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 142
[2020-11-24 19:04:45,122 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 258 states and 288 transitions.
[2020-11-24 19:04:45,123 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 19:04:45,123 INFO  L728         BuchiCegarLoop]: Abstraction has 258 states and 288 transitions.
[2020-11-24 19:04:45,123 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 258 states and 288 transitions.
[2020-11-24 19:04:45,127 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 258 to 258.
[2020-11-24 19:04:45,127 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 258 states.
[2020-11-24 19:04:45,128 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 258 states to 258 states and 288 transitions.
[2020-11-24 19:04:45,128 INFO  L751         BuchiCegarLoop]: Abstraction has 258 states and 288 transitions.
[2020-11-24 19:04:45,128 INFO  L631         BuchiCegarLoop]: Abstraction has 258 states and 288 transitions.
[2020-11-24 19:04:45,128 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-24 19:04:45,128 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 258 states and 288 transitions.
[2020-11-24 19:04:45,129 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 19:04:45,130 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 19:04:45,130 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 19:04:45,131 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 19:04:45,131 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L2]                 success_transfer_FLAMA0 := false;
[L2]                 call_transfer_FLAMA0 := false;
[L2]     CALL        call main();
[L1487]              assume null == 0;
[L1488]  CALL        call this := FreshRefGenerator__success();
[L597]               havoc newRef;
[L598]               assume Alloc[newRef] == false;
[L599]               Alloc[newRef] := true;
[L600]               assume newRef != null;
[L1488]  RET         call this := FreshRefGenerator__success();
[L1489]              assume now >= 0;
[L1490]              assume DType[this] == FLAMA;
[L1491]              assume !revert && gas >= 0;
[L1492]  CALL        call CorralChoice_FLAMA(this);
[L1396]              havoc msgsender_MSG;
[L1397]              havoc msgvalue_MSG;
[L1398]              havoc choice;
[L1399]              havoc __ret_0_totalSupply;
[L1400]              havoc owner_s308;
[L1401]              havoc __ret_0_balanceOf;
[L1402]              havoc owner_s324;
[L1403]              havoc spender_s324;
[L1404]              havoc __ret_0_allowance;
[L1405]              havoc to_s343;
[L1406]              havoc value_s343;
[L1407]              havoc __ret_0_transfer;
[L1408]              havoc spender_s379;
[L1409]              havoc value_s379;
[L1410]              havoc __ret_0_approve;
[L1411]              havoc from_s416;
[L1412]              havoc to_s416;
[L1413]              havoc value_s416;
[L1414]              havoc __ret_0_transferFrom;
[L1415]              havoc value_s229;
[L1416]              havoc name_s264;
[L1417]              havoc symbol_s264;
[L1418]              havoc decimals_s264;
[L1419]              havoc totalSupply_s264;
[L1420]              havoc __ret_0_name;
[L1421]              havoc __ret_0_symbol;
[L1422]              havoc __ret_0_decimals;
[L1423]              havoc spender_s466;
[L1424]              havoc addedValue_s466;
[L1425]              havoc __ret_0_increaseAllowance;
[L1426]              havoc spender_s516;
[L1427]              havoc subtractedValue_s516;
[L1428]              havoc __ret_0_decreaseAllowance;
[L1429]              havoc tmpNow;
[L1430]              havoc gas;
[L1431]              assume gas > 4000000 && gas <= 8000000;
[L1432]              tmpNow := now;
[L1433]              havoc now;
[L1434]              assume now > tmpNow;
[L1435]              assume msgsender_MSG != null;
[L1436]  COND FALSE  !(choice == 6)
[L1442]  COND FALSE  !(choice == 5)
[L1448]  COND FALSE  !(choice == 4)
[L1454]  COND TRUE   choice == 3
[L1455]              gas := gas - 21000;
[L1456]  COND TRUE   gas >= 0
[L1457]              assume value_s343 >= 0 && value_s343 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1458]              assume msgvalue_MSG == 0;
[L1459]  CALL        call __ret_0_transfer := transfer~address~uint256_FLAMA(this, msgsender_MSG, msgvalue_MSG, to_s343, value_s343);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == to_s343 && value_s343 <= _balances_FLAMA[this][msgsender_MSG]) && value_s343 >= 0) && value_s343 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_FLAMA[this][to_s343] >= 0) && _balances_FLAMA[this][to_s343] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_FLAMA[this][msgsender_MSG] >= 0) && _balances_FLAMA[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_FLAMA0 := true;
[L2]                 call_transfer_FLAMA0 := false;
[L2]                 revert := revert_hold;
[L228]               havoc __exception;
[L229]               revert := false;
[L230]   COND FALSE  !(__exception)
[L251]   CALL        call __ret_0_ := transfer~address~uint256_FLAMA__success(this, msgsender_MSG, msgvalue_MSG, to_s343, value_s343);
[L755]   CALL        call _transfer~address~address~uint256_FLAMA__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s343, value_s343);
[L889]               __var_3 := null;
[L890]   COND FALSE  !(!(to_s598 != null))
[L894]   CALL        call onePercent_s598 := div~uint256~uint256_SafeMath__success(this, this, 0, value_s598, 100);
[L650]   COND TRUE   !(b_s58 > 0)
[L651]               revert := true;
[L894]   RET         call onePercent_s598 := div~uint256~uint256_SafeMath__success(this, this, 0, value_s598, 100);
[L895]   COND TRUE   revert
[L755]   RET         call _transfer~address~address~uint256_FLAMA__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s343, value_s343);
[L756]   COND TRUE   revert
[L251]   RET         call __ret_0_ := transfer~address~uint256_FLAMA__success(this, msgsender_MSG, msgvalue_MSG, to_s343, value_s343);
[L252]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !((((((__ret_0_ == true && _totalSupply_FLAMA[this] == old(_totalSupply_FLAMA[this])) && _balances_FLAMA[this] == old(_balances_FLAMA[this])) && _allowed_FLAMA[this] == old(_allowed_FLAMA[this])) && _name_FLAMA[this] == old(_name_FLAMA[this])) && _symbol_FLAMA[this] == old(_symbol_FLAMA[this])) && _decimals_FLAMA[this] == old(_decimals_FLAMA[this]));
[L2]                 revert := revert_hold;
[L1459]  RET         call __ret_0_transfer := transfer~address~uint256_FLAMA(this, msgsender_MSG, msgvalue_MSG, to_s343, value_s343);
[L1492]  RET         call CorralChoice_FLAMA(this);

Loop:
[L1492]        assume true;

[2020-11-24 19:04:45,133 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 19:04:45,133 INFO  L82        PathProgramCache]: Analyzing trace with hash 1541665835, now seen corresponding path program 1 times
[2020-11-24 19:04:45,134 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 19:04:45,144 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 19:04:45,159 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 19:04:45,160 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 19:04:45,160 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-24 19:04:45,160 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 19:04:45,160 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-24 19:04:45,160 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-24 19:04:45,160 INFO  L87              Difference]: Start difference. First operand 258 states and 288 transitions. cyclomatic complexity: 31 Second operand 3 states.
[2020-11-24 19:04:45,164 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 19:04:45,164 INFO  L93              Difference]: Finished difference Result 260 states and 289 transitions.
[2020-11-24 19:04:45,164 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-24 19:04:45,164 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 260 states and 289 transitions.
[2020-11-24 19:04:45,166 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 19:04:45,167 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 260 states to 257 states and 286 transitions.
[2020-11-24 19:04:45,167 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 142
[2020-11-24 19:04:45,167 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 142
[2020-11-24 19:04:45,167 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 257 states and 286 transitions.
[2020-11-24 19:04:45,167 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 19:04:45,168 INFO  L728         BuchiCegarLoop]: Abstraction has 257 states and 286 transitions.
[2020-11-24 19:04:45,168 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 257 states and 286 transitions.
[2020-11-24 19:04:45,170 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 257 to 257.
[2020-11-24 19:04:45,170 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 257 states.
[2020-11-24 19:04:45,171 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 257 states to 257 states and 286 transitions.
[2020-11-24 19:04:45,171 INFO  L751         BuchiCegarLoop]: Abstraction has 257 states and 286 transitions.
[2020-11-24 19:04:45,171 INFO  L631         BuchiCegarLoop]: Abstraction has 257 states and 286 transitions.
[2020-11-24 19:04:45,171 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-24 19:04:45,171 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 257 states and 286 transitions.
[2020-11-24 19:04:45,172 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 19:04:45,172 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 19:04:45,172 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 19:04:45,173 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 19:04:45,173 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L2]                 success_transfer_FLAMA0 := false;
[L2]                 call_transfer_FLAMA0 := false;
[L2]     CALL        call main();
[L1487]              assume null == 0;
[L1488]  CALL        call this := FreshRefGenerator__success();
[L597]               havoc newRef;
[L598]               assume Alloc[newRef] == false;
[L599]               Alloc[newRef] := true;
[L600]               assume newRef != null;
[L1488]  RET         call this := FreshRefGenerator__success();
[L1489]              assume now >= 0;
[L1490]              assume DType[this] == FLAMA;
[L1491]              assume !revert && gas >= 0;
[L1492]  CALL        call CorralChoice_FLAMA(this);
[L1396]              havoc msgsender_MSG;
[L1397]              havoc msgvalue_MSG;
[L1398]              havoc choice;
[L1399]              havoc __ret_0_totalSupply;
[L1400]              havoc owner_s308;
[L1401]              havoc __ret_0_balanceOf;
[L1402]              havoc owner_s324;
[L1403]              havoc spender_s324;
[L1404]              havoc __ret_0_allowance;
[L1405]              havoc to_s343;
[L1406]              havoc value_s343;
[L1407]              havoc __ret_0_transfer;
[L1408]              havoc spender_s379;
[L1409]              havoc value_s379;
[L1410]              havoc __ret_0_approve;
[L1411]              havoc from_s416;
[L1412]              havoc to_s416;
[L1413]              havoc value_s416;
[L1414]              havoc __ret_0_transferFrom;
[L1415]              havoc value_s229;
[L1416]              havoc name_s264;
[L1417]              havoc symbol_s264;
[L1418]              havoc decimals_s264;
[L1419]              havoc totalSupply_s264;
[L1420]              havoc __ret_0_name;
[L1421]              havoc __ret_0_symbol;
[L1422]              havoc __ret_0_decimals;
[L1423]              havoc spender_s466;
[L1424]              havoc addedValue_s466;
[L1425]              havoc __ret_0_increaseAllowance;
[L1426]              havoc spender_s516;
[L1427]              havoc subtractedValue_s516;
[L1428]              havoc __ret_0_decreaseAllowance;
[L1429]              havoc tmpNow;
[L1430]              havoc gas;
[L1431]              assume gas > 4000000 && gas <= 8000000;
[L1432]              tmpNow := now;
[L1433]              havoc now;
[L1434]              assume now > tmpNow;
[L1435]              assume msgsender_MSG != null;
[L1436]  COND FALSE  !(choice == 6)
[L1442]  COND FALSE  !(choice == 5)
[L1448]  COND FALSE  !(choice == 4)
[L1454]  COND TRUE   choice == 3
[L1455]              gas := gas - 21000;
[L1456]  COND TRUE   gas >= 0
[L1457]              assume value_s343 >= 0 && value_s343 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1458]              assume msgvalue_MSG == 0;
[L1459]  CALL        call __ret_0_transfer := transfer~address~uint256_FLAMA(this, msgsender_MSG, msgvalue_MSG, to_s343, value_s343);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == to_s343 && value_s343 <= _balances_FLAMA[this][msgsender_MSG]) && value_s343 >= 0) && value_s343 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_FLAMA[this][to_s343] >= 0) && _balances_FLAMA[this][to_s343] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_FLAMA[this][msgsender_MSG] >= 0) && _balances_FLAMA[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_FLAMA0 := true;
[L2]                 call_transfer_FLAMA0 := false;
[L2]                 revert := revert_hold;
[L228]               havoc __exception;
[L229]               revert := false;
[L230]   COND FALSE  !(__exception)
[L251]   CALL        call __ret_0_ := transfer~address~uint256_FLAMA__success(this, msgsender_MSG, msgvalue_MSG, to_s343, value_s343);
[L755]   CALL        call _transfer~address~address~uint256_FLAMA__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s343, value_s343);
[L889]               __var_3 := null;
[L890]   COND FALSE  !(!(to_s598 != null))
[L894]   CALL        call onePercent_s598 := div~uint256~uint256_SafeMath__success(this, this, 0, value_s598, 100);
[L650]   COND FALSE  !(!(b_s58 > 0))
[L654]               c_s58 := nonlinearDiv(a_s58, b_s58) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L655]               __ret_0_ := c_s58;
[L894]   RET         call onePercent_s598 := div~uint256~uint256_SafeMath__success(this, this, 0, value_s598, 100);
[L895]   COND TRUE   revert
[L755]   RET         call _transfer~address~address~uint256_FLAMA__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s343, value_s343);
[L756]   COND TRUE   revert
[L251]   RET         call __ret_0_ := transfer~address~uint256_FLAMA__success(this, msgsender_MSG, msgvalue_MSG, to_s343, value_s343);
[L252]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !((((((__ret_0_ == true && _totalSupply_FLAMA[this] == old(_totalSupply_FLAMA[this])) && _balances_FLAMA[this] == old(_balances_FLAMA[this])) && _allowed_FLAMA[this] == old(_allowed_FLAMA[this])) && _name_FLAMA[this] == old(_name_FLAMA[this])) && _symbol_FLAMA[this] == old(_symbol_FLAMA[this])) && _decimals_FLAMA[this] == old(_decimals_FLAMA[this]));
[L2]                 revert := revert_hold;
[L1459]  RET         call __ret_0_transfer := transfer~address~uint256_FLAMA(this, msgsender_MSG, msgvalue_MSG, to_s343, value_s343);
[L1492]  RET         call CorralChoice_FLAMA(this);

Loop:
[L1492]        assume true;

[2020-11-24 19:04:45,174 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 19:04:45,174 INFO  L82        PathProgramCache]: Analyzing trace with hash -478308898, now seen corresponding path program 1 times
[2020-11-24 19:04:45,175 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 19:04:45,180 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 19:04:45,191 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 19:04:45,191 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 19:04:45,191 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-24 19:04:45,191 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 19:04:45,192 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-24 19:04:45,192 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-24 19:04:45,192 INFO  L87              Difference]: Start difference. First operand 257 states and 286 transitions. cyclomatic complexity: 30 Second operand 3 states.
[2020-11-24 19:04:45,200 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 19:04:45,200 INFO  L93              Difference]: Finished difference Result 316 states and 348 transitions.
[2020-11-24 19:04:45,200 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-24 19:04:45,200 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 316 states and 348 transitions.
[2020-11-24 19:04:45,202 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 2
[2020-11-24 19:04:45,203 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 316 states to 289 states and 310 transitions.
[2020-11-24 19:04:45,203 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 162
[2020-11-24 19:04:45,203 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 179
[2020-11-24 19:04:45,203 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 289 states and 310 transitions.
[2020-11-24 19:04:45,204 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 19:04:45,204 INFO  L728         BuchiCegarLoop]: Abstraction has 289 states and 310 transitions.
[2020-11-24 19:04:45,204 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 289 states and 310 transitions.
[2020-11-24 19:04:45,206 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 289 to 278.
[2020-11-24 19:04:45,206 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 278 states.
[2020-11-24 19:04:45,207 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 278 states to 278 states and 299 transitions.
[2020-11-24 19:04:45,207 INFO  L751         BuchiCegarLoop]: Abstraction has 278 states and 299 transitions.
[2020-11-24 19:04:45,207 INFO  L631         BuchiCegarLoop]: Abstraction has 278 states and 299 transitions.
[2020-11-24 19:04:45,207 INFO  L445         BuchiCegarLoop]: ======== Iteration 5============
[2020-11-24 19:04:45,207 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 278 states and 299 transitions.
[2020-11-24 19:04:45,208 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 19:04:45,208 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 19:04:45,208 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 19:04:45,208 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 19:04:45,208 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L2]                 success_transfer_FLAMA0 := false;
[L2]                 call_transfer_FLAMA0 := false;
[L2]     CALL        call main();
[L1487]              assume null == 0;
[L1488]  CALL        call this := FreshRefGenerator__success();
[L597]               havoc newRef;
[L598]               assume Alloc[newRef] == false;
[L599]               Alloc[newRef] := true;
[L600]               assume newRef != null;
[L1488]  RET         call this := FreshRefGenerator__success();
[L1489]              assume now >= 0;
[L1490]              assume DType[this] == FLAMA;
[L1491]              assume !revert && gas >= 0;
[L1492]  CALL        call CorralChoice_FLAMA(this);
[L1396]              havoc msgsender_MSG;
[L1397]              havoc msgvalue_MSG;
[L1398]              havoc choice;
[L1399]              havoc __ret_0_totalSupply;
[L1400]              havoc owner_s308;
[L1401]              havoc __ret_0_balanceOf;
[L1402]              havoc owner_s324;
[L1403]              havoc spender_s324;
[L1404]              havoc __ret_0_allowance;
[L1405]              havoc to_s343;
[L1406]              havoc value_s343;
[L1407]              havoc __ret_0_transfer;
[L1408]              havoc spender_s379;
[L1409]              havoc value_s379;
[L1410]              havoc __ret_0_approve;
[L1411]              havoc from_s416;
[L1412]              havoc to_s416;
[L1413]              havoc value_s416;
[L1414]              havoc __ret_0_transferFrom;
[L1415]              havoc value_s229;
[L1416]              havoc name_s264;
[L1417]              havoc symbol_s264;
[L1418]              havoc decimals_s264;
[L1419]              havoc totalSupply_s264;
[L1420]              havoc __ret_0_name;
[L1421]              havoc __ret_0_symbol;
[L1422]              havoc __ret_0_decimals;
[L1423]              havoc spender_s466;
[L1424]              havoc addedValue_s466;
[L1425]              havoc __ret_0_increaseAllowance;
[L1426]              havoc spender_s516;
[L1427]              havoc subtractedValue_s516;
[L1428]              havoc __ret_0_decreaseAllowance;
[L1429]              havoc tmpNow;
[L1430]              havoc gas;
[L1431]              assume gas > 4000000 && gas <= 8000000;
[L1432]              tmpNow := now;
[L1433]              havoc now;
[L1434]              assume now > tmpNow;
[L1435]              assume msgsender_MSG != null;
[L1436]  COND FALSE  !(choice == 6)
[L1442]  COND FALSE  !(choice == 5)
[L1448]  COND FALSE  !(choice == 4)
[L1454]  COND TRUE   choice == 3
[L1455]              gas := gas - 21000;
[L1456]  COND TRUE   gas >= 0
[L1457]              assume value_s343 >= 0 && value_s343 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1458]              assume msgvalue_MSG == 0;
[L1459]  CALL        call __ret_0_transfer := transfer~address~uint256_FLAMA(this, msgsender_MSG, msgvalue_MSG, to_s343, value_s343);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == to_s343 && value_s343 <= _balances_FLAMA[this][msgsender_MSG]) && value_s343 >= 0) && value_s343 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_FLAMA[this][to_s343] >= 0) && _balances_FLAMA[this][to_s343] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_FLAMA[this][msgsender_MSG] >= 0) && _balances_FLAMA[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_FLAMA0 := true;
[L2]                 call_transfer_FLAMA0 := false;
[L2]                 revert := revert_hold;
[L228]               havoc __exception;
[L229]               revert := false;
[L230]   COND TRUE   __exception
[L231]               __tmp__Balance := Balance;
[L232]               __tmp__DType := DType;
[L233]               __tmp__Alloc := Alloc;
[L234]               __tmp__balance_ADDR := balance_ADDR;
[L235]               __tmp__M_Ref_int := M_Ref_int;
[L236]               __tmp__sum__balances0 := sum__balances0;
[L237]               __tmp__alloc__allowed_FLAMA_lvl0 := alloc__allowed_FLAMA_lvl0;
[L238]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L239]               __tmp__sum__allowed1 := sum__allowed1;
[L240]               __tmp__Length := Length;
[L241]               __tmp__now := now;
[L242]               __tmp___name_FLAMA := _name_FLAMA;
[L243]               __tmp___symbol_FLAMA := _symbol_FLAMA;
[L244]               __tmp___decimals_FLAMA := _decimals_FLAMA;
[L245]               __tmp___totalSupply_FLAMA := _totalSupply_FLAMA;
[L246]               __tmp___balances_FLAMA := _balances_FLAMA;
[L247]               __tmp___allowed_FLAMA := _allowed_FLAMA;
[L248]   CALL        call __ret_0_ := transfer~address~uint256_FLAMA__fail(this, msgsender_MSG, msgvalue_MSG, to_s343, value_s343);
[L745]   CALL        call _transfer~address~address~uint256_FLAMA__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s343, value_s343);
[L839]               __var_3 := null;
[L840]   COND TRUE   !(to_s598 != null)
[L841]               revert := true;
[L745]   RET         call _transfer~address~address~uint256_FLAMA__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s343, value_s343);
[L746]   COND TRUE   revert
[L248]   RET         call __ret_0_ := transfer~address~uint256_FLAMA__fail(this, msgsender_MSG, msgvalue_MSG, to_s343, value_s343);
[L249]               assume revert || gas < 0;
[L1459]  RET         call __ret_0_transfer := transfer~address~uint256_FLAMA(this, msgsender_MSG, msgvalue_MSG, to_s343, value_s343);
[L1492]  RET         call CorralChoice_FLAMA(this);

Loop:
[L1492]        assume true;

[2020-11-24 19:04:45,210 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 19:04:45,210 INFO  L82        PathProgramCache]: Analyzing trace with hash 730217571, now seen corresponding path program 1 times
[2020-11-24 19:04:45,210 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 19:04:45,216 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 19:04:45,232 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 19:04:45,232 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 19:04:45,232 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [7] imperfect sequences [] total 7
[2020-11-24 19:04:45,233 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 19:04:45,233 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 7 interpolants.
[2020-11-24 19:04:45,233 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=11, Invalid=31, Unknown=0, NotChecked=0, Total=42
[2020-11-24 19:04:45,233 INFO  L87              Difference]: Start difference. First operand 278 states and 299 transitions. cyclomatic complexity: 22 Second operand 7 states.
[2020-11-24 19:04:45,244 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 19:04:45,244 INFO  L93              Difference]: Finished difference Result 288 states and 308 transitions.
[2020-11-24 19:04:45,244 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 7 states. 
[2020-11-24 19:04:45,245 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 288 states and 308 transitions.
[2020-11-24 19:04:45,246 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 19:04:45,247 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 288 states to 277 states and 297 transitions.
[2020-11-24 19:04:45,247 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 167
[2020-11-24 19:04:45,247 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 167
[2020-11-24 19:04:45,247 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 277 states and 297 transitions.
[2020-11-24 19:04:45,247 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 19:04:45,247 INFO  L728         BuchiCegarLoop]: Abstraction has 277 states and 297 transitions.
[2020-11-24 19:04:45,248 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 277 states and 297 transitions.
[2020-11-24 19:04:45,249 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 277 to 277.
[2020-11-24 19:04:45,249 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 277 states.
[2020-11-24 19:04:45,250 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 277 states to 277 states and 297 transitions.
[2020-11-24 19:04:45,250 INFO  L751         BuchiCegarLoop]: Abstraction has 277 states and 297 transitions.
[2020-11-24 19:04:45,250 INFO  L631         BuchiCegarLoop]: Abstraction has 277 states and 297 transitions.
[2020-11-24 19:04:45,250 INFO  L445         BuchiCegarLoop]: ======== Iteration 6============
[2020-11-24 19:04:45,250 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 277 states and 297 transitions.
[2020-11-24 19:04:45,251 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 19:04:45,251 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 19:04:45,251 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 19:04:45,251 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 19:04:45,252 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L2]                 success_transfer_FLAMA0 := false;
[L2]                 call_transfer_FLAMA0 := false;
[L2]     CALL        call main();
[L1487]              assume null == 0;
[L1488]  CALL        call this := FreshRefGenerator__success();
[L597]               havoc newRef;
[L598]               assume Alloc[newRef] == false;
[L599]               Alloc[newRef] := true;
[L600]               assume newRef != null;
[L1488]  RET         call this := FreshRefGenerator__success();
[L1489]              assume now >= 0;
[L1490]              assume DType[this] == FLAMA;
[L1491]              assume !revert && gas >= 0;
[L1492]  CALL        call CorralChoice_FLAMA(this);
[L1396]              havoc msgsender_MSG;
[L1397]              havoc msgvalue_MSG;
[L1398]              havoc choice;
[L1399]              havoc __ret_0_totalSupply;
[L1400]              havoc owner_s308;
[L1401]              havoc __ret_0_balanceOf;
[L1402]              havoc owner_s324;
[L1403]              havoc spender_s324;
[L1404]              havoc __ret_0_allowance;
[L1405]              havoc to_s343;
[L1406]              havoc value_s343;
[L1407]              havoc __ret_0_transfer;
[L1408]              havoc spender_s379;
[L1409]              havoc value_s379;
[L1410]              havoc __ret_0_approve;
[L1411]              havoc from_s416;
[L1412]              havoc to_s416;
[L1413]              havoc value_s416;
[L1414]              havoc __ret_0_transferFrom;
[L1415]              havoc value_s229;
[L1416]              havoc name_s264;
[L1417]              havoc symbol_s264;
[L1418]              havoc decimals_s264;
[L1419]              havoc totalSupply_s264;
[L1420]              havoc __ret_0_name;
[L1421]              havoc __ret_0_symbol;
[L1422]              havoc __ret_0_decimals;
[L1423]              havoc spender_s466;
[L1424]              havoc addedValue_s466;
[L1425]              havoc __ret_0_increaseAllowance;
[L1426]              havoc spender_s516;
[L1427]              havoc subtractedValue_s516;
[L1428]              havoc __ret_0_decreaseAllowance;
[L1429]              havoc tmpNow;
[L1430]              havoc gas;
[L1431]              assume gas > 4000000 && gas <= 8000000;
[L1432]              tmpNow := now;
[L1433]              havoc now;
[L1434]              assume now > tmpNow;
[L1435]              assume msgsender_MSG != null;
[L1436]  COND FALSE  !(choice == 6)
[L1442]  COND FALSE  !(choice == 5)
[L1448]  COND FALSE  !(choice == 4)
[L1454]  COND TRUE   choice == 3
[L1455]              gas := gas - 21000;
[L1456]  COND TRUE   gas >= 0
[L1457]              assume value_s343 >= 0 && value_s343 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1458]              assume msgvalue_MSG == 0;
[L1459]  CALL        call __ret_0_transfer := transfer~address~uint256_FLAMA(this, msgsender_MSG, msgvalue_MSG, to_s343, value_s343);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == to_s343 && value_s343 <= _balances_FLAMA[this][msgsender_MSG]) && value_s343 >= 0) && value_s343 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_FLAMA[this][to_s343] >= 0) && _balances_FLAMA[this][to_s343] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_FLAMA[this][msgsender_MSG] >= 0) && _balances_FLAMA[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_FLAMA0 := true;
[L2]                 call_transfer_FLAMA0 := false;
[L2]                 revert := revert_hold;
[L228]               havoc __exception;
[L229]               revert := false;
[L230]   COND TRUE   __exception
[L231]               __tmp__Balance := Balance;
[L232]               __tmp__DType := DType;
[L233]               __tmp__Alloc := Alloc;
[L234]               __tmp__balance_ADDR := balance_ADDR;
[L235]               __tmp__M_Ref_int := M_Ref_int;
[L236]               __tmp__sum__balances0 := sum__balances0;
[L237]               __tmp__alloc__allowed_FLAMA_lvl0 := alloc__allowed_FLAMA_lvl0;
[L238]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L239]               __tmp__sum__allowed1 := sum__allowed1;
[L240]               __tmp__Length := Length;
[L241]               __tmp__now := now;
[L242]               __tmp___name_FLAMA := _name_FLAMA;
[L243]               __tmp___symbol_FLAMA := _symbol_FLAMA;
[L244]               __tmp___decimals_FLAMA := _decimals_FLAMA;
[L245]               __tmp___totalSupply_FLAMA := _totalSupply_FLAMA;
[L246]               __tmp___balances_FLAMA := _balances_FLAMA;
[L247]               __tmp___allowed_FLAMA := _allowed_FLAMA;
[L248]   CALL        call __ret_0_ := transfer~address~uint256_FLAMA__fail(this, msgsender_MSG, msgvalue_MSG, to_s343, value_s343);
[L745]   CALL        call _transfer~address~address~uint256_FLAMA__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s343, value_s343);
[L839]               __var_3 := null;
[L840]   COND FALSE  !(!(to_s598 != null))
[L844]   CALL        call onePercent_s598 := div~uint256~uint256_SafeMath__fail(this, this, 0, value_s598, 100);
[L638]   COND TRUE   !(b_s58 > 0)
[L639]               revert := true;
[L844]   RET         call onePercent_s598 := div~uint256~uint256_SafeMath__fail(this, this, 0, value_s598, 100);
[L845]   COND TRUE   revert
[L745]   RET         call _transfer~address~address~uint256_FLAMA__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s343, value_s343);
[L746]   COND TRUE   revert
[L248]   RET         call __ret_0_ := transfer~address~uint256_FLAMA__fail(this, msgsender_MSG, msgvalue_MSG, to_s343, value_s343);
[L249]               assume revert || gas < 0;
[L1459]  RET         call __ret_0_transfer := transfer~address~uint256_FLAMA(this, msgsender_MSG, msgvalue_MSG, to_s343, value_s343);
[L1492]  RET         call CorralChoice_FLAMA(this);

Loop:
[L1492]        assume true;

[2020-11-24 19:04:45,253 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 19:04:45,253 INFO  L82        PathProgramCache]: Analyzing trace with hash -1815245303, now seen corresponding path program 1 times
[2020-11-24 19:04:45,254 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 19:04:45,258 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 19:04:45,269 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 19:04:45,269 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 19:04:45,269 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-24 19:04:45,269 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 19:04:45,270 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-24 19:04:45,270 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-24 19:04:45,270 INFO  L87              Difference]: Start difference. First operand 277 states and 297 transitions. cyclomatic complexity: 21 Second operand 3 states.
[2020-11-24 19:04:45,273 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 19:04:45,273 INFO  L93              Difference]: Finished difference Result 275 states and 294 transitions.
[2020-11-24 19:04:45,273 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-24 19:04:45,273 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 275 states and 294 transitions.
[2020-11-24 19:04:45,274 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 19:04:45,275 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 275 states to 272 states and 291 transitions.
[2020-11-24 19:04:45,275 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 162
[2020-11-24 19:04:45,276 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 162
[2020-11-24 19:04:45,276 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 272 states and 291 transitions.
[2020-11-24 19:04:45,276 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 19:04:45,276 INFO  L728         BuchiCegarLoop]: Abstraction has 272 states and 291 transitions.
[2020-11-24 19:04:45,276 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 272 states and 291 transitions.
[2020-11-24 19:04:45,278 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 272 to 272.
[2020-11-24 19:04:45,278 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 272 states.
[2020-11-24 19:04:45,279 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 272 states to 272 states and 291 transitions.
[2020-11-24 19:04:45,279 INFO  L751         BuchiCegarLoop]: Abstraction has 272 states and 291 transitions.
[2020-11-24 19:04:45,279 INFO  L631         BuchiCegarLoop]: Abstraction has 272 states and 291 transitions.
[2020-11-24 19:04:45,279 INFO  L445         BuchiCegarLoop]: ======== Iteration 7============
[2020-11-24 19:04:45,279 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 272 states and 291 transitions.
[2020-11-24 19:04:45,280 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 19:04:45,280 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 19:04:45,280 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 19:04:45,280 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 19:04:45,280 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L2]                 success_transfer_FLAMA0 := false;
[L2]                 call_transfer_FLAMA0 := false;
[L2]     CALL        call main();
[L1487]              assume null == 0;
[L1488]  CALL        call this := FreshRefGenerator__success();
[L597]               havoc newRef;
[L598]               assume Alloc[newRef] == false;
[L599]               Alloc[newRef] := true;
[L600]               assume newRef != null;
[L1488]  RET         call this := FreshRefGenerator__success();
[L1489]              assume now >= 0;
[L1490]              assume DType[this] == FLAMA;
[L1491]              assume !revert && gas >= 0;
[L1492]  CALL        call CorralChoice_FLAMA(this);
[L1396]              havoc msgsender_MSG;
[L1397]              havoc msgvalue_MSG;
[L1398]              havoc choice;
[L1399]              havoc __ret_0_totalSupply;
[L1400]              havoc owner_s308;
[L1401]              havoc __ret_0_balanceOf;
[L1402]              havoc owner_s324;
[L1403]              havoc spender_s324;
[L1404]              havoc __ret_0_allowance;
[L1405]              havoc to_s343;
[L1406]              havoc value_s343;
[L1407]              havoc __ret_0_transfer;
[L1408]              havoc spender_s379;
[L1409]              havoc value_s379;
[L1410]              havoc __ret_0_approve;
[L1411]              havoc from_s416;
[L1412]              havoc to_s416;
[L1413]              havoc value_s416;
[L1414]              havoc __ret_0_transferFrom;
[L1415]              havoc value_s229;
[L1416]              havoc name_s264;
[L1417]              havoc symbol_s264;
[L1418]              havoc decimals_s264;
[L1419]              havoc totalSupply_s264;
[L1420]              havoc __ret_0_name;
[L1421]              havoc __ret_0_symbol;
[L1422]              havoc __ret_0_decimals;
[L1423]              havoc spender_s466;
[L1424]              havoc addedValue_s466;
[L1425]              havoc __ret_0_increaseAllowance;
[L1426]              havoc spender_s516;
[L1427]              havoc subtractedValue_s516;
[L1428]              havoc __ret_0_decreaseAllowance;
[L1429]              havoc tmpNow;
[L1430]              havoc gas;
[L1431]              assume gas > 4000000 && gas <= 8000000;
[L1432]              tmpNow := now;
[L1433]              havoc now;
[L1434]              assume now > tmpNow;
[L1435]              assume msgsender_MSG != null;
[L1436]  COND FALSE  !(choice == 6)
[L1442]  COND FALSE  !(choice == 5)
[L1448]  COND FALSE  !(choice == 4)
[L1454]  COND TRUE   choice == 3
[L1455]              gas := gas - 21000;
[L1456]  COND TRUE   gas >= 0
[L1457]              assume value_s343 >= 0 && value_s343 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1458]              assume msgvalue_MSG == 0;
[L1459]  CALL        call __ret_0_transfer := transfer~address~uint256_FLAMA(this, msgsender_MSG, msgvalue_MSG, to_s343, value_s343);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == to_s343 && value_s343 <= _balances_FLAMA[this][msgsender_MSG]) && value_s343 >= 0) && value_s343 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_FLAMA[this][to_s343] >= 0) && _balances_FLAMA[this][to_s343] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_FLAMA[this][msgsender_MSG] >= 0) && _balances_FLAMA[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_FLAMA0 := true;
[L2]                 call_transfer_FLAMA0 := false;
[L2]                 revert := revert_hold;
[L228]               havoc __exception;
[L229]               revert := false;
[L230]   COND TRUE   __exception
[L231]               __tmp__Balance := Balance;
[L232]               __tmp__DType := DType;
[L233]               __tmp__Alloc := Alloc;
[L234]               __tmp__balance_ADDR := balance_ADDR;
[L235]               __tmp__M_Ref_int := M_Ref_int;
[L236]               __tmp__sum__balances0 := sum__balances0;
[L237]               __tmp__alloc__allowed_FLAMA_lvl0 := alloc__allowed_FLAMA_lvl0;
[L238]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L239]               __tmp__sum__allowed1 := sum__allowed1;
[L240]               __tmp__Length := Length;
[L241]               __tmp__now := now;
[L242]               __tmp___name_FLAMA := _name_FLAMA;
[L243]               __tmp___symbol_FLAMA := _symbol_FLAMA;
[L244]               __tmp___decimals_FLAMA := _decimals_FLAMA;
[L245]               __tmp___totalSupply_FLAMA := _totalSupply_FLAMA;
[L246]               __tmp___balances_FLAMA := _balances_FLAMA;
[L247]               __tmp___allowed_FLAMA := _allowed_FLAMA;
[L248]   CALL        call __ret_0_ := transfer~address~uint256_FLAMA__fail(this, msgsender_MSG, msgvalue_MSG, to_s343, value_s343);
[L745]   CALL        call _transfer~address~address~uint256_FLAMA__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s343, value_s343);
[L839]               __var_3 := null;
[L840]   COND FALSE  !(!(to_s598 != null))
[L844]   CALL        call onePercent_s598 := div~uint256~uint256_SafeMath__fail(this, this, 0, value_s598, 100);
[L638]   COND FALSE  !(!(b_s58 > 0))
[L642]               c_s58 := nonlinearDiv(a_s58, b_s58) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L643]               __ret_0_ := c_s58;
[L844]   RET         call onePercent_s598 := div~uint256~uint256_SafeMath__fail(this, this, 0, value_s598, 100);
[L845]   COND TRUE   revert
[L745]   RET         call _transfer~address~address~uint256_FLAMA__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s343, value_s343);
[L746]   COND TRUE   revert
[L248]   RET         call __ret_0_ := transfer~address~uint256_FLAMA__fail(this, msgsender_MSG, msgvalue_MSG, to_s343, value_s343);
[L249]               assume revert || gas < 0;
[L1459]  RET         call __ret_0_transfer := transfer~address~uint256_FLAMA(this, msgsender_MSG, msgvalue_MSG, to_s343, value_s343);
[L1492]  RET         call CorralChoice_FLAMA(this);

Loop:
[L1492]        assume true;

[2020-11-24 19:04:45,282 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 19:04:45,282 INFO  L82        PathProgramCache]: Analyzing trace with hash 1635625743, now seen corresponding path program 1 times
[2020-11-24 19:04:45,283 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 19:04:45,287 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 19:04:45,301 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 19:04:45,301 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 19:04:45,302 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [5] imperfect sequences [] total 5
[2020-11-24 19:04:45,302 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 19:04:45,302 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 5 interpolants.
[2020-11-24 19:04:45,302 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=9, Invalid=11, Unknown=0, NotChecked=0, Total=20
[2020-11-24 19:04:45,302 INFO  L87              Difference]: Start difference. First operand 272 states and 291 transitions. cyclomatic complexity: 20 Second operand 5 states.
[2020-11-24 19:04:45,317 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 19:04:45,317 INFO  L93              Difference]: Finished difference Result 283 states and 295 transitions.
[2020-11-24 19:04:45,318 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-24 19:04:45,318 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 283 states and 295 transitions.
[2020-11-24 19:04:45,319 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 2
[2020-11-24 19:04:45,320 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 283 states to 283 states and 295 transitions.
[2020-11-24 19:04:45,320 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 173
[2020-11-24 19:04:45,320 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 173
[2020-11-24 19:04:45,320 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 283 states and 295 transitions.
[2020-11-24 19:04:45,321 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 19:04:45,321 INFO  L728         BuchiCegarLoop]: Abstraction has 283 states and 295 transitions.
[2020-11-24 19:04:45,321 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 283 states and 295 transitions.
[2020-11-24 19:04:45,323 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 283 to 272.
[2020-11-24 19:04:45,323 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 272 states.
[2020-11-24 19:04:45,324 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 272 states to 272 states and 284 transitions.
[2020-11-24 19:04:45,324 INFO  L751         BuchiCegarLoop]: Abstraction has 272 states and 284 transitions.
[2020-11-24 19:04:45,324 INFO  L631         BuchiCegarLoop]: Abstraction has 272 states and 284 transitions.
[2020-11-24 19:04:45,324 INFO  L445         BuchiCegarLoop]: ======== Iteration 8============
[2020-11-24 19:04:45,324 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 272 states and 284 transitions.
[2020-11-24 19:04:45,325 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 19:04:45,325 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 19:04:45,325 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 19:04:45,326 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 19:04:45,326 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L2]                 success_transfer_FLAMA0 := false;
[L2]                 call_transfer_FLAMA0 := false;
[L2]     CALL        call main();
[L1487]              assume null == 0;
[L1488]  CALL        call this := FreshRefGenerator__success();
[L597]               havoc newRef;
[L598]               assume Alloc[newRef] == false;
[L599]               Alloc[newRef] := true;
[L600]               assume newRef != null;
[L1488]  RET         call this := FreshRefGenerator__success();
[L1489]              assume now >= 0;
[L1490]              assume DType[this] == FLAMA;
[L1491]              assume !revert && gas >= 0;
[L1492]  CALL        call CorralChoice_FLAMA(this);
[L1396]              havoc msgsender_MSG;
[L1397]              havoc msgvalue_MSG;
[L1398]              havoc choice;
[L1399]              havoc __ret_0_totalSupply;
[L1400]              havoc owner_s308;
[L1401]              havoc __ret_0_balanceOf;
[L1402]              havoc owner_s324;
[L1403]              havoc spender_s324;
[L1404]              havoc __ret_0_allowance;
[L1405]              havoc to_s343;
[L1406]              havoc value_s343;
[L1407]              havoc __ret_0_transfer;
[L1408]              havoc spender_s379;
[L1409]              havoc value_s379;
[L1410]              havoc __ret_0_approve;
[L1411]              havoc from_s416;
[L1412]              havoc to_s416;
[L1413]              havoc value_s416;
[L1414]              havoc __ret_0_transferFrom;
[L1415]              havoc value_s229;
[L1416]              havoc name_s264;
[L1417]              havoc symbol_s264;
[L1418]              havoc decimals_s264;
[L1419]              havoc totalSupply_s264;
[L1420]              havoc __ret_0_name;
[L1421]              havoc __ret_0_symbol;
[L1422]              havoc __ret_0_decimals;
[L1423]              havoc spender_s466;
[L1424]              havoc addedValue_s466;
[L1425]              havoc __ret_0_increaseAllowance;
[L1426]              havoc spender_s516;
[L1427]              havoc subtractedValue_s516;
[L1428]              havoc __ret_0_decreaseAllowance;
[L1429]              havoc tmpNow;
[L1430]              havoc gas;
[L1431]              assume gas > 4000000 && gas <= 8000000;
[L1432]              tmpNow := now;
[L1433]              havoc now;
[L1434]              assume now > tmpNow;
[L1435]              assume msgsender_MSG != null;
[L1436]  COND FALSE  !(choice == 6)
[L1442]  COND FALSE  !(choice == 5)
[L1448]  COND FALSE  !(choice == 4)
[L1454]  COND TRUE   choice == 3
[L1455]              gas := gas - 21000;
[L1456]  COND TRUE   gas >= 0
[L1457]              assume value_s343 >= 0 && value_s343 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1458]              assume msgvalue_MSG == 0;
[L1459]  CALL        call __ret_0_transfer := transfer~address~uint256_FLAMA(this, msgsender_MSG, msgvalue_MSG, to_s343, value_s343);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == to_s343 && value_s343 <= _balances_FLAMA[this][msgsender_MSG]) && value_s343 >= 0) && value_s343 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_FLAMA[this][to_s343] >= 0) && _balances_FLAMA[this][to_s343] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_FLAMA[this][msgsender_MSG] >= 0) && _balances_FLAMA[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_FLAMA0 := true;
[L2]                 call_transfer_FLAMA0 := false;
[L2]                 revert := revert_hold;
[L228]               havoc __exception;
[L229]               revert := false;
[L230]   COND TRUE   __exception
[L231]               __tmp__Balance := Balance;
[L232]               __tmp__DType := DType;
[L233]               __tmp__Alloc := Alloc;
[L234]               __tmp__balance_ADDR := balance_ADDR;
[L235]               __tmp__M_Ref_int := M_Ref_int;
[L236]               __tmp__sum__balances0 := sum__balances0;
[L237]               __tmp__alloc__allowed_FLAMA_lvl0 := alloc__allowed_FLAMA_lvl0;
[L238]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L239]               __tmp__sum__allowed1 := sum__allowed1;
[L240]               __tmp__Length := Length;
[L241]               __tmp__now := now;
[L242]               __tmp___name_FLAMA := _name_FLAMA;
[L243]               __tmp___symbol_FLAMA := _symbol_FLAMA;
[L244]               __tmp___decimals_FLAMA := _decimals_FLAMA;
[L245]               __tmp___totalSupply_FLAMA := _totalSupply_FLAMA;
[L246]               __tmp___balances_FLAMA := _balances_FLAMA;
[L247]               __tmp___allowed_FLAMA := _allowed_FLAMA;
[L248]   CALL        call __ret_0_ := transfer~address~uint256_FLAMA__fail(this, msgsender_MSG, msgvalue_MSG, to_s343, value_s343);
[L745]   CALL        call _transfer~address~address~uint256_FLAMA__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s343, value_s343);
[L839]               __var_3 := null;
[L840]   COND FALSE  !(!(to_s598 != null))
[L844]   CALL        call onePercent_s598 := div~uint256~uint256_SafeMath__fail(this, this, 0, value_s598, 100);
[L638]   COND FALSE  !(!(b_s58 > 0))
[L642]               c_s58 := nonlinearDiv(a_s58, b_s58) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L643]               __ret_0_ := c_s58;
[L844]   RET         call onePercent_s598 := div~uint256~uint256_SafeMath__fail(this, this, 0, value_s598, 100);
[L845]   COND FALSE  !(revert)
[L848]               onePercent_s598 := onePercent_s598;
[L849]   CALL        call burnAmount_s598 := mul~uint256~uint256_SafeMath__fail(this, this, 0, onePercent_s598, 3);
[L606]   COND FALSE  !(a_s34 == 0)
[L610]               c_s34 := nonlinearMul(a_s34, b_s34) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L611]   COND TRUE   !(nonlinearDiv(c_s34, a_s34) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 == b_s34)
[L612]               revert := true;
[L849]   RET         call burnAmount_s598 := mul~uint256~uint256_SafeMath__fail(this, this, 0, onePercent_s598, 3);
[L850]   COND TRUE   revert
[L745]   RET         call _transfer~address~address~uint256_FLAMA__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s343, value_s343);
[L746]   COND TRUE   revert
[L248]   RET         call __ret_0_ := transfer~address~uint256_FLAMA__fail(this, msgsender_MSG, msgvalue_MSG, to_s343, value_s343);
[L249]               assume revert || gas < 0;
[L1459]  RET         call __ret_0_transfer := transfer~address~uint256_FLAMA(this, msgsender_MSG, msgvalue_MSG, to_s343, value_s343);
[L1492]  RET         call CorralChoice_FLAMA(this);

Loop:
[L1492]        assume true;

[2020-11-24 19:04:45,327 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 19:04:45,327 INFO  L82        PathProgramCache]: Analyzing trace with hash -1348290325, now seen corresponding path program 1 times
[2020-11-24 19:04:45,328 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 19:04:45,335 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 19:04:45,344 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 19:04:45,376 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 19:04:45,376 INFO  L82        PathProgramCache]: Analyzing trace with hash 4079, now seen corresponding path program 1 times
[2020-11-24 19:04:45,377 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 19:04:45,377 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 19:04:45,377 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 19:04:45,378 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 19:04:45,378 INFO  L82        PathProgramCache]: Analyzing trace with hash 1152676933, now seen corresponding path program 1 times
[2020-11-24 19:04:45,379 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 19:04:45,386 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 19:04:45,393 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 199 to 397
[2020-11-24 19:04:45,771 WARN  L188               SmtUtils]: Spent 151.00 ms on a formula simplification. DAG size of input: 143 DAG size of output: 134
Garbage collection #1: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #2: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #3: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #4: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #5: 787 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 787 to 1571
Garbage collection #1: 41 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 41 to 79
Garbage collection #2: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #3: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #4: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #5: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #6: 1237 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1237 to 2473
[2020-11-24 19:04:45,967 WARN  L188               SmtUtils]: Spent 175.00 ms on a formula simplification. DAG size of input: 95 DAG size of output: 91
[2020-11-24 19:04:46,127 WARN  L188               SmtUtils]: Spent 158.00 ms on a formula simplification that was a NOOP. DAG size: 225
Garbage collection #1: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #2: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #3: 337 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 337 to 673
Garbage collection #4: 673 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 673 to 1327
Garbage collection #5: 1327 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 1327 to 2647
Garbage collection #6: 2647 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 2647 to 5281
[2020-11-24 19:04:46,326 WARN  L188               SmtUtils]: Spent 187.00 ms on a formula simplification that was a NOOP. DAG size: 183
[2020-11-24 19:04:46,841 WARN  L188               SmtUtils]: Spent 512.00 ms on a formula simplification. DAG size of input: 214 DAG size of output: 200
Garbage collection #1: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #2: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #3: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #4: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #5: 1237 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1237 to 2473
Garbage collection #6: 2473 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 2473 to 4943
Garbage collection #7: 4943 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 4943 to 9883
Garbage collection #1: 47 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 47 to 89
Garbage collection #2: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #3: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #4: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #5: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #6: 1327 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 1327 to 2647
Garbage collection #7: 2647 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 2647 to 5281
Garbage collection #1: 101 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 101 to 199
Garbage collection #2: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #3: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #4: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #5: 1571 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 1571 to 3137
Garbage collection #6: 3137 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 3137 to 6271
[2020-11-24 19:04:47,186 WARN  L188               SmtUtils]: Spent 144.00 ms on a formula simplification that was a NOOP. DAG size: 193
[2020-11-24 19:04:47,352 WARN  L188               SmtUtils]: Spent 164.00 ms on a formula simplification. DAG size of input: 213 DAG size of output: 210
Garbage collection #1: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #2: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #3: 317 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 317 to 631
Garbage collection #4: 631 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 631 to 1259
Garbage collection #5: 1259 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1259 to 2503
Garbage collection #6: 2503 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2503 to 5003
Garbage collection #1: 47 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 47 to 89
Garbage collection #2: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #3: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #4: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #5: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #1: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #2: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #3: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #4: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #5: 1237 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1237 to 2473
Garbage collection #6: 2473 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2473 to 4943
Garbage collection #1: 47 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 47 to 89
Garbage collection #2: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #3: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #4: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #5: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #1: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #2: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #3: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #4: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #5: 1237 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1237 to 2473
Garbage collection #6: 2473 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2473 to 4943
Garbage collection #1: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #2: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #3: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #4: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #5: 1237 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1237 to 2473
Garbage collection #6: 2473 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2473 to 4943
[2020-11-24 19:04:47,622 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 19:04:47,626 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 24.11 07:04:47 BasicIcfg
[2020-11-24 19:04:47,626 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-24 19:04:47,627 INFO  L168              Benchmark]: Toolchain (without parser) took 4530.54 ms. Allocated memory was 1.0 GB in the beginning and 1.4 GB in the end (delta: 399.5 MB). Free memory was 940.6 MB in the beginning and 834.1 MB in the end (delta: 106.4 MB). Peak memory consumption was 507.3 MB. Max. memory is 15.3 GB.
[2020-11-24 19:04:47,627 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.15 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-24 19:04:47,627 INFO  L168              Benchmark]: Boogie Preprocessor took 64.30 ms. Allocated memory is still 1.0 GB. Free memory is still 940.6 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-24 19:04:47,627 INFO  L168              Benchmark]: UtopiaSpecLang took 44.32 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 935.2 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-24 19:04:47,628 INFO  L168              Benchmark]: Boogie Printer took 9.75 ms. Allocated memory is still 1.0 GB. Free memory is still 935.2 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-24 19:04:47,628 INFO  L168              Benchmark]: RCFGBuilder took 458.12 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 892.2 MB in the end (delta: 43.0 MB). Peak memory consumption was 43.0 MB. Max. memory is 15.3 GB.
[2020-11-24 19:04:47,628 INFO  L168              Benchmark]: UtopiaLTL2Aut took 46.26 ms. Allocated memory is still 1.0 GB. Free memory was 892.2 MB in the beginning and 888.7 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
[2020-11-24 19:04:47,629 INFO  L168              Benchmark]: BÃ¼chi Program Product took 818.09 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 59.2 MB). Free memory was 888.7 MB in the beginning and 1.0 GB in the end (delta: -123.6 MB). Peak memory consumption was 170.0 MB. Max. memory is 15.3 GB.
[2020-11-24 19:04:47,629 INFO  L168              Benchmark]: BlockEncodingV2 took 65.76 ms. Allocated memory is still 1.1 GB. Free memory was 1.0 GB in the beginning and 993.1 MB in the end (delta: 19.2 MB). Peak memory consumption was 19.2 MB. Max. memory is 15.3 GB.
[2020-11-24 19:04:47,630 INFO  L168              Benchmark]: BuchiAutomizer took 3020.95 ms. Allocated memory was 1.1 GB in the beginning and 1.4 GB in the end (delta: 340.3 MB). Free memory was 993.1 MB in the beginning and 834.1 MB in the end (delta: 158.9 MB). Peak memory consumption was 500.5 MB. Max. memory is 15.3 GB.
[2020-11-24 19:04:47,632 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    1258 locations, 2132 edges
  - StatisticsResult: Encoded RCFG
    1236 locations, 2080 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.15 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 64.30 ms. Allocated memory is still 1.0 GB. Free memory is still 940.6 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 44.32 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 935.2 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 9.75 ms. Allocated memory is still 1.0 GB. Free memory is still 935.2 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * RCFGBuilder took 458.12 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 892.2 MB in the end (delta: 43.0 MB). Peak memory consumption was 43.0 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 46.26 ms. Allocated memory is still 1.0 GB. Free memory was 892.2 MB in the beginning and 888.7 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 818.09 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 59.2 MB). Free memory was 888.7 MB in the beginning and 1.0 GB in the end (delta: -123.6 MB). Peak memory consumption was 170.0 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 65.76 ms. Allocated memory is still 1.1 GB. Free memory was 1.0 GB in the beginning and 993.1 MB in the end (delta: 19.2 MB). Peak memory consumption was 19.2 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 3020.95 ms. Allocated memory was 1.1 GB in the beginning and 1.4 GB in the end (delta: 340.3 MB). Free memory was 993.1 MB in the beginning and 834.1 MB in the end (delta: 158.9 MB). Peak memory consumption was 500.5 MB. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    532 locations, 661 edges
  - StatisticsResult: BuchiProgram size
    1258 locations, 2132 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 7 terminating modules (7 trivial, 0 deterministic, 0 nondeterministic) and one nonterminating remainder module.7 modules have a trivial ranking function, the largest among these consists of 7 locations. The remainder module has 272 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 2.9s and 8 iterations.  TraceHistogramMax:1. Analysis of lassos took 2.5s. Construction of modules took 0.0s. BÃ¼chi inclusion checks took 0.1s. Highest rank in rank-based complementation 0. Minimization of det autom 7. Minimization of nondet autom 0. Automata minimization 0.0s AutomataMinimizationTime, 7 MinimizatonAttempts, 22 StatesRemovedByMinimization, 2 NontrivialMinimizations. Non-live state removal took 0.0s Buchi closure took 0.0s. Biggest automaton had 278 states and ocurred in iteration 4.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 2457 SDtfs, 1131 SDslu, 3730 SDs, 0 SdLazy, 196 SolverSat, 497 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 0.0s Time	LassoAnalysisResults: nont1 unkn0 SFLI0 SFLT0 conc0 concLT0 SILN0 SILU7 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - TransactionCounterexample: Violation of LTL property LTL
    Found an infinite, lasso-shaped execution that violates the LTL property LTL.
Stem:
FLAMA(115792089237316195423570985008687907853269984665640564039457584007913129639938).transfer~address~uint256.gas(3979001)({from : 115792089237316195423570985008687907853269984665640564039457584007913129639943, to : 115792089237316195423570985008687907853269984665640564039457584007913129639943, value : 0});
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == to_s343 && value_s343 <= _balances_FLAMA[this][msgsender_MSG]) && value_s343 >= 0) && value_s343 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_FLAMA[this][to_s343] >= 0) && _balances_FLAMA[this][to_s343] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_FLAMA[this][msgsender_MSG] >= 0) && _balances_FLAMA[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_FLAMA0 := true;
[L2]                 call_transfer_FLAMA0 := false;
[L2]                 revert := revert_hold;
[L228]               havoc __exception;
[L229]               revert := false;
[L230]   COND TRUE   __exception
[L231]               __tmp__Balance := Balance;
[L232]               __tmp__DType := DType;
[L233]               __tmp__Alloc := Alloc;
[L234]               __tmp__balance_ADDR := balance_ADDR;
[L235]               __tmp__M_Ref_int := M_Ref_int;
[L236]               __tmp__sum__balances0 := sum__balances0;
[L237]               __tmp__alloc__allowed_FLAMA_lvl0 := alloc__allowed_FLAMA_lvl0;
[L238]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L239]               __tmp__sum__allowed1 := sum__allowed1;
[L240]               __tmp__Length := Length;
[L241]               __tmp__now := now;
[L242]               __tmp___name_FLAMA := _name_FLAMA;
[L243]               __tmp___symbol_FLAMA := _symbol_FLAMA;
[L244]               __tmp___decimals_FLAMA := _decimals_FLAMA;
[L245]               __tmp___totalSupply_FLAMA := _totalSupply_FLAMA;
[L246]               __tmp___balances_FLAMA := _balances_FLAMA;
[L247]               __tmp___allowed_FLAMA := _allowed_FLAMA;
[L248]   CALL        call __ret_0_ := transfer~address~uint256_FLAMA__fail(this, msgsender_MSG, msgvalue_MSG, to_s343, value_s343);
[L745]   CALL        call _transfer~address~address~uint256_FLAMA__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s343, value_s343);
[L839]               __var_3 := null;
[L840]   COND FALSE  !(!(to_s598 != null))
[L844]   CALL        call onePercent_s598 := div~uint256~uint256_SafeMath__fail(this, this, 0, value_s598, 100);
[L638]   COND FALSE  !(!(b_s58 > 0))
[L642]               c_s58 := nonlinearDiv(a_s58, b_s58) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L643]               __ret_0_ := c_s58;
[L844]   RET         call onePercent_s598 := div~uint256~uint256_SafeMath__fail(this, this, 0, value_s598, 100);
[L845]   COND FALSE  !(revert)
[L848]               onePercent_s598 := onePercent_s598;
[L849]   CALL        call burnAmount_s598 := mul~uint256~uint256_SafeMath__fail(this, this, 0, onePercent_s598, 3);
[L606]   COND FALSE  !(a_s34 == 0)
[L610]               c_s34 := nonlinearMul(a_s34, b_s34) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L611]   COND TRUE   !(nonlinearDiv(c_s34, a_s34) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 == b_s34)
[L612]               revert := true;
[L849]   RET         call burnAmount_s598 := mul~uint256~uint256_SafeMath__fail(this, this, 0, onePercent_s598, 3);
[L850]   COND TRUE   revert
[L745]   RET         call _transfer~address~address~uint256_FLAMA__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s343, value_s343);
[L746]   COND TRUE   revert
[L248]   RET         call __ret_0_ := transfer~address~uint256_FLAMA__fail(this, msgsender_MSG, msgvalue_MSG, to_s343, value_s343);
[L249]               assume revert || gas < 0;
[L1459]  RET         call __ret_0_transfer := transfer~address~uint256_FLAMA(this, msgsender_MSG, msgvalue_MSG, to_s343, value_s343);

Loop:

End of lasso representation.
RESULT: Ultimate could not prove your program: Toolchain returned no result.
Received shutdown request...
