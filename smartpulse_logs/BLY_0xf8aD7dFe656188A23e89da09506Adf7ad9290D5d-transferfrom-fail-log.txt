This is Ultimate 0.1.24-f1553f5-m
[2020-11-24 15:42:11,076 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-24 15:42:11,077 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-24 15:42:11,089 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-24 15:42:11,090 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-24 15:42:11,091 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-24 15:42:11,092 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-24 15:42:11,094 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-24 15:42:11,095 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-24 15:42:11,096 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-24 15:42:11,097 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-24 15:42:11,097 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-24 15:42:11,098 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-24 15:42:11,099 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-24 15:42:11,100 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-24 15:42:11,100 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-24 15:42:11,101 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-24 15:42:11,102 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-24 15:42:11,104 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-24 15:42:11,106 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-24 15:42:11,106 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-24 15:42:11,107 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-24 15:42:11,109 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-24 15:42:11,109 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-24 15:42:11,109 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-24 15:42:11,110 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-24 15:42:11,110 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-24 15:42:11,111 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-24 15:42:11,111 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-24 15:42:11,111 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-24 15:42:11,112 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-24 15:42:11,112 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-24 15:42:11,113 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-24 15:42:11,113 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-24 15:42:11,114 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-24 15:42:11,114 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-24 15:42:11,115 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-24 15:42:11,115 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-24 15:42:11,115 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-24 15:42:11,116 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-24 15:42:11,116 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-24 15:42:11,117 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-24 15:42:11,125 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-24 15:42:11,125 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-24 15:42:11,126 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-24 15:42:11,126 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-24 15:42:11,126 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-24 15:42:11,126 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-24 15:42:11,126 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-24 15:42:11,127 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-24 15:42:11,127 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-24 15:42:11,127 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-24 15:42:11,127 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-24 15:42:11,127 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-24 15:42:11,127 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-24 15:42:11,128 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-24 15:42:11,128 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-24 15:42:11,128 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-24 15:42:11,128 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-24 15:42:11,128 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-24 15:42:11,128 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-24 15:42:11,128 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-24 15:42:11,128 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-24 15:42:11,128 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-24 15:42:11,129 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-24 15:42:11,129 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-24 15:42:11,129 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-24 15:42:11,129 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-24 15:42:11,150 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-24 15:42:11,160 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-24 15:42:11,163 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-24 15:42:11,164 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-24 15:42:11,164 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-24 15:42:11,165 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/BLY_0xf8aD7dFe656188A23e89da09506Adf7ad9290D5d_transferfrom-fail.bpl
[2020-11-24 15:42:11,165 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/BLY_0xf8aD7dFe656188A23e89da09506Adf7ad9290D5d_transferfrom-fail.bpl'
[2020-11-24 15:42:11,254 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-24 15:42:11,255 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-24 15:42:11,255 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-24 15:42:11,255 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-24 15:42:11,255 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-24 15:42:11,272 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "BLY_0xf8aD7dFe656188A23e89da09506Adf7ad9290D5d_transferfrom-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 03:42:11" (1/1) ...
[2020-11-24 15:42:11,274 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "BLY_0xf8aD7dFe656188A23e89da09506Adf7ad9290D5d_transferfrom-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 03:42:11" (1/1) ...
[2020-11-24 15:42:11,305 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "BLY_0xf8aD7dFe656188A23e89da09506Adf7ad9290D5d_transferfrom-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 03:42:11" (1/1) ...
[2020-11-24 15:42:11,306 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "BLY_0xf8aD7dFe656188A23e89da09506Adf7ad9290D5d_transferfrom-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 03:42:11" (1/1) ...
[2020-11-24 15:42:11,326 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "BLY_0xf8aD7dFe656188A23e89da09506Adf7ad9290D5d_transferfrom-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 03:42:11" (1/1) ...
[2020-11-24 15:42:11,336 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "BLY_0xf8aD7dFe656188A23e89da09506Adf7ad9290D5d_transferfrom-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 03:42:11" (1/1) ...
[2020-11-24 15:42:11,344 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "BLY_0xf8aD7dFe656188A23e89da09506Adf7ad9290D5d_transferfrom-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 03:42:11" (1/1) ...
[2020-11-24 15:42:11,358 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-24 15:42:11,359 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-24 15:42:11,359 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-24 15:42:11,361 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-24 15:42:11,365 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "BLY_0xf8aD7dFe656188A23e89da09506Adf7ad9290D5d_transferfrom-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 03:42:11" (1/1) ...
[2020-11-24 15:42:11,386 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(BLY.transferFrom(from, to, value), from != to && (value > _balances_HxERC20[this][from] || value > _allowed_HxERC20[this][from][msg.sender] || _balances_HxERC20[this][to] + value >= 0x10000000000000000000000000000000000000000000000000000000000000000) && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_HxERC20[this][to] >= 0 && _balances_HxERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_HxERC20[this][from] >= 0 &&  _balances_HxERC20[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _allowed_HxERC20[this][from][msg.sender] >= 0 && _allowed_HxERC20[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(reverted(BLY.transferFrom)))
[2020-11-24 15:42:11,392 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(BLY.transferFrom(from, to, value), from != to && (value > _balances_HxERC20[this][from] || value > _allowed_HxERC20[this][from][msg.sender] || _balances_HxERC20[this][to] + value >= 0x10000000000000000000000000000000000000000000000000000000000000000) && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_HxERC20[this][to] >= 0 && _balances_HxERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_HxERC20[this][from] >= 0 &&  _balances_HxERC20[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _allowed_HxERC20[this][from][msg.sender] >= 0 && _allowed_HxERC20[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(reverted(BLY.transferFrom)))
[2020-11-24 15:42:11,399 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(BLY.transferFrom(from, to, value), from != to && (value > _balances_HxERC20[this][from] || value > _allowed_HxERC20[this][from][msg.sender] || _balances_HxERC20[this][to] + value >= 0x10000000000000000000000000000000000000000000000000000000000000000) && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_HxERC20[this][to] >= 0 && _balances_HxERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_HxERC20[this][from] >= 0 &&  _balances_HxERC20[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _allowed_HxERC20[this][from][msg.sender] >= 0 && _allowed_HxERC20[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(reverted(BLY.transferFrom)))
[2020-11-24 15:42:11,407 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( ( from_s1322!=to_s1322 && ( ( value_s1322>_balances_HxERC20[this][from_s1322] || value_s1322>_allowed_HxERC20[this][from_s1322][msg.sender] ) || ( _balances_HxERC20[this][to_s1322] + value_s1322 )>=115792089237316195423570985008687907853269984665640564039457584007913129639936 ) ) && value_s1322>=0 ) && value_s1322<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && _balances_HxERC20[this][to_s1322]>=0 ) && _balances_HxERC20[this][to_s1322]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && _balances_HxERC20[this][from_s1322]>=0 ) && _balances_HxERC20[this][from_s1322]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && _allowed_HxERC20[this][from_s1322][msg.sender]>=0 ) && _allowed_HxERC20[this][from_s1322][msg.sender]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPNEQ,IdentifierExpression[from_s1322,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_BLY>],IdentifierExpression[to_s1322,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_BLY>]],BinaryExpression[LOGICOR,BinaryExpression[LOGICOR,BinaryExpression[COMPGT,IdentifierExpression[value_s1322,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_BLY>],ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_HxERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_BLY>]]],[IdentifierExpression[from_s1322,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_BLY>]]]],BinaryExpression[COMPGT,IdentifierExpression[value_s1322,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_BLY>],ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_allowed_HxERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_BLY>]]],[IdentifierExpression[from_s1322,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_BLY>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_BLY>]]]]],BinaryExpression[COMPGEQ,BinaryExpression[ARITHPLUS,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_HxERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_BLY>]]],[IdentifierExpression[to_s1322,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_BLY>]]],IdentifierExpression[value_s1322,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_BLY>]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]]],BinaryExpression[COMPGEQ,IdentifierExpression[value_s1322,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_BLY>],IntegerLiteral[0]]],BinaryExpression[COMPLT,IdentifierExpression[value_s1322,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_BLY>],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_HxERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_BLY>]]],[IdentifierExpression[to_s1322,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_BLY>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_HxERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_BLY>]]],[IdentifierExpression[to_s1322,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_BLY>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_HxERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_BLY>]]],[IdentifierExpression[from_s1322,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_BLY>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_HxERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_BLY>]]],[IdentifierExpression[from_s1322,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_BLY>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_allowed_HxERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_BLY>]]],[IdentifierExpression[from_s1322,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_BLY>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_BLY>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_allowed_HxERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_BLY>]]],[IdentifierExpression[from_s1322,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_BLY>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_BLY>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]]
[2020-11-24 15:42:11,412 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(BLY.transferFrom(from, to, value), from != to && (value > _balances_HxERC20[this][from] || value > _allowed_HxERC20[this][from][msg.sender] || _balances_HxERC20[this][to] + value >= 0x10000000000000000000000000000000000000000000000000000000000000000) && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_HxERC20[this][to] >= 0 && _balances_HxERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_HxERC20[this][from] >= 0 &&  _balances_HxERC20[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _allowed_HxERC20[this][from][msg.sender] >= 0 && _allowed_HxERC20[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(reverted(BLY.transferFrom)))
[2020-11-24 15:42:11,412 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_transferFrom_BLY0) ==> ( <>AP(fail_transferFrom_BLY0) ) ) )
Executed UtopiaSpecLang
[2020-11-24 15:42:11,421 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 03:42:11 PropertyContainer
[2020-11-24 15:42:11,421 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-24 15:42:11,421 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-24 15:42:11,422 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-24 15:42:11,422 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-24 15:42:11,422 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "BLY_0xf8aD7dFe656188A23e89da09506Adf7ad9290D5d_transferfrom-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 03:42:11" (1/2) ...
[2020-11-24 15:42:11,423 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-24 15:42:11,423 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-24 15:42:11,438 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 03:42:11" (2/2) ...
[2020-11-24 15:42:11,438 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-24 15:42:11,438 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-24 15:42:11,438 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-24 15:42:11,438 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-24 15:42:11,439 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "BLY_0xf8aD7dFe656188A23e89da09506Adf7ad9290D5d_transferfrom-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 03:42:11" (1/2) ...
[2020-11-24 15:42:11,497 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-24 15:42:11,497 INFO  L130     BoogieDeclarations]: Found specification of procedure Roles.Role_ctor__success
[2020-11-24 15:42:11,497 INFO  L130     BoogieDeclarations]: Found specification of procedure BLY.LockInfo_ctor__success
[2020-11-24 15:42:11,497 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_HxSafeMath__success
[2020-11-24 15:42:11,497 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_HxSafeMath__success
[2020-11-24 15:42:11,497 INFO  L130     BoogieDeclarations]: Found specification of procedure add~Role~address_Roles__success
[2020-11-24 15:42:11,497 INFO  L130     BoogieDeclarations]: Found specification of procedure has~Role~address_Roles__success
[2020-11-24 15:42:11,498 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_IERC20
[2020-11-24 15:42:11,498 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_IERC20
[2020-11-24 15:42:11,498 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_IERC20
[2020-11-24 15:42:11,498 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_HxERC20
[2020-11-24 15:42:11,498 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_HxERC20
[2020-11-24 15:42:11,498 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_HxERC20
[2020-11-24 15:42:11,498 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_HxERC20
[2020-11-24 15:42:11,498 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_HxERC20
[2020-11-24 15:42:11,498 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_HxERC20
[2020-11-24 15:42:11,498 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_HxERC20
[2020-11-24 15:42:11,499 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_HxERC20
[2020-11-24 15:42:11,499 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_HxERC20
[2020-11-24 15:42:11,499 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_HxERC20
[2020-11-24 15:42:11,499 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_HxERC20
[2020-11-24 15:42:11,499 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_HxERC20
[2020-11-24 15:42:11,499 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_HxERC20__success
[2020-11-24 15:42:11,499 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20Pausable
[2020-11-24 15:42:11,499 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20Pausable
[2020-11-24 15:42:11,499 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20Pausable
[2020-11-24 15:42:11,499 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20Pausable
[2020-11-24 15:42:11,500 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_BLY
[2020-11-24 15:42:11,500 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_BLY
[2020-11-24 15:42:11,500 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_BLY
[2020-11-24 15:42:11,500 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_BLY
[2020-11-24 15:42:11,500 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_BLY
[2020-11-24 15:42:11,500 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_BLY
[2020-11-24 15:42:11,500 INFO  L130     BoogieDeclarations]: Found specification of procedure _unlock~address~uint256_BLY__success
[2020-11-24 15:42:11,500 INFO  L130     BoogieDeclarations]: Found specification of procedure _autoUnlock~address_BLY__success
[2020-11-24 15:42:11,500 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-24 15:42:11,500 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-24 15:42:11,500 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-24 15:42:11,500 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__success
[2020-11-24 15:42:11,500 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyNewOwner_pre__success
[2020-11-24 15:42:11,501 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyPauser_pre__success
[2020-11-24 15:42:11,501 INFO  L130     BoogieDeclarations]: Found specification of procedure whenNotPaused_pre__success
[2020-11-24 15:42:11,501 INFO  L130     BoogieDeclarations]: Found specification of procedure whenPaused_pre__success
[2020-11-24 15:42:11,501 INFO  L130     BoogieDeclarations]: Found specification of procedure notFrozen_pre__success
[2020-11-24 15:42:11,501 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_HxSafeMath
[2020-11-24 15:42:11,501 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_HxSafeMath
[2020-11-24 15:42:11,501 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_Roles
[2020-11-24 15:42:11,501 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_Roles
[2020-11-24 15:42:11,501 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_HxOwnable
[2020-11-24 15:42:11,501 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_HxOwnable
[2020-11-24 15:42:11,502 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_PauserRole
[2020-11-24 15:42:11,502 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_PauserRole
[2020-11-24 15:42:11,502 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_Pausable
[2020-11-24 15:42:11,502 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_Pausable
[2020-11-24 15:42:11,502 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_IERC20
[2020-11-24 15:42:11,502 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_IERC20
[2020-11-24 15:42:11,502 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_HxERC20
[2020-11-24 15:42:11,502 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_HxERC20
[2020-11-24 15:42:11,502 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20Pausable
[2020-11-24 15:42:11,502 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20Pausable
[2020-11-24 15:42:11,502 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20Detailed
[2020-11-24 15:42:11,503 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20Detailed
[2020-11-24 15:42:11,503 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_BLY
[2020-11-24 15:42:11,503 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-24 15:42:11,503 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-24 15:42:11,503 INFO  L130     BoogieDeclarations]: Found specification of procedure Roles.Role_ctor__fail
[2020-11-24 15:42:11,503 INFO  L130     BoogieDeclarations]: Found specification of procedure BLY.LockInfo_ctor__fail
[2020-11-24 15:42:11,503 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_HxSafeMath__fail
[2020-11-24 15:42:11,503 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_HxSafeMath__fail
[2020-11-24 15:42:11,503 INFO  L130     BoogieDeclarations]: Found specification of procedure add~Role~address_Roles__fail
[2020-11-24 15:42:11,504 INFO  L130     BoogieDeclarations]: Found specification of procedure has~Role~address_Roles__fail
[2020-11-24 15:42:11,504 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_HxERC20__success
[2020-11-24 15:42:11,504 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_HxERC20__fail
[2020-11-24 15:42:11,504 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_HxERC20__success
[2020-11-24 15:42:11,504 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_HxERC20__fail
[2020-11-24 15:42:11,504 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_HxERC20__success
[2020-11-24 15:42:11,504 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_HxERC20__fail
[2020-11-24 15:42:11,504 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_HxERC20__success
[2020-11-24 15:42:11,504 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_HxERC20__fail
[2020-11-24 15:42:11,504 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_HxERC20__success
[2020-11-24 15:42:11,505 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_HxERC20__fail
[2020-11-24 15:42:11,505 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_HxERC20__success
[2020-11-24 15:42:11,505 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_HxERC20__fail
[2020-11-24 15:42:11,505 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_HxERC20__fail
[2020-11-24 15:42:11,505 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20Pausable__success
[2020-11-24 15:42:11,505 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20Pausable__fail
[2020-11-24 15:42:11,505 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20Pausable__success
[2020-11-24 15:42:11,505 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20Pausable__fail
[2020-11-24 15:42:11,505 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_BLY__success
[2020-11-24 15:42:11,505 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_BLY__fail
[2020-11-24 15:42:11,506 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_BLY__success
[2020-11-24 15:42:11,506 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_BLY__fail
[2020-11-24 15:42:11,506 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_BLY__success
[2020-11-24 15:42:11,506 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_BLY__fail
[2020-11-24 15:42:11,506 INFO  L130     BoogieDeclarations]: Found specification of procedure _unlock~address~uint256_BLY__fail
[2020-11-24 15:42:11,506 INFO  L130     BoogieDeclarations]: Found specification of procedure _autoUnlock~address_BLY__fail
[2020-11-24 15:42:11,506 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-24 15:42:11,506 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-24 15:42:11,506 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-24 15:42:11,506 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__fail
[2020-11-24 15:42:11,507 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyNewOwner_pre__fail
[2020-11-24 15:42:11,507 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyPauser_pre__fail
[2020-11-24 15:42:11,507 INFO  L130     BoogieDeclarations]: Found specification of procedure whenNotPaused_pre__fail
[2020-11-24 15:42:11,507 INFO  L130     BoogieDeclarations]: Found specification of procedure whenPaused_pre__fail
[2020-11-24 15:42:11,507 INFO  L130     BoogieDeclarations]: Found specification of procedure notFrozen_pre__fail
[2020-11-24 15:42:11,507 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-24 15:42:11,507 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-24 15:42:11,507 INFO  L138     BoogieDeclarations]: Found implementation of procedure Roles.Role_ctor__fail
[2020-11-24 15:42:11,507 INFO  L138     BoogieDeclarations]: Found implementation of procedure Roles.Role_ctor__success
[2020-11-24 15:42:11,507 INFO  L138     BoogieDeclarations]: Found implementation of procedure BLY.LockInfo_ctor__fail
[2020-11-24 15:42:11,508 INFO  L138     BoogieDeclarations]: Found implementation of procedure BLY.LockInfo_ctor__success
[2020-11-24 15:42:11,508 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_HxSafeMath__fail
[2020-11-24 15:42:11,508 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_HxSafeMath__success
[2020-11-24 15:42:11,508 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_HxSafeMath__fail
[2020-11-24 15:42:11,508 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_HxSafeMath__success
[2020-11-24 15:42:11,508 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~Role~address_Roles__fail
[2020-11-24 15:42:11,508 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~Role~address_Roles__success
[2020-11-24 15:42:11,508 INFO  L138     BoogieDeclarations]: Found implementation of procedure has~Role~address_Roles__fail
[2020-11-24 15:42:11,508 INFO  L138     BoogieDeclarations]: Found implementation of procedure has~Role~address_Roles__success
[2020-11-24 15:42:11,508 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_HxERC20__fail
[2020-11-24 15:42:11,509 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_HxERC20__success
[2020-11-24 15:42:11,509 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_HxERC20__fail
[2020-11-24 15:42:11,509 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_HxERC20__success
[2020-11-24 15:42:11,509 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_HxERC20__fail
[2020-11-24 15:42:11,509 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_HxERC20__success
[2020-11-24 15:42:11,509 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_HxERC20__fail
[2020-11-24 15:42:11,509 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_HxERC20__success
[2020-11-24 15:42:11,509 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_HxERC20__fail
[2020-11-24 15:42:11,509 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_HxERC20__success
[2020-11-24 15:42:11,509 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_HxERC20__fail
[2020-11-24 15:42:11,510 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_HxERC20__success
[2020-11-24 15:42:11,510 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_HxERC20__fail
[2020-11-24 15:42:11,510 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_HxERC20__success
[2020-11-24 15:42:11,510 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20Pausable__fail
[2020-11-24 15:42:11,510 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20Pausable__success
[2020-11-24 15:42:11,510 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20Pausable__fail
[2020-11-24 15:42:11,510 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20Pausable__success
[2020-11-24 15:42:11,510 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_BLY__fail
[2020-11-24 15:42:11,510 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_BLY__success
[2020-11-24 15:42:11,510 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_BLY__fail
[2020-11-24 15:42:11,511 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_BLY__success
[2020-11-24 15:42:11,511 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_BLY__fail
[2020-11-24 15:42:11,511 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_BLY__success
[2020-11-24 15:42:11,511 INFO  L138     BoogieDeclarations]: Found implementation of procedure _unlock~address~uint256_BLY__fail
[2020-11-24 15:42:11,511 INFO  L138     BoogieDeclarations]: Found implementation of procedure _unlock~address~uint256_BLY__success
[2020-11-24 15:42:11,511 INFO  L138     BoogieDeclarations]: Found implementation of procedure _autoUnlock~address_BLY__fail
[2020-11-24 15:42:11,511 INFO  L138     BoogieDeclarations]: Found implementation of procedure _autoUnlock~address_BLY__success
[2020-11-24 15:42:11,511 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-24 15:42:11,511 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-24 15:42:11,512 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-24 15:42:11,512 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-24 15:42:11,512 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-24 15:42:11,512 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-24 15:42:11,512 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__fail
[2020-11-24 15:42:11,512 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__success
[2020-11-24 15:42:11,512 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyNewOwner_pre__fail
[2020-11-24 15:42:11,512 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyNewOwner_pre__success
[2020-11-24 15:42:11,512 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyPauser_pre__fail
[2020-11-24 15:42:11,512 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyPauser_pre__success
[2020-11-24 15:42:11,513 INFO  L138     BoogieDeclarations]: Found implementation of procedure whenNotPaused_pre__fail
[2020-11-24 15:42:11,513 INFO  L138     BoogieDeclarations]: Found implementation of procedure whenNotPaused_pre__success
[2020-11-24 15:42:11,513 INFO  L138     BoogieDeclarations]: Found implementation of procedure whenPaused_pre__fail
[2020-11-24 15:42:11,513 INFO  L138     BoogieDeclarations]: Found implementation of procedure whenPaused_pre__success
[2020-11-24 15:42:11,513 INFO  L138     BoogieDeclarations]: Found implementation of procedure notFrozen_pre__fail
[2020-11-24 15:42:11,513 INFO  L138     BoogieDeclarations]: Found implementation of procedure notFrozen_pre__success
[2020-11-24 15:42:11,513 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_HxSafeMath
[2020-11-24 15:42:11,513 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_HxSafeMath
[2020-11-24 15:42:11,513 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_Roles
[2020-11-24 15:42:11,513 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_Roles
[2020-11-24 15:42:11,514 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_HxOwnable
[2020-11-24 15:42:11,514 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_HxOwnable
[2020-11-24 15:42:11,514 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_PauserRole
[2020-11-24 15:42:11,514 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_PauserRole
[2020-11-24 15:42:11,514 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_Pausable
[2020-11-24 15:42:11,514 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_Pausable
[2020-11-24 15:42:11,514 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_IERC20
[2020-11-24 15:42:11,514 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_IERC20
[2020-11-24 15:42:11,514 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_HxERC20
[2020-11-24 15:42:11,514 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_HxERC20
[2020-11-24 15:42:11,514 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20Pausable
[2020-11-24 15:42:11,514 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20Pausable
[2020-11-24 15:42:11,515 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20Detailed
[2020-11-24 15:42:11,515 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20Detailed
[2020-11-24 15:42:11,515 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_BLY
[2020-11-24 15:42:11,515 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-24 15:42:11,515 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-24 15:42:11,515 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-24 15:42:11,862 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 15:42:11,863 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 15:42:12,300 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-24 15:42:12,300 INFO  L286             CfgBuilder]: Removed 10 assue(true) statements.
[2020-11-24 15:42:12,303 INFO  L202        PluginConnector]: Adding new model BLY_0xf8aD7dFe656188A23e89da09506Adf7ad9290D5d_transferfrom-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 03:42:12 BoogieIcfgContainer
[2020-11-24 15:42:12,303 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 03:42:11" (2/2) ...
[2020-11-24 15:42:12,303 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-24 15:42:12,304 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@1a6fa5f7 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 03:42:12, skipping insertion in model container
[2020-11-24 15:42:12,304 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-24 15:42:12,304 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-24 15:42:12,304 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-24 15:42:12,306 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-24 15:42:12,306 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "BLY_0xf8aD7dFe656188A23e89da09506Adf7ad9290D5d_transferfrom-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 03:42:11" (1/3) ...
[2020-11-24 15:42:12,306 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@41fa133f and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 03:42:12, skipping insertion in model container
[2020-11-24 15:42:12,306 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 03:42:11" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-24 15:42:12,349 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 03:42:12 NWAContainer
[2020-11-24 15:42:12,349 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-24 15:42:12,349 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-24 15:42:12,349 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-24 15:42:12,350 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-24 15:42:12,351 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "BLY_0xf8aD7dFe656188A23e89da09506Adf7ad9290D5d_transferfrom-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 03:42:12" (3/4) ...
[2020-11-24 15:42:12,352 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@5464c210 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 03:42:12, skipping insertion in model container
[2020-11-24 15:42:12,352 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 03:42:12" (4/4) ...
[2020-11-24 15:42:12,355 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-24 15:42:12,359 INFO  L110   BuchiProductObserver]: Initial RCFG 1608 locations, 2105 edges
[2020-11-24 15:42:12,359 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-24 15:42:12,370 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-24 15:42:13,966 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-24 15:42:13,971 INFO  L110   BuchiProductObserver]: BuchiProgram size 3828 locations, 6759 edges
[2020-11-24 15:42:13,971 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 03:42:13 BoogieIcfgContainer
[2020-11-24 15:42:13,971 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-24 15:42:13,972 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-24 15:42:13,972 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-24 15:42:13,973 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-24 15:42:13,973 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 03:42:13" (1/1) ...
[2020-11-24 15:42:14,062 INFO  L313           BlockEncoder]: Initial Icfg 3828 locations, 6759 edges
[2020-11-24 15:42:14,062 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-24 15:42:14,063 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-24 15:42:14,063 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-24 15:42:14,063 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-24 15:42:14,074 INFO  L70    emoveInfeasibleEdges]: Removed 120 edges and 23 locations because of local infeasibility
[2020-11-24 15:42:14,082 INFO  L70        RemoveSinkStates]: Removed 112 edges and 63 locations by removing sink states
[2020-11-24 15:42:14,095 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-24 15:42:14,098 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-24 15:42:14,101 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-24 15:42:14,101 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-24 15:42:14,106 INFO  L313           BlockEncoder]: Encoded RCFG 3714 locations, 6486 edges
[2020-11-24 15:42:14,106 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 24.11 03:42:14 BasicIcfg
[2020-11-24 15:42:14,106 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-24 15:42:14,107 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-24 15:42:14,107 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-24 15:42:14,109 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-24 15:42:14,109 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 15:42:14,109 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "BLY_0xf8aD7dFe656188A23e89da09506Adf7ad9290D5d_transferfrom-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 03:42:11" (1/6) ...
[2020-11-24 15:42:14,111 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@7af1e1a1 and model type BLY_0xf8aD7dFe656188A23e89da09506Adf7ad9290D5d_transferfrom-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 24.11 03:42:14, skipping insertion in model container
[2020-11-24 15:42:14,111 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 15:42:14,111 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 03:42:11" (2/6) ...
[2020-11-24 15:42:14,111 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@7af1e1a1 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 24.11 03:42:14, skipping insertion in model container
[2020-11-24 15:42:14,111 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 15:42:14,111 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "BLY_0xf8aD7dFe656188A23e89da09506Adf7ad9290D5d_transferfrom-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 03:42:12" (3/6) ...
[2020-11-24 15:42:14,111 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@7af1e1a1 and model type BLY_0xf8aD7dFe656188A23e89da09506Adf7ad9290D5d_transferfrom-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 24.11 03:42:14, skipping insertion in model container
[2020-11-24 15:42:14,111 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 15:42:14,112 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 03:42:12" (4/6) ...
[2020-11-24 15:42:14,112 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@7af1e1a1 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 24.11 03:42:14, skipping insertion in model container
[2020-11-24 15:42:14,112 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 15:42:14,112 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 03:42:13" (5/6) ...
[2020-11-24 15:42:14,112 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@7af1e1a1 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 24.11 03:42:14, skipping insertion in model container
[2020-11-24 15:42:14,112 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 15:42:14,112 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 24.11 03:42:14" (6/6) ...
[2020-11-24 15:42:14,113 INFO  L404   chiAutomizerObserver]: Analyzing ICFG BLY_0xf8aD7dFe656188A23e89da09506Adf7ad9290D5d_transferfrom-fail.bpl_BEv2
[2020-11-24 15:42:14,149 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-24 15:42:14,150 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-24 15:42:14,150 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-24 15:42:14,150 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-24 15:42:14,150 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-24 15:42:14,150 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-24 15:42:14,150 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-24 15:42:14,150 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-24 15:42:14,150 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-24 15:42:14,189 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3714 states.
[2020-11-24 15:42:14,240 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 15:42:14,241 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 15:42:14,241 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 15:42:14,249 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 15:42:14,249 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
[2020-11-24 15:42:14,249 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-24 15:42:14,249 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3714 states.
[2020-11-24 15:42:14,269 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 15:42:14,269 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 15:42:14,269 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 15:42:14,271 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 15:42:14,271 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L2]                 fail_transferFrom_BLY0 := false;
[L2]                 call_transferFrom_BLY0 := false;
[L2]     CALL        call main();
[L4387]              assume null == 0;
[L4388]  CALL        call this := FreshRefGenerator__success();
[L1636]              havoc newRef;
[L1637]              assume Alloc[newRef] == false;
[L1638]              Alloc[newRef] := true;
[L1639]              assume newRef != null;
[L4388]  RET         call this := FreshRefGenerator__success();
[L4389]              assume now >= 0;
[L4390]              assume DType[this] == BLY;
[L4391]              assume !revert && gas >= 0;
[L4392]  CALL        call CorralChoice_BLY(this);
[L4269]              havoc msgsender_MSG;
[L4270]              havoc msgvalue_MSG;
[L4271]              havoc choice;
[L4272]              havoc __ret_0_owner;
[L4273]              havoc __ret_0_newOwner;
[L4274]              havoc account_s293;
[L4275]              havoc __ret_0_isOwner;
[L4276]              havoc _newOwner_s313;
[L4277]              havoc __ret_0_acceptOwnership;
[L4278]              havoc account_s390;
[L4279]              havoc __ret_0_isPauser;
[L4280]              havoc account_s402;
[L4281]              havoc account_s414;
[L4282]              havoc __ret_0_paused;
[L4283]              havoc to_s1288;
[L4284]              havoc value_s1288;
[L4285]              havoc __ret_0_transfer;
[L4286]              havoc spender_s711;
[L4287]              havoc value_s711;
[L4288]              havoc __ret_0_approve;
[L4289]              havoc from_s1322;
[L4290]              havoc to_s1322;
[L4291]              havoc value_s1322;
[L4292]              havoc __ret_0_transferFrom;
[L4293]              havoc __ret_0_totalSupply;
[L4294]              havoc owner_s1254;
[L4295]              havoc __ret_0_balanceOf;
[L4296]              havoc owner_s656;
[L4297]              havoc spender_s656;
[L4298]              havoc __ret_0_allowance;
[L4299]              havoc spender_s809;
[L4300]              havoc addedValue_s809;
[L4301]              havoc __ret_0_increaseAllowance;
[L4302]              havoc spender_s858;
[L4303]              havoc subtractedValue_s858;
[L4304]              havoc __ret_0_decreaseAllowance;
[L4305]              havoc name_s1105;
[L4306]              havoc symbol_s1105;
[L4307]              havoc decimals_s1105;
[L4308]              havoc __ret_0_name;
[L4309]              havoc __ret_0_symbol;
[L4310]              havoc __ret_0_decimals;
[L4311]              havoc __ret_0_implementation;
[L4312]              havoc arg1675_s0;
[L4313]              havoc arg1676_s0;
[L4314]              havoc __ret_0_timelockList;
[L4315]              havoc arg1677_s0;
[L4316]              havoc __ret_0_frozenAccount;
[L4317]              havoc holder_s1351;
[L4318]              havoc __ret_0_freezeAccount;
[L4319]              havoc holder_s1379;
[L4320]              havoc __ret_0_unfreezeAccount;
[L4321]              havoc holder_s1410;
[L4322]              havoc value_s1410;
[L4323]              havoc releaseTime_s1410;
[L4324]              havoc __ret_0_lock;
[L4325]              havoc holder_s1439;
[L4326]              havoc value_s1439;
[L4327]              havoc releaseTime_s1439;
[L4328]              havoc __ret_0_transferWithLock;
[L4329]              havoc holder_s1468;
[L4330]              havoc idx_s1468;
[L4331]              havoc __ret_0_unlock;
[L4332]              havoc _newImplementation_s1486;
[L4333]              havoc tmpNow;
[L4334]              havoc gas;
[L4335]              assume gas > 4000000 && gas <= 8000000;
[L4336]              tmpNow := now;
[L4337]              havoc now;
[L4338]              assume now > tmpNow;
[L4339]              assume msgsender_MSG != null;
[L4340]  COND TRUE   choice == 6
[L4341]              gas := gas - 21000;
[L4342]  COND FALSE  !(gas >= 0)
[L4392]  RET         call CorralChoice_BLY(this);

Loop:
[L4392]        assume true;

[2020-11-24 15:42:14,284 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 15:42:14,284 INFO  L82        PathProgramCache]: Analyzing trace with hash 1682430022, now seen corresponding path program 1 times
[2020-11-24 15:42:14,310 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 15:42:14,337 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 15:42:14,399 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 15:42:14,401 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 15:42:14,401 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [5] imperfect sequences [] total 5
[2020-11-24 15:42:14,576 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 15:42:14,589 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 5 interpolants.
[2020-11-24 15:42:14,589 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=9, Invalid=11, Unknown=0, NotChecked=0, Total=20
[2020-11-24 15:42:14,591 INFO  L87              Difference]: Start difference. First operand 3714 states. Second operand 5 states.
[2020-11-24 15:42:15,007 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 15:42:15,007 INFO  L93              Difference]: Finished difference Result 1372 states and 1651 transitions.
[2020-11-24 15:42:15,007 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-24 15:42:15,008 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 1372 states and 1651 transitions.
[2020-11-24 15:42:15,017 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 15:42:15,023 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 1372 states to 347 states and 407 transitions.
[2020-11-24 15:42:15,024 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 3
[2020-11-24 15:42:15,024 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 144
[2020-11-24 15:42:15,025 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 347 states and 407 transitions.
[2020-11-24 15:42:15,027 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 15:42:15,027 INFO  L728         BuchiCegarLoop]: Abstraction has 347 states and 407 transitions.
[2020-11-24 15:42:15,041 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 347 states and 407 transitions.
[2020-11-24 15:42:15,060 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 347 to 347.
[2020-11-24 15:42:15,061 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 347 states.
[2020-11-24 15:42:15,062 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 347 states to 347 states and 407 transitions.
[2020-11-24 15:42:15,063 INFO  L751         BuchiCegarLoop]: Abstraction has 347 states and 407 transitions.
[2020-11-24 15:42:15,063 INFO  L631         BuchiCegarLoop]: Abstraction has 347 states and 407 transitions.
[2020-11-24 15:42:15,064 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-24 15:42:15,064 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 347 states and 407 transitions.
[2020-11-24 15:42:15,065 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 15:42:15,065 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 15:42:15,065 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 15:42:15,067 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 15:42:15,067 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L2]                 fail_transferFrom_BLY0 := false;
[L2]                 call_transferFrom_BLY0 := false;
[L2]     CALL        call main();
[L4387]              assume null == 0;
[L4388]  CALL        call this := FreshRefGenerator__success();
[L1636]              havoc newRef;
[L1637]              assume Alloc[newRef] == false;
[L1638]              Alloc[newRef] := true;
[L1639]              assume newRef != null;
[L4388]  RET         call this := FreshRefGenerator__success();
[L4389]              assume now >= 0;
[L4390]              assume DType[this] == BLY;
[L4391]              assume !revert && gas >= 0;
[L4392]  CALL        call CorralChoice_BLY(this);
[L4269]              havoc msgsender_MSG;
[L4270]              havoc msgvalue_MSG;
[L4271]              havoc choice;
[L4272]              havoc __ret_0_owner;
[L4273]              havoc __ret_0_newOwner;
[L4274]              havoc account_s293;
[L4275]              havoc __ret_0_isOwner;
[L4276]              havoc _newOwner_s313;
[L4277]              havoc __ret_0_acceptOwnership;
[L4278]              havoc account_s390;
[L4279]              havoc __ret_0_isPauser;
[L4280]              havoc account_s402;
[L4281]              havoc account_s414;
[L4282]              havoc __ret_0_paused;
[L4283]              havoc to_s1288;
[L4284]              havoc value_s1288;
[L4285]              havoc __ret_0_transfer;
[L4286]              havoc spender_s711;
[L4287]              havoc value_s711;
[L4288]              havoc __ret_0_approve;
[L4289]              havoc from_s1322;
[L4290]              havoc to_s1322;
[L4291]              havoc value_s1322;
[L4292]              havoc __ret_0_transferFrom;
[L4293]              havoc __ret_0_totalSupply;
[L4294]              havoc owner_s1254;
[L4295]              havoc __ret_0_balanceOf;
[L4296]              havoc owner_s656;
[L4297]              havoc spender_s656;
[L4298]              havoc __ret_0_allowance;
[L4299]              havoc spender_s809;
[L4300]              havoc addedValue_s809;
[L4301]              havoc __ret_0_increaseAllowance;
[L4302]              havoc spender_s858;
[L4303]              havoc subtractedValue_s858;
[L4304]              havoc __ret_0_decreaseAllowance;
[L4305]              havoc name_s1105;
[L4306]              havoc symbol_s1105;
[L4307]              havoc decimals_s1105;
[L4308]              havoc __ret_0_name;
[L4309]              havoc __ret_0_symbol;
[L4310]              havoc __ret_0_decimals;
[L4311]              havoc __ret_0_implementation;
[L4312]              havoc arg1675_s0;
[L4313]              havoc arg1676_s0;
[L4314]              havoc __ret_0_timelockList;
[L4315]              havoc arg1677_s0;
[L4316]              havoc __ret_0_frozenAccount;
[L4317]              havoc holder_s1351;
[L4318]              havoc __ret_0_freezeAccount;
[L4319]              havoc holder_s1379;
[L4320]              havoc __ret_0_unfreezeAccount;
[L4321]              havoc holder_s1410;
[L4322]              havoc value_s1410;
[L4323]              havoc releaseTime_s1410;
[L4324]              havoc __ret_0_lock;
[L4325]              havoc holder_s1439;
[L4326]              havoc value_s1439;
[L4327]              havoc releaseTime_s1439;
[L4328]              havoc __ret_0_transferWithLock;
[L4329]              havoc holder_s1468;
[L4330]              havoc idx_s1468;
[L4331]              havoc __ret_0_unlock;
[L4332]              havoc _newImplementation_s1486;
[L4333]              havoc tmpNow;
[L4334]              havoc gas;
[L4335]              assume gas > 4000000 && gas <= 8000000;
[L4336]              tmpNow := now;
[L4337]              havoc now;
[L4338]              assume now > tmpNow;
[L4339]              assume msgsender_MSG != null;
[L4340]  COND FALSE  !(choice == 6)
[L4347]  COND FALSE  !(choice == 5)
[L4354]  COND TRUE   choice == 4
[L4355]              gas := gas - 21000;
[L4356]  COND TRUE   gas >= 0
[L4357]              assume value_s1322 >= 0 && value_s1322 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4358]              assume msgvalue_MSG == 0;
[L4359]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_BLY(this, msgsender_MSG, msgvalue_MSG, from_s1322, to_s1322, value_s1322);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((((from_s1322 != to_s1322 && ((value_s1322 > _balances_HxERC20[this][from_s1322] || value_s1322 > _allowed_HxERC20[this][from_s1322][msgsender_MSG]) || _balances_HxERC20[this][to_s1322] + value_s1322 >= 115792089237316195423570985008687907853269984665640564039457584007913129639936)) && value_s1322 >= 0) && value_s1322 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_HxERC20[this][to_s1322] >= 0) && _balances_HxERC20[this][to_s1322] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_HxERC20[this][from_s1322] >= 0) && _balances_HxERC20[this][from_s1322] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowed_HxERC20[this][from_s1322][msgsender_MSG] >= 0) && _allowed_HxERC20[this][from_s1322][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transferFrom_BLY0 := true;
[L2]                 call_transferFrom_BLY0 := false;
[L2]                 revert := revert_hold;
[L959]               havoc __exception;
[L960]               revert := false;
[L961]   COND FALSE  !(__exception)
[L997]   CALL        call __ret_0_ := transferFrom~address~address~uint256_BLY__success(this, msgsender_MSG, msgvalue_MSG, from_s1322, to_s1322, value_s1322);
[L2370]  CALL        call notFrozen_pre__success(this, msgsender_MSG, msgvalue_MSG, from_s1322);
[L3578]  COND FALSE  !(!!frozenAccount_BLY[this][_holder_s1185])
[L2370]  RET         call notFrozen_pre__success(this, msgsender_MSG, msgvalue_MSG, from_s1322);
[L2371]  COND TRUE   revert
[L997]   RET         call __ret_0_ := transferFrom~address~address~uint256_BLY__success(this, msgsender_MSG, msgvalue_MSG, from_s1322, to_s1322, value_s1322);
[L998]               assume !revert && gas >= 0;
[L4359]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_BLY(this, msgsender_MSG, msgvalue_MSG, from_s1322, to_s1322, value_s1322);
[L4392]  RET         call CorralChoice_BLY(this);

Loop:
[L4392]        assume true;

[2020-11-24 15:42:15,069 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 15:42:15,069 INFO  L82        PathProgramCache]: Analyzing trace with hash -208650697, now seen corresponding path program 1 times
[2020-11-24 15:42:15,070 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 15:42:15,079 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 15:42:15,101 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 15:42:15,101 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 15:42:15,101 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [5] imperfect sequences [] total 5
[2020-11-24 15:42:15,102 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 15:42:15,102 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 5 interpolants.
[2020-11-24 15:42:15,102 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=9, Invalid=11, Unknown=0, NotChecked=0, Total=20
[2020-11-24 15:42:15,103 INFO  L87              Difference]: Start difference. First operand 347 states and 407 transitions. cyclomatic complexity: 62 Second operand 5 states.
[2020-11-24 15:42:15,140 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 15:42:15,140 INFO  L93              Difference]: Finished difference Result 399 states and 456 transitions.
[2020-11-24 15:42:15,140 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-24 15:42:15,140 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 399 states and 456 transitions.
[2020-11-24 15:42:15,142 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 15:42:15,144 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 399 states to 399 states and 456 transitions.
[2020-11-24 15:42:15,144 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 168
[2020-11-24 15:42:15,145 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 168
[2020-11-24 15:42:15,145 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 399 states and 456 transitions.
[2020-11-24 15:42:15,145 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 15:42:15,146 INFO  L728         BuchiCegarLoop]: Abstraction has 399 states and 456 transitions.
[2020-11-24 15:42:15,146 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 399 states and 456 transitions.
[2020-11-24 15:42:15,152 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 399 to 395.
[2020-11-24 15:42:15,153 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 395 states.
[2020-11-24 15:42:15,154 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 395 states to 395 states and 452 transitions.
[2020-11-24 15:42:15,154 INFO  L751         BuchiCegarLoop]: Abstraction has 395 states and 452 transitions.
[2020-11-24 15:42:15,154 INFO  L631         BuchiCegarLoop]: Abstraction has 395 states and 452 transitions.
[2020-11-24 15:42:15,154 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-24 15:42:15,154 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 395 states and 452 transitions.
[2020-11-24 15:42:15,156 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 15:42:15,156 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 15:42:15,156 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 15:42:15,157 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 15:42:15,157 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L2]                 fail_transferFrom_BLY0 := false;
[L2]                 call_transferFrom_BLY0 := false;
[L2]     CALL        call main();
[L4387]              assume null == 0;
[L4388]  CALL        call this := FreshRefGenerator__success();
[L1636]              havoc newRef;
[L1637]              assume Alloc[newRef] == false;
[L1638]              Alloc[newRef] := true;
[L1639]              assume newRef != null;
[L4388]  RET         call this := FreshRefGenerator__success();
[L4389]              assume now >= 0;
[L4390]              assume DType[this] == BLY;
[L4391]              assume !revert && gas >= 0;
[L4392]  CALL        call CorralChoice_BLY(this);
[L4269]              havoc msgsender_MSG;
[L4270]              havoc msgvalue_MSG;
[L4271]              havoc choice;
[L4272]              havoc __ret_0_owner;
[L4273]              havoc __ret_0_newOwner;
[L4274]              havoc account_s293;
[L4275]              havoc __ret_0_isOwner;
[L4276]              havoc _newOwner_s313;
[L4277]              havoc __ret_0_acceptOwnership;
[L4278]              havoc account_s390;
[L4279]              havoc __ret_0_isPauser;
[L4280]              havoc account_s402;
[L4281]              havoc account_s414;
[L4282]              havoc __ret_0_paused;
[L4283]              havoc to_s1288;
[L4284]              havoc value_s1288;
[L4285]              havoc __ret_0_transfer;
[L4286]              havoc spender_s711;
[L4287]              havoc value_s711;
[L4288]              havoc __ret_0_approve;
[L4289]              havoc from_s1322;
[L4290]              havoc to_s1322;
[L4291]              havoc value_s1322;
[L4292]              havoc __ret_0_transferFrom;
[L4293]              havoc __ret_0_totalSupply;
[L4294]              havoc owner_s1254;
[L4295]              havoc __ret_0_balanceOf;
[L4296]              havoc owner_s656;
[L4297]              havoc spender_s656;
[L4298]              havoc __ret_0_allowance;
[L4299]              havoc spender_s809;
[L4300]              havoc addedValue_s809;
[L4301]              havoc __ret_0_increaseAllowance;
[L4302]              havoc spender_s858;
[L4303]              havoc subtractedValue_s858;
[L4304]              havoc __ret_0_decreaseAllowance;
[L4305]              havoc name_s1105;
[L4306]              havoc symbol_s1105;
[L4307]              havoc decimals_s1105;
[L4308]              havoc __ret_0_name;
[L4309]              havoc __ret_0_symbol;
[L4310]              havoc __ret_0_decimals;
[L4311]              havoc __ret_0_implementation;
[L4312]              havoc arg1675_s0;
[L4313]              havoc arg1676_s0;
[L4314]              havoc __ret_0_timelockList;
[L4315]              havoc arg1677_s0;
[L4316]              havoc __ret_0_frozenAccount;
[L4317]              havoc holder_s1351;
[L4318]              havoc __ret_0_freezeAccount;
[L4319]              havoc holder_s1379;
[L4320]              havoc __ret_0_unfreezeAccount;
[L4321]              havoc holder_s1410;
[L4322]              havoc value_s1410;
[L4323]              havoc releaseTime_s1410;
[L4324]              havoc __ret_0_lock;
[L4325]              havoc holder_s1439;
[L4326]              havoc value_s1439;
[L4327]              havoc releaseTime_s1439;
[L4328]              havoc __ret_0_transferWithLock;
[L4329]              havoc holder_s1468;
[L4330]              havoc idx_s1468;
[L4331]              havoc __ret_0_unlock;
[L4332]              havoc _newImplementation_s1486;
[L4333]              havoc tmpNow;
[L4334]              havoc gas;
[L4335]              assume gas > 4000000 && gas <= 8000000;
[L4336]              tmpNow := now;
[L4337]              havoc now;
[L4338]              assume now > tmpNow;
[L4339]              assume msgsender_MSG != null;
[L4340]  COND FALSE  !(choice == 6)
[L4347]  COND FALSE  !(choice == 5)
[L4354]  COND TRUE   choice == 4
[L4355]              gas := gas - 21000;
[L4356]  COND TRUE   gas >= 0
[L4357]              assume value_s1322 >= 0 && value_s1322 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4358]              assume msgvalue_MSG == 0;
[L4359]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_BLY(this, msgsender_MSG, msgvalue_MSG, from_s1322, to_s1322, value_s1322);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((((from_s1322 != to_s1322 && ((value_s1322 > _balances_HxERC20[this][from_s1322] || value_s1322 > _allowed_HxERC20[this][from_s1322][msgsender_MSG]) || _balances_HxERC20[this][to_s1322] + value_s1322 >= 115792089237316195423570985008687907853269984665640564039457584007913129639936)) && value_s1322 >= 0) && value_s1322 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_HxERC20[this][to_s1322] >= 0) && _balances_HxERC20[this][to_s1322] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_HxERC20[this][from_s1322] >= 0) && _balances_HxERC20[this][from_s1322] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowed_HxERC20[this][from_s1322][msgsender_MSG] >= 0) && _allowed_HxERC20[this][from_s1322][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transferFrom_BLY0 := true;
[L2]                 call_transferFrom_BLY0 := false;
[L2]                 revert := revert_hold;
[L959]               havoc __exception;
[L960]               revert := false;
[L961]   COND FALSE  !(__exception)
[L997]   CALL        call __ret_0_ := transferFrom~address~address~uint256_BLY__success(this, msgsender_MSG, msgvalue_MSG, from_s1322, to_s1322, value_s1322);
[L2370]  CALL        call notFrozen_pre__success(this, msgsender_MSG, msgvalue_MSG, from_s1322);
[L3578]  COND TRUE   !!frozenAccount_BLY[this][_holder_s1185]
[L3579]              revert := true;
[L2370]  RET         call notFrozen_pre__success(this, msgsender_MSG, msgvalue_MSG, from_s1322);
[L2371]  COND TRUE   revert
[L997]   RET         call __ret_0_ := transferFrom~address~address~uint256_BLY__success(this, msgsender_MSG, msgvalue_MSG, from_s1322, to_s1322, value_s1322);
[L998]               assume !revert && gas >= 0;
[L4359]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_BLY(this, msgsender_MSG, msgvalue_MSG, from_s1322, to_s1322, value_s1322);
[L4392]  RET         call CorralChoice_BLY(this);

Loop:
[L4392]        assume true;

[2020-11-24 15:42:15,159 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 15:42:15,160 INFO  L82        PathProgramCache]: Analyzing trace with hash -1348707010, now seen corresponding path program 1 times
[2020-11-24 15:42:15,161 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 15:42:15,167 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 15:42:15,179 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 15:42:15,180 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 15:42:15,180 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-24 15:42:15,180 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 15:42:15,180 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-24 15:42:15,180 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-24 15:42:15,180 INFO  L87              Difference]: Start difference. First operand 395 states and 452 transitions. cyclomatic complexity: 59 Second operand 3 states.
[2020-11-24 15:42:15,188 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 15:42:15,189 INFO  L93              Difference]: Finished difference Result 399 states and 440 transitions.
[2020-11-24 15:42:15,189 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-24 15:42:15,189 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 399 states and 440 transitions.
[2020-11-24 15:42:15,190 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 15:42:15,191 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 399 states to 342 states and 373 transitions.
[2020-11-24 15:42:15,192 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 143
[2020-11-24 15:42:15,192 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 143
[2020-11-24 15:42:15,192 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 342 states and 373 transitions.
[2020-11-24 15:42:15,192 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 15:42:15,192 INFO  L728         BuchiCegarLoop]: Abstraction has 342 states and 373 transitions.
[2020-11-24 15:42:15,193 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 342 states and 373 transitions.
[2020-11-24 15:42:15,197 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 342 to 342.
[2020-11-24 15:42:15,198 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 342 states.
[2020-11-24 15:42:15,199 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 342 states to 342 states and 373 transitions.
[2020-11-24 15:42:15,199 INFO  L751         BuchiCegarLoop]: Abstraction has 342 states and 373 transitions.
[2020-11-24 15:42:15,199 INFO  L631         BuchiCegarLoop]: Abstraction has 342 states and 373 transitions.
[2020-11-24 15:42:15,199 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-24 15:42:15,199 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 342 states and 373 transitions.
[2020-11-24 15:42:15,201 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 15:42:15,201 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 15:42:15,201 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 15:42:15,204 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 15:42:15,204 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L2]                 fail_transferFrom_BLY0 := false;
[L2]                 call_transferFrom_BLY0 := false;
[L2]     CALL        call main();
[L4387]              assume null == 0;
[L4388]  CALL        call this := FreshRefGenerator__success();
[L1636]              havoc newRef;
[L1637]              assume Alloc[newRef] == false;
[L1638]              Alloc[newRef] := true;
[L1639]              assume newRef != null;
[L4388]  RET         call this := FreshRefGenerator__success();
[L4389]              assume now >= 0;
[L4390]              assume DType[this] == BLY;
[L4391]              assume !revert && gas >= 0;
[L4392]  CALL        call CorralChoice_BLY(this);
[L4269]              havoc msgsender_MSG;
[L4270]              havoc msgvalue_MSG;
[L4271]              havoc choice;
[L4272]              havoc __ret_0_owner;
[L4273]              havoc __ret_0_newOwner;
[L4274]              havoc account_s293;
[L4275]              havoc __ret_0_isOwner;
[L4276]              havoc _newOwner_s313;
[L4277]              havoc __ret_0_acceptOwnership;
[L4278]              havoc account_s390;
[L4279]              havoc __ret_0_isPauser;
[L4280]              havoc account_s402;
[L4281]              havoc account_s414;
[L4282]              havoc __ret_0_paused;
[L4283]              havoc to_s1288;
[L4284]              havoc value_s1288;
[L4285]              havoc __ret_0_transfer;
[L4286]              havoc spender_s711;
[L4287]              havoc value_s711;
[L4288]              havoc __ret_0_approve;
[L4289]              havoc from_s1322;
[L4290]              havoc to_s1322;
[L4291]              havoc value_s1322;
[L4292]              havoc __ret_0_transferFrom;
[L4293]              havoc __ret_0_totalSupply;
[L4294]              havoc owner_s1254;
[L4295]              havoc __ret_0_balanceOf;
[L4296]              havoc owner_s656;
[L4297]              havoc spender_s656;
[L4298]              havoc __ret_0_allowance;
[L4299]              havoc spender_s809;
[L4300]              havoc addedValue_s809;
[L4301]              havoc __ret_0_increaseAllowance;
[L4302]              havoc spender_s858;
[L4303]              havoc subtractedValue_s858;
[L4304]              havoc __ret_0_decreaseAllowance;
[L4305]              havoc name_s1105;
[L4306]              havoc symbol_s1105;
[L4307]              havoc decimals_s1105;
[L4308]              havoc __ret_0_name;
[L4309]              havoc __ret_0_symbol;
[L4310]              havoc __ret_0_decimals;
[L4311]              havoc __ret_0_implementation;
[L4312]              havoc arg1675_s0;
[L4313]              havoc arg1676_s0;
[L4314]              havoc __ret_0_timelockList;
[L4315]              havoc arg1677_s0;
[L4316]              havoc __ret_0_frozenAccount;
[L4317]              havoc holder_s1351;
[L4318]              havoc __ret_0_freezeAccount;
[L4319]              havoc holder_s1379;
[L4320]              havoc __ret_0_unfreezeAccount;
[L4321]              havoc holder_s1410;
[L4322]              havoc value_s1410;
[L4323]              havoc releaseTime_s1410;
[L4324]              havoc __ret_0_lock;
[L4325]              havoc holder_s1439;
[L4326]              havoc value_s1439;
[L4327]              havoc releaseTime_s1439;
[L4328]              havoc __ret_0_transferWithLock;
[L4329]              havoc holder_s1468;
[L4330]              havoc idx_s1468;
[L4331]              havoc __ret_0_unlock;
[L4332]              havoc _newImplementation_s1486;
[L4333]              havoc tmpNow;
[L4334]              havoc gas;
[L4335]              assume gas > 4000000 && gas <= 8000000;
[L4336]              tmpNow := now;
[L4337]              havoc now;
[L4338]              assume now > tmpNow;
[L4339]              assume msgsender_MSG != null;
[L4340]  COND FALSE  !(choice == 6)
[L4347]  COND FALSE  !(choice == 5)
[L4354]  COND TRUE   choice == 4
[L4355]              gas := gas - 21000;
[L4356]  COND TRUE   gas >= 0
[L4357]              assume value_s1322 >= 0 && value_s1322 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4358]              assume msgvalue_MSG == 0;
[L4359]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_BLY(this, msgsender_MSG, msgvalue_MSG, from_s1322, to_s1322, value_s1322);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((((from_s1322 != to_s1322 && ((value_s1322 > _balances_HxERC20[this][from_s1322] || value_s1322 > _allowed_HxERC20[this][from_s1322][msgsender_MSG]) || _balances_HxERC20[this][to_s1322] + value_s1322 >= 115792089237316195423570985008687907853269984665640564039457584007913129639936)) && value_s1322 >= 0) && value_s1322 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_HxERC20[this][to_s1322] >= 0) && _balances_HxERC20[this][to_s1322] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_HxERC20[this][from_s1322] >= 0) && _balances_HxERC20[this][from_s1322] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowed_HxERC20[this][from_s1322][msgsender_MSG] >= 0) && _allowed_HxERC20[this][from_s1322][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transferFrom_BLY0 := true;
[L2]                 call_transferFrom_BLY0 := false;
[L2]                 revert := revert_hold;
[L959]               havoc __exception;
[L960]               revert := false;
[L961]   COND FALSE  !(__exception)
[L997]   CALL        call __ret_0_ := transferFrom~address~address~uint256_BLY__success(this, msgsender_MSG, msgvalue_MSG, from_s1322, to_s1322, value_s1322);
[L2370]  CALL        call notFrozen_pre__success(this, msgsender_MSG, msgvalue_MSG, from_s1322);
[L3578]  COND FALSE  !(!!frozenAccount_BLY[this][_holder_s1185])
[L2370]  RET         call notFrozen_pre__success(this, msgsender_MSG, msgvalue_MSG, from_s1322);
[L2371]  COND FALSE  !(revert)
[L2374]  COND FALSE  !(alloc_timelockList_BLY_lvl0[timelockList_BLY[this]][from_s1322] == false)
[L2385]  COND FALSE  !(Length[M_Ref_Ref[timelockList_BLY[this]][from_s1322]] > 0)
[L2391]  COND TRUE   DType[this] == BLY
[L2392]  CALL        call __var_24 := transferFrom~address~address~uint256_ERC20Pausable__success(this, msgsender_MSG, msgvalue_MSG, from_s1322, to_s1322, value_s1322);
[L2088]  CALL        call whenNotPaused_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L3554]  COND FALSE  !(!!_paused_Pausable[this])
[L2088]  RET         call whenNotPaused_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L2089]  COND FALSE  !(revert)
[L2092]  COND TRUE   DType[this] == BLY
[L2093]  CALL        call __var_11 := transferFrom~address~address~uint256_HxERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s1074, to_s1074, value_s1074);
[L1926]  CALL        call __var_5 := sub~uint256~uint256_HxSafeMath__success(this, this, 0, _allowed_HxERC20[this][from_s760][msgsender_MSG], value_s760);
[L1679]  COND FALSE  !(!(b_s82 <= a_s82))
[L1683]              c_s82 := (a_s82 - b_s82) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1684]              __ret_0_ := c_s82;
[L1926]  RET         call __var_5 := sub~uint256~uint256_HxSafeMath__success(this, this, 0, _allowed_HxERC20[this][from_s760][msgsender_MSG], value_s760);
[L1927]  COND FALSE  !(revert)
[L1930]              sum__allowed1[from_s760] := sum__allowed1[from_s760] - _allowed_HxERC20[this][from_s760][msgsender_MSG];
[L1931]              _allowed_HxERC20[this][from_s760][msgsender_MSG] := __var_5;
[L1932]              sum__allowed1[from_s760] := sum__allowed1[from_s760] + _allowed_HxERC20[this][from_s760][msgsender_MSG];
[L1933]  COND FALSE  !(DType[this] == BLY)
[L1938]  COND FALSE  !(DType[this] == ERC20Pausable)
[L1943]  COND TRUE   DType[this] == HxERC20
[L1944]  CALL        call _transfer~address~address~uint256_HxERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s760, to_s760, value_s760);
[L1987]              __var_6 := null;
[L1988]  COND FALSE  !(!(to_s904 != null))
[L1992]  CALL        call __var_7 := sub~uint256~uint256_HxSafeMath__success(this, this, 0, _balances_HxERC20[this][from_s904], value_s904);
[L1679]  COND FALSE  !(!(b_s82 <= a_s82))
[L1683]              c_s82 := (a_s82 - b_s82) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1684]              __ret_0_ := c_s82;
[L1992]  RET         call __var_7 := sub~uint256~uint256_HxSafeMath__success(this, this, 0, _balances_HxERC20[this][from_s904], value_s904);
[L1993]  COND FALSE  !(revert)
[L1996]              sum__balances0[this] := sum__balances0[this] - _balances_HxERC20[this][from_s904];
[L1997]              _balances_HxERC20[this][from_s904] := __var_7;
[L1998]              sum__balances0[this] := sum__balances0[this] + _balances_HxERC20[this][from_s904];
[L1999]  CALL        call __var_8 := add~uint256~uint256_HxSafeMath__success(this, this, 0, _balances_HxERC20[this][to_s904], value_s904);
[L1703]              c_s106 := (a_s106 + b_s106) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1704]  COND FALSE  !(!(c_s106 >= a_s106))
[L1708]              __ret_0_ := c_s106;
[L1999]  RET         call __var_8 := add~uint256~uint256_HxSafeMath__success(this, this, 0, _balances_HxERC20[this][to_s904], value_s904);
[L2000]  COND FALSE  !(revert)
[L2003]              sum__balances0[this] := sum__balances0[this] - _balances_HxERC20[this][to_s904];
[L2004]              _balances_HxERC20[this][to_s904] := __var_8;
[L2005]              sum__balances0[this] := sum__balances0[this] + _balances_HxERC20[this][to_s904];
[L2006]              assert { :EventEmitted "Transfer_HxERC20" } true;
[L1944]  RET         call _transfer~address~address~uint256_HxERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s760, to_s760, value_s760);
[L1945]  COND FALSE  !(revert)
[L1951]              assert { :EventEmitted "Approval_HxERC20" } true;
[L1952]              __ret_0_ := true;
[L2093]  RET         call __var_11 := transferFrom~address~address~uint256_HxERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s1074, to_s1074, value_s1074);
[L2094]  COND FALSE  !(revert)
[L2105]              __ret_0_ := __var_11;
[L2392]  RET         call __var_24 := transferFrom~address~address~uint256_ERC20Pausable__success(this, msgsender_MSG, msgvalue_MSG, from_s1322, to_s1322, value_s1322);
[L2393]  COND FALSE  !(revert)
[L2399]              __ret_0_ := __var_24;
[L997]   RET         call __ret_0_ := transferFrom~address~address~uint256_BLY__success(this, msgsender_MSG, msgvalue_MSG, from_s1322, to_s1322, value_s1322);
[L998]               assume !revert && gas >= 0;
[L4359]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_BLY(this, msgsender_MSG, msgvalue_MSG, from_s1322, to_s1322, value_s1322);
[L4392]  RET         call CorralChoice_BLY(this);

Loop:
[L4392]        assume true;

[2020-11-24 15:42:15,208 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 15:42:15,208 INFO  L82        PathProgramCache]: Analyzing trace with hash 2078302628, now seen corresponding path program 1 times
[2020-11-24 15:42:15,209 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 15:42:15,222 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 15:42:15,274 INFO  L134       CoverageAnalysis]: Checked inductivity of 5 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 5 trivial. 0 not checked.
[2020-11-24 15:42:15,275 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 15:42:15,275 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [5] imperfect sequences [] total 5
[2020-11-24 15:42:15,275 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 15:42:15,275 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 5 interpolants.
[2020-11-24 15:42:15,276 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=7, Invalid=13, Unknown=0, NotChecked=0, Total=20
[2020-11-24 15:42:15,276 INFO  L87              Difference]: Start difference. First operand 342 states and 373 transitions. cyclomatic complexity: 33 Second operand 5 states.
[2020-11-24 15:42:15,294 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 15:42:15,294 INFO  L93              Difference]: Finished difference Result 353 states and 384 transitions.
[2020-11-24 15:42:15,294 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 5 states. 
[2020-11-24 15:42:15,294 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 353 states and 384 transitions.
[2020-11-24 15:42:15,296 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 15:42:15,298 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 353 states to 337 states and 366 transitions.
[2020-11-24 15:42:15,298 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 141
[2020-11-24 15:42:15,298 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 141
[2020-11-24 15:42:15,298 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 337 states and 366 transitions.
[2020-11-24 15:42:15,299 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 15:42:15,299 INFO  L728         BuchiCegarLoop]: Abstraction has 337 states and 366 transitions.
[2020-11-24 15:42:15,299 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 337 states and 366 transitions.
[2020-11-24 15:42:15,303 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 337 to 337.
[2020-11-24 15:42:15,303 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 337 states.
[2020-11-24 15:42:15,304 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 337 states to 337 states and 366 transitions.
[2020-11-24 15:42:15,304 INFO  L751         BuchiCegarLoop]: Abstraction has 337 states and 366 transitions.
[2020-11-24 15:42:15,304 INFO  L631         BuchiCegarLoop]: Abstraction has 337 states and 366 transitions.
[2020-11-24 15:42:15,304 INFO  L445         BuchiCegarLoop]: ======== Iteration 5============
[2020-11-24 15:42:15,304 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 337 states and 366 transitions.
[2020-11-24 15:42:15,305 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 15:42:15,305 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 15:42:15,305 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 15:42:15,307 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 15:42:15,307 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L2]                 fail_transferFrom_BLY0 := false;
[L2]                 call_transferFrom_BLY0 := false;
[L2]     CALL        call main();
[L4387]              assume null == 0;
[L4388]  CALL        call this := FreshRefGenerator__success();
[L1636]              havoc newRef;
[L1637]              assume Alloc[newRef] == false;
[L1638]              Alloc[newRef] := true;
[L1639]              assume newRef != null;
[L4388]  RET         call this := FreshRefGenerator__success();
[L4389]              assume now >= 0;
[L4390]              assume DType[this] == BLY;
[L4391]              assume !revert && gas >= 0;
[L4392]  CALL        call CorralChoice_BLY(this);
[L4269]              havoc msgsender_MSG;
[L4270]              havoc msgvalue_MSG;
[L4271]              havoc choice;
[L4272]              havoc __ret_0_owner;
[L4273]              havoc __ret_0_newOwner;
[L4274]              havoc account_s293;
[L4275]              havoc __ret_0_isOwner;
[L4276]              havoc _newOwner_s313;
[L4277]              havoc __ret_0_acceptOwnership;
[L4278]              havoc account_s390;
[L4279]              havoc __ret_0_isPauser;
[L4280]              havoc account_s402;
[L4281]              havoc account_s414;
[L4282]              havoc __ret_0_paused;
[L4283]              havoc to_s1288;
[L4284]              havoc value_s1288;
[L4285]              havoc __ret_0_transfer;
[L4286]              havoc spender_s711;
[L4287]              havoc value_s711;
[L4288]              havoc __ret_0_approve;
[L4289]              havoc from_s1322;
[L4290]              havoc to_s1322;
[L4291]              havoc value_s1322;
[L4292]              havoc __ret_0_transferFrom;
[L4293]              havoc __ret_0_totalSupply;
[L4294]              havoc owner_s1254;
[L4295]              havoc __ret_0_balanceOf;
[L4296]              havoc owner_s656;
[L4297]              havoc spender_s656;
[L4298]              havoc __ret_0_allowance;
[L4299]              havoc spender_s809;
[L4300]              havoc addedValue_s809;
[L4301]              havoc __ret_0_increaseAllowance;
[L4302]              havoc spender_s858;
[L4303]              havoc subtractedValue_s858;
[L4304]              havoc __ret_0_decreaseAllowance;
[L4305]              havoc name_s1105;
[L4306]              havoc symbol_s1105;
[L4307]              havoc decimals_s1105;
[L4308]              havoc __ret_0_name;
[L4309]              havoc __ret_0_symbol;
[L4310]              havoc __ret_0_decimals;
[L4311]              havoc __ret_0_implementation;
[L4312]              havoc arg1675_s0;
[L4313]              havoc arg1676_s0;
[L4314]              havoc __ret_0_timelockList;
[L4315]              havoc arg1677_s0;
[L4316]              havoc __ret_0_frozenAccount;
[L4317]              havoc holder_s1351;
[L4318]              havoc __ret_0_freezeAccount;
[L4319]              havoc holder_s1379;
[L4320]              havoc __ret_0_unfreezeAccount;
[L4321]              havoc holder_s1410;
[L4322]              havoc value_s1410;
[L4323]              havoc releaseTime_s1410;
[L4324]              havoc __ret_0_lock;
[L4325]              havoc holder_s1439;
[L4326]              havoc value_s1439;
[L4327]              havoc releaseTime_s1439;
[L4328]              havoc __ret_0_transferWithLock;
[L4329]              havoc holder_s1468;
[L4330]              havoc idx_s1468;
[L4331]              havoc __ret_0_unlock;
[L4332]              havoc _newImplementation_s1486;
[L4333]              havoc tmpNow;
[L4334]              havoc gas;
[L4335]              assume gas > 4000000 && gas <= 8000000;
[L4336]              tmpNow := now;
[L4337]              havoc now;
[L4338]              assume now > tmpNow;
[L4339]              assume msgsender_MSG != null;
[L4340]  COND FALSE  !(choice == 6)
[L4347]  COND FALSE  !(choice == 5)
[L4354]  COND TRUE   choice == 4
[L4355]              gas := gas - 21000;
[L4356]  COND TRUE   gas >= 0
[L4357]              assume value_s1322 >= 0 && value_s1322 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4358]              assume msgvalue_MSG == 0;
[L4359]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_BLY(this, msgsender_MSG, msgvalue_MSG, from_s1322, to_s1322, value_s1322);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((((from_s1322 != to_s1322 && ((value_s1322 > _balances_HxERC20[this][from_s1322] || value_s1322 > _allowed_HxERC20[this][from_s1322][msgsender_MSG]) || _balances_HxERC20[this][to_s1322] + value_s1322 >= 115792089237316195423570985008687907853269984665640564039457584007913129639936)) && value_s1322 >= 0) && value_s1322 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_HxERC20[this][to_s1322] >= 0) && _balances_HxERC20[this][to_s1322] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_HxERC20[this][from_s1322] >= 0) && _balances_HxERC20[this][from_s1322] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowed_HxERC20[this][from_s1322][msgsender_MSG] >= 0) && _allowed_HxERC20[this][from_s1322][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transferFrom_BLY0 := true;
[L2]                 call_transferFrom_BLY0 := false;
[L2]                 revert := revert_hold;
[L959]               havoc __exception;
[L960]               revert := false;
[L961]   COND FALSE  !(__exception)
[L997]   CALL        call __ret_0_ := transferFrom~address~address~uint256_BLY__success(this, msgsender_MSG, msgvalue_MSG, from_s1322, to_s1322, value_s1322);
[L2370]  CALL        call notFrozen_pre__success(this, msgsender_MSG, msgvalue_MSG, from_s1322);
[L3578]  COND FALSE  !(!!frozenAccount_BLY[this][_holder_s1185])
[L2370]  RET         call notFrozen_pre__success(this, msgsender_MSG, msgvalue_MSG, from_s1322);
[L2371]  COND FALSE  !(revert)
[L2374]  COND FALSE  !(alloc_timelockList_BLY_lvl0[timelockList_BLY[this]][from_s1322] == false)
[L2385]  COND FALSE  !(Length[M_Ref_Ref[timelockList_BLY[this]][from_s1322]] > 0)
[L2391]  COND TRUE   DType[this] == BLY
[L2392]  CALL        call __var_24 := transferFrom~address~address~uint256_ERC20Pausable__success(this, msgsender_MSG, msgvalue_MSG, from_s1322, to_s1322, value_s1322);
[L2088]  CALL        call whenNotPaused_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L3554]  COND FALSE  !(!!_paused_Pausable[this])
[L2088]  RET         call whenNotPaused_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L2089]  COND FALSE  !(revert)
[L2092]  COND FALSE  !(DType[this] == BLY)
[L2097]  COND TRUE   DType[this] == ERC20Pausable
[L2098]  CALL        call __var_11 := transferFrom~address~address~uint256_HxERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s1074, to_s1074, value_s1074);
[L1926]  CALL        call __var_5 := sub~uint256~uint256_HxSafeMath__success(this, this, 0, _allowed_HxERC20[this][from_s760][msgsender_MSG], value_s760);
[L1679]  COND FALSE  !(!(b_s82 <= a_s82))
[L1683]              c_s82 := (a_s82 - b_s82) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1684]              __ret_0_ := c_s82;
[L1926]  RET         call __var_5 := sub~uint256~uint256_HxSafeMath__success(this, this, 0, _allowed_HxERC20[this][from_s760][msgsender_MSG], value_s760);
[L1927]  COND FALSE  !(revert)
[L1930]              sum__allowed1[from_s760] := sum__allowed1[from_s760] - _allowed_HxERC20[this][from_s760][msgsender_MSG];
[L1931]              _allowed_HxERC20[this][from_s760][msgsender_MSG] := __var_5;
[L1932]              sum__allowed1[from_s760] := sum__allowed1[from_s760] + _allowed_HxERC20[this][from_s760][msgsender_MSG];
[L1933]  COND TRUE   DType[this] == BLY
[L1934]  CALL        call _transfer~address~address~uint256_HxERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s760, to_s760, value_s760);
[L1987]              __var_6 := null;
[L1988]  COND FALSE  !(!(to_s904 != null))
[L1992]  CALL        call __var_7 := sub~uint256~uint256_HxSafeMath__success(this, this, 0, _balances_HxERC20[this][from_s904], value_s904);
[L1679]  COND FALSE  !(!(b_s82 <= a_s82))
[L1683]              c_s82 := (a_s82 - b_s82) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1684]              __ret_0_ := c_s82;
[L1992]  RET         call __var_7 := sub~uint256~uint256_HxSafeMath__success(this, this, 0, _balances_HxERC20[this][from_s904], value_s904);
[L1993]  COND FALSE  !(revert)
[L1996]              sum__balances0[this] := sum__balances0[this] - _balances_HxERC20[this][from_s904];
[L1997]              _balances_HxERC20[this][from_s904] := __var_7;
[L1998]              sum__balances0[this] := sum__balances0[this] + _balances_HxERC20[this][from_s904];
[L1999]  CALL        call __var_8 := add~uint256~uint256_HxSafeMath__success(this, this, 0, _balances_HxERC20[this][to_s904], value_s904);
[L1703]              c_s106 := (a_s106 + b_s106) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1704]  COND FALSE  !(!(c_s106 >= a_s106))
[L1708]              __ret_0_ := c_s106;
[L1999]  RET         call __var_8 := add~uint256~uint256_HxSafeMath__success(this, this, 0, _balances_HxERC20[this][to_s904], value_s904);
[L2000]  COND FALSE  !(revert)
[L2003]              sum__balances0[this] := sum__balances0[this] - _balances_HxERC20[this][to_s904];
[L2004]              _balances_HxERC20[this][to_s904] := __var_8;
[L2005]              sum__balances0[this] := sum__balances0[this] + _balances_HxERC20[this][to_s904];
[L2006]              assert { :EventEmitted "Transfer_HxERC20" } true;
[L1934]  RET         call _transfer~address~address~uint256_HxERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s760, to_s760, value_s760);
[L1935]  COND FALSE  !(revert)
[L1951]              assert { :EventEmitted "Approval_HxERC20" } true;
[L1952]              __ret_0_ := true;
[L2098]  RET         call __var_11 := transferFrom~address~address~uint256_HxERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s1074, to_s1074, value_s1074);
[L2099]  COND FALSE  !(revert)
[L2105]              __ret_0_ := __var_11;
[L2392]  RET         call __var_24 := transferFrom~address~address~uint256_ERC20Pausable__success(this, msgsender_MSG, msgvalue_MSG, from_s1322, to_s1322, value_s1322);
[L2393]  COND FALSE  !(revert)
[L2399]              __ret_0_ := __var_24;
[L997]   RET         call __ret_0_ := transferFrom~address~address~uint256_BLY__success(this, msgsender_MSG, msgvalue_MSG, from_s1322, to_s1322, value_s1322);
[L998]               assume !revert && gas >= 0;
[L4359]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_BLY(this, msgsender_MSG, msgvalue_MSG, from_s1322, to_s1322, value_s1322);
[L4392]  RET         call CorralChoice_BLY(this);

Loop:
[L4392]        assume true;

[2020-11-24 15:42:15,310 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 15:42:15,310 INFO  L82        PathProgramCache]: Analyzing trace with hash -1712137050, now seen corresponding path program 1 times
[2020-11-24 15:42:15,311 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 15:42:15,323 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 15:42:15,361 INFO  L134       CoverageAnalysis]: Checked inductivity of 5 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 5 trivial. 0 not checked.
[2020-11-24 15:42:15,361 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 15:42:15,361 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-24 15:42:15,362 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 15:42:15,362 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-24 15:42:15,362 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-24 15:42:15,362 INFO  L87              Difference]: Start difference. First operand 337 states and 366 transitions. cyclomatic complexity: 31 Second operand 4 states.
[2020-11-24 15:42:15,374 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 15:42:15,374 INFO  L93              Difference]: Finished difference Result 340 states and 368 transitions.
[2020-11-24 15:42:15,374 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-24 15:42:15,375 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 340 states and 368 transitions.
[2020-11-24 15:42:15,376 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 15:42:15,378 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 340 states to 332 states and 359 transitions.
[2020-11-24 15:42:15,378 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 139
[2020-11-24 15:42:15,378 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 139
[2020-11-24 15:42:15,378 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 332 states and 359 transitions.
[2020-11-24 15:42:15,379 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 15:42:15,379 INFO  L728         BuchiCegarLoop]: Abstraction has 332 states and 359 transitions.
[2020-11-24 15:42:15,379 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 332 states and 359 transitions.
[2020-11-24 15:42:15,382 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 332 to 332.
[2020-11-24 15:42:15,382 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 332 states.
[2020-11-24 15:42:15,383 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 332 states to 332 states and 359 transitions.
[2020-11-24 15:42:15,383 INFO  L751         BuchiCegarLoop]: Abstraction has 332 states and 359 transitions.
[2020-11-24 15:42:15,383 INFO  L631         BuchiCegarLoop]: Abstraction has 332 states and 359 transitions.
[2020-11-24 15:42:15,383 INFO  L445         BuchiCegarLoop]: ======== Iteration 6============
[2020-11-24 15:42:15,384 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 332 states and 359 transitions.
[2020-11-24 15:42:15,385 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 15:42:15,385 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 15:42:15,385 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 15:42:15,387 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 15:42:15,387 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L2]                 fail_transferFrom_BLY0 := false;
[L2]                 call_transferFrom_BLY0 := false;
[L2]     CALL        call main();
[L4387]              assume null == 0;
[L4388]  CALL        call this := FreshRefGenerator__success();
[L1636]              havoc newRef;
[L1637]              assume Alloc[newRef] == false;
[L1638]              Alloc[newRef] := true;
[L1639]              assume newRef != null;
[L4388]  RET         call this := FreshRefGenerator__success();
[L4389]              assume now >= 0;
[L4390]              assume DType[this] == BLY;
[L4391]              assume !revert && gas >= 0;
[L4392]  CALL        call CorralChoice_BLY(this);
[L4269]              havoc msgsender_MSG;
[L4270]              havoc msgvalue_MSG;
[L4271]              havoc choice;
[L4272]              havoc __ret_0_owner;
[L4273]              havoc __ret_0_newOwner;
[L4274]              havoc account_s293;
[L4275]              havoc __ret_0_isOwner;
[L4276]              havoc _newOwner_s313;
[L4277]              havoc __ret_0_acceptOwnership;
[L4278]              havoc account_s390;
[L4279]              havoc __ret_0_isPauser;
[L4280]              havoc account_s402;
[L4281]              havoc account_s414;
[L4282]              havoc __ret_0_paused;
[L4283]              havoc to_s1288;
[L4284]              havoc value_s1288;
[L4285]              havoc __ret_0_transfer;
[L4286]              havoc spender_s711;
[L4287]              havoc value_s711;
[L4288]              havoc __ret_0_approve;
[L4289]              havoc from_s1322;
[L4290]              havoc to_s1322;
[L4291]              havoc value_s1322;
[L4292]              havoc __ret_0_transferFrom;
[L4293]              havoc __ret_0_totalSupply;
[L4294]              havoc owner_s1254;
[L4295]              havoc __ret_0_balanceOf;
[L4296]              havoc owner_s656;
[L4297]              havoc spender_s656;
[L4298]              havoc __ret_0_allowance;
[L4299]              havoc spender_s809;
[L4300]              havoc addedValue_s809;
[L4301]              havoc __ret_0_increaseAllowance;
[L4302]              havoc spender_s858;
[L4303]              havoc subtractedValue_s858;
[L4304]              havoc __ret_0_decreaseAllowance;
[L4305]              havoc name_s1105;
[L4306]              havoc symbol_s1105;
[L4307]              havoc decimals_s1105;
[L4308]              havoc __ret_0_name;
[L4309]              havoc __ret_0_symbol;
[L4310]              havoc __ret_0_decimals;
[L4311]              havoc __ret_0_implementation;
[L4312]              havoc arg1675_s0;
[L4313]              havoc arg1676_s0;
[L4314]              havoc __ret_0_timelockList;
[L4315]              havoc arg1677_s0;
[L4316]              havoc __ret_0_frozenAccount;
[L4317]              havoc holder_s1351;
[L4318]              havoc __ret_0_freezeAccount;
[L4319]              havoc holder_s1379;
[L4320]              havoc __ret_0_unfreezeAccount;
[L4321]              havoc holder_s1410;
[L4322]              havoc value_s1410;
[L4323]              havoc releaseTime_s1410;
[L4324]              havoc __ret_0_lock;
[L4325]              havoc holder_s1439;
[L4326]              havoc value_s1439;
[L4327]              havoc releaseTime_s1439;
[L4328]              havoc __ret_0_transferWithLock;
[L4329]              havoc holder_s1468;
[L4330]              havoc idx_s1468;
[L4331]              havoc __ret_0_unlock;
[L4332]              havoc _newImplementation_s1486;
[L4333]              havoc tmpNow;
[L4334]              havoc gas;
[L4335]              assume gas > 4000000 && gas <= 8000000;
[L4336]              tmpNow := now;
[L4337]              havoc now;
[L4338]              assume now > tmpNow;
[L4339]              assume msgsender_MSG != null;
[L4340]  COND FALSE  !(choice == 6)
[L4347]  COND FALSE  !(choice == 5)
[L4354]  COND TRUE   choice == 4
[L4355]              gas := gas - 21000;
[L4356]  COND TRUE   gas >= 0
[L4357]              assume value_s1322 >= 0 && value_s1322 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4358]              assume msgvalue_MSG == 0;
[L4359]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_BLY(this, msgsender_MSG, msgvalue_MSG, from_s1322, to_s1322, value_s1322);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((((from_s1322 != to_s1322 && ((value_s1322 > _balances_HxERC20[this][from_s1322] || value_s1322 > _allowed_HxERC20[this][from_s1322][msgsender_MSG]) || _balances_HxERC20[this][to_s1322] + value_s1322 >= 115792089237316195423570985008687907853269984665640564039457584007913129639936)) && value_s1322 >= 0) && value_s1322 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_HxERC20[this][to_s1322] >= 0) && _balances_HxERC20[this][to_s1322] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_HxERC20[this][from_s1322] >= 0) && _balances_HxERC20[this][from_s1322] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowed_HxERC20[this][from_s1322][msgsender_MSG] >= 0) && _allowed_HxERC20[this][from_s1322][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transferFrom_BLY0 := true;
[L2]                 call_transferFrom_BLY0 := false;
[L2]                 revert := revert_hold;
[L959]               havoc __exception;
[L960]               revert := false;
[L961]   COND FALSE  !(__exception)
[L997]   CALL        call __ret_0_ := transferFrom~address~address~uint256_BLY__success(this, msgsender_MSG, msgvalue_MSG, from_s1322, to_s1322, value_s1322);
[L2370]  CALL        call notFrozen_pre__success(this, msgsender_MSG, msgvalue_MSG, from_s1322);
[L3578]  COND FALSE  !(!!frozenAccount_BLY[this][_holder_s1185])
[L2370]  RET         call notFrozen_pre__success(this, msgsender_MSG, msgvalue_MSG, from_s1322);
[L2371]  COND FALSE  !(revert)
[L2374]  COND FALSE  !(alloc_timelockList_BLY_lvl0[timelockList_BLY[this]][from_s1322] == false)
[L2385]  COND FALSE  !(Length[M_Ref_Ref[timelockList_BLY[this]][from_s1322]] > 0)
[L2391]  COND TRUE   DType[this] == BLY
[L2392]  CALL        call __var_24 := transferFrom~address~address~uint256_ERC20Pausable__success(this, msgsender_MSG, msgvalue_MSG, from_s1322, to_s1322, value_s1322);
[L2088]  CALL        call whenNotPaused_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L3554]  COND FALSE  !(!!_paused_Pausable[this])
[L2088]  RET         call whenNotPaused_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L2089]  COND FALSE  !(revert)
[L2092]  COND TRUE   DType[this] == BLY
[L2093]  CALL        call __var_11 := transferFrom~address~address~uint256_HxERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s1074, to_s1074, value_s1074);
[L1926]  CALL        call __var_5 := sub~uint256~uint256_HxSafeMath__success(this, this, 0, _allowed_HxERC20[this][from_s760][msgsender_MSG], value_s760);
[L1679]  COND FALSE  !(!(b_s82 <= a_s82))
[L1683]              c_s82 := (a_s82 - b_s82) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1684]              __ret_0_ := c_s82;
[L1926]  RET         call __var_5 := sub~uint256~uint256_HxSafeMath__success(this, this, 0, _allowed_HxERC20[this][from_s760][msgsender_MSG], value_s760);
[L1927]  COND FALSE  !(revert)
[L1930]              sum__allowed1[from_s760] := sum__allowed1[from_s760] - _allowed_HxERC20[this][from_s760][msgsender_MSG];
[L1931]              _allowed_HxERC20[this][from_s760][msgsender_MSG] := __var_5;
[L1932]              sum__allowed1[from_s760] := sum__allowed1[from_s760] + _allowed_HxERC20[this][from_s760][msgsender_MSG];
[L1933]  COND FALSE  !(DType[this] == BLY)
[L1938]  COND TRUE   DType[this] == ERC20Pausable
[L1939]  CALL        call _transfer~address~address~uint256_HxERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s760, to_s760, value_s760);
[L1987]              __var_6 := null;
[L1988]  COND FALSE  !(!(to_s904 != null))
[L1992]  CALL        call __var_7 := sub~uint256~uint256_HxSafeMath__success(this, this, 0, _balances_HxERC20[this][from_s904], value_s904);
[L1679]  COND FALSE  !(!(b_s82 <= a_s82))
[L1683]              c_s82 := (a_s82 - b_s82) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1684]              __ret_0_ := c_s82;
[L1992]  RET         call __var_7 := sub~uint256~uint256_HxSafeMath__success(this, this, 0, _balances_HxERC20[this][from_s904], value_s904);
[L1993]  COND FALSE  !(revert)
[L1996]              sum__balances0[this] := sum__balances0[this] - _balances_HxERC20[this][from_s904];
[L1997]              _balances_HxERC20[this][from_s904] := __var_7;
[L1998]              sum__balances0[this] := sum__balances0[this] + _balances_HxERC20[this][from_s904];
[L1999]  CALL        call __var_8 := add~uint256~uint256_HxSafeMath__success(this, this, 0, _balances_HxERC20[this][to_s904], value_s904);
[L1703]              c_s106 := (a_s106 + b_s106) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1704]  COND FALSE  !(!(c_s106 >= a_s106))
[L1708]              __ret_0_ := c_s106;
[L1999]  RET         call __var_8 := add~uint256~uint256_HxSafeMath__success(this, this, 0, _balances_HxERC20[this][to_s904], value_s904);
[L2000]  COND FALSE  !(revert)
[L2003]              sum__balances0[this] := sum__balances0[this] - _balances_HxERC20[this][to_s904];
[L2004]              _balances_HxERC20[this][to_s904] := __var_8;
[L2005]              sum__balances0[this] := sum__balances0[this] + _balances_HxERC20[this][to_s904];
[L2006]              assert { :EventEmitted "Transfer_HxERC20" } true;
[L1939]  RET         call _transfer~address~address~uint256_HxERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s760, to_s760, value_s760);
[L1940]  COND FALSE  !(revert)
[L1951]              assert { :EventEmitted "Approval_HxERC20" } true;
[L1952]              __ret_0_ := true;
[L2093]  RET         call __var_11 := transferFrom~address~address~uint256_HxERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s1074, to_s1074, value_s1074);
[L2094]  COND FALSE  !(revert)
[L2105]              __ret_0_ := __var_11;
[L2392]  RET         call __var_24 := transferFrom~address~address~uint256_ERC20Pausable__success(this, msgsender_MSG, msgvalue_MSG, from_s1322, to_s1322, value_s1322);
[L2393]  COND FALSE  !(revert)
[L2399]              __ret_0_ := __var_24;
[L997]   RET         call __ret_0_ := transferFrom~address~address~uint256_BLY__success(this, msgsender_MSG, msgvalue_MSG, from_s1322, to_s1322, value_s1322);
[L998]               assume !revert && gas >= 0;
[L4359]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_BLY(this, msgsender_MSG, msgvalue_MSG, from_s1322, to_s1322, value_s1322);
[L4392]  RET         call CorralChoice_BLY(this);

Loop:
[L4392]        assume true;

[2020-11-24 15:42:15,389 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 15:42:15,390 INFO  L82        PathProgramCache]: Analyzing trace with hash 1603420476, now seen corresponding path program 1 times
[2020-11-24 15:42:15,391 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 15:42:15,402 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 15:42:15,440 INFO  L134       CoverageAnalysis]: Checked inductivity of 5 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 5 trivial. 0 not checked.
[2020-11-24 15:42:15,441 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 15:42:15,441 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [5] imperfect sequences [] total 5
[2020-11-24 15:42:15,441 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 15:42:15,441 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 5 interpolants.
[2020-11-24 15:42:15,441 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=7, Invalid=13, Unknown=0, NotChecked=0, Total=20
[2020-11-24 15:42:15,442 INFO  L87              Difference]: Start difference. First operand 332 states and 359 transitions. cyclomatic complexity: 29 Second operand 5 states.
[2020-11-24 15:42:15,455 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 15:42:15,455 INFO  L93              Difference]: Finished difference Result 341 states and 367 transitions.
[2020-11-24 15:42:15,455 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 5 states. 
[2020-11-24 15:42:15,455 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 341 states and 367 transitions.
[2020-11-24 15:42:15,457 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 15:42:15,459 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 341 states to 327 states and 352 transitions.
[2020-11-24 15:42:15,459 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 137
[2020-11-24 15:42:15,459 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 137
[2020-11-24 15:42:15,459 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 327 states and 352 transitions.
[2020-11-24 15:42:15,459 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 15:42:15,459 INFO  L728         BuchiCegarLoop]: Abstraction has 327 states and 352 transitions.
[2020-11-24 15:42:15,460 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 327 states and 352 transitions.
[2020-11-24 15:42:15,463 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 327 to 327.
[2020-11-24 15:42:15,463 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 327 states.
[2020-11-24 15:42:15,464 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 327 states to 327 states and 352 transitions.
[2020-11-24 15:42:15,464 INFO  L751         BuchiCegarLoop]: Abstraction has 327 states and 352 transitions.
[2020-11-24 15:42:15,464 INFO  L631         BuchiCegarLoop]: Abstraction has 327 states and 352 transitions.
[2020-11-24 15:42:15,464 INFO  L445         BuchiCegarLoop]: ======== Iteration 7============
[2020-11-24 15:42:15,464 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 327 states and 352 transitions.
[2020-11-24 15:42:15,465 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 15:42:15,465 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 15:42:15,465 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 15:42:15,466 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 15:42:15,466 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L2]                 fail_transferFrom_BLY0 := false;
[L2]                 call_transferFrom_BLY0 := false;
[L2]     CALL        call main();
[L4387]              assume null == 0;
[L4388]  CALL        call this := FreshRefGenerator__success();
[L1636]              havoc newRef;
[L1637]              assume Alloc[newRef] == false;
[L1638]              Alloc[newRef] := true;
[L1639]              assume newRef != null;
[L4388]  RET         call this := FreshRefGenerator__success();
[L4389]              assume now >= 0;
[L4390]              assume DType[this] == BLY;
[L4391]              assume !revert && gas >= 0;
[L4392]  CALL        call CorralChoice_BLY(this);
[L4269]              havoc msgsender_MSG;
[L4270]              havoc msgvalue_MSG;
[L4271]              havoc choice;
[L4272]              havoc __ret_0_owner;
[L4273]              havoc __ret_0_newOwner;
[L4274]              havoc account_s293;
[L4275]              havoc __ret_0_isOwner;
[L4276]              havoc _newOwner_s313;
[L4277]              havoc __ret_0_acceptOwnership;
[L4278]              havoc account_s390;
[L4279]              havoc __ret_0_isPauser;
[L4280]              havoc account_s402;
[L4281]              havoc account_s414;
[L4282]              havoc __ret_0_paused;
[L4283]              havoc to_s1288;
[L4284]              havoc value_s1288;
[L4285]              havoc __ret_0_transfer;
[L4286]              havoc spender_s711;
[L4287]              havoc value_s711;
[L4288]              havoc __ret_0_approve;
[L4289]              havoc from_s1322;
[L4290]              havoc to_s1322;
[L4291]              havoc value_s1322;
[L4292]              havoc __ret_0_transferFrom;
[L4293]              havoc __ret_0_totalSupply;
[L4294]              havoc owner_s1254;
[L4295]              havoc __ret_0_balanceOf;
[L4296]              havoc owner_s656;
[L4297]              havoc spender_s656;
[L4298]              havoc __ret_0_allowance;
[L4299]              havoc spender_s809;
[L4300]              havoc addedValue_s809;
[L4301]              havoc __ret_0_increaseAllowance;
[L4302]              havoc spender_s858;
[L4303]              havoc subtractedValue_s858;
[L4304]              havoc __ret_0_decreaseAllowance;
[L4305]              havoc name_s1105;
[L4306]              havoc symbol_s1105;
[L4307]              havoc decimals_s1105;
[L4308]              havoc __ret_0_name;
[L4309]              havoc __ret_0_symbol;
[L4310]              havoc __ret_0_decimals;
[L4311]              havoc __ret_0_implementation;
[L4312]              havoc arg1675_s0;
[L4313]              havoc arg1676_s0;
[L4314]              havoc __ret_0_timelockList;
[L4315]              havoc arg1677_s0;
[L4316]              havoc __ret_0_frozenAccount;
[L4317]              havoc holder_s1351;
[L4318]              havoc __ret_0_freezeAccount;
[L4319]              havoc holder_s1379;
[L4320]              havoc __ret_0_unfreezeAccount;
[L4321]              havoc holder_s1410;
[L4322]              havoc value_s1410;
[L4323]              havoc releaseTime_s1410;
[L4324]              havoc __ret_0_lock;
[L4325]              havoc holder_s1439;
[L4326]              havoc value_s1439;
[L4327]              havoc releaseTime_s1439;
[L4328]              havoc __ret_0_transferWithLock;
[L4329]              havoc holder_s1468;
[L4330]              havoc idx_s1468;
[L4331]              havoc __ret_0_unlock;
[L4332]              havoc _newImplementation_s1486;
[L4333]              havoc tmpNow;
[L4334]              havoc gas;
[L4335]              assume gas > 4000000 && gas <= 8000000;
[L4336]              tmpNow := now;
[L4337]              havoc now;
[L4338]              assume now > tmpNow;
[L4339]              assume msgsender_MSG != null;
[L4340]  COND FALSE  !(choice == 6)
[L4347]  COND FALSE  !(choice == 5)
[L4354]  COND TRUE   choice == 4
[L4355]              gas := gas - 21000;
[L4356]  COND TRUE   gas >= 0
[L4357]              assume value_s1322 >= 0 && value_s1322 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4358]              assume msgvalue_MSG == 0;
[L4359]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_BLY(this, msgsender_MSG, msgvalue_MSG, from_s1322, to_s1322, value_s1322);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((((from_s1322 != to_s1322 && ((value_s1322 > _balances_HxERC20[this][from_s1322] || value_s1322 > _allowed_HxERC20[this][from_s1322][msgsender_MSG]) || _balances_HxERC20[this][to_s1322] + value_s1322 >= 115792089237316195423570985008687907853269984665640564039457584007913129639936)) && value_s1322 >= 0) && value_s1322 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_HxERC20[this][to_s1322] >= 0) && _balances_HxERC20[this][to_s1322] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_HxERC20[this][from_s1322] >= 0) && _balances_HxERC20[this][from_s1322] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowed_HxERC20[this][from_s1322][msgsender_MSG] >= 0) && _allowed_HxERC20[this][from_s1322][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transferFrom_BLY0 := true;
[L2]                 call_transferFrom_BLY0 := false;
[L2]                 revert := revert_hold;
[L959]               havoc __exception;
[L960]               revert := false;
[L961]   COND FALSE  !(__exception)
[L997]   CALL        call __ret_0_ := transferFrom~address~address~uint256_BLY__success(this, msgsender_MSG, msgvalue_MSG, from_s1322, to_s1322, value_s1322);
[L2370]  CALL        call notFrozen_pre__success(this, msgsender_MSG, msgvalue_MSG, from_s1322);
[L3578]  COND FALSE  !(!!frozenAccount_BLY[this][_holder_s1185])
[L2370]  RET         call notFrozen_pre__success(this, msgsender_MSG, msgvalue_MSG, from_s1322);
[L2371]  COND FALSE  !(revert)
[L2374]  COND FALSE  !(alloc_timelockList_BLY_lvl0[timelockList_BLY[this]][from_s1322] == false)
[L2385]  COND FALSE  !(Length[M_Ref_Ref[timelockList_BLY[this]][from_s1322]] > 0)
[L2391]  COND TRUE   DType[this] == BLY
[L2392]  CALL        call __var_24 := transferFrom~address~address~uint256_ERC20Pausable__success(this, msgsender_MSG, msgvalue_MSG, from_s1322, to_s1322, value_s1322);
[L2088]  CALL        call whenNotPaused_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L3554]  COND FALSE  !(!!_paused_Pausable[this])
[L2088]  RET         call whenNotPaused_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L2089]  COND FALSE  !(revert)
[L2092]  COND TRUE   DType[this] == BLY
[L2093]  CALL        call __var_11 := transferFrom~address~address~uint256_HxERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s1074, to_s1074, value_s1074);
[L1926]  CALL        call __var_5 := sub~uint256~uint256_HxSafeMath__success(this, this, 0, _allowed_HxERC20[this][from_s760][msgsender_MSG], value_s760);
[L1679]  COND FALSE  !(!(b_s82 <= a_s82))
[L1683]              c_s82 := (a_s82 - b_s82) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1684]              __ret_0_ := c_s82;
[L1926]  RET         call __var_5 := sub~uint256~uint256_HxSafeMath__success(this, this, 0, _allowed_HxERC20[this][from_s760][msgsender_MSG], value_s760);
[L1927]  COND FALSE  !(revert)
[L1930]              sum__allowed1[from_s760] := sum__allowed1[from_s760] - _allowed_HxERC20[this][from_s760][msgsender_MSG];
[L1931]              _allowed_HxERC20[this][from_s760][msgsender_MSG] := __var_5;
[L1932]              sum__allowed1[from_s760] := sum__allowed1[from_s760] + _allowed_HxERC20[this][from_s760][msgsender_MSG];
[L1933]  COND TRUE   DType[this] == BLY
[L1934]  CALL        call _transfer~address~address~uint256_HxERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s760, to_s760, value_s760);
[L1987]              __var_6 := null;
[L1988]  COND FALSE  !(!(to_s904 != null))
[L1992]  CALL        call __var_7 := sub~uint256~uint256_HxSafeMath__success(this, this, 0, _balances_HxERC20[this][from_s904], value_s904);
[L1679]  COND FALSE  !(!(b_s82 <= a_s82))
[L1683]              c_s82 := (a_s82 - b_s82) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1684]              __ret_0_ := c_s82;
[L1992]  RET         call __var_7 := sub~uint256~uint256_HxSafeMath__success(this, this, 0, _balances_HxERC20[this][from_s904], value_s904);
[L1993]  COND FALSE  !(revert)
[L1996]              sum__balances0[this] := sum__balances0[this] - _balances_HxERC20[this][from_s904];
[L1997]              _balances_HxERC20[this][from_s904] := __var_7;
[L1998]              sum__balances0[this] := sum__balances0[this] + _balances_HxERC20[this][from_s904];
[L1999]  CALL        call __var_8 := add~uint256~uint256_HxSafeMath__success(this, this, 0, _balances_HxERC20[this][to_s904], value_s904);
[L1703]              c_s106 := (a_s106 + b_s106) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1704]  COND FALSE  !(!(c_s106 >= a_s106))
[L1708]              __ret_0_ := c_s106;
[L1999]  RET         call __var_8 := add~uint256~uint256_HxSafeMath__success(this, this, 0, _balances_HxERC20[this][to_s904], value_s904);
[L2000]  COND FALSE  !(revert)
[L2003]              sum__balances0[this] := sum__balances0[this] - _balances_HxERC20[this][to_s904];
[L2004]              _balances_HxERC20[this][to_s904] := __var_8;
[L2005]              sum__balances0[this] := sum__balances0[this] + _balances_HxERC20[this][to_s904];
[L2006]              assert { :EventEmitted "Transfer_HxERC20" } true;
[L1934]  RET         call _transfer~address~address~uint256_HxERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s760, to_s760, value_s760);
[L1935]  COND FALSE  !(revert)
[L1951]              assert { :EventEmitted "Approval_HxERC20" } true;
[L1952]              __ret_0_ := true;
[L2093]  RET         call __var_11 := transferFrom~address~address~uint256_HxERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s1074, to_s1074, value_s1074);
[L2094]  COND FALSE  !(revert)
[L2105]              __ret_0_ := __var_11;
[L2392]  RET         call __var_24 := transferFrom~address~address~uint256_ERC20Pausable__success(this, msgsender_MSG, msgvalue_MSG, from_s1322, to_s1322, value_s1322);
[L2393]  COND FALSE  !(revert)
[L2399]              __ret_0_ := __var_24;
[L997]   RET         call __ret_0_ := transferFrom~address~address~uint256_BLY__success(this, msgsender_MSG, msgvalue_MSG, from_s1322, to_s1322, value_s1322);
[L998]               assume !revert && gas >= 0;
[L4359]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_BLY(this, msgsender_MSG, msgvalue_MSG, from_s1322, to_s1322, value_s1322);
[L4392]  RET         call CorralChoice_BLY(this);

Loop:
[L4392]        assume true;

[2020-11-24 15:42:15,468 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 15:42:15,469 INFO  L82        PathProgramCache]: Analyzing trace with hash -1638088985, now seen corresponding path program 1 times
[2020-11-24 15:42:15,470 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 15:42:15,498 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 15:42:15,754 INFO  L134       CoverageAnalysis]: Checked inductivity of 5 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 5 trivial. 0 not checked.
[2020-11-24 15:42:15,754 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 15:42:15,754 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [19] imperfect sequences [] total 19
[2020-11-24 15:42:15,755 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 15:42:15,755 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 19 interpolants.
[2020-11-24 15:42:15,755 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=44, Invalid=298, Unknown=0, NotChecked=0, Total=342
[2020-11-24 15:42:15,755 INFO  L87              Difference]: Start difference. First operand 327 states and 352 transitions. cyclomatic complexity: 27 Second operand 19 states.
[2020-11-24 15:42:16,452 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 15:42:16,452 INFO  L93              Difference]: Finished difference Result 357 states and 388 transitions.
[2020-11-24 15:42:16,452 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 19 states. 
[2020-11-24 15:42:16,452 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 357 states and 388 transitions.
[2020-11-24 15:42:16,454 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 15:42:16,456 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 357 states to 341 states and 369 transitions.
[2020-11-24 15:42:16,456 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 137
[2020-11-24 15:42:16,456 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 137
[2020-11-24 15:42:16,456 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 341 states and 369 transitions.
[2020-11-24 15:42:16,457 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 15:42:16,457 INFO  L728         BuchiCegarLoop]: Abstraction has 341 states and 369 transitions.
[2020-11-24 15:42:16,457 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 341 states and 369 transitions.
[2020-11-24 15:42:16,460 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 341 to 340.
[2020-11-24 15:42:16,461 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 340 states.
[2020-11-24 15:42:16,461 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 340 states to 340 states and 367 transitions.
[2020-11-24 15:42:16,461 INFO  L751         BuchiCegarLoop]: Abstraction has 340 states and 367 transitions.
[2020-11-24 15:42:16,461 INFO  L631         BuchiCegarLoop]: Abstraction has 340 states and 367 transitions.
[2020-11-24 15:42:16,461 INFO  L445         BuchiCegarLoop]: ======== Iteration 8============
[2020-11-24 15:42:16,461 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 340 states and 367 transitions.
[2020-11-24 15:42:16,462 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 15:42:16,462 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 15:42:16,462 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 15:42:16,463 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [3, 3, 3, 3, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 15:42:16,463 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L2]                 fail_transferFrom_BLY0 := false;
[L2]                 call_transferFrom_BLY0 := false;
[L2]     CALL        call main();
[L4387]              assume null == 0;
[L4388]  CALL        call this := FreshRefGenerator__success();
[L1636]              havoc newRef;
[L1637]              assume Alloc[newRef] == false;
[L1638]              Alloc[newRef] := true;
[L1639]              assume newRef != null;
[L4388]  RET         call this := FreshRefGenerator__success();
[L4389]              assume now >= 0;
[L4390]              assume DType[this] == BLY;
[L4391]              assume !revert && gas >= 0;
[L4392]  CALL        call CorralChoice_BLY(this);
[L4269]              havoc msgsender_MSG;
[L4270]              havoc msgvalue_MSG;
[L4271]              havoc choice;
[L4272]              havoc __ret_0_owner;
[L4273]              havoc __ret_0_newOwner;
[L4274]              havoc account_s293;
[L4275]              havoc __ret_0_isOwner;
[L4276]              havoc _newOwner_s313;
[L4277]              havoc __ret_0_acceptOwnership;
[L4278]              havoc account_s390;
[L4279]              havoc __ret_0_isPauser;
[L4280]              havoc account_s402;
[L4281]              havoc account_s414;
[L4282]              havoc __ret_0_paused;
[L4283]              havoc to_s1288;
[L4284]              havoc value_s1288;
[L4285]              havoc __ret_0_transfer;
[L4286]              havoc spender_s711;
[L4287]              havoc value_s711;
[L4288]              havoc __ret_0_approve;
[L4289]              havoc from_s1322;
[L4290]              havoc to_s1322;
[L4291]              havoc value_s1322;
[L4292]              havoc __ret_0_transferFrom;
[L4293]              havoc __ret_0_totalSupply;
[L4294]              havoc owner_s1254;
[L4295]              havoc __ret_0_balanceOf;
[L4296]              havoc owner_s656;
[L4297]              havoc spender_s656;
[L4298]              havoc __ret_0_allowance;
[L4299]              havoc spender_s809;
[L4300]              havoc addedValue_s809;
[L4301]              havoc __ret_0_increaseAllowance;
[L4302]              havoc spender_s858;
[L4303]              havoc subtractedValue_s858;
[L4304]              havoc __ret_0_decreaseAllowance;
[L4305]              havoc name_s1105;
[L4306]              havoc symbol_s1105;
[L4307]              havoc decimals_s1105;
[L4308]              havoc __ret_0_name;
[L4309]              havoc __ret_0_symbol;
[L4310]              havoc __ret_0_decimals;
[L4311]              havoc __ret_0_implementation;
[L4312]              havoc arg1675_s0;
[L4313]              havoc arg1676_s0;
[L4314]              havoc __ret_0_timelockList;
[L4315]              havoc arg1677_s0;
[L4316]              havoc __ret_0_frozenAccount;
[L4317]              havoc holder_s1351;
[L4318]              havoc __ret_0_freezeAccount;
[L4319]              havoc holder_s1379;
[L4320]              havoc __ret_0_unfreezeAccount;
[L4321]              havoc holder_s1410;
[L4322]              havoc value_s1410;
[L4323]              havoc releaseTime_s1410;
[L4324]              havoc __ret_0_lock;
[L4325]              havoc holder_s1439;
[L4326]              havoc value_s1439;
[L4327]              havoc releaseTime_s1439;
[L4328]              havoc __ret_0_transferWithLock;
[L4329]              havoc holder_s1468;
[L4330]              havoc idx_s1468;
[L4331]              havoc __ret_0_unlock;
[L4332]              havoc _newImplementation_s1486;
[L4333]              havoc tmpNow;
[L4334]              havoc gas;
[L4335]              assume gas > 4000000 && gas <= 8000000;
[L4336]              tmpNow := now;
[L4337]              havoc now;
[L4338]              assume now > tmpNow;
[L4339]              assume msgsender_MSG != null;
[L4340]  COND FALSE  !(choice == 6)
[L4347]  COND FALSE  !(choice == 5)
[L4354]  COND TRUE   choice == 4
[L4355]              gas := gas - 21000;
[L4356]  COND TRUE   gas >= 0
[L4357]              assume value_s1322 >= 0 && value_s1322 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4358]              assume msgvalue_MSG == 0;
[L4359]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_BLY(this, msgsender_MSG, msgvalue_MSG, from_s1322, to_s1322, value_s1322);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((((from_s1322 != to_s1322 && ((value_s1322 > _balances_HxERC20[this][from_s1322] || value_s1322 > _allowed_HxERC20[this][from_s1322][msgsender_MSG]) || _balances_HxERC20[this][to_s1322] + value_s1322 >= 115792089237316195423570985008687907853269984665640564039457584007913129639936)) && value_s1322 >= 0) && value_s1322 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_HxERC20[this][to_s1322] >= 0) && _balances_HxERC20[this][to_s1322] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_HxERC20[this][from_s1322] >= 0) && _balances_HxERC20[this][from_s1322] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowed_HxERC20[this][from_s1322][msgsender_MSG] >= 0) && _allowed_HxERC20[this][from_s1322][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transferFrom_BLY0 := true;
[L2]                 call_transferFrom_BLY0 := false;
[L2]                 revert := revert_hold;
[L959]               havoc __exception;
[L960]               revert := false;
[L961]   COND FALSE  !(__exception)
[L997]   CALL        call __ret_0_ := transferFrom~address~address~uint256_BLY__success(this, msgsender_MSG, msgvalue_MSG, from_s1322, to_s1322, value_s1322);
[L2370]  CALL        call notFrozen_pre__success(this, msgsender_MSG, msgvalue_MSG, from_s1322);
[L3578]  COND FALSE  !(!!frozenAccount_BLY[this][_holder_s1185])
[L2370]  RET         call notFrozen_pre__success(this, msgsender_MSG, msgvalue_MSG, from_s1322);
[L2371]  COND FALSE  !(revert)
[L2374]  COND FALSE  !(alloc_timelockList_BLY_lvl0[timelockList_BLY[this]][from_s1322] == false)
[L2385]  COND TRUE   Length[M_Ref_Ref[timelockList_BLY[this]][from_s1322]] > 0
[L2386]  CALL        call __var_23 := _autoUnlock~address_BLY__success(this, msgsender_MSG, msgvalue_MSG, from_s1322);
[L2653]  COND FALSE  !(alloc_timelockList_BLY_lvl0[timelockList_BLY[this]][holder_s1645] == false)
[L2664]              idx_s1645 := 0;
[L2665]  COND TRUE   idx_s1645 < Length[M_Ref_Ref[timelockList_BLY[this]][holder_s1645]]
[L2667]  COND FALSE  !(alloc_timelockList_BLY_lvl0[timelockList_BLY[this]][holder_s1645] == false)
[L2678]  COND TRUE   _releaseTime_BLY.LockInfo[M_int_Ref[M_Ref_Ref[timelockList_BLY[this]][holder_s1645]][idx_s1645]] <= now
[L2679]  CALL        call __var_36 := _unlock~address~uint256_BLY__success(this, msgsender_MSG, msgvalue_MSG, holder_s1645, idx_s1645);
[L2512]  COND FALSE  !(alloc_timelockList_BLY_lvl0[timelockList_BLY[this]][holder_s1600] == false)
[L2523]              lockinfo_s1600 := M_int_Ref[M_Ref_Ref[timelockList_BLY[this]][holder_s1600]][idx_s1600];
[L2524]              releaseAmount_s1600 := _amount_BLY.LockInfo[lockinfo_s1600];
[L2525]  COND FALSE  !(alloc_timelockList_BLY_lvl0[timelockList_BLY[this]][holder_s1600] == false)
[L2536]  COND FALSE  !(alloc_timelockList_BLY_lvl0[timelockList_BLY[this]][holder_s1600] == false)
[L2547]  COND FALSE  !(alloc_timelockList_BLY_lvl0[timelockList_BLY[this]][holder_s1600] == false)
[L2558]  CALL        call __var_29 := sub~uint256~uint256_HxSafeMath__success(this, this, 0, Length[M_Ref_Ref[timelockList_BLY[this]][holder_s1600]], 1);
[L1679]  COND FALSE  !(!(b_s82 <= a_s82))
[L1683]              c_s82 := (a_s82 - b_s82) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1684]              __ret_0_ := c_s82;
[L2558]  RET         call __var_29 := sub~uint256~uint256_HxSafeMath__success(this, this, 0, Length[M_Ref_Ref[timelockList_BLY[this]][holder_s1600]], 1);
[L2559]  COND FALSE  !(revert)
[L2562]  COND FALSE  !(alloc_timelockList_BLY_lvl0[timelockList_BLY[this]][holder_s1600] == false)
[L2573]              M_int_Ref[M_Ref_Ref[timelockList_BLY[this]][holder_s1600]][idx_s1600] := M_int_Ref[M_Ref_Ref[timelockList_BLY[this]][holder_s1600]][__var_29];
[L2574]  COND FALSE  !(alloc_timelockList_BLY_lvl0[timelockList_BLY[this]][holder_s1600] == false)
[L2585]              Length[M_Ref_Ref[timelockList_BLY[this]][holder_s1600]] := (Length[M_Ref_Ref[timelockList_BLY[this]][holder_s1600]] - 1) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2586]              assert { :EventEmitted "Unlock_BLY" } true;
[L2587]  CALL        call __var_33 := add~uint256~uint256_HxSafeMath__success(this, this, 0, _balances_HxERC20[this][holder_s1600], releaseAmount_s1600);
[L1703]              c_s106 := (a_s106 + b_s106) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1704]  COND FALSE  !(!(c_s106 >= a_s106))
[L1708]              __ret_0_ := c_s106;
[L2587]  RET         call __var_33 := add~uint256~uint256_HxSafeMath__success(this, this, 0, _balances_HxERC20[this][holder_s1600], releaseAmount_s1600);
[L2588]  COND FALSE  !(revert)
[L2591]              sum__balances0[this] := sum__balances0[this] - _balances_HxERC20[this][holder_s1600];
[L2592]              _balances_HxERC20[this][holder_s1600] := __var_33;
[L2593]              sum__balances0[this] := sum__balances0[this] + _balances_HxERC20[this][holder_s1600];
[L2594]              __ret_0_ := true;
[L2679]  RET         call __var_36 := _unlock~address~uint256_BLY__success(this, msgsender_MSG, msgvalue_MSG, holder_s1645, idx_s1645);
[L2680]  COND FALSE  !(revert)
[L2683]  COND FALSE  !(__var_36)
[L2687]              idx_s1645 := (idx_s1645 + 1) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2688]  COND TRUE   gas < 0
[L2386]  RET         call __var_23 := _autoUnlock~address_BLY__success(this, msgsender_MSG, msgvalue_MSG, from_s1322);
[L2387]  COND FALSE  !(revert)
[L2391]  COND TRUE   DType[this] == BLY
[L2392]  CALL        call __var_24 := transferFrom~address~address~uint256_ERC20Pausable__success(this, msgsender_MSG, msgvalue_MSG, from_s1322, to_s1322, value_s1322);
[L2088]  CALL        call whenNotPaused_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L3554]  COND FALSE  !(!!_paused_Pausable[this])
[L2088]  RET         call whenNotPaused_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L2089]  COND FALSE  !(revert)
[L2092]  COND TRUE   DType[this] == BLY
[L2093]  CALL        call __var_11 := transferFrom~address~address~uint256_HxERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s1074, to_s1074, value_s1074);
[L1926]  CALL        call __var_5 := sub~uint256~uint256_HxSafeMath__success(this, this, 0, _allowed_HxERC20[this][from_s760][msgsender_MSG], value_s760);
[L1679]  COND FALSE  !(!(b_s82 <= a_s82))
[L1683]              c_s82 := (a_s82 - b_s82) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1684]              __ret_0_ := c_s82;
[L1926]  RET         call __var_5 := sub~uint256~uint256_HxSafeMath__success(this, this, 0, _allowed_HxERC20[this][from_s760][msgsender_MSG], value_s760);
[L1927]  COND FALSE  !(revert)
[L1930]              sum__allowed1[from_s760] := sum__allowed1[from_s760] - _allowed_HxERC20[this][from_s760][msgsender_MSG];
[L1931]              _allowed_HxERC20[this][from_s760][msgsender_MSG] := __var_5;
[L1932]              sum__allowed1[from_s760] := sum__allowed1[from_s760] + _allowed_HxERC20[this][from_s760][msgsender_MSG];
[L1933]  COND TRUE   DType[this] == BLY
[L1934]  CALL        call _transfer~address~address~uint256_HxERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s760, to_s760, value_s760);
[L1987]              __var_6 := null;
[L1988]  COND FALSE  !(!(to_s904 != null))
[L1992]  CALL        call __var_7 := sub~uint256~uint256_HxSafeMath__success(this, this, 0, _balances_HxERC20[this][from_s904], value_s904);
[L1679]  COND FALSE  !(!(b_s82 <= a_s82))
[L1683]              c_s82 := (a_s82 - b_s82) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1684]              __ret_0_ := c_s82;
[L1992]  RET         call __var_7 := sub~uint256~uint256_HxSafeMath__success(this, this, 0, _balances_HxERC20[this][from_s904], value_s904);
[L1993]  COND FALSE  !(revert)
[L1996]              sum__balances0[this] := sum__balances0[this] - _balances_HxERC20[this][from_s904];
[L1997]              _balances_HxERC20[this][from_s904] := __var_7;
[L1998]              sum__balances0[this] := sum__balances0[this] + _balances_HxERC20[this][from_s904];
[L1999]  CALL        call __var_8 := add~uint256~uint256_HxSafeMath__success(this, this, 0, _balances_HxERC20[this][to_s904], value_s904);
[L1703]              c_s106 := (a_s106 + b_s106) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1704]  COND FALSE  !(!(c_s106 >= a_s106))
[L1708]              __ret_0_ := c_s106;
[L1999]  RET         call __var_8 := add~uint256~uint256_HxSafeMath__success(this, this, 0, _balances_HxERC20[this][to_s904], value_s904);
[L2000]  COND FALSE  !(revert)
[L2003]              sum__balances0[this] := sum__balances0[this] - _balances_HxERC20[this][to_s904];
[L2004]              _balances_HxERC20[this][to_s904] := __var_8;
[L2005]              sum__balances0[this] := sum__balances0[this] + _balances_HxERC20[this][to_s904];
[L2006]              assert { :EventEmitted "Transfer_HxERC20" } true;
[L1934]  RET         call _transfer~address~address~uint256_HxERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s760, to_s760, value_s760);
[L1935]  COND FALSE  !(revert)
[L1951]              assert { :EventEmitted "Approval_HxERC20" } true;
[L1952]              __ret_0_ := true;
[L2093]  RET         call __var_11 := transferFrom~address~address~uint256_HxERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s1074, to_s1074, value_s1074);
[L2094]  COND FALSE  !(revert)
[L2105]              __ret_0_ := __var_11;
[L2392]  RET         call __var_24 := transferFrom~address~address~uint256_ERC20Pausable__success(this, msgsender_MSG, msgvalue_MSG, from_s1322, to_s1322, value_s1322);
[L2393]  COND FALSE  !(revert)
[L2399]              __ret_0_ := __var_24;
[L997]   RET         call __ret_0_ := transferFrom~address~address~uint256_BLY__success(this, msgsender_MSG, msgvalue_MSG, from_s1322, to_s1322, value_s1322);
[L998]               assume !revert && gas >= 0;
[L4359]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_BLY(this, msgsender_MSG, msgvalue_MSG, from_s1322, to_s1322, value_s1322);
[L4392]  RET         call CorralChoice_BLY(this);

Loop:
[L4392]        assume true;

[2020-11-24 15:42:16,466 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 15:42:16,466 INFO  L82        PathProgramCache]: Analyzing trace with hash -4548408, now seen corresponding path program 1 times
[2020-11-24 15:42:16,467 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 15:42:16,475 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 15:42:16,501 INFO  L134       CoverageAnalysis]: Checked inductivity of 20 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 20 trivial. 0 not checked.
[2020-11-24 15:42:16,501 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 15:42:16,501 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-24 15:42:16,502 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 15:42:16,502 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-24 15:42:16,502 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-24 15:42:16,502 INFO  L87              Difference]: Start difference. First operand 340 states and 367 transitions. cyclomatic complexity: 30 Second operand 4 states.
[2020-11-24 15:42:16,519 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 15:42:16,519 INFO  L93              Difference]: Finished difference Result 340 states and 366 transitions.
[2020-11-24 15:42:16,519 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-24 15:42:16,519 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 340 states and 366 transitions.
[2020-11-24 15:42:16,521 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 15:42:16,523 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 340 states to 340 states and 366 transitions.
[2020-11-24 15:42:16,523 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 137
[2020-11-24 15:42:16,523 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 137
[2020-11-24 15:42:16,523 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 340 states and 366 transitions.
[2020-11-24 15:42:16,524 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 15:42:16,524 INFO  L728         BuchiCegarLoop]: Abstraction has 340 states and 366 transitions.
[2020-11-24 15:42:16,524 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 340 states and 366 transitions.
[2020-11-24 15:42:16,527 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 340 to 340.
[2020-11-24 15:42:16,527 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 340 states.
[2020-11-24 15:42:16,528 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 340 states to 340 states and 366 transitions.
[2020-11-24 15:42:16,528 INFO  L751         BuchiCegarLoop]: Abstraction has 340 states and 366 transitions.
[2020-11-24 15:42:16,528 INFO  L631         BuchiCegarLoop]: Abstraction has 340 states and 366 transitions.
[2020-11-24 15:42:16,528 INFO  L445         BuchiCegarLoop]: ======== Iteration 9============
[2020-11-24 15:42:16,528 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 340 states and 366 transitions.
[2020-11-24 15:42:16,529 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 15:42:16,529 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 15:42:16,529 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 15:42:16,530 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [3, 3, 3, 3, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 15:42:16,530 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L2]                 fail_transferFrom_BLY0 := false;
[L2]                 call_transferFrom_BLY0 := false;
[L2]     CALL        call main();
[L4387]              assume null == 0;
[L4388]  CALL        call this := FreshRefGenerator__success();
[L1636]              havoc newRef;
[L1637]              assume Alloc[newRef] == false;
[L1638]              Alloc[newRef] := true;
[L1639]              assume newRef != null;
[L4388]  RET         call this := FreshRefGenerator__success();
[L4389]              assume now >= 0;
[L4390]              assume DType[this] == BLY;
[L4391]              assume !revert && gas >= 0;
[L4392]  CALL        call CorralChoice_BLY(this);
[L4269]              havoc msgsender_MSG;
[L4270]              havoc msgvalue_MSG;
[L4271]              havoc choice;
[L4272]              havoc __ret_0_owner;
[L4273]              havoc __ret_0_newOwner;
[L4274]              havoc account_s293;
[L4275]              havoc __ret_0_isOwner;
[L4276]              havoc _newOwner_s313;
[L4277]              havoc __ret_0_acceptOwnership;
[L4278]              havoc account_s390;
[L4279]              havoc __ret_0_isPauser;
[L4280]              havoc account_s402;
[L4281]              havoc account_s414;
[L4282]              havoc __ret_0_paused;
[L4283]              havoc to_s1288;
[L4284]              havoc value_s1288;
[L4285]              havoc __ret_0_transfer;
[L4286]              havoc spender_s711;
[L4287]              havoc value_s711;
[L4288]              havoc __ret_0_approve;
[L4289]              havoc from_s1322;
[L4290]              havoc to_s1322;
[L4291]              havoc value_s1322;
[L4292]              havoc __ret_0_transferFrom;
[L4293]              havoc __ret_0_totalSupply;
[L4294]              havoc owner_s1254;
[L4295]              havoc __ret_0_balanceOf;
[L4296]              havoc owner_s656;
[L4297]              havoc spender_s656;
[L4298]              havoc __ret_0_allowance;
[L4299]              havoc spender_s809;
[L4300]              havoc addedValue_s809;
[L4301]              havoc __ret_0_increaseAllowance;
[L4302]              havoc spender_s858;
[L4303]              havoc subtractedValue_s858;
[L4304]              havoc __ret_0_decreaseAllowance;
[L4305]              havoc name_s1105;
[L4306]              havoc symbol_s1105;
[L4307]              havoc decimals_s1105;
[L4308]              havoc __ret_0_name;
[L4309]              havoc __ret_0_symbol;
[L4310]              havoc __ret_0_decimals;
[L4311]              havoc __ret_0_implementation;
[L4312]              havoc arg1675_s0;
[L4313]              havoc arg1676_s0;
[L4314]              havoc __ret_0_timelockList;
[L4315]              havoc arg1677_s0;
[L4316]              havoc __ret_0_frozenAccount;
[L4317]              havoc holder_s1351;
[L4318]              havoc __ret_0_freezeAccount;
[L4319]              havoc holder_s1379;
[L4320]              havoc __ret_0_unfreezeAccount;
[L4321]              havoc holder_s1410;
[L4322]              havoc value_s1410;
[L4323]              havoc releaseTime_s1410;
[L4324]              havoc __ret_0_lock;
[L4325]              havoc holder_s1439;
[L4326]              havoc value_s1439;
[L4327]              havoc releaseTime_s1439;
[L4328]              havoc __ret_0_transferWithLock;
[L4329]              havoc holder_s1468;
[L4330]              havoc idx_s1468;
[L4331]              havoc __ret_0_unlock;
[L4332]              havoc _newImplementation_s1486;
[L4333]              havoc tmpNow;
[L4334]              havoc gas;
[L4335]              assume gas > 4000000 && gas <= 8000000;
[L4336]              tmpNow := now;
[L4337]              havoc now;
[L4338]              assume now > tmpNow;
[L4339]              assume msgsender_MSG != null;
[L4340]  COND FALSE  !(choice == 6)
[L4347]  COND FALSE  !(choice == 5)
[L4354]  COND TRUE   choice == 4
[L4355]              gas := gas - 21000;
[L4356]  COND TRUE   gas >= 0
[L4357]              assume value_s1322 >= 0 && value_s1322 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4358]              assume msgvalue_MSG == 0;
[L4359]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_BLY(this, msgsender_MSG, msgvalue_MSG, from_s1322, to_s1322, value_s1322);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((((from_s1322 != to_s1322 && ((value_s1322 > _balances_HxERC20[this][from_s1322] || value_s1322 > _allowed_HxERC20[this][from_s1322][msgsender_MSG]) || _balances_HxERC20[this][to_s1322] + value_s1322 >= 115792089237316195423570985008687907853269984665640564039457584007913129639936)) && value_s1322 >= 0) && value_s1322 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_HxERC20[this][to_s1322] >= 0) && _balances_HxERC20[this][to_s1322] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_HxERC20[this][from_s1322] >= 0) && _balances_HxERC20[this][from_s1322] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowed_HxERC20[this][from_s1322][msgsender_MSG] >= 0) && _allowed_HxERC20[this][from_s1322][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transferFrom_BLY0 := true;
[L2]                 call_transferFrom_BLY0 := false;
[L2]                 revert := revert_hold;
[L959]               havoc __exception;
[L960]               revert := false;
[L961]   COND FALSE  !(__exception)
[L997]   CALL        call __ret_0_ := transferFrom~address~address~uint256_BLY__success(this, msgsender_MSG, msgvalue_MSG, from_s1322, to_s1322, value_s1322);
[L2370]  CALL        call notFrozen_pre__success(this, msgsender_MSG, msgvalue_MSG, from_s1322);
[L3578]  COND FALSE  !(!!frozenAccount_BLY[this][_holder_s1185])
[L2370]  RET         call notFrozen_pre__success(this, msgsender_MSG, msgvalue_MSG, from_s1322);
[L2371]  COND FALSE  !(revert)
[L2374]  COND FALSE  !(alloc_timelockList_BLY_lvl0[timelockList_BLY[this]][from_s1322] == false)
[L2385]  COND TRUE   Length[M_Ref_Ref[timelockList_BLY[this]][from_s1322]] > 0
[L2386]  CALL        call __var_23 := _autoUnlock~address_BLY__success(this, msgsender_MSG, msgvalue_MSG, from_s1322);
[L2653]  COND FALSE  !(alloc_timelockList_BLY_lvl0[timelockList_BLY[this]][holder_s1645] == false)
[L2664]              idx_s1645 := 0;
[L2665]  COND TRUE   idx_s1645 < Length[M_Ref_Ref[timelockList_BLY[this]][holder_s1645]]
[L2667]  COND FALSE  !(alloc_timelockList_BLY_lvl0[timelockList_BLY[this]][holder_s1645] == false)
[L2678]  COND TRUE   _releaseTime_BLY.LockInfo[M_int_Ref[M_Ref_Ref[timelockList_BLY[this]][holder_s1645]][idx_s1645]] <= now
[L2679]  CALL        call __var_36 := _unlock~address~uint256_BLY__success(this, msgsender_MSG, msgvalue_MSG, holder_s1645, idx_s1645);
[L2512]  COND FALSE  !(alloc_timelockList_BLY_lvl0[timelockList_BLY[this]][holder_s1600] == false)
[L2523]              lockinfo_s1600 := M_int_Ref[M_Ref_Ref[timelockList_BLY[this]][holder_s1600]][idx_s1600];
[L2524]              releaseAmount_s1600 := _amount_BLY.LockInfo[lockinfo_s1600];
[L2525]  COND FALSE  !(alloc_timelockList_BLY_lvl0[timelockList_BLY[this]][holder_s1600] == false)
[L2536]  COND FALSE  !(alloc_timelockList_BLY_lvl0[timelockList_BLY[this]][holder_s1600] == false)
[L2547]  COND FALSE  !(alloc_timelockList_BLY_lvl0[timelockList_BLY[this]][holder_s1600] == false)
[L2558]  CALL        call __var_29 := sub~uint256~uint256_HxSafeMath__success(this, this, 0, Length[M_Ref_Ref[timelockList_BLY[this]][holder_s1600]], 1);
[L1679]  COND FALSE  !(!(b_s82 <= a_s82))
[L1683]              c_s82 := (a_s82 - b_s82) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1684]              __ret_0_ := c_s82;
[L2558]  RET         call __var_29 := sub~uint256~uint256_HxSafeMath__success(this, this, 0, Length[M_Ref_Ref[timelockList_BLY[this]][holder_s1600]], 1);
[L2559]  COND FALSE  !(revert)
[L2562]  COND FALSE  !(alloc_timelockList_BLY_lvl0[timelockList_BLY[this]][holder_s1600] == false)
[L2573]              M_int_Ref[M_Ref_Ref[timelockList_BLY[this]][holder_s1600]][idx_s1600] := M_int_Ref[M_Ref_Ref[timelockList_BLY[this]][holder_s1600]][__var_29];
[L2574]  COND FALSE  !(alloc_timelockList_BLY_lvl0[timelockList_BLY[this]][holder_s1600] == false)
[L2585]              Length[M_Ref_Ref[timelockList_BLY[this]][holder_s1600]] := (Length[M_Ref_Ref[timelockList_BLY[this]][holder_s1600]] - 1) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2586]              assert { :EventEmitted "Unlock_BLY" } true;
[L2587]  CALL        call __var_33 := add~uint256~uint256_HxSafeMath__success(this, this, 0, _balances_HxERC20[this][holder_s1600], releaseAmount_s1600);
[L1703]              c_s106 := (a_s106 + b_s106) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1704]  COND FALSE  !(!(c_s106 >= a_s106))
[L1708]              __ret_0_ := c_s106;
[L2587]  RET         call __var_33 := add~uint256~uint256_HxSafeMath__success(this, this, 0, _balances_HxERC20[this][holder_s1600], releaseAmount_s1600);
[L2588]  COND FALSE  !(revert)
[L2591]              sum__balances0[this] := sum__balances0[this] - _balances_HxERC20[this][holder_s1600];
[L2592]              _balances_HxERC20[this][holder_s1600] := __var_33;
[L2593]              sum__balances0[this] := sum__balances0[this] + _balances_HxERC20[this][holder_s1600];
[L2594]              __ret_0_ := true;
[L2679]  RET         call __var_36 := _unlock~address~uint256_BLY__success(this, msgsender_MSG, msgvalue_MSG, holder_s1645, idx_s1645);
[L2680]  COND FALSE  !(revert)
[L2683]  COND FALSE  !(__var_36)
[L2687]              idx_s1645 := (idx_s1645 + 1) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2688]  COND FALSE  !(gas < 0)
[L2665]  COND FALSE  !(idx_s1645 < Length[M_Ref_Ref[timelockList_BLY[this]][holder_s1645]])
[L2692]              __ret_0_ := true;
[L2386]  RET         call __var_23 := _autoUnlock~address_BLY__success(this, msgsender_MSG, msgvalue_MSG, from_s1322);
[L2387]  COND FALSE  !(revert)
[L2391]  COND TRUE   DType[this] == BLY
[L2392]  CALL        call __var_24 := transferFrom~address~address~uint256_ERC20Pausable__success(this, msgsender_MSG, msgvalue_MSG, from_s1322, to_s1322, value_s1322);
[L2088]  CALL        call whenNotPaused_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L3554]  COND FALSE  !(!!_paused_Pausable[this])
[L2088]  RET         call whenNotPaused_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L2089]  COND FALSE  !(revert)
[L2092]  COND TRUE   DType[this] == BLY
[L2093]  CALL        call __var_11 := transferFrom~address~address~uint256_HxERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s1074, to_s1074, value_s1074);
[L1926]  CALL        call __var_5 := sub~uint256~uint256_HxSafeMath__success(this, this, 0, _allowed_HxERC20[this][from_s760][msgsender_MSG], value_s760);
[L1679]  COND FALSE  !(!(b_s82 <= a_s82))
[L1683]              c_s82 := (a_s82 - b_s82) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1684]              __ret_0_ := c_s82;
[L1926]  RET         call __var_5 := sub~uint256~uint256_HxSafeMath__success(this, this, 0, _allowed_HxERC20[this][from_s760][msgsender_MSG], value_s760);
[L1927]  COND FALSE  !(revert)
[L1930]              sum__allowed1[from_s760] := sum__allowed1[from_s760] - _allowed_HxERC20[this][from_s760][msgsender_MSG];
[L1931]              _allowed_HxERC20[this][from_s760][msgsender_MSG] := __var_5;
[L1932]              sum__allowed1[from_s760] := sum__allowed1[from_s760] + _allowed_HxERC20[this][from_s760][msgsender_MSG];
[L1933]  COND TRUE   DType[this] == BLY
[L1934]  CALL        call _transfer~address~address~uint256_HxERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s760, to_s760, value_s760);
[L1987]              __var_6 := null;
[L1988]  COND FALSE  !(!(to_s904 != null))
[L1992]  CALL        call __var_7 := sub~uint256~uint256_HxSafeMath__success(this, this, 0, _balances_HxERC20[this][from_s904], value_s904);
[L1679]  COND FALSE  !(!(b_s82 <= a_s82))
[L1683]              c_s82 := (a_s82 - b_s82) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1684]              __ret_0_ := c_s82;
[L1992]  RET         call __var_7 := sub~uint256~uint256_HxSafeMath__success(this, this, 0, _balances_HxERC20[this][from_s904], value_s904);
[L1993]  COND FALSE  !(revert)
[L1996]              sum__balances0[this] := sum__balances0[this] - _balances_HxERC20[this][from_s904];
[L1997]              _balances_HxERC20[this][from_s904] := __var_7;
[L1998]              sum__balances0[this] := sum__balances0[this] + _balances_HxERC20[this][from_s904];
[L1999]  CALL        call __var_8 := add~uint256~uint256_HxSafeMath__success(this, this, 0, _balances_HxERC20[this][to_s904], value_s904);
[L1703]              c_s106 := (a_s106 + b_s106) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1704]  COND FALSE  !(!(c_s106 >= a_s106))
[L1708]              __ret_0_ := c_s106;
[L1999]  RET         call __var_8 := add~uint256~uint256_HxSafeMath__success(this, this, 0, _balances_HxERC20[this][to_s904], value_s904);
[L2000]  COND FALSE  !(revert)
[L2003]              sum__balances0[this] := sum__balances0[this] - _balances_HxERC20[this][to_s904];
[L2004]              _balances_HxERC20[this][to_s904] := __var_8;
[L2005]              sum__balances0[this] := sum__balances0[this] + _balances_HxERC20[this][to_s904];
[L2006]              assert { :EventEmitted "Transfer_HxERC20" } true;
[L1934]  RET         call _transfer~address~address~uint256_HxERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s760, to_s760, value_s760);
[L1935]  COND FALSE  !(revert)
[L1951]              assert { :EventEmitted "Approval_HxERC20" } true;
[L1952]              __ret_0_ := true;
[L2093]  RET         call __var_11 := transferFrom~address~address~uint256_HxERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s1074, to_s1074, value_s1074);
[L2094]  COND FALSE  !(revert)
[L2105]              __ret_0_ := __var_11;
[L2392]  RET         call __var_24 := transferFrom~address~address~uint256_ERC20Pausable__success(this, msgsender_MSG, msgvalue_MSG, from_s1322, to_s1322, value_s1322);
[L2393]  COND FALSE  !(revert)
[L2399]              __ret_0_ := __var_24;
[L997]   RET         call __ret_0_ := transferFrom~address~address~uint256_BLY__success(this, msgsender_MSG, msgvalue_MSG, from_s1322, to_s1322, value_s1322);
[L998]               assume !revert && gas >= 0;
[L4359]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_BLY(this, msgsender_MSG, msgvalue_MSG, from_s1322, to_s1322, value_s1322);
[L4392]  RET         call CorralChoice_BLY(this);

Loop:
[L4392]        assume true;

[2020-11-24 15:42:16,532 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 15:42:16,532 INFO  L82        PathProgramCache]: Analyzing trace with hash -1101734231, now seen corresponding path program 1 times
[2020-11-24 15:42:16,533 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 15:42:16,541 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 15:42:16,565 INFO  L134       CoverageAnalysis]: Checked inductivity of 21 backedges. 1 proven. 0 refuted. 0 times theorem prover too weak. 20 trivial. 0 not checked.
[2020-11-24 15:42:16,565 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 15:42:16,566 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-24 15:42:16,566 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 15:42:16,566 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-24 15:42:16,566 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-24 15:42:16,566 INFO  L87              Difference]: Start difference. First operand 340 states and 366 transitions. cyclomatic complexity: 29 Second operand 4 states.
[2020-11-24 15:42:16,569 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 15:42:16,569 INFO  L93              Difference]: Finished difference Result 341 states and 367 transitions.
[2020-11-24 15:42:16,569 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-24 15:42:16,569 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 341 states and 367 transitions.
[2020-11-24 15:42:16,570 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 15:42:16,571 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 341 states to 341 states and 367 transitions.
[2020-11-24 15:42:16,571 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 137
[2020-11-24 15:42:16,571 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 137
[2020-11-24 15:42:16,572 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 341 states and 367 transitions.
[2020-11-24 15:42:16,572 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 15:42:16,572 INFO  L728         BuchiCegarLoop]: Abstraction has 341 states and 367 transitions.
[2020-11-24 15:42:16,572 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 341 states and 367 transitions.
[2020-11-24 15:42:16,575 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 341 to 340.
[2020-11-24 15:42:16,575 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 340 states.
[2020-11-24 15:42:16,576 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 340 states to 340 states and 365 transitions.
[2020-11-24 15:42:16,576 INFO  L751         BuchiCegarLoop]: Abstraction has 340 states and 365 transitions.
[2020-11-24 15:42:16,576 INFO  L631         BuchiCegarLoop]: Abstraction has 340 states and 365 transitions.
[2020-11-24 15:42:16,576 INFO  L445         BuchiCegarLoop]: ======== Iteration 10============
[2020-11-24 15:42:16,576 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 340 states and 365 transitions.
[2020-11-24 15:42:16,577 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 15:42:16,577 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 15:42:16,577 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 15:42:16,578 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [3, 3, 3, 3, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 15:42:16,578 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L2]                 fail_transferFrom_BLY0 := false;
[L2]                 call_transferFrom_BLY0 := false;
[L2]     CALL        call main();
[L4387]              assume null == 0;
[L4388]  CALL        call this := FreshRefGenerator__success();
[L1636]              havoc newRef;
[L1637]              assume Alloc[newRef] == false;
[L1638]              Alloc[newRef] := true;
[L1639]              assume newRef != null;
[L4388]  RET         call this := FreshRefGenerator__success();
[L4389]              assume now >= 0;
[L4390]              assume DType[this] == BLY;
[L4391]              assume !revert && gas >= 0;
[L4392]  CALL        call CorralChoice_BLY(this);
[L4269]              havoc msgsender_MSG;
[L4270]              havoc msgvalue_MSG;
[L4271]              havoc choice;
[L4272]              havoc __ret_0_owner;
[L4273]              havoc __ret_0_newOwner;
[L4274]              havoc account_s293;
[L4275]              havoc __ret_0_isOwner;
[L4276]              havoc _newOwner_s313;
[L4277]              havoc __ret_0_acceptOwnership;
[L4278]              havoc account_s390;
[L4279]              havoc __ret_0_isPauser;
[L4280]              havoc account_s402;
[L4281]              havoc account_s414;
[L4282]              havoc __ret_0_paused;
[L4283]              havoc to_s1288;
[L4284]              havoc value_s1288;
[L4285]              havoc __ret_0_transfer;
[L4286]              havoc spender_s711;
[L4287]              havoc value_s711;
[L4288]              havoc __ret_0_approve;
[L4289]              havoc from_s1322;
[L4290]              havoc to_s1322;
[L4291]              havoc value_s1322;
[L4292]              havoc __ret_0_transferFrom;
[L4293]              havoc __ret_0_totalSupply;
[L4294]              havoc owner_s1254;
[L4295]              havoc __ret_0_balanceOf;
[L4296]              havoc owner_s656;
[L4297]              havoc spender_s656;
[L4298]              havoc __ret_0_allowance;
[L4299]              havoc spender_s809;
[L4300]              havoc addedValue_s809;
[L4301]              havoc __ret_0_increaseAllowance;
[L4302]              havoc spender_s858;
[L4303]              havoc subtractedValue_s858;
[L4304]              havoc __ret_0_decreaseAllowance;
[L4305]              havoc name_s1105;
[L4306]              havoc symbol_s1105;
[L4307]              havoc decimals_s1105;
[L4308]              havoc __ret_0_name;
[L4309]              havoc __ret_0_symbol;
[L4310]              havoc __ret_0_decimals;
[L4311]              havoc __ret_0_implementation;
[L4312]              havoc arg1675_s0;
[L4313]              havoc arg1676_s0;
[L4314]              havoc __ret_0_timelockList;
[L4315]              havoc arg1677_s0;
[L4316]              havoc __ret_0_frozenAccount;
[L4317]              havoc holder_s1351;
[L4318]              havoc __ret_0_freezeAccount;
[L4319]              havoc holder_s1379;
[L4320]              havoc __ret_0_unfreezeAccount;
[L4321]              havoc holder_s1410;
[L4322]              havoc value_s1410;
[L4323]              havoc releaseTime_s1410;
[L4324]              havoc __ret_0_lock;
[L4325]              havoc holder_s1439;
[L4326]              havoc value_s1439;
[L4327]              havoc releaseTime_s1439;
[L4328]              havoc __ret_0_transferWithLock;
[L4329]              havoc holder_s1468;
[L4330]              havoc idx_s1468;
[L4331]              havoc __ret_0_unlock;
[L4332]              havoc _newImplementation_s1486;
[L4333]              havoc tmpNow;
[L4334]              havoc gas;
[L4335]              assume gas > 4000000 && gas <= 8000000;
[L4336]              tmpNow := now;
[L4337]              havoc now;
[L4338]              assume now > tmpNow;
[L4339]              assume msgsender_MSG != null;
[L4340]  COND FALSE  !(choice == 6)
[L4347]  COND FALSE  !(choice == 5)
[L4354]  COND TRUE   choice == 4
[L4355]              gas := gas - 21000;
[L4356]  COND TRUE   gas >= 0
[L4357]              assume value_s1322 >= 0 && value_s1322 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4358]              assume msgvalue_MSG == 0;
[L4359]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_BLY(this, msgsender_MSG, msgvalue_MSG, from_s1322, to_s1322, value_s1322);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((((from_s1322 != to_s1322 && ((value_s1322 > _balances_HxERC20[this][from_s1322] || value_s1322 > _allowed_HxERC20[this][from_s1322][msgsender_MSG]) || _balances_HxERC20[this][to_s1322] + value_s1322 >= 115792089237316195423570985008687907853269984665640564039457584007913129639936)) && value_s1322 >= 0) && value_s1322 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_HxERC20[this][to_s1322] >= 0) && _balances_HxERC20[this][to_s1322] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_HxERC20[this][from_s1322] >= 0) && _balances_HxERC20[this][from_s1322] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowed_HxERC20[this][from_s1322][msgsender_MSG] >= 0) && _allowed_HxERC20[this][from_s1322][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transferFrom_BLY0 := true;
[L2]                 call_transferFrom_BLY0 := false;
[L2]                 revert := revert_hold;
[L959]               havoc __exception;
[L960]               revert := false;
[L961]   COND FALSE  !(__exception)
[L997]   CALL        call __ret_0_ := transferFrom~address~address~uint256_BLY__success(this, msgsender_MSG, msgvalue_MSG, from_s1322, to_s1322, value_s1322);
[L2370]  CALL        call notFrozen_pre__success(this, msgsender_MSG, msgvalue_MSG, from_s1322);
[L3578]  COND FALSE  !(!!frozenAccount_BLY[this][_holder_s1185])
[L2370]  RET         call notFrozen_pre__success(this, msgsender_MSG, msgvalue_MSG, from_s1322);
[L2371]  COND FALSE  !(revert)
[L2374]  COND FALSE  !(alloc_timelockList_BLY_lvl0[timelockList_BLY[this]][from_s1322] == false)
[L2385]  COND TRUE   Length[M_Ref_Ref[timelockList_BLY[this]][from_s1322]] > 0
[L2386]  CALL        call __var_23 := _autoUnlock~address_BLY__success(this, msgsender_MSG, msgvalue_MSG, from_s1322);
[L2653]  COND FALSE  !(alloc_timelockList_BLY_lvl0[timelockList_BLY[this]][holder_s1645] == false)
[L2664]              idx_s1645 := 0;
[L2665]  COND TRUE   idx_s1645 < Length[M_Ref_Ref[timelockList_BLY[this]][holder_s1645]]
[L2667]  COND FALSE  !(alloc_timelockList_BLY_lvl0[timelockList_BLY[this]][holder_s1645] == false)
[L2678]  COND TRUE   _releaseTime_BLY.LockInfo[M_int_Ref[M_Ref_Ref[timelockList_BLY[this]][holder_s1645]][idx_s1645]] <= now
[L2679]  CALL        call __var_36 := _unlock~address~uint256_BLY__success(this, msgsender_MSG, msgvalue_MSG, holder_s1645, idx_s1645);
[L2512]  COND FALSE  !(alloc_timelockList_BLY_lvl0[timelockList_BLY[this]][holder_s1600] == false)
[L2523]              lockinfo_s1600 := M_int_Ref[M_Ref_Ref[timelockList_BLY[this]][holder_s1600]][idx_s1600];
[L2524]              releaseAmount_s1600 := _amount_BLY.LockInfo[lockinfo_s1600];
[L2525]  COND FALSE  !(alloc_timelockList_BLY_lvl0[timelockList_BLY[this]][holder_s1600] == false)
[L2536]  COND FALSE  !(alloc_timelockList_BLY_lvl0[timelockList_BLY[this]][holder_s1600] == false)
[L2547]  COND FALSE  !(alloc_timelockList_BLY_lvl0[timelockList_BLY[this]][holder_s1600] == false)
[L2558]  CALL        call __var_29 := sub~uint256~uint256_HxSafeMath__success(this, this, 0, Length[M_Ref_Ref[timelockList_BLY[this]][holder_s1600]], 1);
[L1679]  COND FALSE  !(!(b_s82 <= a_s82))
[L1683]              c_s82 := (a_s82 - b_s82) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1684]              __ret_0_ := c_s82;
[L2558]  RET         call __var_29 := sub~uint256~uint256_HxSafeMath__success(this, this, 0, Length[M_Ref_Ref[timelockList_BLY[this]][holder_s1600]], 1);
[L2559]  COND FALSE  !(revert)
[L2562]  COND FALSE  !(alloc_timelockList_BLY_lvl0[timelockList_BLY[this]][holder_s1600] == false)
[L2573]              M_int_Ref[M_Ref_Ref[timelockList_BLY[this]][holder_s1600]][idx_s1600] := M_int_Ref[M_Ref_Ref[timelockList_BLY[this]][holder_s1600]][__var_29];
[L2574]  COND FALSE  !(alloc_timelockList_BLY_lvl0[timelockList_BLY[this]][holder_s1600] == false)
[L2585]              Length[M_Ref_Ref[timelockList_BLY[this]][holder_s1600]] := (Length[M_Ref_Ref[timelockList_BLY[this]][holder_s1600]] - 1) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2586]              assert { :EventEmitted "Unlock_BLY" } true;
[L2587]  CALL        call __var_33 := add~uint256~uint256_HxSafeMath__success(this, this, 0, _balances_HxERC20[this][holder_s1600], releaseAmount_s1600);
[L1703]              c_s106 := (a_s106 + b_s106) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1704]  COND FALSE  !(!(c_s106 >= a_s106))
[L1708]              __ret_0_ := c_s106;
[L2587]  RET         call __var_33 := add~uint256~uint256_HxSafeMath__success(this, this, 0, _balances_HxERC20[this][holder_s1600], releaseAmount_s1600);
[L2588]  COND FALSE  !(revert)
[L2591]              sum__balances0[this] := sum__balances0[this] - _balances_HxERC20[this][holder_s1600];
[L2592]              _balances_HxERC20[this][holder_s1600] := __var_33;
[L2593]              sum__balances0[this] := sum__balances0[this] + _balances_HxERC20[this][holder_s1600];
[L2594]              __ret_0_ := true;
[L2679]  RET         call __var_36 := _unlock~address~uint256_BLY__success(this, msgsender_MSG, msgvalue_MSG, holder_s1645, idx_s1645);
[L2680]  COND FALSE  !(revert)
[L2683]  COND TRUE   __var_36
[L2684]              idx_s1645 := (idx_s1645 - 1) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2687]              idx_s1645 := (idx_s1645 + 1) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2688]  COND FALSE  !(gas < 0)
[L2665]  COND FALSE  !(idx_s1645 < Length[M_Ref_Ref[timelockList_BLY[this]][holder_s1645]])
[L2692]              __ret_0_ := true;
[L2386]  RET         call __var_23 := _autoUnlock~address_BLY__success(this, msgsender_MSG, msgvalue_MSG, from_s1322);
[L2387]  COND FALSE  !(revert)
[L2391]  COND TRUE   DType[this] == BLY
[L2392]  CALL        call __var_24 := transferFrom~address~address~uint256_ERC20Pausable__success(this, msgsender_MSG, msgvalue_MSG, from_s1322, to_s1322, value_s1322);
[L2088]  CALL        call whenNotPaused_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L3554]  COND FALSE  !(!!_paused_Pausable[this])
[L2088]  RET         call whenNotPaused_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L2089]  COND FALSE  !(revert)
[L2092]  COND TRUE   DType[this] == BLY
[L2093]  CALL        call __var_11 := transferFrom~address~address~uint256_HxERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s1074, to_s1074, value_s1074);
[L1926]  CALL        call __var_5 := sub~uint256~uint256_HxSafeMath__success(this, this, 0, _allowed_HxERC20[this][from_s760][msgsender_MSG], value_s760);
[L1679]  COND FALSE  !(!(b_s82 <= a_s82))
[L1683]              c_s82 := (a_s82 - b_s82) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1684]              __ret_0_ := c_s82;
[L1926]  RET         call __var_5 := sub~uint256~uint256_HxSafeMath__success(this, this, 0, _allowed_HxERC20[this][from_s760][msgsender_MSG], value_s760);
[L1927]  COND FALSE  !(revert)
[L1930]              sum__allowed1[from_s760] := sum__allowed1[from_s760] - _allowed_HxERC20[this][from_s760][msgsender_MSG];
[L1931]              _allowed_HxERC20[this][from_s760][msgsender_MSG] := __var_5;
[L1932]              sum__allowed1[from_s760] := sum__allowed1[from_s760] + _allowed_HxERC20[this][from_s760][msgsender_MSG];
[L1933]  COND TRUE   DType[this] == BLY
[L1934]  CALL        call _transfer~address~address~uint256_HxERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s760, to_s760, value_s760);
[L1987]              __var_6 := null;
[L1988]  COND FALSE  !(!(to_s904 != null))
[L1992]  CALL        call __var_7 := sub~uint256~uint256_HxSafeMath__success(this, this, 0, _balances_HxERC20[this][from_s904], value_s904);
[L1679]  COND FALSE  !(!(b_s82 <= a_s82))
[L1683]              c_s82 := (a_s82 - b_s82) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1684]              __ret_0_ := c_s82;
[L1992]  RET         call __var_7 := sub~uint256~uint256_HxSafeMath__success(this, this, 0, _balances_HxERC20[this][from_s904], value_s904);
[L1993]  COND FALSE  !(revert)
[L1996]              sum__balances0[this] := sum__balances0[this] - _balances_HxERC20[this][from_s904];
[L1997]              _balances_HxERC20[this][from_s904] := __var_7;
[L1998]              sum__balances0[this] := sum__balances0[this] + _balances_HxERC20[this][from_s904];
[L1999]  CALL        call __var_8 := add~uint256~uint256_HxSafeMath__success(this, this, 0, _balances_HxERC20[this][to_s904], value_s904);
[L1703]              c_s106 := (a_s106 + b_s106) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1704]  COND FALSE  !(!(c_s106 >= a_s106))
[L1708]              __ret_0_ := c_s106;
[L1999]  RET         call __var_8 := add~uint256~uint256_HxSafeMath__success(this, this, 0, _balances_HxERC20[this][to_s904], value_s904);
[L2000]  COND FALSE  !(revert)
[L2003]              sum__balances0[this] := sum__balances0[this] - _balances_HxERC20[this][to_s904];
[L2004]              _balances_HxERC20[this][to_s904] := __var_8;
[L2005]              sum__balances0[this] := sum__balances0[this] + _balances_HxERC20[this][to_s904];
[L2006]              assert { :EventEmitted "Transfer_HxERC20" } true;
[L1934]  RET         call _transfer~address~address~uint256_HxERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s760, to_s760, value_s760);
[L1935]  COND FALSE  !(revert)
[L1951]              assert { :EventEmitted "Approval_HxERC20" } true;
[L1952]              __ret_0_ := true;
[L2093]  RET         call __var_11 := transferFrom~address~address~uint256_HxERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s1074, to_s1074, value_s1074);
[L2094]  COND FALSE  !(revert)
[L2105]              __ret_0_ := __var_11;
[L2392]  RET         call __var_24 := transferFrom~address~address~uint256_ERC20Pausable__success(this, msgsender_MSG, msgvalue_MSG, from_s1322, to_s1322, value_s1322);
[L2393]  COND FALSE  !(revert)
[L2399]              __ret_0_ := __var_24;
[L997]   RET         call __ret_0_ := transferFrom~address~address~uint256_BLY__success(this, msgsender_MSG, msgvalue_MSG, from_s1322, to_s1322, value_s1322);
[L998]               assume !revert && gas >= 0;
[L4359]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_BLY(this, msgsender_MSG, msgvalue_MSG, from_s1322, to_s1322, value_s1322);
[L4392]  RET         call CorralChoice_BLY(this);

Loop:
[L4392]        assume true;

[2020-11-24 15:42:16,580 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 15:42:16,580 INFO  L82        PathProgramCache]: Analyzing trace with hash 1032554527, now seen corresponding path program 1 times
[2020-11-24 15:42:16,581 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 15:42:16,603 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 15:42:16,629 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 15:42:16,692 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 15:42:16,692 INFO  L82        PathProgramCache]: Analyzing trace with hash 18631, now seen corresponding path program 1 times
[2020-11-24 15:42:16,693 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 15:42:16,694 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 15:42:16,694 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 15:42:16,695 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 15:42:16,695 INFO  L82        PathProgramCache]: Analyzing trace with hash 1944437865, now seen corresponding path program 1 times
[2020-11-24 15:42:16,696 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 15:42:16,717 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 15:42:16,741 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
[2020-11-24 15:42:16,991 WARN  L188               SmtUtils]: Spent 155.00 ms on a formula simplification. DAG size of input: 112 DAG size of output: 111
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 277 to 547
Garbage collection #5: 547 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 547 to 1093
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #5: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
[2020-11-24 15:42:17,202 WARN  L188               SmtUtils]: Spent 112.00 ms on a formula simplification. DAG size of input: 131 DAG size of output: 127
Garbage collection #1: 41 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 41 to 79
Garbage collection #2: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #3: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #4: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #5: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
[2020-11-24 15:42:17,402 WARN  L188               SmtUtils]: Spent 145.00 ms on a formula simplification. DAG size of input: 121 DAG size of output: 116
Garbage collection #1: 41 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 41 to 79
Garbage collection #2: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #3: 157 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 157 to 313
Garbage collection #4: 313 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 313 to 619
Garbage collection #5: 619 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 619 to 1237
[2020-11-24 15:42:17,621 WARN  L188               SmtUtils]: Spent 110.00 ms on a formula simplification. DAG size of input: 105 DAG size of output: 104
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 277 to 547
Garbage collection #5: 547 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 547 to 1093
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
[2020-11-24 15:42:17,795 WARN  L188               SmtUtils]: Spent 120.00 ms on a formula simplification. DAG size of input: 124 DAG size of output: 123
Garbage collection #1: 41 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 41 to 79
Garbage collection #2: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #3: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #4: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #5: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #4: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
[2020-11-24 15:42:17,967 WARN  L188               SmtUtils]: Spent 135.00 ms on a formula simplification. DAG size of input: 112 DAG size of output: 107
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 277 to 547
[2020-11-24 15:42:18,205 WARN  L188               SmtUtils]: Spent 168.00 ms on a formula simplification. DAG size of input: 119 DAG size of output: 111
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 277 to 547
Garbage collection #5: 547 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 547 to 1093
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
[2020-11-24 15:42:18,362 WARN  L188               SmtUtils]: Spent 120.00 ms on a formula simplification. DAG size of input: 114 DAG size of output: 109
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #5: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
[2020-11-24 15:42:18,745 WARN  L188               SmtUtils]: Spent 339.00 ms on a formula simplification. DAG size of input: 220 DAG size of output: 208
Garbage collection #1: 67 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 67 to 131
Garbage collection #2: 131 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 131 to 257
Garbage collection #3: 257 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 257 to 509
Garbage collection #4: 509 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 509 to 1013
Garbage collection #5: 1013 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 1013 to 2017
Garbage collection #6: 2017 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 2017 to 4027
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #5: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
[2020-11-24 15:42:19,029 WARN  L188               SmtUtils]: Spent 217.00 ms on a formula simplification. DAG size of input: 179 DAG size of output: 174
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 883 to 1759
[2020-11-24 15:42:19,178 WARN  L188               SmtUtils]: Spent 145.00 ms on a formula simplification that was a NOOP. DAG size: 156
[2020-11-24 15:42:19,542 WARN  L188               SmtUtils]: Spent 362.00 ms on a formula simplification. DAG size of input: 198 DAG size of output: 185
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 883 to 1759
Garbage collection #6: 1759 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 1759 to 3517
Garbage collection #1: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #2: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #3: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #4: 317 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 317 to 631
Garbage collection #5: 631 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 631 to 1259
Garbage collection #6: 1259 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 1259 to 2503
[2020-11-24 15:42:19,716 WARN  L188               SmtUtils]: Spent 162.00 ms on a formula simplification that was a NOOP. DAG size: 135
[2020-11-24 15:42:20,669 WARN  L188               SmtUtils]: Spent 951.00 ms on a formula simplification. DAG size of input: 365 DAG size of output: 360
Garbage collection #1: 131 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 131 to 257
Garbage collection #2: 257 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 257 to 509
Garbage collection #3: 509 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 509 to 1013
Garbage collection #4: 1013 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1013 to 2017
Garbage collection #5: 2017 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2017 to 4027
Garbage collection #6: 4027 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 4027 to 8053
[2020-11-24 15:42:21,373 WARN  L188               SmtUtils]: Spent 696.00 ms on a formula simplification that was a NOOP. DAG size: 337
[2020-11-24 15:42:22,967 WARN  L188               SmtUtils]: Spent 1.59 s on a formula simplification. DAG size of input: 364 DAG size of output: 355
Garbage collection #1: 127 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 127 to 251
Garbage collection #2: 251 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 251 to 499
Garbage collection #3: 499 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 499 to 997
Garbage collection #4: 997 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 997 to 1993
Garbage collection #5: 1993 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1993 to 3967
Garbage collection #6: 3967 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 3967 to 7933
Garbage collection #7: 7933 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 7933 to 15859
Garbage collection #1: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #2: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #3: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #4: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #5: 1237 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1237 to 2473
Garbage collection #6: 2473 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2473 to 4943
Garbage collection #7: 4943 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4943 to 9883
[2020-11-24 15:42:23,436 WARN  L188               SmtUtils]: Spent 447.00 ms on a formula simplification that was a NOOP. DAG size: 245
[2020-11-24 15:42:24,020 WARN  L188               SmtUtils]: Spent 582.00 ms on a formula simplification that was a NOOP. DAG size: 435
Garbage collection #1: 167 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 167 to 331
Garbage collection #2: 331 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 331 to 661
Garbage collection #3: 661 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 661 to 1321
Garbage collection #4: 1321 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 1321 to 2633
Garbage collection #5: 2633 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 2633 to 5261
Garbage collection #6: 5261 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 5261 to 10513
Garbage collection #7: 10513 nodes / 0 free / 0.0s / 0.002s total
Resizing node table from 10513 to 21023
[2020-11-24 15:42:24,680 WARN  L188               SmtUtils]: Spent 649.00 ms on a formula simplification that was a NOOP. DAG size: 342
[2020-11-24 15:42:25,432 WARN  L188               SmtUtils]: Spent 750.00 ms on a formula simplification. DAG size of input: 361 DAG size of output: 356
Garbage collection #1: 127 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 127 to 251
Garbage collection #2: 251 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 251 to 499
Garbage collection #3: 499 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 499 to 997
Garbage collection #4: 997 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 997 to 1993
Garbage collection #5: 1993 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1993 to 3967
Garbage collection #6: 3967 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 3967 to 7933
Garbage collection #1: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #2: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #3: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #4: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #5: 1237 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1237 to 2473
Garbage collection #6: 2473 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2473 to 4943
[2020-11-24 15:42:25,657 WARN  L188               SmtUtils]: Spent 215.00 ms on a formula simplification that was a NOOP. DAG size: 245
[2020-11-24 15:42:25,960 WARN  L188               SmtUtils]: Spent 281.00 ms on a formula simplification that was a NOOP. DAG size: 339
Garbage collection #1: 127 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 127 to 251
Garbage collection #2: 251 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 251 to 499
Garbage collection #3: 499 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 499 to 997
Garbage collection #4: 997 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 997 to 1993
Garbage collection #5: 1993 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1993 to 3967
Garbage collection #6: 3967 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3967 to 7933
Garbage collection #1: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #2: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #3: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #4: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #5: 1093 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1093 to 2179
Garbage collection #6: 2179 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2179 to 4357
[2020-11-24 15:42:26,133 WARN  L188               SmtUtils]: Spent 167.00 ms on a formula simplification that was a NOOP. DAG size: 245
[2020-11-24 15:42:26,717 WARN  L188               SmtUtils]: Spent 582.00 ms on a formula simplification. DAG size of input: 341 DAG size of output: 340
Garbage collection #1: 127 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 127 to 251
Garbage collection #2: 251 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 251 to 499
Garbage collection #3: 499 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 499 to 997
Garbage collection #4: 997 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 997 to 1993
Garbage collection #5: 1993 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1993 to 3967
Garbage collection #6: 3967 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3967 to 7933
Garbage collection #1: 127 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 127 to 251
Garbage collection #2: 251 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 251 to 499
Garbage collection #3: 499 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 499 to 997
Garbage collection #4: 997 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 997 to 1993
Garbage collection #5: 1993 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1993 to 3967
Garbage collection #6: 3967 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3967 to 7933
[2020-11-24 15:42:27,019 WARN  L188               SmtUtils]: Spent 297.00 ms on a formula simplification that was a NOOP. DAG size: 336
[2020-11-24 15:42:27,036 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 15:42:27,046 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 24.11 03:42:27 BasicIcfg
[2020-11-24 15:42:27,047 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-24 15:42:27,047 INFO  L168              Benchmark]: Toolchain (without parser) took 15792.87 ms. Allocated memory was 1.0 GB in the beginning and 2.4 GB in the end (delta: 1.3 GB). Free memory was 935.2 MB in the beginning and 1.9 GB in the end (delta: -1.0 GB). Peak memory consumption was 1.4 GB. Max. memory is 15.3 GB.
[2020-11-24 15:42:27,048 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.16 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-24 15:42:27,048 INFO  L168              Benchmark]: Boogie Preprocessor took 103.23 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 924.5 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
[2020-11-24 15:42:27,048 INFO  L168              Benchmark]: UtopiaSpecLang took 62.71 ms. Allocated memory is still 1.0 GB. Free memory was 924.5 MB in the beginning and 919.1 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-24 15:42:27,049 INFO  L168              Benchmark]: Boogie Printer took 16.52 ms. Allocated memory is still 1.0 GB. Free memory was 919.1 MB in the beginning and 913.7 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-24 15:42:27,049 INFO  L168              Benchmark]: RCFGBuilder took 865.67 ms. Allocated memory is still 1.0 GB. Free memory was 913.7 MB in the beginning and 768.8 MB in the end (delta: 145.0 MB). Peak memory consumption was 145.0 MB. Max. memory is 15.3 GB.
[2020-11-24 15:42:27,050 INFO  L168              Benchmark]: UtopiaLTL2Aut took 45.07 ms. Allocated memory is still 1.0 GB. Free memory was 768.8 MB in the beginning and 765.2 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
[2020-11-24 15:42:27,050 INFO  L168              Benchmark]: BÃ¼chi Program Product took 1622.04 ms. Allocated memory was 1.0 GB in the beginning and 1.2 GB in the end (delta: 173.5 MB). Free memory was 765.2 MB in the beginning and 789.2 MB in the end (delta: -24.0 MB). Peak memory consumption was 149.6 MB. Max. memory is 15.3 GB.
[2020-11-24 15:42:27,051 INFO  L168              Benchmark]: BlockEncodingV2 took 134.73 ms. Allocated memory is still 1.2 GB. Free memory was 789.2 MB in the beginning and 728.6 MB in the end (delta: 60.6 MB). Peak memory consumption was 60.6 MB. Max. memory is 15.3 GB.
[2020-11-24 15:42:27,051 INFO  L168              Benchmark]: BuchiAutomizer took 12939.87 ms. Allocated memory was 1.2 GB in the beginning and 2.4 GB in the end (delta: 1.2 GB). Free memory was 728.6 MB in the beginning and 1.9 GB in the end (delta: -1.2 GB). Peak memory consumption was 986.5 MB. Max. memory is 15.3 GB.
[2020-11-24 15:42:27,054 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    3828 locations, 6759 edges
  - StatisticsResult: Encoded RCFG
    3714 locations, 6486 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.16 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 103.23 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 924.5 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 62.71 ms. Allocated memory is still 1.0 GB. Free memory was 924.5 MB in the beginning and 919.1 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 16.52 ms. Allocated memory is still 1.0 GB. Free memory was 919.1 MB in the beginning and 913.7 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * RCFGBuilder took 865.67 ms. Allocated memory is still 1.0 GB. Free memory was 913.7 MB in the beginning and 768.8 MB in the end (delta: 145.0 MB). Peak memory consumption was 145.0 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 45.07 ms. Allocated memory is still 1.0 GB. Free memory was 768.8 MB in the beginning and 765.2 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 1622.04 ms. Allocated memory was 1.0 GB in the beginning and 1.2 GB in the end (delta: 173.5 MB). Free memory was 765.2 MB in the beginning and 789.2 MB in the end (delta: -24.0 MB). Peak memory consumption was 149.6 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 134.73 ms. Allocated memory is still 1.2 GB. Free memory was 789.2 MB in the beginning and 728.6 MB in the end (delta: 60.6 MB). Peak memory consumption was 60.6 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 12939.87 ms. Allocated memory was 1.2 GB in the beginning and 2.4 GB in the end (delta: 1.2 GB). Free memory was 728.6 MB in the beginning and 1.9 GB in the end (delta: -1.2 GB). Peak memory consumption was 986.5 MB. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    1608 locations, 2105 edges
  - StatisticsResult: BuchiProgram size
    3828 locations, 6759 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 9 terminating modules (9 trivial, 0 deterministic, 0 nondeterministic) and one nonterminating remainder module.9 modules have a trivial ranking function, the largest among these consists of 19 locations. The remainder module has 340 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 12.8s and 10 iterations.  TraceHistogramMax:3. Analysis of lassos took 11.3s. Construction of modules took 0.8s. BÃ¼chi inclusion checks took 0.4s. Highest rank in rank-based complementation 0. Minimization of det autom 9. Minimization of nondet autom 0. Automata minimization 0.0s AutomataMinimizationTime, 9 MinimizatonAttempts, 6 StatesRemovedByMinimization, 3 NontrivialMinimizations. Non-live state removal took 0.0s Buchi closure took 0.0s. Biggest automaton had 395 states and ocurred in iteration 2.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 4589 SDtfs, 2688 SDslu, 7025 SDs, 0 SdLazy, 4576 SolverSat, 1120 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 0.8s Time	LassoAnalysisResults: nont1 unkn0 SFLI0 SFLT0 conc0 concLT0 SILN0 SILU9 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - TransactionCounterexample: Violation of LTL property LTL
    Found an infinite, lasso-shaped execution that violates the LTL property LTL.
Stem:
BLY(231584178474632390847141970017375815706539969331281128078915168015826259279883).transferFrom~address~address~uint256.gas(3979001)({from : 231584178474632390847141970017375815706539969331281128078915168015826259279887, from : 231584178474632390847141970017375815706539969331281128078915168015826259279880, to : 231584178474632390847141970017375815706539969331281128078915168015826259279873, value : 115792089237316195423570985008687907853269984665640564039457584007913129639935});
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((((from_s1322 != to_s1322 && ((value_s1322 > _balances_HxERC20[this][from_s1322] || value_s1322 > _allowed_HxERC20[this][from_s1322][msgsender_MSG]) || _balances_HxERC20[this][to_s1322] + value_s1322 >= 115792089237316195423570985008687907853269984665640564039457584007913129639936)) && value_s1322 >= 0) && value_s1322 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_HxERC20[this][to_s1322] >= 0) && _balances_HxERC20[this][to_s1322] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_HxERC20[this][from_s1322] >= 0) && _balances_HxERC20[this][from_s1322] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowed_HxERC20[this][from_s1322][msgsender_MSG] >= 0) && _allowed_HxERC20[this][from_s1322][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transferFrom_BLY0 := true;
[L2]                 call_transferFrom_BLY0 := false;
[L2]                 revert := revert_hold;
[L959]               havoc __exception;
[L960]               revert := false;
[L961]   COND FALSE  !(__exception)
[L997]   CALL        call __ret_0_ := transferFrom~address~address~uint256_BLY__success(this, msgsender_MSG, msgvalue_MSG, from_s1322, to_s1322, value_s1322);
[L2370]  CALL        call notFrozen_pre__success(this, msgsender_MSG, msgvalue_MSG, from_s1322);
[L3578]  COND FALSE  !(!!frozenAccount_BLY[this][_holder_s1185])
[L2370]  RET         call notFrozen_pre__success(this, msgsender_MSG, msgvalue_MSG, from_s1322);
[L2371]  COND FALSE  !(revert)
[L2374]  COND FALSE  !(alloc_timelockList_BLY_lvl0[timelockList_BLY[this]][from_s1322] == false)
[L2385]  COND TRUE   Length[M_Ref_Ref[timelockList_BLY[this]][from_s1322]] > 0
[L2386]  CALL        call __var_23 := _autoUnlock~address_BLY__success(this, msgsender_MSG, msgvalue_MSG, from_s1322);
[L2653]  COND FALSE  !(alloc_timelockList_BLY_lvl0[timelockList_BLY[this]][holder_s1645] == false)
[L2664]              idx_s1645 := 0;
[L2665]  COND TRUE   idx_s1645 < Length[M_Ref_Ref[timelockList_BLY[this]][holder_s1645]]
[L2667]  COND FALSE  !(alloc_timelockList_BLY_lvl0[timelockList_BLY[this]][holder_s1645] == false)
[L2678]  COND TRUE   _releaseTime_BLY.LockInfo[M_int_Ref[M_Ref_Ref[timelockList_BLY[this]][holder_s1645]][idx_s1645]] <= now
[L2679]  CALL        call __var_36 := _unlock~address~uint256_BLY__success(this, msgsender_MSG, msgvalue_MSG, holder_s1645, idx_s1645);
[L2512]  COND FALSE  !(alloc_timelockList_BLY_lvl0[timelockList_BLY[this]][holder_s1600] == false)
[L2523]              lockinfo_s1600 := M_int_Ref[M_Ref_Ref[timelockList_BLY[this]][holder_s1600]][idx_s1600];
[L2524]              releaseAmount_s1600 := _amount_BLY.LockInfo[lockinfo_s1600];
[L2525]  COND FALSE  !(alloc_timelockList_BLY_lvl0[timelockList_BLY[this]][holder_s1600] == false)
[L2536]  COND FALSE  !(alloc_timelockList_BLY_lvl0[timelockList_BLY[this]][holder_s1600] == false)
[L2547]  COND FALSE  !(alloc_timelockList_BLY_lvl0[timelockList_BLY[this]][holder_s1600] == false)
[L2558]  CALL        call __var_29 := sub~uint256~uint256_HxSafeMath__success(this, this, 0, Length[M_Ref_Ref[timelockList_BLY[this]][holder_s1600]], 1);
[L1679]  COND FALSE  !(!(b_s82 <= a_s82))
[L1683]              c_s82 := (a_s82 - b_s82) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1684]              __ret_0_ := c_s82;
[L2558]  RET         call __var_29 := sub~uint256~uint256_HxSafeMath__success(this, this, 0, Length[M_Ref_Ref[timelockList_BLY[this]][holder_s1600]], 1);
[L2559]  COND FALSE  !(revert)
[L2562]  COND FALSE  !(alloc_timelockList_BLY_lvl0[timelockList_BLY[this]][holder_s1600] == false)
[L2573]              M_int_Ref[M_Ref_Ref[timelockList_BLY[this]][holder_s1600]][idx_s1600] := M_int_Ref[M_Ref_Ref[timelockList_BLY[this]][holder_s1600]][__var_29];
[L2574]  COND FALSE  !(alloc_timelockList_BLY_lvl0[timelockList_BLY[this]][holder_s1600] == false)
[L2585]              Length[M_Ref_Ref[timelockList_BLY[this]][holder_s1600]] := (Length[M_Ref_Ref[timelockList_BLY[this]][holder_s1600]] - 1) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2586]              assert { :EventEmitted "Unlock_BLY" } true;
[L2587]  CALL        call __var_33 := add~uint256~uint256_HxSafeMath__success(this, this, 0, _balances_HxERC20[this][holder_s1600], releaseAmount_s1600);
[L1703]              c_s106 := (a_s106 + b_s106) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1704]  COND FALSE  !(!(c_s106 >= a_s106))
[L1708]              __ret_0_ := c_s106;
[L2587]  RET         call __var_33 := add~uint256~uint256_HxSafeMath__success(this, this, 0, _balances_HxERC20[this][holder_s1600], releaseAmount_s1600);
[L2588]  COND FALSE  !(revert)
[L2591]              sum__balances0[this] := sum__balances0[this] - _balances_HxERC20[this][holder_s1600];
[L2592]              _balances_HxERC20[this][holder_s1600] := __var_33;
[L2593]              sum__balances0[this] := sum__balances0[this] + _balances_HxERC20[this][holder_s1600];
[L2594]              __ret_0_ := true;
[L2679]  RET         call __var_36 := _unlock~address~uint256_BLY__success(this, msgsender_MSG, msgvalue_MSG, holder_s1645, idx_s1645);
[L2680]  COND FALSE  !(revert)
[L2683]  COND TRUE   __var_36
[L2684]              idx_s1645 := (idx_s1645 - 1) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2687]              idx_s1645 := (idx_s1645 + 1) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2688]  COND FALSE  !(gas < 0)
[L2665]  COND FALSE  !(idx_s1645 < Length[M_Ref_Ref[timelockList_BLY[this]][holder_s1645]])
[L2692]              __ret_0_ := true;
[L2386]  RET         call __var_23 := _autoUnlock~address_BLY__success(this, msgsender_MSG, msgvalue_MSG, from_s1322);
[L2387]  COND FALSE  !(revert)
[L2391]  COND TRUE   DType[this] == BLY
[L2392]  CALL        call __var_24 := transferFrom~address~address~uint256_ERC20Pausable__success(this, msgsender_MSG, msgvalue_MSG, from_s1322, to_s1322, value_s1322);
[L2088]  CALL        call whenNotPaused_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L3554]  COND FALSE  !(!!_paused_Pausable[this])
[L2088]  RET         call whenNotPaused_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L2089]  COND FALSE  !(revert)
[L2092]  COND TRUE   DType[this] == BLY
[L2093]  CALL        call __var_11 := transferFrom~address~address~uint256_HxERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s1074, to_s1074, value_s1074);
[L1926]  CALL        call __var_5 := sub~uint256~uint256_HxSafeMath__success(this, this, 0, _allowed_HxERC20[this][from_s760][msgsender_MSG], value_s760);
[L1679]  COND FALSE  !(!(b_s82 <= a_s82))
[L1683]              c_s82 := (a_s82 - b_s82) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1684]              __ret_0_ := c_s82;
[L1926]  RET         call __var_5 := sub~uint256~uint256_HxSafeMath__success(this, this, 0, _allowed_HxERC20[this][from_s760][msgsender_MSG], value_s760);
[L1927]  COND FALSE  !(revert)
[L1930]              sum__allowed1[from_s760] := sum__allowed1[from_s760] - _allowed_HxERC20[this][from_s760][msgsender_MSG];
[L1931]              _allowed_HxERC20[this][from_s760][msgsender_MSG] := __var_5;
[L1932]              sum__allowed1[from_s760] := sum__allowed1[from_s760] + _allowed_HxERC20[this][from_s760][msgsender_MSG];
[L1933]  COND TRUE   DType[this] == BLY
[L1934]  CALL        call _transfer~address~address~uint256_HxERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s760, to_s760, value_s760);
[L1987]              __var_6 := null;
[L1988]  COND FALSE  !(!(to_s904 != null))
[L1992]  CALL        call __var_7 := sub~uint256~uint256_HxSafeMath__success(this, this, 0, _balances_HxERC20[this][from_s904], value_s904);
[L1679]  COND FALSE  !(!(b_s82 <= a_s82))
[L1683]              c_s82 := (a_s82 - b_s82) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1684]              __ret_0_ := c_s82;
[L1992]  RET         call __var_7 := sub~uint256~uint256_HxSafeMath__success(this, this, 0, _balances_HxERC20[this][from_s904], value_s904);
[L1993]  COND FALSE  !(revert)
[L1996]              sum__balances0[this] := sum__balances0[this] - _balances_HxERC20[this][from_s904];
[L1997]              _balances_HxERC20[this][from_s904] := __var_7;
[L1998]              sum__balances0[this] := sum__balances0[this] + _balances_HxERC20[this][from_s904];
[L1999]  CALL        call __var_8 := add~uint256~uint256_HxSafeMath__success(this, this, 0, _balances_HxERC20[this][to_s904], value_s904);
[L1703]              c_s106 := (a_s106 + b_s106) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1704]  COND FALSE  !(!(c_s106 >= a_s106))
[L1708]              __ret_0_ := c_s106;
[L1999]  RET         call __var_8 := add~uint256~uint256_HxSafeMath__success(this, this, 0, _balances_HxERC20[this][to_s904], value_s904);
[L2000]  COND FALSE  !(revert)
[L2003]              sum__balances0[this] := sum__balances0[this] - _balances_HxERC20[this][to_s904];
[L2004]              _balances_HxERC20[this][to_s904] := __var_8;
[L2005]              sum__balances0[this] := sum__balances0[this] + _balances_HxERC20[this][to_s904];
[L2006]              assert { :EventEmitted "Transfer_HxERC20" } true;
[L1934]  RET         call _transfer~address~address~uint256_HxERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s760, to_s760, value_s760);
[L1935]  COND FALSE  !(revert)
[L1951]              assert { :EventEmitted "Approval_HxERC20" } true;
[L1952]              __ret_0_ := true;
[L2093]  RET         call __var_11 := transferFrom~address~address~uint256_HxERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s1074, to_s1074, value_s1074);
[L2094]  COND FALSE  !(revert)
[L2105]              __ret_0_ := __var_11;
[L2392]  RET         call __var_24 := transferFrom~address~address~uint256_ERC20Pausable__success(this, msgsender_MSG, msgvalue_MSG, from_s1322, to_s1322, value_s1322);
[L2393]  COND FALSE  !(revert)
[L2399]              __ret_0_ := __var_24;
[L997]   RET         call __ret_0_ := transferFrom~address~address~uint256_BLY__success(this, msgsender_MSG, msgvalue_MSG, from_s1322, to_s1322, value_s1322);
[L998]               assume !revert && gas >= 0;
[L4359]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_BLY(this, msgsender_MSG, msgvalue_MSG, from_s1322, to_s1322, value_s1322);

Loop:

End of lasso representation.
RESULT: Ultimate could not prove your program: Toolchain returned no result.
Received shutdown request...
