This is Ultimate 0.1.24-f1553f5-m
[2020-11-24 15:36:14,600 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-24 15:36:14,601 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-24 15:36:14,613 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-24 15:36:14,614 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-24 15:36:14,614 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-24 15:36:14,615 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-24 15:36:14,617 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-24 15:36:14,618 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-24 15:36:14,619 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-24 15:36:14,620 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-24 15:36:14,620 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-24 15:36:14,621 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-24 15:36:14,622 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-24 15:36:14,623 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-24 15:36:14,623 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-24 15:36:14,624 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-24 15:36:14,625 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-24 15:36:14,626 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-24 15:36:14,628 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-24 15:36:14,628 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-24 15:36:14,629 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-24 15:36:14,631 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-24 15:36:14,631 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-24 15:36:14,631 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-24 15:36:14,632 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-24 15:36:14,632 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-24 15:36:14,633 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-24 15:36:14,633 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-24 15:36:14,633 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-24 15:36:14,634 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-24 15:36:14,634 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-24 15:36:14,635 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-24 15:36:14,635 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-24 15:36:14,636 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-24 15:36:14,636 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-24 15:36:14,637 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-24 15:36:14,637 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-24 15:36:14,637 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-24 15:36:14,638 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-24 15:36:14,638 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-24 15:36:14,638 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-24 15:36:14,647 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-24 15:36:14,647 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-24 15:36:14,648 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-24 15:36:14,648 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-24 15:36:14,648 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-24 15:36:14,648 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-24 15:36:14,648 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-24 15:36:14,648 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-24 15:36:14,649 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-24 15:36:14,649 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-24 15:36:14,649 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-24 15:36:14,649 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-24 15:36:14,649 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-24 15:36:14,649 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-24 15:36:14,649 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-24 15:36:14,649 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-24 15:36:14,649 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-24 15:36:14,650 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-24 15:36:14,650 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-24 15:36:14,650 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-24 15:36:14,650 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-24 15:36:14,650 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-24 15:36:14,650 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-24 15:36:14,650 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-24 15:36:14,650 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-24 15:36:14,650 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-24 15:36:14,674 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-24 15:36:14,685 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-24 15:36:14,687 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-24 15:36:14,689 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-24 15:36:14,689 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-24 15:36:14,690 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/AssembleToken_0x2565ae0385659badcada1031db704442e1b69982_transfer-normal.bpl
[2020-11-24 15:36:14,690 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/AssembleToken_0x2565ae0385659badcada1031db704442e1b69982_transfer-normal.bpl'
[2020-11-24 15:36:14,763 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-24 15:36:14,765 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-24 15:36:14,765 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-24 15:36:14,765 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-24 15:36:14,765 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-24 15:36:14,782 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "AssembleToken_0x2565ae0385659badcada1031db704442e1b69982_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 03:36:14" (1/1) ...
[2020-11-24 15:36:14,783 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "AssembleToken_0x2565ae0385659badcada1031db704442e1b69982_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 03:36:14" (1/1) ...
[2020-11-24 15:36:14,806 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "AssembleToken_0x2565ae0385659badcada1031db704442e1b69982_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 03:36:14" (1/1) ...
[2020-11-24 15:36:14,807 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "AssembleToken_0x2565ae0385659badcada1031db704442e1b69982_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 03:36:14" (1/1) ...
[2020-11-24 15:36:14,824 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "AssembleToken_0x2565ae0385659badcada1031db704442e1b69982_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 03:36:14" (1/1) ...
[2020-11-24 15:36:14,831 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "AssembleToken_0x2565ae0385659badcada1031db704442e1b69982_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 03:36:14" (1/1) ...
[2020-11-24 15:36:14,836 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "AssembleToken_0x2565ae0385659badcada1031db704442e1b69982_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 03:36:14" (1/1) ...
[2020-11-24 15:36:14,843 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-24 15:36:14,844 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-24 15:36:14,844 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-24 15:36:14,846 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-24 15:36:14,850 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "AssembleToken_0x2565ae0385659badcada1031db704442e1b69982_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 03:36:14" (1/1) ...
[2020-11-24 15:36:14,875 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(AssembleToken.transfer(to, value), p1 != msg.sender && p1 != to && msg.sender != to && value <= balances_AssembleToken[this][msg.sender] && balances_AssembleToken[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_AssembleToken[this][to] >= 0 && balances_AssembleToken[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_AssembleToken[this][msg.sender] >= 0 &&  balances_AssembleToken[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(AssembleToken.transfer(to, value), return == true && balances_AssembleToken[this][msg.sender] == old(balances_AssembleToken[this][msg.sender]) - value && balances_AssembleToken[this][to] == old(balances_AssembleToken[this][to]) + value && totalTokenSupply_AssembleToken[this] == old(totalTokenSupply_AssembleToken[this]) && approvals_AssembleToken[this] == old(approvals_AssembleToken[this]) && balances_AssembleToken[this][p1] == old(balances_AssembleToken[this][p1]) && name_AssembleToken[this] == old(name_AssembleToken[this]) && decimals_AssembleToken[this] == old(decimals_AssembleToken[this]) && symbol_AssembleToken[this] == old(symbol_AssembleToken[this]) && tokenIssuedSale_AssembleToken[this] == old(tokenIssuedSale_AssembleToken[this]) && tokenIssuedSP_AssembleToken[this] == old(tokenIssuedSP_AssembleToken[this]) && tokenIssuedEco_AssembleToken[this] == old(tokenIssuedEco_AssembleToken[this]) && tokenIssuedMkt_AssembleToken[this] == old(tokenIssuedMkt_AssembleToken[this]) && tokenIssuedDev_AssembleToken[this] == old(tokenIssuedDev_AssembleToken[this]) && tokenIssuedRsv_AssembleToken[this] == old(tokenIssuedRsv_AssembleToken[this]) && tokenIssuedTeam_AssembleToken[this] == old(tokenIssuedTeam_AssembleToken[this]) && tokenIssuedAdv_AssembleToken[this] == old(tokenIssuedAdv_AssembleToken[this]) && burnTokenSupply_AssembleToken[this] == old(burnTokenSupply_AssembleToken[this]) && tmVestingTimer_AssembleToken[this] == old(tmVestingTimer_AssembleToken[this]) && tmVestingBalances_AssembleToken[this] == old(tmVestingBalances_AssembleToken[this]) && advVestingTimer_AssembleToken[this] == old(advVestingTimer_AssembleToken[this]) && advVestingBalances_AssembleToken[this] == old(advVestingBalances_AssembleToken[this]) && tokenLock_AssembleToken[this] == old(tokenLock_AssembleToken[this]) && saleTime_AssembleToken[this] == old(saleTime_AssembleToken[this]) && endSaleTime_AssembleToken[this] == old(endSaleTime_AssembleToken[this]) && owner_OwnerHelper[this] == old(owner_OwnerHelper[this]))))
[2020-11-24 15:36:14,880 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(AssembleToken.transfer(to, value), p1 != msg.sender && p1 != to && msg.sender != to && value <= balances_AssembleToken[this][msg.sender] && balances_AssembleToken[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_AssembleToken[this][to] >= 0 && balances_AssembleToken[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_AssembleToken[this][msg.sender] >= 0 &&  balances_AssembleToken[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(AssembleToken.transfer(to, value), return == true && balances_AssembleToken[this][msg.sender] == old(balances_AssembleToken[this][msg.sender]) - value && balances_AssembleToken[this][to] == old(balances_AssembleToken[this][to]) + value && totalTokenSupply_AssembleToken[this] == old(totalTokenSupply_AssembleToken[this]) && approvals_AssembleToken[this] == old(approvals_AssembleToken[this]) && balances_AssembleToken[this][p1] == old(balances_AssembleToken[this][p1]) && name_AssembleToken[this] == old(name_AssembleToken[this]) && decimals_AssembleToken[this] == old(decimals_AssembleToken[this]) && symbol_AssembleToken[this] == old(symbol_AssembleToken[this]) && tokenIssuedSale_AssembleToken[this] == old(tokenIssuedSale_AssembleToken[this]) && tokenIssuedSP_AssembleToken[this] == old(tokenIssuedSP_AssembleToken[this]) && tokenIssuedEco_AssembleToken[this] == old(tokenIssuedEco_AssembleToken[this]) && tokenIssuedMkt_AssembleToken[this] == old(tokenIssuedMkt_AssembleToken[this]) && tokenIssuedDev_AssembleToken[this] == old(tokenIssuedDev_AssembleToken[this]) && tokenIssuedRsv_AssembleToken[this] == old(tokenIssuedRsv_AssembleToken[this]) && tokenIssuedTeam_AssembleToken[this] == old(tokenIssuedTeam_AssembleToken[this]) && tokenIssuedAdv_AssembleToken[this] == old(tokenIssuedAdv_AssembleToken[this]) && burnTokenSupply_AssembleToken[this] == old(burnTokenSupply_AssembleToken[this]) && tmVestingTimer_AssembleToken[this] == old(tmVestingTimer_AssembleToken[this]) && tmVestingBalances_AssembleToken[this] == old(tmVestingBalances_AssembleToken[this]) && advVestingTimer_AssembleToken[this] == old(advVestingTimer_AssembleToken[this]) && advVestingBalances_AssembleToken[this] == old(advVestingBalances_AssembleToken[this]) && tokenLock_AssembleToken[this] == old(tokenLock_AssembleToken[this]) && saleTime_AssembleToken[this] == old(saleTime_AssembleToken[this]) && endSaleTime_AssembleToken[this] == old(endSaleTime_AssembleToken[this]) && owner_OwnerHelper[this] == old(owner_OwnerHelper[this]))))
[2020-11-24 15:36:14,889 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(AssembleToken.transfer(to, value), p1 != msg.sender && p1 != to && msg.sender != to && value <= balances_AssembleToken[this][msg.sender] && balances_AssembleToken[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_AssembleToken[this][to] >= 0 && balances_AssembleToken[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_AssembleToken[this][msg.sender] >= 0 &&  balances_AssembleToken[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(AssembleToken.transfer(to, value), return == true && balances_AssembleToken[this][msg.sender] == old(balances_AssembleToken[this][msg.sender]) - value && balances_AssembleToken[this][to] == old(balances_AssembleToken[this][to]) + value && totalTokenSupply_AssembleToken[this] == old(totalTokenSupply_AssembleToken[this]) && approvals_AssembleToken[this] == old(approvals_AssembleToken[this]) && balances_AssembleToken[this][p1] == old(balances_AssembleToken[this][p1]) && name_AssembleToken[this] == old(name_AssembleToken[this]) && decimals_AssembleToken[this] == old(decimals_AssembleToken[this]) && symbol_AssembleToken[this] == old(symbol_AssembleToken[this]) && tokenIssuedSale_AssembleToken[this] == old(tokenIssuedSale_AssembleToken[this]) && tokenIssuedSP_AssembleToken[this] == old(tokenIssuedSP_AssembleToken[this]) && tokenIssuedEco_AssembleToken[this] == old(tokenIssuedEco_AssembleToken[this]) && tokenIssuedMkt_AssembleToken[this] == old(tokenIssuedMkt_AssembleToken[this]) && tokenIssuedDev_AssembleToken[this] == old(tokenIssuedDev_AssembleToken[this]) && tokenIssuedRsv_AssembleToken[this] == old(tokenIssuedRsv_AssembleToken[this]) && tokenIssuedTeam_AssembleToken[this] == old(tokenIssuedTeam_AssembleToken[this]) && tokenIssuedAdv_AssembleToken[this] == old(tokenIssuedAdv_AssembleToken[this]) && burnTokenSupply_AssembleToken[this] == old(burnTokenSupply_AssembleToken[this]) && tmVestingTimer_AssembleToken[this] == old(tmVestingTimer_AssembleToken[this]) && tmVestingBalances_AssembleToken[this] == old(tmVestingBalances_AssembleToken[this]) && advVestingTimer_AssembleToken[this] == old(advVestingTimer_AssembleToken[this]) && advVestingBalances_AssembleToken[this] == old(advVestingBalances_AssembleToken[this]) && tokenLock_AssembleToken[this] == old(tokenLock_AssembleToken[this]) && saleTime_AssembleToken[this] == old(saleTime_AssembleToken[this]) && endSaleTime_AssembleToken[this] == old(endSaleTime_AssembleToken[this]) && owner_OwnerHelper[this] == old(owner_OwnerHelper[this]))))
[2020-11-24 15:36:14,895 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( ( ( p1!=msg.sender && p1!=_to_s632 ) && msg.sender!=_to_s632 ) && _value_s632<=balances_AssembleToken[this][msg.sender] ) && ( balances_AssembleToken[this][_to_s632] + _value_s632 )<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && _value_s632>=0 ) && _value_s632<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && balances_AssembleToken[this][_to_s632]>=0 ) && balances_AssembleToken[this][_to_s632]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && balances_AssembleToken[this][msg.sender]>=0 ) && balances_AssembleToken[this][msg.sender]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPNEQ,IdentifierExpression[p1,GLOBAL],IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_AssembleToken>]],BinaryExpression[COMPNEQ,IdentifierExpression[p1,GLOBAL],IdentifierExpression[_to_s632,<IMPLEMENTATION_INPARAM,transfer~address~uint256_AssembleToken>]]],BinaryExpression[COMPNEQ,IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_AssembleToken>],IdentifierExpression[_to_s632,<IMPLEMENTATION_INPARAM,transfer~address~uint256_AssembleToken>]]],BinaryExpression[COMPLEQ,IdentifierExpression[_value_s632,<IMPLEMENTATION_INPARAM,transfer~address~uint256_AssembleToken>],ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_AssembleToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_AssembleToken>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_AssembleToken>]]]]],BinaryExpression[COMPLT,BinaryExpression[ARITHPLUS,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_AssembleToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_AssembleToken>]]],[IdentifierExpression[_to_s632,<IMPLEMENTATION_INPARAM,transfer~address~uint256_AssembleToken>]]],IdentifierExpression[_value_s632,<IMPLEMENTATION_INPARAM,transfer~address~uint256_AssembleToken>]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,IdentifierExpression[_value_s632,<IMPLEMENTATION_INPARAM,transfer~address~uint256_AssembleToken>],IntegerLiteral[0]]],BinaryExpression[COMPLT,IdentifierExpression[_value_s632,<IMPLEMENTATION_INPARAM,transfer~address~uint256_AssembleToken>],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_AssembleToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_AssembleToken>]]],[IdentifierExpression[_to_s632,<IMPLEMENTATION_INPARAM,transfer~address~uint256_AssembleToken>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_AssembleToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_AssembleToken>]]],[IdentifierExpression[_to_s632,<IMPLEMENTATION_INPARAM,transfer~address~uint256_AssembleToken>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_AssembleToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_AssembleToken>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_AssembleToken>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_AssembleToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_AssembleToken>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_AssembleToken>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]]
[2020-11-24 15:36:14,899 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( __ret_0_==true && balances_AssembleToken[this][msg.sender]==( ( old(balances_AssembleToken[this][msg.sender]) ) - _value_s632 ) ) && balances_AssembleToken[this][_to_s632]==( ( old(balances_AssembleToken[this][_to_s632]) ) + _value_s632 ) ) && totalTokenSupply_AssembleToken[this]==( old(totalTokenSupply_AssembleToken[this]) ) ) && approvals_AssembleToken[this]==( old(approvals_AssembleToken[this]) ) ) && balances_AssembleToken[this][p1]==( old(balances_AssembleToken[this][p1]) ) ) && name_AssembleToken[this]==( old(name_AssembleToken[this]) ) ) && decimals_AssembleToken[this]==( old(decimals_AssembleToken[this]) ) ) && symbol_AssembleToken[this]==( old(symbol_AssembleToken[this]) ) ) && tokenIssuedSale_AssembleToken[this]==( old(tokenIssuedSale_AssembleToken[this]) ) ) && tokenIssuedSP_AssembleToken[this]==( old(tokenIssuedSP_AssembleToken[this]) ) ) && tokenIssuedEco_AssembleToken[this]==( old(tokenIssuedEco_AssembleToken[this]) ) ) && tokenIssuedMkt_AssembleToken[this]==( old(tokenIssuedMkt_AssembleToken[this]) ) ) && tokenIssuedDev_AssembleToken[this]==( old(tokenIssuedDev_AssembleToken[this]) ) ) && tokenIssuedRsv_AssembleToken[this]==( old(tokenIssuedRsv_AssembleToken[this]) ) ) && tokenIssuedTeam_AssembleToken[this]==( old(tokenIssuedTeam_AssembleToken[this]) ) ) && tokenIssuedAdv_AssembleToken[this]==( old(tokenIssuedAdv_AssembleToken[this]) ) ) && burnTokenSupply_AssembleToken[this]==( old(burnTokenSupply_AssembleToken[this]) ) ) && tmVestingTimer_AssembleToken[this]==( old(tmVestingTimer_AssembleToken[this]) ) ) && tmVestingBalances_AssembleToken[this]==( old(tmVestingBalances_AssembleToken[this]) ) ) && advVestingTimer_AssembleToken[this]==( old(advVestingTimer_AssembleToken[this]) ) ) && advVestingBalances_AssembleToken[this]==( old(advVestingBalances_AssembleToken[this]) ) ) && tokenLock_AssembleToken[this]==( old(tokenLock_AssembleToken[this]) ) ) && saleTime_AssembleToken[this]==( old(saleTime_AssembleToken[this]) ) ) && endSaleTime_AssembleToken[this]==( old(endSaleTime_AssembleToken[this]) ) ) && owner_OwnerHelper[this]==( old(owner_OwnerHelper[this]) ) ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[__ret_0_,<IMPLEMENTATION_OUTPARAM,transfer~address~uint256_AssembleToken>],BooleanLiteral[true]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_AssembleToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_AssembleToken>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_AssembleToken>]]],BinaryExpression[ARITHMINUS,UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_AssembleToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_AssembleToken>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_AssembleToken>]]]],IdentifierExpression[_value_s632,<IMPLEMENTATION_INPARAM,transfer~address~uint256_AssembleToken>]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_AssembleToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_AssembleToken>]]],[IdentifierExpression[_to_s632,<IMPLEMENTATION_INPARAM,transfer~address~uint256_AssembleToken>]]],BinaryExpression[ARITHPLUS,UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_AssembleToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_AssembleToken>]]],[IdentifierExpression[_to_s632,<IMPLEMENTATION_INPARAM,transfer~address~uint256_AssembleToken>]]]],IdentifierExpression[_value_s632,<IMPLEMENTATION_INPARAM,transfer~address~uint256_AssembleToken>]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[totalTokenSupply_AssembleToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_AssembleToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[totalTokenSupply_AssembleToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_AssembleToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[approvals_AssembleToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_AssembleToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[approvals_AssembleToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_AssembleToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_AssembleToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_AssembleToken>]]],[IdentifierExpression[p1,GLOBAL]]],UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_AssembleToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_AssembleToken>]]],[IdentifierExpression[p1,GLOBAL]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[name_AssembleToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_AssembleToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[name_AssembleToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_AssembleToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[decimals_AssembleToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_AssembleToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[decimals_AssembleToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_AssembleToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[symbol_AssembleToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_AssembleToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[symbol_AssembleToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_AssembleToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[tokenIssuedSale_AssembleToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_AssembleToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[tokenIssuedSale_AssembleToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_AssembleToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[tokenIssuedSP_AssembleToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_AssembleToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[tokenIssuedSP_AssembleToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_AssembleToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[tokenIssuedEco_AssembleToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_AssembleToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[tokenIssuedEco_AssembleToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_AssembleToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[tokenIssuedMkt_AssembleToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_AssembleToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[tokenIssuedMkt_AssembleToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_AssembleToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[tokenIssuedDev_AssembleToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_AssembleToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[tokenIssuedDev_AssembleToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_AssembleToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[tokenIssuedRsv_AssembleToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_AssembleToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[tokenIssuedRsv_AssembleToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_AssembleToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[tokenIssuedTeam_AssembleToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_AssembleToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[tokenIssuedTeam_AssembleToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_AssembleToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[tokenIssuedAdv_AssembleToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_AssembleToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[tokenIssuedAdv_AssembleToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_AssembleToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[burnTokenSupply_AssembleToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_AssembleToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[burnTokenSupply_AssembleToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_AssembleToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[tmVestingTimer_AssembleToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_AssembleToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[tmVestingTimer_AssembleToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_AssembleToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[tmVestingBalances_AssembleToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_AssembleToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[tmVestingBalances_AssembleToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_AssembleToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[advVestingTimer_AssembleToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_AssembleToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[advVestingTimer_AssembleToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_AssembleToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[advVestingBalances_AssembleToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_AssembleToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[advVestingBalances_AssembleToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_AssembleToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[tokenLock_AssembleToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_AssembleToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[tokenLock_AssembleToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_AssembleToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[saleTime_AssembleToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_AssembleToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[saleTime_AssembleToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_AssembleToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[endSaleTime_AssembleToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_AssembleToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[endSaleTime_AssembleToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_AssembleToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[owner_OwnerHelper,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_AssembleToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[owner_OwnerHelper,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_AssembleToken>]]]]]]
[2020-11-24 15:36:14,902 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(AssembleToken.transfer(to, value), p1 != msg.sender && p1 != to && msg.sender != to && value <= balances_AssembleToken[this][msg.sender] && balances_AssembleToken[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_AssembleToken[this][to] >= 0 && balances_AssembleToken[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_AssembleToken[this][msg.sender] >= 0 &&  balances_AssembleToken[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(AssembleToken.transfer(to, value), return == true && balances_AssembleToken[this][msg.sender] == old(balances_AssembleToken[this][msg.sender]) - value && balances_AssembleToken[this][to] == old(balances_AssembleToken[this][to]) + value && totalTokenSupply_AssembleToken[this] == old(totalTokenSupply_AssembleToken[this]) && approvals_AssembleToken[this] == old(approvals_AssembleToken[this]) && balances_AssembleToken[this][p1] == old(balances_AssembleToken[this][p1]) && name_AssembleToken[this] == old(name_AssembleToken[this]) && decimals_AssembleToken[this] == old(decimals_AssembleToken[this]) && symbol_AssembleToken[this] == old(symbol_AssembleToken[this]) && tokenIssuedSale_AssembleToken[this] == old(tokenIssuedSale_AssembleToken[this]) && tokenIssuedSP_AssembleToken[this] == old(tokenIssuedSP_AssembleToken[this]) && tokenIssuedEco_AssembleToken[this] == old(tokenIssuedEco_AssembleToken[this]) && tokenIssuedMkt_AssembleToken[this] == old(tokenIssuedMkt_AssembleToken[this]) && tokenIssuedDev_AssembleToken[this] == old(tokenIssuedDev_AssembleToken[this]) && tokenIssuedRsv_AssembleToken[this] == old(tokenIssuedRsv_AssembleToken[this]) && tokenIssuedTeam_AssembleToken[this] == old(tokenIssuedTeam_AssembleToken[this]) && tokenIssuedAdv_AssembleToken[this] == old(tokenIssuedAdv_AssembleToken[this]) && burnTokenSupply_AssembleToken[this] == old(burnTokenSupply_AssembleToken[this]) && tmVestingTimer_AssembleToken[this] == old(tmVestingTimer_AssembleToken[this]) && tmVestingBalances_AssembleToken[this] == old(tmVestingBalances_AssembleToken[this]) && advVestingTimer_AssembleToken[this] == old(advVestingTimer_AssembleToken[this]) && advVestingBalances_AssembleToken[this] == old(advVestingBalances_AssembleToken[this]) && tokenLock_AssembleToken[this] == old(tokenLock_AssembleToken[this]) && saleTime_AssembleToken[this] == old(saleTime_AssembleToken[this]) && endSaleTime_AssembleToken[this] == old(endSaleTime_AssembleToken[this]) && owner_OwnerHelper[this] == old(owner_OwnerHelper[this]))))
[2020-11-24 15:36:14,902 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_transfer_AssembleToken0) ==> ( <>AP(success_transfer_AssembleToken0) ) ) )
Executed UtopiaSpecLang
[2020-11-24 15:36:14,909 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 03:36:14 PropertyContainer
[2020-11-24 15:36:14,909 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-24 15:36:14,909 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-24 15:36:14,909 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-24 15:36:14,910 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-24 15:36:14,910 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "AssembleToken_0x2565ae0385659badcada1031db704442e1b69982_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 03:36:14" (1/2) ...
[2020-11-24 15:36:14,911 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-24 15:36:14,911 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-24 15:36:14,921 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 03:36:14" (2/2) ...
[2020-11-24 15:36:14,921 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-24 15:36:14,922 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-24 15:36:14,922 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-24 15:36:14,922 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-24 15:36:14,922 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "AssembleToken_0x2565ae0385659badcada1031db704442e1b69982_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 03:36:14" (1/2) ...
[2020-11-24 15:36:14,979 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-24 15:36:14,979 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__success
[2020-11-24 15:36:14,980 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__success
[2020-11-24 15:36:14,980 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_AssembleToken
[2020-11-24 15:36:14,980 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_AssembleToken
[2020-11-24 15:36:14,980 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_AssembleToken
[2020-11-24 15:36:14,980 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_AssembleToken
[2020-11-24 15:36:14,980 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_AssembleToken
[2020-11-24 15:36:14,980 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_AssembleToken
[2020-11-24 15:36:14,980 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_AssembleToken
[2020-11-24 15:36:14,980 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_AssembleToken
[2020-11-24 15:36:14,980 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_AssembleToken
[2020-11-24 15:36:14,980 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_AssembleToken
[2020-11-24 15:36:14,981 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_AssembleToken
[2020-11-24 15:36:14,981 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_AssembleToken
[2020-11-24 15:36:14,981 INFO  L130     BoogieDeclarations]: Found specification of procedure isTransferable_AssembleToken__success
[2020-11-24 15:36:14,981 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-24 15:36:14,981 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-24 15:36:14,981 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-24 15:36:14,981 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__success
[2020-11-24 15:36:14,981 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_SafeMath
[2020-11-24 15:36:14,981 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_SafeMath
[2020-11-24 15:36:14,981 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_OwnerHelper
[2020-11-24 15:36:14,981 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_OwnerHelper
[2020-11-24 15:36:14,981 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20Interface
[2020-11-24 15:36:14,982 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20Interface
[2020-11-24 15:36:14,982 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_AssembleToken
[2020-11-24 15:36:14,982 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-24 15:36:14,982 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-24 15:36:14,982 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-24 15:36:14,982 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__fail
[2020-11-24 15:36:14,982 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_AssembleToken__success
[2020-11-24 15:36:14,982 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_AssembleToken__fail
[2020-11-24 15:36:14,982 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_AssembleToken__success
[2020-11-24 15:36:14,982 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_AssembleToken__fail
[2020-11-24 15:36:14,982 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_AssembleToken__success
[2020-11-24 15:36:14,983 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_AssembleToken__fail
[2020-11-24 15:36:14,983 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_AssembleToken__success
[2020-11-24 15:36:14,983 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_AssembleToken__fail
[2020-11-24 15:36:14,983 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_AssembleToken__success
[2020-11-24 15:36:14,983 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_AssembleToken__fail
[2020-11-24 15:36:14,983 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_AssembleToken__success
[2020-11-24 15:36:14,983 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_AssembleToken__fail
[2020-11-24 15:36:14,983 INFO  L130     BoogieDeclarations]: Found specification of procedure isTransferable_AssembleToken__fail
[2020-11-24 15:36:14,983 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-24 15:36:14,983 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-24 15:36:14,983 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-24 15:36:14,983 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__fail
[2020-11-24 15:36:14,984 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-24 15:36:14,984 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-24 15:36:14,984 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-24 15:36:14,984 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__success
[2020-11-24 15:36:14,984 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__fail
[2020-11-24 15:36:14,984 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__success
[2020-11-24 15:36:14,984 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_AssembleToken__fail
[2020-11-24 15:36:14,984 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_AssembleToken__success
[2020-11-24 15:36:14,984 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_AssembleToken__fail
[2020-11-24 15:36:14,984 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_AssembleToken__success
[2020-11-24 15:36:14,984 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_AssembleToken__fail
[2020-11-24 15:36:14,984 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_AssembleToken__success
[2020-11-24 15:36:14,985 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_AssembleToken__fail
[2020-11-24 15:36:14,985 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_AssembleToken__success
[2020-11-24 15:36:14,985 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_AssembleToken__fail
[2020-11-24 15:36:14,985 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_AssembleToken__success
[2020-11-24 15:36:14,985 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_AssembleToken__fail
[2020-11-24 15:36:14,985 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_AssembleToken__success
[2020-11-24 15:36:14,985 INFO  L138     BoogieDeclarations]: Found implementation of procedure isTransferable_AssembleToken__fail
[2020-11-24 15:36:14,985 INFO  L138     BoogieDeclarations]: Found implementation of procedure isTransferable_AssembleToken__success
[2020-11-24 15:36:14,985 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-24 15:36:14,985 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-24 15:36:14,985 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-24 15:36:14,985 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-24 15:36:14,986 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-24 15:36:14,986 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-24 15:36:14,986 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__fail
[2020-11-24 15:36:14,986 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__success
[2020-11-24 15:36:14,986 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_SafeMath
[2020-11-24 15:36:14,986 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_SafeMath
[2020-11-24 15:36:14,986 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_OwnerHelper
[2020-11-24 15:36:14,986 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_OwnerHelper
[2020-11-24 15:36:14,986 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20Interface
[2020-11-24 15:36:14,986 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20Interface
[2020-11-24 15:36:14,986 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_AssembleToken
[2020-11-24 15:36:14,987 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-24 15:36:14,987 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-24 15:36:14,987 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-24 15:36:15,293 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 15:36:15,381 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 15:36:15,382 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 15:36:15,382 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 15:36:15,498 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-24 15:36:15,498 INFO  L286             CfgBuilder]: Removed 4 assue(true) statements.
[2020-11-24 15:36:15,500 INFO  L202        PluginConnector]: Adding new model AssembleToken_0x2565ae0385659badcada1031db704442e1b69982_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 03:36:15 BoogieIcfgContainer
[2020-11-24 15:36:15,500 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 03:36:14" (2/2) ...
[2020-11-24 15:36:15,500 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-24 15:36:15,500 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@6affd421 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 03:36:15, skipping insertion in model container
[2020-11-24 15:36:15,500 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-24 15:36:15,501 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-24 15:36:15,501 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-24 15:36:15,502 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-24 15:36:15,502 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "AssembleToken_0x2565ae0385659badcada1031db704442e1b69982_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 03:36:14" (1/3) ...
[2020-11-24 15:36:15,503 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@739e1c85 and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 03:36:15, skipping insertion in model container
[2020-11-24 15:36:15,503 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 03:36:14" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-24 15:36:15,540 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 03:36:15 NWAContainer
[2020-11-24 15:36:15,541 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-24 15:36:15,541 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-24 15:36:15,541 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-24 15:36:15,542 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-24 15:36:15,543 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "AssembleToken_0x2565ae0385659badcada1031db704442e1b69982_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 03:36:15" (3/4) ...
[2020-11-24 15:36:15,544 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@18ff66d9 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 03:36:15, skipping insertion in model container
[2020-11-24 15:36:15,544 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 03:36:15" (4/4) ...
[2020-11-24 15:36:15,548 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-24 15:36:15,553 INFO  L110   BuchiProductObserver]: Initial RCFG 907 locations, 1040 edges
[2020-11-24 15:36:15,554 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-24 15:36:15,569 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-24 15:36:16,521 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-24 15:36:16,525 INFO  L110   BuchiProductObserver]: BuchiProgram size 2006 locations, 3279 edges
[2020-11-24 15:36:16,525 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 03:36:16 BoogieIcfgContainer
[2020-11-24 15:36:16,525 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-24 15:36:16,526 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-24 15:36:16,526 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-24 15:36:16,527 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-24 15:36:16,528 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 03:36:16" (1/1) ...
[2020-11-24 15:36:16,581 INFO  L313           BlockEncoder]: Initial Icfg 2006 locations, 3279 edges
[2020-11-24 15:36:16,581 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-24 15:36:16,582 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-24 15:36:16,582 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-24 15:36:16,583 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-24 15:36:16,591 INFO  L70    emoveInfeasibleEdges]: Removed 39 edges and 11 locations because of local infeasibility
[2020-11-24 15:36:16,597 INFO  L70        RemoveSinkStates]: Removed 2 edges and 1 locations by removing sink states
[2020-11-24 15:36:16,604 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-24 15:36:16,606 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-24 15:36:16,608 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-24 15:36:16,609 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-24 15:36:16,612 INFO  L313           BlockEncoder]: Encoded RCFG 1980 locations, 3218 edges
[2020-11-24 15:36:16,612 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 24.11 03:36:16 BasicIcfg
[2020-11-24 15:36:16,612 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-24 15:36:16,613 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-24 15:36:16,613 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-24 15:36:16,615 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-24 15:36:16,615 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 15:36:16,615 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "AssembleToken_0x2565ae0385659badcada1031db704442e1b69982_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 03:36:14" (1/6) ...
[2020-11-24 15:36:16,618 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@19e06c8a and model type AssembleToken_0x2565ae0385659badcada1031db704442e1b69982_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 24.11 03:36:16, skipping insertion in model container
[2020-11-24 15:36:16,618 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 15:36:16,618 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 03:36:14" (2/6) ...
[2020-11-24 15:36:16,618 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@19e06c8a and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 24.11 03:36:16, skipping insertion in model container
[2020-11-24 15:36:16,618 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 15:36:16,618 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "AssembleToken_0x2565ae0385659badcada1031db704442e1b69982_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 03:36:15" (3/6) ...
[2020-11-24 15:36:16,619 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@19e06c8a and model type AssembleToken_0x2565ae0385659badcada1031db704442e1b69982_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 24.11 03:36:16, skipping insertion in model container
[2020-11-24 15:36:16,619 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 15:36:16,619 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 03:36:15" (4/6) ...
[2020-11-24 15:36:16,619 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@19e06c8a and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 24.11 03:36:16, skipping insertion in model container
[2020-11-24 15:36:16,619 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 15:36:16,619 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 03:36:16" (5/6) ...
[2020-11-24 15:36:16,619 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@19e06c8a and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 24.11 03:36:16, skipping insertion in model container
[2020-11-24 15:36:16,620 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 15:36:16,620 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 24.11 03:36:16" (6/6) ...
[2020-11-24 15:36:16,621 INFO  L404   chiAutomizerObserver]: Analyzing ICFG AssembleToken_0x2565ae0385659badcada1031db704442e1b69982_transfer-normal.bpl_BEv2
[2020-11-24 15:36:16,659 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-24 15:36:16,660 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-24 15:36:16,660 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-24 15:36:16,660 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-24 15:36:16,660 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-24 15:36:16,660 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-24 15:36:16,660 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-24 15:36:16,660 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-24 15:36:16,660 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-24 15:36:16,683 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1980 states.
[2020-11-24 15:36:16,735 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 15:36:16,736 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 15:36:16,736 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 15:36:16,746 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 15:36:16,746 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
[2020-11-24 15:36:16,746 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-24 15:36:16,746 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1980 states.
[2020-11-24 15:36:16,760 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 15:36:16,760 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 15:36:16,760 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 15:36:16,762 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 15:36:16,762 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L3]                 success_transfer_AssembleToken0 := false;
[L3]                 call_transfer_AssembleToken0 := false;
[L3]     CALL        call main();
[L3]                 havoc p1;
[L2678]              assume null == 0;
[L2679]  CALL        call this := FreshRefGenerator__success();
[L1332]              havoc newRef;
[L1333]              assume Alloc[newRef] == false;
[L1334]              Alloc[newRef] := true;
[L1335]              assume newRef != null;
[L2679]  RET         call this := FreshRefGenerator__success();
[L2680]              assume now >= 0;
[L2681]              assume DType[this] == AssembleToken;
[L2682]              assume !revert && gas >= 0;
[L2683]  CALL        call CorralChoice_AssembleToken(this);
[L2540]              havoc msgsender_MSG;
[L2541]              havoc msgvalue_MSG;
[L2542]              havoc choice;
[L2543]              havoc __ret_0_owner;
[L2544]              havoc _to_s157;
[L2545]              havoc __ret_0_totalSupply;
[L2546]              havoc _who_s573;
[L2547]              havoc __ret_0_balanceOf;
[L2548]              havoc _to_s632;
[L2549]              havoc _value_s632;
[L2550]              havoc __ret_0_transfer;
[L2551]              havoc _spender_s676;
[L2552]              havoc _value_s676;
[L2553]              havoc __ret_0_approve;
[L2554]              havoc _owner_s692;
[L2555]              havoc _spender_s692;
[L2556]              havoc __ret_0_allowance;
[L2557]              havoc _from_s777;
[L2558]              havoc _to_s777;
[L2559]              havoc _value_s777;
[L2560]              havoc __ret_0_transferFrom;
[L2561]              havoc __ret_0_name;
[L2562]              havoc __ret_0_decimals;
[L2563]              havoc __ret_0_symbol;
[L2564]              havoc __ret_0_maxTotalSupply;
[L2565]              havoc __ret_0_maxSaleSupply;
[L2566]              havoc __ret_0_maxSPSupply;
[L2567]              havoc __ret_0_maxEcoSupply;
[L2568]              havoc __ret_0_maxMktSupply;
[L2569]              havoc __ret_0_maxDevSupply;
[L2570]              havoc __ret_0_maxReserveSupply;
[L2571]              havoc __ret_0_maxTeamSupply;
[L2572]              havoc __ret_0_maxAdvisorSupply;
[L2573]              havoc __ret_0_seedSaleSupply;
[L2574]              havoc __ret_0_privateSaleSupply;
[L2575]              havoc __ret_0_publicSaleSupply;
[L2576]              havoc __ret_0_teamVestingSupply;
[L2577]              havoc __ret_0_teamVestingLockDate;
[L2578]              havoc __ret_0_teamVestingTime;
[L2579]              havoc __ret_0_advisorVestingSupply;
[L2580]              havoc __ret_0_advisorVestingLockDate;
[L2581]              havoc __ret_0_advisorVestingTime;
[L2582]              havoc __ret_0_totalTokenSupply;
[L2583]              havoc __ret_0_tokenIssuedSale;
[L2584]              havoc __ret_0_tokenIssuedSP;
[L2585]              havoc __ret_0_tokenIssuedEco;
[L2586]              havoc __ret_0_tokenIssuedMkt;
[L2587]              havoc __ret_0_tokenIssuedDev;
[L2588]              havoc __ret_0_tokenIssuedRsv;
[L2589]              havoc __ret_0_tokenIssuedTeam;
[L2590]              havoc __ret_0_tokenIssuedAdv;
[L2591]              havoc __ret_0_burnTokenSupply;
[L2592]              havoc arg1677_s0;
[L2593]              havoc __ret_0_balances;
[L2594]              havoc arg1678_s0;
[L2595]              havoc arg1679_s0;
[L2596]              havoc __ret_0_approvals;
[L2597]              havoc arg1680_s0;
[L2598]              havoc __ret_0_tmVestingTimer;
[L2599]              havoc arg1681_s0;
[L2600]              havoc __ret_0_tmVestingBalances;
[L2601]              havoc arg1682_s0;
[L2602]              havoc __ret_0_advVestingTimer;
[L2603]              havoc arg1683_s0;
[L2604]              havoc __ret_0_advVestingBalances;
[L2605]              havoc __ret_0_tokenLock;
[L2606]              havoc __ret_0_saleTime;
[L2607]              havoc __ret_0_endSaleTime;
[L2608]              havoc _to_s831;
[L2609]              havoc _to_s885;
[L2610]              havoc _to_s939;
[L2611]              havoc _to_s993;
[L2612]              havoc _to_s1047;
[L2613]              havoc _to_s1138;
[L2614]              havoc _time_s1138;
[L2615]              havoc _to_s1229;
[L2616]              havoc _time_s1229;
[L2617]              havoc _to_s1277;
[L2618]              havoc _to_s1325;
[L2619]              havoc _to_s1375;
[L2620]              havoc _contract_s1607;
[L2621]              havoc _decimals_s1607;
[L2622]              havoc _value_s1607;
[L2623]              havoc _value_s1663;
[L2624]              havoc tmpNow;
[L2625]              havoc gas;
[L2626]              assume gas > 4000000 && gas <= 8000000;
[L2627]              tmpNow := now;
[L2628]              havoc now;
[L2629]              assume now > tmpNow;
[L2630]              assume msgsender_MSG != null;
[L2631]  COND TRUE   choice == 6
[L2632]              gas := gas - 21000;
[L2633]  COND FALSE  !(gas >= 0)
[L2683]  RET         call CorralChoice_AssembleToken(this);

Loop:
[L2683]        assume true;

[2020-11-24 15:36:16,783 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 15:36:16,784 INFO  L82        PathProgramCache]: Analyzing trace with hash 149337997, now seen corresponding path program 1 times
[2020-11-24 15:36:16,788 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 15:36:16,828 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 15:36:16,905 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 15:36:16,907 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 15:36:16,907 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [5] imperfect sequences [] total 5
[2020-11-24 15:36:16,911 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 15:36:16,923 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 5 interpolants.
[2020-11-24 15:36:16,923 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=9, Invalid=11, Unknown=0, NotChecked=0, Total=20
[2020-11-24 15:36:16,925 INFO  L87              Difference]: Start difference. First operand 1980 states. Second operand 5 states.
[2020-11-24 15:36:17,264 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 15:36:17,265 INFO  L93              Difference]: Finished difference Result 968 states and 1052 transitions.
[2020-11-24 15:36:17,265 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-24 15:36:17,267 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 968 states and 1052 transitions.
[2020-11-24 15:36:17,274 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 15:36:17,280 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 968 states to 287 states and 302 transitions.
[2020-11-24 15:36:17,281 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 4
[2020-11-24 15:36:17,282 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 287
[2020-11-24 15:36:17,283 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 287 states and 302 transitions.
[2020-11-24 15:36:17,284 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 15:36:17,284 INFO  L728         BuchiCegarLoop]: Abstraction has 287 states and 302 transitions.
[2020-11-24 15:36:17,299 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 287 states and 302 transitions.
[2020-11-24 15:36:17,315 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 287 to 287.
[2020-11-24 15:36:17,316 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 287 states.
[2020-11-24 15:36:17,317 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 287 states to 287 states and 302 transitions.
[2020-11-24 15:36:17,318 INFO  L751         BuchiCegarLoop]: Abstraction has 287 states and 302 transitions.
[2020-11-24 15:36:17,318 INFO  L631         BuchiCegarLoop]: Abstraction has 287 states and 302 transitions.
[2020-11-24 15:36:17,318 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-24 15:36:17,318 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 287 states and 302 transitions.
[2020-11-24 15:36:17,319 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 15:36:17,320 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 15:36:17,320 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 15:36:17,321 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 15:36:17,321 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L3]                 success_transfer_AssembleToken0 := false;
[L3]                 call_transfer_AssembleToken0 := false;
[L3]     CALL        call main();
[L3]                 havoc p1;
[L2678]              assume null == 0;
[L2679]  CALL        call this := FreshRefGenerator__success();
[L1332]              havoc newRef;
[L1333]              assume Alloc[newRef] == false;
[L1334]              Alloc[newRef] := true;
[L1335]              assume newRef != null;
[L2679]  RET         call this := FreshRefGenerator__success();
[L2680]              assume now >= 0;
[L2681]              assume DType[this] == AssembleToken;
[L2682]              assume !revert && gas >= 0;
[L2683]  CALL        call CorralChoice_AssembleToken(this);
[L2540]              havoc msgsender_MSG;
[L2541]              havoc msgvalue_MSG;
[L2542]              havoc choice;
[L2543]              havoc __ret_0_owner;
[L2544]              havoc _to_s157;
[L2545]              havoc __ret_0_totalSupply;
[L2546]              havoc _who_s573;
[L2547]              havoc __ret_0_balanceOf;
[L2548]              havoc _to_s632;
[L2549]              havoc _value_s632;
[L2550]              havoc __ret_0_transfer;
[L2551]              havoc _spender_s676;
[L2552]              havoc _value_s676;
[L2553]              havoc __ret_0_approve;
[L2554]              havoc _owner_s692;
[L2555]              havoc _spender_s692;
[L2556]              havoc __ret_0_allowance;
[L2557]              havoc _from_s777;
[L2558]              havoc _to_s777;
[L2559]              havoc _value_s777;
[L2560]              havoc __ret_0_transferFrom;
[L2561]              havoc __ret_0_name;
[L2562]              havoc __ret_0_decimals;
[L2563]              havoc __ret_0_symbol;
[L2564]              havoc __ret_0_maxTotalSupply;
[L2565]              havoc __ret_0_maxSaleSupply;
[L2566]              havoc __ret_0_maxSPSupply;
[L2567]              havoc __ret_0_maxEcoSupply;
[L2568]              havoc __ret_0_maxMktSupply;
[L2569]              havoc __ret_0_maxDevSupply;
[L2570]              havoc __ret_0_maxReserveSupply;
[L2571]              havoc __ret_0_maxTeamSupply;
[L2572]              havoc __ret_0_maxAdvisorSupply;
[L2573]              havoc __ret_0_seedSaleSupply;
[L2574]              havoc __ret_0_privateSaleSupply;
[L2575]              havoc __ret_0_publicSaleSupply;
[L2576]              havoc __ret_0_teamVestingSupply;
[L2577]              havoc __ret_0_teamVestingLockDate;
[L2578]              havoc __ret_0_teamVestingTime;
[L2579]              havoc __ret_0_advisorVestingSupply;
[L2580]              havoc __ret_0_advisorVestingLockDate;
[L2581]              havoc __ret_0_advisorVestingTime;
[L2582]              havoc __ret_0_totalTokenSupply;
[L2583]              havoc __ret_0_tokenIssuedSale;
[L2584]              havoc __ret_0_tokenIssuedSP;
[L2585]              havoc __ret_0_tokenIssuedEco;
[L2586]              havoc __ret_0_tokenIssuedMkt;
[L2587]              havoc __ret_0_tokenIssuedDev;
[L2588]              havoc __ret_0_tokenIssuedRsv;
[L2589]              havoc __ret_0_tokenIssuedTeam;
[L2590]              havoc __ret_0_tokenIssuedAdv;
[L2591]              havoc __ret_0_burnTokenSupply;
[L2592]              havoc arg1677_s0;
[L2593]              havoc __ret_0_balances;
[L2594]              havoc arg1678_s0;
[L2595]              havoc arg1679_s0;
[L2596]              havoc __ret_0_approvals;
[L2597]              havoc arg1680_s0;
[L2598]              havoc __ret_0_tmVestingTimer;
[L2599]              havoc arg1681_s0;
[L2600]              havoc __ret_0_tmVestingBalances;
[L2601]              havoc arg1682_s0;
[L2602]              havoc __ret_0_advVestingTimer;
[L2603]              havoc arg1683_s0;
[L2604]              havoc __ret_0_advVestingBalances;
[L2605]              havoc __ret_0_tokenLock;
[L2606]              havoc __ret_0_saleTime;
[L2607]              havoc __ret_0_endSaleTime;
[L2608]              havoc _to_s831;
[L2609]              havoc _to_s885;
[L2610]              havoc _to_s939;
[L2611]              havoc _to_s993;
[L2612]              havoc _to_s1047;
[L2613]              havoc _to_s1138;
[L2614]              havoc _time_s1138;
[L2615]              havoc _to_s1229;
[L2616]              havoc _time_s1229;
[L2617]              havoc _to_s1277;
[L2618]              havoc _to_s1325;
[L2619]              havoc _to_s1375;
[L2620]              havoc _contract_s1607;
[L2621]              havoc _decimals_s1607;
[L2622]              havoc _value_s1607;
[L2623]              havoc _value_s1663;
[L2624]              havoc tmpNow;
[L2625]              havoc gas;
[L2626]              assume gas > 4000000 && gas <= 8000000;
[L2627]              tmpNow := now;
[L2628]              havoc now;
[L2629]              assume now > tmpNow;
[L2630]              assume msgsender_MSG != null;
[L2631]  COND FALSE  !(choice == 6)
[L2637]  COND FALSE  !(choice == 5)
[L2643]  COND TRUE   choice == 4
[L2644]              gas := gas - 21000;
[L2645]  COND TRUE   gas >= 0
[L2646]              assume _value_s632 >= 0 && _value_s632 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2647]              assume msgvalue_MSG == 0;
[L2648]  CALL        call __ret_0_transfer := transfer~address~uint256_AssembleToken(this, msgsender_MSG, msgvalue_MSG, _to_s632, _value_s632);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != _to_s632) && msgsender_MSG != _to_s632) && _value_s632 <= balances_AssembleToken[this][msgsender_MSG]) && balances_AssembleToken[this][_to_s632] + _value_s632 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _value_s632 >= 0) && _value_s632 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_AssembleToken[this][_to_s632] >= 0) && balances_AssembleToken[this][_to_s632] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_AssembleToken[this][msgsender_MSG] >= 0) && balances_AssembleToken[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_AssembleToken0 := true;
[L3]                 call_transfer_AssembleToken0 := false;
[L3]                 revert := revert_hold;
[L426]               havoc __exception;
[L427]               revert := false;
[L428]   COND FALSE  !(__exception)
[L491]   CALL        call __ret_0_ := transfer~address~uint256_AssembleToken__success(this, msgsender_MSG, msgvalue_MSG, _to_s632, _value_s632);
[L1432]  CALL        call __var_1 := isTransferable_AssembleToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1630]  COND TRUE   tokenLock_AssembleToken[this] == false
[L1631]              __ret_0_ := true;
[L1432]  RET         call __var_1 := isTransferable_AssembleToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1433]  COND TRUE   revert
[L491]   RET         call __ret_0_ := transfer~address~uint256_AssembleToken__success(this, msgsender_MSG, msgvalue_MSG, _to_s632, _value_s632);
[L492]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((((((((((((((((((((__ret_0_ == true && balances_AssembleToken[this][msgsender_MSG] == old(balances_AssembleToken[this][msgsender_MSG]) - _value_s632) && balances_AssembleToken[this][_to_s632] == old(balances_AssembleToken[this][_to_s632]) + _value_s632) && totalTokenSupply_AssembleToken[this] == old(totalTokenSupply_AssembleToken[this])) && approvals_AssembleToken[this] == old(approvals_AssembleToken[this])) && balances_AssembleToken[this][p1] == old(balances_AssembleToken[this][p1])) && name_AssembleToken[this] == old(name_AssembleToken[this])) && decimals_AssembleToken[this] == old(decimals_AssembleToken[this])) && symbol_AssembleToken[this] == old(symbol_AssembleToken[this])) && tokenIssuedSale_AssembleToken[this] == old(tokenIssuedSale_AssembleToken[this])) && tokenIssuedSP_AssembleToken[this] == old(tokenIssuedSP_AssembleToken[this])) && tokenIssuedEco_AssembleToken[this] == old(tokenIssuedEco_AssembleToken[this])) && tokenIssuedMkt_AssembleToken[this] == old(tokenIssuedMkt_AssembleToken[this])) && tokenIssuedDev_AssembleToken[this] == old(tokenIssuedDev_AssembleToken[this])) && tokenIssuedRsv_AssembleToken[this] == old(tokenIssuedRsv_AssembleToken[this])) && tokenIssuedTeam_AssembleToken[this] == old(tokenIssuedTeam_AssembleToken[this])) && tokenIssuedAdv_AssembleToken[this] == old(tokenIssuedAdv_AssembleToken[this])) && burnTokenSupply_AssembleToken[this] == old(burnTokenSupply_AssembleToken[this])) && tmVestingTimer_AssembleToken[this] == old(tmVestingTimer_AssembleToken[this])) && tmVestingBalances_AssembleToken[this] == old(tmVestingBalances_AssembleToken[this])) && advVestingTimer_AssembleToken[this] == old(advVestingTimer_AssembleToken[this])) && advVestingBalances_AssembleToken[this] == old(advVestingBalances_AssembleToken[this])) && tokenLock_AssembleToken[this] == old(tokenLock_AssembleToken[this])) && saleTime_AssembleToken[this] == old(saleTime_AssembleToken[this])) && endSaleTime_AssembleToken[this] == old(endSaleTime_AssembleToken[this])) && owner_OwnerHelper[this] == old(owner_OwnerHelper[this]));
[L3]                 revert := revert_hold;
[L2648]  RET         call __ret_0_transfer := transfer~address~uint256_AssembleToken(this, msgsender_MSG, msgvalue_MSG, _to_s632, _value_s632);
[L2683]  RET         call CorralChoice_AssembleToken(this);

Loop:
[L2683]        assume true;

[2020-11-24 15:36:17,325 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 15:36:17,325 INFO  L82        PathProgramCache]: Analyzing trace with hash -1744357655, now seen corresponding path program 1 times
[2020-11-24 15:36:17,326 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 15:36:17,343 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 15:36:17,373 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 15:36:17,374 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 15:36:17,374 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-24 15:36:17,376 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 15:36:17,376 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-24 15:36:17,376 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-24 15:36:17,376 INFO  L87              Difference]: Start difference. First operand 287 states and 302 transitions. cyclomatic complexity: 16 Second operand 3 states.
[2020-11-24 15:36:17,384 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 15:36:17,384 INFO  L93              Difference]: Finished difference Result 302 states and 316 transitions.
[2020-11-24 15:36:17,384 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-24 15:36:17,385 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 302 states and 316 transitions.
[2020-11-24 15:36:17,387 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 2
[2020-11-24 15:36:17,388 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 302 states to 296 states and 306 transitions.
[2020-11-24 15:36:17,388 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 296
[2020-11-24 15:36:17,389 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 296
[2020-11-24 15:36:17,389 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 296 states and 306 transitions.
[2020-11-24 15:36:17,390 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 15:36:17,390 INFO  L728         BuchiCegarLoop]: Abstraction has 296 states and 306 transitions.
[2020-11-24 15:36:17,390 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 296 states and 306 transitions.
[2020-11-24 15:36:17,395 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 296 to 285.
[2020-11-24 15:36:17,395 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 285 states.
[2020-11-24 15:36:17,396 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 285 states to 285 states and 295 transitions.
[2020-11-24 15:36:17,396 INFO  L751         BuchiCegarLoop]: Abstraction has 285 states and 295 transitions.
[2020-11-24 15:36:17,396 INFO  L631         BuchiCegarLoop]: Abstraction has 285 states and 295 transitions.
[2020-11-24 15:36:17,397 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-24 15:36:17,397 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 285 states and 295 transitions.
[2020-11-24 15:36:17,398 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 15:36:17,398 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 15:36:17,398 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 15:36:17,400 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 15:36:17,400 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L3]                 success_transfer_AssembleToken0 := false;
[L3]                 call_transfer_AssembleToken0 := false;
[L3]     CALL        call main();
[L3]                 havoc p1;
[L2678]              assume null == 0;
[L2679]  CALL        call this := FreshRefGenerator__success();
[L1332]              havoc newRef;
[L1333]              assume Alloc[newRef] == false;
[L1334]              Alloc[newRef] := true;
[L1335]              assume newRef != null;
[L2679]  RET         call this := FreshRefGenerator__success();
[L2680]              assume now >= 0;
[L2681]              assume DType[this] == AssembleToken;
[L2682]              assume !revert && gas >= 0;
[L2683]  CALL        call CorralChoice_AssembleToken(this);
[L2540]              havoc msgsender_MSG;
[L2541]              havoc msgvalue_MSG;
[L2542]              havoc choice;
[L2543]              havoc __ret_0_owner;
[L2544]              havoc _to_s157;
[L2545]              havoc __ret_0_totalSupply;
[L2546]              havoc _who_s573;
[L2547]              havoc __ret_0_balanceOf;
[L2548]              havoc _to_s632;
[L2549]              havoc _value_s632;
[L2550]              havoc __ret_0_transfer;
[L2551]              havoc _spender_s676;
[L2552]              havoc _value_s676;
[L2553]              havoc __ret_0_approve;
[L2554]              havoc _owner_s692;
[L2555]              havoc _spender_s692;
[L2556]              havoc __ret_0_allowance;
[L2557]              havoc _from_s777;
[L2558]              havoc _to_s777;
[L2559]              havoc _value_s777;
[L2560]              havoc __ret_0_transferFrom;
[L2561]              havoc __ret_0_name;
[L2562]              havoc __ret_0_decimals;
[L2563]              havoc __ret_0_symbol;
[L2564]              havoc __ret_0_maxTotalSupply;
[L2565]              havoc __ret_0_maxSaleSupply;
[L2566]              havoc __ret_0_maxSPSupply;
[L2567]              havoc __ret_0_maxEcoSupply;
[L2568]              havoc __ret_0_maxMktSupply;
[L2569]              havoc __ret_0_maxDevSupply;
[L2570]              havoc __ret_0_maxReserveSupply;
[L2571]              havoc __ret_0_maxTeamSupply;
[L2572]              havoc __ret_0_maxAdvisorSupply;
[L2573]              havoc __ret_0_seedSaleSupply;
[L2574]              havoc __ret_0_privateSaleSupply;
[L2575]              havoc __ret_0_publicSaleSupply;
[L2576]              havoc __ret_0_teamVestingSupply;
[L2577]              havoc __ret_0_teamVestingLockDate;
[L2578]              havoc __ret_0_teamVestingTime;
[L2579]              havoc __ret_0_advisorVestingSupply;
[L2580]              havoc __ret_0_advisorVestingLockDate;
[L2581]              havoc __ret_0_advisorVestingTime;
[L2582]              havoc __ret_0_totalTokenSupply;
[L2583]              havoc __ret_0_tokenIssuedSale;
[L2584]              havoc __ret_0_tokenIssuedSP;
[L2585]              havoc __ret_0_tokenIssuedEco;
[L2586]              havoc __ret_0_tokenIssuedMkt;
[L2587]              havoc __ret_0_tokenIssuedDev;
[L2588]              havoc __ret_0_tokenIssuedRsv;
[L2589]              havoc __ret_0_tokenIssuedTeam;
[L2590]              havoc __ret_0_tokenIssuedAdv;
[L2591]              havoc __ret_0_burnTokenSupply;
[L2592]              havoc arg1677_s0;
[L2593]              havoc __ret_0_balances;
[L2594]              havoc arg1678_s0;
[L2595]              havoc arg1679_s0;
[L2596]              havoc __ret_0_approvals;
[L2597]              havoc arg1680_s0;
[L2598]              havoc __ret_0_tmVestingTimer;
[L2599]              havoc arg1681_s0;
[L2600]              havoc __ret_0_tmVestingBalances;
[L2601]              havoc arg1682_s0;
[L2602]              havoc __ret_0_advVestingTimer;
[L2603]              havoc arg1683_s0;
[L2604]              havoc __ret_0_advVestingBalances;
[L2605]              havoc __ret_0_tokenLock;
[L2606]              havoc __ret_0_saleTime;
[L2607]              havoc __ret_0_endSaleTime;
[L2608]              havoc _to_s831;
[L2609]              havoc _to_s885;
[L2610]              havoc _to_s939;
[L2611]              havoc _to_s993;
[L2612]              havoc _to_s1047;
[L2613]              havoc _to_s1138;
[L2614]              havoc _time_s1138;
[L2615]              havoc _to_s1229;
[L2616]              havoc _time_s1229;
[L2617]              havoc _to_s1277;
[L2618]              havoc _to_s1325;
[L2619]              havoc _to_s1375;
[L2620]              havoc _contract_s1607;
[L2621]              havoc _decimals_s1607;
[L2622]              havoc _value_s1607;
[L2623]              havoc _value_s1663;
[L2624]              havoc tmpNow;
[L2625]              havoc gas;
[L2626]              assume gas > 4000000 && gas <= 8000000;
[L2627]              tmpNow := now;
[L2628]              havoc now;
[L2629]              assume now > tmpNow;
[L2630]              assume msgsender_MSG != null;
[L2631]  COND FALSE  !(choice == 6)
[L2637]  COND FALSE  !(choice == 5)
[L2643]  COND TRUE   choice == 4
[L2644]              gas := gas - 21000;
[L2645]  COND TRUE   gas >= 0
[L2646]              assume _value_s632 >= 0 && _value_s632 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2647]              assume msgvalue_MSG == 0;
[L2648]  CALL        call __ret_0_transfer := transfer~address~uint256_AssembleToken(this, msgsender_MSG, msgvalue_MSG, _to_s632, _value_s632);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != _to_s632) && msgsender_MSG != _to_s632) && _value_s632 <= balances_AssembleToken[this][msgsender_MSG]) && balances_AssembleToken[this][_to_s632] + _value_s632 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _value_s632 >= 0) && _value_s632 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_AssembleToken[this][_to_s632] >= 0) && balances_AssembleToken[this][_to_s632] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_AssembleToken[this][msgsender_MSG] >= 0) && balances_AssembleToken[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_AssembleToken0 := true;
[L3]                 call_transfer_AssembleToken0 := false;
[L3]                 revert := revert_hold;
[L426]               havoc __exception;
[L427]               revert := false;
[L428]   COND FALSE  !(__exception)
[L491]   CALL        call __ret_0_ := transfer~address~uint256_AssembleToken__success(this, msgsender_MSG, msgvalue_MSG, _to_s632, _value_s632);
[L1432]  CALL        call __var_1 := isTransferable_AssembleToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1630]  COND TRUE   tokenLock_AssembleToken[this] == false
[L1631]              __ret_0_ := true;
[L1432]  RET         call __var_1 := isTransferable_AssembleToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1433]  COND FALSE  !(revert)
[L1436]  COND FALSE  !(!(__var_1 == true))
[L1440]  COND FALSE  !(!(balances_AssembleToken[this][msgsender_MSG] >= _value_s632))
[L1444]  CALL        call __var_2 := sub~uint256~uint256_SafeMath__success(this, this, 0, balances_AssembleToken[this][msgsender_MSG], _value_s632);
[L1346]              assert b_s69 <= a_s69;
[L1347]              __ret_0_ := (a_s69 - b_s69) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1444]  RET         call __var_2 := sub~uint256~uint256_SafeMath__success(this, this, 0, balances_AssembleToken[this][msgsender_MSG], _value_s632);
[L1445]  COND FALSE  !(revert)
[L1448]              sum_balances0[this] := sum_balances0[this] - balances_AssembleToken[this][msgsender_MSG];
[L1449]              balances_AssembleToken[this][msgsender_MSG] := __var_2;
[L1450]              sum_balances0[this] := sum_balances0[this] + balances_AssembleToken[this][msgsender_MSG];
[L1451]  CALL        call __var_3 := add~uint256~uint256_SafeMath__success(this, this, 0, balances_AssembleToken[this][_to_s632], _value_s632);
[L1362]              c_s93 := (a_s93 + b_s93) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1363]              assert c_s93 >= a_s93;
[L1364]              __ret_0_ := c_s93;
[L1451]  RET         call __var_3 := add~uint256~uint256_SafeMath__success(this, this, 0, balances_AssembleToken[this][_to_s632], _value_s632);
[L1452]  COND FALSE  !(revert)
[L1455]              sum_balances0[this] := sum_balances0[this] - balances_AssembleToken[this][_to_s632];
[L1456]              balances_AssembleToken[this][_to_s632] := __var_3;
[L1457]              sum_balances0[this] := sum_balances0[this] + balances_AssembleToken[this][_to_s632];
[L1458]              assert { :EventEmitted "Transfer_AssembleToken" } true;
[L1459]              __ret_0_ := true;
[L491]   RET         call __ret_0_ := transfer~address~uint256_AssembleToken__success(this, msgsender_MSG, msgvalue_MSG, _to_s632, _value_s632);
[L492]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((((((((((((((((((((__ret_0_ == true && balances_AssembleToken[this][msgsender_MSG] == old(balances_AssembleToken[this][msgsender_MSG]) - _value_s632) && balances_AssembleToken[this][_to_s632] == old(balances_AssembleToken[this][_to_s632]) + _value_s632) && totalTokenSupply_AssembleToken[this] == old(totalTokenSupply_AssembleToken[this])) && approvals_AssembleToken[this] == old(approvals_AssembleToken[this])) && balances_AssembleToken[this][p1] == old(balances_AssembleToken[this][p1])) && name_AssembleToken[this] == old(name_AssembleToken[this])) && decimals_AssembleToken[this] == old(decimals_AssembleToken[this])) && symbol_AssembleToken[this] == old(symbol_AssembleToken[this])) && tokenIssuedSale_AssembleToken[this] == old(tokenIssuedSale_AssembleToken[this])) && tokenIssuedSP_AssembleToken[this] == old(tokenIssuedSP_AssembleToken[this])) && tokenIssuedEco_AssembleToken[this] == old(tokenIssuedEco_AssembleToken[this])) && tokenIssuedMkt_AssembleToken[this] == old(tokenIssuedMkt_AssembleToken[this])) && tokenIssuedDev_AssembleToken[this] == old(tokenIssuedDev_AssembleToken[this])) && tokenIssuedRsv_AssembleToken[this] == old(tokenIssuedRsv_AssembleToken[this])) && tokenIssuedTeam_AssembleToken[this] == old(tokenIssuedTeam_AssembleToken[this])) && tokenIssuedAdv_AssembleToken[this] == old(tokenIssuedAdv_AssembleToken[this])) && burnTokenSupply_AssembleToken[this] == old(burnTokenSupply_AssembleToken[this])) && tmVestingTimer_AssembleToken[this] == old(tmVestingTimer_AssembleToken[this])) && tmVestingBalances_AssembleToken[this] == old(tmVestingBalances_AssembleToken[this])) && advVestingTimer_AssembleToken[this] == old(advVestingTimer_AssembleToken[this])) && advVestingBalances_AssembleToken[this] == old(advVestingBalances_AssembleToken[this])) && tokenLock_AssembleToken[this] == old(tokenLock_AssembleToken[this])) && saleTime_AssembleToken[this] == old(saleTime_AssembleToken[this])) && endSaleTime_AssembleToken[this] == old(endSaleTime_AssembleToken[this])) && owner_OwnerHelper[this] == old(owner_OwnerHelper[this]));
[L3]                 revert := revert_hold;
[L2648]  RET         call __ret_0_transfer := transfer~address~uint256_AssembleToken(this, msgsender_MSG, msgvalue_MSG, _to_s632, _value_s632);
[L2683]  RET         call CorralChoice_AssembleToken(this);

Loop:
[L2683]        assume true;

[2020-11-24 15:36:17,403 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 15:36:17,403 INFO  L82        PathProgramCache]: Analyzing trace with hash 2010587280, now seen corresponding path program 1 times
[2020-11-24 15:36:17,404 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 15:36:17,460 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 15:36:17,867 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 15:36:17,868 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 15:36:17,868 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [17] imperfect sequences [] total 17
[2020-11-24 15:36:17,868 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 15:36:17,869 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 17 interpolants.
[2020-11-24 15:36:17,869 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=36, Invalid=236, Unknown=0, NotChecked=0, Total=272
[2020-11-24 15:36:17,869 INFO  L87              Difference]: Start difference. First operand 285 states and 295 transitions. cyclomatic complexity: 11 Second operand 17 states.
[2020-11-24 15:36:18,371 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 15:36:18,371 INFO  L93              Difference]: Finished difference Result 284 states and 293 transitions.
[2020-11-24 15:36:18,372 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 16 states. 
[2020-11-24 15:36:18,372 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 284 states and 293 transitions.
[2020-11-24 15:36:18,374 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 15:36:18,375 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 284 states to 237 states and 244 transitions.
[2020-11-24 15:36:18,375 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 237
[2020-11-24 15:36:18,376 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 237
[2020-11-24 15:36:18,376 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 237 states and 244 transitions.
[2020-11-24 15:36:18,377 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 15:36:18,377 INFO  L728         BuchiCegarLoop]: Abstraction has 237 states and 244 transitions.
[2020-11-24 15:36:18,377 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 237 states and 244 transitions.
[2020-11-24 15:36:18,380 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 237 to 237.
[2020-11-24 15:36:18,380 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 237 states.
[2020-11-24 15:36:18,381 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 237 states to 237 states and 244 transitions.
[2020-11-24 15:36:18,382 INFO  L751         BuchiCegarLoop]: Abstraction has 237 states and 244 transitions.
[2020-11-24 15:36:18,382 INFO  L631         BuchiCegarLoop]: Abstraction has 237 states and 244 transitions.
[2020-11-24 15:36:18,382 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-24 15:36:18,382 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 237 states and 244 transitions.
[2020-11-24 15:36:18,383 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 15:36:18,383 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 15:36:18,383 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 15:36:18,385 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 15:36:18,385 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L3]                 success_transfer_AssembleToken0 := false;
[L3]                 call_transfer_AssembleToken0 := false;
[L3]     CALL        call main();
[L3]                 havoc p1;
[L2678]              assume null == 0;
[L2679]  CALL        call this := FreshRefGenerator__success();
[L1332]              havoc newRef;
[L1333]              assume Alloc[newRef] == false;
[L1334]              Alloc[newRef] := true;
[L1335]              assume newRef != null;
[L2679]  RET         call this := FreshRefGenerator__success();
[L2680]              assume now >= 0;
[L2681]              assume DType[this] == AssembleToken;
[L2682]              assume !revert && gas >= 0;
[L2683]  CALL        call CorralChoice_AssembleToken(this);
[L2540]              havoc msgsender_MSG;
[L2541]              havoc msgvalue_MSG;
[L2542]              havoc choice;
[L2543]              havoc __ret_0_owner;
[L2544]              havoc _to_s157;
[L2545]              havoc __ret_0_totalSupply;
[L2546]              havoc _who_s573;
[L2547]              havoc __ret_0_balanceOf;
[L2548]              havoc _to_s632;
[L2549]              havoc _value_s632;
[L2550]              havoc __ret_0_transfer;
[L2551]              havoc _spender_s676;
[L2552]              havoc _value_s676;
[L2553]              havoc __ret_0_approve;
[L2554]              havoc _owner_s692;
[L2555]              havoc _spender_s692;
[L2556]              havoc __ret_0_allowance;
[L2557]              havoc _from_s777;
[L2558]              havoc _to_s777;
[L2559]              havoc _value_s777;
[L2560]              havoc __ret_0_transferFrom;
[L2561]              havoc __ret_0_name;
[L2562]              havoc __ret_0_decimals;
[L2563]              havoc __ret_0_symbol;
[L2564]              havoc __ret_0_maxTotalSupply;
[L2565]              havoc __ret_0_maxSaleSupply;
[L2566]              havoc __ret_0_maxSPSupply;
[L2567]              havoc __ret_0_maxEcoSupply;
[L2568]              havoc __ret_0_maxMktSupply;
[L2569]              havoc __ret_0_maxDevSupply;
[L2570]              havoc __ret_0_maxReserveSupply;
[L2571]              havoc __ret_0_maxTeamSupply;
[L2572]              havoc __ret_0_maxAdvisorSupply;
[L2573]              havoc __ret_0_seedSaleSupply;
[L2574]              havoc __ret_0_privateSaleSupply;
[L2575]              havoc __ret_0_publicSaleSupply;
[L2576]              havoc __ret_0_teamVestingSupply;
[L2577]              havoc __ret_0_teamVestingLockDate;
[L2578]              havoc __ret_0_teamVestingTime;
[L2579]              havoc __ret_0_advisorVestingSupply;
[L2580]              havoc __ret_0_advisorVestingLockDate;
[L2581]              havoc __ret_0_advisorVestingTime;
[L2582]              havoc __ret_0_totalTokenSupply;
[L2583]              havoc __ret_0_tokenIssuedSale;
[L2584]              havoc __ret_0_tokenIssuedSP;
[L2585]              havoc __ret_0_tokenIssuedEco;
[L2586]              havoc __ret_0_tokenIssuedMkt;
[L2587]              havoc __ret_0_tokenIssuedDev;
[L2588]              havoc __ret_0_tokenIssuedRsv;
[L2589]              havoc __ret_0_tokenIssuedTeam;
[L2590]              havoc __ret_0_tokenIssuedAdv;
[L2591]              havoc __ret_0_burnTokenSupply;
[L2592]              havoc arg1677_s0;
[L2593]              havoc __ret_0_balances;
[L2594]              havoc arg1678_s0;
[L2595]              havoc arg1679_s0;
[L2596]              havoc __ret_0_approvals;
[L2597]              havoc arg1680_s0;
[L2598]              havoc __ret_0_tmVestingTimer;
[L2599]              havoc arg1681_s0;
[L2600]              havoc __ret_0_tmVestingBalances;
[L2601]              havoc arg1682_s0;
[L2602]              havoc __ret_0_advVestingTimer;
[L2603]              havoc arg1683_s0;
[L2604]              havoc __ret_0_advVestingBalances;
[L2605]              havoc __ret_0_tokenLock;
[L2606]              havoc __ret_0_saleTime;
[L2607]              havoc __ret_0_endSaleTime;
[L2608]              havoc _to_s831;
[L2609]              havoc _to_s885;
[L2610]              havoc _to_s939;
[L2611]              havoc _to_s993;
[L2612]              havoc _to_s1047;
[L2613]              havoc _to_s1138;
[L2614]              havoc _time_s1138;
[L2615]              havoc _to_s1229;
[L2616]              havoc _time_s1229;
[L2617]              havoc _to_s1277;
[L2618]              havoc _to_s1325;
[L2619]              havoc _to_s1375;
[L2620]              havoc _contract_s1607;
[L2621]              havoc _decimals_s1607;
[L2622]              havoc _value_s1607;
[L2623]              havoc _value_s1663;
[L2624]              havoc tmpNow;
[L2625]              havoc gas;
[L2626]              assume gas > 4000000 && gas <= 8000000;
[L2627]              tmpNow := now;
[L2628]              havoc now;
[L2629]              assume now > tmpNow;
[L2630]              assume msgsender_MSG != null;
[L2631]  COND FALSE  !(choice == 6)
[L2637]  COND FALSE  !(choice == 5)
[L2643]  COND TRUE   choice == 4
[L2644]              gas := gas - 21000;
[L2645]  COND TRUE   gas >= 0
[L2646]              assume _value_s632 >= 0 && _value_s632 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2647]              assume msgvalue_MSG == 0;
[L2648]  CALL        call __ret_0_transfer := transfer~address~uint256_AssembleToken(this, msgsender_MSG, msgvalue_MSG, _to_s632, _value_s632);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != _to_s632) && msgsender_MSG != _to_s632) && _value_s632 <= balances_AssembleToken[this][msgsender_MSG]) && balances_AssembleToken[this][_to_s632] + _value_s632 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _value_s632 >= 0) && _value_s632 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_AssembleToken[this][_to_s632] >= 0) && balances_AssembleToken[this][_to_s632] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_AssembleToken[this][msgsender_MSG] >= 0) && balances_AssembleToken[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_AssembleToken0 := true;
[L3]                 call_transfer_AssembleToken0 := false;
[L3]                 revert := revert_hold;
[L426]               havoc __exception;
[L427]               revert := false;
[L428]   COND TRUE   __exception
[L429]               __tmp__Balance := Balance;
[L430]               __tmp__DType := DType;
[L431]               __tmp__Alloc := Alloc;
[L432]               __tmp__balance_ADDR := balance_ADDR;
[L433]               __tmp__M_Ref_int := M_Ref_int;
[L434]               __tmp__sum_balances0 := sum_balances0;
[L435]               __tmp__alloc_approvals_AssembleToken_lvl0 := alloc_approvals_AssembleToken_lvl0;
[L436]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L437]               __tmp__sum_approvals1 := sum_approvals1;
[L438]               __tmp__M_int_int := M_int_int;
[L439]               __tmp__sum_tmVestingTimer2 := sum_tmVestingTimer2;
[L440]               __tmp__sum_tmVestingBalances3 := sum_tmVestingBalances3;
[L441]               __tmp__sum_advVestingTimer4 := sum_advVestingTimer4;
[L442]               __tmp__sum_advVestingBalances5 := sum_advVestingBalances5;
[L443]               __tmp__Length := Length;
[L444]               __tmp__now := now;
[L445]               __tmp__owner_OwnerHelper := owner_OwnerHelper;
[L446]               __tmp__name_AssembleToken := name_AssembleToken;
[L447]               __tmp__decimals_AssembleToken := decimals_AssembleToken;
[L448]               __tmp__symbol_AssembleToken := symbol_AssembleToken;
[L449]               __tmp__E18_AssembleToken := E18_AssembleToken;
[L450]               __tmp__month_AssembleToken := month_AssembleToken;
[L451]               __tmp__maxTotalSupply_AssembleToken := maxTotalSupply_AssembleToken;
[L452]               __tmp__maxSaleSupply_AssembleToken := maxSaleSupply_AssembleToken;
[L453]               __tmp__maxSPSupply_AssembleToken := maxSPSupply_AssembleToken;
[L454]               __tmp__maxEcoSupply_AssembleToken := maxEcoSupply_AssembleToken;
[L455]               __tmp__maxMktSupply_AssembleToken := maxMktSupply_AssembleToken;
[L456]               __tmp__maxDevSupply_AssembleToken := maxDevSupply_AssembleToken;
[L457]               __tmp__maxReserveSupply_AssembleToken := maxReserveSupply_AssembleToken;
[L458]               __tmp__maxTeamSupply_AssembleToken := maxTeamSupply_AssembleToken;
[L459]               __tmp__maxAdvisorSupply_AssembleToken := maxAdvisorSupply_AssembleToken;
[L460]               __tmp__seedSaleSupply_AssembleToken := seedSaleSupply_AssembleToken;
[L461]               __tmp__privateSaleSupply_AssembleToken := privateSaleSupply_AssembleToken;
[L462]               __tmp__publicSaleSupply_AssembleToken := publicSaleSupply_AssembleToken;
[L463]               __tmp__teamVestingSupply_AssembleToken := teamVestingSupply_AssembleToken;
[L464]               __tmp__teamVestingLockDate_AssembleToken := teamVestingLockDate_AssembleToken;
[L465]               __tmp__teamVestingTime_AssembleToken := teamVestingTime_AssembleToken;
[L466]               __tmp__advisorVestingSupply_AssembleToken := advisorVestingSupply_AssembleToken;
[L467]               __tmp__advisorVestingLockDate_AssembleToken := advisorVestingLockDate_AssembleToken;
[L468]               __tmp__advisorVestingTime_AssembleToken := advisorVestingTime_AssembleToken;
[L469]               __tmp__totalTokenSupply_AssembleToken := totalTokenSupply_AssembleToken;
[L470]               __tmp__tokenIssuedSale_AssembleToken := tokenIssuedSale_AssembleToken;
[L471]               __tmp__tokenIssuedSP_AssembleToken := tokenIssuedSP_AssembleToken;
[L472]               __tmp__tokenIssuedEco_AssembleToken := tokenIssuedEco_AssembleToken;
[L473]               __tmp__tokenIssuedMkt_AssembleToken := tokenIssuedMkt_AssembleToken;
[L474]               __tmp__tokenIssuedDev_AssembleToken := tokenIssuedDev_AssembleToken;
[L475]               __tmp__tokenIssuedRsv_AssembleToken := tokenIssuedRsv_AssembleToken;
[L476]               __tmp__tokenIssuedTeam_AssembleToken := tokenIssuedTeam_AssembleToken;
[L477]               __tmp__tokenIssuedAdv_AssembleToken := tokenIssuedAdv_AssembleToken;
[L478]               __tmp__burnTokenSupply_AssembleToken := burnTokenSupply_AssembleToken;
[L479]               __tmp__balances_AssembleToken := balances_AssembleToken;
[L480]               __tmp__approvals_AssembleToken := approvals_AssembleToken;
[L481]               __tmp__tmVestingTimer_AssembleToken := tmVestingTimer_AssembleToken;
[L482]               __tmp__tmVestingBalances_AssembleToken := tmVestingBalances_AssembleToken;
[L483]               __tmp__advVestingTimer_AssembleToken := advVestingTimer_AssembleToken;
[L484]               __tmp__advVestingBalances_AssembleToken := advVestingBalances_AssembleToken;
[L485]               __tmp__tokenLock_AssembleToken := tokenLock_AssembleToken;
[L486]               __tmp__saleTime_AssembleToken := saleTime_AssembleToken;
[L487]               __tmp__endSaleTime_AssembleToken := endSaleTime_AssembleToken;
[L488]   CALL        call __ret_0_ := transfer~address~uint256_AssembleToken__fail(this, msgsender_MSG, msgvalue_MSG, _to_s632, _value_s632);
[L1397]  CALL        call __var_1 := isTransferable_AssembleToken__fail(this, msgsender_MSG, msgvalue_MSG);
[L1617]  COND TRUE   __tmp__tokenLock_AssembleToken[this] == false
[L1618]              __ret_0_ := true;
[L1397]  RET         call __var_1 := isTransferable_AssembleToken__fail(this, msgsender_MSG, msgvalue_MSG);
[L1398]  COND TRUE   revert
[L488]   RET         call __ret_0_ := transfer~address~uint256_AssembleToken__fail(this, msgsender_MSG, msgvalue_MSG, _to_s632, _value_s632);
[L489]               assume revert || gas < 0;
[L2648]  RET         call __ret_0_transfer := transfer~address~uint256_AssembleToken(this, msgsender_MSG, msgvalue_MSG, _to_s632, _value_s632);
[L2683]  RET         call CorralChoice_AssembleToken(this);

Loop:
[L2683]        assume true;

[2020-11-24 15:36:18,388 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 15:36:18,388 INFO  L82        PathProgramCache]: Analyzing trace with hash 1253729363, now seen corresponding path program 1 times
[2020-11-24 15:36:18,389 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 15:36:18,403 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 15:36:18,464 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 15:36:18,464 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 15:36:18,464 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [5] imperfect sequences [] total 5
[2020-11-24 15:36:18,465 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 15:36:18,465 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 5 interpolants.
[2020-11-24 15:36:18,465 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=9, Invalid=11, Unknown=0, NotChecked=0, Total=20
[2020-11-24 15:36:18,465 INFO  L87              Difference]: Start difference. First operand 237 states and 244 transitions. cyclomatic complexity: 8 Second operand 5 states.
[2020-11-24 15:36:18,480 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 15:36:18,480 INFO  L93              Difference]: Finished difference Result 248 states and 252 transitions.
[2020-11-24 15:36:18,480 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-24 15:36:18,480 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 248 states and 252 transitions.
[2020-11-24 15:36:18,482 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 2
[2020-11-24 15:36:18,483 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 248 states to 248 states and 252 transitions.
[2020-11-24 15:36:18,483 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 248
[2020-11-24 15:36:18,484 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 248
[2020-11-24 15:36:18,484 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 248 states and 252 transitions.
[2020-11-24 15:36:18,484 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 15:36:18,484 INFO  L728         BuchiCegarLoop]: Abstraction has 248 states and 252 transitions.
[2020-11-24 15:36:18,484 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 248 states and 252 transitions.
[2020-11-24 15:36:18,486 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 248 to 237.
[2020-11-24 15:36:18,487 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 237 states.
[2020-11-24 15:36:18,487 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 237 states to 237 states and 241 transitions.
[2020-11-24 15:36:18,487 INFO  L751         BuchiCegarLoop]: Abstraction has 237 states and 241 transitions.
[2020-11-24 15:36:18,487 INFO  L631         BuchiCegarLoop]: Abstraction has 237 states and 241 transitions.
[2020-11-24 15:36:18,487 INFO  L445         BuchiCegarLoop]: ======== Iteration 5============
[2020-11-24 15:36:18,488 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 237 states and 241 transitions.
[2020-11-24 15:36:18,488 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 15:36:18,489 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 15:36:18,489 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 15:36:18,490 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 15:36:18,490 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L3]                 success_transfer_AssembleToken0 := false;
[L3]                 call_transfer_AssembleToken0 := false;
[L3]     CALL        call main();
[L3]                 havoc p1;
[L2678]              assume null == 0;
[L2679]  CALL        call this := FreshRefGenerator__success();
[L1332]              havoc newRef;
[L1333]              assume Alloc[newRef] == false;
[L1334]              Alloc[newRef] := true;
[L1335]              assume newRef != null;
[L2679]  RET         call this := FreshRefGenerator__success();
[L2680]              assume now >= 0;
[L2681]              assume DType[this] == AssembleToken;
[L2682]              assume !revert && gas >= 0;
[L2683]  CALL        call CorralChoice_AssembleToken(this);
[L2540]              havoc msgsender_MSG;
[L2541]              havoc msgvalue_MSG;
[L2542]              havoc choice;
[L2543]              havoc __ret_0_owner;
[L2544]              havoc _to_s157;
[L2545]              havoc __ret_0_totalSupply;
[L2546]              havoc _who_s573;
[L2547]              havoc __ret_0_balanceOf;
[L2548]              havoc _to_s632;
[L2549]              havoc _value_s632;
[L2550]              havoc __ret_0_transfer;
[L2551]              havoc _spender_s676;
[L2552]              havoc _value_s676;
[L2553]              havoc __ret_0_approve;
[L2554]              havoc _owner_s692;
[L2555]              havoc _spender_s692;
[L2556]              havoc __ret_0_allowance;
[L2557]              havoc _from_s777;
[L2558]              havoc _to_s777;
[L2559]              havoc _value_s777;
[L2560]              havoc __ret_0_transferFrom;
[L2561]              havoc __ret_0_name;
[L2562]              havoc __ret_0_decimals;
[L2563]              havoc __ret_0_symbol;
[L2564]              havoc __ret_0_maxTotalSupply;
[L2565]              havoc __ret_0_maxSaleSupply;
[L2566]              havoc __ret_0_maxSPSupply;
[L2567]              havoc __ret_0_maxEcoSupply;
[L2568]              havoc __ret_0_maxMktSupply;
[L2569]              havoc __ret_0_maxDevSupply;
[L2570]              havoc __ret_0_maxReserveSupply;
[L2571]              havoc __ret_0_maxTeamSupply;
[L2572]              havoc __ret_0_maxAdvisorSupply;
[L2573]              havoc __ret_0_seedSaleSupply;
[L2574]              havoc __ret_0_privateSaleSupply;
[L2575]              havoc __ret_0_publicSaleSupply;
[L2576]              havoc __ret_0_teamVestingSupply;
[L2577]              havoc __ret_0_teamVestingLockDate;
[L2578]              havoc __ret_0_teamVestingTime;
[L2579]              havoc __ret_0_advisorVestingSupply;
[L2580]              havoc __ret_0_advisorVestingLockDate;
[L2581]              havoc __ret_0_advisorVestingTime;
[L2582]              havoc __ret_0_totalTokenSupply;
[L2583]              havoc __ret_0_tokenIssuedSale;
[L2584]              havoc __ret_0_tokenIssuedSP;
[L2585]              havoc __ret_0_tokenIssuedEco;
[L2586]              havoc __ret_0_tokenIssuedMkt;
[L2587]              havoc __ret_0_tokenIssuedDev;
[L2588]              havoc __ret_0_tokenIssuedRsv;
[L2589]              havoc __ret_0_tokenIssuedTeam;
[L2590]              havoc __ret_0_tokenIssuedAdv;
[L2591]              havoc __ret_0_burnTokenSupply;
[L2592]              havoc arg1677_s0;
[L2593]              havoc __ret_0_balances;
[L2594]              havoc arg1678_s0;
[L2595]              havoc arg1679_s0;
[L2596]              havoc __ret_0_approvals;
[L2597]              havoc arg1680_s0;
[L2598]              havoc __ret_0_tmVestingTimer;
[L2599]              havoc arg1681_s0;
[L2600]              havoc __ret_0_tmVestingBalances;
[L2601]              havoc arg1682_s0;
[L2602]              havoc __ret_0_advVestingTimer;
[L2603]              havoc arg1683_s0;
[L2604]              havoc __ret_0_advVestingBalances;
[L2605]              havoc __ret_0_tokenLock;
[L2606]              havoc __ret_0_saleTime;
[L2607]              havoc __ret_0_endSaleTime;
[L2608]              havoc _to_s831;
[L2609]              havoc _to_s885;
[L2610]              havoc _to_s939;
[L2611]              havoc _to_s993;
[L2612]              havoc _to_s1047;
[L2613]              havoc _to_s1138;
[L2614]              havoc _time_s1138;
[L2615]              havoc _to_s1229;
[L2616]              havoc _time_s1229;
[L2617]              havoc _to_s1277;
[L2618]              havoc _to_s1325;
[L2619]              havoc _to_s1375;
[L2620]              havoc _contract_s1607;
[L2621]              havoc _decimals_s1607;
[L2622]              havoc _value_s1607;
[L2623]              havoc _value_s1663;
[L2624]              havoc tmpNow;
[L2625]              havoc gas;
[L2626]              assume gas > 4000000 && gas <= 8000000;
[L2627]              tmpNow := now;
[L2628]              havoc now;
[L2629]              assume now > tmpNow;
[L2630]              assume msgsender_MSG != null;
[L2631]  COND FALSE  !(choice == 6)
[L2637]  COND FALSE  !(choice == 5)
[L2643]  COND TRUE   choice == 4
[L2644]              gas := gas - 21000;
[L2645]  COND TRUE   gas >= 0
[L2646]              assume _value_s632 >= 0 && _value_s632 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2647]              assume msgvalue_MSG == 0;
[L2648]  CALL        call __ret_0_transfer := transfer~address~uint256_AssembleToken(this, msgsender_MSG, msgvalue_MSG, _to_s632, _value_s632);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != _to_s632) && msgsender_MSG != _to_s632) && _value_s632 <= balances_AssembleToken[this][msgsender_MSG]) && balances_AssembleToken[this][_to_s632] + _value_s632 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _value_s632 >= 0) && _value_s632 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_AssembleToken[this][_to_s632] >= 0) && balances_AssembleToken[this][_to_s632] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_AssembleToken[this][msgsender_MSG] >= 0) && balances_AssembleToken[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_AssembleToken0 := true;
[L3]                 call_transfer_AssembleToken0 := false;
[L3]                 revert := revert_hold;
[L426]               havoc __exception;
[L427]               revert := false;
[L428]   COND TRUE   __exception
[L429]               __tmp__Balance := Balance;
[L430]               __tmp__DType := DType;
[L431]               __tmp__Alloc := Alloc;
[L432]               __tmp__balance_ADDR := balance_ADDR;
[L433]               __tmp__M_Ref_int := M_Ref_int;
[L434]               __tmp__sum_balances0 := sum_balances0;
[L435]               __tmp__alloc_approvals_AssembleToken_lvl0 := alloc_approvals_AssembleToken_lvl0;
[L436]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L437]               __tmp__sum_approvals1 := sum_approvals1;
[L438]               __tmp__M_int_int := M_int_int;
[L439]               __tmp__sum_tmVestingTimer2 := sum_tmVestingTimer2;
[L440]               __tmp__sum_tmVestingBalances3 := sum_tmVestingBalances3;
[L441]               __tmp__sum_advVestingTimer4 := sum_advVestingTimer4;
[L442]               __tmp__sum_advVestingBalances5 := sum_advVestingBalances5;
[L443]               __tmp__Length := Length;
[L444]               __tmp__now := now;
[L445]               __tmp__owner_OwnerHelper := owner_OwnerHelper;
[L446]               __tmp__name_AssembleToken := name_AssembleToken;
[L447]               __tmp__decimals_AssembleToken := decimals_AssembleToken;
[L448]               __tmp__symbol_AssembleToken := symbol_AssembleToken;
[L449]               __tmp__E18_AssembleToken := E18_AssembleToken;
[L450]               __tmp__month_AssembleToken := month_AssembleToken;
[L451]               __tmp__maxTotalSupply_AssembleToken := maxTotalSupply_AssembleToken;
[L452]               __tmp__maxSaleSupply_AssembleToken := maxSaleSupply_AssembleToken;
[L453]               __tmp__maxSPSupply_AssembleToken := maxSPSupply_AssembleToken;
[L454]               __tmp__maxEcoSupply_AssembleToken := maxEcoSupply_AssembleToken;
[L455]               __tmp__maxMktSupply_AssembleToken := maxMktSupply_AssembleToken;
[L456]               __tmp__maxDevSupply_AssembleToken := maxDevSupply_AssembleToken;
[L457]               __tmp__maxReserveSupply_AssembleToken := maxReserveSupply_AssembleToken;
[L458]               __tmp__maxTeamSupply_AssembleToken := maxTeamSupply_AssembleToken;
[L459]               __tmp__maxAdvisorSupply_AssembleToken := maxAdvisorSupply_AssembleToken;
[L460]               __tmp__seedSaleSupply_AssembleToken := seedSaleSupply_AssembleToken;
[L461]               __tmp__privateSaleSupply_AssembleToken := privateSaleSupply_AssembleToken;
[L462]               __tmp__publicSaleSupply_AssembleToken := publicSaleSupply_AssembleToken;
[L463]               __tmp__teamVestingSupply_AssembleToken := teamVestingSupply_AssembleToken;
[L464]               __tmp__teamVestingLockDate_AssembleToken := teamVestingLockDate_AssembleToken;
[L465]               __tmp__teamVestingTime_AssembleToken := teamVestingTime_AssembleToken;
[L466]               __tmp__advisorVestingSupply_AssembleToken := advisorVestingSupply_AssembleToken;
[L467]               __tmp__advisorVestingLockDate_AssembleToken := advisorVestingLockDate_AssembleToken;
[L468]               __tmp__advisorVestingTime_AssembleToken := advisorVestingTime_AssembleToken;
[L469]               __tmp__totalTokenSupply_AssembleToken := totalTokenSupply_AssembleToken;
[L470]               __tmp__tokenIssuedSale_AssembleToken := tokenIssuedSale_AssembleToken;
[L471]               __tmp__tokenIssuedSP_AssembleToken := tokenIssuedSP_AssembleToken;
[L472]               __tmp__tokenIssuedEco_AssembleToken := tokenIssuedEco_AssembleToken;
[L473]               __tmp__tokenIssuedMkt_AssembleToken := tokenIssuedMkt_AssembleToken;
[L474]               __tmp__tokenIssuedDev_AssembleToken := tokenIssuedDev_AssembleToken;
[L475]               __tmp__tokenIssuedRsv_AssembleToken := tokenIssuedRsv_AssembleToken;
[L476]               __tmp__tokenIssuedTeam_AssembleToken := tokenIssuedTeam_AssembleToken;
[L477]               __tmp__tokenIssuedAdv_AssembleToken := tokenIssuedAdv_AssembleToken;
[L478]               __tmp__burnTokenSupply_AssembleToken := burnTokenSupply_AssembleToken;
[L479]               __tmp__balances_AssembleToken := balances_AssembleToken;
[L480]               __tmp__approvals_AssembleToken := approvals_AssembleToken;
[L481]               __tmp__tmVestingTimer_AssembleToken := tmVestingTimer_AssembleToken;
[L482]               __tmp__tmVestingBalances_AssembleToken := tmVestingBalances_AssembleToken;
[L483]               __tmp__advVestingTimer_AssembleToken := advVestingTimer_AssembleToken;
[L484]               __tmp__advVestingBalances_AssembleToken := advVestingBalances_AssembleToken;
[L485]               __tmp__tokenLock_AssembleToken := tokenLock_AssembleToken;
[L486]               __tmp__saleTime_AssembleToken := saleTime_AssembleToken;
[L487]               __tmp__endSaleTime_AssembleToken := endSaleTime_AssembleToken;
[L488]   CALL        call __ret_0_ := transfer~address~uint256_AssembleToken__fail(this, msgsender_MSG, msgvalue_MSG, _to_s632, _value_s632);
[L1397]  CALL        call __var_1 := isTransferable_AssembleToken__fail(this, msgsender_MSG, msgvalue_MSG);
[L1617]  COND TRUE   __tmp__tokenLock_AssembleToken[this] == false
[L1618]              __ret_0_ := true;
[L1397]  RET         call __var_1 := isTransferable_AssembleToken__fail(this, msgsender_MSG, msgvalue_MSG);
[L1398]  COND FALSE  !(revert)
[L1401]  COND TRUE   !(__var_1 == true)
[L1402]              revert := true;
[L488]   RET         call __ret_0_ := transfer~address~uint256_AssembleToken__fail(this, msgsender_MSG, msgvalue_MSG, _to_s632, _value_s632);
[L489]               assume revert || gas < 0;
[L2648]  RET         call __ret_0_transfer := transfer~address~uint256_AssembleToken(this, msgsender_MSG, msgvalue_MSG, _to_s632, _value_s632);
[L2683]  RET         call CorralChoice_AssembleToken(this);

Loop:
[L2683]        assume true;

[2020-11-24 15:36:18,493 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 15:36:18,493 INFO  L82        PathProgramCache]: Analyzing trace with hash -1822465127, now seen corresponding path program 1 times
[2020-11-24 15:36:18,494 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 15:36:18,504 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 15:36:18,532 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 15:36:18,532 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 15:36:18,533 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-24 15:36:18,533 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 15:36:18,533 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-24 15:36:18,533 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-24 15:36:18,533 INFO  L87              Difference]: Start difference. First operand 237 states and 241 transitions. cyclomatic complexity: 5 Second operand 4 states.
[2020-11-24 15:36:18,536 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 15:36:18,536 INFO  L93              Difference]: Finished difference Result 244 states and 248 transitions.
[2020-11-24 15:36:18,536 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-24 15:36:18,536 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 244 states and 248 transitions.
[2020-11-24 15:36:18,538 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 15:36:18,539 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 244 states to 244 states and 248 transitions.
[2020-11-24 15:36:18,539 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 244
[2020-11-24 15:36:18,539 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 244
[2020-11-24 15:36:18,539 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 244 states and 248 transitions.
[2020-11-24 15:36:18,539 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 15:36:18,539 INFO  L728         BuchiCegarLoop]: Abstraction has 244 states and 248 transitions.
[2020-11-24 15:36:18,540 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 244 states and 248 transitions.
[2020-11-24 15:36:18,542 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 244 to 242.
[2020-11-24 15:36:18,542 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 242 states.
[2020-11-24 15:36:18,543 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 242 states to 242 states and 246 transitions.
[2020-11-24 15:36:18,543 INFO  L751         BuchiCegarLoop]: Abstraction has 242 states and 246 transitions.
[2020-11-24 15:36:18,543 INFO  L631         BuchiCegarLoop]: Abstraction has 242 states and 246 transitions.
[2020-11-24 15:36:18,543 INFO  L445         BuchiCegarLoop]: ======== Iteration 6============
[2020-11-24 15:36:18,543 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 242 states and 246 transitions.
[2020-11-24 15:36:18,544 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 15:36:18,544 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 15:36:18,544 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 15:36:18,546 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 15:36:18,546 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L3]                 success_transfer_AssembleToken0 := false;
[L3]                 call_transfer_AssembleToken0 := false;
[L3]     CALL        call main();
[L3]                 havoc p1;
[L2678]              assume null == 0;
[L2679]  CALL        call this := FreshRefGenerator__success();
[L1332]              havoc newRef;
[L1333]              assume Alloc[newRef] == false;
[L1334]              Alloc[newRef] := true;
[L1335]              assume newRef != null;
[L2679]  RET         call this := FreshRefGenerator__success();
[L2680]              assume now >= 0;
[L2681]              assume DType[this] == AssembleToken;
[L2682]              assume !revert && gas >= 0;
[L2683]  CALL        call CorralChoice_AssembleToken(this);
[L2540]              havoc msgsender_MSG;
[L2541]              havoc msgvalue_MSG;
[L2542]              havoc choice;
[L2543]              havoc __ret_0_owner;
[L2544]              havoc _to_s157;
[L2545]              havoc __ret_0_totalSupply;
[L2546]              havoc _who_s573;
[L2547]              havoc __ret_0_balanceOf;
[L2548]              havoc _to_s632;
[L2549]              havoc _value_s632;
[L2550]              havoc __ret_0_transfer;
[L2551]              havoc _spender_s676;
[L2552]              havoc _value_s676;
[L2553]              havoc __ret_0_approve;
[L2554]              havoc _owner_s692;
[L2555]              havoc _spender_s692;
[L2556]              havoc __ret_0_allowance;
[L2557]              havoc _from_s777;
[L2558]              havoc _to_s777;
[L2559]              havoc _value_s777;
[L2560]              havoc __ret_0_transferFrom;
[L2561]              havoc __ret_0_name;
[L2562]              havoc __ret_0_decimals;
[L2563]              havoc __ret_0_symbol;
[L2564]              havoc __ret_0_maxTotalSupply;
[L2565]              havoc __ret_0_maxSaleSupply;
[L2566]              havoc __ret_0_maxSPSupply;
[L2567]              havoc __ret_0_maxEcoSupply;
[L2568]              havoc __ret_0_maxMktSupply;
[L2569]              havoc __ret_0_maxDevSupply;
[L2570]              havoc __ret_0_maxReserveSupply;
[L2571]              havoc __ret_0_maxTeamSupply;
[L2572]              havoc __ret_0_maxAdvisorSupply;
[L2573]              havoc __ret_0_seedSaleSupply;
[L2574]              havoc __ret_0_privateSaleSupply;
[L2575]              havoc __ret_0_publicSaleSupply;
[L2576]              havoc __ret_0_teamVestingSupply;
[L2577]              havoc __ret_0_teamVestingLockDate;
[L2578]              havoc __ret_0_teamVestingTime;
[L2579]              havoc __ret_0_advisorVestingSupply;
[L2580]              havoc __ret_0_advisorVestingLockDate;
[L2581]              havoc __ret_0_advisorVestingTime;
[L2582]              havoc __ret_0_totalTokenSupply;
[L2583]              havoc __ret_0_tokenIssuedSale;
[L2584]              havoc __ret_0_tokenIssuedSP;
[L2585]              havoc __ret_0_tokenIssuedEco;
[L2586]              havoc __ret_0_tokenIssuedMkt;
[L2587]              havoc __ret_0_tokenIssuedDev;
[L2588]              havoc __ret_0_tokenIssuedRsv;
[L2589]              havoc __ret_0_tokenIssuedTeam;
[L2590]              havoc __ret_0_tokenIssuedAdv;
[L2591]              havoc __ret_0_burnTokenSupply;
[L2592]              havoc arg1677_s0;
[L2593]              havoc __ret_0_balances;
[L2594]              havoc arg1678_s0;
[L2595]              havoc arg1679_s0;
[L2596]              havoc __ret_0_approvals;
[L2597]              havoc arg1680_s0;
[L2598]              havoc __ret_0_tmVestingTimer;
[L2599]              havoc arg1681_s0;
[L2600]              havoc __ret_0_tmVestingBalances;
[L2601]              havoc arg1682_s0;
[L2602]              havoc __ret_0_advVestingTimer;
[L2603]              havoc arg1683_s0;
[L2604]              havoc __ret_0_advVestingBalances;
[L2605]              havoc __ret_0_tokenLock;
[L2606]              havoc __ret_0_saleTime;
[L2607]              havoc __ret_0_endSaleTime;
[L2608]              havoc _to_s831;
[L2609]              havoc _to_s885;
[L2610]              havoc _to_s939;
[L2611]              havoc _to_s993;
[L2612]              havoc _to_s1047;
[L2613]              havoc _to_s1138;
[L2614]              havoc _time_s1138;
[L2615]              havoc _to_s1229;
[L2616]              havoc _time_s1229;
[L2617]              havoc _to_s1277;
[L2618]              havoc _to_s1325;
[L2619]              havoc _to_s1375;
[L2620]              havoc _contract_s1607;
[L2621]              havoc _decimals_s1607;
[L2622]              havoc _value_s1607;
[L2623]              havoc _value_s1663;
[L2624]              havoc tmpNow;
[L2625]              havoc gas;
[L2626]              assume gas > 4000000 && gas <= 8000000;
[L2627]              tmpNow := now;
[L2628]              havoc now;
[L2629]              assume now > tmpNow;
[L2630]              assume msgsender_MSG != null;
[L2631]  COND FALSE  !(choice == 6)
[L2637]  COND FALSE  !(choice == 5)
[L2643]  COND TRUE   choice == 4
[L2644]              gas := gas - 21000;
[L2645]  COND TRUE   gas >= 0
[L2646]              assume _value_s632 >= 0 && _value_s632 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2647]              assume msgvalue_MSG == 0;
[L2648]  CALL        call __ret_0_transfer := transfer~address~uint256_AssembleToken(this, msgsender_MSG, msgvalue_MSG, _to_s632, _value_s632);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != _to_s632) && msgsender_MSG != _to_s632) && _value_s632 <= balances_AssembleToken[this][msgsender_MSG]) && balances_AssembleToken[this][_to_s632] + _value_s632 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _value_s632 >= 0) && _value_s632 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_AssembleToken[this][_to_s632] >= 0) && balances_AssembleToken[this][_to_s632] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_AssembleToken[this][msgsender_MSG] >= 0) && balances_AssembleToken[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_AssembleToken0 := true;
[L3]                 call_transfer_AssembleToken0 := false;
[L3]                 revert := revert_hold;
[L426]               havoc __exception;
[L427]               revert := false;
[L428]   COND TRUE   __exception
[L429]               __tmp__Balance := Balance;
[L430]               __tmp__DType := DType;
[L431]               __tmp__Alloc := Alloc;
[L432]               __tmp__balance_ADDR := balance_ADDR;
[L433]               __tmp__M_Ref_int := M_Ref_int;
[L434]               __tmp__sum_balances0 := sum_balances0;
[L435]               __tmp__alloc_approvals_AssembleToken_lvl0 := alloc_approvals_AssembleToken_lvl0;
[L436]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L437]               __tmp__sum_approvals1 := sum_approvals1;
[L438]               __tmp__M_int_int := M_int_int;
[L439]               __tmp__sum_tmVestingTimer2 := sum_tmVestingTimer2;
[L440]               __tmp__sum_tmVestingBalances3 := sum_tmVestingBalances3;
[L441]               __tmp__sum_advVestingTimer4 := sum_advVestingTimer4;
[L442]               __tmp__sum_advVestingBalances5 := sum_advVestingBalances5;
[L443]               __tmp__Length := Length;
[L444]               __tmp__now := now;
[L445]               __tmp__owner_OwnerHelper := owner_OwnerHelper;
[L446]               __tmp__name_AssembleToken := name_AssembleToken;
[L447]               __tmp__decimals_AssembleToken := decimals_AssembleToken;
[L448]               __tmp__symbol_AssembleToken := symbol_AssembleToken;
[L449]               __tmp__E18_AssembleToken := E18_AssembleToken;
[L450]               __tmp__month_AssembleToken := month_AssembleToken;
[L451]               __tmp__maxTotalSupply_AssembleToken := maxTotalSupply_AssembleToken;
[L452]               __tmp__maxSaleSupply_AssembleToken := maxSaleSupply_AssembleToken;
[L453]               __tmp__maxSPSupply_AssembleToken := maxSPSupply_AssembleToken;
[L454]               __tmp__maxEcoSupply_AssembleToken := maxEcoSupply_AssembleToken;
[L455]               __tmp__maxMktSupply_AssembleToken := maxMktSupply_AssembleToken;
[L456]               __tmp__maxDevSupply_AssembleToken := maxDevSupply_AssembleToken;
[L457]               __tmp__maxReserveSupply_AssembleToken := maxReserveSupply_AssembleToken;
[L458]               __tmp__maxTeamSupply_AssembleToken := maxTeamSupply_AssembleToken;
[L459]               __tmp__maxAdvisorSupply_AssembleToken := maxAdvisorSupply_AssembleToken;
[L460]               __tmp__seedSaleSupply_AssembleToken := seedSaleSupply_AssembleToken;
[L461]               __tmp__privateSaleSupply_AssembleToken := privateSaleSupply_AssembleToken;
[L462]               __tmp__publicSaleSupply_AssembleToken := publicSaleSupply_AssembleToken;
[L463]               __tmp__teamVestingSupply_AssembleToken := teamVestingSupply_AssembleToken;
[L464]               __tmp__teamVestingLockDate_AssembleToken := teamVestingLockDate_AssembleToken;
[L465]               __tmp__teamVestingTime_AssembleToken := teamVestingTime_AssembleToken;
[L466]               __tmp__advisorVestingSupply_AssembleToken := advisorVestingSupply_AssembleToken;
[L467]               __tmp__advisorVestingLockDate_AssembleToken := advisorVestingLockDate_AssembleToken;
[L468]               __tmp__advisorVestingTime_AssembleToken := advisorVestingTime_AssembleToken;
[L469]               __tmp__totalTokenSupply_AssembleToken := totalTokenSupply_AssembleToken;
[L470]               __tmp__tokenIssuedSale_AssembleToken := tokenIssuedSale_AssembleToken;
[L471]               __tmp__tokenIssuedSP_AssembleToken := tokenIssuedSP_AssembleToken;
[L472]               __tmp__tokenIssuedEco_AssembleToken := tokenIssuedEco_AssembleToken;
[L473]               __tmp__tokenIssuedMkt_AssembleToken := tokenIssuedMkt_AssembleToken;
[L474]               __tmp__tokenIssuedDev_AssembleToken := tokenIssuedDev_AssembleToken;
[L475]               __tmp__tokenIssuedRsv_AssembleToken := tokenIssuedRsv_AssembleToken;
[L476]               __tmp__tokenIssuedTeam_AssembleToken := tokenIssuedTeam_AssembleToken;
[L477]               __tmp__tokenIssuedAdv_AssembleToken := tokenIssuedAdv_AssembleToken;
[L478]               __tmp__burnTokenSupply_AssembleToken := burnTokenSupply_AssembleToken;
[L479]               __tmp__balances_AssembleToken := balances_AssembleToken;
[L480]               __tmp__approvals_AssembleToken := approvals_AssembleToken;
[L481]               __tmp__tmVestingTimer_AssembleToken := tmVestingTimer_AssembleToken;
[L482]               __tmp__tmVestingBalances_AssembleToken := tmVestingBalances_AssembleToken;
[L483]               __tmp__advVestingTimer_AssembleToken := advVestingTimer_AssembleToken;
[L484]               __tmp__advVestingBalances_AssembleToken := advVestingBalances_AssembleToken;
[L485]               __tmp__tokenLock_AssembleToken := tokenLock_AssembleToken;
[L486]               __tmp__saleTime_AssembleToken := saleTime_AssembleToken;
[L487]               __tmp__endSaleTime_AssembleToken := endSaleTime_AssembleToken;
[L488]   CALL        call __ret_0_ := transfer~address~uint256_AssembleToken__fail(this, msgsender_MSG, msgvalue_MSG, _to_s632, _value_s632);
[L1397]  CALL        call __var_1 := isTransferable_AssembleToken__fail(this, msgsender_MSG, msgvalue_MSG);
[L1617]  COND TRUE   __tmp__tokenLock_AssembleToken[this] == false
[L1618]              __ret_0_ := true;
[L1397]  RET         call __var_1 := isTransferable_AssembleToken__fail(this, msgsender_MSG, msgvalue_MSG);
[L1398]  COND FALSE  !(revert)
[L1401]  COND FALSE  !(!(__var_1 == true))
[L1405]  COND TRUE   !(__tmp__balances_AssembleToken[this][msgsender_MSG] >= _value_s632)
[L1406]              revert := true;
[L488]   RET         call __ret_0_ := transfer~address~uint256_AssembleToken__fail(this, msgsender_MSG, msgvalue_MSG, _to_s632, _value_s632);
[L489]               assume revert || gas < 0;
[L2648]  RET         call __ret_0_transfer := transfer~address~uint256_AssembleToken(this, msgsender_MSG, msgvalue_MSG, _to_s632, _value_s632);
[L2683]  RET         call CorralChoice_AssembleToken(this);

Loop:
[L2683]        assume true;

[2020-11-24 15:36:18,548 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 15:36:18,548 INFO  L82        PathProgramCache]: Analyzing trace with hash 687668332, now seen corresponding path program 1 times
[2020-11-24 15:36:18,549 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 15:36:18,559 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 15:36:18,606 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 15:36:18,607 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 15:36:18,607 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [6] imperfect sequences [] total 6
[2020-11-24 15:36:18,607 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 15:36:18,607 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 6 interpolants.
[2020-11-24 15:36:18,607 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=9, Invalid=21, Unknown=0, NotChecked=0, Total=30
[2020-11-24 15:36:18,607 INFO  L87              Difference]: Start difference. First operand 242 states and 246 transitions. cyclomatic complexity: 5 Second operand 6 states.
[2020-11-24 15:36:18,635 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 15:36:18,635 INFO  L93              Difference]: Finished difference Result 250 states and 253 transitions.
[2020-11-24 15:36:18,635 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 7 states. 
[2020-11-24 15:36:18,635 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 250 states and 253 transitions.
[2020-11-24 15:36:18,637 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 15:36:18,638 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 250 states to 247 states and 250 transitions.
[2020-11-24 15:36:18,638 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 247
[2020-11-24 15:36:18,638 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 247
[2020-11-24 15:36:18,638 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 247 states and 250 transitions.
[2020-11-24 15:36:18,638 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 15:36:18,639 INFO  L728         BuchiCegarLoop]: Abstraction has 247 states and 250 transitions.
[2020-11-24 15:36:18,639 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 247 states and 250 transitions.
[2020-11-24 15:36:18,641 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 247 to 241.
[2020-11-24 15:36:18,641 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 241 states.
[2020-11-24 15:36:18,642 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 241 states to 241 states and 244 transitions.
[2020-11-24 15:36:18,642 INFO  L751         BuchiCegarLoop]: Abstraction has 241 states and 244 transitions.
[2020-11-24 15:36:18,642 INFO  L631         BuchiCegarLoop]: Abstraction has 241 states and 244 transitions.
[2020-11-24 15:36:18,642 INFO  L445         BuchiCegarLoop]: ======== Iteration 7============
[2020-11-24 15:36:18,642 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 241 states and 244 transitions.
[2020-11-24 15:36:18,643 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 15:36:18,643 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 15:36:18,643 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 15:36:18,644 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 15:36:18,644 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L3]                 success_transfer_AssembleToken0 := false;
[L3]                 call_transfer_AssembleToken0 := false;
[L3]     CALL        call main();
[L3]                 havoc p1;
[L2678]              assume null == 0;
[L2679]  CALL        call this := FreshRefGenerator__success();
[L1332]              havoc newRef;
[L1333]              assume Alloc[newRef] == false;
[L1334]              Alloc[newRef] := true;
[L1335]              assume newRef != null;
[L2679]  RET         call this := FreshRefGenerator__success();
[L2680]              assume now >= 0;
[L2681]              assume DType[this] == AssembleToken;
[L2682]              assume !revert && gas >= 0;
[L2683]  CALL        call CorralChoice_AssembleToken(this);
[L2540]              havoc msgsender_MSG;
[L2541]              havoc msgvalue_MSG;
[L2542]              havoc choice;
[L2543]              havoc __ret_0_owner;
[L2544]              havoc _to_s157;
[L2545]              havoc __ret_0_totalSupply;
[L2546]              havoc _who_s573;
[L2547]              havoc __ret_0_balanceOf;
[L2548]              havoc _to_s632;
[L2549]              havoc _value_s632;
[L2550]              havoc __ret_0_transfer;
[L2551]              havoc _spender_s676;
[L2552]              havoc _value_s676;
[L2553]              havoc __ret_0_approve;
[L2554]              havoc _owner_s692;
[L2555]              havoc _spender_s692;
[L2556]              havoc __ret_0_allowance;
[L2557]              havoc _from_s777;
[L2558]              havoc _to_s777;
[L2559]              havoc _value_s777;
[L2560]              havoc __ret_0_transferFrom;
[L2561]              havoc __ret_0_name;
[L2562]              havoc __ret_0_decimals;
[L2563]              havoc __ret_0_symbol;
[L2564]              havoc __ret_0_maxTotalSupply;
[L2565]              havoc __ret_0_maxSaleSupply;
[L2566]              havoc __ret_0_maxSPSupply;
[L2567]              havoc __ret_0_maxEcoSupply;
[L2568]              havoc __ret_0_maxMktSupply;
[L2569]              havoc __ret_0_maxDevSupply;
[L2570]              havoc __ret_0_maxReserveSupply;
[L2571]              havoc __ret_0_maxTeamSupply;
[L2572]              havoc __ret_0_maxAdvisorSupply;
[L2573]              havoc __ret_0_seedSaleSupply;
[L2574]              havoc __ret_0_privateSaleSupply;
[L2575]              havoc __ret_0_publicSaleSupply;
[L2576]              havoc __ret_0_teamVestingSupply;
[L2577]              havoc __ret_0_teamVestingLockDate;
[L2578]              havoc __ret_0_teamVestingTime;
[L2579]              havoc __ret_0_advisorVestingSupply;
[L2580]              havoc __ret_0_advisorVestingLockDate;
[L2581]              havoc __ret_0_advisorVestingTime;
[L2582]              havoc __ret_0_totalTokenSupply;
[L2583]              havoc __ret_0_tokenIssuedSale;
[L2584]              havoc __ret_0_tokenIssuedSP;
[L2585]              havoc __ret_0_tokenIssuedEco;
[L2586]              havoc __ret_0_tokenIssuedMkt;
[L2587]              havoc __ret_0_tokenIssuedDev;
[L2588]              havoc __ret_0_tokenIssuedRsv;
[L2589]              havoc __ret_0_tokenIssuedTeam;
[L2590]              havoc __ret_0_tokenIssuedAdv;
[L2591]              havoc __ret_0_burnTokenSupply;
[L2592]              havoc arg1677_s0;
[L2593]              havoc __ret_0_balances;
[L2594]              havoc arg1678_s0;
[L2595]              havoc arg1679_s0;
[L2596]              havoc __ret_0_approvals;
[L2597]              havoc arg1680_s0;
[L2598]              havoc __ret_0_tmVestingTimer;
[L2599]              havoc arg1681_s0;
[L2600]              havoc __ret_0_tmVestingBalances;
[L2601]              havoc arg1682_s0;
[L2602]              havoc __ret_0_advVestingTimer;
[L2603]              havoc arg1683_s0;
[L2604]              havoc __ret_0_advVestingBalances;
[L2605]              havoc __ret_0_tokenLock;
[L2606]              havoc __ret_0_saleTime;
[L2607]              havoc __ret_0_endSaleTime;
[L2608]              havoc _to_s831;
[L2609]              havoc _to_s885;
[L2610]              havoc _to_s939;
[L2611]              havoc _to_s993;
[L2612]              havoc _to_s1047;
[L2613]              havoc _to_s1138;
[L2614]              havoc _time_s1138;
[L2615]              havoc _to_s1229;
[L2616]              havoc _time_s1229;
[L2617]              havoc _to_s1277;
[L2618]              havoc _to_s1325;
[L2619]              havoc _to_s1375;
[L2620]              havoc _contract_s1607;
[L2621]              havoc _decimals_s1607;
[L2622]              havoc _value_s1607;
[L2623]              havoc _value_s1663;
[L2624]              havoc tmpNow;
[L2625]              havoc gas;
[L2626]              assume gas > 4000000 && gas <= 8000000;
[L2627]              tmpNow := now;
[L2628]              havoc now;
[L2629]              assume now > tmpNow;
[L2630]              assume msgsender_MSG != null;
[L2631]  COND FALSE  !(choice == 6)
[L2637]  COND FALSE  !(choice == 5)
[L2643]  COND TRUE   choice == 4
[L2644]              gas := gas - 21000;
[L2645]  COND TRUE   gas >= 0
[L2646]              assume _value_s632 >= 0 && _value_s632 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2647]              assume msgvalue_MSG == 0;
[L2648]  CALL        call __ret_0_transfer := transfer~address~uint256_AssembleToken(this, msgsender_MSG, msgvalue_MSG, _to_s632, _value_s632);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != _to_s632) && msgsender_MSG != _to_s632) && _value_s632 <= balances_AssembleToken[this][msgsender_MSG]) && balances_AssembleToken[this][_to_s632] + _value_s632 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _value_s632 >= 0) && _value_s632 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_AssembleToken[this][_to_s632] >= 0) && balances_AssembleToken[this][_to_s632] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_AssembleToken[this][msgsender_MSG] >= 0) && balances_AssembleToken[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_AssembleToken0 := true;
[L3]                 call_transfer_AssembleToken0 := false;
[L3]                 revert := revert_hold;
[L426]               havoc __exception;
[L427]               revert := false;
[L428]   COND TRUE   __exception
[L429]               __tmp__Balance := Balance;
[L430]               __tmp__DType := DType;
[L431]               __tmp__Alloc := Alloc;
[L432]               __tmp__balance_ADDR := balance_ADDR;
[L433]               __tmp__M_Ref_int := M_Ref_int;
[L434]               __tmp__sum_balances0 := sum_balances0;
[L435]               __tmp__alloc_approvals_AssembleToken_lvl0 := alloc_approvals_AssembleToken_lvl0;
[L436]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L437]               __tmp__sum_approvals1 := sum_approvals1;
[L438]               __tmp__M_int_int := M_int_int;
[L439]               __tmp__sum_tmVestingTimer2 := sum_tmVestingTimer2;
[L440]               __tmp__sum_tmVestingBalances3 := sum_tmVestingBalances3;
[L441]               __tmp__sum_advVestingTimer4 := sum_advVestingTimer4;
[L442]               __tmp__sum_advVestingBalances5 := sum_advVestingBalances5;
[L443]               __tmp__Length := Length;
[L444]               __tmp__now := now;
[L445]               __tmp__owner_OwnerHelper := owner_OwnerHelper;
[L446]               __tmp__name_AssembleToken := name_AssembleToken;
[L447]               __tmp__decimals_AssembleToken := decimals_AssembleToken;
[L448]               __tmp__symbol_AssembleToken := symbol_AssembleToken;
[L449]               __tmp__E18_AssembleToken := E18_AssembleToken;
[L450]               __tmp__month_AssembleToken := month_AssembleToken;
[L451]               __tmp__maxTotalSupply_AssembleToken := maxTotalSupply_AssembleToken;
[L452]               __tmp__maxSaleSupply_AssembleToken := maxSaleSupply_AssembleToken;
[L453]               __tmp__maxSPSupply_AssembleToken := maxSPSupply_AssembleToken;
[L454]               __tmp__maxEcoSupply_AssembleToken := maxEcoSupply_AssembleToken;
[L455]               __tmp__maxMktSupply_AssembleToken := maxMktSupply_AssembleToken;
[L456]               __tmp__maxDevSupply_AssembleToken := maxDevSupply_AssembleToken;
[L457]               __tmp__maxReserveSupply_AssembleToken := maxReserveSupply_AssembleToken;
[L458]               __tmp__maxTeamSupply_AssembleToken := maxTeamSupply_AssembleToken;
[L459]               __tmp__maxAdvisorSupply_AssembleToken := maxAdvisorSupply_AssembleToken;
[L460]               __tmp__seedSaleSupply_AssembleToken := seedSaleSupply_AssembleToken;
[L461]               __tmp__privateSaleSupply_AssembleToken := privateSaleSupply_AssembleToken;
[L462]               __tmp__publicSaleSupply_AssembleToken := publicSaleSupply_AssembleToken;
[L463]               __tmp__teamVestingSupply_AssembleToken := teamVestingSupply_AssembleToken;
[L464]               __tmp__teamVestingLockDate_AssembleToken := teamVestingLockDate_AssembleToken;
[L465]               __tmp__teamVestingTime_AssembleToken := teamVestingTime_AssembleToken;
[L466]               __tmp__advisorVestingSupply_AssembleToken := advisorVestingSupply_AssembleToken;
[L467]               __tmp__advisorVestingLockDate_AssembleToken := advisorVestingLockDate_AssembleToken;
[L468]               __tmp__advisorVestingTime_AssembleToken := advisorVestingTime_AssembleToken;
[L469]               __tmp__totalTokenSupply_AssembleToken := totalTokenSupply_AssembleToken;
[L470]               __tmp__tokenIssuedSale_AssembleToken := tokenIssuedSale_AssembleToken;
[L471]               __tmp__tokenIssuedSP_AssembleToken := tokenIssuedSP_AssembleToken;
[L472]               __tmp__tokenIssuedEco_AssembleToken := tokenIssuedEco_AssembleToken;
[L473]               __tmp__tokenIssuedMkt_AssembleToken := tokenIssuedMkt_AssembleToken;
[L474]               __tmp__tokenIssuedDev_AssembleToken := tokenIssuedDev_AssembleToken;
[L475]               __tmp__tokenIssuedRsv_AssembleToken := tokenIssuedRsv_AssembleToken;
[L476]               __tmp__tokenIssuedTeam_AssembleToken := tokenIssuedTeam_AssembleToken;
[L477]               __tmp__tokenIssuedAdv_AssembleToken := tokenIssuedAdv_AssembleToken;
[L478]               __tmp__burnTokenSupply_AssembleToken := burnTokenSupply_AssembleToken;
[L479]               __tmp__balances_AssembleToken := balances_AssembleToken;
[L480]               __tmp__approvals_AssembleToken := approvals_AssembleToken;
[L481]               __tmp__tmVestingTimer_AssembleToken := tmVestingTimer_AssembleToken;
[L482]               __tmp__tmVestingBalances_AssembleToken := tmVestingBalances_AssembleToken;
[L483]               __tmp__advVestingTimer_AssembleToken := advVestingTimer_AssembleToken;
[L484]               __tmp__advVestingBalances_AssembleToken := advVestingBalances_AssembleToken;
[L485]               __tmp__tokenLock_AssembleToken := tokenLock_AssembleToken;
[L486]               __tmp__saleTime_AssembleToken := saleTime_AssembleToken;
[L487]               __tmp__endSaleTime_AssembleToken := endSaleTime_AssembleToken;
[L488]   CALL        call __ret_0_ := transfer~address~uint256_AssembleToken__fail(this, msgsender_MSG, msgvalue_MSG, _to_s632, _value_s632);
[L1397]  CALL        call __var_1 := isTransferable_AssembleToken__fail(this, msgsender_MSG, msgvalue_MSG);
[L1617]  COND FALSE  !(__tmp__tokenLock_AssembleToken[this] == false)
[L1620]  COND FALSE  !(msgsender_MSG == __tmp__owner_OwnerHelper[this])
[L1624]              __ret_0_ := false;
[L1397]  RET         call __var_1 := isTransferable_AssembleToken__fail(this, msgsender_MSG, msgvalue_MSG);
[L1398]  COND FALSE  !(revert)
[L1401]  COND TRUE   !(__var_1 == true)
[L1402]              revert := true;
[L488]   RET         call __ret_0_ := transfer~address~uint256_AssembleToken__fail(this, msgsender_MSG, msgvalue_MSG, _to_s632, _value_s632);
[L489]               assume revert || gas < 0;
[L2648]  RET         call __ret_0_transfer := transfer~address~uint256_AssembleToken(this, msgsender_MSG, msgvalue_MSG, _to_s632, _value_s632);
[L2683]  RET         call CorralChoice_AssembleToken(this);

Loop:
[L2683]        assume true;

[2020-11-24 15:36:18,647 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 15:36:18,647 INFO  L82        PathProgramCache]: Analyzing trace with hash -73387894, now seen corresponding path program 1 times
[2020-11-24 15:36:18,647 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 15:36:18,658 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 15:36:18,669 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 15:36:18,738 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 15:36:18,738 INFO  L82        PathProgramCache]: Analyzing trace with hash 7098, now seen corresponding path program 1 times
[2020-11-24 15:36:18,739 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 15:36:18,740 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 15:36:18,740 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 15:36:18,741 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 15:36:18,741 INFO  L82        PathProgramCache]: Analyzing trace with hash 2019949649, now seen corresponding path program 1 times
[2020-11-24 15:36:18,742 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 15:36:18,752 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 15:36:18,763 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
[2020-11-24 15:36:19,063 WARN  L188               SmtUtils]: Spent 201.00 ms on a formula simplification. DAG size of input: 264 DAG size of output: 257
Garbage collection #1: 97 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 3019 to 6037
Garbage collection #1: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #2: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #3: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #4: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #5: 1327 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 1327 to 2647
Garbage collection #6: 2647 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 2647 to 5281
Garbage collection #7: 5281 nodes / 0 free / 0.002s / 0.004s total
Resizing node table from 5281 to 10559
Garbage collection #8: 10559 nodes / 0 free / 0.002s / 0.006s total
Resizing node table from 10559 to 21107
[2020-11-24 15:36:19,256 WARN  L188               SmtUtils]: Spent 162.00 ms on a formula simplification. DAG size of input: 220 DAG size of output: 216
[2020-11-24 15:36:19,600 WARN  L188               SmtUtils]: Spent 341.00 ms on a formula simplification that was a NOOP. DAG size: 556
Garbage collection #1: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #2: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #3: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #4: 1759 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1759 to 3517
Garbage collection #5: 3517 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3517 to 7027
Garbage collection #6: 7027 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 7027 to 14051
Garbage collection #7: 14051 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 14051 to 28099
[2020-11-24 15:36:20,019 WARN  L188               SmtUtils]: Spent 394.00 ms on a formula simplification that was a NOOP. DAG size: 430
[2020-11-24 15:36:21,033 WARN  L188               SmtUtils]: Spent 1.01 s on a formula simplification. DAG size of input: 460 DAG size of output: 451
Garbage collection #1: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #2: 317 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 317 to 631
Garbage collection #3: 631 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 631 to 1259
Garbage collection #4: 1259 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1259 to 2503
Garbage collection #5: 2503 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2503 to 5003
Garbage collection #6: 5003 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 5003 to 9973
Garbage collection #7: 9973 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 9973 to 19937
Garbage collection #8: 19937 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19937 to 39869
Garbage collection #1: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #2: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #3: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #4: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #5: 1327 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1327 to 2647
Garbage collection #6: 2647 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2647 to 5281
Garbage collection #7: 5281 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 5281 to 10559
Garbage collection #8: 10559 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 10559 to 21107
[2020-11-24 15:36:21,220 WARN  L188               SmtUtils]: Spent 161.00 ms on a formula simplification. DAG size of input: 242 DAG size of output: 238
[2020-11-24 15:36:21,470 WARN  L188               SmtUtils]: Spent 247.00 ms on a formula simplification that was a NOOP. DAG size: 579
Garbage collection #1: 227 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 227 to 449
Garbage collection #2: 449 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 449 to 887
Garbage collection #3: 887 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 887 to 1759
Garbage collection #4: 1759 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1759 to 3517
Garbage collection #5: 3517 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3517 to 7027
Garbage collection #6: 7027 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 7027 to 14051
Garbage collection #7: 14051 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 14051 to 28099
Garbage collection #8: 28099 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 28099 to 56197
[2020-11-24 15:36:21,757 WARN  L188               SmtUtils]: Spent 272.00 ms on a formula simplification that was a NOOP. DAG size: 444
[2020-11-24 15:36:22,190 WARN  L188               SmtUtils]: Spent 430.00 ms on a formula simplification. DAG size of input: 464 DAG size of output: 461
Garbage collection #1: 167 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 167 to 331
Garbage collection #2: 331 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 331 to 661
Garbage collection #3: 661 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 661 to 1321
Garbage collection #4: 1321 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1321 to 2633
Garbage collection #5: 2633 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2633 to 5261
Garbage collection #6: 5261 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 5261 to 10513
Garbage collection #7: 10513 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 10513 to 21023
Garbage collection #1: 97 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3019 to 6037
[2020-11-24 15:36:22,422 WARN  L188               SmtUtils]: Spent 130.00 ms on a formula simplification that was a NOOP. DAG size: 450
Garbage collection #1: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #2: 317 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 317 to 631
Garbage collection #3: 631 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 631 to 1259
Garbage collection #4: 1259 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1259 to 2503
Garbage collection #5: 2503 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2503 to 5003
Garbage collection #6: 5003 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 5003 to 9973
Garbage collection #7: 9973 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 9973 to 19937
Garbage collection #1: 97 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3019 to 6037
[2020-11-24 15:36:22,748 WARN  L188               SmtUtils]: Spent 274.00 ms on a formula simplification. DAG size of input: 452 DAG size of output: 451
Garbage collection #1: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #2: 317 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 317 to 631
Garbage collection #3: 631 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 631 to 1259
Garbage collection #4: 1259 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1259 to 2503
Garbage collection #5: 2503 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2503 to 5003
Garbage collection #6: 5003 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 5003 to 9973
Garbage collection #7: 9973 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 9973 to 19937
Garbage collection #1: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #2: 317 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 317 to 631
Garbage collection #3: 631 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 631 to 1259
Garbage collection #4: 1259 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1259 to 2503
Garbage collection #5: 2503 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2503 to 5003
Garbage collection #6: 5003 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 5003 to 9973
Garbage collection #7: 9973 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 9973 to 19937
[2020-11-24 15:36:22,874 WARN  L188               SmtUtils]: Spent 120.00 ms on a formula simplification that was a NOOP. DAG size: 447
[2020-11-24 15:36:22,885 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 15:36:22,889 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 24.11 03:36:22 BasicIcfg
[2020-11-24 15:36:22,889 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-24 15:36:22,890 INFO  L168              Benchmark]: Toolchain (without parser) took 8125.82 ms. Allocated memory was 1.0 GB in the beginning and 1.8 GB in the end (delta: 757.1 MB). Free memory was 940.6 MB in the beginning and 1.4 GB in the end (delta: -451.2 MB). Peak memory consumption was 820.6 MB. Max. memory is 15.3 GB.
[2020-11-24 15:36:22,890 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.16 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-24 15:36:22,890 INFO  L168              Benchmark]: Boogie Preprocessor took 78.37 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 935.2 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-24 15:36:22,890 INFO  L168              Benchmark]: UtopiaSpecLang took 65.61 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 924.4 MB in the end (delta: 10.8 MB). Peak memory consumption was 10.8 MB. Max. memory is 15.3 GB.
[2020-11-24 15:36:22,891 INFO  L168              Benchmark]: Boogie Printer took 11.87 ms. Allocated memory is still 1.0 GB. Free memory is still 924.4 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-24 15:36:22,891 INFO  L168              Benchmark]: RCFGBuilder took 578.83 ms. Allocated memory is still 1.0 GB. Free memory was 924.4 MB in the beginning and 865.4 MB in the end (delta: 59.1 MB). Peak memory consumption was 59.1 MB. Max. memory is 15.3 GB.
[2020-11-24 15:36:22,891 INFO  L168              Benchmark]: UtopiaLTL2Aut took 40.17 ms. Allocated memory is still 1.0 GB. Free memory was 865.4 MB in the beginning and 856.4 MB in the end (delta: 8.9 MB). Peak memory consumption was 8.9 MB. Max. memory is 15.3 GB.
[2020-11-24 15:36:22,891 INFO  L168              Benchmark]: BÃ¼chi Program Product took 984.54 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 75.5 MB). Free memory was 856.4 MB in the beginning and 899.6 MB in the end (delta: -43.1 MB). Peak memory consumption was 141.4 MB. Max. memory is 15.3 GB.
[2020-11-24 15:36:22,892 INFO  L168              Benchmark]: BlockEncodingV2 took 86.56 ms. Allocated memory is still 1.1 GB. Free memory was 899.6 MB in the beginning and 859.9 MB in the end (delta: 39.7 MB). Peak memory consumption was 39.7 MB. Max. memory is 15.3 GB.
[2020-11-24 15:36:22,892 INFO  L168              Benchmark]: BuchiAutomizer took 6276.91 ms. Allocated memory was 1.1 GB in the beginning and 1.8 GB in the end (delta: 681.6 MB). Free memory was 859.9 MB in the beginning and 1.4 GB in the end (delta: -531.9 MB). Peak memory consumption was 664.5 MB. Max. memory is 15.3 GB.
[2020-11-24 15:36:22,894 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    2006 locations, 3279 edges
  - StatisticsResult: Encoded RCFG
    1980 locations, 3218 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.16 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 78.37 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 935.2 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 65.61 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 924.4 MB in the end (delta: 10.8 MB). Peak memory consumption was 10.8 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 11.87 ms. Allocated memory is still 1.0 GB. Free memory is still 924.4 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * RCFGBuilder took 578.83 ms. Allocated memory is still 1.0 GB. Free memory was 924.4 MB in the beginning and 865.4 MB in the end (delta: 59.1 MB). Peak memory consumption was 59.1 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 40.17 ms. Allocated memory is still 1.0 GB. Free memory was 865.4 MB in the beginning and 856.4 MB in the end (delta: 8.9 MB). Peak memory consumption was 8.9 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 984.54 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 75.5 MB). Free memory was 856.4 MB in the beginning and 899.6 MB in the end (delta: -43.1 MB). Peak memory consumption was 141.4 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 86.56 ms. Allocated memory is still 1.1 GB. Free memory was 899.6 MB in the beginning and 859.9 MB in the end (delta: 39.7 MB). Peak memory consumption was 39.7 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 6276.91 ms. Allocated memory was 1.1 GB in the beginning and 1.8 GB in the end (delta: 681.6 MB). Free memory was 859.9 MB in the beginning and 1.4 GB in the end (delta: -531.9 MB). Peak memory consumption was 664.5 MB. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    907 locations, 1040 edges
  - StatisticsResult: BuchiProgram size
    2006 locations, 3279 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 6 terminating modules (6 trivial, 0 deterministic, 0 nondeterministic) and one nonterminating remainder module.6 modules have a trivial ranking function, the largest among these consists of 17 locations. The remainder module has 241 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 6.2s and 7 iterations.  TraceHistogramMax:1. Analysis of lassos took 5.0s. Construction of modules took 0.4s. BÃ¼chi inclusion checks took 0.4s. Highest rank in rank-based complementation 0. Minimization of det autom 6. Minimization of nondet autom 0. Automata minimization 0.0s AutomataMinimizationTime, 6 MinimizatonAttempts, 30 StatesRemovedByMinimization, 4 NontrivialMinimizations. Non-live state removal took 0.0s Buchi closure took 0.0s. Biggest automaton had 287 states and ocurred in iteration 1.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 2346 SDtfs, 1774 SDslu, 4003 SDs, 0 SdLazy, 1938 SolverSat, 802 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 0.4s Time	LassoAnalysisResults: nont1 unkn0 SFLI0 SFLT0 conc0 concLT0 SILN0 SILU6 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - TransactionCounterexample: Violation of LTL property LTL
    Found an infinite, lasso-shaped execution that violates the LTL property LTL.
Stem:
AssembleToken(10).transfer~address~uint256.gas(3979001)({from : 9, _to : 4, _value : 0});
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != _to_s632) && msgsender_MSG != _to_s632) && _value_s632 <= balances_AssembleToken[this][msgsender_MSG]) && balances_AssembleToken[this][_to_s632] + _value_s632 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _value_s632 >= 0) && _value_s632 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_AssembleToken[this][_to_s632] >= 0) && balances_AssembleToken[this][_to_s632] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_AssembleToken[this][msgsender_MSG] >= 0) && balances_AssembleToken[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_AssembleToken0 := true;
[L3]                 call_transfer_AssembleToken0 := false;
[L3]                 revert := revert_hold;
[L426]               havoc __exception;
[L427]               revert := false;
[L428]   COND TRUE   __exception
[L429]               __tmp__Balance := Balance;
[L430]               __tmp__DType := DType;
[L431]               __tmp__Alloc := Alloc;
[L432]               __tmp__balance_ADDR := balance_ADDR;
[L433]               __tmp__M_Ref_int := M_Ref_int;
[L434]               __tmp__sum_balances0 := sum_balances0;
[L435]               __tmp__alloc_approvals_AssembleToken_lvl0 := alloc_approvals_AssembleToken_lvl0;
[L436]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L437]               __tmp__sum_approvals1 := sum_approvals1;
[L438]               __tmp__M_int_int := M_int_int;
[L439]               __tmp__sum_tmVestingTimer2 := sum_tmVestingTimer2;
[L440]               __tmp__sum_tmVestingBalances3 := sum_tmVestingBalances3;
[L441]               __tmp__sum_advVestingTimer4 := sum_advVestingTimer4;
[L442]               __tmp__sum_advVestingBalances5 := sum_advVestingBalances5;
[L443]               __tmp__Length := Length;
[L444]               __tmp__now := now;
[L445]               __tmp__owner_OwnerHelper := owner_OwnerHelper;
[L446]               __tmp__name_AssembleToken := name_AssembleToken;
[L447]               __tmp__decimals_AssembleToken := decimals_AssembleToken;
[L448]               __tmp__symbol_AssembleToken := symbol_AssembleToken;
[L449]               __tmp__E18_AssembleToken := E18_AssembleToken;
[L450]               __tmp__month_AssembleToken := month_AssembleToken;
[L451]               __tmp__maxTotalSupply_AssembleToken := maxTotalSupply_AssembleToken;
[L452]               __tmp__maxSaleSupply_AssembleToken := maxSaleSupply_AssembleToken;
[L453]               __tmp__maxSPSupply_AssembleToken := maxSPSupply_AssembleToken;
[L454]               __tmp__maxEcoSupply_AssembleToken := maxEcoSupply_AssembleToken;
[L455]               __tmp__maxMktSupply_AssembleToken := maxMktSupply_AssembleToken;
[L456]               __tmp__maxDevSupply_AssembleToken := maxDevSupply_AssembleToken;
[L457]               __tmp__maxReserveSupply_AssembleToken := maxReserveSupply_AssembleToken;
[L458]               __tmp__maxTeamSupply_AssembleToken := maxTeamSupply_AssembleToken;
[L459]               __tmp__maxAdvisorSupply_AssembleToken := maxAdvisorSupply_AssembleToken;
[L460]               __tmp__seedSaleSupply_AssembleToken := seedSaleSupply_AssembleToken;
[L461]               __tmp__privateSaleSupply_AssembleToken := privateSaleSupply_AssembleToken;
[L462]               __tmp__publicSaleSupply_AssembleToken := publicSaleSupply_AssembleToken;
[L463]               __tmp__teamVestingSupply_AssembleToken := teamVestingSupply_AssembleToken;
[L464]               __tmp__teamVestingLockDate_AssembleToken := teamVestingLockDate_AssembleToken;
[L465]               __tmp__teamVestingTime_AssembleToken := teamVestingTime_AssembleToken;
[L466]               __tmp__advisorVestingSupply_AssembleToken := advisorVestingSupply_AssembleToken;
[L467]               __tmp__advisorVestingLockDate_AssembleToken := advisorVestingLockDate_AssembleToken;
[L468]               __tmp__advisorVestingTime_AssembleToken := advisorVestingTime_AssembleToken;
[L469]               __tmp__totalTokenSupply_AssembleToken := totalTokenSupply_AssembleToken;
[L470]               __tmp__tokenIssuedSale_AssembleToken := tokenIssuedSale_AssembleToken;
[L471]               __tmp__tokenIssuedSP_AssembleToken := tokenIssuedSP_AssembleToken;
[L472]               __tmp__tokenIssuedEco_AssembleToken := tokenIssuedEco_AssembleToken;
[L473]               __tmp__tokenIssuedMkt_AssembleToken := tokenIssuedMkt_AssembleToken;
[L474]               __tmp__tokenIssuedDev_AssembleToken := tokenIssuedDev_AssembleToken;
[L475]               __tmp__tokenIssuedRsv_AssembleToken := tokenIssuedRsv_AssembleToken;
[L476]               __tmp__tokenIssuedTeam_AssembleToken := tokenIssuedTeam_AssembleToken;
[L477]               __tmp__tokenIssuedAdv_AssembleToken := tokenIssuedAdv_AssembleToken;
[L478]               __tmp__burnTokenSupply_AssembleToken := burnTokenSupply_AssembleToken;
[L479]               __tmp__balances_AssembleToken := balances_AssembleToken;
[L480]               __tmp__approvals_AssembleToken := approvals_AssembleToken;
[L481]               __tmp__tmVestingTimer_AssembleToken := tmVestingTimer_AssembleToken;
[L482]               __tmp__tmVestingBalances_AssembleToken := tmVestingBalances_AssembleToken;
[L483]               __tmp__advVestingTimer_AssembleToken := advVestingTimer_AssembleToken;
[L484]               __tmp__advVestingBalances_AssembleToken := advVestingBalances_AssembleToken;
[L485]               __tmp__tokenLock_AssembleToken := tokenLock_AssembleToken;
[L486]               __tmp__saleTime_AssembleToken := saleTime_AssembleToken;
[L487]               __tmp__endSaleTime_AssembleToken := endSaleTime_AssembleToken;
[L488]   CALL        call __ret_0_ := transfer~address~uint256_AssembleToken__fail(this, msgsender_MSG, msgvalue_MSG, _to_s632, _value_s632);
[L1397]  CALL        call __var_1 := isTransferable_AssembleToken__fail(this, msgsender_MSG, msgvalue_MSG);
[L1617]  COND FALSE  !(__tmp__tokenLock_AssembleToken[this] == false)
[L1620]  COND FALSE  !(msgsender_MSG == __tmp__owner_OwnerHelper[this])
[L1624]              __ret_0_ := false;
[L1397]  RET         call __var_1 := isTransferable_AssembleToken__fail(this, msgsender_MSG, msgvalue_MSG);
[L1398]  COND FALSE  !(revert)
[L1401]  COND TRUE   !(__var_1 == true)
[L1402]              revert := true;
[L488]   RET         call __ret_0_ := transfer~address~uint256_AssembleToken__fail(this, msgsender_MSG, msgvalue_MSG, _to_s632, _value_s632);
[L489]               assume revert || gas < 0;
[L2648]  RET         call __ret_0_transfer := transfer~address~uint256_AssembleToken(this, msgsender_MSG, msgvalue_MSG, _to_s632, _value_s632);

Loop:

End of lasso representation.
RESULT: Ultimate could not prove your program: Toolchain returned no result.
Received shutdown request...
