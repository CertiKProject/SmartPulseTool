This is Ultimate 0.1.24-f1553f5-m
[2020-11-24 18:00:03,884 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-24 18:00:03,885 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-24 18:00:03,892 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-24 18:00:03,892 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-24 18:00:03,893 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-24 18:00:03,893 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-24 18:00:03,894 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-24 18:00:03,895 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-24 18:00:03,896 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-24 18:00:03,896 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-24 18:00:03,896 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-24 18:00:03,897 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-24 18:00:03,897 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-24 18:00:03,898 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-24 18:00:03,898 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-24 18:00:03,899 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-24 18:00:03,900 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-24 18:00:03,901 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-24 18:00:03,901 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-24 18:00:03,902 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-24 18:00:03,902 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-24 18:00:03,904 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-24 18:00:03,904 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-24 18:00:03,904 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-24 18:00:03,904 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-24 18:00:03,905 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-24 18:00:03,905 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-24 18:00:03,905 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-24 18:00:03,905 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-24 18:00:03,906 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-24 18:00:03,906 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-24 18:00:03,906 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-24 18:00:03,907 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-24 18:00:03,907 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-24 18:00:03,907 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-24 18:00:03,908 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-24 18:00:03,908 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-24 18:00:03,908 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-24 18:00:03,908 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-24 18:00:03,909 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-24 18:00:03,909 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-24 18:00:03,914 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-24 18:00:03,914 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-24 18:00:03,915 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-24 18:00:03,915 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-24 18:00:03,915 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-24 18:00:03,915 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-24 18:00:03,915 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-24 18:00:03,915 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-24 18:00:03,915 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-24 18:00:03,915 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-24 18:00:03,915 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-24 18:00:03,916 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-24 18:00:03,916 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-24 18:00:03,916 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-24 18:00:03,916 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-24 18:00:03,916 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-24 18:00:03,916 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-24 18:00:03,916 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-24 18:00:03,916 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-24 18:00:03,916 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-24 18:00:03,916 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-24 18:00:03,916 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-24 18:00:03,916 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-24 18:00:03,916 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-24 18:00:03,916 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-24 18:00:03,917 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-24 18:00:03,938 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-24 18:00:03,950 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-24 18:00:03,952 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-24 18:00:03,953 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-24 18:00:03,953 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-24 18:00:03,954 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/YearnFinanceBitToken_0xf0a0f3a6fa6bed75345171a5ea18abcadf6453ba_transfer-self.bpl
[2020-11-24 18:00:03,954 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/YearnFinanceBitToken_0xf0a0f3a6fa6bed75345171a5ea18abcadf6453ba_transfer-self.bpl'
[2020-11-24 18:00:04,010 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-24 18:00:04,011 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-24 18:00:04,011 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-24 18:00:04,011 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-24 18:00:04,011 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-24 18:00:04,027 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "YearnFinanceBitToken_0xf0a0f3a6fa6bed75345171a5ea18abcadf6453ba_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 06:00:04" (1/1) ...
[2020-11-24 18:00:04,028 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "YearnFinanceBitToken_0xf0a0f3a6fa6bed75345171a5ea18abcadf6453ba_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 06:00:04" (1/1) ...
[2020-11-24 18:00:04,047 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "YearnFinanceBitToken_0xf0a0f3a6fa6bed75345171a5ea18abcadf6453ba_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 06:00:04" (1/1) ...
[2020-11-24 18:00:04,048 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "YearnFinanceBitToken_0xf0a0f3a6fa6bed75345171a5ea18abcadf6453ba_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 06:00:04" (1/1) ...
[2020-11-24 18:00:04,060 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "YearnFinanceBitToken_0xf0a0f3a6fa6bed75345171a5ea18abcadf6453ba_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 06:00:04" (1/1) ...
[2020-11-24 18:00:04,067 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "YearnFinanceBitToken_0xf0a0f3a6fa6bed75345171a5ea18abcadf6453ba_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 06:00:04" (1/1) ...
[2020-11-24 18:00:04,071 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "YearnFinanceBitToken_0xf0a0f3a6fa6bed75345171a5ea18abcadf6453ba_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 06:00:04" (1/1) ...
[2020-11-24 18:00:04,077 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-24 18:00:04,078 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-24 18:00:04,078 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-24 18:00:04,080 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-24 18:00:04,085 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "YearnFinanceBitToken_0xf0a0f3a6fa6bed75345171a5ea18abcadf6453ba_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 06:00:04" (1/1) ...
[2020-11-24 18:00:04,098 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(YearnFinanceBitToken.transfer(to, value), msg.sender == to && value <= balances_YearnFinanceBitToken[this][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_YearnFinanceBitToken[this][to] >= 0 && balances_YearnFinanceBitToken[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_YearnFinanceBitToken[this][msg.sender] >= 0 &&  balances_YearnFinanceBitToken[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(YearnFinanceBitToken.transfer(to, value), return == true && _totalSupply_YearnFinanceBitToken[this] == old(_totalSupply_YearnFinanceBitToken[this]) && balances_YearnFinanceBitToken[this] == old(balances_YearnFinanceBitToken[this]) && allowed_YearnFinanceBitToken[this] == old(allowed_YearnFinanceBitToken[this]) && name_YearnFinanceBitToken[this] == old(name_YearnFinanceBitToken[this]) && symbol_YearnFinanceBitToken[this] == old(symbol_YearnFinanceBitToken[this]) && decimals_YearnFinanceBitToken[this] == old(decimals_YearnFinanceBitToken[this]))))
[2020-11-24 18:00:04,104 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(YearnFinanceBitToken.transfer(to, value), msg.sender == to && value <= balances_YearnFinanceBitToken[this][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_YearnFinanceBitToken[this][to] >= 0 && balances_YearnFinanceBitToken[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_YearnFinanceBitToken[this][msg.sender] >= 0 &&  balances_YearnFinanceBitToken[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(YearnFinanceBitToken.transfer(to, value), return == true && _totalSupply_YearnFinanceBitToken[this] == old(_totalSupply_YearnFinanceBitToken[this]) && balances_YearnFinanceBitToken[this] == old(balances_YearnFinanceBitToken[this]) && allowed_YearnFinanceBitToken[this] == old(allowed_YearnFinanceBitToken[this]) && name_YearnFinanceBitToken[this] == old(name_YearnFinanceBitToken[this]) && symbol_YearnFinanceBitToken[this] == old(symbol_YearnFinanceBitToken[this]) && decimals_YearnFinanceBitToken[this] == old(decimals_YearnFinanceBitToken[this]))))
[2020-11-24 18:00:04,110 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(YearnFinanceBitToken.transfer(to, value), msg.sender == to && value <= balances_YearnFinanceBitToken[this][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_YearnFinanceBitToken[this][to] >= 0 && balances_YearnFinanceBitToken[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_YearnFinanceBitToken[this][msg.sender] >= 0 &&  balances_YearnFinanceBitToken[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(YearnFinanceBitToken.transfer(to, value), return == true && _totalSupply_YearnFinanceBitToken[this] == old(_totalSupply_YearnFinanceBitToken[this]) && balances_YearnFinanceBitToken[this] == old(balances_YearnFinanceBitToken[this]) && allowed_YearnFinanceBitToken[this] == old(allowed_YearnFinanceBitToken[this]) && name_YearnFinanceBitToken[this] == old(name_YearnFinanceBitToken[this]) && symbol_YearnFinanceBitToken[this] == old(symbol_YearnFinanceBitToken[this]) && decimals_YearnFinanceBitToken[this] == old(decimals_YearnFinanceBitToken[this]))))
[2020-11-24 18:00:04,116 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( msg.sender==to_s334 && tokens_s334<=balances_YearnFinanceBitToken[this][msg.sender] ) && tokens_s334>=0 ) && tokens_s334<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && balances_YearnFinanceBitToken[this][to_s334]>=0 ) && balances_YearnFinanceBitToken[this][to_s334]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && balances_YearnFinanceBitToken[this][msg.sender]>=0 ) && balances_YearnFinanceBitToken[this][msg.sender]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_YearnFinanceBitToken>],IdentifierExpression[to_s334,<IMPLEMENTATION_INPARAM,transfer~address~uint256_YearnFinanceBitToken>]],BinaryExpression[COMPLEQ,IdentifierExpression[tokens_s334,<IMPLEMENTATION_INPARAM,transfer~address~uint256_YearnFinanceBitToken>],ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_YearnFinanceBitToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_YearnFinanceBitToken>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_YearnFinanceBitToken>]]]]],BinaryExpression[COMPGEQ,IdentifierExpression[tokens_s334,<IMPLEMENTATION_INPARAM,transfer~address~uint256_YearnFinanceBitToken>],IntegerLiteral[0]]],BinaryExpression[COMPLT,IdentifierExpression[tokens_s334,<IMPLEMENTATION_INPARAM,transfer~address~uint256_YearnFinanceBitToken>],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_YearnFinanceBitToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_YearnFinanceBitToken>]]],[IdentifierExpression[to_s334,<IMPLEMENTATION_INPARAM,transfer~address~uint256_YearnFinanceBitToken>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_YearnFinanceBitToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_YearnFinanceBitToken>]]],[IdentifierExpression[to_s334,<IMPLEMENTATION_INPARAM,transfer~address~uint256_YearnFinanceBitToken>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_YearnFinanceBitToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_YearnFinanceBitToken>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_YearnFinanceBitToken>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_YearnFinanceBitToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_YearnFinanceBitToken>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_YearnFinanceBitToken>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]]
[2020-11-24 18:00:04,118 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( success_s334==true && _totalSupply_YearnFinanceBitToken[this]==( old(_totalSupply_YearnFinanceBitToken[this]) ) ) && balances_YearnFinanceBitToken[this]==( old(balances_YearnFinanceBitToken[this]) ) ) && allowed_YearnFinanceBitToken[this]==( old(allowed_YearnFinanceBitToken[this]) ) ) && name_YearnFinanceBitToken[this]==( old(name_YearnFinanceBitToken[this]) ) ) && symbol_YearnFinanceBitToken[this]==( old(symbol_YearnFinanceBitToken[this]) ) ) && decimals_YearnFinanceBitToken[this]==( old(decimals_YearnFinanceBitToken[this]) ) ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[success_s334,<IMPLEMENTATION_OUTPARAM,transfer~address~uint256_YearnFinanceBitToken>],BooleanLiteral[true]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_totalSupply_YearnFinanceBitToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_YearnFinanceBitToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_totalSupply_YearnFinanceBitToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_YearnFinanceBitToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[balances_YearnFinanceBitToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_YearnFinanceBitToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[balances_YearnFinanceBitToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_YearnFinanceBitToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[allowed_YearnFinanceBitToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_YearnFinanceBitToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[allowed_YearnFinanceBitToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_YearnFinanceBitToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[name_YearnFinanceBitToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_YearnFinanceBitToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[name_YearnFinanceBitToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_YearnFinanceBitToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[symbol_YearnFinanceBitToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_YearnFinanceBitToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[symbol_YearnFinanceBitToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_YearnFinanceBitToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[decimals_YearnFinanceBitToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_YearnFinanceBitToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[decimals_YearnFinanceBitToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_YearnFinanceBitToken>]]]]]]
[2020-11-24 18:00:04,121 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(YearnFinanceBitToken.transfer(to, value), msg.sender == to && value <= balances_YearnFinanceBitToken[this][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_YearnFinanceBitToken[this][to] >= 0 && balances_YearnFinanceBitToken[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_YearnFinanceBitToken[this][msg.sender] >= 0 &&  balances_YearnFinanceBitToken[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(YearnFinanceBitToken.transfer(to, value), return == true && _totalSupply_YearnFinanceBitToken[this] == old(_totalSupply_YearnFinanceBitToken[this]) && balances_YearnFinanceBitToken[this] == old(balances_YearnFinanceBitToken[this]) && allowed_YearnFinanceBitToken[this] == old(allowed_YearnFinanceBitToken[this]) && name_YearnFinanceBitToken[this] == old(name_YearnFinanceBitToken[this]) && symbol_YearnFinanceBitToken[this] == old(symbol_YearnFinanceBitToken[this]) && decimals_YearnFinanceBitToken[this] == old(decimals_YearnFinanceBitToken[this]))))
[2020-11-24 18:00:04,121 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_transfer_YearnFinanceBitToken0) ==> ( <>AP(success_transfer_YearnFinanceBitToken0) ) ) )
Executed UtopiaSpecLang
[2020-11-24 18:00:04,125 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 06:00:04 PropertyContainer
[2020-11-24 18:00:04,125 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-24 18:00:04,126 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-24 18:00:04,126 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-24 18:00:04,126 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-24 18:00:04,126 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "YearnFinanceBitToken_0xf0a0f3a6fa6bed75345171a5ea18abcadf6453ba_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 06:00:04" (1/2) ...
[2020-11-24 18:00:04,127 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-24 18:00:04,127 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-24 18:00:04,134 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 06:00:04" (2/2) ...
[2020-11-24 18:00:04,135 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-24 18:00:04,135 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-24 18:00:04,135 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-24 18:00:04,135 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-24 18:00:04,136 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "YearnFinanceBitToken_0xf0a0f3a6fa6bed75345171a5ea18abcadf6453ba_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 06:00:04" (1/2) ...
[2020-11-24 18:00:04,187 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-24 18:00:04,187 INFO  L130     BoogieDeclarations]: Found specification of procedure safeAdd~uint256~uint256_SafeMath
[2020-11-24 18:00:04,187 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeAdd~uint256~uint256_SafeMath
[2020-11-24 18:00:04,187 INFO  L130     BoogieDeclarations]: Found specification of procedure safeSub~uint256~uint256_SafeMath
[2020-11-24 18:00:04,187 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeSub~uint256~uint256_SafeMath
[2020-11-24 18:00:04,187 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_YearnFinanceBitToken
[2020-11-24 18:00:04,187 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_YearnFinanceBitToken
[2020-11-24 18:00:04,187 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_YearnFinanceBitToken
[2020-11-24 18:00:04,187 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_YearnFinanceBitToken
[2020-11-24 18:00:04,188 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_YearnFinanceBitToken
[2020-11-24 18:00:04,188 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_YearnFinanceBitToken
[2020-11-24 18:00:04,188 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_YearnFinanceBitToken
[2020-11-24 18:00:04,188 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_YearnFinanceBitToken
[2020-11-24 18:00:04,188 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_YearnFinanceBitToken
[2020-11-24 18:00:04,188 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_YearnFinanceBitToken
[2020-11-24 18:00:04,188 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_YearnFinanceBitToken
[2020-11-24 18:00:04,188 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_YearnFinanceBitToken
[2020-11-24 18:00:04,188 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-24 18:00:04,189 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-24 18:00:04,189 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-24 18:00:04,189 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20Interface
[2020-11-24 18:00:04,189 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20Interface
[2020-11-24 18:00:04,189 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_SafeMath
[2020-11-24 18:00:04,189 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_SafeMath
[2020-11-24 18:00:04,189 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_YearnFinanceBitToken
[2020-11-24 18:00:04,189 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-24 18:00:04,189 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-24 18:00:04,189 INFO  L130     BoogieDeclarations]: Found specification of procedure safeAdd~uint256~uint256_SafeMath__success
[2020-11-24 18:00:04,190 INFO  L130     BoogieDeclarations]: Found specification of procedure safeAdd~uint256~uint256_SafeMath__fail
[2020-11-24 18:00:04,190 INFO  L130     BoogieDeclarations]: Found specification of procedure safeSub~uint256~uint256_SafeMath__success
[2020-11-24 18:00:04,190 INFO  L130     BoogieDeclarations]: Found specification of procedure safeSub~uint256~uint256_SafeMath__fail
[2020-11-24 18:00:04,190 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_YearnFinanceBitToken__success
[2020-11-24 18:00:04,190 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_YearnFinanceBitToken__fail
[2020-11-24 18:00:04,190 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_YearnFinanceBitToken__success
[2020-11-24 18:00:04,190 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_YearnFinanceBitToken__fail
[2020-11-24 18:00:04,190 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_YearnFinanceBitToken__success
[2020-11-24 18:00:04,190 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_YearnFinanceBitToken__fail
[2020-11-24 18:00:04,190 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_YearnFinanceBitToken__success
[2020-11-24 18:00:04,190 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_YearnFinanceBitToken__fail
[2020-11-24 18:00:04,190 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_YearnFinanceBitToken__success
[2020-11-24 18:00:04,190 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_YearnFinanceBitToken__fail
[2020-11-24 18:00:04,190 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_YearnFinanceBitToken__success
[2020-11-24 18:00:04,191 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_YearnFinanceBitToken__fail
[2020-11-24 18:00:04,191 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-24 18:00:04,191 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-24 18:00:04,191 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-24 18:00:04,191 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-24 18:00:04,191 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-24 18:00:04,191 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeAdd~uint256~uint256_SafeMath__fail
[2020-11-24 18:00:04,191 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeAdd~uint256~uint256_SafeMath__success
[2020-11-24 18:00:04,191 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeSub~uint256~uint256_SafeMath__fail
[2020-11-24 18:00:04,191 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeSub~uint256~uint256_SafeMath__success
[2020-11-24 18:00:04,191 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_YearnFinanceBitToken__fail
[2020-11-24 18:00:04,191 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_YearnFinanceBitToken__success
[2020-11-24 18:00:04,191 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_YearnFinanceBitToken__fail
[2020-11-24 18:00:04,192 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_YearnFinanceBitToken__success
[2020-11-24 18:00:04,192 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_YearnFinanceBitToken__fail
[2020-11-24 18:00:04,192 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_YearnFinanceBitToken__success
[2020-11-24 18:00:04,192 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_YearnFinanceBitToken__fail
[2020-11-24 18:00:04,192 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_YearnFinanceBitToken__success
[2020-11-24 18:00:04,192 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_YearnFinanceBitToken__fail
[2020-11-24 18:00:04,192 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_YearnFinanceBitToken__success
[2020-11-24 18:00:04,192 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_YearnFinanceBitToken__fail
[2020-11-24 18:00:04,192 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_YearnFinanceBitToken__success
[2020-11-24 18:00:04,192 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-24 18:00:04,192 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-24 18:00:04,192 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-24 18:00:04,192 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-24 18:00:04,192 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-24 18:00:04,193 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-24 18:00:04,193 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20Interface
[2020-11-24 18:00:04,193 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20Interface
[2020-11-24 18:00:04,193 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_SafeMath
[2020-11-24 18:00:04,193 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_SafeMath
[2020-11-24 18:00:04,193 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_YearnFinanceBitToken
[2020-11-24 18:00:04,193 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-24 18:00:04,193 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-24 18:00:04,193 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-24 18:00:04,510 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 18:00:04,510 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 18:00:04,510 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 18:00:04,583 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-24 18:00:04,583 INFO  L286             CfgBuilder]: Removed 3 assue(true) statements.
[2020-11-24 18:00:04,584 INFO  L202        PluginConnector]: Adding new model YearnFinanceBitToken_0xf0a0f3a6fa6bed75345171a5ea18abcadf6453ba_transfer-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 06:00:04 BoogieIcfgContainer
[2020-11-24 18:00:04,585 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 06:00:04" (2/2) ...
[2020-11-24 18:00:04,585 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-24 18:00:04,585 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@1be119c0 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 06:00:04, skipping insertion in model container
[2020-11-24 18:00:04,585 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-24 18:00:04,585 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-24 18:00:04,586 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-24 18:00:04,587 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-24 18:00:04,587 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "YearnFinanceBitToken_0xf0a0f3a6fa6bed75345171a5ea18abcadf6453ba_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 06:00:04" (1/3) ...
[2020-11-24 18:00:04,587 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@67f2e192 and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 06:00:04, skipping insertion in model container
[2020-11-24 18:00:04,588 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 06:00:04" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-24 18:00:04,627 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 06:00:04 NWAContainer
[2020-11-24 18:00:04,627 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-24 18:00:04,627 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-24 18:00:04,627 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-24 18:00:04,628 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-24 18:00:04,629 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "YearnFinanceBitToken_0xf0a0f3a6fa6bed75345171a5ea18abcadf6453ba_transfer-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 06:00:04" (3/4) ...
[2020-11-24 18:00:04,629 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@183dbda2 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 06:00:04, skipping insertion in model container
[2020-11-24 18:00:04,630 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 06:00:04" (4/4) ...
[2020-11-24 18:00:04,632 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-24 18:00:04,635 INFO  L110   BuchiProductObserver]: Initial RCFG 612 locations, 763 edges
[2020-11-24 18:00:04,635 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-24 18:00:04,644 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-24 18:00:05,464 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-24 18:00:05,466 INFO  L110   BuchiProductObserver]: BuchiProgram size 1434 locations, 2462 edges
[2020-11-24 18:00:05,466 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 06:00:05 BoogieIcfgContainer
[2020-11-24 18:00:05,467 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-24 18:00:05,467 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-24 18:00:05,467 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-24 18:00:05,469 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-24 18:00:05,469 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 06:00:05" (1/1) ...
[2020-11-24 18:00:05,513 INFO  L313           BlockEncoder]: Initial Icfg 1434 locations, 2462 edges
[2020-11-24 18:00:05,513 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-24 18:00:05,514 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-24 18:00:05,514 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-24 18:00:05,515 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-24 18:00:05,522 INFO  L70    emoveInfeasibleEdges]: Removed 63 edges and 9 locations because of local infeasibility
[2020-11-24 18:00:05,526 INFO  L70        RemoveSinkStates]: Removed 32 edges and 21 locations by removing sink states
[2020-11-24 18:00:05,531 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-24 18:00:05,533 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-24 18:00:05,534 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-24 18:00:05,535 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-24 18:00:05,537 INFO  L313           BlockEncoder]: Encoded RCFG 1392 locations, 2350 edges
[2020-11-24 18:00:05,537 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 24.11 06:00:05 BasicIcfg
[2020-11-24 18:00:05,538 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-24 18:00:05,538 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-24 18:00:05,538 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-24 18:00:05,540 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-24 18:00:05,540 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 18:00:05,541 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "YearnFinanceBitToken_0xf0a0f3a6fa6bed75345171a5ea18abcadf6453ba_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 06:00:04" (1/6) ...
[2020-11-24 18:00:05,542 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@225cf4e2 and model type YearnFinanceBitToken_0xf0a0f3a6fa6bed75345171a5ea18abcadf6453ba_transfer-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 24.11 06:00:05, skipping insertion in model container
[2020-11-24 18:00:05,542 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 18:00:05,542 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 06:00:04" (2/6) ...
[2020-11-24 18:00:05,543 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@225cf4e2 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 24.11 06:00:05, skipping insertion in model container
[2020-11-24 18:00:05,543 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 18:00:05,543 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "YearnFinanceBitToken_0xf0a0f3a6fa6bed75345171a5ea18abcadf6453ba_transfer-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 06:00:04" (3/6) ...
[2020-11-24 18:00:05,543 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@225cf4e2 and model type YearnFinanceBitToken_0xf0a0f3a6fa6bed75345171a5ea18abcadf6453ba_transfer-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 24.11 06:00:05, skipping insertion in model container
[2020-11-24 18:00:05,543 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 18:00:05,543 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 06:00:04" (4/6) ...
[2020-11-24 18:00:05,543 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@225cf4e2 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 24.11 06:00:05, skipping insertion in model container
[2020-11-24 18:00:05,544 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 18:00:05,544 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 06:00:05" (5/6) ...
[2020-11-24 18:00:05,544 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@225cf4e2 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 24.11 06:00:05, skipping insertion in model container
[2020-11-24 18:00:05,544 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 18:00:05,544 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 24.11 06:00:05" (6/6) ...
[2020-11-24 18:00:05,545 INFO  L404   chiAutomizerObserver]: Analyzing ICFG YearnFinanceBitToken_0xf0a0f3a6fa6bed75345171a5ea18abcadf6453ba_transfer-self.bpl_BEv2
[2020-11-24 18:00:05,582 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-24 18:00:05,582 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-24 18:00:05,582 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-24 18:00:05,583 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-24 18:00:05,583 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-24 18:00:05,583 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-24 18:00:05,583 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-24 18:00:05,583 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-24 18:00:05,583 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-24 18:00:05,601 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1392 states.
[2020-11-24 18:00:05,642 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 18:00:05,642 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 18:00:05,642 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 18:00:05,653 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 18:00:05,653 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
[2020-11-24 18:00:05,653 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-24 18:00:05,653 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1392 states.
[2020-11-24 18:00:05,663 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 18:00:05,663 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 18:00:05,663 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 18:00:05,665 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 18:00:05,665 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L2]                 success_transfer_YearnFinanceBitToken0 := false;
[L2]                 call_transfer_YearnFinanceBitToken0 := false;
[L2]     CALL        call main();
[L1721]              assume null == 0;
[L1722]  CALL        call this := FreshRefGenerator__success();
[L700]               havoc newRef;
[L701]               assume Alloc[newRef] == false;
[L702]               Alloc[newRef] := true;
[L703]               assume newRef != null;
[L1722]  RET         call this := FreshRefGenerator__success();
[L1723]              assume now >= 0;
[L1724]              assume DType[this] == YearnFinanceBitToken;
[L1725]              assume !revert && gas >= 0;
[L1726]  CALL        call CorralChoice_YearnFinanceBitToken(this);
[L1616]              havoc msgsender_MSG;
[L1617]              havoc msgvalue_MSG;
[L1618]              havoc choice;
[L1619]              havoc __ret_0_totalSupply;
[L1620]              havoc tokenOwner_s247;
[L1621]              havoc balance_s247;
[L1622]              havoc tokenOwner_s263;
[L1623]              havoc spender_s263;
[L1624]              havoc remaining_s263;
[L1625]              havoc to_s334;
[L1626]              havoc tokens_s334;
[L1627]              havoc success_s334;
[L1628]              havoc spender_s291;
[L1629]              havoc tokens_s291;
[L1630]              havoc success_s291;
[L1631]              havoc from_s393;
[L1632]              havoc to_s393;
[L1633]              havoc tokens_s393;
[L1634]              havoc success_s393;
[L1635]              havoc a_s90;
[L1636]              havoc b_s90;
[L1637]              havoc c_s90;
[L1638]              havoc a_s112;
[L1639]              havoc b_s112;
[L1640]              havoc c_s112;
[L1641]              havoc a_s140;
[L1642]              havoc b_s140;
[L1643]              havoc c_s140;
[L1644]              havoc a_s162;
[L1645]              havoc b_s162;
[L1646]              havoc c_s162;
[L1647]              havoc __ret_0_name;
[L1648]              havoc __ret_0_symbol;
[L1649]              havoc __ret_0_decimals;
[L1650]              havoc __ret_0__totalSupply;
[L1651]              havoc tmpNow;
[L1652]              havoc gas;
[L1653]              assume gas > 4000000 && gas <= 8000000;
[L1654]              tmpNow := now;
[L1655]              havoc now;
[L1656]              assume now > tmpNow;
[L1657]              assume msgsender_MSG != null;
[L1658]  COND TRUE   choice == 8
[L1659]              gas := gas - 21000;
[L1660]  COND FALSE  !(gas >= 0)
[L1726]  RET         call CorralChoice_YearnFinanceBitToken(this);

Loop:
[L1726]        assume true;

[2020-11-24 18:00:05,681 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 18:00:05,681 INFO  L82        PathProgramCache]: Analyzing trace with hash 1388340333, now seen corresponding path program 1 times
[2020-11-24 18:00:05,686 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 18:00:05,704 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 18:00:05,751 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 18:00:05,753 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 18:00:05,753 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-24 18:00:05,761 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 18:00:05,774 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-24 18:00:05,775 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-24 18:00:05,776 INFO  L87              Difference]: Start difference. First operand 1392 states. Second operand 4 states.
[2020-11-24 18:00:06,026 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 18:00:06,027 INFO  L93              Difference]: Finished difference Result 626 states and 686 transitions.
[2020-11-24 18:00:06,029 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-24 18:00:06,033 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 626 states and 686 transitions.
[2020-11-24 18:00:06,041 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 18:00:06,047 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 626 states to 174 states and 183 transitions.
[2020-11-24 18:00:06,047 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 4
[2020-11-24 18:00:06,048 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 174
[2020-11-24 18:00:06,049 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 174 states and 183 transitions.
[2020-11-24 18:00:06,050 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 18:00:06,050 INFO  L728         BuchiCegarLoop]: Abstraction has 174 states and 183 transitions.
[2020-11-24 18:00:06,065 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 174 states and 183 transitions.
[2020-11-24 18:00:06,078 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 174 to 174.
[2020-11-24 18:00:06,078 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 174 states.
[2020-11-24 18:00:06,079 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 174 states to 174 states and 183 transitions.
[2020-11-24 18:00:06,080 INFO  L751         BuchiCegarLoop]: Abstraction has 174 states and 183 transitions.
[2020-11-24 18:00:06,080 INFO  L631         BuchiCegarLoop]: Abstraction has 174 states and 183 transitions.
[2020-11-24 18:00:06,080 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-24 18:00:06,080 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 174 states and 183 transitions.
[2020-11-24 18:00:06,081 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 18:00:06,081 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 18:00:06,081 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 18:00:06,082 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 18:00:06,082 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L2]                 success_transfer_YearnFinanceBitToken0 := false;
[L2]                 call_transfer_YearnFinanceBitToken0 := false;
[L2]     CALL        call main();
[L1721]              assume null == 0;
[L1722]  CALL        call this := FreshRefGenerator__success();
[L700]               havoc newRef;
[L701]               assume Alloc[newRef] == false;
[L702]               Alloc[newRef] := true;
[L703]               assume newRef != null;
[L1722]  RET         call this := FreshRefGenerator__success();
[L1723]              assume now >= 0;
[L1724]              assume DType[this] == YearnFinanceBitToken;
[L1725]              assume !revert && gas >= 0;
[L1726]  CALL        call CorralChoice_YearnFinanceBitToken(this);
[L1616]              havoc msgsender_MSG;
[L1617]              havoc msgvalue_MSG;
[L1618]              havoc choice;
[L1619]              havoc __ret_0_totalSupply;
[L1620]              havoc tokenOwner_s247;
[L1621]              havoc balance_s247;
[L1622]              havoc tokenOwner_s263;
[L1623]              havoc spender_s263;
[L1624]              havoc remaining_s263;
[L1625]              havoc to_s334;
[L1626]              havoc tokens_s334;
[L1627]              havoc success_s334;
[L1628]              havoc spender_s291;
[L1629]              havoc tokens_s291;
[L1630]              havoc success_s291;
[L1631]              havoc from_s393;
[L1632]              havoc to_s393;
[L1633]              havoc tokens_s393;
[L1634]              havoc success_s393;
[L1635]              havoc a_s90;
[L1636]              havoc b_s90;
[L1637]              havoc c_s90;
[L1638]              havoc a_s112;
[L1639]              havoc b_s112;
[L1640]              havoc c_s112;
[L1641]              havoc a_s140;
[L1642]              havoc b_s140;
[L1643]              havoc c_s140;
[L1644]              havoc a_s162;
[L1645]              havoc b_s162;
[L1646]              havoc c_s162;
[L1647]              havoc __ret_0_name;
[L1648]              havoc __ret_0_symbol;
[L1649]              havoc __ret_0_decimals;
[L1650]              havoc __ret_0__totalSupply;
[L1651]              havoc tmpNow;
[L1652]              havoc gas;
[L1653]              assume gas > 4000000 && gas <= 8000000;
[L1654]              tmpNow := now;
[L1655]              havoc now;
[L1656]              assume now > tmpNow;
[L1657]              assume msgsender_MSG != null;
[L1658]  COND FALSE  !(choice == 8)
[L1664]  COND FALSE  !(choice == 7)
[L1670]  COND FALSE  !(choice == 6)
[L1676]  COND TRUE   choice == 5
[L1677]              gas := gas - 21000;
[L1678]  COND TRUE   gas >= 0
[L1679]              assume tokens_s334 >= 0 && tokens_s334 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1680]              assume msgvalue_MSG == 0;
[L1681]  CALL        call success_s334 := transfer~address~uint256_YearnFinanceBitToken(this, msgsender_MSG, msgvalue_MSG, to_s334, tokens_s334);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == to_s334 && tokens_s334 <= balances_YearnFinanceBitToken[this][msgsender_MSG]) && tokens_s334 >= 0) && tokens_s334 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_YearnFinanceBitToken[this][to_s334] >= 0) && balances_YearnFinanceBitToken[this][to_s334] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_YearnFinanceBitToken[this][msgsender_MSG] >= 0) && balances_YearnFinanceBitToken[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_YearnFinanceBitToken0 := true;
[L2]                 call_transfer_YearnFinanceBitToken0 := false;
[L2]                 revert := revert_hold;
[L371]               havoc __exception;
[L372]               revert := false;
[L373]   COND FALSE  !(__exception)
[L394]   CALL        call success_s334 := transfer~address~uint256_YearnFinanceBitToken__success(this, msgsender_MSG, msgvalue_MSG, to_s334, tokens_s334);
[L835]   COND TRUE   DType[this] == YearnFinanceBitToken
[L836]   CALL        call __var_2 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_YearnFinanceBitToken[this][msgsender_MSG], tokens_s334);
[L735]   COND TRUE   !(b_s112 <= a_s112)
[L736]               revert := true;
[L836]   RET         call __var_2 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_YearnFinanceBitToken[this][msgsender_MSG], tokens_s334);
[L837]   COND TRUE   revert
[L394]   RET         call success_s334 := transfer~address~uint256_YearnFinanceBitToken__success(this, msgsender_MSG, msgvalue_MSG, to_s334, tokens_s334);
[L395]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !((((((success_s334 == true && _totalSupply_YearnFinanceBitToken[this] == old(_totalSupply_YearnFinanceBitToken[this])) && balances_YearnFinanceBitToken[this] == old(balances_YearnFinanceBitToken[this])) && allowed_YearnFinanceBitToken[this] == old(allowed_YearnFinanceBitToken[this])) && name_YearnFinanceBitToken[this] == old(name_YearnFinanceBitToken[this])) && symbol_YearnFinanceBitToken[this] == old(symbol_YearnFinanceBitToken[this])) && decimals_YearnFinanceBitToken[this] == old(decimals_YearnFinanceBitToken[this]));
[L2]                 revert := revert_hold;
[L1681]  RET         call success_s334 := transfer~address~uint256_YearnFinanceBitToken(this, msgsender_MSG, msgvalue_MSG, to_s334, tokens_s334);
[L1726]  RET         call CorralChoice_YearnFinanceBitToken(this);

Loop:
[L1726]        assume true;

[2020-11-24 18:00:06,085 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 18:00:06,085 INFO  L82        PathProgramCache]: Analyzing trace with hash 510756117, now seen corresponding path program 1 times
[2020-11-24 18:00:06,086 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 18:00:06,097 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 18:00:06,113 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 18:00:06,113 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 18:00:06,113 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-24 18:00:06,115 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 18:00:06,115 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-24 18:00:06,115 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-24 18:00:06,115 INFO  L87              Difference]: Start difference. First operand 174 states and 183 transitions. cyclomatic complexity: 10 Second operand 3 states.
[2020-11-24 18:00:06,122 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 18:00:06,122 INFO  L93              Difference]: Finished difference Result 205 states and 213 transitions.
[2020-11-24 18:00:06,122 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-24 18:00:06,122 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 205 states and 213 transitions.
[2020-11-24 18:00:06,124 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 2
[2020-11-24 18:00:06,126 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 205 states to 191 states and 196 transitions.
[2020-11-24 18:00:06,126 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 191
[2020-11-24 18:00:06,127 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 191
[2020-11-24 18:00:06,127 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 191 states and 196 transitions.
[2020-11-24 18:00:06,127 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 18:00:06,128 INFO  L728         BuchiCegarLoop]: Abstraction has 191 states and 196 transitions.
[2020-11-24 18:00:06,128 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 191 states and 196 transitions.
[2020-11-24 18:00:06,133 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 191 to 180.
[2020-11-24 18:00:06,133 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 180 states.
[2020-11-24 18:00:06,134 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 180 states to 180 states and 185 transitions.
[2020-11-24 18:00:06,134 INFO  L751         BuchiCegarLoop]: Abstraction has 180 states and 185 transitions.
[2020-11-24 18:00:06,134 INFO  L631         BuchiCegarLoop]: Abstraction has 180 states and 185 transitions.
[2020-11-24 18:00:06,134 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-24 18:00:06,134 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 180 states and 185 transitions.
[2020-11-24 18:00:06,135 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 18:00:06,135 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 18:00:06,135 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 18:00:06,136 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 18:00:06,137 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L2]                 success_transfer_YearnFinanceBitToken0 := false;
[L2]                 call_transfer_YearnFinanceBitToken0 := false;
[L2]     CALL        call main();
[L1721]              assume null == 0;
[L1722]  CALL        call this := FreshRefGenerator__success();
[L700]               havoc newRef;
[L701]               assume Alloc[newRef] == false;
[L702]               Alloc[newRef] := true;
[L703]               assume newRef != null;
[L1722]  RET         call this := FreshRefGenerator__success();
[L1723]              assume now >= 0;
[L1724]              assume DType[this] == YearnFinanceBitToken;
[L1725]              assume !revert && gas >= 0;
[L1726]  CALL        call CorralChoice_YearnFinanceBitToken(this);
[L1616]              havoc msgsender_MSG;
[L1617]              havoc msgvalue_MSG;
[L1618]              havoc choice;
[L1619]              havoc __ret_0_totalSupply;
[L1620]              havoc tokenOwner_s247;
[L1621]              havoc balance_s247;
[L1622]              havoc tokenOwner_s263;
[L1623]              havoc spender_s263;
[L1624]              havoc remaining_s263;
[L1625]              havoc to_s334;
[L1626]              havoc tokens_s334;
[L1627]              havoc success_s334;
[L1628]              havoc spender_s291;
[L1629]              havoc tokens_s291;
[L1630]              havoc success_s291;
[L1631]              havoc from_s393;
[L1632]              havoc to_s393;
[L1633]              havoc tokens_s393;
[L1634]              havoc success_s393;
[L1635]              havoc a_s90;
[L1636]              havoc b_s90;
[L1637]              havoc c_s90;
[L1638]              havoc a_s112;
[L1639]              havoc b_s112;
[L1640]              havoc c_s112;
[L1641]              havoc a_s140;
[L1642]              havoc b_s140;
[L1643]              havoc c_s140;
[L1644]              havoc a_s162;
[L1645]              havoc b_s162;
[L1646]              havoc c_s162;
[L1647]              havoc __ret_0_name;
[L1648]              havoc __ret_0_symbol;
[L1649]              havoc __ret_0_decimals;
[L1650]              havoc __ret_0__totalSupply;
[L1651]              havoc tmpNow;
[L1652]              havoc gas;
[L1653]              assume gas > 4000000 && gas <= 8000000;
[L1654]              tmpNow := now;
[L1655]              havoc now;
[L1656]              assume now > tmpNow;
[L1657]              assume msgsender_MSG != null;
[L1658]  COND FALSE  !(choice == 8)
[L1664]  COND FALSE  !(choice == 7)
[L1670]  COND FALSE  !(choice == 6)
[L1676]  COND TRUE   choice == 5
[L1677]              gas := gas - 21000;
[L1678]  COND TRUE   gas >= 0
[L1679]              assume tokens_s334 >= 0 && tokens_s334 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1680]              assume msgvalue_MSG == 0;
[L1681]  CALL        call success_s334 := transfer~address~uint256_YearnFinanceBitToken(this, msgsender_MSG, msgvalue_MSG, to_s334, tokens_s334);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == to_s334 && tokens_s334 <= balances_YearnFinanceBitToken[this][msgsender_MSG]) && tokens_s334 >= 0) && tokens_s334 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_YearnFinanceBitToken[this][to_s334] >= 0) && balances_YearnFinanceBitToken[this][to_s334] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_YearnFinanceBitToken[this][msgsender_MSG] >= 0) && balances_YearnFinanceBitToken[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_YearnFinanceBitToken0 := true;
[L2]                 call_transfer_YearnFinanceBitToken0 := false;
[L2]                 revert := revert_hold;
[L371]               havoc __exception;
[L372]               revert := false;
[L373]   COND TRUE   __exception
[L374]               __tmp__Balance := Balance;
[L375]               __tmp__DType := DType;
[L376]               __tmp__Alloc := Alloc;
[L377]               __tmp__balance_ADDR := balance_ADDR;
[L378]               __tmp__M_Ref_int := M_Ref_int;
[L379]               __tmp__sum_balances0 := sum_balances0;
[L380]               __tmp__alloc_allowed_YearnFinanceBitToken_lvl0 := alloc_allowed_YearnFinanceBitToken_lvl0;
[L381]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L382]               __tmp__sum_allowed1 := sum_allowed1;
[L383]               __tmp__Length := Length;
[L384]               __tmp__now := now;
[L385]               __tmp__name_YearnFinanceBitToken := name_YearnFinanceBitToken;
[L386]               __tmp__symbol_YearnFinanceBitToken := symbol_YearnFinanceBitToken;
[L387]               __tmp__decimals_YearnFinanceBitToken := decimals_YearnFinanceBitToken;
[L388]               __tmp___totalSupply_YearnFinanceBitToken := _totalSupply_YearnFinanceBitToken;
[L389]               __tmp__balances_YearnFinanceBitToken := balances_YearnFinanceBitToken;
[L390]               __tmp__allowed_YearnFinanceBitToken := allowed_YearnFinanceBitToken;
[L391]   CALL        call success_s334 := transfer~address~uint256_YearnFinanceBitToken__fail(this, msgsender_MSG, msgvalue_MSG, to_s334, tokens_s334);
[L805]   COND TRUE   __tmp__DType[this] == YearnFinanceBitToken
[L806]   CALL        call __var_2 := safeSub~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balances_YearnFinanceBitToken[this][msgsender_MSG], tokens_s334);
[L726]   COND TRUE   !(b_s112 <= a_s112)
[L727]               revert := true;
[L806]   RET         call __var_2 := safeSub~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balances_YearnFinanceBitToken[this][msgsender_MSG], tokens_s334);
[L807]   COND TRUE   revert
[L391]   RET         call success_s334 := transfer~address~uint256_YearnFinanceBitToken__fail(this, msgsender_MSG, msgvalue_MSG, to_s334, tokens_s334);
[L392]               assume revert || gas < 0;
[L1681]  RET         call success_s334 := transfer~address~uint256_YearnFinanceBitToken(this, msgsender_MSG, msgvalue_MSG, to_s334, tokens_s334);
[L1726]  RET         call CorralChoice_YearnFinanceBitToken(this);

Loop:
[L1726]        assume true;

[2020-11-24 18:00:06,139 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 18:00:06,139 INFO  L82        PathProgramCache]: Analyzing trace with hash -958925116, now seen corresponding path program 1 times
[2020-11-24 18:00:06,140 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 18:00:06,150 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 18:00:06,219 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 18:00:06,219 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 18:00:06,219 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [7] imperfect sequences [] total 7
[2020-11-24 18:00:06,220 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 18:00:06,220 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 7 interpolants.
[2020-11-24 18:00:06,220 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=11, Invalid=31, Unknown=0, NotChecked=0, Total=42
[2020-11-24 18:00:06,220 INFO  L87              Difference]: Start difference. First operand 180 states and 185 transitions. cyclomatic complexity: 6 Second operand 7 states.
[2020-11-24 18:00:06,304 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 18:00:06,304 INFO  L93              Difference]: Finished difference Result 195 states and 199 transitions.
[2020-11-24 18:00:06,304 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 8 states. 
[2020-11-24 18:00:06,305 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 195 states and 199 transitions.
[2020-11-24 18:00:06,306 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 2
[2020-11-24 18:00:06,307 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 195 states to 188 states and 192 transitions.
[2020-11-24 18:00:06,307 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 188
[2020-11-24 18:00:06,308 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 188
[2020-11-24 18:00:06,308 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 188 states and 192 transitions.
[2020-11-24 18:00:06,308 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 18:00:06,308 INFO  L728         BuchiCegarLoop]: Abstraction has 188 states and 192 transitions.
[2020-11-24 18:00:06,309 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 188 states and 192 transitions.
[2020-11-24 18:00:06,312 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 188 to 175.
[2020-11-24 18:00:06,312 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 175 states.
[2020-11-24 18:00:06,313 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 175 states to 175 states and 179 transitions.
[2020-11-24 18:00:06,313 INFO  L751         BuchiCegarLoop]: Abstraction has 175 states and 179 transitions.
[2020-11-24 18:00:06,313 INFO  L631         BuchiCegarLoop]: Abstraction has 175 states and 179 transitions.
[2020-11-24 18:00:06,313 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-24 18:00:06,313 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 175 states and 179 transitions.
[2020-11-24 18:00:06,314 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 18:00:06,314 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 18:00:06,314 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 18:00:06,315 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 18:00:06,315 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L2]                 success_transfer_YearnFinanceBitToken0 := false;
[L2]                 call_transfer_YearnFinanceBitToken0 := false;
[L2]     CALL        call main();
[L1721]              assume null == 0;
[L1722]  CALL        call this := FreshRefGenerator__success();
[L700]               havoc newRef;
[L701]               assume Alloc[newRef] == false;
[L702]               Alloc[newRef] := true;
[L703]               assume newRef != null;
[L1722]  RET         call this := FreshRefGenerator__success();
[L1723]              assume now >= 0;
[L1724]              assume DType[this] == YearnFinanceBitToken;
[L1725]              assume !revert && gas >= 0;
[L1726]  CALL        call CorralChoice_YearnFinanceBitToken(this);
[L1616]              havoc msgsender_MSG;
[L1617]              havoc msgvalue_MSG;
[L1618]              havoc choice;
[L1619]              havoc __ret_0_totalSupply;
[L1620]              havoc tokenOwner_s247;
[L1621]              havoc balance_s247;
[L1622]              havoc tokenOwner_s263;
[L1623]              havoc spender_s263;
[L1624]              havoc remaining_s263;
[L1625]              havoc to_s334;
[L1626]              havoc tokens_s334;
[L1627]              havoc success_s334;
[L1628]              havoc spender_s291;
[L1629]              havoc tokens_s291;
[L1630]              havoc success_s291;
[L1631]              havoc from_s393;
[L1632]              havoc to_s393;
[L1633]              havoc tokens_s393;
[L1634]              havoc success_s393;
[L1635]              havoc a_s90;
[L1636]              havoc b_s90;
[L1637]              havoc c_s90;
[L1638]              havoc a_s112;
[L1639]              havoc b_s112;
[L1640]              havoc c_s112;
[L1641]              havoc a_s140;
[L1642]              havoc b_s140;
[L1643]              havoc c_s140;
[L1644]              havoc a_s162;
[L1645]              havoc b_s162;
[L1646]              havoc c_s162;
[L1647]              havoc __ret_0_name;
[L1648]              havoc __ret_0_symbol;
[L1649]              havoc __ret_0_decimals;
[L1650]              havoc __ret_0__totalSupply;
[L1651]              havoc tmpNow;
[L1652]              havoc gas;
[L1653]              assume gas > 4000000 && gas <= 8000000;
[L1654]              tmpNow := now;
[L1655]              havoc now;
[L1656]              assume now > tmpNow;
[L1657]              assume msgsender_MSG != null;
[L1658]  COND FALSE  !(choice == 8)
[L1664]  COND FALSE  !(choice == 7)
[L1670]  COND FALSE  !(choice == 6)
[L1676]  COND TRUE   choice == 5
[L1677]              gas := gas - 21000;
[L1678]  COND TRUE   gas >= 0
[L1679]              assume tokens_s334 >= 0 && tokens_s334 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1680]              assume msgvalue_MSG == 0;
[L1681]  CALL        call success_s334 := transfer~address~uint256_YearnFinanceBitToken(this, msgsender_MSG, msgvalue_MSG, to_s334, tokens_s334);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == to_s334 && tokens_s334 <= balances_YearnFinanceBitToken[this][msgsender_MSG]) && tokens_s334 >= 0) && tokens_s334 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_YearnFinanceBitToken[this][to_s334] >= 0) && balances_YearnFinanceBitToken[this][to_s334] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_YearnFinanceBitToken[this][msgsender_MSG] >= 0) && balances_YearnFinanceBitToken[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_YearnFinanceBitToken0 := true;
[L2]                 call_transfer_YearnFinanceBitToken0 := false;
[L2]                 revert := revert_hold;
[L371]               havoc __exception;
[L372]               revert := false;
[L373]   COND TRUE   __exception
[L374]               __tmp__Balance := Balance;
[L375]               __tmp__DType := DType;
[L376]               __tmp__Alloc := Alloc;
[L377]               __tmp__balance_ADDR := balance_ADDR;
[L378]               __tmp__M_Ref_int := M_Ref_int;
[L379]               __tmp__sum_balances0 := sum_balances0;
[L380]               __tmp__alloc_allowed_YearnFinanceBitToken_lvl0 := alloc_allowed_YearnFinanceBitToken_lvl0;
[L381]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L382]               __tmp__sum_allowed1 := sum_allowed1;
[L383]               __tmp__Length := Length;
[L384]               __tmp__now := now;
[L385]               __tmp__name_YearnFinanceBitToken := name_YearnFinanceBitToken;
[L386]               __tmp__symbol_YearnFinanceBitToken := symbol_YearnFinanceBitToken;
[L387]               __tmp__decimals_YearnFinanceBitToken := decimals_YearnFinanceBitToken;
[L388]               __tmp___totalSupply_YearnFinanceBitToken := _totalSupply_YearnFinanceBitToken;
[L389]               __tmp__balances_YearnFinanceBitToken := balances_YearnFinanceBitToken;
[L390]               __tmp__allowed_YearnFinanceBitToken := allowed_YearnFinanceBitToken;
[L391]   CALL        call success_s334 := transfer~address~uint256_YearnFinanceBitToken__fail(this, msgsender_MSG, msgvalue_MSG, to_s334, tokens_s334);
[L805]   COND TRUE   __tmp__DType[this] == YearnFinanceBitToken
[L806]   CALL        call __var_2 := safeSub~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balances_YearnFinanceBitToken[this][msgsender_MSG], tokens_s334);
[L726]   COND FALSE  !(!(b_s112 <= a_s112))
[L730]               c_s112 := (a_s112 - b_s112) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L806]   RET         call __var_2 := safeSub~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balances_YearnFinanceBitToken[this][msgsender_MSG], tokens_s334);
[L807]   COND TRUE   revert
[L391]   RET         call success_s334 := transfer~address~uint256_YearnFinanceBitToken__fail(this, msgsender_MSG, msgvalue_MSG, to_s334, tokens_s334);
[L392]               assume revert || gas < 0;
[L1681]  RET         call success_s334 := transfer~address~uint256_YearnFinanceBitToken(this, msgsender_MSG, msgvalue_MSG, to_s334, tokens_s334);
[L1726]  RET         call CorralChoice_YearnFinanceBitToken(this);

Loop:
[L1726]        assume true;

[2020-11-24 18:00:06,317 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 18:00:06,318 INFO  L82        PathProgramCache]: Analyzing trace with hash 1587983151, now seen corresponding path program 1 times
[2020-11-24 18:00:06,319 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 18:00:06,327 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 18:00:06,346 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 18:00:06,346 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 18:00:06,346 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [5] imperfect sequences [] total 5
[2020-11-24 18:00:06,347 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 18:00:06,347 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 5 interpolants.
[2020-11-24 18:00:06,347 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=9, Invalid=11, Unknown=0, NotChecked=0, Total=20
[2020-11-24 18:00:06,347 INFO  L87              Difference]: Start difference. First operand 175 states and 179 transitions. cyclomatic complexity: 5 Second operand 5 states.
[2020-11-24 18:00:06,356 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 18:00:06,356 INFO  L93              Difference]: Finished difference Result 186 states and 188 transitions.
[2020-11-24 18:00:06,356 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-24 18:00:06,356 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 186 states and 188 transitions.
[2020-11-24 18:00:06,357 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 2
[2020-11-24 18:00:06,358 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 186 states to 186 states and 188 transitions.
[2020-11-24 18:00:06,358 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 186
[2020-11-24 18:00:06,358 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 186
[2020-11-24 18:00:06,358 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 186 states and 188 transitions.
[2020-11-24 18:00:06,358 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 18:00:06,358 INFO  L728         BuchiCegarLoop]: Abstraction has 186 states and 188 transitions.
[2020-11-24 18:00:06,359 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 186 states and 188 transitions.
[2020-11-24 18:00:06,360 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 186 to 175.
[2020-11-24 18:00:06,360 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 175 states.
[2020-11-24 18:00:06,360 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 175 states to 175 states and 177 transitions.
[2020-11-24 18:00:06,360 INFO  L751         BuchiCegarLoop]: Abstraction has 175 states and 177 transitions.
[2020-11-24 18:00:06,361 INFO  L631         BuchiCegarLoop]: Abstraction has 175 states and 177 transitions.
[2020-11-24 18:00:06,361 INFO  L445         BuchiCegarLoop]: ======== Iteration 5============
[2020-11-24 18:00:06,361 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 175 states and 177 transitions.
[2020-11-24 18:00:06,361 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 18:00:06,361 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 18:00:06,361 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 18:00:06,362 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 18:00:06,362 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L2]                 success_transfer_YearnFinanceBitToken0 := false;
[L2]                 call_transfer_YearnFinanceBitToken0 := false;
[L2]     CALL        call main();
[L1721]              assume null == 0;
[L1722]  CALL        call this := FreshRefGenerator__success();
[L700]               havoc newRef;
[L701]               assume Alloc[newRef] == false;
[L702]               Alloc[newRef] := true;
[L703]               assume newRef != null;
[L1722]  RET         call this := FreshRefGenerator__success();
[L1723]              assume now >= 0;
[L1724]              assume DType[this] == YearnFinanceBitToken;
[L1725]              assume !revert && gas >= 0;
[L1726]  CALL        call CorralChoice_YearnFinanceBitToken(this);
[L1616]              havoc msgsender_MSG;
[L1617]              havoc msgvalue_MSG;
[L1618]              havoc choice;
[L1619]              havoc __ret_0_totalSupply;
[L1620]              havoc tokenOwner_s247;
[L1621]              havoc balance_s247;
[L1622]              havoc tokenOwner_s263;
[L1623]              havoc spender_s263;
[L1624]              havoc remaining_s263;
[L1625]              havoc to_s334;
[L1626]              havoc tokens_s334;
[L1627]              havoc success_s334;
[L1628]              havoc spender_s291;
[L1629]              havoc tokens_s291;
[L1630]              havoc success_s291;
[L1631]              havoc from_s393;
[L1632]              havoc to_s393;
[L1633]              havoc tokens_s393;
[L1634]              havoc success_s393;
[L1635]              havoc a_s90;
[L1636]              havoc b_s90;
[L1637]              havoc c_s90;
[L1638]              havoc a_s112;
[L1639]              havoc b_s112;
[L1640]              havoc c_s112;
[L1641]              havoc a_s140;
[L1642]              havoc b_s140;
[L1643]              havoc c_s140;
[L1644]              havoc a_s162;
[L1645]              havoc b_s162;
[L1646]              havoc c_s162;
[L1647]              havoc __ret_0_name;
[L1648]              havoc __ret_0_symbol;
[L1649]              havoc __ret_0_decimals;
[L1650]              havoc __ret_0__totalSupply;
[L1651]              havoc tmpNow;
[L1652]              havoc gas;
[L1653]              assume gas > 4000000 && gas <= 8000000;
[L1654]              tmpNow := now;
[L1655]              havoc now;
[L1656]              assume now > tmpNow;
[L1657]              assume msgsender_MSG != null;
[L1658]  COND FALSE  !(choice == 8)
[L1664]  COND FALSE  !(choice == 7)
[L1670]  COND FALSE  !(choice == 6)
[L1676]  COND TRUE   choice == 5
[L1677]              gas := gas - 21000;
[L1678]  COND TRUE   gas >= 0
[L1679]              assume tokens_s334 >= 0 && tokens_s334 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1680]              assume msgvalue_MSG == 0;
[L1681]  CALL        call success_s334 := transfer~address~uint256_YearnFinanceBitToken(this, msgsender_MSG, msgvalue_MSG, to_s334, tokens_s334);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == to_s334 && tokens_s334 <= balances_YearnFinanceBitToken[this][msgsender_MSG]) && tokens_s334 >= 0) && tokens_s334 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_YearnFinanceBitToken[this][to_s334] >= 0) && balances_YearnFinanceBitToken[this][to_s334] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_YearnFinanceBitToken[this][msgsender_MSG] >= 0) && balances_YearnFinanceBitToken[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_YearnFinanceBitToken0 := true;
[L2]                 call_transfer_YearnFinanceBitToken0 := false;
[L2]                 revert := revert_hold;
[L371]               havoc __exception;
[L372]               revert := false;
[L373]   COND FALSE  !(__exception)
[L394]   CALL        call success_s334 := transfer~address~uint256_YearnFinanceBitToken__success(this, msgsender_MSG, msgvalue_MSG, to_s334, tokens_s334);
[L835]   COND TRUE   DType[this] == YearnFinanceBitToken
[L836]   CALL        call __var_2 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_YearnFinanceBitToken[this][msgsender_MSG], tokens_s334);
[L735]   COND FALSE  !(!(b_s112 <= a_s112))
[L739]               c_s112 := (a_s112 - b_s112) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L836]   RET         call __var_2 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_YearnFinanceBitToken[this][msgsender_MSG], tokens_s334);
[L837]   COND FALSE  !(revert)
[L843]               sum_balances0[this] := sum_balances0[this] - balances_YearnFinanceBitToken[this][msgsender_MSG];
[L844]               balances_YearnFinanceBitToken[this][msgsender_MSG] := __var_2;
[L845]               sum_balances0[this] := sum_balances0[this] + balances_YearnFinanceBitToken[this][msgsender_MSG];
[L846]   COND TRUE   DType[this] == YearnFinanceBitToken
[L847]   CALL        call __var_3 := safeAdd~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_YearnFinanceBitToken[this][to_s334], tokens_s334);
[L717]               c_s90 := (a_s90 + b_s90) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L718]   COND FALSE  !(!(c_s90 >= a_s90))
[L847]   RET         call __var_3 := safeAdd~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_YearnFinanceBitToken[this][to_s334], tokens_s334);
[L848]   COND FALSE  !(revert)
[L854]               sum_balances0[this] := sum_balances0[this] - balances_YearnFinanceBitToken[this][to_s334];
[L855]               balances_YearnFinanceBitToken[this][to_s334] := __var_3;
[L856]               sum_balances0[this] := sum_balances0[this] + balances_YearnFinanceBitToken[this][to_s334];
[L857]               assert { :EventEmitted "Transfer_YearnFinanceBitToken" } true;
[L858]               success_s334 := true;
[L394]   RET         call success_s334 := transfer~address~uint256_YearnFinanceBitToken__success(this, msgsender_MSG, msgvalue_MSG, to_s334, tokens_s334);
[L395]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !((((((success_s334 == true && _totalSupply_YearnFinanceBitToken[this] == old(_totalSupply_YearnFinanceBitToken[this])) && balances_YearnFinanceBitToken[this] == old(balances_YearnFinanceBitToken[this])) && allowed_YearnFinanceBitToken[this] == old(allowed_YearnFinanceBitToken[this])) && name_YearnFinanceBitToken[this] == old(name_YearnFinanceBitToken[this])) && symbol_YearnFinanceBitToken[this] == old(symbol_YearnFinanceBitToken[this])) && decimals_YearnFinanceBitToken[this] == old(decimals_YearnFinanceBitToken[this]));
[L2]                 revert := revert_hold;
[L1681]  RET         call success_s334 := transfer~address~uint256_YearnFinanceBitToken(this, msgsender_MSG, msgvalue_MSG, to_s334, tokens_s334);
[L1726]  RET         call CorralChoice_YearnFinanceBitToken(this);

Loop:
[L1726]        assume true;

[2020-11-24 18:00:06,363 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 18:00:06,364 INFO  L82        PathProgramCache]: Analyzing trace with hash -1223788101, now seen corresponding path program 1 times
[2020-11-24 18:00:06,364 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 18:00:06,393 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 18:00:06,522 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 18:00:06,522 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 18:00:06,522 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [14] imperfect sequences [] total 14
[2020-11-24 18:00:06,522 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 18:00:06,522 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 14 interpolants.
[2020-11-24 18:00:06,523 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=29, Invalid=153, Unknown=0, NotChecked=0, Total=182
[2020-11-24 18:00:06,523 INFO  L87              Difference]: Start difference. First operand 175 states and 177 transitions. cyclomatic complexity: 3 Second operand 14 states.
[2020-11-24 18:00:06,766 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 18:00:06,766 INFO  L93              Difference]: Finished difference Result 174 states and 175 transitions.
[2020-11-24 18:00:06,767 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 13 states. 
[2020-11-24 18:00:06,767 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 174 states and 175 transitions.
[2020-11-24 18:00:06,768 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 18:00:06,768 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 174 states to 139 states and 140 transitions.
[2020-11-24 18:00:06,768 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 139
[2020-11-24 18:00:06,768 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 139
[2020-11-24 18:00:06,769 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 139 states and 140 transitions.
[2020-11-24 18:00:06,769 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 18:00:06,769 INFO  L728         BuchiCegarLoop]: Abstraction has 139 states and 140 transitions.
[2020-11-24 18:00:06,769 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 139 states and 140 transitions.
[2020-11-24 18:00:06,770 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 139 to 139.
[2020-11-24 18:00:06,770 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 139 states.
[2020-11-24 18:00:06,770 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 139 states to 139 states and 140 transitions.
[2020-11-24 18:00:06,771 INFO  L751         BuchiCegarLoop]: Abstraction has 139 states and 140 transitions.
[2020-11-24 18:00:06,771 INFO  L631         BuchiCegarLoop]: Abstraction has 139 states and 140 transitions.
[2020-11-24 18:00:06,771 INFO  L445         BuchiCegarLoop]: ======== Iteration 6============
[2020-11-24 18:00:06,771 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 139 states and 140 transitions.
[2020-11-24 18:00:06,771 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 18:00:06,771 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 18:00:06,771 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 18:00:06,772 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 18:00:06,772 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L2]                 success_transfer_YearnFinanceBitToken0 := false;
[L2]                 call_transfer_YearnFinanceBitToken0 := false;
[L2]     CALL        call main();
[L1721]              assume null == 0;
[L1722]  CALL        call this := FreshRefGenerator__success();
[L700]               havoc newRef;
[L701]               assume Alloc[newRef] == false;
[L702]               Alloc[newRef] := true;
[L703]               assume newRef != null;
[L1722]  RET         call this := FreshRefGenerator__success();
[L1723]              assume now >= 0;
[L1724]              assume DType[this] == YearnFinanceBitToken;
[L1725]              assume !revert && gas >= 0;
[L1726]  CALL        call CorralChoice_YearnFinanceBitToken(this);
[L1616]              havoc msgsender_MSG;
[L1617]              havoc msgvalue_MSG;
[L1618]              havoc choice;
[L1619]              havoc __ret_0_totalSupply;
[L1620]              havoc tokenOwner_s247;
[L1621]              havoc balance_s247;
[L1622]              havoc tokenOwner_s263;
[L1623]              havoc spender_s263;
[L1624]              havoc remaining_s263;
[L1625]              havoc to_s334;
[L1626]              havoc tokens_s334;
[L1627]              havoc success_s334;
[L1628]              havoc spender_s291;
[L1629]              havoc tokens_s291;
[L1630]              havoc success_s291;
[L1631]              havoc from_s393;
[L1632]              havoc to_s393;
[L1633]              havoc tokens_s393;
[L1634]              havoc success_s393;
[L1635]              havoc a_s90;
[L1636]              havoc b_s90;
[L1637]              havoc c_s90;
[L1638]              havoc a_s112;
[L1639]              havoc b_s112;
[L1640]              havoc c_s112;
[L1641]              havoc a_s140;
[L1642]              havoc b_s140;
[L1643]              havoc c_s140;
[L1644]              havoc a_s162;
[L1645]              havoc b_s162;
[L1646]              havoc c_s162;
[L1647]              havoc __ret_0_name;
[L1648]              havoc __ret_0_symbol;
[L1649]              havoc __ret_0_decimals;
[L1650]              havoc __ret_0__totalSupply;
[L1651]              havoc tmpNow;
[L1652]              havoc gas;
[L1653]              assume gas > 4000000 && gas <= 8000000;
[L1654]              tmpNow := now;
[L1655]              havoc now;
[L1656]              assume now > tmpNow;
[L1657]              assume msgsender_MSG != null;
[L1658]  COND FALSE  !(choice == 8)
[L1664]  COND FALSE  !(choice == 7)
[L1670]  COND FALSE  !(choice == 6)
[L1676]  COND TRUE   choice == 5
[L1677]              gas := gas - 21000;
[L1678]  COND TRUE   gas >= 0
[L1679]              assume tokens_s334 >= 0 && tokens_s334 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1680]              assume msgvalue_MSG == 0;
[L1681]  CALL        call success_s334 := transfer~address~uint256_YearnFinanceBitToken(this, msgsender_MSG, msgvalue_MSG, to_s334, tokens_s334);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == to_s334 && tokens_s334 <= balances_YearnFinanceBitToken[this][msgsender_MSG]) && tokens_s334 >= 0) && tokens_s334 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_YearnFinanceBitToken[this][to_s334] >= 0) && balances_YearnFinanceBitToken[this][to_s334] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_YearnFinanceBitToken[this][msgsender_MSG] >= 0) && balances_YearnFinanceBitToken[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_YearnFinanceBitToken0 := true;
[L2]                 call_transfer_YearnFinanceBitToken0 := false;
[L2]                 revert := revert_hold;
[L371]               havoc __exception;
[L372]               revert := false;
[L373]   COND TRUE   __exception
[L374]               __tmp__Balance := Balance;
[L375]               __tmp__DType := DType;
[L376]               __tmp__Alloc := Alloc;
[L377]               __tmp__balance_ADDR := balance_ADDR;
[L378]               __tmp__M_Ref_int := M_Ref_int;
[L379]               __tmp__sum_balances0 := sum_balances0;
[L380]               __tmp__alloc_allowed_YearnFinanceBitToken_lvl0 := alloc_allowed_YearnFinanceBitToken_lvl0;
[L381]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L382]               __tmp__sum_allowed1 := sum_allowed1;
[L383]               __tmp__Length := Length;
[L384]               __tmp__now := now;
[L385]               __tmp__name_YearnFinanceBitToken := name_YearnFinanceBitToken;
[L386]               __tmp__symbol_YearnFinanceBitToken := symbol_YearnFinanceBitToken;
[L387]               __tmp__decimals_YearnFinanceBitToken := decimals_YearnFinanceBitToken;
[L388]               __tmp___totalSupply_YearnFinanceBitToken := _totalSupply_YearnFinanceBitToken;
[L389]               __tmp__balances_YearnFinanceBitToken := balances_YearnFinanceBitToken;
[L390]               __tmp__allowed_YearnFinanceBitToken := allowed_YearnFinanceBitToken;
[L391]   CALL        call success_s334 := transfer~address~uint256_YearnFinanceBitToken__fail(this, msgsender_MSG, msgvalue_MSG, to_s334, tokens_s334);
[L805]   COND TRUE   __tmp__DType[this] == YearnFinanceBitToken
[L806]   CALL        call __var_2 := safeSub~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balances_YearnFinanceBitToken[this][msgsender_MSG], tokens_s334);
[L726]   COND FALSE  !(!(b_s112 <= a_s112))
[L730]               c_s112 := (a_s112 - b_s112) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L806]   RET         call __var_2 := safeSub~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balances_YearnFinanceBitToken[this][msgsender_MSG], tokens_s334);
[L807]   COND FALSE  !(revert)
[L813]               __tmp__sum_balances0[this] := __tmp__sum_balances0[this] - __tmp__balances_YearnFinanceBitToken[this][msgsender_MSG];
[L814]               __tmp__balances_YearnFinanceBitToken[this][msgsender_MSG] := __var_2;
[L815]               __tmp__sum_balances0[this] := __tmp__sum_balances0[this] + __tmp__balances_YearnFinanceBitToken[this][msgsender_MSG];
[L816]   COND TRUE   __tmp__DType[this] == YearnFinanceBitToken
[L817]   CALL        call __var_3 := safeAdd~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balances_YearnFinanceBitToken[this][to_s334], tokens_s334);
[L708]               c_s90 := (a_s90 + b_s90) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L709]   COND TRUE   !(c_s90 >= a_s90)
[L710]               revert := true;
[L817]   RET         call __var_3 := safeAdd~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balances_YearnFinanceBitToken[this][to_s334], tokens_s334);
[L818]   COND TRUE   revert
[L391]   RET         call success_s334 := transfer~address~uint256_YearnFinanceBitToken__fail(this, msgsender_MSG, msgvalue_MSG, to_s334, tokens_s334);
[L392]               assume revert || gas < 0;
[L1681]  RET         call success_s334 := transfer~address~uint256_YearnFinanceBitToken(this, msgsender_MSG, msgvalue_MSG, to_s334, tokens_s334);
[L1726]  RET         call CorralChoice_YearnFinanceBitToken(this);

Loop:
[L1726]        assume true;

[2020-11-24 18:00:06,774 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 18:00:06,774 INFO  L82        PathProgramCache]: Analyzing trace with hash 2028558775, now seen corresponding path program 1 times
[2020-11-24 18:00:06,774 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 18:00:06,783 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 18:00:06,852 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 18:00:06,853 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 18:00:06,853 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [12] imperfect sequences [] total 12
[2020-11-24 18:00:06,853 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 18:00:06,853 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 12 interpolants.
[2020-11-24 18:00:06,853 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=23, Invalid=109, Unknown=0, NotChecked=0, Total=132
[2020-11-24 18:00:06,853 INFO  L87              Difference]: Start difference. First operand 139 states and 140 transitions. cyclomatic complexity: 2 Second operand 12 states.
[2020-11-24 18:00:06,937 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 18:00:06,938 INFO  L93              Difference]: Finished difference Result 141 states and 141 transitions.
[2020-11-24 18:00:06,938 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 13 states. 
[2020-11-24 18:00:06,938 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 141 states and 141 transitions.
[2020-11-24 18:00:06,939 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 18:00:06,939 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 141 states to 134 states and 134 transitions.
[2020-11-24 18:00:06,939 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 134
[2020-11-24 18:00:06,939 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 134
[2020-11-24 18:00:06,940 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 134 states and 134 transitions.
[2020-11-24 18:00:06,940 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 18:00:06,940 INFO  L728         BuchiCegarLoop]: Abstraction has 134 states and 134 transitions.
[2020-11-24 18:00:06,940 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 134 states and 134 transitions.
[2020-11-24 18:00:06,941 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 134 to 134.
[2020-11-24 18:00:06,941 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 134 states.
[2020-11-24 18:00:06,941 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 134 states to 134 states and 134 transitions.
[2020-11-24 18:00:06,942 INFO  L751         BuchiCegarLoop]: Abstraction has 134 states and 134 transitions.
[2020-11-24 18:00:06,942 INFO  L631         BuchiCegarLoop]: Abstraction has 134 states and 134 transitions.
[2020-11-24 18:00:06,942 INFO  L445         BuchiCegarLoop]: ======== Iteration 7============
[2020-11-24 18:00:06,942 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 134 states and 134 transitions.
[2020-11-24 18:00:06,942 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 18:00:06,943 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 18:00:06,943 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 18:00:06,943 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 18:00:06,943 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L2]                 success_transfer_YearnFinanceBitToken0 := false;
[L2]                 call_transfer_YearnFinanceBitToken0 := false;
[L2]     CALL        call main();
[L1721]              assume null == 0;
[L1722]  CALL        call this := FreshRefGenerator__success();
[L700]               havoc newRef;
[L701]               assume Alloc[newRef] == false;
[L702]               Alloc[newRef] := true;
[L703]               assume newRef != null;
[L1722]  RET         call this := FreshRefGenerator__success();
[L1723]              assume now >= 0;
[L1724]              assume DType[this] == YearnFinanceBitToken;
[L1725]              assume !revert && gas >= 0;
[L1726]  CALL        call CorralChoice_YearnFinanceBitToken(this);
[L1616]              havoc msgsender_MSG;
[L1617]              havoc msgvalue_MSG;
[L1618]              havoc choice;
[L1619]              havoc __ret_0_totalSupply;
[L1620]              havoc tokenOwner_s247;
[L1621]              havoc balance_s247;
[L1622]              havoc tokenOwner_s263;
[L1623]              havoc spender_s263;
[L1624]              havoc remaining_s263;
[L1625]              havoc to_s334;
[L1626]              havoc tokens_s334;
[L1627]              havoc success_s334;
[L1628]              havoc spender_s291;
[L1629]              havoc tokens_s291;
[L1630]              havoc success_s291;
[L1631]              havoc from_s393;
[L1632]              havoc to_s393;
[L1633]              havoc tokens_s393;
[L1634]              havoc success_s393;
[L1635]              havoc a_s90;
[L1636]              havoc b_s90;
[L1637]              havoc c_s90;
[L1638]              havoc a_s112;
[L1639]              havoc b_s112;
[L1640]              havoc c_s112;
[L1641]              havoc a_s140;
[L1642]              havoc b_s140;
[L1643]              havoc c_s140;
[L1644]              havoc a_s162;
[L1645]              havoc b_s162;
[L1646]              havoc c_s162;
[L1647]              havoc __ret_0_name;
[L1648]              havoc __ret_0_symbol;
[L1649]              havoc __ret_0_decimals;
[L1650]              havoc __ret_0__totalSupply;
[L1651]              havoc tmpNow;
[L1652]              havoc gas;
[L1653]              assume gas > 4000000 && gas <= 8000000;
[L1654]              tmpNow := now;
[L1655]              havoc now;
[L1656]              assume now > tmpNow;
[L1657]              assume msgsender_MSG != null;
[L1658]  COND FALSE  !(choice == 8)
[L1664]  COND FALSE  !(choice == 7)
[L1670]  COND FALSE  !(choice == 6)
[L1676]  COND TRUE   choice == 5
[L1677]              gas := gas - 21000;
[L1678]  COND TRUE   gas >= 0
[L1679]              assume tokens_s334 >= 0 && tokens_s334 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1680]              assume msgvalue_MSG == 0;
[L1681]  CALL        call success_s334 := transfer~address~uint256_YearnFinanceBitToken(this, msgsender_MSG, msgvalue_MSG, to_s334, tokens_s334);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == to_s334 && tokens_s334 <= balances_YearnFinanceBitToken[this][msgsender_MSG]) && tokens_s334 >= 0) && tokens_s334 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_YearnFinanceBitToken[this][to_s334] >= 0) && balances_YearnFinanceBitToken[this][to_s334] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_YearnFinanceBitToken[this][msgsender_MSG] >= 0) && balances_YearnFinanceBitToken[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_YearnFinanceBitToken0 := true;
[L2]                 call_transfer_YearnFinanceBitToken0 := false;
[L2]                 revert := revert_hold;
[L371]               havoc __exception;
[L372]               revert := false;
[L373]   COND TRUE   __exception
[L374]               __tmp__Balance := Balance;
[L375]               __tmp__DType := DType;
[L376]               __tmp__Alloc := Alloc;
[L377]               __tmp__balance_ADDR := balance_ADDR;
[L378]               __tmp__M_Ref_int := M_Ref_int;
[L379]               __tmp__sum_balances0 := sum_balances0;
[L380]               __tmp__alloc_allowed_YearnFinanceBitToken_lvl0 := alloc_allowed_YearnFinanceBitToken_lvl0;
[L381]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L382]               __tmp__sum_allowed1 := sum_allowed1;
[L383]               __tmp__Length := Length;
[L384]               __tmp__now := now;
[L385]               __tmp__name_YearnFinanceBitToken := name_YearnFinanceBitToken;
[L386]               __tmp__symbol_YearnFinanceBitToken := symbol_YearnFinanceBitToken;
[L387]               __tmp__decimals_YearnFinanceBitToken := decimals_YearnFinanceBitToken;
[L388]               __tmp___totalSupply_YearnFinanceBitToken := _totalSupply_YearnFinanceBitToken;
[L389]               __tmp__balances_YearnFinanceBitToken := balances_YearnFinanceBitToken;
[L390]               __tmp__allowed_YearnFinanceBitToken := allowed_YearnFinanceBitToken;
[L391]   CALL        call success_s334 := transfer~address~uint256_YearnFinanceBitToken__fail(this, msgsender_MSG, msgvalue_MSG, to_s334, tokens_s334);
[L805]   COND TRUE   __tmp__DType[this] == YearnFinanceBitToken
[L806]   CALL        call __var_2 := safeSub~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balances_YearnFinanceBitToken[this][msgsender_MSG], tokens_s334);
[L726]   COND FALSE  !(!(b_s112 <= a_s112))
[L730]               c_s112 := (a_s112 - b_s112) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L806]   RET         call __var_2 := safeSub~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balances_YearnFinanceBitToken[this][msgsender_MSG], tokens_s334);
[L807]   COND FALSE  !(revert)
[L813]               __tmp__sum_balances0[this] := __tmp__sum_balances0[this] - __tmp__balances_YearnFinanceBitToken[this][msgsender_MSG];
[L814]               __tmp__balances_YearnFinanceBitToken[this][msgsender_MSG] := __var_2;
[L815]               __tmp__sum_balances0[this] := __tmp__sum_balances0[this] + __tmp__balances_YearnFinanceBitToken[this][msgsender_MSG];
[L816]   COND TRUE   __tmp__DType[this] == YearnFinanceBitToken
[L817]   CALL        call __var_3 := safeAdd~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balances_YearnFinanceBitToken[this][to_s334], tokens_s334);
[L708]               c_s90 := (a_s90 + b_s90) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L709]   COND FALSE  !(!(c_s90 >= a_s90))
[L817]   RET         call __var_3 := safeAdd~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balances_YearnFinanceBitToken[this][to_s334], tokens_s334);
[L818]   COND FALSE  !(revert)
[L824]               __tmp__sum_balances0[this] := __tmp__sum_balances0[this] - __tmp__balances_YearnFinanceBitToken[this][to_s334];
[L825]               __tmp__balances_YearnFinanceBitToken[this][to_s334] := __var_3;
[L826]               __tmp__sum_balances0[this] := __tmp__sum_balances0[this] + __tmp__balances_YearnFinanceBitToken[this][to_s334];
[L827]               success_s334 := true;
[L391]   RET         call success_s334 := transfer~address~uint256_YearnFinanceBitToken__fail(this, msgsender_MSG, msgvalue_MSG, to_s334, tokens_s334);
[L392]               assume revert || gas < 0;
[L1681]  RET         call success_s334 := transfer~address~uint256_YearnFinanceBitToken(this, msgsender_MSG, msgvalue_MSG, to_s334, tokens_s334);
[L1726]  RET         call CorralChoice_YearnFinanceBitToken(this);

Loop:
[L1726]        assume true;

[2020-11-24 18:00:06,945 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 18:00:06,945 INFO  L82        PathProgramCache]: Analyzing trace with hash -1674478281, now seen corresponding path program 1 times
[2020-11-24 18:00:06,946 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 18:00:06,954 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 18:00:06,975 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 18:00:06,975 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 18:00:06,976 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [6] imperfect sequences [] total 6
[2020-11-24 18:00:06,976 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 18:00:06,976 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 6 interpolants.
[2020-11-24 18:00:06,976 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=10, Invalid=20, Unknown=0, NotChecked=0, Total=30
[2020-11-24 18:00:06,976 INFO  L87              Difference]: Start difference. First operand 134 states and 134 transitions. cyclomatic complexity: 1 Second operand 6 states.
[2020-11-24 18:00:06,987 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 18:00:06,987 INFO  L93              Difference]: Finished difference Result 127 states and 126 transitions.
[2020-11-24 18:00:06,987 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 6 states. 
[2020-11-24 18:00:06,988 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 127 states and 126 transitions.
[2020-11-24 18:00:06,988 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-24 18:00:06,989 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 127 states to 0 states and 0 transitions.
[2020-11-24 18:00:06,989 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 0
[2020-11-24 18:00:06,989 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 0
[2020-11-24 18:00:06,989 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 0 states and 0 transitions.
[2020-11-24 18:00:06,989 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 18:00:06,989 INFO  L728         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-24 18:00:06,989 INFO  L751         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-24 18:00:06,989 INFO  L631         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-24 18:00:06,989 INFO  L445         BuchiCegarLoop]: ======== Iteration 8============
[2020-11-24 18:00:06,989 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 0 states and 0 transitions.
[2020-11-24 18:00:06,989 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-24 18:00:06,989 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is true
[2020-11-24 18:00:06,992 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 24.11 06:00:06 BasicIcfg
[2020-11-24 18:00:06,993 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-24 18:00:06,993 INFO  L168              Benchmark]: Toolchain (without parser) took 2982.76 ms. Allocated memory was 1.0 GB in the beginning and 1.3 GB in the end (delta: 236.5 MB). Free memory was 940.6 MB in the beginning and 774.5 MB in the end (delta: 166.1 MB). Peak memory consumption was 402.6 MB. Max. memory is 15.3 GB.
[2020-11-24 18:00:06,994 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.15 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-24 18:00:06,994 INFO  L168              Benchmark]: Boogie Preprocessor took 66.57 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 935.2 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-24 18:00:06,994 INFO  L168              Benchmark]: UtopiaSpecLang took 47.53 ms. Allocated memory is still 1.0 GB. Free memory is still 935.2 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-24 18:00:06,995 INFO  L168              Benchmark]: Boogie Printer took 9.04 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 929.8 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-24 18:00:06,995 INFO  L168              Benchmark]: RCFGBuilder took 450.41 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 886.9 MB in the end (delta: 42.9 MB). Peak memory consumption was 42.9 MB. Max. memory is 15.3 GB.
[2020-11-24 18:00:06,995 INFO  L168              Benchmark]: UtopiaLTL2Aut took 41.72 ms. Allocated memory is still 1.0 GB. Free memory was 886.9 MB in the beginning and 877.9 MB in the end (delta: 8.9 MB). Peak memory consumption was 8.9 MB. Max. memory is 15.3 GB.
[2020-11-24 18:00:06,996 INFO  L168              Benchmark]: BÃ¼chi Program Product took 839.38 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 64.5 MB). Free memory was 877.9 MB in the beginning and 977.8 MB in the end (delta: -99.9 MB). Peak memory consumption was 161.0 MB. Max. memory is 15.3 GB.
[2020-11-24 18:00:06,996 INFO  L168              Benchmark]: BlockEncodingV2 took 70.73 ms. Allocated memory is still 1.1 GB. Free memory was 977.8 MB in the beginning and 948.6 MB in the end (delta: 29.2 MB). Peak memory consumption was 29.2 MB. Max. memory is 15.3 GB.
[2020-11-24 18:00:06,997 INFO  L168              Benchmark]: BuchiAutomizer took 1454.67 ms. Allocated memory was 1.1 GB in the beginning and 1.3 GB in the end (delta: 172.0 MB). Free memory was 948.6 MB in the beginning and 774.5 MB in the end (delta: 174.1 MB). Peak memory consumption was 346.1 MB. Max. memory is 15.3 GB.
[2020-11-24 18:00:07,000 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    1434 locations, 2462 edges
  - StatisticsResult: Encoded RCFG
    1392 locations, 2350 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.15 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 66.57 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 935.2 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 47.53 ms. Allocated memory is still 1.0 GB. Free memory is still 935.2 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Printer took 9.04 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 929.8 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * RCFGBuilder took 450.41 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 886.9 MB in the end (delta: 42.9 MB). Peak memory consumption was 42.9 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 41.72 ms. Allocated memory is still 1.0 GB. Free memory was 886.9 MB in the beginning and 877.9 MB in the end (delta: 8.9 MB). Peak memory consumption was 8.9 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 839.38 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 64.5 MB). Free memory was 877.9 MB in the beginning and 977.8 MB in the end (delta: -99.9 MB). Peak memory consumption was 161.0 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 70.73 ms. Allocated memory is still 1.1 GB. Free memory was 977.8 MB in the beginning and 948.6 MB in the end (delta: 29.2 MB). Peak memory consumption was 29.2 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 1454.67 ms. Allocated memory was 1.1 GB in the beginning and 1.3 GB in the end (delta: 172.0 MB). Free memory was 948.6 MB in the beginning and 774.5 MB in the end (delta: 174.1 MB). Peak memory consumption was 346.1 MB. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    612 locations, 763 edges
  - StatisticsResult: BuchiProgram size
    1434 locations, 2462 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 7 terminating modules (7 trivial, 0 deterministic, 0 nondeterministic). 7 modules have a trivial ranking function, the largest among these consists of 14 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 1.4s and 8 iterations.  TraceHistogramMax:1. Analysis of lassos took 0.5s. Construction of modules took 0.3s. BÃ¼chi inclusion checks took 0.3s. Highest rank in rank-based complementation 0. Minimization of det autom 7. Minimization of nondet autom 0. Automata minimization 0.0s AutomataMinimizationTime, 6 MinimizatonAttempts, 35 StatesRemovedByMinimization, 3 NontrivialMinimizations. Non-live state removal took 0.0s Buchi closure took 0.0s. Biggest automaton had 180 states and ocurred in iteration 2.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 1617 SDtfs, 1504 SDslu, 3357 SDs, 0 SdLazy, 1394 SolverSat, 551 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 0.3s Time	LassoAnalysisResults: nont0 unkn0 SFLI0 SFLT0 conc0 concLT0 SILN0 SILU7 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - AllSpecificationsHoldResult: All specifications hold
    Buchi Automizer proved that the LTL property ! ( ( []( (call_transfer_YearnFinance(success_transfer_YearnFinanceBitToken0)itToken0) ==> ( <>(success_transfer_YearnFinanceBitToken0) ) ) )) holds
RESULT: Ultimate proved your program to be correct!
Received shutdown request...
