This is Ultimate 0.1.24-f1553f5-m
[2020-11-24 15:04:12,568 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-24 15:04:12,569 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-24 15:04:12,577 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-24 15:04:12,577 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-24 15:04:12,577 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-24 15:04:12,578 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-24 15:04:12,579 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-24 15:04:12,580 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-24 15:04:12,581 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-24 15:04:12,581 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-24 15:04:12,581 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-24 15:04:12,582 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-24 15:04:12,582 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-24 15:04:12,583 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-24 15:04:12,583 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-24 15:04:12,584 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-24 15:04:12,585 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-24 15:04:12,586 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-24 15:04:12,586 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-24 15:04:12,587 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-24 15:04:12,587 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-24 15:04:12,589 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-24 15:04:12,589 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-24 15:04:12,589 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-24 15:04:12,589 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-24 15:04:12,589 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-24 15:04:12,590 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-24 15:04:12,590 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-24 15:04:12,590 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-24 15:04:12,590 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-24 15:04:12,591 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-24 15:04:12,591 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-24 15:04:12,591 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-24 15:04:12,592 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-24 15:04:12,592 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-24 15:04:12,592 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-24 15:04:12,592 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-24 15:04:12,592 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-24 15:04:12,593 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-24 15:04:12,593 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-24 15:04:12,593 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-24 15:04:12,598 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-24 15:04:12,599 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-24 15:04:12,599 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-24 15:04:12,599 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-24 15:04:12,599 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-24 15:04:12,599 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-24 15:04:12,599 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-24 15:04:12,600 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-24 15:04:12,600 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-24 15:04:12,600 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-24 15:04:12,600 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-24 15:04:12,600 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-24 15:04:12,600 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-24 15:04:12,600 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-24 15:04:12,600 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-24 15:04:12,600 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-24 15:04:12,600 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-24 15:04:12,600 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-24 15:04:12,600 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-24 15:04:12,600 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-24 15:04:12,600 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-24 15:04:12,601 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-24 15:04:12,601 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-24 15:04:12,601 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-24 15:04:12,601 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-24 15:04:12,601 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-24 15:04:12,618 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-24 15:04:12,630 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-24 15:04:12,633 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-24 15:04:12,634 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-24 15:04:12,634 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-24 15:04:12,634 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/Litecoin_SV_0xee059f0ca1507e4e20c689b20cff71b5e924f7bd_transfer-normal.bpl
[2020-11-24 15:04:12,635 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/Litecoin_SV_0xee059f0ca1507e4e20c689b20cff71b5e924f7bd_transfer-normal.bpl'
[2020-11-24 15:04:12,693 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-24 15:04:12,694 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-24 15:04:12,694 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-24 15:04:12,694 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-24 15:04:12,694 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-24 15:04:12,710 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "Litecoin_SV_0xee059f0ca1507e4e20c689b20cff71b5e924f7bd_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 03:04:12" (1/1) ...
[2020-11-24 15:04:12,712 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "Litecoin_SV_0xee059f0ca1507e4e20c689b20cff71b5e924f7bd_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 03:04:12" (1/1) ...
[2020-11-24 15:04:12,731 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "Litecoin_SV_0xee059f0ca1507e4e20c689b20cff71b5e924f7bd_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 03:04:12" (1/1) ...
[2020-11-24 15:04:12,732 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "Litecoin_SV_0xee059f0ca1507e4e20c689b20cff71b5e924f7bd_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 03:04:12" (1/1) ...
[2020-11-24 15:04:12,752 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "Litecoin_SV_0xee059f0ca1507e4e20c689b20cff71b5e924f7bd_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 03:04:12" (1/1) ...
[2020-11-24 15:04:12,759 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "Litecoin_SV_0xee059f0ca1507e4e20c689b20cff71b5e924f7bd_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 03:04:12" (1/1) ...
[2020-11-24 15:04:12,763 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "Litecoin_SV_0xee059f0ca1507e4e20c689b20cff71b5e924f7bd_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 03:04:12" (1/1) ...
[2020-11-24 15:04:12,768 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-24 15:04:12,769 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-24 15:04:12,769 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-24 15:04:12,771 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-24 15:04:12,775 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "Litecoin_SV_0xee059f0ca1507e4e20c689b20cff71b5e924f7bd_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 03:04:12" (1/1) ...
[2020-11-24 15:04:12,788 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(Litecoin_SV.transfer(to, value), p1 != msg.sender && p1 != to && msg.sender != to && value <= balances_Litecoin_SV[this][msg.sender] && balances_Litecoin_SV[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_Litecoin_SV[this][to] >= 0 && balances_Litecoin_SV[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_Litecoin_SV[this][msg.sender] >= 0 &&  balances_Litecoin_SV[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(Litecoin_SV.transfer(to, value), return == true && balances_Litecoin_SV[this][msg.sender] == old(balances_Litecoin_SV[this][msg.sender]) - value && balances_Litecoin_SV[this][to] == old(balances_Litecoin_SV[this][to]) + value && _totalSupply_Litecoin_SV[this] == old(_totalSupply_Litecoin_SV[this]) && allowed_Litecoin_SV[this] == old(allowed_Litecoin_SV[this]) && balances_Litecoin_SV[this][p1] == old(balances_Litecoin_SV[this][p1]) && businessName_Litecoin_SV[this] == old(businessName_Litecoin_SV[this]) && businessCountry_Litecoin_SV[this] == old(businessCountry_Litecoin_SV[this]) && symbol_Litecoin_SV[this] == old(symbol_Litecoin_SV[this]) && name_Litecoin_SV[this] == old(name_Litecoin_SV[this]) && decimals_Litecoin_SV[this] == old(decimals_Litecoin_SV[this]) && owner_Owned[this] == old(owner_Owned[this]) && newOwner_Owned[this] == old(newOwner_Owned[this]))))
[2020-11-24 15:04:12,793 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(Litecoin_SV.transfer(to, value), p1 != msg.sender && p1 != to && msg.sender != to && value <= balances_Litecoin_SV[this][msg.sender] && balances_Litecoin_SV[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_Litecoin_SV[this][to] >= 0 && balances_Litecoin_SV[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_Litecoin_SV[this][msg.sender] >= 0 &&  balances_Litecoin_SV[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(Litecoin_SV.transfer(to, value), return == true && balances_Litecoin_SV[this][msg.sender] == old(balances_Litecoin_SV[this][msg.sender]) - value && balances_Litecoin_SV[this][to] == old(balances_Litecoin_SV[this][to]) + value && _totalSupply_Litecoin_SV[this] == old(_totalSupply_Litecoin_SV[this]) && allowed_Litecoin_SV[this] == old(allowed_Litecoin_SV[this]) && balances_Litecoin_SV[this][p1] == old(balances_Litecoin_SV[this][p1]) && businessName_Litecoin_SV[this] == old(businessName_Litecoin_SV[this]) && businessCountry_Litecoin_SV[this] == old(businessCountry_Litecoin_SV[this]) && symbol_Litecoin_SV[this] == old(symbol_Litecoin_SV[this]) && name_Litecoin_SV[this] == old(name_Litecoin_SV[this]) && decimals_Litecoin_SV[this] == old(decimals_Litecoin_SV[this]) && owner_Owned[this] == old(owner_Owned[this]) && newOwner_Owned[this] == old(newOwner_Owned[this]))))
[2020-11-24 15:04:12,801 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(Litecoin_SV.transfer(to, value), p1 != msg.sender && p1 != to && msg.sender != to && value <= balances_Litecoin_SV[this][msg.sender] && balances_Litecoin_SV[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_Litecoin_SV[this][to] >= 0 && balances_Litecoin_SV[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_Litecoin_SV[this][msg.sender] >= 0 &&  balances_Litecoin_SV[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(Litecoin_SV.transfer(to, value), return == true && balances_Litecoin_SV[this][msg.sender] == old(balances_Litecoin_SV[this][msg.sender]) - value && balances_Litecoin_SV[this][to] == old(balances_Litecoin_SV[this][to]) + value && _totalSupply_Litecoin_SV[this] == old(_totalSupply_Litecoin_SV[this]) && allowed_Litecoin_SV[this] == old(allowed_Litecoin_SV[this]) && balances_Litecoin_SV[this][p1] == old(balances_Litecoin_SV[this][p1]) && businessName_Litecoin_SV[this] == old(businessName_Litecoin_SV[this]) && businessCountry_Litecoin_SV[this] == old(businessCountry_Litecoin_SV[this]) && symbol_Litecoin_SV[this] == old(symbol_Litecoin_SV[this]) && name_Litecoin_SV[this] == old(name_Litecoin_SV[this]) && decimals_Litecoin_SV[this] == old(decimals_Litecoin_SV[this]) && owner_Owned[this] == old(owner_Owned[this]) && newOwner_Owned[this] == old(newOwner_Owned[this]))))
[2020-11-24 15:04:12,807 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( ( ( p1!=msg.sender && p1!=to_s383 ) && msg.sender!=to_s383 ) && tokens_s383<=balances_Litecoin_SV[this][msg.sender] ) && ( balances_Litecoin_SV[this][to_s383] + tokens_s383 )<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && tokens_s383>=0 ) && tokens_s383<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && balances_Litecoin_SV[this][to_s383]>=0 ) && balances_Litecoin_SV[this][to_s383]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && balances_Litecoin_SV[this][msg.sender]>=0 ) && balances_Litecoin_SV[this][msg.sender]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPNEQ,IdentifierExpression[p1,GLOBAL],IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_Litecoin_SV>]],BinaryExpression[COMPNEQ,IdentifierExpression[p1,GLOBAL],IdentifierExpression[to_s383,<IMPLEMENTATION_INPARAM,transfer~address~uint256_Litecoin_SV>]]],BinaryExpression[COMPNEQ,IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_Litecoin_SV>],IdentifierExpression[to_s383,<IMPLEMENTATION_INPARAM,transfer~address~uint256_Litecoin_SV>]]],BinaryExpression[COMPLEQ,IdentifierExpression[tokens_s383,<IMPLEMENTATION_INPARAM,transfer~address~uint256_Litecoin_SV>],ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_Litecoin_SV,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_Litecoin_SV>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_Litecoin_SV>]]]]],BinaryExpression[COMPLT,BinaryExpression[ARITHPLUS,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_Litecoin_SV,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_Litecoin_SV>]]],[IdentifierExpression[to_s383,<IMPLEMENTATION_INPARAM,transfer~address~uint256_Litecoin_SV>]]],IdentifierExpression[tokens_s383,<IMPLEMENTATION_INPARAM,transfer~address~uint256_Litecoin_SV>]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,IdentifierExpression[tokens_s383,<IMPLEMENTATION_INPARAM,transfer~address~uint256_Litecoin_SV>],IntegerLiteral[0]]],BinaryExpression[COMPLT,IdentifierExpression[tokens_s383,<IMPLEMENTATION_INPARAM,transfer~address~uint256_Litecoin_SV>],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_Litecoin_SV,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_Litecoin_SV>]]],[IdentifierExpression[to_s383,<IMPLEMENTATION_INPARAM,transfer~address~uint256_Litecoin_SV>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_Litecoin_SV,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_Litecoin_SV>]]],[IdentifierExpression[to_s383,<IMPLEMENTATION_INPARAM,transfer~address~uint256_Litecoin_SV>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_Litecoin_SV,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_Litecoin_SV>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_Litecoin_SV>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_Litecoin_SV,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_Litecoin_SV>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_Litecoin_SV>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]]
[2020-11-24 15:04:12,810 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( ( ( ( ( success_s383==true && balances_Litecoin_SV[this][msg.sender]==( ( old(balances_Litecoin_SV[this][msg.sender]) ) - tokens_s383 ) ) && balances_Litecoin_SV[this][to_s383]==( ( old(balances_Litecoin_SV[this][to_s383]) ) + tokens_s383 ) ) && _totalSupply_Litecoin_SV[this]==( old(_totalSupply_Litecoin_SV[this]) ) ) && allowed_Litecoin_SV[this]==( old(allowed_Litecoin_SV[this]) ) ) && balances_Litecoin_SV[this][p1]==( old(balances_Litecoin_SV[this][p1]) ) ) && businessName_Litecoin_SV[this]==( old(businessName_Litecoin_SV[this]) ) ) && businessCountry_Litecoin_SV[this]==( old(businessCountry_Litecoin_SV[this]) ) ) && symbol_Litecoin_SV[this]==( old(symbol_Litecoin_SV[this]) ) ) && name_Litecoin_SV[this]==( old(name_Litecoin_SV[this]) ) ) && decimals_Litecoin_SV[this]==( old(decimals_Litecoin_SV[this]) ) ) && owner_Owned[this]==( old(owner_Owned[this]) ) ) && newOwner_Owned[this]==( old(newOwner_Owned[this]) ) ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[success_s383,<IMPLEMENTATION_OUTPARAM,transfer~address~uint256_Litecoin_SV>],BooleanLiteral[true]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_Litecoin_SV,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_Litecoin_SV>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_Litecoin_SV>]]],BinaryExpression[ARITHMINUS,UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_Litecoin_SV,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_Litecoin_SV>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_Litecoin_SV>]]]],IdentifierExpression[tokens_s383,<IMPLEMENTATION_INPARAM,transfer~address~uint256_Litecoin_SV>]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_Litecoin_SV,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_Litecoin_SV>]]],[IdentifierExpression[to_s383,<IMPLEMENTATION_INPARAM,transfer~address~uint256_Litecoin_SV>]]],BinaryExpression[ARITHPLUS,UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_Litecoin_SV,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_Litecoin_SV>]]],[IdentifierExpression[to_s383,<IMPLEMENTATION_INPARAM,transfer~address~uint256_Litecoin_SV>]]]],IdentifierExpression[tokens_s383,<IMPLEMENTATION_INPARAM,transfer~address~uint256_Litecoin_SV>]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_totalSupply_Litecoin_SV,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_Litecoin_SV>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_totalSupply_Litecoin_SV,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_Litecoin_SV>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[allowed_Litecoin_SV,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_Litecoin_SV>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[allowed_Litecoin_SV,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_Litecoin_SV>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_Litecoin_SV,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_Litecoin_SV>]]],[IdentifierExpression[p1,GLOBAL]]],UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_Litecoin_SV,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_Litecoin_SV>]]],[IdentifierExpression[p1,GLOBAL]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[businessName_Litecoin_SV,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_Litecoin_SV>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[businessName_Litecoin_SV,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_Litecoin_SV>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[businessCountry_Litecoin_SV,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_Litecoin_SV>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[businessCountry_Litecoin_SV,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_Litecoin_SV>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[symbol_Litecoin_SV,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_Litecoin_SV>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[symbol_Litecoin_SV,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_Litecoin_SV>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[name_Litecoin_SV,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_Litecoin_SV>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[name_Litecoin_SV,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_Litecoin_SV>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[decimals_Litecoin_SV,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_Litecoin_SV>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[decimals_Litecoin_SV,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_Litecoin_SV>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[owner_Owned,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_Litecoin_SV>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[owner_Owned,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_Litecoin_SV>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[newOwner_Owned,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_Litecoin_SV>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[newOwner_Owned,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_Litecoin_SV>]]]]]]
[2020-11-24 15:04:12,813 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(Litecoin_SV.transfer(to, value), p1 != msg.sender && p1 != to && msg.sender != to && value <= balances_Litecoin_SV[this][msg.sender] && balances_Litecoin_SV[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_Litecoin_SV[this][to] >= 0 && balances_Litecoin_SV[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_Litecoin_SV[this][msg.sender] >= 0 &&  balances_Litecoin_SV[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(Litecoin_SV.transfer(to, value), return == true && balances_Litecoin_SV[this][msg.sender] == old(balances_Litecoin_SV[this][msg.sender]) - value && balances_Litecoin_SV[this][to] == old(balances_Litecoin_SV[this][to]) + value && _totalSupply_Litecoin_SV[this] == old(_totalSupply_Litecoin_SV[this]) && allowed_Litecoin_SV[this] == old(allowed_Litecoin_SV[this]) && balances_Litecoin_SV[this][p1] == old(balances_Litecoin_SV[this][p1]) && businessName_Litecoin_SV[this] == old(businessName_Litecoin_SV[this]) && businessCountry_Litecoin_SV[this] == old(businessCountry_Litecoin_SV[this]) && symbol_Litecoin_SV[this] == old(symbol_Litecoin_SV[this]) && name_Litecoin_SV[this] == old(name_Litecoin_SV[this]) && decimals_Litecoin_SV[this] == old(decimals_Litecoin_SV[this]) && owner_Owned[this] == old(owner_Owned[this]) && newOwner_Owned[this] == old(newOwner_Owned[this]))))
[2020-11-24 15:04:12,813 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_transfer_Litecoin_SV0) ==> ( <>AP(success_transfer_Litecoin_SV0) ) ) )
Executed UtopiaSpecLang
[2020-11-24 15:04:12,819 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 03:04:12 PropertyContainer
[2020-11-24 15:04:12,819 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-24 15:04:12,819 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-24 15:04:12,819 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-24 15:04:12,819 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-24 15:04:12,820 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Litecoin_SV_0xee059f0ca1507e4e20c689b20cff71b5e924f7bd_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 03:04:12" (1/2) ...
[2020-11-24 15:04:12,820 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-24 15:04:12,820 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-24 15:04:12,828 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 03:04:12" (2/2) ...
[2020-11-24 15:04:12,829 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-24 15:04:12,829 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-24 15:04:12,829 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-24 15:04:12,829 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-24 15:04:12,830 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Litecoin_SV_0xee059f0ca1507e4e20c689b20cff71b5e924f7bd_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 03:04:12" (1/2) ...
[2020-11-24 15:04:12,886 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-24 15:04:12,886 INFO  L130     BoogieDeclarations]: Found specification of procedure safeAdd~uint256~uint256_SafeMath
[2020-11-24 15:04:12,886 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeAdd~uint256~uint256_SafeMath
[2020-11-24 15:04:12,886 INFO  L130     BoogieDeclarations]: Found specification of procedure safeSub~uint256~uint256_SafeMath
[2020-11-24 15:04:12,886 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeSub~uint256~uint256_SafeMath
[2020-11-24 15:04:12,886 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_Litecoin_SV
[2020-11-24 15:04:12,886 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_Litecoin_SV
[2020-11-24 15:04:12,886 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_Litecoin_SV
[2020-11-24 15:04:12,886 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_Litecoin_SV
[2020-11-24 15:04:12,887 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_Litecoin_SV
[2020-11-24 15:04:12,887 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_Litecoin_SV
[2020-11-24 15:04:12,887 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_Litecoin_SV
[2020-11-24 15:04:12,887 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_Litecoin_SV
[2020-11-24 15:04:12,887 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_Litecoin_SV
[2020-11-24 15:04:12,887 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_Litecoin_SV
[2020-11-24 15:04:12,887 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_Litecoin_SV
[2020-11-24 15:04:12,887 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_Litecoin_SV
[2020-11-24 15:04:12,887 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-24 15:04:12,887 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-24 15:04:12,888 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-24 15:04:12,888 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__success
[2020-11-24 15:04:12,888 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_SafeMath
[2020-11-24 15:04:12,888 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_SafeMath
[2020-11-24 15:04:12,888 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20Interface
[2020-11-24 15:04:12,888 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20Interface
[2020-11-24 15:04:12,888 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ApproveAndCallFallBack
[2020-11-24 15:04:12,888 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ApproveAndCallFallBack
[2020-11-24 15:04:12,888 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_Owned
[2020-11-24 15:04:12,889 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_Owned
[2020-11-24 15:04:12,889 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_Litecoin_SV
[2020-11-24 15:04:12,889 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-24 15:04:12,889 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-24 15:04:12,889 INFO  L130     BoogieDeclarations]: Found specification of procedure safeAdd~uint256~uint256_SafeMath__success
[2020-11-24 15:04:12,889 INFO  L130     BoogieDeclarations]: Found specification of procedure safeAdd~uint256~uint256_SafeMath__fail
[2020-11-24 15:04:12,889 INFO  L130     BoogieDeclarations]: Found specification of procedure safeSub~uint256~uint256_SafeMath__success
[2020-11-24 15:04:12,889 INFO  L130     BoogieDeclarations]: Found specification of procedure safeSub~uint256~uint256_SafeMath__fail
[2020-11-24 15:04:12,889 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_Litecoin_SV__success
[2020-11-24 15:04:12,890 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_Litecoin_SV__fail
[2020-11-24 15:04:12,890 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_Litecoin_SV__success
[2020-11-24 15:04:12,890 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_Litecoin_SV__fail
[2020-11-24 15:04:12,890 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_Litecoin_SV__success
[2020-11-24 15:04:12,890 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_Litecoin_SV__fail
[2020-11-24 15:04:12,890 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_Litecoin_SV__success
[2020-11-24 15:04:12,890 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_Litecoin_SV__fail
[2020-11-24 15:04:12,890 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_Litecoin_SV__success
[2020-11-24 15:04:12,890 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_Litecoin_SV__fail
[2020-11-24 15:04:12,890 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_Litecoin_SV__success
[2020-11-24 15:04:12,890 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_Litecoin_SV__fail
[2020-11-24 15:04:12,891 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-24 15:04:12,891 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-24 15:04:12,891 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-24 15:04:12,891 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__fail
[2020-11-24 15:04:12,891 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-24 15:04:12,891 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-24 15:04:12,891 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeAdd~uint256~uint256_SafeMath__fail
[2020-11-24 15:04:12,891 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeAdd~uint256~uint256_SafeMath__success
[2020-11-24 15:04:12,891 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeSub~uint256~uint256_SafeMath__fail
[2020-11-24 15:04:12,891 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeSub~uint256~uint256_SafeMath__success
[2020-11-24 15:04:12,891 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_Litecoin_SV__fail
[2020-11-24 15:04:12,891 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_Litecoin_SV__success
[2020-11-24 15:04:12,892 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_Litecoin_SV__fail
[2020-11-24 15:04:12,892 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_Litecoin_SV__success
[2020-11-24 15:04:12,892 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_Litecoin_SV__fail
[2020-11-24 15:04:12,892 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_Litecoin_SV__success
[2020-11-24 15:04:12,892 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_Litecoin_SV__fail
[2020-11-24 15:04:12,892 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_Litecoin_SV__success
[2020-11-24 15:04:12,892 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_Litecoin_SV__fail
[2020-11-24 15:04:12,892 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_Litecoin_SV__success
[2020-11-24 15:04:12,892 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_Litecoin_SV__fail
[2020-11-24 15:04:12,892 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_Litecoin_SV__success
[2020-11-24 15:04:12,892 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-24 15:04:12,892 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-24 15:04:12,892 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-24 15:04:12,893 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-24 15:04:12,893 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-24 15:04:12,893 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-24 15:04:12,893 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__fail
[2020-11-24 15:04:12,893 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__success
[2020-11-24 15:04:12,893 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_SafeMath
[2020-11-24 15:04:12,893 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_SafeMath
[2020-11-24 15:04:12,893 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20Interface
[2020-11-24 15:04:12,893 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20Interface
[2020-11-24 15:04:12,893 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ApproveAndCallFallBack
[2020-11-24 15:04:12,893 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ApproveAndCallFallBack
[2020-11-24 15:04:12,894 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_Owned
[2020-11-24 15:04:12,894 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_Owned
[2020-11-24 15:04:12,894 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_Litecoin_SV
[2020-11-24 15:04:12,895 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-24 15:04:12,895 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-24 15:04:12,895 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-24 15:04:13,090 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 15:04:13,217 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 15:04:13,217 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 15:04:13,218 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 15:04:13,323 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-24 15:04:13,323 INFO  L286             CfgBuilder]: Removed 5 assue(true) statements.
[2020-11-24 15:04:13,325 INFO  L202        PluginConnector]: Adding new model Litecoin_SV_0xee059f0ca1507e4e20c689b20cff71b5e924f7bd_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 03:04:13 BoogieIcfgContainer
[2020-11-24 15:04:13,325 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 03:04:12" (2/2) ...
[2020-11-24 15:04:13,325 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-24 15:04:13,326 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@7236687c and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 03:04:13, skipping insertion in model container
[2020-11-24 15:04:13,326 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-24 15:04:13,326 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-24 15:04:13,326 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-24 15:04:13,327 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-24 15:04:13,327 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Litecoin_SV_0xee059f0ca1507e4e20c689b20cff71b5e924f7bd_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 03:04:12" (1/3) ...
[2020-11-24 15:04:13,328 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@21889eab and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 03:04:13, skipping insertion in model container
[2020-11-24 15:04:13,328 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 03:04:12" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-24 15:04:13,364 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 03:04:13 NWAContainer
[2020-11-24 15:04:13,364 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-24 15:04:13,364 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-24 15:04:13,364 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-24 15:04:13,365 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-24 15:04:13,366 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Litecoin_SV_0xee059f0ca1507e4e20c689b20cff71b5e924f7bd_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 03:04:13" (3/4) ...
[2020-11-24 15:04:13,366 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@20760607 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 03:04:13, skipping insertion in model container
[2020-11-24 15:04:13,367 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 03:04:13" (4/4) ...
[2020-11-24 15:04:13,370 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-24 15:04:13,372 INFO  L110   BuchiProductObserver]: Initial RCFG 706 locations, 861 edges
[2020-11-24 15:04:13,372 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-24 15:04:13,383 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-24 15:04:14,215 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-24 15:04:14,217 INFO  L110   BuchiProductObserver]: BuchiProgram size 1634 locations, 2772 edges
[2020-11-24 15:04:14,217 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 03:04:14 BoogieIcfgContainer
[2020-11-24 15:04:14,218 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-24 15:04:14,218 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-24 15:04:14,218 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-24 15:04:14,219 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-24 15:04:14,220 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 03:04:14" (1/1) ...
[2020-11-24 15:04:14,258 INFO  L313           BlockEncoder]: Initial Icfg 1634 locations, 2772 edges
[2020-11-24 15:04:14,258 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-24 15:04:14,258 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-24 15:04:14,259 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-24 15:04:14,259 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-24 15:04:14,265 INFO  L70    emoveInfeasibleEdges]: Removed 75 edges and 13 locations because of local infeasibility
[2020-11-24 15:04:14,269 INFO  L70        RemoveSinkStates]: Removed 32 edges and 21 locations by removing sink states
[2020-11-24 15:04:14,274 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-24 15:04:14,276 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-24 15:04:14,277 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-24 15:04:14,278 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-24 15:04:14,279 INFO  L313           BlockEncoder]: Encoded RCFG 1584 locations, 2642 edges
[2020-11-24 15:04:14,280 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 24.11 03:04:14 BasicIcfg
[2020-11-24 15:04:14,280 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-24 15:04:14,280 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-24 15:04:14,280 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-24 15:04:14,282 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-24 15:04:14,282 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 15:04:14,283 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Litecoin_SV_0xee059f0ca1507e4e20c689b20cff71b5e924f7bd_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 03:04:12" (1/6) ...
[2020-11-24 15:04:14,284 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@7171b017 and model type Litecoin_SV_0xee059f0ca1507e4e20c689b20cff71b5e924f7bd_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 24.11 03:04:14, skipping insertion in model container
[2020-11-24 15:04:14,284 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 15:04:14,284 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 03:04:12" (2/6) ...
[2020-11-24 15:04:14,285 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@7171b017 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 24.11 03:04:14, skipping insertion in model container
[2020-11-24 15:04:14,285 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 15:04:14,285 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Litecoin_SV_0xee059f0ca1507e4e20c689b20cff71b5e924f7bd_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 03:04:13" (3/6) ...
[2020-11-24 15:04:14,285 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@7171b017 and model type Litecoin_SV_0xee059f0ca1507e4e20c689b20cff71b5e924f7bd_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 24.11 03:04:14, skipping insertion in model container
[2020-11-24 15:04:14,285 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 15:04:14,285 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 03:04:13" (4/6) ...
[2020-11-24 15:04:14,285 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@7171b017 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 24.11 03:04:14, skipping insertion in model container
[2020-11-24 15:04:14,285 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 15:04:14,285 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 03:04:14" (5/6) ...
[2020-11-24 15:04:14,285 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@7171b017 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 24.11 03:04:14, skipping insertion in model container
[2020-11-24 15:04:14,285 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 15:04:14,286 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 24.11 03:04:14" (6/6) ...
[2020-11-24 15:04:14,286 INFO  L404   chiAutomizerObserver]: Analyzing ICFG Litecoin_SV_0xee059f0ca1507e4e20c689b20cff71b5e924f7bd_transfer-normal.bpl_BEv2
[2020-11-24 15:04:14,320 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-24 15:04:14,320 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-24 15:04:14,320 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-24 15:04:14,321 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-24 15:04:14,321 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-24 15:04:14,321 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-24 15:04:14,321 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-24 15:04:14,321 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-24 15:04:14,321 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-24 15:04:14,336 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1584 states.
[2020-11-24 15:04:14,372 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 15:04:14,372 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 15:04:14,373 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 15:04:14,381 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 15:04:14,382 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
[2020-11-24 15:04:14,382 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-24 15:04:14,382 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1584 states.
[2020-11-24 15:04:14,390 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 15:04:14,390 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 15:04:14,390 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 15:04:14,391 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 15:04:14,391 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L3]                 success_transfer_Litecoin_SV0 := false;
[L3]                 call_transfer_Litecoin_SV0 := false;
[L3]     CALL        call main();
[L3]                 havoc p1;
[L2002]              assume null == 0;
[L2003]  CALL        call this := FreshRefGenerator__success();
[L815]               havoc newRef;
[L816]               assume Alloc[newRef] == false;
[L817]               Alloc[newRef] := true;
[L818]               assume newRef != null;
[L2003]  RET         call this := FreshRefGenerator__success();
[L2004]              assume now >= 0;
[L2005]              assume DType[this] == Litecoin_SV;
[L2006]              assume !revert && gas >= 0;
[L2007]  CALL        call CorralChoice_Litecoin_SV(this);
[L1885]              havoc msgsender_MSG;
[L1886]              havoc msgvalue_MSG;
[L1887]              havoc choice;
[L1888]              havoc a_s23;
[L1889]              havoc b_s23;
[L1890]              havoc c_s23;
[L1891]              havoc a_s45;
[L1892]              havoc b_s45;
[L1893]              havoc c_s45;
[L1894]              havoc a_s73;
[L1895]              havoc b_s73;
[L1896]              havoc c_s73;
[L1897]              havoc a_s95;
[L1898]              havoc b_s95;
[L1899]              havoc c_s95;
[L1900]              havoc __ret_0_totalSupply;
[L1901]              havoc tokenOwner_s340;
[L1902]              havoc balance_s340;
[L1903]              havoc tokenOwner_s486;
[L1904]              havoc spender_s486;
[L1905]              havoc remaining_s486;
[L1906]              havoc to_s383;
[L1907]              havoc tokens_s383;
[L1908]              havoc success_s383;
[L1909]              havoc spender_s411;
[L1910]              havoc tokens_s411;
[L1911]              havoc success_s411;
[L1912]              havoc from_s470;
[L1913]              havoc to_s470;
[L1914]              havoc tokens_s470;
[L1915]              havoc success_s470;
[L1916]              havoc __ret_0_owner;
[L1917]              havoc __ret_0_newOwner;
[L1918]              havoc _newOwner_s217;
[L1919]              havoc __ret_0_businessName;
[L1920]              havoc __ret_0_businessCountry;
[L1921]              havoc __ret_0_symbol;
[L1922]              havoc __ret_0_name;
[L1923]              havoc __ret_0_decimals;
[L1924]              havoc __ret_0__totalSupply;
[L1925]              havoc spender_s529;
[L1926]              havoc tokens_s529;
[L1927]              havoc data_s529;
[L1928]              havoc success_s529;
[L1929]              havoc tokenAddress_s556;
[L1930]              havoc tokens_s556;
[L1931]              havoc success_s556;
[L1932]              havoc tmpNow;
[L1933]              havoc gas;
[L1934]              assume gas > 4000000 && gas <= 8000000;
[L1935]              tmpNow := now;
[L1936]              havoc now;
[L1937]              assume now > tmpNow;
[L1938]              assume msgsender_MSG != null;
[L1939]  COND TRUE   choice == 8
[L1940]              gas := gas - 21000;
[L1941]  COND FALSE  !(gas >= 0)
[L2007]  RET         call CorralChoice_Litecoin_SV(this);

Loop:
[L2007]        assume true;

[2020-11-24 15:04:14,407 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 15:04:14,407 INFO  L82        PathProgramCache]: Analyzing trace with hash 337807100, now seen corresponding path program 1 times
[2020-11-24 15:04:14,410 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 15:04:14,430 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 15:04:14,486 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 15:04:14,488 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 15:04:14,489 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [5] imperfect sequences [] total 5
[2020-11-24 15:04:14,492 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 15:04:14,597 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 5 interpolants.
[2020-11-24 15:04:14,598 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=9, Invalid=11, Unknown=0, NotChecked=0, Total=20
[2020-11-24 15:04:14,600 INFO  L87              Difference]: Start difference. First operand 1584 states. Second operand 5 states.
[2020-11-24 15:04:14,752 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 15:04:14,752 INFO  L93              Difference]: Finished difference Result 675 states and 735 transitions.
[2020-11-24 15:04:14,752 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-24 15:04:14,753 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 675 states and 735 transitions.
[2020-11-24 15:04:14,758 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 15:04:14,762 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 675 states to 193 states and 202 transitions.
[2020-11-24 15:04:14,763 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 4
[2020-11-24 15:04:14,763 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 193
[2020-11-24 15:04:14,764 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 193 states and 202 transitions.
[2020-11-24 15:04:14,764 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 15:04:14,764 INFO  L728         BuchiCegarLoop]: Abstraction has 193 states and 202 transitions.
[2020-11-24 15:04:14,779 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 193 states and 202 transitions.
[2020-11-24 15:04:14,789 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 193 to 193.
[2020-11-24 15:04:14,790 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 193 states.
[2020-11-24 15:04:14,791 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 193 states to 193 states and 202 transitions.
[2020-11-24 15:04:14,792 INFO  L751         BuchiCegarLoop]: Abstraction has 193 states and 202 transitions.
[2020-11-24 15:04:14,792 INFO  L631         BuchiCegarLoop]: Abstraction has 193 states and 202 transitions.
[2020-11-24 15:04:14,792 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-24 15:04:14,792 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 193 states and 202 transitions.
[2020-11-24 15:04:14,793 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 15:04:14,793 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 15:04:14,794 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 15:04:14,795 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 15:04:14,795 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L3]                 success_transfer_Litecoin_SV0 := false;
[L3]                 call_transfer_Litecoin_SV0 := false;
[L3]     CALL        call main();
[L3]                 havoc p1;
[L2002]              assume null == 0;
[L2003]  CALL        call this := FreshRefGenerator__success();
[L815]               havoc newRef;
[L816]               assume Alloc[newRef] == false;
[L817]               Alloc[newRef] := true;
[L818]               assume newRef != null;
[L2003]  RET         call this := FreshRefGenerator__success();
[L2004]              assume now >= 0;
[L2005]              assume DType[this] == Litecoin_SV;
[L2006]              assume !revert && gas >= 0;
[L2007]  CALL        call CorralChoice_Litecoin_SV(this);
[L1885]              havoc msgsender_MSG;
[L1886]              havoc msgvalue_MSG;
[L1887]              havoc choice;
[L1888]              havoc a_s23;
[L1889]              havoc b_s23;
[L1890]              havoc c_s23;
[L1891]              havoc a_s45;
[L1892]              havoc b_s45;
[L1893]              havoc c_s45;
[L1894]              havoc a_s73;
[L1895]              havoc b_s73;
[L1896]              havoc c_s73;
[L1897]              havoc a_s95;
[L1898]              havoc b_s95;
[L1899]              havoc c_s95;
[L1900]              havoc __ret_0_totalSupply;
[L1901]              havoc tokenOwner_s340;
[L1902]              havoc balance_s340;
[L1903]              havoc tokenOwner_s486;
[L1904]              havoc spender_s486;
[L1905]              havoc remaining_s486;
[L1906]              havoc to_s383;
[L1907]              havoc tokens_s383;
[L1908]              havoc success_s383;
[L1909]              havoc spender_s411;
[L1910]              havoc tokens_s411;
[L1911]              havoc success_s411;
[L1912]              havoc from_s470;
[L1913]              havoc to_s470;
[L1914]              havoc tokens_s470;
[L1915]              havoc success_s470;
[L1916]              havoc __ret_0_owner;
[L1917]              havoc __ret_0_newOwner;
[L1918]              havoc _newOwner_s217;
[L1919]              havoc __ret_0_businessName;
[L1920]              havoc __ret_0_businessCountry;
[L1921]              havoc __ret_0_symbol;
[L1922]              havoc __ret_0_name;
[L1923]              havoc __ret_0_decimals;
[L1924]              havoc __ret_0__totalSupply;
[L1925]              havoc spender_s529;
[L1926]              havoc tokens_s529;
[L1927]              havoc data_s529;
[L1928]              havoc success_s529;
[L1929]              havoc tokenAddress_s556;
[L1930]              havoc tokens_s556;
[L1931]              havoc success_s556;
[L1932]              havoc tmpNow;
[L1933]              havoc gas;
[L1934]              assume gas > 4000000 && gas <= 8000000;
[L1935]              tmpNow := now;
[L1936]              havoc now;
[L1937]              assume now > tmpNow;
[L1938]              assume msgsender_MSG != null;
[L1939]  COND FALSE  !(choice == 8)
[L1947]  COND FALSE  !(choice == 7)
[L1955]  COND FALSE  !(choice == 6)
[L1961]  COND FALSE  !(choice == 5)
[L1967]  COND FALSE  !(choice == 4)
[L1973]  COND TRUE   choice == 3
[L1974]              gas := gas - 21000;
[L1975]  COND TRUE   gas >= 0
[L1976]              assume tokens_s383 >= 0 && tokens_s383 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1977]              assume msgvalue_MSG == 0;
[L1978]  CALL        call success_s383 := transfer~address~uint256_Litecoin_SV(this, msgsender_MSG, msgvalue_MSG, to_s383, tokens_s383);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != to_s383) && msgsender_MSG != to_s383) && tokens_s383 <= balances_Litecoin_SV[this][msgsender_MSG]) && balances_Litecoin_SV[this][to_s383] + tokens_s383 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && tokens_s383 >= 0) && tokens_s383 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_Litecoin_SV[this][to_s383] >= 0) && balances_Litecoin_SV[this][to_s383] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_Litecoin_SV[this][msgsender_MSG] >= 0) && balances_Litecoin_SV[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_Litecoin_SV0 := true;
[L3]                 call_transfer_Litecoin_SV0 := false;
[L3]                 revert := revert_hold;
[L312]               havoc __exception;
[L313]               revert := false;
[L314]   COND FALSE  !(__exception)
[L339]   CALL        call success_s383 := transfer~address~uint256_Litecoin_SV__success(this, msgsender_MSG, msgvalue_MSG, to_s383, tokens_s383);
[L919]   COND TRUE   DType[this] == Litecoin_SV
[L920]   CALL        call __var_2 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_Litecoin_SV[this][msgsender_MSG], tokens_s383);
[L850]   COND TRUE   !(b_s45 <= a_s45)
[L851]               revert := true;
[L920]   RET         call __var_2 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_Litecoin_SV[this][msgsender_MSG], tokens_s383);
[L921]   COND TRUE   revert
[L339]   RET         call success_s383 := transfer~address~uint256_Litecoin_SV__success(this, msgsender_MSG, msgvalue_MSG, to_s383, tokens_s383);
[L340]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !((((((((((((success_s383 == true && balances_Litecoin_SV[this][msgsender_MSG] == old(balances_Litecoin_SV[this][msgsender_MSG]) - tokens_s383) && balances_Litecoin_SV[this][to_s383] == old(balances_Litecoin_SV[this][to_s383]) + tokens_s383) && _totalSupply_Litecoin_SV[this] == old(_totalSupply_Litecoin_SV[this])) && allowed_Litecoin_SV[this] == old(allowed_Litecoin_SV[this])) && balances_Litecoin_SV[this][p1] == old(balances_Litecoin_SV[this][p1])) && businessName_Litecoin_SV[this] == old(businessName_Litecoin_SV[this])) && businessCountry_Litecoin_SV[this] == old(businessCountry_Litecoin_SV[this])) && symbol_Litecoin_SV[this] == old(symbol_Litecoin_SV[this])) && name_Litecoin_SV[this] == old(name_Litecoin_SV[this])) && decimals_Litecoin_SV[this] == old(decimals_Litecoin_SV[this])) && owner_Owned[this] == old(owner_Owned[this])) && newOwner_Owned[this] == old(newOwner_Owned[this]));
[L3]                 revert := revert_hold;
[L1978]  RET         call success_s383 := transfer~address~uint256_Litecoin_SV(this, msgsender_MSG, msgvalue_MSG, to_s383, tokens_s383);
[L2007]  RET         call CorralChoice_Litecoin_SV(this);

Loop:
[L2007]        assume true;

[2020-11-24 15:04:14,798 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 15:04:14,798 INFO  L82        PathProgramCache]: Analyzing trace with hash -9842038, now seen corresponding path program 1 times
[2020-11-24 15:04:14,799 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 15:04:14,807 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 15:04:14,825 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 15:04:14,825 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 15:04:14,825 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-24 15:04:14,826 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 15:04:14,826 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-24 15:04:14,826 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-24 15:04:14,827 INFO  L87              Difference]: Start difference. First operand 193 states and 202 transitions. cyclomatic complexity: 10 Second operand 3 states.
[2020-11-24 15:04:14,831 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 15:04:14,831 INFO  L93              Difference]: Finished difference Result 224 states and 232 transitions.
[2020-11-24 15:04:14,831 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-24 15:04:14,832 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 224 states and 232 transitions.
[2020-11-24 15:04:14,833 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 2
[2020-11-24 15:04:14,835 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 224 states to 210 states and 215 transitions.
[2020-11-24 15:04:14,835 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 210
[2020-11-24 15:04:14,835 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 210
[2020-11-24 15:04:14,835 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 210 states and 215 transitions.
[2020-11-24 15:04:14,835 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 15:04:14,835 INFO  L728         BuchiCegarLoop]: Abstraction has 210 states and 215 transitions.
[2020-11-24 15:04:14,836 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 210 states and 215 transitions.
[2020-11-24 15:04:14,840 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 210 to 199.
[2020-11-24 15:04:14,840 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 199 states.
[2020-11-24 15:04:14,840 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 199 states to 199 states and 204 transitions.
[2020-11-24 15:04:14,840 INFO  L751         BuchiCegarLoop]: Abstraction has 199 states and 204 transitions.
[2020-11-24 15:04:14,840 INFO  L631         BuchiCegarLoop]: Abstraction has 199 states and 204 transitions.
[2020-11-24 15:04:14,840 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-24 15:04:14,841 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 199 states and 204 transitions.
[2020-11-24 15:04:14,841 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 15:04:14,841 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 15:04:14,841 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 15:04:14,842 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 15:04:14,842 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L3]                 success_transfer_Litecoin_SV0 := false;
[L3]                 call_transfer_Litecoin_SV0 := false;
[L3]     CALL        call main();
[L3]                 havoc p1;
[L2002]              assume null == 0;
[L2003]  CALL        call this := FreshRefGenerator__success();
[L815]               havoc newRef;
[L816]               assume Alloc[newRef] == false;
[L817]               Alloc[newRef] := true;
[L818]               assume newRef != null;
[L2003]  RET         call this := FreshRefGenerator__success();
[L2004]              assume now >= 0;
[L2005]              assume DType[this] == Litecoin_SV;
[L2006]              assume !revert && gas >= 0;
[L2007]  CALL        call CorralChoice_Litecoin_SV(this);
[L1885]              havoc msgsender_MSG;
[L1886]              havoc msgvalue_MSG;
[L1887]              havoc choice;
[L1888]              havoc a_s23;
[L1889]              havoc b_s23;
[L1890]              havoc c_s23;
[L1891]              havoc a_s45;
[L1892]              havoc b_s45;
[L1893]              havoc c_s45;
[L1894]              havoc a_s73;
[L1895]              havoc b_s73;
[L1896]              havoc c_s73;
[L1897]              havoc a_s95;
[L1898]              havoc b_s95;
[L1899]              havoc c_s95;
[L1900]              havoc __ret_0_totalSupply;
[L1901]              havoc tokenOwner_s340;
[L1902]              havoc balance_s340;
[L1903]              havoc tokenOwner_s486;
[L1904]              havoc spender_s486;
[L1905]              havoc remaining_s486;
[L1906]              havoc to_s383;
[L1907]              havoc tokens_s383;
[L1908]              havoc success_s383;
[L1909]              havoc spender_s411;
[L1910]              havoc tokens_s411;
[L1911]              havoc success_s411;
[L1912]              havoc from_s470;
[L1913]              havoc to_s470;
[L1914]              havoc tokens_s470;
[L1915]              havoc success_s470;
[L1916]              havoc __ret_0_owner;
[L1917]              havoc __ret_0_newOwner;
[L1918]              havoc _newOwner_s217;
[L1919]              havoc __ret_0_businessName;
[L1920]              havoc __ret_0_businessCountry;
[L1921]              havoc __ret_0_symbol;
[L1922]              havoc __ret_0_name;
[L1923]              havoc __ret_0_decimals;
[L1924]              havoc __ret_0__totalSupply;
[L1925]              havoc spender_s529;
[L1926]              havoc tokens_s529;
[L1927]              havoc data_s529;
[L1928]              havoc success_s529;
[L1929]              havoc tokenAddress_s556;
[L1930]              havoc tokens_s556;
[L1931]              havoc success_s556;
[L1932]              havoc tmpNow;
[L1933]              havoc gas;
[L1934]              assume gas > 4000000 && gas <= 8000000;
[L1935]              tmpNow := now;
[L1936]              havoc now;
[L1937]              assume now > tmpNow;
[L1938]              assume msgsender_MSG != null;
[L1939]  COND FALSE  !(choice == 8)
[L1947]  COND FALSE  !(choice == 7)
[L1955]  COND FALSE  !(choice == 6)
[L1961]  COND FALSE  !(choice == 5)
[L1967]  COND FALSE  !(choice == 4)
[L1973]  COND TRUE   choice == 3
[L1974]              gas := gas - 21000;
[L1975]  COND TRUE   gas >= 0
[L1976]              assume tokens_s383 >= 0 && tokens_s383 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1977]              assume msgvalue_MSG == 0;
[L1978]  CALL        call success_s383 := transfer~address~uint256_Litecoin_SV(this, msgsender_MSG, msgvalue_MSG, to_s383, tokens_s383);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != to_s383) && msgsender_MSG != to_s383) && tokens_s383 <= balances_Litecoin_SV[this][msgsender_MSG]) && balances_Litecoin_SV[this][to_s383] + tokens_s383 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && tokens_s383 >= 0) && tokens_s383 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_Litecoin_SV[this][to_s383] >= 0) && balances_Litecoin_SV[this][to_s383] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_Litecoin_SV[this][msgsender_MSG] >= 0) && balances_Litecoin_SV[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_Litecoin_SV0 := true;
[L3]                 call_transfer_Litecoin_SV0 := false;
[L3]                 revert := revert_hold;
[L312]               havoc __exception;
[L313]               revert := false;
[L314]   COND TRUE   __exception
[L315]               __tmp__Balance := Balance;
[L316]               __tmp__DType := DType;
[L317]               __tmp__Alloc := Alloc;
[L318]               __tmp__balance_ADDR := balance_ADDR;
[L319]               __tmp__M_Ref_int := M_Ref_int;
[L320]               __tmp__sum_balances0 := sum_balances0;
[L321]               __tmp__alloc_allowed_Litecoin_SV_lvl0 := alloc_allowed_Litecoin_SV_lvl0;
[L322]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L323]               __tmp__sum_allowed1 := sum_allowed1;
[L324]               __tmp__Length := Length;
[L325]               __tmp__now := now;
[L326]               __tmp__owner_Owned := owner_Owned;
[L327]               __tmp__newOwner_Owned := newOwner_Owned;
[L328]               __tmp__businessName_Litecoin_SV := businessName_Litecoin_SV;
[L329]               __tmp__businessCountry_Litecoin_SV := businessCountry_Litecoin_SV;
[L330]               __tmp__symbol_Litecoin_SV := symbol_Litecoin_SV;
[L331]               __tmp__name_Litecoin_SV := name_Litecoin_SV;
[L332]               __tmp__decimals_Litecoin_SV := decimals_Litecoin_SV;
[L333]               __tmp___totalSupply_Litecoin_SV := _totalSupply_Litecoin_SV;
[L334]               __tmp__balances_Litecoin_SV := balances_Litecoin_SV;
[L335]               __tmp__allowed_Litecoin_SV := allowed_Litecoin_SV;
[L336]   CALL        call success_s383 := transfer~address~uint256_Litecoin_SV__fail(this, msgsender_MSG, msgvalue_MSG, to_s383, tokens_s383);
[L889]   COND TRUE   __tmp__DType[this] == Litecoin_SV
[L890]   CALL        call __var_2 := safeSub~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balances_Litecoin_SV[this][msgsender_MSG], tokens_s383);
[L841]   COND TRUE   !(b_s45 <= a_s45)
[L842]               revert := true;
[L890]   RET         call __var_2 := safeSub~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balances_Litecoin_SV[this][msgsender_MSG], tokens_s383);
[L891]   COND TRUE   revert
[L336]   RET         call success_s383 := transfer~address~uint256_Litecoin_SV__fail(this, msgsender_MSG, msgvalue_MSG, to_s383, tokens_s383);
[L337]               assume revert || gas < 0;
[L1978]  RET         call success_s383 := transfer~address~uint256_Litecoin_SV(this, msgsender_MSG, msgvalue_MSG, to_s383, tokens_s383);
[L2007]  RET         call CorralChoice_Litecoin_SV(this);

Loop:
[L2007]        assume true;

[2020-11-24 15:04:14,845 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 15:04:14,845 INFO  L82        PathProgramCache]: Analyzing trace with hash -1574165677, now seen corresponding path program 1 times
[2020-11-24 15:04:14,846 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 15:04:14,856 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 15:04:14,894 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 15:04:14,895 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 15:04:14,895 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [7] imperfect sequences [] total 7
[2020-11-24 15:04:14,895 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 15:04:14,896 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 7 interpolants.
[2020-11-24 15:04:14,896 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=11, Invalid=31, Unknown=0, NotChecked=0, Total=42
[2020-11-24 15:04:14,896 INFO  L87              Difference]: Start difference. First operand 199 states and 204 transitions. cyclomatic complexity: 6 Second operand 7 states.
[2020-11-24 15:04:14,982 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 15:04:14,982 INFO  L93              Difference]: Finished difference Result 214 states and 218 transitions.
[2020-11-24 15:04:14,983 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 8 states. 
[2020-11-24 15:04:14,983 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 214 states and 218 transitions.
[2020-11-24 15:04:14,984 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 2
[2020-11-24 15:04:14,986 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 214 states to 207 states and 211 transitions.
[2020-11-24 15:04:14,986 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 207
[2020-11-24 15:04:14,986 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 207
[2020-11-24 15:04:14,986 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 207 states and 211 transitions.
[2020-11-24 15:04:14,987 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 15:04:14,987 INFO  L728         BuchiCegarLoop]: Abstraction has 207 states and 211 transitions.
[2020-11-24 15:04:14,987 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 207 states and 211 transitions.
[2020-11-24 15:04:14,992 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 207 to 194.
[2020-11-24 15:04:14,992 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 194 states.
[2020-11-24 15:04:14,993 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 194 states to 194 states and 198 transitions.
[2020-11-24 15:04:14,993 INFO  L751         BuchiCegarLoop]: Abstraction has 194 states and 198 transitions.
[2020-11-24 15:04:14,993 INFO  L631         BuchiCegarLoop]: Abstraction has 194 states and 198 transitions.
[2020-11-24 15:04:14,993 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-24 15:04:14,993 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 194 states and 198 transitions.
[2020-11-24 15:04:14,994 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 15:04:14,994 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 15:04:14,995 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 15:04:14,996 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 15:04:14,996 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L3]                 success_transfer_Litecoin_SV0 := false;
[L3]                 call_transfer_Litecoin_SV0 := false;
[L3]     CALL        call main();
[L3]                 havoc p1;
[L2002]              assume null == 0;
[L2003]  CALL        call this := FreshRefGenerator__success();
[L815]               havoc newRef;
[L816]               assume Alloc[newRef] == false;
[L817]               Alloc[newRef] := true;
[L818]               assume newRef != null;
[L2003]  RET         call this := FreshRefGenerator__success();
[L2004]              assume now >= 0;
[L2005]              assume DType[this] == Litecoin_SV;
[L2006]              assume !revert && gas >= 0;
[L2007]  CALL        call CorralChoice_Litecoin_SV(this);
[L1885]              havoc msgsender_MSG;
[L1886]              havoc msgvalue_MSG;
[L1887]              havoc choice;
[L1888]              havoc a_s23;
[L1889]              havoc b_s23;
[L1890]              havoc c_s23;
[L1891]              havoc a_s45;
[L1892]              havoc b_s45;
[L1893]              havoc c_s45;
[L1894]              havoc a_s73;
[L1895]              havoc b_s73;
[L1896]              havoc c_s73;
[L1897]              havoc a_s95;
[L1898]              havoc b_s95;
[L1899]              havoc c_s95;
[L1900]              havoc __ret_0_totalSupply;
[L1901]              havoc tokenOwner_s340;
[L1902]              havoc balance_s340;
[L1903]              havoc tokenOwner_s486;
[L1904]              havoc spender_s486;
[L1905]              havoc remaining_s486;
[L1906]              havoc to_s383;
[L1907]              havoc tokens_s383;
[L1908]              havoc success_s383;
[L1909]              havoc spender_s411;
[L1910]              havoc tokens_s411;
[L1911]              havoc success_s411;
[L1912]              havoc from_s470;
[L1913]              havoc to_s470;
[L1914]              havoc tokens_s470;
[L1915]              havoc success_s470;
[L1916]              havoc __ret_0_owner;
[L1917]              havoc __ret_0_newOwner;
[L1918]              havoc _newOwner_s217;
[L1919]              havoc __ret_0_businessName;
[L1920]              havoc __ret_0_businessCountry;
[L1921]              havoc __ret_0_symbol;
[L1922]              havoc __ret_0_name;
[L1923]              havoc __ret_0_decimals;
[L1924]              havoc __ret_0__totalSupply;
[L1925]              havoc spender_s529;
[L1926]              havoc tokens_s529;
[L1927]              havoc data_s529;
[L1928]              havoc success_s529;
[L1929]              havoc tokenAddress_s556;
[L1930]              havoc tokens_s556;
[L1931]              havoc success_s556;
[L1932]              havoc tmpNow;
[L1933]              havoc gas;
[L1934]              assume gas > 4000000 && gas <= 8000000;
[L1935]              tmpNow := now;
[L1936]              havoc now;
[L1937]              assume now > tmpNow;
[L1938]              assume msgsender_MSG != null;
[L1939]  COND FALSE  !(choice == 8)
[L1947]  COND FALSE  !(choice == 7)
[L1955]  COND FALSE  !(choice == 6)
[L1961]  COND FALSE  !(choice == 5)
[L1967]  COND FALSE  !(choice == 4)
[L1973]  COND TRUE   choice == 3
[L1974]              gas := gas - 21000;
[L1975]  COND TRUE   gas >= 0
[L1976]              assume tokens_s383 >= 0 && tokens_s383 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1977]              assume msgvalue_MSG == 0;
[L1978]  CALL        call success_s383 := transfer~address~uint256_Litecoin_SV(this, msgsender_MSG, msgvalue_MSG, to_s383, tokens_s383);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != to_s383) && msgsender_MSG != to_s383) && tokens_s383 <= balances_Litecoin_SV[this][msgsender_MSG]) && balances_Litecoin_SV[this][to_s383] + tokens_s383 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && tokens_s383 >= 0) && tokens_s383 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_Litecoin_SV[this][to_s383] >= 0) && balances_Litecoin_SV[this][to_s383] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_Litecoin_SV[this][msgsender_MSG] >= 0) && balances_Litecoin_SV[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_Litecoin_SV0 := true;
[L3]                 call_transfer_Litecoin_SV0 := false;
[L3]                 revert := revert_hold;
[L312]               havoc __exception;
[L313]               revert := false;
[L314]   COND TRUE   __exception
[L315]               __tmp__Balance := Balance;
[L316]               __tmp__DType := DType;
[L317]               __tmp__Alloc := Alloc;
[L318]               __tmp__balance_ADDR := balance_ADDR;
[L319]               __tmp__M_Ref_int := M_Ref_int;
[L320]               __tmp__sum_balances0 := sum_balances0;
[L321]               __tmp__alloc_allowed_Litecoin_SV_lvl0 := alloc_allowed_Litecoin_SV_lvl0;
[L322]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L323]               __tmp__sum_allowed1 := sum_allowed1;
[L324]               __tmp__Length := Length;
[L325]               __tmp__now := now;
[L326]               __tmp__owner_Owned := owner_Owned;
[L327]               __tmp__newOwner_Owned := newOwner_Owned;
[L328]               __tmp__businessName_Litecoin_SV := businessName_Litecoin_SV;
[L329]               __tmp__businessCountry_Litecoin_SV := businessCountry_Litecoin_SV;
[L330]               __tmp__symbol_Litecoin_SV := symbol_Litecoin_SV;
[L331]               __tmp__name_Litecoin_SV := name_Litecoin_SV;
[L332]               __tmp__decimals_Litecoin_SV := decimals_Litecoin_SV;
[L333]               __tmp___totalSupply_Litecoin_SV := _totalSupply_Litecoin_SV;
[L334]               __tmp__balances_Litecoin_SV := balances_Litecoin_SV;
[L335]               __tmp__allowed_Litecoin_SV := allowed_Litecoin_SV;
[L336]   CALL        call success_s383 := transfer~address~uint256_Litecoin_SV__fail(this, msgsender_MSG, msgvalue_MSG, to_s383, tokens_s383);
[L889]   COND TRUE   __tmp__DType[this] == Litecoin_SV
[L890]   CALL        call __var_2 := safeSub~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balances_Litecoin_SV[this][msgsender_MSG], tokens_s383);
[L841]   COND FALSE  !(!(b_s45 <= a_s45))
[L845]               c_s45 := (a_s45 - b_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L890]   RET         call __var_2 := safeSub~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balances_Litecoin_SV[this][msgsender_MSG], tokens_s383);
[L891]   COND TRUE   revert
[L336]   RET         call success_s383 := transfer~address~uint256_Litecoin_SV__fail(this, msgsender_MSG, msgvalue_MSG, to_s383, tokens_s383);
[L337]               assume revert || gas < 0;
[L1978]  RET         call success_s383 := transfer~address~uint256_Litecoin_SV(this, msgsender_MSG, msgvalue_MSG, to_s383, tokens_s383);
[L2007]  RET         call CorralChoice_Litecoin_SV(this);

Loop:
[L2007]        assume true;

[2020-11-24 15:04:14,998 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 15:04:14,998 INFO  L82        PathProgramCache]: Analyzing trace with hash 1503152327, now seen corresponding path program 1 times
[2020-11-24 15:04:14,999 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 15:04:15,008 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 15:04:15,030 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 15:04:15,031 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 15:04:15,031 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [5] imperfect sequences [] total 5
[2020-11-24 15:04:15,031 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 15:04:15,031 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 5 interpolants.
[2020-11-24 15:04:15,031 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=9, Invalid=11, Unknown=0, NotChecked=0, Total=20
[2020-11-24 15:04:15,032 INFO  L87              Difference]: Start difference. First operand 194 states and 198 transitions. cyclomatic complexity: 5 Second operand 5 states.
[2020-11-24 15:04:15,048 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 15:04:15,049 INFO  L93              Difference]: Finished difference Result 205 states and 207 transitions.
[2020-11-24 15:04:15,049 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-24 15:04:15,049 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 205 states and 207 transitions.
[2020-11-24 15:04:15,050 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 2
[2020-11-24 15:04:15,051 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 205 states to 205 states and 207 transitions.
[2020-11-24 15:04:15,051 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 205
[2020-11-24 15:04:15,052 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 205
[2020-11-24 15:04:15,052 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 205 states and 207 transitions.
[2020-11-24 15:04:15,052 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 15:04:15,052 INFO  L728         BuchiCegarLoop]: Abstraction has 205 states and 207 transitions.
[2020-11-24 15:04:15,052 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 205 states and 207 transitions.
[2020-11-24 15:04:15,055 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 205 to 194.
[2020-11-24 15:04:15,055 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 194 states.
[2020-11-24 15:04:15,055 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 194 states to 194 states and 196 transitions.
[2020-11-24 15:04:15,055 INFO  L751         BuchiCegarLoop]: Abstraction has 194 states and 196 transitions.
[2020-11-24 15:04:15,055 INFO  L631         BuchiCegarLoop]: Abstraction has 194 states and 196 transitions.
[2020-11-24 15:04:15,056 INFO  L445         BuchiCegarLoop]: ======== Iteration 5============
[2020-11-24 15:04:15,056 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 194 states and 196 transitions.
[2020-11-24 15:04:15,056 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 15:04:15,057 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 15:04:15,057 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 15:04:15,058 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 15:04:15,058 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L3]                 success_transfer_Litecoin_SV0 := false;
[L3]                 call_transfer_Litecoin_SV0 := false;
[L3]     CALL        call main();
[L3]                 havoc p1;
[L2002]              assume null == 0;
[L2003]  CALL        call this := FreshRefGenerator__success();
[L815]               havoc newRef;
[L816]               assume Alloc[newRef] == false;
[L817]               Alloc[newRef] := true;
[L818]               assume newRef != null;
[L2003]  RET         call this := FreshRefGenerator__success();
[L2004]              assume now >= 0;
[L2005]              assume DType[this] == Litecoin_SV;
[L2006]              assume !revert && gas >= 0;
[L2007]  CALL        call CorralChoice_Litecoin_SV(this);
[L1885]              havoc msgsender_MSG;
[L1886]              havoc msgvalue_MSG;
[L1887]              havoc choice;
[L1888]              havoc a_s23;
[L1889]              havoc b_s23;
[L1890]              havoc c_s23;
[L1891]              havoc a_s45;
[L1892]              havoc b_s45;
[L1893]              havoc c_s45;
[L1894]              havoc a_s73;
[L1895]              havoc b_s73;
[L1896]              havoc c_s73;
[L1897]              havoc a_s95;
[L1898]              havoc b_s95;
[L1899]              havoc c_s95;
[L1900]              havoc __ret_0_totalSupply;
[L1901]              havoc tokenOwner_s340;
[L1902]              havoc balance_s340;
[L1903]              havoc tokenOwner_s486;
[L1904]              havoc spender_s486;
[L1905]              havoc remaining_s486;
[L1906]              havoc to_s383;
[L1907]              havoc tokens_s383;
[L1908]              havoc success_s383;
[L1909]              havoc spender_s411;
[L1910]              havoc tokens_s411;
[L1911]              havoc success_s411;
[L1912]              havoc from_s470;
[L1913]              havoc to_s470;
[L1914]              havoc tokens_s470;
[L1915]              havoc success_s470;
[L1916]              havoc __ret_0_owner;
[L1917]              havoc __ret_0_newOwner;
[L1918]              havoc _newOwner_s217;
[L1919]              havoc __ret_0_businessName;
[L1920]              havoc __ret_0_businessCountry;
[L1921]              havoc __ret_0_symbol;
[L1922]              havoc __ret_0_name;
[L1923]              havoc __ret_0_decimals;
[L1924]              havoc __ret_0__totalSupply;
[L1925]              havoc spender_s529;
[L1926]              havoc tokens_s529;
[L1927]              havoc data_s529;
[L1928]              havoc success_s529;
[L1929]              havoc tokenAddress_s556;
[L1930]              havoc tokens_s556;
[L1931]              havoc success_s556;
[L1932]              havoc tmpNow;
[L1933]              havoc gas;
[L1934]              assume gas > 4000000 && gas <= 8000000;
[L1935]              tmpNow := now;
[L1936]              havoc now;
[L1937]              assume now > tmpNow;
[L1938]              assume msgsender_MSG != null;
[L1939]  COND FALSE  !(choice == 8)
[L1947]  COND FALSE  !(choice == 7)
[L1955]  COND FALSE  !(choice == 6)
[L1961]  COND FALSE  !(choice == 5)
[L1967]  COND FALSE  !(choice == 4)
[L1973]  COND TRUE   choice == 3
[L1974]              gas := gas - 21000;
[L1975]  COND TRUE   gas >= 0
[L1976]              assume tokens_s383 >= 0 && tokens_s383 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1977]              assume msgvalue_MSG == 0;
[L1978]  CALL        call success_s383 := transfer~address~uint256_Litecoin_SV(this, msgsender_MSG, msgvalue_MSG, to_s383, tokens_s383);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != to_s383) && msgsender_MSG != to_s383) && tokens_s383 <= balances_Litecoin_SV[this][msgsender_MSG]) && balances_Litecoin_SV[this][to_s383] + tokens_s383 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && tokens_s383 >= 0) && tokens_s383 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_Litecoin_SV[this][to_s383] >= 0) && balances_Litecoin_SV[this][to_s383] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_Litecoin_SV[this][msgsender_MSG] >= 0) && balances_Litecoin_SV[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_Litecoin_SV0 := true;
[L3]                 call_transfer_Litecoin_SV0 := false;
[L3]                 revert := revert_hold;
[L312]               havoc __exception;
[L313]               revert := false;
[L314]   COND FALSE  !(__exception)
[L339]   CALL        call success_s383 := transfer~address~uint256_Litecoin_SV__success(this, msgsender_MSG, msgvalue_MSG, to_s383, tokens_s383);
[L919]   COND TRUE   DType[this] == Litecoin_SV
[L920]   CALL        call __var_2 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_Litecoin_SV[this][msgsender_MSG], tokens_s383);
[L850]   COND FALSE  !(!(b_s45 <= a_s45))
[L854]               c_s45 := (a_s45 - b_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L920]   RET         call __var_2 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_Litecoin_SV[this][msgsender_MSG], tokens_s383);
[L921]   COND FALSE  !(revert)
[L927]               sum_balances0[this] := sum_balances0[this] - balances_Litecoin_SV[this][msgsender_MSG];
[L928]               balances_Litecoin_SV[this][msgsender_MSG] := __var_2;
[L929]               sum_balances0[this] := sum_balances0[this] + balances_Litecoin_SV[this][msgsender_MSG];
[L930]   COND TRUE   DType[this] == Litecoin_SV
[L931]   CALL        call __var_3 := safeAdd~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_Litecoin_SV[this][to_s383], tokens_s383);
[L832]               c_s23 := (a_s23 + b_s23) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L833]   COND FALSE  !(!(c_s23 >= a_s23))
[L931]   RET         call __var_3 := safeAdd~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_Litecoin_SV[this][to_s383], tokens_s383);
[L932]   COND FALSE  !(revert)
[L938]               sum_balances0[this] := sum_balances0[this] - balances_Litecoin_SV[this][to_s383];
[L939]               balances_Litecoin_SV[this][to_s383] := __var_3;
[L940]               sum_balances0[this] := sum_balances0[this] + balances_Litecoin_SV[this][to_s383];
[L941]               assert { :EventEmitted "Transfer_Litecoin_SV" } true;
[L942]               success_s383 := true;
[L339]   RET         call success_s383 := transfer~address~uint256_Litecoin_SV__success(this, msgsender_MSG, msgvalue_MSG, to_s383, tokens_s383);
[L340]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !((((((((((((success_s383 == true && balances_Litecoin_SV[this][msgsender_MSG] == old(balances_Litecoin_SV[this][msgsender_MSG]) - tokens_s383) && balances_Litecoin_SV[this][to_s383] == old(balances_Litecoin_SV[this][to_s383]) + tokens_s383) && _totalSupply_Litecoin_SV[this] == old(_totalSupply_Litecoin_SV[this])) && allowed_Litecoin_SV[this] == old(allowed_Litecoin_SV[this])) && balances_Litecoin_SV[this][p1] == old(balances_Litecoin_SV[this][p1])) && businessName_Litecoin_SV[this] == old(businessName_Litecoin_SV[this])) && businessCountry_Litecoin_SV[this] == old(businessCountry_Litecoin_SV[this])) && symbol_Litecoin_SV[this] == old(symbol_Litecoin_SV[this])) && name_Litecoin_SV[this] == old(name_Litecoin_SV[this])) && decimals_Litecoin_SV[this] == old(decimals_Litecoin_SV[this])) && owner_Owned[this] == old(owner_Owned[this])) && newOwner_Owned[this] == old(newOwner_Owned[this]));
[L3]                 revert := revert_hold;
[L1978]  RET         call success_s383 := transfer~address~uint256_Litecoin_SV(this, msgsender_MSG, msgvalue_MSG, to_s383, tokens_s383);
[L2007]  RET         call CorralChoice_Litecoin_SV(this);

Loop:
[L2007]        assume true;

[2020-11-24 15:04:15,060 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 15:04:15,060 INFO  L82        PathProgramCache]: Analyzing trace with hash -2082182595, now seen corresponding path program 1 times
[2020-11-24 15:04:15,061 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 15:04:15,104 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 15:04:15,436 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 15:04:15,436 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 15:04:15,439 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [15] imperfect sequences [] total 15
[2020-11-24 15:04:15,439 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 15:04:15,439 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 15 interpolants.
[2020-11-24 15:04:15,439 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=34, Invalid=176, Unknown=0, NotChecked=0, Total=210
[2020-11-24 15:04:15,440 INFO  L87              Difference]: Start difference. First operand 194 states and 196 transitions. cyclomatic complexity: 3 Second operand 15 states.
[2020-11-24 15:04:15,796 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 15:04:15,796 INFO  L93              Difference]: Finished difference Result 193 states and 194 transitions.
[2020-11-24 15:04:15,796 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 14 states. 
[2020-11-24 15:04:15,796 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 193 states and 194 transitions.
[2020-11-24 15:04:15,797 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 15:04:15,798 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 193 states to 158 states and 159 transitions.
[2020-11-24 15:04:15,798 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 158
[2020-11-24 15:04:15,798 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 158
[2020-11-24 15:04:15,798 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 158 states and 159 transitions.
[2020-11-24 15:04:15,798 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 15:04:15,799 INFO  L728         BuchiCegarLoop]: Abstraction has 158 states and 159 transitions.
[2020-11-24 15:04:15,799 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 158 states and 159 transitions.
[2020-11-24 15:04:15,800 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 158 to 158.
[2020-11-24 15:04:15,800 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 158 states.
[2020-11-24 15:04:15,800 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 158 states to 158 states and 159 transitions.
[2020-11-24 15:04:15,801 INFO  L751         BuchiCegarLoop]: Abstraction has 158 states and 159 transitions.
[2020-11-24 15:04:15,801 INFO  L631         BuchiCegarLoop]: Abstraction has 158 states and 159 transitions.
[2020-11-24 15:04:15,801 INFO  L445         BuchiCegarLoop]: ======== Iteration 6============
[2020-11-24 15:04:15,801 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 158 states and 159 transitions.
[2020-11-24 15:04:15,801 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 15:04:15,802 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 15:04:15,802 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 15:04:15,803 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 15:04:15,803 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L3]                 success_transfer_Litecoin_SV0 := false;
[L3]                 call_transfer_Litecoin_SV0 := false;
[L3]     CALL        call main();
[L3]                 havoc p1;
[L2002]              assume null == 0;
[L2003]  CALL        call this := FreshRefGenerator__success();
[L815]               havoc newRef;
[L816]               assume Alloc[newRef] == false;
[L817]               Alloc[newRef] := true;
[L818]               assume newRef != null;
[L2003]  RET         call this := FreshRefGenerator__success();
[L2004]              assume now >= 0;
[L2005]              assume DType[this] == Litecoin_SV;
[L2006]              assume !revert && gas >= 0;
[L2007]  CALL        call CorralChoice_Litecoin_SV(this);
[L1885]              havoc msgsender_MSG;
[L1886]              havoc msgvalue_MSG;
[L1887]              havoc choice;
[L1888]              havoc a_s23;
[L1889]              havoc b_s23;
[L1890]              havoc c_s23;
[L1891]              havoc a_s45;
[L1892]              havoc b_s45;
[L1893]              havoc c_s45;
[L1894]              havoc a_s73;
[L1895]              havoc b_s73;
[L1896]              havoc c_s73;
[L1897]              havoc a_s95;
[L1898]              havoc b_s95;
[L1899]              havoc c_s95;
[L1900]              havoc __ret_0_totalSupply;
[L1901]              havoc tokenOwner_s340;
[L1902]              havoc balance_s340;
[L1903]              havoc tokenOwner_s486;
[L1904]              havoc spender_s486;
[L1905]              havoc remaining_s486;
[L1906]              havoc to_s383;
[L1907]              havoc tokens_s383;
[L1908]              havoc success_s383;
[L1909]              havoc spender_s411;
[L1910]              havoc tokens_s411;
[L1911]              havoc success_s411;
[L1912]              havoc from_s470;
[L1913]              havoc to_s470;
[L1914]              havoc tokens_s470;
[L1915]              havoc success_s470;
[L1916]              havoc __ret_0_owner;
[L1917]              havoc __ret_0_newOwner;
[L1918]              havoc _newOwner_s217;
[L1919]              havoc __ret_0_businessName;
[L1920]              havoc __ret_0_businessCountry;
[L1921]              havoc __ret_0_symbol;
[L1922]              havoc __ret_0_name;
[L1923]              havoc __ret_0_decimals;
[L1924]              havoc __ret_0__totalSupply;
[L1925]              havoc spender_s529;
[L1926]              havoc tokens_s529;
[L1927]              havoc data_s529;
[L1928]              havoc success_s529;
[L1929]              havoc tokenAddress_s556;
[L1930]              havoc tokens_s556;
[L1931]              havoc success_s556;
[L1932]              havoc tmpNow;
[L1933]              havoc gas;
[L1934]              assume gas > 4000000 && gas <= 8000000;
[L1935]              tmpNow := now;
[L1936]              havoc now;
[L1937]              assume now > tmpNow;
[L1938]              assume msgsender_MSG != null;
[L1939]  COND FALSE  !(choice == 8)
[L1947]  COND FALSE  !(choice == 7)
[L1955]  COND FALSE  !(choice == 6)
[L1961]  COND FALSE  !(choice == 5)
[L1967]  COND FALSE  !(choice == 4)
[L1973]  COND TRUE   choice == 3
[L1974]              gas := gas - 21000;
[L1975]  COND TRUE   gas >= 0
[L1976]              assume tokens_s383 >= 0 && tokens_s383 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1977]              assume msgvalue_MSG == 0;
[L1978]  CALL        call success_s383 := transfer~address~uint256_Litecoin_SV(this, msgsender_MSG, msgvalue_MSG, to_s383, tokens_s383);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != to_s383) && msgsender_MSG != to_s383) && tokens_s383 <= balances_Litecoin_SV[this][msgsender_MSG]) && balances_Litecoin_SV[this][to_s383] + tokens_s383 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && tokens_s383 >= 0) && tokens_s383 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_Litecoin_SV[this][to_s383] >= 0) && balances_Litecoin_SV[this][to_s383] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_Litecoin_SV[this][msgsender_MSG] >= 0) && balances_Litecoin_SV[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_Litecoin_SV0 := true;
[L3]                 call_transfer_Litecoin_SV0 := false;
[L3]                 revert := revert_hold;
[L312]               havoc __exception;
[L313]               revert := false;
[L314]   COND TRUE   __exception
[L315]               __tmp__Balance := Balance;
[L316]               __tmp__DType := DType;
[L317]               __tmp__Alloc := Alloc;
[L318]               __tmp__balance_ADDR := balance_ADDR;
[L319]               __tmp__M_Ref_int := M_Ref_int;
[L320]               __tmp__sum_balances0 := sum_balances0;
[L321]               __tmp__alloc_allowed_Litecoin_SV_lvl0 := alloc_allowed_Litecoin_SV_lvl0;
[L322]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L323]               __tmp__sum_allowed1 := sum_allowed1;
[L324]               __tmp__Length := Length;
[L325]               __tmp__now := now;
[L326]               __tmp__owner_Owned := owner_Owned;
[L327]               __tmp__newOwner_Owned := newOwner_Owned;
[L328]               __tmp__businessName_Litecoin_SV := businessName_Litecoin_SV;
[L329]               __tmp__businessCountry_Litecoin_SV := businessCountry_Litecoin_SV;
[L330]               __tmp__symbol_Litecoin_SV := symbol_Litecoin_SV;
[L331]               __tmp__name_Litecoin_SV := name_Litecoin_SV;
[L332]               __tmp__decimals_Litecoin_SV := decimals_Litecoin_SV;
[L333]               __tmp___totalSupply_Litecoin_SV := _totalSupply_Litecoin_SV;
[L334]               __tmp__balances_Litecoin_SV := balances_Litecoin_SV;
[L335]               __tmp__allowed_Litecoin_SV := allowed_Litecoin_SV;
[L336]   CALL        call success_s383 := transfer~address~uint256_Litecoin_SV__fail(this, msgsender_MSG, msgvalue_MSG, to_s383, tokens_s383);
[L889]   COND TRUE   __tmp__DType[this] == Litecoin_SV
[L890]   CALL        call __var_2 := safeSub~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balances_Litecoin_SV[this][msgsender_MSG], tokens_s383);
[L841]   COND FALSE  !(!(b_s45 <= a_s45))
[L845]               c_s45 := (a_s45 - b_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L890]   RET         call __var_2 := safeSub~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balances_Litecoin_SV[this][msgsender_MSG], tokens_s383);
[L891]   COND FALSE  !(revert)
[L897]               __tmp__sum_balances0[this] := __tmp__sum_balances0[this] - __tmp__balances_Litecoin_SV[this][msgsender_MSG];
[L898]               __tmp__balances_Litecoin_SV[this][msgsender_MSG] := __var_2;
[L899]               __tmp__sum_balances0[this] := __tmp__sum_balances0[this] + __tmp__balances_Litecoin_SV[this][msgsender_MSG];
[L900]   COND TRUE   __tmp__DType[this] == Litecoin_SV
[L901]   CALL        call __var_3 := safeAdd~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balances_Litecoin_SV[this][to_s383], tokens_s383);
[L823]               c_s23 := (a_s23 + b_s23) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L824]   COND TRUE   !(c_s23 >= a_s23)
[L825]               revert := true;
[L901]   RET         call __var_3 := safeAdd~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balances_Litecoin_SV[this][to_s383], tokens_s383);
[L902]   COND TRUE   revert
[L336]   RET         call success_s383 := transfer~address~uint256_Litecoin_SV__fail(this, msgsender_MSG, msgvalue_MSG, to_s383, tokens_s383);
[L337]               assume revert || gas < 0;
[L1978]  RET         call success_s383 := transfer~address~uint256_Litecoin_SV(this, msgsender_MSG, msgvalue_MSG, to_s383, tokens_s383);
[L2007]  RET         call CorralChoice_Litecoin_SV(this);

Loop:
[L2007]        assume true;

[2020-11-24 15:04:15,805 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 15:04:15,805 INFO  L82        PathProgramCache]: Analyzing trace with hash 1182234867, now seen corresponding path program 1 times
[2020-11-24 15:04:15,805 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 15:04:15,813 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 15:04:15,868 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 15:04:15,868 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 15:04:15,868 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [9] imperfect sequences [] total 9
[2020-11-24 15:04:15,869 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 15:04:15,869 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 9 interpolants.
[2020-11-24 15:04:15,869 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=16, Invalid=56, Unknown=0, NotChecked=0, Total=72
[2020-11-24 15:04:15,869 INFO  L87              Difference]: Start difference. First operand 158 states and 159 transitions. cyclomatic complexity: 2 Second operand 9 states.
[2020-11-24 15:04:15,912 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 15:04:15,912 INFO  L93              Difference]: Finished difference Result 160 states and 160 transitions.
[2020-11-24 15:04:15,912 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 10 states. 
[2020-11-24 15:04:15,912 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 160 states and 160 transitions.
[2020-11-24 15:04:15,913 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 15:04:15,913 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 160 states to 153 states and 153 transitions.
[2020-11-24 15:04:15,913 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 153
[2020-11-24 15:04:15,914 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 153
[2020-11-24 15:04:15,914 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 153 states and 153 transitions.
[2020-11-24 15:04:15,914 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 15:04:15,914 INFO  L728         BuchiCegarLoop]: Abstraction has 153 states and 153 transitions.
[2020-11-24 15:04:15,914 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 153 states and 153 transitions.
[2020-11-24 15:04:15,915 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 153 to 153.
[2020-11-24 15:04:15,915 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 153 states.
[2020-11-24 15:04:15,915 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 153 states to 153 states and 153 transitions.
[2020-11-24 15:04:15,915 INFO  L751         BuchiCegarLoop]: Abstraction has 153 states and 153 transitions.
[2020-11-24 15:04:15,915 INFO  L631         BuchiCegarLoop]: Abstraction has 153 states and 153 transitions.
[2020-11-24 15:04:15,915 INFO  L445         BuchiCegarLoop]: ======== Iteration 7============
[2020-11-24 15:04:15,915 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 153 states and 153 transitions.
[2020-11-24 15:04:15,916 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 15:04:15,916 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 15:04:15,916 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 15:04:15,917 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 15:04:15,917 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L3]                 success_transfer_Litecoin_SV0 := false;
[L3]                 call_transfer_Litecoin_SV0 := false;
[L3]     CALL        call main();
[L3]                 havoc p1;
[L2002]              assume null == 0;
[L2003]  CALL        call this := FreshRefGenerator__success();
[L815]               havoc newRef;
[L816]               assume Alloc[newRef] == false;
[L817]               Alloc[newRef] := true;
[L818]               assume newRef != null;
[L2003]  RET         call this := FreshRefGenerator__success();
[L2004]              assume now >= 0;
[L2005]              assume DType[this] == Litecoin_SV;
[L2006]              assume !revert && gas >= 0;
[L2007]  CALL        call CorralChoice_Litecoin_SV(this);
[L1885]              havoc msgsender_MSG;
[L1886]              havoc msgvalue_MSG;
[L1887]              havoc choice;
[L1888]              havoc a_s23;
[L1889]              havoc b_s23;
[L1890]              havoc c_s23;
[L1891]              havoc a_s45;
[L1892]              havoc b_s45;
[L1893]              havoc c_s45;
[L1894]              havoc a_s73;
[L1895]              havoc b_s73;
[L1896]              havoc c_s73;
[L1897]              havoc a_s95;
[L1898]              havoc b_s95;
[L1899]              havoc c_s95;
[L1900]              havoc __ret_0_totalSupply;
[L1901]              havoc tokenOwner_s340;
[L1902]              havoc balance_s340;
[L1903]              havoc tokenOwner_s486;
[L1904]              havoc spender_s486;
[L1905]              havoc remaining_s486;
[L1906]              havoc to_s383;
[L1907]              havoc tokens_s383;
[L1908]              havoc success_s383;
[L1909]              havoc spender_s411;
[L1910]              havoc tokens_s411;
[L1911]              havoc success_s411;
[L1912]              havoc from_s470;
[L1913]              havoc to_s470;
[L1914]              havoc tokens_s470;
[L1915]              havoc success_s470;
[L1916]              havoc __ret_0_owner;
[L1917]              havoc __ret_0_newOwner;
[L1918]              havoc _newOwner_s217;
[L1919]              havoc __ret_0_businessName;
[L1920]              havoc __ret_0_businessCountry;
[L1921]              havoc __ret_0_symbol;
[L1922]              havoc __ret_0_name;
[L1923]              havoc __ret_0_decimals;
[L1924]              havoc __ret_0__totalSupply;
[L1925]              havoc spender_s529;
[L1926]              havoc tokens_s529;
[L1927]              havoc data_s529;
[L1928]              havoc success_s529;
[L1929]              havoc tokenAddress_s556;
[L1930]              havoc tokens_s556;
[L1931]              havoc success_s556;
[L1932]              havoc tmpNow;
[L1933]              havoc gas;
[L1934]              assume gas > 4000000 && gas <= 8000000;
[L1935]              tmpNow := now;
[L1936]              havoc now;
[L1937]              assume now > tmpNow;
[L1938]              assume msgsender_MSG != null;
[L1939]  COND FALSE  !(choice == 8)
[L1947]  COND FALSE  !(choice == 7)
[L1955]  COND FALSE  !(choice == 6)
[L1961]  COND FALSE  !(choice == 5)
[L1967]  COND FALSE  !(choice == 4)
[L1973]  COND TRUE   choice == 3
[L1974]              gas := gas - 21000;
[L1975]  COND TRUE   gas >= 0
[L1976]              assume tokens_s383 >= 0 && tokens_s383 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1977]              assume msgvalue_MSG == 0;
[L1978]  CALL        call success_s383 := transfer~address~uint256_Litecoin_SV(this, msgsender_MSG, msgvalue_MSG, to_s383, tokens_s383);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != to_s383) && msgsender_MSG != to_s383) && tokens_s383 <= balances_Litecoin_SV[this][msgsender_MSG]) && balances_Litecoin_SV[this][to_s383] + tokens_s383 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && tokens_s383 >= 0) && tokens_s383 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_Litecoin_SV[this][to_s383] >= 0) && balances_Litecoin_SV[this][to_s383] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_Litecoin_SV[this][msgsender_MSG] >= 0) && balances_Litecoin_SV[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_Litecoin_SV0 := true;
[L3]                 call_transfer_Litecoin_SV0 := false;
[L3]                 revert := revert_hold;
[L312]               havoc __exception;
[L313]               revert := false;
[L314]   COND TRUE   __exception
[L315]               __tmp__Balance := Balance;
[L316]               __tmp__DType := DType;
[L317]               __tmp__Alloc := Alloc;
[L318]               __tmp__balance_ADDR := balance_ADDR;
[L319]               __tmp__M_Ref_int := M_Ref_int;
[L320]               __tmp__sum_balances0 := sum_balances0;
[L321]               __tmp__alloc_allowed_Litecoin_SV_lvl0 := alloc_allowed_Litecoin_SV_lvl0;
[L322]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L323]               __tmp__sum_allowed1 := sum_allowed1;
[L324]               __tmp__Length := Length;
[L325]               __tmp__now := now;
[L326]               __tmp__owner_Owned := owner_Owned;
[L327]               __tmp__newOwner_Owned := newOwner_Owned;
[L328]               __tmp__businessName_Litecoin_SV := businessName_Litecoin_SV;
[L329]               __tmp__businessCountry_Litecoin_SV := businessCountry_Litecoin_SV;
[L330]               __tmp__symbol_Litecoin_SV := symbol_Litecoin_SV;
[L331]               __tmp__name_Litecoin_SV := name_Litecoin_SV;
[L332]               __tmp__decimals_Litecoin_SV := decimals_Litecoin_SV;
[L333]               __tmp___totalSupply_Litecoin_SV := _totalSupply_Litecoin_SV;
[L334]               __tmp__balances_Litecoin_SV := balances_Litecoin_SV;
[L335]               __tmp__allowed_Litecoin_SV := allowed_Litecoin_SV;
[L336]   CALL        call success_s383 := transfer~address~uint256_Litecoin_SV__fail(this, msgsender_MSG, msgvalue_MSG, to_s383, tokens_s383);
[L889]   COND TRUE   __tmp__DType[this] == Litecoin_SV
[L890]   CALL        call __var_2 := safeSub~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balances_Litecoin_SV[this][msgsender_MSG], tokens_s383);
[L841]   COND FALSE  !(!(b_s45 <= a_s45))
[L845]               c_s45 := (a_s45 - b_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L890]   RET         call __var_2 := safeSub~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balances_Litecoin_SV[this][msgsender_MSG], tokens_s383);
[L891]   COND FALSE  !(revert)
[L897]               __tmp__sum_balances0[this] := __tmp__sum_balances0[this] - __tmp__balances_Litecoin_SV[this][msgsender_MSG];
[L898]               __tmp__balances_Litecoin_SV[this][msgsender_MSG] := __var_2;
[L899]               __tmp__sum_balances0[this] := __tmp__sum_balances0[this] + __tmp__balances_Litecoin_SV[this][msgsender_MSG];
[L900]   COND TRUE   __tmp__DType[this] == Litecoin_SV
[L901]   CALL        call __var_3 := safeAdd~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balances_Litecoin_SV[this][to_s383], tokens_s383);
[L823]               c_s23 := (a_s23 + b_s23) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L824]   COND FALSE  !(!(c_s23 >= a_s23))
[L901]   RET         call __var_3 := safeAdd~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balances_Litecoin_SV[this][to_s383], tokens_s383);
[L902]   COND FALSE  !(revert)
[L908]               __tmp__sum_balances0[this] := __tmp__sum_balances0[this] - __tmp__balances_Litecoin_SV[this][to_s383];
[L909]               __tmp__balances_Litecoin_SV[this][to_s383] := __var_3;
[L910]               __tmp__sum_balances0[this] := __tmp__sum_balances0[this] + __tmp__balances_Litecoin_SV[this][to_s383];
[L911]               success_s383 := true;
[L336]   RET         call success_s383 := transfer~address~uint256_Litecoin_SV__fail(this, msgsender_MSG, msgvalue_MSG, to_s383, tokens_s383);
[L337]               assume revert || gas < 0;
[L1978]  RET         call success_s383 := transfer~address~uint256_Litecoin_SV(this, msgsender_MSG, msgvalue_MSG, to_s383, tokens_s383);
[L2007]  RET         call CorralChoice_Litecoin_SV(this);

Loop:
[L2007]        assume true;

[2020-11-24 15:04:15,918 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 15:04:15,918 INFO  L82        PathProgramCache]: Analyzing trace with hash 125095801, now seen corresponding path program 1 times
[2020-11-24 15:04:15,919 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 15:04:15,924 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 15:04:15,938 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 15:04:15,938 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 15:04:15,938 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [5] imperfect sequences [] total 5
[2020-11-24 15:04:15,938 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 15:04:15,938 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 5 interpolants.
[2020-11-24 15:04:15,939 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=7, Invalid=13, Unknown=0, NotChecked=0, Total=20
[2020-11-24 15:04:15,939 INFO  L87              Difference]: Start difference. First operand 153 states and 153 transitions. cyclomatic complexity: 1 Second operand 5 states.
[2020-11-24 15:04:15,945 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 15:04:15,945 INFO  L93              Difference]: Finished difference Result 146 states and 145 transitions.
[2020-11-24 15:04:15,945 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 5 states. 
[2020-11-24 15:04:15,945 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 146 states and 145 transitions.
[2020-11-24 15:04:15,946 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-24 15:04:15,946 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 146 states to 0 states and 0 transitions.
[2020-11-24 15:04:15,946 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 0
[2020-11-24 15:04:15,946 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 0
[2020-11-24 15:04:15,946 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 0 states and 0 transitions.
[2020-11-24 15:04:15,946 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 15:04:15,946 INFO  L728         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-24 15:04:15,946 INFO  L751         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-24 15:04:15,946 INFO  L631         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-24 15:04:15,946 INFO  L445         BuchiCegarLoop]: ======== Iteration 8============
[2020-11-24 15:04:15,946 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 0 states and 0 transitions.
[2020-11-24 15:04:15,946 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-24 15:04:15,946 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is true
[2020-11-24 15:04:15,949 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 24.11 03:04:15 BasicIcfg
[2020-11-24 15:04:15,950 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-24 15:04:15,950 INFO  L168              Benchmark]: Toolchain (without parser) took 3256.88 ms. Allocated memory was 1.0 GB in the beginning and 1.4 GB in the end (delta: 324.0 MB). Free memory was 945.9 MB in the beginning and 1.2 GB in the end (delta: -227.7 MB). Peak memory consumption was 96.3 MB. Max. memory is 15.3 GB.
[2020-11-24 15:04:15,951 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.14 ms. Allocated memory is still 1.0 GB. Free memory is still 956.7 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-24 15:04:15,951 INFO  L168              Benchmark]: Boogie Preprocessor took 74.44 ms. Allocated memory is still 1.0 GB. Free memory was 945.9 MB in the beginning and 935.2 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
[2020-11-24 15:04:15,951 INFO  L168              Benchmark]: UtopiaSpecLang took 50.16 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 929.8 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-24 15:04:15,952 INFO  L168              Benchmark]: Boogie Printer took 9.79 ms. Allocated memory is still 1.0 GB. Free memory is still 929.8 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-24 15:04:15,952 INFO  L168              Benchmark]: RCFGBuilder took 496.65 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 876.1 MB in the end (delta: 53.7 MB). Peak memory consumption was 53.7 MB. Max. memory is 15.3 GB.
[2020-11-24 15:04:15,952 INFO  L168              Benchmark]: UtopiaLTL2Aut took 37.99 ms. Allocated memory is still 1.0 GB. Free memory was 876.1 MB in the beginning and 872.5 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
[2020-11-24 15:04:15,952 INFO  L168              Benchmark]: BÃ¼chi Program Product took 853.66 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 46.1 MB). Free memory was 872.5 MB in the beginning and 915.7 MB in the end (delta: -43.2 MB). Peak memory consumption was 156.3 MB. Max. memory is 15.3 GB.
[2020-11-24 15:04:15,953 INFO  L168              Benchmark]: BlockEncodingV2 took 62.03 ms. Allocated memory is still 1.1 GB. Free memory was 915.7 MB in the beginning and 888.1 MB in the end (delta: 27.6 MB). Peak memory consumption was 27.6 MB. Max. memory is 15.3 GB.
[2020-11-24 15:04:15,953 INFO  L168              Benchmark]: BuchiAutomizer took 1669.44 ms. Allocated memory was 1.1 GB in the beginning and 1.4 GB in the end (delta: 277.9 MB). Free memory was 888.1 MB in the beginning and 1.2 GB in the end (delta: -285.6 MB). There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-24 15:04:15,955 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    1634 locations, 2772 edges
  - StatisticsResult: Encoded RCFG
    1584 locations, 2642 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.14 ms. Allocated memory is still 1.0 GB. Free memory is still 956.7 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 74.44 ms. Allocated memory is still 1.0 GB. Free memory was 945.9 MB in the beginning and 935.2 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 50.16 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 929.8 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 9.79 ms. Allocated memory is still 1.0 GB. Free memory is still 929.8 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * RCFGBuilder took 496.65 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 876.1 MB in the end (delta: 53.7 MB). Peak memory consumption was 53.7 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 37.99 ms. Allocated memory is still 1.0 GB. Free memory was 876.1 MB in the beginning and 872.5 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 853.66 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 46.1 MB). Free memory was 872.5 MB in the beginning and 915.7 MB in the end (delta: -43.2 MB). Peak memory consumption was 156.3 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 62.03 ms. Allocated memory is still 1.1 GB. Free memory was 915.7 MB in the beginning and 888.1 MB in the end (delta: 27.6 MB). Peak memory consumption was 27.6 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 1669.44 ms. Allocated memory was 1.1 GB in the beginning and 1.4 GB in the end (delta: 277.9 MB). Free memory was 888.1 MB in the beginning and 1.2 GB in the end (delta: -285.6 MB). There was no memory consumed. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    706 locations, 861 edges
  - StatisticsResult: BuchiProgram size
    1634 locations, 2772 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 7 terminating modules (7 trivial, 0 deterministic, 0 nondeterministic). 7 modules have a trivial ranking function, the largest among these consists of 15 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 1.6s and 8 iterations.  TraceHistogramMax:1. Analysis of lassos took 0.6s. Construction of modules took 0.3s. BÃ¼chi inclusion checks took 0.3s. Highest rank in rank-based complementation 0. Minimization of det autom 7. Minimization of nondet autom 0. Automata minimization 0.0s AutomataMinimizationTime, 6 MinimizatonAttempts, 35 StatesRemovedByMinimization, 3 NontrivialMinimizations. Non-live state removal took 0.0s Buchi closure took 0.0s. Biggest automaton had 199 states and ocurred in iteration 2.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 1782 SDtfs, 1644 SDslu, 3005 SDs, 0 SdLazy, 1629 SolverSat, 590 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 0.3s Time	LassoAnalysisResults: nont0 unkn0 SFLI0 SFLT0 conc0 concLT0 SILN0 SILU7 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - AllSpecificationsHoldResult: All specifications hold
    Buchi Automizer proved that the LTL property ! ( ( []( (call_transfer_Litecoin_SV0) ==> ( <>(success_transfer_Litecoin_SV0) ) ) )) holds
RESULT: Ultimate proved your program to be correct!
Received shutdown request...
