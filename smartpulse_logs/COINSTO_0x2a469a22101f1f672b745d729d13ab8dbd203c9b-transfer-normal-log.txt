This is Ultimate 0.1.24-f1553f5-m
[2020-11-24 18:18:36,419 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-24 18:18:36,420 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-24 18:18:36,428 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-24 18:18:36,428 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-24 18:18:36,429 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-24 18:18:36,429 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-24 18:18:36,431 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-24 18:18:36,433 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-24 18:18:36,434 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-24 18:18:36,435 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-24 18:18:36,435 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-24 18:18:36,436 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-24 18:18:36,438 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-24 18:18:36,439 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-24 18:18:36,439 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-24 18:18:36,440 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-24 18:18:36,442 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-24 18:18:36,443 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-24 18:18:36,446 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-24 18:18:36,447 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-24 18:18:36,449 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-24 18:18:36,453 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-24 18:18:36,453 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-24 18:18:36,453 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-24 18:18:36,455 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-24 18:18:36,455 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-24 18:18:36,456 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-24 18:18:36,456 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-24 18:18:36,457 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-24 18:18:36,458 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-24 18:18:36,459 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-24 18:18:36,459 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-24 18:18:36,460 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-24 18:18:36,462 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-24 18:18:36,462 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-24 18:18:36,463 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-24 18:18:36,463 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-24 18:18:36,463 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-24 18:18:36,464 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-24 18:18:36,465 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-24 18:18:36,465 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-24 18:18:36,473 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-24 18:18:36,473 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-24 18:18:36,474 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-24 18:18:36,474 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-24 18:18:36,474 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-24 18:18:36,474 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-24 18:18:36,474 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-24 18:18:36,474 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-24 18:18:36,475 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-24 18:18:36,475 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-24 18:18:36,475 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-24 18:18:36,475 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-24 18:18:36,475 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-24 18:18:36,475 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-24 18:18:36,475 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-24 18:18:36,475 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-24 18:18:36,475 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-24 18:18:36,475 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-24 18:18:36,476 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-24 18:18:36,476 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-24 18:18:36,476 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-24 18:18:36,476 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-24 18:18:36,476 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-24 18:18:36,476 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-24 18:18:36,476 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-24 18:18:36,476 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-24 18:18:36,497 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-24 18:18:36,506 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-24 18:18:36,508 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-24 18:18:36,510 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-24 18:18:36,510 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-24 18:18:36,511 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/COINSTO_0x2a469a22101f1f672b745d729d13ab8dbd203c9b_transfer-normal.bpl
[2020-11-24 18:18:36,511 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/COINSTO_0x2a469a22101f1f672b745d729d13ab8dbd203c9b_transfer-normal.bpl'
[2020-11-24 18:18:36,570 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-24 18:18:36,571 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-24 18:18:36,572 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-24 18:18:36,572 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-24 18:18:36,572 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-24 18:18:36,589 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "COINSTO_0x2a469a22101f1f672b745d729d13ab8dbd203c9b_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 06:18:36" (1/1) ...
[2020-11-24 18:18:36,592 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "COINSTO_0x2a469a22101f1f672b745d729d13ab8dbd203c9b_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 06:18:36" (1/1) ...
[2020-11-24 18:18:36,616 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "COINSTO_0x2a469a22101f1f672b745d729d13ab8dbd203c9b_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 06:18:36" (1/1) ...
[2020-11-24 18:18:36,617 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "COINSTO_0x2a469a22101f1f672b745d729d13ab8dbd203c9b_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 06:18:36" (1/1) ...
[2020-11-24 18:18:36,631 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "COINSTO_0x2a469a22101f1f672b745d729d13ab8dbd203c9b_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 06:18:36" (1/1) ...
[2020-11-24 18:18:36,637 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "COINSTO_0x2a469a22101f1f672b745d729d13ab8dbd203c9b_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 06:18:36" (1/1) ...
[2020-11-24 18:18:36,641 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "COINSTO_0x2a469a22101f1f672b745d729d13ab8dbd203c9b_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 06:18:36" (1/1) ...
[2020-11-24 18:18:36,647 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-24 18:18:36,648 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-24 18:18:36,648 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-24 18:18:36,650 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-24 18:18:36,652 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "COINSTO_0x2a469a22101f1f672b745d729d13ab8dbd203c9b_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 06:18:36" (1/1) ...
[2020-11-24 18:18:36,662 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(COINSTO.transfer(to, value), p1 != msg.sender && p1 != to && msg.sender != to && value <= balances_COINSTO[this][msg.sender] && balances_COINSTO[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_COINSTO[this][to] >= 0 && balances_COINSTO[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_COINSTO[this][msg.sender] >= 0 &&  balances_COINSTO[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(COINSTO.transfer(to, value), return == true && balances_COINSTO[this][msg.sender] == old(balances_COINSTO[this][msg.sender]) - value && balances_COINSTO[this][to] == old(balances_COINSTO[this][to]) + value && _totalSupply_COINSTO[this] == old(_totalSupply_COINSTO[this]) && allowed_COINSTO[this] == old(allowed_COINSTO[this]) && balances_COINSTO[this][p1] == old(balances_COINSTO[this][p1]) && symbol_COINSTO[this] == old(symbol_COINSTO[this]) && name_COINSTO[this] == old(name_COINSTO[this]) && decimals_COINSTO[this] == old(decimals_COINSTO[this]) && owner_Owned[this] == old(owner_Owned[this]) && newOwner_Owned[this] == old(newOwner_Owned[this]))))
[2020-11-24 18:18:36,668 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(COINSTO.transfer(to, value), p1 != msg.sender && p1 != to && msg.sender != to && value <= balances_COINSTO[this][msg.sender] && balances_COINSTO[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_COINSTO[this][to] >= 0 && balances_COINSTO[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_COINSTO[this][msg.sender] >= 0 &&  balances_COINSTO[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(COINSTO.transfer(to, value), return == true && balances_COINSTO[this][msg.sender] == old(balances_COINSTO[this][msg.sender]) - value && balances_COINSTO[this][to] == old(balances_COINSTO[this][to]) + value && _totalSupply_COINSTO[this] == old(_totalSupply_COINSTO[this]) && allowed_COINSTO[this] == old(allowed_COINSTO[this]) && balances_COINSTO[this][p1] == old(balances_COINSTO[this][p1]) && symbol_COINSTO[this] == old(symbol_COINSTO[this]) && name_COINSTO[this] == old(name_COINSTO[this]) && decimals_COINSTO[this] == old(decimals_COINSTO[this]) && owner_Owned[this] == old(owner_Owned[this]) && newOwner_Owned[this] == old(newOwner_Owned[this]))))
[2020-11-24 18:18:36,675 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(COINSTO.transfer(to, value), p1 != msg.sender && p1 != to && msg.sender != to && value <= balances_COINSTO[this][msg.sender] && balances_COINSTO[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_COINSTO[this][to] >= 0 && balances_COINSTO[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_COINSTO[this][msg.sender] >= 0 &&  balances_COINSTO[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(COINSTO.transfer(to, value), return == true && balances_COINSTO[this][msg.sender] == old(balances_COINSTO[this][msg.sender]) - value && balances_COINSTO[this][to] == old(balances_COINSTO[this][to]) + value && _totalSupply_COINSTO[this] == old(_totalSupply_COINSTO[this]) && allowed_COINSTO[this] == old(allowed_COINSTO[this]) && balances_COINSTO[this][p1] == old(balances_COINSTO[this][p1]) && symbol_COINSTO[this] == old(symbol_COINSTO[this]) && name_COINSTO[this] == old(name_COINSTO[this]) && decimals_COINSTO[this] == old(decimals_COINSTO[this]) && owner_Owned[this] == old(owner_Owned[this]) && newOwner_Owned[this] == old(newOwner_Owned[this]))))
[2020-11-24 18:18:36,681 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( ( ( p1!=msg.sender && p1!=to_s371 ) && msg.sender!=to_s371 ) && tokens_s371<=balances_COINSTO[this][msg.sender] ) && ( balances_COINSTO[this][to_s371] + tokens_s371 )<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && tokens_s371>=0 ) && tokens_s371<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && balances_COINSTO[this][to_s371]>=0 ) && balances_COINSTO[this][to_s371]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && balances_COINSTO[this][msg.sender]>=0 ) && balances_COINSTO[this][msg.sender]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPNEQ,IdentifierExpression[p1,GLOBAL],IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_COINSTO>]],BinaryExpression[COMPNEQ,IdentifierExpression[p1,GLOBAL],IdentifierExpression[to_s371,<IMPLEMENTATION_INPARAM,transfer~address~uint256_COINSTO>]]],BinaryExpression[COMPNEQ,IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_COINSTO>],IdentifierExpression[to_s371,<IMPLEMENTATION_INPARAM,transfer~address~uint256_COINSTO>]]],BinaryExpression[COMPLEQ,IdentifierExpression[tokens_s371,<IMPLEMENTATION_INPARAM,transfer~address~uint256_COINSTO>],ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_COINSTO,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_COINSTO>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_COINSTO>]]]]],BinaryExpression[COMPLT,BinaryExpression[ARITHPLUS,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_COINSTO,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_COINSTO>]]],[IdentifierExpression[to_s371,<IMPLEMENTATION_INPARAM,transfer~address~uint256_COINSTO>]]],IdentifierExpression[tokens_s371,<IMPLEMENTATION_INPARAM,transfer~address~uint256_COINSTO>]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,IdentifierExpression[tokens_s371,<IMPLEMENTATION_INPARAM,transfer~address~uint256_COINSTO>],IntegerLiteral[0]]],BinaryExpression[COMPLT,IdentifierExpression[tokens_s371,<IMPLEMENTATION_INPARAM,transfer~address~uint256_COINSTO>],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_COINSTO,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_COINSTO>]]],[IdentifierExpression[to_s371,<IMPLEMENTATION_INPARAM,transfer~address~uint256_COINSTO>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_COINSTO,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_COINSTO>]]],[IdentifierExpression[to_s371,<IMPLEMENTATION_INPARAM,transfer~address~uint256_COINSTO>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_COINSTO,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_COINSTO>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_COINSTO>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_COINSTO,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_COINSTO>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_COINSTO>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]]
[2020-11-24 18:18:36,684 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( ( ( success_s371==true && balances_COINSTO[this][msg.sender]==( ( old(balances_COINSTO[this][msg.sender]) ) - tokens_s371 ) ) && balances_COINSTO[this][to_s371]==( ( old(balances_COINSTO[this][to_s371]) ) + tokens_s371 ) ) && _totalSupply_COINSTO[this]==( old(_totalSupply_COINSTO[this]) ) ) && allowed_COINSTO[this]==( old(allowed_COINSTO[this]) ) ) && balances_COINSTO[this][p1]==( old(balances_COINSTO[this][p1]) ) ) && symbol_COINSTO[this]==( old(symbol_COINSTO[this]) ) ) && name_COINSTO[this]==( old(name_COINSTO[this]) ) ) && decimals_COINSTO[this]==( old(decimals_COINSTO[this]) ) ) && owner_Owned[this]==( old(owner_Owned[this]) ) ) && newOwner_Owned[this]==( old(newOwner_Owned[this]) ) ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[success_s371,<IMPLEMENTATION_OUTPARAM,transfer~address~uint256_COINSTO>],BooleanLiteral[true]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_COINSTO,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_COINSTO>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_COINSTO>]]],BinaryExpression[ARITHMINUS,UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_COINSTO,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_COINSTO>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_COINSTO>]]]],IdentifierExpression[tokens_s371,<IMPLEMENTATION_INPARAM,transfer~address~uint256_COINSTO>]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_COINSTO,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_COINSTO>]]],[IdentifierExpression[to_s371,<IMPLEMENTATION_INPARAM,transfer~address~uint256_COINSTO>]]],BinaryExpression[ARITHPLUS,UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_COINSTO,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_COINSTO>]]],[IdentifierExpression[to_s371,<IMPLEMENTATION_INPARAM,transfer~address~uint256_COINSTO>]]]],IdentifierExpression[tokens_s371,<IMPLEMENTATION_INPARAM,transfer~address~uint256_COINSTO>]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_totalSupply_COINSTO,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_COINSTO>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_totalSupply_COINSTO,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_COINSTO>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[allowed_COINSTO,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_COINSTO>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[allowed_COINSTO,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_COINSTO>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_COINSTO,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_COINSTO>]]],[IdentifierExpression[p1,GLOBAL]]],UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_COINSTO,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_COINSTO>]]],[IdentifierExpression[p1,GLOBAL]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[symbol_COINSTO,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_COINSTO>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[symbol_COINSTO,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_COINSTO>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[name_COINSTO,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_COINSTO>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[name_COINSTO,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_COINSTO>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[decimals_COINSTO,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_COINSTO>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[decimals_COINSTO,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_COINSTO>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[owner_Owned,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_COINSTO>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[owner_Owned,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_COINSTO>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[newOwner_Owned,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_COINSTO>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[newOwner_Owned,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_COINSTO>]]]]]]
[2020-11-24 18:18:36,686 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(COINSTO.transfer(to, value), p1 != msg.sender && p1 != to && msg.sender != to && value <= balances_COINSTO[this][msg.sender] && balances_COINSTO[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_COINSTO[this][to] >= 0 && balances_COINSTO[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_COINSTO[this][msg.sender] >= 0 &&  balances_COINSTO[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(COINSTO.transfer(to, value), return == true && balances_COINSTO[this][msg.sender] == old(balances_COINSTO[this][msg.sender]) - value && balances_COINSTO[this][to] == old(balances_COINSTO[this][to]) + value && _totalSupply_COINSTO[this] == old(_totalSupply_COINSTO[this]) && allowed_COINSTO[this] == old(allowed_COINSTO[this]) && balances_COINSTO[this][p1] == old(balances_COINSTO[this][p1]) && symbol_COINSTO[this] == old(symbol_COINSTO[this]) && name_COINSTO[this] == old(name_COINSTO[this]) && decimals_COINSTO[this] == old(decimals_COINSTO[this]) && owner_Owned[this] == old(owner_Owned[this]) && newOwner_Owned[this] == old(newOwner_Owned[this]))))
[2020-11-24 18:18:36,686 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_transfer_COINSTO0) ==> ( <>AP(success_transfer_COINSTO0) ) ) )
Executed UtopiaSpecLang
[2020-11-24 18:18:36,690 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 06:18:36 PropertyContainer
[2020-11-24 18:18:36,691 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-24 18:18:36,691 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-24 18:18:36,691 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-24 18:18:36,691 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-24 18:18:36,691 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "COINSTO_0x2a469a22101f1f672b745d729d13ab8dbd203c9b_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 06:18:36" (1/2) ...
[2020-11-24 18:18:36,692 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-24 18:18:36,692 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-24 18:18:36,698 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 06:18:36" (2/2) ...
[2020-11-24 18:18:36,698 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-24 18:18:36,698 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-24 18:18:36,698 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-24 18:18:36,698 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-24 18:18:36,699 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "COINSTO_0x2a469a22101f1f672b745d729d13ab8dbd203c9b_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 06:18:36" (1/2) ...
[2020-11-24 18:18:36,758 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-24 18:18:36,759 INFO  L130     BoogieDeclarations]: Found specification of procedure safeAdd~uint256~uint256_SafeMath
[2020-11-24 18:18:36,759 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeAdd~uint256~uint256_SafeMath
[2020-11-24 18:18:36,759 INFO  L130     BoogieDeclarations]: Found specification of procedure safeSub~uint256~uint256_SafeMath
[2020-11-24 18:18:36,759 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeSub~uint256~uint256_SafeMath
[2020-11-24 18:18:36,759 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_COINSTO
[2020-11-24 18:18:36,759 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_COINSTO
[2020-11-24 18:18:36,759 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_COINSTO
[2020-11-24 18:18:36,759 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_COINSTO
[2020-11-24 18:18:36,759 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_COINSTO
[2020-11-24 18:18:36,760 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_COINSTO
[2020-11-24 18:18:36,760 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_COINSTO
[2020-11-24 18:18:36,760 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_COINSTO
[2020-11-24 18:18:36,760 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_COINSTO
[2020-11-24 18:18:36,760 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_COINSTO
[2020-11-24 18:18:36,760 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_COINSTO
[2020-11-24 18:18:36,760 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_COINSTO
[2020-11-24 18:18:36,760 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-24 18:18:36,760 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-24 18:18:36,760 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-24 18:18:36,760 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__success
[2020-11-24 18:18:36,761 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_SafeMath
[2020-11-24 18:18:36,761 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_SafeMath
[2020-11-24 18:18:36,761 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20Interface
[2020-11-24 18:18:36,761 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20Interface
[2020-11-24 18:18:36,761 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ApproveAndCallFallBack
[2020-11-24 18:18:36,761 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ApproveAndCallFallBack
[2020-11-24 18:18:36,761 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_Owned
[2020-11-24 18:18:36,761 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_Owned
[2020-11-24 18:18:36,761 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_COINSTO
[2020-11-24 18:18:36,761 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-24 18:18:36,761 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-24 18:18:36,761 INFO  L130     BoogieDeclarations]: Found specification of procedure safeAdd~uint256~uint256_SafeMath__success
[2020-11-24 18:18:36,762 INFO  L130     BoogieDeclarations]: Found specification of procedure safeAdd~uint256~uint256_SafeMath__fail
[2020-11-24 18:18:36,762 INFO  L130     BoogieDeclarations]: Found specification of procedure safeSub~uint256~uint256_SafeMath__success
[2020-11-24 18:18:36,762 INFO  L130     BoogieDeclarations]: Found specification of procedure safeSub~uint256~uint256_SafeMath__fail
[2020-11-24 18:18:36,762 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_COINSTO__success
[2020-11-24 18:18:36,762 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_COINSTO__fail
[2020-11-24 18:18:36,762 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_COINSTO__success
[2020-11-24 18:18:36,762 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_COINSTO__fail
[2020-11-24 18:18:36,762 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_COINSTO__success
[2020-11-24 18:18:36,762 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_COINSTO__fail
[2020-11-24 18:18:36,762 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_COINSTO__success
[2020-11-24 18:18:36,762 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_COINSTO__fail
[2020-11-24 18:18:36,762 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_COINSTO__success
[2020-11-24 18:18:36,762 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_COINSTO__fail
[2020-11-24 18:18:36,762 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_COINSTO__success
[2020-11-24 18:18:36,763 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_COINSTO__fail
[2020-11-24 18:18:36,763 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-24 18:18:36,763 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-24 18:18:36,763 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-24 18:18:36,763 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__fail
[2020-11-24 18:18:36,763 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-24 18:18:36,763 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-24 18:18:36,763 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeAdd~uint256~uint256_SafeMath__fail
[2020-11-24 18:18:36,763 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeAdd~uint256~uint256_SafeMath__success
[2020-11-24 18:18:36,763 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeSub~uint256~uint256_SafeMath__fail
[2020-11-24 18:18:36,763 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeSub~uint256~uint256_SafeMath__success
[2020-11-24 18:18:36,763 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_COINSTO__fail
[2020-11-24 18:18:36,763 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_COINSTO__success
[2020-11-24 18:18:36,764 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_COINSTO__fail
[2020-11-24 18:18:36,764 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_COINSTO__success
[2020-11-24 18:18:36,764 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_COINSTO__fail
[2020-11-24 18:18:36,764 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_COINSTO__success
[2020-11-24 18:18:36,764 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_COINSTO__fail
[2020-11-24 18:18:36,764 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_COINSTO__success
[2020-11-24 18:18:36,764 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_COINSTO__fail
[2020-11-24 18:18:36,764 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_COINSTO__success
[2020-11-24 18:18:36,764 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_COINSTO__fail
[2020-11-24 18:18:36,764 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_COINSTO__success
[2020-11-24 18:18:36,764 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-24 18:18:36,764 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-24 18:18:36,764 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-24 18:18:36,765 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-24 18:18:36,765 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-24 18:18:36,765 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-24 18:18:36,765 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__fail
[2020-11-24 18:18:36,765 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__success
[2020-11-24 18:18:36,765 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_SafeMath
[2020-11-24 18:18:36,765 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_SafeMath
[2020-11-24 18:18:36,765 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20Interface
[2020-11-24 18:18:36,765 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20Interface
[2020-11-24 18:18:36,765 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ApproveAndCallFallBack
[2020-11-24 18:18:36,765 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ApproveAndCallFallBack
[2020-11-24 18:18:36,765 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_Owned
[2020-11-24 18:18:36,765 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_Owned
[2020-11-24 18:18:36,765 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_COINSTO
[2020-11-24 18:18:36,766 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-24 18:18:36,766 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-24 18:18:36,766 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-24 18:18:36,926 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 18:18:37,102 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 18:18:37,102 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 18:18:37,103 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 18:18:37,199 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-24 18:18:37,200 INFO  L286             CfgBuilder]: Removed 5 assue(true) statements.
[2020-11-24 18:18:37,201 INFO  L202        PluginConnector]: Adding new model COINSTO_0x2a469a22101f1f672b745d729d13ab8dbd203c9b_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 06:18:37 BoogieIcfgContainer
[2020-11-24 18:18:37,201 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 06:18:36" (2/2) ...
[2020-11-24 18:18:37,201 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-24 18:18:37,202 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@22c8479c and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 06:18:37, skipping insertion in model container
[2020-11-24 18:18:37,202 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-24 18:18:37,202 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-24 18:18:37,202 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-24 18:18:37,204 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-24 18:18:37,204 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "COINSTO_0x2a469a22101f1f672b745d729d13ab8dbd203c9b_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 06:18:36" (1/3) ...
[2020-11-24 18:18:37,204 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@21b9a2b6 and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 06:18:37, skipping insertion in model container
[2020-11-24 18:18:37,205 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 06:18:36" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-24 18:18:37,240 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 06:18:37 NWAContainer
[2020-11-24 18:18:37,240 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-24 18:18:37,241 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-24 18:18:37,241 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-24 18:18:37,242 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-24 18:18:37,242 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "COINSTO_0x2a469a22101f1f672b745d729d13ab8dbd203c9b_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 06:18:37" (3/4) ...
[2020-11-24 18:18:37,243 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@6ce39a97 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 06:18:37, skipping insertion in model container
[2020-11-24 18:18:37,243 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 06:18:37" (4/4) ...
[2020-11-24 18:18:37,247 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-24 18:18:37,249 INFO  L110   BuchiProductObserver]: Initial RCFG 686 locations, 841 edges
[2020-11-24 18:18:37,249 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-24 18:18:37,260 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-24 18:18:38,170 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-24 18:18:38,172 INFO  L110   BuchiProductObserver]: BuchiProgram size 1594 locations, 2712 edges
[2020-11-24 18:18:38,173 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 06:18:38 BoogieIcfgContainer
[2020-11-24 18:18:38,173 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-24 18:18:38,173 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-24 18:18:38,173 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-24 18:18:38,175 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-24 18:18:38,176 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 06:18:38" (1/1) ...
[2020-11-24 18:18:38,224 INFO  L313           BlockEncoder]: Initial Icfg 1594 locations, 2712 edges
[2020-11-24 18:18:38,224 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-24 18:18:38,225 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-24 18:18:38,225 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-24 18:18:38,226 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-24 18:18:38,233 INFO  L70    emoveInfeasibleEdges]: Removed 75 edges and 13 locations because of local infeasibility
[2020-11-24 18:18:38,238 INFO  L70        RemoveSinkStates]: Removed 32 edges and 21 locations by removing sink states
[2020-11-24 18:18:38,244 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-24 18:18:38,246 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-24 18:18:38,247 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-24 18:18:38,248 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-24 18:18:38,250 INFO  L313           BlockEncoder]: Encoded RCFG 1544 locations, 2582 edges
[2020-11-24 18:18:38,251 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 24.11 06:18:38 BasicIcfg
[2020-11-24 18:18:38,251 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-24 18:18:38,252 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-24 18:18:38,252 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-24 18:18:38,254 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-24 18:18:38,255 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 18:18:38,255 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "COINSTO_0x2a469a22101f1f672b745d729d13ab8dbd203c9b_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 06:18:36" (1/6) ...
[2020-11-24 18:18:38,257 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@2f8ae75f and model type COINSTO_0x2a469a22101f1f672b745d729d13ab8dbd203c9b_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 24.11 06:18:38, skipping insertion in model container
[2020-11-24 18:18:38,257 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 18:18:38,257 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 06:18:36" (2/6) ...
[2020-11-24 18:18:38,257 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@2f8ae75f and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 24.11 06:18:38, skipping insertion in model container
[2020-11-24 18:18:38,257 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 18:18:38,258 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "COINSTO_0x2a469a22101f1f672b745d729d13ab8dbd203c9b_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 06:18:37" (3/6) ...
[2020-11-24 18:18:38,258 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@2f8ae75f and model type COINSTO_0x2a469a22101f1f672b745d729d13ab8dbd203c9b_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 24.11 06:18:38, skipping insertion in model container
[2020-11-24 18:18:38,258 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 18:18:38,258 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 06:18:37" (4/6) ...
[2020-11-24 18:18:38,258 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@2f8ae75f and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 24.11 06:18:38, skipping insertion in model container
[2020-11-24 18:18:38,258 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 18:18:38,258 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 06:18:38" (5/6) ...
[2020-11-24 18:18:38,259 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@2f8ae75f and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 24.11 06:18:38, skipping insertion in model container
[2020-11-24 18:18:38,259 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 18:18:38,259 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 24.11 06:18:38" (6/6) ...
[2020-11-24 18:18:38,260 INFO  L404   chiAutomizerObserver]: Analyzing ICFG COINSTO_0x2a469a22101f1f672b745d729d13ab8dbd203c9b_transfer-normal.bpl_BEv2
[2020-11-24 18:18:38,299 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-24 18:18:38,299 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-24 18:18:38,299 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-24 18:18:38,299 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-24 18:18:38,300 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-24 18:18:38,300 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-24 18:18:38,300 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-24 18:18:38,300 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-24 18:18:38,300 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-24 18:18:38,320 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1544 states.
[2020-11-24 18:18:38,360 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 18:18:38,360 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 18:18:38,360 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 18:18:38,369 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 18:18:38,369 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
[2020-11-24 18:18:38,369 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-24 18:18:38,369 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1544 states.
[2020-11-24 18:18:38,379 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 18:18:38,379 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 18:18:38,379 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 18:18:38,381 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 18:18:38,381 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L3]                 success_transfer_COINSTO0 := false;
[L3]                 call_transfer_COINSTO0 := false;
[L3]     CALL        call main();
[L3]                 havoc p1;
[L1938]              assume null == 0;
[L1939]  CALL        call this := FreshRefGenerator__success();
[L767]               havoc newRef;
[L768]               assume Alloc[newRef] == false;
[L769]               Alloc[newRef] := true;
[L770]               assume newRef != null;
[L1939]  RET         call this := FreshRefGenerator__success();
[L1940]              assume now >= 0;
[L1941]              assume DType[this] == COINSTO;
[L1942]              assume !revert && gas >= 0;
[L1943]  CALL        call CorralChoice_COINSTO(this);
[L1823]              havoc msgsender_MSG;
[L1824]              havoc msgvalue_MSG;
[L1825]              havoc choice;
[L1826]              havoc a_s23;
[L1827]              havoc b_s23;
[L1828]              havoc c_s23;
[L1829]              havoc a_s45;
[L1830]              havoc b_s45;
[L1831]              havoc c_s45;
[L1832]              havoc a_s73;
[L1833]              havoc b_s73;
[L1834]              havoc c_s73;
[L1835]              havoc a_s95;
[L1836]              havoc b_s95;
[L1837]              havoc c_s95;
[L1838]              havoc __ret_0_totalSupply;
[L1839]              havoc tokenOwner_s328;
[L1840]              havoc balance_s328;
[L1841]              havoc tokenOwner_s474;
[L1842]              havoc spender_s474;
[L1843]              havoc remaining_s474;
[L1844]              havoc to_s371;
[L1845]              havoc tokens_s371;
[L1846]              havoc success_s371;
[L1847]              havoc spender_s399;
[L1848]              havoc tokens_s399;
[L1849]              havoc success_s399;
[L1850]              havoc from_s458;
[L1851]              havoc to_s458;
[L1852]              havoc tokens_s458;
[L1853]              havoc success_s458;
[L1854]              havoc __ret_0_owner;
[L1855]              havoc __ret_0_newOwner;
[L1856]              havoc _newOwner_s217;
[L1857]              havoc __ret_0_symbol;
[L1858]              havoc __ret_0_name;
[L1859]              havoc __ret_0_decimals;
[L1860]              havoc __ret_0__totalSupply;
[L1861]              havoc spender_s517;
[L1862]              havoc tokens_s517;
[L1863]              havoc data_s517;
[L1864]              havoc success_s517;
[L1865]              havoc tokenAddress_s544;
[L1866]              havoc tokens_s544;
[L1867]              havoc success_s544;
[L1868]              havoc tmpNow;
[L1869]              havoc gas;
[L1870]              assume gas > 4000000 && gas <= 8000000;
[L1871]              tmpNow := now;
[L1872]              havoc now;
[L1873]              assume now > tmpNow;
[L1874]              assume msgsender_MSG != null;
[L1875]  COND TRUE   choice == 8
[L1876]              gas := gas - 21000;
[L1877]  COND FALSE  !(gas >= 0)
[L1943]  RET         call CorralChoice_COINSTO(this);

Loop:
[L1943]        assume true;

[2020-11-24 18:18:38,397 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 18:18:38,397 INFO  L82        PathProgramCache]: Analyzing trace with hash -2045763908, now seen corresponding path program 1 times
[2020-11-24 18:18:38,402 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 18:18:38,424 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 18:18:38,487 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 18:18:38,491 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 18:18:38,492 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [5] imperfect sequences [] total 5
[2020-11-24 18:18:38,494 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 18:18:38,502 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 5 interpolants.
[2020-11-24 18:18:38,502 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=9, Invalid=11, Unknown=0, NotChecked=0, Total=20
[2020-11-24 18:18:38,503 INFO  L87              Difference]: Start difference. First operand 1544 states. Second operand 5 states.
[2020-11-24 18:18:38,774 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 18:18:38,774 INFO  L93              Difference]: Finished difference Result 655 states and 715 transitions.
[2020-11-24 18:18:38,774 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-24 18:18:38,775 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 655 states and 715 transitions.
[2020-11-24 18:18:38,780 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 18:18:38,786 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 655 states to 189 states and 198 transitions.
[2020-11-24 18:18:38,787 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 4
[2020-11-24 18:18:38,787 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 189
[2020-11-24 18:18:38,788 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 189 states and 198 transitions.
[2020-11-24 18:18:38,789 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 18:18:38,789 INFO  L728         BuchiCegarLoop]: Abstraction has 189 states and 198 transitions.
[2020-11-24 18:18:38,804 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 189 states and 198 transitions.
[2020-11-24 18:18:38,816 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 189 to 189.
[2020-11-24 18:18:38,817 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 189 states.
[2020-11-24 18:18:38,817 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 189 states to 189 states and 198 transitions.
[2020-11-24 18:18:38,818 INFO  L751         BuchiCegarLoop]: Abstraction has 189 states and 198 transitions.
[2020-11-24 18:18:38,818 INFO  L631         BuchiCegarLoop]: Abstraction has 189 states and 198 transitions.
[2020-11-24 18:18:38,818 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-24 18:18:38,818 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 189 states and 198 transitions.
[2020-11-24 18:18:38,820 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 18:18:38,820 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 18:18:38,820 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 18:18:38,821 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 18:18:38,821 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L3]                 success_transfer_COINSTO0 := false;
[L3]                 call_transfer_COINSTO0 := false;
[L3]     CALL        call main();
[L3]                 havoc p1;
[L1938]              assume null == 0;
[L1939]  CALL        call this := FreshRefGenerator__success();
[L767]               havoc newRef;
[L768]               assume Alloc[newRef] == false;
[L769]               Alloc[newRef] := true;
[L770]               assume newRef != null;
[L1939]  RET         call this := FreshRefGenerator__success();
[L1940]              assume now >= 0;
[L1941]              assume DType[this] == COINSTO;
[L1942]              assume !revert && gas >= 0;
[L1943]  CALL        call CorralChoice_COINSTO(this);
[L1823]              havoc msgsender_MSG;
[L1824]              havoc msgvalue_MSG;
[L1825]              havoc choice;
[L1826]              havoc a_s23;
[L1827]              havoc b_s23;
[L1828]              havoc c_s23;
[L1829]              havoc a_s45;
[L1830]              havoc b_s45;
[L1831]              havoc c_s45;
[L1832]              havoc a_s73;
[L1833]              havoc b_s73;
[L1834]              havoc c_s73;
[L1835]              havoc a_s95;
[L1836]              havoc b_s95;
[L1837]              havoc c_s95;
[L1838]              havoc __ret_0_totalSupply;
[L1839]              havoc tokenOwner_s328;
[L1840]              havoc balance_s328;
[L1841]              havoc tokenOwner_s474;
[L1842]              havoc spender_s474;
[L1843]              havoc remaining_s474;
[L1844]              havoc to_s371;
[L1845]              havoc tokens_s371;
[L1846]              havoc success_s371;
[L1847]              havoc spender_s399;
[L1848]              havoc tokens_s399;
[L1849]              havoc success_s399;
[L1850]              havoc from_s458;
[L1851]              havoc to_s458;
[L1852]              havoc tokens_s458;
[L1853]              havoc success_s458;
[L1854]              havoc __ret_0_owner;
[L1855]              havoc __ret_0_newOwner;
[L1856]              havoc _newOwner_s217;
[L1857]              havoc __ret_0_symbol;
[L1858]              havoc __ret_0_name;
[L1859]              havoc __ret_0_decimals;
[L1860]              havoc __ret_0__totalSupply;
[L1861]              havoc spender_s517;
[L1862]              havoc tokens_s517;
[L1863]              havoc data_s517;
[L1864]              havoc success_s517;
[L1865]              havoc tokenAddress_s544;
[L1866]              havoc tokens_s544;
[L1867]              havoc success_s544;
[L1868]              havoc tmpNow;
[L1869]              havoc gas;
[L1870]              assume gas > 4000000 && gas <= 8000000;
[L1871]              tmpNow := now;
[L1872]              havoc now;
[L1873]              assume now > tmpNow;
[L1874]              assume msgsender_MSG != null;
[L1875]  COND FALSE  !(choice == 8)
[L1883]  COND FALSE  !(choice == 7)
[L1891]  COND FALSE  !(choice == 6)
[L1897]  COND FALSE  !(choice == 5)
[L1903]  COND FALSE  !(choice == 4)
[L1909]  COND TRUE   choice == 3
[L1910]              gas := gas - 21000;
[L1911]  COND TRUE   gas >= 0
[L1912]              assume tokens_s371 >= 0 && tokens_s371 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1913]              assume msgvalue_MSG == 0;
[L1914]  CALL        call success_s371 := transfer~address~uint256_COINSTO(this, msgsender_MSG, msgvalue_MSG, to_s371, tokens_s371);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != to_s371) && msgsender_MSG != to_s371) && tokens_s371 <= balances_COINSTO[this][msgsender_MSG]) && balances_COINSTO[this][to_s371] + tokens_s371 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && tokens_s371 >= 0) && tokens_s371 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_COINSTO[this][to_s371] >= 0) && balances_COINSTO[this][to_s371] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_COINSTO[this][msgsender_MSG] >= 0) && balances_COINSTO[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_COINSTO0 := true;
[L3]                 call_transfer_COINSTO0 := false;
[L3]                 revert := revert_hold;
[L292]               havoc __exception;
[L293]               revert := false;
[L294]   COND FALSE  !(__exception)
[L317]   CALL        call success_s371 := transfer~address~uint256_COINSTO__success(this, msgsender_MSG, msgvalue_MSG, to_s371, tokens_s371);
[L871]   COND TRUE   DType[this] == COINSTO
[L872]   CALL        call __var_2 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_COINSTO[this][msgsender_MSG], tokens_s371);
[L802]   COND TRUE   !(b_s45 <= a_s45)
[L803]               revert := true;
[L872]   RET         call __var_2 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_COINSTO[this][msgsender_MSG], tokens_s371);
[L873]   COND TRUE   revert
[L317]   RET         call success_s371 := transfer~address~uint256_COINSTO__success(this, msgsender_MSG, msgvalue_MSG, to_s371, tokens_s371);
[L318]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !((((((((((success_s371 == true && balances_COINSTO[this][msgsender_MSG] == old(balances_COINSTO[this][msgsender_MSG]) - tokens_s371) && balances_COINSTO[this][to_s371] == old(balances_COINSTO[this][to_s371]) + tokens_s371) && _totalSupply_COINSTO[this] == old(_totalSupply_COINSTO[this])) && allowed_COINSTO[this] == old(allowed_COINSTO[this])) && balances_COINSTO[this][p1] == old(balances_COINSTO[this][p1])) && symbol_COINSTO[this] == old(symbol_COINSTO[this])) && name_COINSTO[this] == old(name_COINSTO[this])) && decimals_COINSTO[this] == old(decimals_COINSTO[this])) && owner_Owned[this] == old(owner_Owned[this])) && newOwner_Owned[this] == old(newOwner_Owned[this]));
[L3]                 revert := revert_hold;
[L1914]  RET         call success_s371 := transfer~address~uint256_COINSTO(this, msgsender_MSG, msgvalue_MSG, to_s371, tokens_s371);
[L1943]  RET         call CorralChoice_COINSTO(this);

Loop:
[L1943]        assume true;

[2020-11-24 18:18:38,824 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 18:18:38,824 INFO  L82        PathProgramCache]: Analyzing trace with hash 1051864454, now seen corresponding path program 1 times
[2020-11-24 18:18:38,825 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 18:18:38,836 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 18:18:38,853 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 18:18:38,854 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 18:18:38,854 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-24 18:18:38,855 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 18:18:38,856 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-24 18:18:38,856 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-24 18:18:38,856 INFO  L87              Difference]: Start difference. First operand 189 states and 198 transitions. cyclomatic complexity: 10 Second operand 3 states.
[2020-11-24 18:18:38,863 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 18:18:38,863 INFO  L93              Difference]: Finished difference Result 220 states and 228 transitions.
[2020-11-24 18:18:38,863 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-24 18:18:38,864 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 220 states and 228 transitions.
[2020-11-24 18:18:38,866 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 2
[2020-11-24 18:18:38,867 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 220 states to 206 states and 211 transitions.
[2020-11-24 18:18:38,867 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 206
[2020-11-24 18:18:38,868 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 206
[2020-11-24 18:18:38,868 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 206 states and 211 transitions.
[2020-11-24 18:18:38,869 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 18:18:38,869 INFO  L728         BuchiCegarLoop]: Abstraction has 206 states and 211 transitions.
[2020-11-24 18:18:38,869 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 206 states and 211 transitions.
[2020-11-24 18:18:38,875 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 206 to 195.
[2020-11-24 18:18:38,875 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 195 states.
[2020-11-24 18:18:38,876 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 195 states to 195 states and 200 transitions.
[2020-11-24 18:18:38,876 INFO  L751         BuchiCegarLoop]: Abstraction has 195 states and 200 transitions.
[2020-11-24 18:18:38,876 INFO  L631         BuchiCegarLoop]: Abstraction has 195 states and 200 transitions.
[2020-11-24 18:18:38,876 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-24 18:18:38,876 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 195 states and 200 transitions.
[2020-11-24 18:18:38,877 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 18:18:38,877 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 18:18:38,877 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 18:18:38,879 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 18:18:38,879 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L3]                 success_transfer_COINSTO0 := false;
[L3]                 call_transfer_COINSTO0 := false;
[L3]     CALL        call main();
[L3]                 havoc p1;
[L1938]              assume null == 0;
[L1939]  CALL        call this := FreshRefGenerator__success();
[L767]               havoc newRef;
[L768]               assume Alloc[newRef] == false;
[L769]               Alloc[newRef] := true;
[L770]               assume newRef != null;
[L1939]  RET         call this := FreshRefGenerator__success();
[L1940]              assume now >= 0;
[L1941]              assume DType[this] == COINSTO;
[L1942]              assume !revert && gas >= 0;
[L1943]  CALL        call CorralChoice_COINSTO(this);
[L1823]              havoc msgsender_MSG;
[L1824]              havoc msgvalue_MSG;
[L1825]              havoc choice;
[L1826]              havoc a_s23;
[L1827]              havoc b_s23;
[L1828]              havoc c_s23;
[L1829]              havoc a_s45;
[L1830]              havoc b_s45;
[L1831]              havoc c_s45;
[L1832]              havoc a_s73;
[L1833]              havoc b_s73;
[L1834]              havoc c_s73;
[L1835]              havoc a_s95;
[L1836]              havoc b_s95;
[L1837]              havoc c_s95;
[L1838]              havoc __ret_0_totalSupply;
[L1839]              havoc tokenOwner_s328;
[L1840]              havoc balance_s328;
[L1841]              havoc tokenOwner_s474;
[L1842]              havoc spender_s474;
[L1843]              havoc remaining_s474;
[L1844]              havoc to_s371;
[L1845]              havoc tokens_s371;
[L1846]              havoc success_s371;
[L1847]              havoc spender_s399;
[L1848]              havoc tokens_s399;
[L1849]              havoc success_s399;
[L1850]              havoc from_s458;
[L1851]              havoc to_s458;
[L1852]              havoc tokens_s458;
[L1853]              havoc success_s458;
[L1854]              havoc __ret_0_owner;
[L1855]              havoc __ret_0_newOwner;
[L1856]              havoc _newOwner_s217;
[L1857]              havoc __ret_0_symbol;
[L1858]              havoc __ret_0_name;
[L1859]              havoc __ret_0_decimals;
[L1860]              havoc __ret_0__totalSupply;
[L1861]              havoc spender_s517;
[L1862]              havoc tokens_s517;
[L1863]              havoc data_s517;
[L1864]              havoc success_s517;
[L1865]              havoc tokenAddress_s544;
[L1866]              havoc tokens_s544;
[L1867]              havoc success_s544;
[L1868]              havoc tmpNow;
[L1869]              havoc gas;
[L1870]              assume gas > 4000000 && gas <= 8000000;
[L1871]              tmpNow := now;
[L1872]              havoc now;
[L1873]              assume now > tmpNow;
[L1874]              assume msgsender_MSG != null;
[L1875]  COND FALSE  !(choice == 8)
[L1883]  COND FALSE  !(choice == 7)
[L1891]  COND FALSE  !(choice == 6)
[L1897]  COND FALSE  !(choice == 5)
[L1903]  COND FALSE  !(choice == 4)
[L1909]  COND TRUE   choice == 3
[L1910]              gas := gas - 21000;
[L1911]  COND TRUE   gas >= 0
[L1912]              assume tokens_s371 >= 0 && tokens_s371 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1913]              assume msgvalue_MSG == 0;
[L1914]  CALL        call success_s371 := transfer~address~uint256_COINSTO(this, msgsender_MSG, msgvalue_MSG, to_s371, tokens_s371);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != to_s371) && msgsender_MSG != to_s371) && tokens_s371 <= balances_COINSTO[this][msgsender_MSG]) && balances_COINSTO[this][to_s371] + tokens_s371 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && tokens_s371 >= 0) && tokens_s371 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_COINSTO[this][to_s371] >= 0) && balances_COINSTO[this][to_s371] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_COINSTO[this][msgsender_MSG] >= 0) && balances_COINSTO[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_COINSTO0 := true;
[L3]                 call_transfer_COINSTO0 := false;
[L3]                 revert := revert_hold;
[L292]               havoc __exception;
[L293]               revert := false;
[L294]   COND TRUE   __exception
[L295]               __tmp__Balance := Balance;
[L296]               __tmp__DType := DType;
[L297]               __tmp__Alloc := Alloc;
[L298]               __tmp__balance_ADDR := balance_ADDR;
[L299]               __tmp__M_Ref_int := M_Ref_int;
[L300]               __tmp__sum_balances0 := sum_balances0;
[L301]               __tmp__alloc_allowed_COINSTO_lvl0 := alloc_allowed_COINSTO_lvl0;
[L302]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L303]               __tmp__sum_allowed1 := sum_allowed1;
[L304]               __tmp__Length := Length;
[L305]               __tmp__now := now;
[L306]               __tmp__owner_Owned := owner_Owned;
[L307]               __tmp__newOwner_Owned := newOwner_Owned;
[L308]               __tmp__symbol_COINSTO := symbol_COINSTO;
[L309]               __tmp__name_COINSTO := name_COINSTO;
[L310]               __tmp__decimals_COINSTO := decimals_COINSTO;
[L311]               __tmp___totalSupply_COINSTO := _totalSupply_COINSTO;
[L312]               __tmp__balances_COINSTO := balances_COINSTO;
[L313]               __tmp__allowed_COINSTO := allowed_COINSTO;
[L314]   CALL        call success_s371 := transfer~address~uint256_COINSTO__fail(this, msgsender_MSG, msgvalue_MSG, to_s371, tokens_s371);
[L841]   COND TRUE   __tmp__DType[this] == COINSTO
[L842]   CALL        call __var_2 := safeSub~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balances_COINSTO[this][msgsender_MSG], tokens_s371);
[L793]   COND TRUE   !(b_s45 <= a_s45)
[L794]               revert := true;
[L842]   RET         call __var_2 := safeSub~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balances_COINSTO[this][msgsender_MSG], tokens_s371);
[L843]   COND TRUE   revert
[L314]   RET         call success_s371 := transfer~address~uint256_COINSTO__fail(this, msgsender_MSG, msgvalue_MSG, to_s371, tokens_s371);
[L315]               assume revert || gas < 0;
[L1914]  RET         call success_s371 := transfer~address~uint256_COINSTO(this, msgsender_MSG, msgvalue_MSG, to_s371, tokens_s371);
[L1943]  RET         call CorralChoice_COINSTO(this);

Loop:
[L1943]        assume true;

[2020-11-24 18:18:38,881 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 18:18:38,881 INFO  L82        PathProgramCache]: Analyzing trace with hash -1254958536, now seen corresponding path program 1 times
[2020-11-24 18:18:38,882 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 18:18:38,893 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 18:18:38,942 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 18:18:38,942 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 18:18:38,942 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [7] imperfect sequences [] total 7
[2020-11-24 18:18:38,943 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 18:18:38,943 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 7 interpolants.
[2020-11-24 18:18:38,943 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=11, Invalid=31, Unknown=0, NotChecked=0, Total=42
[2020-11-24 18:18:38,943 INFO  L87              Difference]: Start difference. First operand 195 states and 200 transitions. cyclomatic complexity: 6 Second operand 7 states.
[2020-11-24 18:18:39,020 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 18:18:39,021 INFO  L93              Difference]: Finished difference Result 210 states and 214 transitions.
[2020-11-24 18:18:39,021 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 8 states. 
[2020-11-24 18:18:39,021 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 210 states and 214 transitions.
[2020-11-24 18:18:39,022 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 2
[2020-11-24 18:18:39,024 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 210 states to 203 states and 207 transitions.
[2020-11-24 18:18:39,024 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 203
[2020-11-24 18:18:39,024 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 203
[2020-11-24 18:18:39,024 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 203 states and 207 transitions.
[2020-11-24 18:18:39,025 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 18:18:39,025 INFO  L728         BuchiCegarLoop]: Abstraction has 203 states and 207 transitions.
[2020-11-24 18:18:39,025 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 203 states and 207 transitions.
[2020-11-24 18:18:39,029 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 203 to 190.
[2020-11-24 18:18:39,029 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 190 states.
[2020-11-24 18:18:39,029 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 190 states to 190 states and 194 transitions.
[2020-11-24 18:18:39,029 INFO  L751         BuchiCegarLoop]: Abstraction has 190 states and 194 transitions.
[2020-11-24 18:18:39,029 INFO  L631         BuchiCegarLoop]: Abstraction has 190 states and 194 transitions.
[2020-11-24 18:18:39,030 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-24 18:18:39,030 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 190 states and 194 transitions.
[2020-11-24 18:18:39,030 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 18:18:39,031 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 18:18:39,031 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 18:18:39,032 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 18:18:39,032 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L3]                 success_transfer_COINSTO0 := false;
[L3]                 call_transfer_COINSTO0 := false;
[L3]     CALL        call main();
[L3]                 havoc p1;
[L1938]              assume null == 0;
[L1939]  CALL        call this := FreshRefGenerator__success();
[L767]               havoc newRef;
[L768]               assume Alloc[newRef] == false;
[L769]               Alloc[newRef] := true;
[L770]               assume newRef != null;
[L1939]  RET         call this := FreshRefGenerator__success();
[L1940]              assume now >= 0;
[L1941]              assume DType[this] == COINSTO;
[L1942]              assume !revert && gas >= 0;
[L1943]  CALL        call CorralChoice_COINSTO(this);
[L1823]              havoc msgsender_MSG;
[L1824]              havoc msgvalue_MSG;
[L1825]              havoc choice;
[L1826]              havoc a_s23;
[L1827]              havoc b_s23;
[L1828]              havoc c_s23;
[L1829]              havoc a_s45;
[L1830]              havoc b_s45;
[L1831]              havoc c_s45;
[L1832]              havoc a_s73;
[L1833]              havoc b_s73;
[L1834]              havoc c_s73;
[L1835]              havoc a_s95;
[L1836]              havoc b_s95;
[L1837]              havoc c_s95;
[L1838]              havoc __ret_0_totalSupply;
[L1839]              havoc tokenOwner_s328;
[L1840]              havoc balance_s328;
[L1841]              havoc tokenOwner_s474;
[L1842]              havoc spender_s474;
[L1843]              havoc remaining_s474;
[L1844]              havoc to_s371;
[L1845]              havoc tokens_s371;
[L1846]              havoc success_s371;
[L1847]              havoc spender_s399;
[L1848]              havoc tokens_s399;
[L1849]              havoc success_s399;
[L1850]              havoc from_s458;
[L1851]              havoc to_s458;
[L1852]              havoc tokens_s458;
[L1853]              havoc success_s458;
[L1854]              havoc __ret_0_owner;
[L1855]              havoc __ret_0_newOwner;
[L1856]              havoc _newOwner_s217;
[L1857]              havoc __ret_0_symbol;
[L1858]              havoc __ret_0_name;
[L1859]              havoc __ret_0_decimals;
[L1860]              havoc __ret_0__totalSupply;
[L1861]              havoc spender_s517;
[L1862]              havoc tokens_s517;
[L1863]              havoc data_s517;
[L1864]              havoc success_s517;
[L1865]              havoc tokenAddress_s544;
[L1866]              havoc tokens_s544;
[L1867]              havoc success_s544;
[L1868]              havoc tmpNow;
[L1869]              havoc gas;
[L1870]              assume gas > 4000000 && gas <= 8000000;
[L1871]              tmpNow := now;
[L1872]              havoc now;
[L1873]              assume now > tmpNow;
[L1874]              assume msgsender_MSG != null;
[L1875]  COND FALSE  !(choice == 8)
[L1883]  COND FALSE  !(choice == 7)
[L1891]  COND FALSE  !(choice == 6)
[L1897]  COND FALSE  !(choice == 5)
[L1903]  COND FALSE  !(choice == 4)
[L1909]  COND TRUE   choice == 3
[L1910]              gas := gas - 21000;
[L1911]  COND TRUE   gas >= 0
[L1912]              assume tokens_s371 >= 0 && tokens_s371 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1913]              assume msgvalue_MSG == 0;
[L1914]  CALL        call success_s371 := transfer~address~uint256_COINSTO(this, msgsender_MSG, msgvalue_MSG, to_s371, tokens_s371);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != to_s371) && msgsender_MSG != to_s371) && tokens_s371 <= balances_COINSTO[this][msgsender_MSG]) && balances_COINSTO[this][to_s371] + tokens_s371 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && tokens_s371 >= 0) && tokens_s371 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_COINSTO[this][to_s371] >= 0) && balances_COINSTO[this][to_s371] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_COINSTO[this][msgsender_MSG] >= 0) && balances_COINSTO[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_COINSTO0 := true;
[L3]                 call_transfer_COINSTO0 := false;
[L3]                 revert := revert_hold;
[L292]               havoc __exception;
[L293]               revert := false;
[L294]   COND TRUE   __exception
[L295]               __tmp__Balance := Balance;
[L296]               __tmp__DType := DType;
[L297]               __tmp__Alloc := Alloc;
[L298]               __tmp__balance_ADDR := balance_ADDR;
[L299]               __tmp__M_Ref_int := M_Ref_int;
[L300]               __tmp__sum_balances0 := sum_balances0;
[L301]               __tmp__alloc_allowed_COINSTO_lvl0 := alloc_allowed_COINSTO_lvl0;
[L302]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L303]               __tmp__sum_allowed1 := sum_allowed1;
[L304]               __tmp__Length := Length;
[L305]               __tmp__now := now;
[L306]               __tmp__owner_Owned := owner_Owned;
[L307]               __tmp__newOwner_Owned := newOwner_Owned;
[L308]               __tmp__symbol_COINSTO := symbol_COINSTO;
[L309]               __tmp__name_COINSTO := name_COINSTO;
[L310]               __tmp__decimals_COINSTO := decimals_COINSTO;
[L311]               __tmp___totalSupply_COINSTO := _totalSupply_COINSTO;
[L312]               __tmp__balances_COINSTO := balances_COINSTO;
[L313]               __tmp__allowed_COINSTO := allowed_COINSTO;
[L314]   CALL        call success_s371 := transfer~address~uint256_COINSTO__fail(this, msgsender_MSG, msgvalue_MSG, to_s371, tokens_s371);
[L841]   COND TRUE   __tmp__DType[this] == COINSTO
[L842]   CALL        call __var_2 := safeSub~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balances_COINSTO[this][msgsender_MSG], tokens_s371);
[L793]   COND FALSE  !(!(b_s45 <= a_s45))
[L797]               c_s45 := (a_s45 - b_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L842]   RET         call __var_2 := safeSub~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balances_COINSTO[this][msgsender_MSG], tokens_s371);
[L843]   COND TRUE   revert
[L314]   RET         call success_s371 := transfer~address~uint256_COINSTO__fail(this, msgsender_MSG, msgvalue_MSG, to_s371, tokens_s371);
[L315]               assume revert || gas < 0;
[L1914]  RET         call success_s371 := transfer~address~uint256_COINSTO(this, msgsender_MSG, msgvalue_MSG, to_s371, tokens_s371);
[L1943]  RET         call CorralChoice_COINSTO(this);

Loop:
[L1943]        assume true;

[2020-11-24 18:18:39,034 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 18:18:39,034 INFO  L82        PathProgramCache]: Analyzing trace with hash 1538219569, now seen corresponding path program 1 times
[2020-11-24 18:18:39,035 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 18:18:39,043 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 18:18:39,070 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 18:18:39,071 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 18:18:39,071 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [5] imperfect sequences [] total 5
[2020-11-24 18:18:39,071 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 18:18:39,071 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 5 interpolants.
[2020-11-24 18:18:39,072 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=9, Invalid=11, Unknown=0, NotChecked=0, Total=20
[2020-11-24 18:18:39,072 INFO  L87              Difference]: Start difference. First operand 190 states and 194 transitions. cyclomatic complexity: 5 Second operand 5 states.
[2020-11-24 18:18:39,089 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 18:18:39,090 INFO  L93              Difference]: Finished difference Result 201 states and 203 transitions.
[2020-11-24 18:18:39,090 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-24 18:18:39,090 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 201 states and 203 transitions.
[2020-11-24 18:18:39,091 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 2
[2020-11-24 18:18:39,092 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 201 states to 201 states and 203 transitions.
[2020-11-24 18:18:39,092 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 201
[2020-11-24 18:18:39,093 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 201
[2020-11-24 18:18:39,093 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 201 states and 203 transitions.
[2020-11-24 18:18:39,093 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 18:18:39,093 INFO  L728         BuchiCegarLoop]: Abstraction has 201 states and 203 transitions.
[2020-11-24 18:18:39,093 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 201 states and 203 transitions.
[2020-11-24 18:18:39,096 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 201 to 190.
[2020-11-24 18:18:39,096 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 190 states.
[2020-11-24 18:18:39,096 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 190 states to 190 states and 192 transitions.
[2020-11-24 18:18:39,097 INFO  L751         BuchiCegarLoop]: Abstraction has 190 states and 192 transitions.
[2020-11-24 18:18:39,097 INFO  L631         BuchiCegarLoop]: Abstraction has 190 states and 192 transitions.
[2020-11-24 18:18:39,097 INFO  L445         BuchiCegarLoop]: ======== Iteration 5============
[2020-11-24 18:18:39,097 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 190 states and 192 transitions.
[2020-11-24 18:18:39,098 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 18:18:39,098 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 18:18:39,098 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 18:18:39,099 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 18:18:39,099 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L3]                 success_transfer_COINSTO0 := false;
[L3]                 call_transfer_COINSTO0 := false;
[L3]     CALL        call main();
[L3]                 havoc p1;
[L1938]              assume null == 0;
[L1939]  CALL        call this := FreshRefGenerator__success();
[L767]               havoc newRef;
[L768]               assume Alloc[newRef] == false;
[L769]               Alloc[newRef] := true;
[L770]               assume newRef != null;
[L1939]  RET         call this := FreshRefGenerator__success();
[L1940]              assume now >= 0;
[L1941]              assume DType[this] == COINSTO;
[L1942]              assume !revert && gas >= 0;
[L1943]  CALL        call CorralChoice_COINSTO(this);
[L1823]              havoc msgsender_MSG;
[L1824]              havoc msgvalue_MSG;
[L1825]              havoc choice;
[L1826]              havoc a_s23;
[L1827]              havoc b_s23;
[L1828]              havoc c_s23;
[L1829]              havoc a_s45;
[L1830]              havoc b_s45;
[L1831]              havoc c_s45;
[L1832]              havoc a_s73;
[L1833]              havoc b_s73;
[L1834]              havoc c_s73;
[L1835]              havoc a_s95;
[L1836]              havoc b_s95;
[L1837]              havoc c_s95;
[L1838]              havoc __ret_0_totalSupply;
[L1839]              havoc tokenOwner_s328;
[L1840]              havoc balance_s328;
[L1841]              havoc tokenOwner_s474;
[L1842]              havoc spender_s474;
[L1843]              havoc remaining_s474;
[L1844]              havoc to_s371;
[L1845]              havoc tokens_s371;
[L1846]              havoc success_s371;
[L1847]              havoc spender_s399;
[L1848]              havoc tokens_s399;
[L1849]              havoc success_s399;
[L1850]              havoc from_s458;
[L1851]              havoc to_s458;
[L1852]              havoc tokens_s458;
[L1853]              havoc success_s458;
[L1854]              havoc __ret_0_owner;
[L1855]              havoc __ret_0_newOwner;
[L1856]              havoc _newOwner_s217;
[L1857]              havoc __ret_0_symbol;
[L1858]              havoc __ret_0_name;
[L1859]              havoc __ret_0_decimals;
[L1860]              havoc __ret_0__totalSupply;
[L1861]              havoc spender_s517;
[L1862]              havoc tokens_s517;
[L1863]              havoc data_s517;
[L1864]              havoc success_s517;
[L1865]              havoc tokenAddress_s544;
[L1866]              havoc tokens_s544;
[L1867]              havoc success_s544;
[L1868]              havoc tmpNow;
[L1869]              havoc gas;
[L1870]              assume gas > 4000000 && gas <= 8000000;
[L1871]              tmpNow := now;
[L1872]              havoc now;
[L1873]              assume now > tmpNow;
[L1874]              assume msgsender_MSG != null;
[L1875]  COND FALSE  !(choice == 8)
[L1883]  COND FALSE  !(choice == 7)
[L1891]  COND FALSE  !(choice == 6)
[L1897]  COND FALSE  !(choice == 5)
[L1903]  COND FALSE  !(choice == 4)
[L1909]  COND TRUE   choice == 3
[L1910]              gas := gas - 21000;
[L1911]  COND TRUE   gas >= 0
[L1912]              assume tokens_s371 >= 0 && tokens_s371 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1913]              assume msgvalue_MSG == 0;
[L1914]  CALL        call success_s371 := transfer~address~uint256_COINSTO(this, msgsender_MSG, msgvalue_MSG, to_s371, tokens_s371);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != to_s371) && msgsender_MSG != to_s371) && tokens_s371 <= balances_COINSTO[this][msgsender_MSG]) && balances_COINSTO[this][to_s371] + tokens_s371 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && tokens_s371 >= 0) && tokens_s371 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_COINSTO[this][to_s371] >= 0) && balances_COINSTO[this][to_s371] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_COINSTO[this][msgsender_MSG] >= 0) && balances_COINSTO[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_COINSTO0 := true;
[L3]                 call_transfer_COINSTO0 := false;
[L3]                 revert := revert_hold;
[L292]               havoc __exception;
[L293]               revert := false;
[L294]   COND FALSE  !(__exception)
[L317]   CALL        call success_s371 := transfer~address~uint256_COINSTO__success(this, msgsender_MSG, msgvalue_MSG, to_s371, tokens_s371);
[L871]   COND TRUE   DType[this] == COINSTO
[L872]   CALL        call __var_2 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_COINSTO[this][msgsender_MSG], tokens_s371);
[L802]   COND FALSE  !(!(b_s45 <= a_s45))
[L806]               c_s45 := (a_s45 - b_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L872]   RET         call __var_2 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_COINSTO[this][msgsender_MSG], tokens_s371);
[L873]   COND FALSE  !(revert)
[L879]               sum_balances0[this] := sum_balances0[this] - balances_COINSTO[this][msgsender_MSG];
[L880]               balances_COINSTO[this][msgsender_MSG] := __var_2;
[L881]               sum_balances0[this] := sum_balances0[this] + balances_COINSTO[this][msgsender_MSG];
[L882]   COND TRUE   DType[this] == COINSTO
[L883]   CALL        call __var_3 := safeAdd~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_COINSTO[this][to_s371], tokens_s371);
[L784]               c_s23 := (a_s23 + b_s23) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L785]   COND FALSE  !(!(c_s23 >= a_s23))
[L883]   RET         call __var_3 := safeAdd~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, balances_COINSTO[this][to_s371], tokens_s371);
[L884]   COND FALSE  !(revert)
[L890]               sum_balances0[this] := sum_balances0[this] - balances_COINSTO[this][to_s371];
[L891]               balances_COINSTO[this][to_s371] := __var_3;
[L892]               sum_balances0[this] := sum_balances0[this] + balances_COINSTO[this][to_s371];
[L893]               assert { :EventEmitted "Transfer_COINSTO" } true;
[L894]               success_s371 := true;
[L317]   RET         call success_s371 := transfer~address~uint256_COINSTO__success(this, msgsender_MSG, msgvalue_MSG, to_s371, tokens_s371);
[L318]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !((((((((((success_s371 == true && balances_COINSTO[this][msgsender_MSG] == old(balances_COINSTO[this][msgsender_MSG]) - tokens_s371) && balances_COINSTO[this][to_s371] == old(balances_COINSTO[this][to_s371]) + tokens_s371) && _totalSupply_COINSTO[this] == old(_totalSupply_COINSTO[this])) && allowed_COINSTO[this] == old(allowed_COINSTO[this])) && balances_COINSTO[this][p1] == old(balances_COINSTO[this][p1])) && symbol_COINSTO[this] == old(symbol_COINSTO[this])) && name_COINSTO[this] == old(name_COINSTO[this])) && decimals_COINSTO[this] == old(decimals_COINSTO[this])) && owner_Owned[this] == old(owner_Owned[this])) && newOwner_Owned[this] == old(newOwner_Owned[this]));
[L3]                 revert := revert_hold;
[L1914]  RET         call success_s371 := transfer~address~uint256_COINSTO(this, msgsender_MSG, msgvalue_MSG, to_s371, tokens_s371);
[L1943]  RET         call CorralChoice_COINSTO(this);

Loop:
[L1943]        assume true;

[2020-11-24 18:18:39,101 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 18:18:39,101 INFO  L82        PathProgramCache]: Analyzing trace with hash 176311409, now seen corresponding path program 1 times
[2020-11-24 18:18:39,102 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 18:18:39,147 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 18:18:39,463 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 18:18:39,464 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 18:18:39,464 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [14] imperfect sequences [] total 14
[2020-11-24 18:18:39,465 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 18:18:39,465 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 14 interpolants.
[2020-11-24 18:18:39,465 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=29, Invalid=153, Unknown=0, NotChecked=0, Total=182
[2020-11-24 18:18:39,466 INFO  L87              Difference]: Start difference. First operand 190 states and 192 transitions. cyclomatic complexity: 3 Second operand 14 states.
[2020-11-24 18:18:39,867 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 18:18:39,868 INFO  L93              Difference]: Finished difference Result 189 states and 190 transitions.
[2020-11-24 18:18:39,868 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 14 states. 
[2020-11-24 18:18:39,868 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 189 states and 190 transitions.
[2020-11-24 18:18:39,870 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 18:18:39,870 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 189 states to 154 states and 155 transitions.
[2020-11-24 18:18:39,871 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 154
[2020-11-24 18:18:39,871 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 154
[2020-11-24 18:18:39,871 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 154 states and 155 transitions.
[2020-11-24 18:18:39,871 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 18:18:39,871 INFO  L728         BuchiCegarLoop]: Abstraction has 154 states and 155 transitions.
[2020-11-24 18:18:39,872 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 154 states and 155 transitions.
[2020-11-24 18:18:39,873 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 154 to 154.
[2020-11-24 18:18:39,873 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 154 states.
[2020-11-24 18:18:39,874 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 154 states to 154 states and 155 transitions.
[2020-11-24 18:18:39,874 INFO  L751         BuchiCegarLoop]: Abstraction has 154 states and 155 transitions.
[2020-11-24 18:18:39,874 INFO  L631         BuchiCegarLoop]: Abstraction has 154 states and 155 transitions.
[2020-11-24 18:18:39,874 INFO  L445         BuchiCegarLoop]: ======== Iteration 6============
[2020-11-24 18:18:39,874 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 154 states and 155 transitions.
[2020-11-24 18:18:39,875 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 18:18:39,876 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 18:18:39,876 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 18:18:39,877 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 18:18:39,877 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L3]                 success_transfer_COINSTO0 := false;
[L3]                 call_transfer_COINSTO0 := false;
[L3]     CALL        call main();
[L3]                 havoc p1;
[L1938]              assume null == 0;
[L1939]  CALL        call this := FreshRefGenerator__success();
[L767]               havoc newRef;
[L768]               assume Alloc[newRef] == false;
[L769]               Alloc[newRef] := true;
[L770]               assume newRef != null;
[L1939]  RET         call this := FreshRefGenerator__success();
[L1940]              assume now >= 0;
[L1941]              assume DType[this] == COINSTO;
[L1942]              assume !revert && gas >= 0;
[L1943]  CALL        call CorralChoice_COINSTO(this);
[L1823]              havoc msgsender_MSG;
[L1824]              havoc msgvalue_MSG;
[L1825]              havoc choice;
[L1826]              havoc a_s23;
[L1827]              havoc b_s23;
[L1828]              havoc c_s23;
[L1829]              havoc a_s45;
[L1830]              havoc b_s45;
[L1831]              havoc c_s45;
[L1832]              havoc a_s73;
[L1833]              havoc b_s73;
[L1834]              havoc c_s73;
[L1835]              havoc a_s95;
[L1836]              havoc b_s95;
[L1837]              havoc c_s95;
[L1838]              havoc __ret_0_totalSupply;
[L1839]              havoc tokenOwner_s328;
[L1840]              havoc balance_s328;
[L1841]              havoc tokenOwner_s474;
[L1842]              havoc spender_s474;
[L1843]              havoc remaining_s474;
[L1844]              havoc to_s371;
[L1845]              havoc tokens_s371;
[L1846]              havoc success_s371;
[L1847]              havoc spender_s399;
[L1848]              havoc tokens_s399;
[L1849]              havoc success_s399;
[L1850]              havoc from_s458;
[L1851]              havoc to_s458;
[L1852]              havoc tokens_s458;
[L1853]              havoc success_s458;
[L1854]              havoc __ret_0_owner;
[L1855]              havoc __ret_0_newOwner;
[L1856]              havoc _newOwner_s217;
[L1857]              havoc __ret_0_symbol;
[L1858]              havoc __ret_0_name;
[L1859]              havoc __ret_0_decimals;
[L1860]              havoc __ret_0__totalSupply;
[L1861]              havoc spender_s517;
[L1862]              havoc tokens_s517;
[L1863]              havoc data_s517;
[L1864]              havoc success_s517;
[L1865]              havoc tokenAddress_s544;
[L1866]              havoc tokens_s544;
[L1867]              havoc success_s544;
[L1868]              havoc tmpNow;
[L1869]              havoc gas;
[L1870]              assume gas > 4000000 && gas <= 8000000;
[L1871]              tmpNow := now;
[L1872]              havoc now;
[L1873]              assume now > tmpNow;
[L1874]              assume msgsender_MSG != null;
[L1875]  COND FALSE  !(choice == 8)
[L1883]  COND FALSE  !(choice == 7)
[L1891]  COND FALSE  !(choice == 6)
[L1897]  COND FALSE  !(choice == 5)
[L1903]  COND FALSE  !(choice == 4)
[L1909]  COND TRUE   choice == 3
[L1910]              gas := gas - 21000;
[L1911]  COND TRUE   gas >= 0
[L1912]              assume tokens_s371 >= 0 && tokens_s371 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1913]              assume msgvalue_MSG == 0;
[L1914]  CALL        call success_s371 := transfer~address~uint256_COINSTO(this, msgsender_MSG, msgvalue_MSG, to_s371, tokens_s371);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != to_s371) && msgsender_MSG != to_s371) && tokens_s371 <= balances_COINSTO[this][msgsender_MSG]) && balances_COINSTO[this][to_s371] + tokens_s371 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && tokens_s371 >= 0) && tokens_s371 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_COINSTO[this][to_s371] >= 0) && balances_COINSTO[this][to_s371] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_COINSTO[this][msgsender_MSG] >= 0) && balances_COINSTO[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_COINSTO0 := true;
[L3]                 call_transfer_COINSTO0 := false;
[L3]                 revert := revert_hold;
[L292]               havoc __exception;
[L293]               revert := false;
[L294]   COND TRUE   __exception
[L295]               __tmp__Balance := Balance;
[L296]               __tmp__DType := DType;
[L297]               __tmp__Alloc := Alloc;
[L298]               __tmp__balance_ADDR := balance_ADDR;
[L299]               __tmp__M_Ref_int := M_Ref_int;
[L300]               __tmp__sum_balances0 := sum_balances0;
[L301]               __tmp__alloc_allowed_COINSTO_lvl0 := alloc_allowed_COINSTO_lvl0;
[L302]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L303]               __tmp__sum_allowed1 := sum_allowed1;
[L304]               __tmp__Length := Length;
[L305]               __tmp__now := now;
[L306]               __tmp__owner_Owned := owner_Owned;
[L307]               __tmp__newOwner_Owned := newOwner_Owned;
[L308]               __tmp__symbol_COINSTO := symbol_COINSTO;
[L309]               __tmp__name_COINSTO := name_COINSTO;
[L310]               __tmp__decimals_COINSTO := decimals_COINSTO;
[L311]               __tmp___totalSupply_COINSTO := _totalSupply_COINSTO;
[L312]               __tmp__balances_COINSTO := balances_COINSTO;
[L313]               __tmp__allowed_COINSTO := allowed_COINSTO;
[L314]   CALL        call success_s371 := transfer~address~uint256_COINSTO__fail(this, msgsender_MSG, msgvalue_MSG, to_s371, tokens_s371);
[L841]   COND TRUE   __tmp__DType[this] == COINSTO
[L842]   CALL        call __var_2 := safeSub~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balances_COINSTO[this][msgsender_MSG], tokens_s371);
[L793]   COND FALSE  !(!(b_s45 <= a_s45))
[L797]               c_s45 := (a_s45 - b_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L842]   RET         call __var_2 := safeSub~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balances_COINSTO[this][msgsender_MSG], tokens_s371);
[L843]   COND FALSE  !(revert)
[L849]               __tmp__sum_balances0[this] := __tmp__sum_balances0[this] - __tmp__balances_COINSTO[this][msgsender_MSG];
[L850]               __tmp__balances_COINSTO[this][msgsender_MSG] := __var_2;
[L851]               __tmp__sum_balances0[this] := __tmp__sum_balances0[this] + __tmp__balances_COINSTO[this][msgsender_MSG];
[L852]   COND TRUE   __tmp__DType[this] == COINSTO
[L853]   CALL        call __var_3 := safeAdd~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balances_COINSTO[this][to_s371], tokens_s371);
[L775]               c_s23 := (a_s23 + b_s23) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L776]   COND TRUE   !(c_s23 >= a_s23)
[L777]               revert := true;
[L853]   RET         call __var_3 := safeAdd~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balances_COINSTO[this][to_s371], tokens_s371);
[L854]   COND TRUE   revert
[L314]   RET         call success_s371 := transfer~address~uint256_COINSTO__fail(this, msgsender_MSG, msgvalue_MSG, to_s371, tokens_s371);
[L315]               assume revert || gas < 0;
[L1914]  RET         call success_s371 := transfer~address~uint256_COINSTO(this, msgsender_MSG, msgvalue_MSG, to_s371, tokens_s371);
[L1943]  RET         call CorralChoice_COINSTO(this);

Loop:
[L1943]        assume true;

[2020-11-24 18:18:39,879 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 18:18:39,879 INFO  L82        PathProgramCache]: Analyzing trace with hash 1594926182, now seen corresponding path program 1 times
[2020-11-24 18:18:39,880 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 18:18:39,890 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 18:18:39,969 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 18:18:39,969 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 18:18:39,969 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [9] imperfect sequences [] total 9
[2020-11-24 18:18:39,969 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 18:18:39,970 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 9 interpolants.
[2020-11-24 18:18:39,970 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=16, Invalid=56, Unknown=0, NotChecked=0, Total=72
[2020-11-24 18:18:39,970 INFO  L87              Difference]: Start difference. First operand 154 states and 155 transitions. cyclomatic complexity: 2 Second operand 9 states.
[2020-11-24 18:18:40,036 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 18:18:40,037 INFO  L93              Difference]: Finished difference Result 156 states and 156 transitions.
[2020-11-24 18:18:40,037 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 10 states. 
[2020-11-24 18:18:40,037 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 156 states and 156 transitions.
[2020-11-24 18:18:40,038 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 18:18:40,039 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 156 states to 149 states and 149 transitions.
[2020-11-24 18:18:40,039 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 149
[2020-11-24 18:18:40,039 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 149
[2020-11-24 18:18:40,039 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 149 states and 149 transitions.
[2020-11-24 18:18:40,039 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 18:18:40,040 INFO  L728         BuchiCegarLoop]: Abstraction has 149 states and 149 transitions.
[2020-11-24 18:18:40,040 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 149 states and 149 transitions.
[2020-11-24 18:18:40,041 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 149 to 149.
[2020-11-24 18:18:40,041 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 149 states.
[2020-11-24 18:18:40,042 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 149 states to 149 states and 149 transitions.
[2020-11-24 18:18:40,042 INFO  L751         BuchiCegarLoop]: Abstraction has 149 states and 149 transitions.
[2020-11-24 18:18:40,042 INFO  L631         BuchiCegarLoop]: Abstraction has 149 states and 149 transitions.
[2020-11-24 18:18:40,042 INFO  L445         BuchiCegarLoop]: ======== Iteration 7============
[2020-11-24 18:18:40,042 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 149 states and 149 transitions.
[2020-11-24 18:18:40,043 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 18:18:40,043 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 18:18:40,043 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 18:18:40,044 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 18:18:40,044 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L3]                 success_transfer_COINSTO0 := false;
[L3]                 call_transfer_COINSTO0 := false;
[L3]     CALL        call main();
[L3]                 havoc p1;
[L1938]              assume null == 0;
[L1939]  CALL        call this := FreshRefGenerator__success();
[L767]               havoc newRef;
[L768]               assume Alloc[newRef] == false;
[L769]               Alloc[newRef] := true;
[L770]               assume newRef != null;
[L1939]  RET         call this := FreshRefGenerator__success();
[L1940]              assume now >= 0;
[L1941]              assume DType[this] == COINSTO;
[L1942]              assume !revert && gas >= 0;
[L1943]  CALL        call CorralChoice_COINSTO(this);
[L1823]              havoc msgsender_MSG;
[L1824]              havoc msgvalue_MSG;
[L1825]              havoc choice;
[L1826]              havoc a_s23;
[L1827]              havoc b_s23;
[L1828]              havoc c_s23;
[L1829]              havoc a_s45;
[L1830]              havoc b_s45;
[L1831]              havoc c_s45;
[L1832]              havoc a_s73;
[L1833]              havoc b_s73;
[L1834]              havoc c_s73;
[L1835]              havoc a_s95;
[L1836]              havoc b_s95;
[L1837]              havoc c_s95;
[L1838]              havoc __ret_0_totalSupply;
[L1839]              havoc tokenOwner_s328;
[L1840]              havoc balance_s328;
[L1841]              havoc tokenOwner_s474;
[L1842]              havoc spender_s474;
[L1843]              havoc remaining_s474;
[L1844]              havoc to_s371;
[L1845]              havoc tokens_s371;
[L1846]              havoc success_s371;
[L1847]              havoc spender_s399;
[L1848]              havoc tokens_s399;
[L1849]              havoc success_s399;
[L1850]              havoc from_s458;
[L1851]              havoc to_s458;
[L1852]              havoc tokens_s458;
[L1853]              havoc success_s458;
[L1854]              havoc __ret_0_owner;
[L1855]              havoc __ret_0_newOwner;
[L1856]              havoc _newOwner_s217;
[L1857]              havoc __ret_0_symbol;
[L1858]              havoc __ret_0_name;
[L1859]              havoc __ret_0_decimals;
[L1860]              havoc __ret_0__totalSupply;
[L1861]              havoc spender_s517;
[L1862]              havoc tokens_s517;
[L1863]              havoc data_s517;
[L1864]              havoc success_s517;
[L1865]              havoc tokenAddress_s544;
[L1866]              havoc tokens_s544;
[L1867]              havoc success_s544;
[L1868]              havoc tmpNow;
[L1869]              havoc gas;
[L1870]              assume gas > 4000000 && gas <= 8000000;
[L1871]              tmpNow := now;
[L1872]              havoc now;
[L1873]              assume now > tmpNow;
[L1874]              assume msgsender_MSG != null;
[L1875]  COND FALSE  !(choice == 8)
[L1883]  COND FALSE  !(choice == 7)
[L1891]  COND FALSE  !(choice == 6)
[L1897]  COND FALSE  !(choice == 5)
[L1903]  COND FALSE  !(choice == 4)
[L1909]  COND TRUE   choice == 3
[L1910]              gas := gas - 21000;
[L1911]  COND TRUE   gas >= 0
[L1912]              assume tokens_s371 >= 0 && tokens_s371 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1913]              assume msgvalue_MSG == 0;
[L1914]  CALL        call success_s371 := transfer~address~uint256_COINSTO(this, msgsender_MSG, msgvalue_MSG, to_s371, tokens_s371);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != to_s371) && msgsender_MSG != to_s371) && tokens_s371 <= balances_COINSTO[this][msgsender_MSG]) && balances_COINSTO[this][to_s371] + tokens_s371 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && tokens_s371 >= 0) && tokens_s371 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_COINSTO[this][to_s371] >= 0) && balances_COINSTO[this][to_s371] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_COINSTO[this][msgsender_MSG] >= 0) && balances_COINSTO[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_COINSTO0 := true;
[L3]                 call_transfer_COINSTO0 := false;
[L3]                 revert := revert_hold;
[L292]               havoc __exception;
[L293]               revert := false;
[L294]   COND TRUE   __exception
[L295]               __tmp__Balance := Balance;
[L296]               __tmp__DType := DType;
[L297]               __tmp__Alloc := Alloc;
[L298]               __tmp__balance_ADDR := balance_ADDR;
[L299]               __tmp__M_Ref_int := M_Ref_int;
[L300]               __tmp__sum_balances0 := sum_balances0;
[L301]               __tmp__alloc_allowed_COINSTO_lvl0 := alloc_allowed_COINSTO_lvl0;
[L302]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L303]               __tmp__sum_allowed1 := sum_allowed1;
[L304]               __tmp__Length := Length;
[L305]               __tmp__now := now;
[L306]               __tmp__owner_Owned := owner_Owned;
[L307]               __tmp__newOwner_Owned := newOwner_Owned;
[L308]               __tmp__symbol_COINSTO := symbol_COINSTO;
[L309]               __tmp__name_COINSTO := name_COINSTO;
[L310]               __tmp__decimals_COINSTO := decimals_COINSTO;
[L311]               __tmp___totalSupply_COINSTO := _totalSupply_COINSTO;
[L312]               __tmp__balances_COINSTO := balances_COINSTO;
[L313]               __tmp__allowed_COINSTO := allowed_COINSTO;
[L314]   CALL        call success_s371 := transfer~address~uint256_COINSTO__fail(this, msgsender_MSG, msgvalue_MSG, to_s371, tokens_s371);
[L841]   COND TRUE   __tmp__DType[this] == COINSTO
[L842]   CALL        call __var_2 := safeSub~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balances_COINSTO[this][msgsender_MSG], tokens_s371);
[L793]   COND FALSE  !(!(b_s45 <= a_s45))
[L797]               c_s45 := (a_s45 - b_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L842]   RET         call __var_2 := safeSub~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balances_COINSTO[this][msgsender_MSG], tokens_s371);
[L843]   COND FALSE  !(revert)
[L849]               __tmp__sum_balances0[this] := __tmp__sum_balances0[this] - __tmp__balances_COINSTO[this][msgsender_MSG];
[L850]               __tmp__balances_COINSTO[this][msgsender_MSG] := __var_2;
[L851]               __tmp__sum_balances0[this] := __tmp__sum_balances0[this] + __tmp__balances_COINSTO[this][msgsender_MSG];
[L852]   COND TRUE   __tmp__DType[this] == COINSTO
[L853]   CALL        call __var_3 := safeAdd~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balances_COINSTO[this][to_s371], tokens_s371);
[L775]               c_s23 := (a_s23 + b_s23) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L776]   COND FALSE  !(!(c_s23 >= a_s23))
[L853]   RET         call __var_3 := safeAdd~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balances_COINSTO[this][to_s371], tokens_s371);
[L854]   COND FALSE  !(revert)
[L860]               __tmp__sum_balances0[this] := __tmp__sum_balances0[this] - __tmp__balances_COINSTO[this][to_s371];
[L861]               __tmp__balances_COINSTO[this][to_s371] := __var_3;
[L862]               __tmp__sum_balances0[this] := __tmp__sum_balances0[this] + __tmp__balances_COINSTO[this][to_s371];
[L863]               success_s371 := true;
[L314]   RET         call success_s371 := transfer~address~uint256_COINSTO__fail(this, msgsender_MSG, msgvalue_MSG, to_s371, tokens_s371);
[L315]               assume revert || gas < 0;
[L1914]  RET         call success_s371 := transfer~address~uint256_COINSTO(this, msgsender_MSG, msgvalue_MSG, to_s371, tokens_s371);
[L1943]  RET         call CorralChoice_COINSTO(this);

Loop:
[L1943]        assume true;

[2020-11-24 18:18:40,046 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 18:18:40,046 INFO  L82        PathProgramCache]: Analyzing trace with hash -1240693882, now seen corresponding path program 1 times
[2020-11-24 18:18:40,047 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 18:18:40,054 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 18:18:40,075 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 18:18:40,075 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 18:18:40,075 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [5] imperfect sequences [] total 5
[2020-11-24 18:18:40,075 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 18:18:40,075 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 5 interpolants.
[2020-11-24 18:18:40,075 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=7, Invalid=13, Unknown=0, NotChecked=0, Total=20
[2020-11-24 18:18:40,076 INFO  L87              Difference]: Start difference. First operand 149 states and 149 transitions. cyclomatic complexity: 1 Second operand 5 states.
[2020-11-24 18:18:40,085 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 18:18:40,085 INFO  L93              Difference]: Finished difference Result 142 states and 141 transitions.
[2020-11-24 18:18:40,085 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 5 states. 
[2020-11-24 18:18:40,085 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 142 states and 141 transitions.
[2020-11-24 18:18:40,086 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-24 18:18:40,086 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 142 states to 0 states and 0 transitions.
[2020-11-24 18:18:40,086 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 0
[2020-11-24 18:18:40,086 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 0
[2020-11-24 18:18:40,086 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 0 states and 0 transitions.
[2020-11-24 18:18:40,086 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 18:18:40,086 INFO  L728         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-24 18:18:40,086 INFO  L751         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-24 18:18:40,086 INFO  L631         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-24 18:18:40,087 INFO  L445         BuchiCegarLoop]: ======== Iteration 8============
[2020-11-24 18:18:40,087 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 0 states and 0 transitions.
[2020-11-24 18:18:40,087 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-24 18:18:40,087 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is true
[2020-11-24 18:18:40,091 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 24.11 06:18:40 BasicIcfg
[2020-11-24 18:18:40,091 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-24 18:18:40,091 INFO  L168              Benchmark]: Toolchain (without parser) took 3520.58 ms. Allocated memory was 1.0 GB in the beginning and 1.3 GB in the end (delta: 309.9 MB). Free memory was 940.6 MB in the beginning and 1.2 GB in the end (delta: -253.6 MB). Peak memory consumption was 56.3 MB. Max. memory is 15.3 GB.
[2020-11-24 18:18:40,093 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.21 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-24 18:18:40,093 INFO  L168              Benchmark]: Boogie Preprocessor took 76.39 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 935.2 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-24 18:18:40,093 INFO  L168              Benchmark]: UtopiaSpecLang took 42.28 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 929.8 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-24 18:18:40,094 INFO  L168              Benchmark]: Boogie Printer took 7.23 ms. Allocated memory is still 1.0 GB. Free memory is still 929.8 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-24 18:18:40,094 INFO  L168              Benchmark]: RCFGBuilder took 503.83 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 870.8 MB in the end (delta: 59.1 MB). Peak memory consumption was 59.1 MB. Max. memory is 15.3 GB.
[2020-11-24 18:18:40,094 INFO  L168              Benchmark]: UtopiaLTL2Aut took 38.32 ms. Allocated memory is still 1.0 GB. Free memory was 870.8 MB in the beginning and 867.2 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
[2020-11-24 18:18:40,095 INFO  L168              Benchmark]: BÃ¼chi Program Product took 932.26 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 50.9 MB). Free memory was 867.2 MB in the beginning and 926.3 MB in the end (delta: -59.1 MB). Peak memory consumption was 150.4 MB. Max. memory is 15.3 GB.
[2020-11-24 18:18:40,095 INFO  L168              Benchmark]: BlockEncodingV2 took 78.04 ms. Allocated memory is still 1.1 GB. Free memory was 926.3 MB in the beginning and 895.0 MB in the end (delta: 31.3 MB). Peak memory consumption was 31.3 MB. Max. memory is 15.3 GB.
[2020-11-24 18:18:40,096 INFO  L168              Benchmark]: BuchiAutomizer took 1839.36 ms. Allocated memory was 1.1 GB in the beginning and 1.3 GB in the end (delta: 259.0 MB). Free memory was 895.0 MB in the beginning and 1.2 GB in the end (delta: -299.2 MB). There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-24 18:18:40,099 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    1594 locations, 2712 edges
  - StatisticsResult: Encoded RCFG
    1544 locations, 2582 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.21 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 76.39 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 935.2 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 42.28 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 929.8 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 7.23 ms. Allocated memory is still 1.0 GB. Free memory is still 929.8 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * RCFGBuilder took 503.83 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 870.8 MB in the end (delta: 59.1 MB). Peak memory consumption was 59.1 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 38.32 ms. Allocated memory is still 1.0 GB. Free memory was 870.8 MB in the beginning and 867.2 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 932.26 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 50.9 MB). Free memory was 867.2 MB in the beginning and 926.3 MB in the end (delta: -59.1 MB). Peak memory consumption was 150.4 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 78.04 ms. Allocated memory is still 1.1 GB. Free memory was 926.3 MB in the beginning and 895.0 MB in the end (delta: 31.3 MB). Peak memory consumption was 31.3 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 1839.36 ms. Allocated memory was 1.1 GB in the beginning and 1.3 GB in the end (delta: 259.0 MB). Free memory was 895.0 MB in the beginning and 1.2 GB in the end (delta: -299.2 MB). There was no memory consumed. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    686 locations, 841 edges
  - StatisticsResult: BuchiProgram size
    1594 locations, 2712 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 7 terminating modules (7 trivial, 0 deterministic, 0 nondeterministic). 7 modules have a trivial ranking function, the largest among these consists of 14 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 1.8s and 8 iterations.  TraceHistogramMax:1. Analysis of lassos took 0.7s. Construction of modules took 0.4s. BÃ¼chi inclusion checks took 0.4s. Highest rank in rank-based complementation 0. Minimization of det autom 7. Minimization of nondet autom 0. Automata minimization 0.0s AutomataMinimizationTime, 6 MinimizatonAttempts, 35 StatesRemovedByMinimization, 3 NontrivialMinimizations. Non-live state removal took 0.0s Buchi closure took 0.0s. Biggest automaton had 195 states and ocurred in iteration 2.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 1738 SDtfs, 1595 SDslu, 2958 SDs, 0 SdLazy, 1601 SolverSat, 571 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 0.4s Time	LassoAnalysisResults: nont0 unkn0 SFLI0 SFLT0 conc0 concLT0 SILN0 SILU7 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - AllSpecificationsHoldResult: All specifications hold
    Buchi Automizer proved that the LTL property ! ( ( []( (call_transfer_COINSTO0) ==> ( <>(success_transfer_COINSTO0) ) ) )) holds
RESULT: Ultimate proved your program to be correct!
Received shutdown request...
