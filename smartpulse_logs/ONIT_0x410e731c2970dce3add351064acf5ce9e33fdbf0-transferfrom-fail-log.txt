This is Ultimate 0.1.24-f1553f5-m
[2020-11-24 16:03:01,850 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-24 16:03:01,851 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-24 16:03:01,861 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-24 16:03:01,861 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-24 16:03:01,862 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-24 16:03:01,863 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-24 16:03:01,865 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-24 16:03:01,866 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-24 16:03:01,867 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-24 16:03:01,867 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-24 16:03:01,868 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-24 16:03:01,868 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-24 16:03:01,869 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-24 16:03:01,870 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-24 16:03:01,870 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-24 16:03:01,871 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-24 16:03:01,872 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-24 16:03:01,873 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-24 16:03:01,874 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-24 16:03:01,875 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-24 16:03:01,875 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-24 16:03:01,877 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-24 16:03:01,877 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-24 16:03:01,877 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-24 16:03:01,878 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-24 16:03:01,878 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-24 16:03:01,879 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-24 16:03:01,879 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-24 16:03:01,879 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-24 16:03:01,879 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-24 16:03:01,880 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-24 16:03:01,880 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-24 16:03:01,881 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-24 16:03:01,881 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-24 16:03:01,882 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-24 16:03:01,882 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-24 16:03:01,882 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-24 16:03:01,882 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-24 16:03:01,883 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-24 16:03:01,883 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-24 16:03:01,884 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-24 16:03:01,891 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-24 16:03:01,891 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-24 16:03:01,892 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-24 16:03:01,892 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-24 16:03:01,892 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-24 16:03:01,892 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-24 16:03:01,892 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-24 16:03:01,892 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-24 16:03:01,892 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-24 16:03:01,893 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-24 16:03:01,893 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-24 16:03:01,893 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-24 16:03:01,893 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-24 16:03:01,893 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-24 16:03:01,893 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-24 16:03:01,893 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-24 16:03:01,893 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-24 16:03:01,893 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-24 16:03:01,894 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-24 16:03:01,894 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-24 16:03:01,894 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-24 16:03:01,894 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-24 16:03:01,894 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-24 16:03:01,894 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-24 16:03:01,894 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-24 16:03:01,894 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-24 16:03:01,916 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-24 16:03:01,928 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-24 16:03:01,930 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-24 16:03:01,931 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-24 16:03:01,932 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-24 16:03:01,932 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/ONIT_0x410e731c2970dce3add351064acf5ce9e33fdbf0_transferfrom-fail.bpl
[2020-11-24 16:03:01,932 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/ONIT_0x410e731c2970dce3add351064acf5ce9e33fdbf0_transferfrom-fail.bpl'
[2020-11-24 16:03:02,011 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-24 16:03:02,012 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-24 16:03:02,013 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-24 16:03:02,013 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-24 16:03:02,013 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-24 16:03:02,024 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "ONIT_0x410e731c2970dce3add351064acf5ce9e33fdbf0_transferfrom-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 04:03:02" (1/1) ...
[2020-11-24 16:03:02,025 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "ONIT_0x410e731c2970dce3add351064acf5ce9e33fdbf0_transferfrom-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 04:03:02" (1/1) ...
[2020-11-24 16:03:02,052 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "ONIT_0x410e731c2970dce3add351064acf5ce9e33fdbf0_transferfrom-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 04:03:02" (1/1) ...
[2020-11-24 16:03:02,053 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "ONIT_0x410e731c2970dce3add351064acf5ce9e33fdbf0_transferfrom-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 04:03:02" (1/1) ...
[2020-11-24 16:03:02,072 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "ONIT_0x410e731c2970dce3add351064acf5ce9e33fdbf0_transferfrom-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 04:03:02" (1/1) ...
[2020-11-24 16:03:02,081 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "ONIT_0x410e731c2970dce3add351064acf5ce9e33fdbf0_transferfrom-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 04:03:02" (1/1) ...
[2020-11-24 16:03:02,087 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "ONIT_0x410e731c2970dce3add351064acf5ce9e33fdbf0_transferfrom-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 04:03:02" (1/1) ...
[2020-11-24 16:03:02,095 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-24 16:03:02,095 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-24 16:03:02,095 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-24 16:03:02,097 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-24 16:03:02,101 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "ONIT_0x410e731c2970dce3add351064acf5ce9e33fdbf0_transferfrom-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 04:03:02" (1/1) ...
[2020-11-24 16:03:02,127 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(ONIT.transferFrom(from, to, value), from != to && (value > _balances_ERC20[this][from] || value > _allowed_ERC20[this][from][msg.sender] || _balances_ERC20[this][to] + value >= 0x10000000000000000000000000000000000000000000000000000000000000000) && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][to] >= 0 && _balances_ERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][from] >= 0 &&  _balances_ERC20[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _allowed_ERC20[this][from][msg.sender] >= 0 && _allowed_ERC20[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(reverted(ONIT.transferFrom)))
[2020-11-24 16:03:02,132 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(ONIT.transferFrom(from, to, value), from != to && (value > _balances_ERC20[this][from] || value > _allowed_ERC20[this][from][msg.sender] || _balances_ERC20[this][to] + value >= 0x10000000000000000000000000000000000000000000000000000000000000000) && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][to] >= 0 && _balances_ERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][from] >= 0 &&  _balances_ERC20[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _allowed_ERC20[this][from][msg.sender] >= 0 && _allowed_ERC20[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(reverted(ONIT.transferFrom)))
[2020-11-24 16:03:02,140 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(ONIT.transferFrom(from, to, value), from != to && (value > _balances_ERC20[this][from] || value > _allowed_ERC20[this][from][msg.sender] || _balances_ERC20[this][to] + value >= 0x10000000000000000000000000000000000000000000000000000000000000000) && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][to] >= 0 && _balances_ERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][from] >= 0 &&  _balances_ERC20[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _allowed_ERC20[this][from][msg.sender] >= 0 && _allowed_ERC20[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(reverted(ONIT.transferFrom)))
[2020-11-24 16:03:02,149 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( ( from_s1322!=to_s1322 && ( ( value_s1322>_balances_ERC20[this][from_s1322] || value_s1322>_allowed_ERC20[this][from_s1322][msg.sender] ) || ( _balances_ERC20[this][to_s1322] + value_s1322 )>=115792089237316195423570985008687907853269984665640564039457584007913129639936 ) ) && value_s1322>=0 ) && value_s1322<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && _balances_ERC20[this][to_s1322]>=0 ) && _balances_ERC20[this][to_s1322]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && _balances_ERC20[this][from_s1322]>=0 ) && _balances_ERC20[this][from_s1322]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && _allowed_ERC20[this][from_s1322][msg.sender]>=0 ) && _allowed_ERC20[this][from_s1322][msg.sender]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPNEQ,IdentifierExpression[from_s1322,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ONIT>],IdentifierExpression[to_s1322,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ONIT>]],BinaryExpression[LOGICOR,BinaryExpression[LOGICOR,BinaryExpression[COMPGT,IdentifierExpression[value_s1322,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ONIT>],ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ONIT>]]],[IdentifierExpression[from_s1322,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ONIT>]]]],BinaryExpression[COMPGT,IdentifierExpression[value_s1322,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ONIT>],ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_allowed_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ONIT>]]],[IdentifierExpression[from_s1322,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ONIT>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ONIT>]]]]],BinaryExpression[COMPGEQ,BinaryExpression[ARITHPLUS,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ONIT>]]],[IdentifierExpression[to_s1322,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ONIT>]]],IdentifierExpression[value_s1322,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ONIT>]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]]],BinaryExpression[COMPGEQ,IdentifierExpression[value_s1322,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ONIT>],IntegerLiteral[0]]],BinaryExpression[COMPLT,IdentifierExpression[value_s1322,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ONIT>],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ONIT>]]],[IdentifierExpression[to_s1322,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ONIT>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ONIT>]]],[IdentifierExpression[to_s1322,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ONIT>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ONIT>]]],[IdentifierExpression[from_s1322,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ONIT>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ONIT>]]],[IdentifierExpression[from_s1322,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ONIT>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_allowed_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ONIT>]]],[IdentifierExpression[from_s1322,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ONIT>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ONIT>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_allowed_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ONIT>]]],[IdentifierExpression[from_s1322,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ONIT>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ONIT>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]]
[2020-11-24 16:03:02,155 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(ONIT.transferFrom(from, to, value), from != to && (value > _balances_ERC20[this][from] || value > _allowed_ERC20[this][from][msg.sender] || _balances_ERC20[this][to] + value >= 0x10000000000000000000000000000000000000000000000000000000000000000) && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][to] >= 0 && _balances_ERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][from] >= 0 &&  _balances_ERC20[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _allowed_ERC20[this][from][msg.sender] >= 0 && _allowed_ERC20[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(reverted(ONIT.transferFrom)))
[2020-11-24 16:03:02,155 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_transferFrom_ONIT0) ==> ( <>AP(fail_transferFrom_ONIT0) ) ) )
Executed UtopiaSpecLang
[2020-11-24 16:03:02,164 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 04:03:02 PropertyContainer
[2020-11-24 16:03:02,164 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-24 16:03:02,164 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-24 16:03:02,164 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-24 16:03:02,164 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-24 16:03:02,165 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "ONIT_0x410e731c2970dce3add351064acf5ce9e33fdbf0_transferfrom-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 04:03:02" (1/2) ...
[2020-11-24 16:03:02,165 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-24 16:03:02,165 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-24 16:03:02,181 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 04:03:02" (2/2) ...
[2020-11-24 16:03:02,181 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-24 16:03:02,181 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-24 16:03:02,181 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-24 16:03:02,181 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-24 16:03:02,182 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "ONIT_0x410e731c2970dce3add351064acf5ce9e33fdbf0_transferfrom-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 04:03:02" (1/2) ...
[2020-11-24 16:03:02,234 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-24 16:03:02,234 INFO  L130     BoogieDeclarations]: Found specification of procedure Roles.Role_ctor__success
[2020-11-24 16:03:02,235 INFO  L130     BoogieDeclarations]: Found specification of procedure ONIT.LockInfo_ctor__success
[2020-11-24 16:03:02,235 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__success
[2020-11-24 16:03:02,235 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__success
[2020-11-24 16:03:02,235 INFO  L130     BoogieDeclarations]: Found specification of procedure add~Role~address_Roles__success
[2020-11-24 16:03:02,235 INFO  L130     BoogieDeclarations]: Found specification of procedure has~Role~address_Roles__success
[2020-11-24 16:03:02,235 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_IERC20
[2020-11-24 16:03:02,235 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_IERC20
[2020-11-24 16:03:02,235 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_IERC20
[2020-11-24 16:03:02,235 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20
[2020-11-24 16:03:02,235 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ERC20
[2020-11-24 16:03:02,235 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20
[2020-11-24 16:03:02,235 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ERC20
[2020-11-24 16:03:02,236 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20
[2020-11-24 16:03:02,236 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ERC20
[2020-11-24 16:03:02,236 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20
[2020-11-24 16:03:02,236 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20
[2020-11-24 16:03:02,236 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20
[2020-11-24 16:03:02,236 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ERC20
[2020-11-24 16:03:02,236 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20
[2020-11-24 16:03:02,236 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20
[2020-11-24 16:03:02,236 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_ERC20__success
[2020-11-24 16:03:02,236 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20Pausable
[2020-11-24 16:03:02,237 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20Pausable
[2020-11-24 16:03:02,237 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20Pausable
[2020-11-24 16:03:02,237 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20Pausable
[2020-11-24 16:03:02,237 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ONIT
[2020-11-24 16:03:02,237 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ONIT
[2020-11-24 16:03:02,237 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ONIT
[2020-11-24 16:03:02,237 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ONIT
[2020-11-24 16:03:02,237 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ONIT
[2020-11-24 16:03:02,237 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ONIT
[2020-11-24 16:03:02,237 INFO  L130     BoogieDeclarations]: Found specification of procedure _unlock~address~uint256_ONIT__success
[2020-11-24 16:03:02,237 INFO  L130     BoogieDeclarations]: Found specification of procedure _autoUnlock~address_ONIT__success
[2020-11-24 16:03:02,237 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-24 16:03:02,238 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-24 16:03:02,238 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-24 16:03:02,238 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__success
[2020-11-24 16:03:02,238 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyNewOwner_pre__success
[2020-11-24 16:03:02,238 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyPauser_pre__success
[2020-11-24 16:03:02,238 INFO  L130     BoogieDeclarations]: Found specification of procedure whenNotPaused_pre__success
[2020-11-24 16:03:02,238 INFO  L130     BoogieDeclarations]: Found specification of procedure whenPaused_pre__success
[2020-11-24 16:03:02,238 INFO  L130     BoogieDeclarations]: Found specification of procedure notFrozen_pre__success
[2020-11-24 16:03:02,238 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_SafeMath
[2020-11-24 16:03:02,238 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_SafeMath
[2020-11-24 16:03:02,238 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_Roles
[2020-11-24 16:03:02,239 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_Roles
[2020-11-24 16:03:02,239 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_Ownable
[2020-11-24 16:03:02,239 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_Ownable
[2020-11-24 16:03:02,239 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_PauserRole
[2020-11-24 16:03:02,239 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_PauserRole
[2020-11-24 16:03:02,239 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_Pausable
[2020-11-24 16:03:02,239 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_Pausable
[2020-11-24 16:03:02,239 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_IERC20
[2020-11-24 16:03:02,239 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_IERC20
[2020-11-24 16:03:02,239 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20
[2020-11-24 16:03:02,240 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20
[2020-11-24 16:03:02,240 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20Pausable
[2020-11-24 16:03:02,240 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20Pausable
[2020-11-24 16:03:02,240 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20Detailed
[2020-11-24 16:03:02,240 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20Detailed
[2020-11-24 16:03:02,240 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ONIT
[2020-11-24 16:03:02,240 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-24 16:03:02,240 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-24 16:03:02,240 INFO  L130     BoogieDeclarations]: Found specification of procedure Roles.Role_ctor__fail
[2020-11-24 16:03:02,240 INFO  L130     BoogieDeclarations]: Found specification of procedure ONIT.LockInfo_ctor__fail
[2020-11-24 16:03:02,241 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-24 16:03:02,241 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__fail
[2020-11-24 16:03:02,241 INFO  L130     BoogieDeclarations]: Found specification of procedure add~Role~address_Roles__fail
[2020-11-24 16:03:02,241 INFO  L130     BoogieDeclarations]: Found specification of procedure has~Role~address_Roles__fail
[2020-11-24 16:03:02,241 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20__success
[2020-11-24 16:03:02,241 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20__fail
[2020-11-24 16:03:02,241 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20__success
[2020-11-24 16:03:02,241 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20__fail
[2020-11-24 16:03:02,241 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20__success
[2020-11-24 16:03:02,241 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20__fail
[2020-11-24 16:03:02,242 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20__success
[2020-11-24 16:03:02,242 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20__fail
[2020-11-24 16:03:02,242 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20__success
[2020-11-24 16:03:02,242 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20__fail
[2020-11-24 16:03:02,242 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20__success
[2020-11-24 16:03:02,242 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20__fail
[2020-11-24 16:03:02,242 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_ERC20__fail
[2020-11-24 16:03:02,242 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20Pausable__success
[2020-11-24 16:03:02,242 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20Pausable__fail
[2020-11-24 16:03:02,243 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20Pausable__success
[2020-11-24 16:03:02,243 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20Pausable__fail
[2020-11-24 16:03:02,243 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ONIT__success
[2020-11-24 16:03:02,243 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ONIT__fail
[2020-11-24 16:03:02,243 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ONIT__success
[2020-11-24 16:03:02,243 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ONIT__fail
[2020-11-24 16:03:02,243 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ONIT__success
[2020-11-24 16:03:02,243 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ONIT__fail
[2020-11-24 16:03:02,243 INFO  L130     BoogieDeclarations]: Found specification of procedure _unlock~address~uint256_ONIT__fail
[2020-11-24 16:03:02,243 INFO  L130     BoogieDeclarations]: Found specification of procedure _autoUnlock~address_ONIT__fail
[2020-11-24 16:03:02,244 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-24 16:03:02,244 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-24 16:03:02,244 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-24 16:03:02,244 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__fail
[2020-11-24 16:03:02,244 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyNewOwner_pre__fail
[2020-11-24 16:03:02,244 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyPauser_pre__fail
[2020-11-24 16:03:02,244 INFO  L130     BoogieDeclarations]: Found specification of procedure whenNotPaused_pre__fail
[2020-11-24 16:03:02,244 INFO  L130     BoogieDeclarations]: Found specification of procedure whenPaused_pre__fail
[2020-11-24 16:03:02,244 INFO  L130     BoogieDeclarations]: Found specification of procedure notFrozen_pre__fail
[2020-11-24 16:03:02,244 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-24 16:03:02,245 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-24 16:03:02,245 INFO  L138     BoogieDeclarations]: Found implementation of procedure Roles.Role_ctor__fail
[2020-11-24 16:03:02,245 INFO  L138     BoogieDeclarations]: Found implementation of procedure Roles.Role_ctor__success
[2020-11-24 16:03:02,245 INFO  L138     BoogieDeclarations]: Found implementation of procedure ONIT.LockInfo_ctor__fail
[2020-11-24 16:03:02,245 INFO  L138     BoogieDeclarations]: Found implementation of procedure ONIT.LockInfo_ctor__success
[2020-11-24 16:03:02,245 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-24 16:03:02,245 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__success
[2020-11-24 16:03:02,245 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__fail
[2020-11-24 16:03:02,245 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__success
[2020-11-24 16:03:02,246 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~Role~address_Roles__fail
[2020-11-24 16:03:02,246 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~Role~address_Roles__success
[2020-11-24 16:03:02,246 INFO  L138     BoogieDeclarations]: Found implementation of procedure has~Role~address_Roles__fail
[2020-11-24 16:03:02,246 INFO  L138     BoogieDeclarations]: Found implementation of procedure has~Role~address_Roles__success
[2020-11-24 16:03:02,246 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ERC20__fail
[2020-11-24 16:03:02,246 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ERC20__success
[2020-11-24 16:03:02,246 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ERC20__fail
[2020-11-24 16:03:02,246 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ERC20__success
[2020-11-24 16:03:02,246 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ERC20__fail
[2020-11-24 16:03:02,246 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ERC20__success
[2020-11-24 16:03:02,247 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20__fail
[2020-11-24 16:03:02,247 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20__success
[2020-11-24 16:03:02,247 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ERC20__fail
[2020-11-24 16:03:02,247 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ERC20__success
[2020-11-24 16:03:02,247 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20__fail
[2020-11-24 16:03:02,247 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20__success
[2020-11-24 16:03:02,247 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_ERC20__fail
[2020-11-24 16:03:02,247 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_ERC20__success
[2020-11-24 16:03:02,247 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20Pausable__fail
[2020-11-24 16:03:02,248 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20Pausable__success
[2020-11-24 16:03:02,248 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20Pausable__fail
[2020-11-24 16:03:02,248 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20Pausable__success
[2020-11-24 16:03:02,248 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ONIT__fail
[2020-11-24 16:03:02,248 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ONIT__success
[2020-11-24 16:03:02,248 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ONIT__fail
[2020-11-24 16:03:02,248 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ONIT__success
[2020-11-24 16:03:02,248 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ONIT__fail
[2020-11-24 16:03:02,248 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ONIT__success
[2020-11-24 16:03:02,248 INFO  L138     BoogieDeclarations]: Found implementation of procedure _unlock~address~uint256_ONIT__fail
[2020-11-24 16:03:02,249 INFO  L138     BoogieDeclarations]: Found implementation of procedure _unlock~address~uint256_ONIT__success
[2020-11-24 16:03:02,249 INFO  L138     BoogieDeclarations]: Found implementation of procedure _autoUnlock~address_ONIT__fail
[2020-11-24 16:03:02,249 INFO  L138     BoogieDeclarations]: Found implementation of procedure _autoUnlock~address_ONIT__success
[2020-11-24 16:03:02,249 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-24 16:03:02,249 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-24 16:03:02,249 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-24 16:03:02,249 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-24 16:03:02,249 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-24 16:03:02,249 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-24 16:03:02,250 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__fail
[2020-11-24 16:03:02,250 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__success
[2020-11-24 16:03:02,250 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyNewOwner_pre__fail
[2020-11-24 16:03:02,250 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyNewOwner_pre__success
[2020-11-24 16:03:02,250 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyPauser_pre__fail
[2020-11-24 16:03:02,250 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyPauser_pre__success
[2020-11-24 16:03:02,250 INFO  L138     BoogieDeclarations]: Found implementation of procedure whenNotPaused_pre__fail
[2020-11-24 16:03:02,250 INFO  L138     BoogieDeclarations]: Found implementation of procedure whenNotPaused_pre__success
[2020-11-24 16:03:02,250 INFO  L138     BoogieDeclarations]: Found implementation of procedure whenPaused_pre__fail
[2020-11-24 16:03:02,250 INFO  L138     BoogieDeclarations]: Found implementation of procedure whenPaused_pre__success
[2020-11-24 16:03:02,250 INFO  L138     BoogieDeclarations]: Found implementation of procedure notFrozen_pre__fail
[2020-11-24 16:03:02,251 INFO  L138     BoogieDeclarations]: Found implementation of procedure notFrozen_pre__success
[2020-11-24 16:03:02,251 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_SafeMath
[2020-11-24 16:03:02,251 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_SafeMath
[2020-11-24 16:03:02,251 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_Roles
[2020-11-24 16:03:02,251 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_Roles
[2020-11-24 16:03:02,251 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_Ownable
[2020-11-24 16:03:02,251 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_Ownable
[2020-11-24 16:03:02,251 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_PauserRole
[2020-11-24 16:03:02,251 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_PauserRole
[2020-11-24 16:03:02,251 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_Pausable
[2020-11-24 16:03:02,252 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_Pausable
[2020-11-24 16:03:02,252 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_IERC20
[2020-11-24 16:03:02,252 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_IERC20
[2020-11-24 16:03:02,252 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20
[2020-11-24 16:03:02,252 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20
[2020-11-24 16:03:02,252 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20Pausable
[2020-11-24 16:03:02,252 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20Pausable
[2020-11-24 16:03:02,252 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20Detailed
[2020-11-24 16:03:02,252 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20Detailed
[2020-11-24 16:03:02,252 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ONIT
[2020-11-24 16:03:02,252 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-24 16:03:02,253 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-24 16:03:02,253 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-24 16:03:02,757 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 16:03:02,757 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 16:03:02,971 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-24 16:03:02,971 INFO  L286             CfgBuilder]: Removed 10 assue(true) statements.
[2020-11-24 16:03:02,973 INFO  L202        PluginConnector]: Adding new model ONIT_0x410e731c2970dce3add351064acf5ce9e33fdbf0_transferfrom-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 04:03:02 BoogieIcfgContainer
[2020-11-24 16:03:02,973 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 04:03:02" (2/2) ...
[2020-11-24 16:03:02,973 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-24 16:03:02,973 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@54e7699f and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 04:03:02, skipping insertion in model container
[2020-11-24 16:03:02,973 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-24 16:03:02,974 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-24 16:03:02,974 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-24 16:03:02,975 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-24 16:03:02,975 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "ONIT_0x410e731c2970dce3add351064acf5ce9e33fdbf0_transferfrom-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 04:03:02" (1/3) ...
[2020-11-24 16:03:02,976 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@31e8c4ed and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 04:03:02, skipping insertion in model container
[2020-11-24 16:03:02,976 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 04:03:02" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-24 16:03:03,011 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 04:03:03 NWAContainer
[2020-11-24 16:03:03,011 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-24 16:03:03,011 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-24 16:03:03,011 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-24 16:03:03,012 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-24 16:03:03,013 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "ONIT_0x410e731c2970dce3add351064acf5ce9e33fdbf0_transferfrom-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 04:03:02" (3/4) ...
[2020-11-24 16:03:03,014 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@19deb07c and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 04:03:03, skipping insertion in model container
[2020-11-24 16:03:03,014 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 04:03:03" (4/4) ...
[2020-11-24 16:03:03,017 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-24 16:03:03,020 INFO  L110   BuchiProductObserver]: Initial RCFG 1610 locations, 2107 edges
[2020-11-24 16:03:03,020 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-24 16:03:03,031 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-24 16:03:04,613 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-24 16:03:04,618 INFO  L110   BuchiProductObserver]: BuchiProgram size 3832 locations, 6765 edges
[2020-11-24 16:03:04,618 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 04:03:04 BoogieIcfgContainer
[2020-11-24 16:03:04,618 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-24 16:03:04,618 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-24 16:03:04,618 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-24 16:03:04,620 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-24 16:03:04,620 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 04:03:04" (1/1) ...
[2020-11-24 16:03:04,709 INFO  L313           BlockEncoder]: Initial Icfg 3832 locations, 6765 edges
[2020-11-24 16:03:04,709 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-24 16:03:04,709 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-24 16:03:04,709 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-24 16:03:04,710 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-24 16:03:04,720 INFO  L70    emoveInfeasibleEdges]: Removed 120 edges and 23 locations because of local infeasibility
[2020-11-24 16:03:04,727 INFO  L70        RemoveSinkStates]: Removed 112 edges and 63 locations by removing sink states
[2020-11-24 16:03:04,736 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-24 16:03:04,740 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-24 16:03:04,743 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-24 16:03:04,743 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-24 16:03:04,747 INFO  L313           BlockEncoder]: Encoded RCFG 3718 locations, 6492 edges
[2020-11-24 16:03:04,747 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 24.11 04:03:04 BasicIcfg
[2020-11-24 16:03:04,748 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-24 16:03:04,748 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-24 16:03:04,748 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-24 16:03:04,750 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-24 16:03:04,750 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 16:03:04,750 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "ONIT_0x410e731c2970dce3add351064acf5ce9e33fdbf0_transferfrom-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 04:03:02" (1/6) ...
[2020-11-24 16:03:04,751 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@4afc8652 and model type ONIT_0x410e731c2970dce3add351064acf5ce9e33fdbf0_transferfrom-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 24.11 04:03:04, skipping insertion in model container
[2020-11-24 16:03:04,752 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 16:03:04,752 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 04:03:02" (2/6) ...
[2020-11-24 16:03:04,752 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@4afc8652 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 24.11 04:03:04, skipping insertion in model container
[2020-11-24 16:03:04,752 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 16:03:04,752 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "ONIT_0x410e731c2970dce3add351064acf5ce9e33fdbf0_transferfrom-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 04:03:02" (3/6) ...
[2020-11-24 16:03:04,752 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@4afc8652 and model type ONIT_0x410e731c2970dce3add351064acf5ce9e33fdbf0_transferfrom-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 24.11 04:03:04, skipping insertion in model container
[2020-11-24 16:03:04,752 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 16:03:04,752 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 04:03:03" (4/6) ...
[2020-11-24 16:03:04,752 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@4afc8652 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 24.11 04:03:04, skipping insertion in model container
[2020-11-24 16:03:04,752 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 16:03:04,752 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 04:03:04" (5/6) ...
[2020-11-24 16:03:04,753 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@4afc8652 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 24.11 04:03:04, skipping insertion in model container
[2020-11-24 16:03:04,753 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 16:03:04,753 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 24.11 04:03:04" (6/6) ...
[2020-11-24 16:03:04,754 INFO  L404   chiAutomizerObserver]: Analyzing ICFG ONIT_0x410e731c2970dce3add351064acf5ce9e33fdbf0_transferfrom-fail.bpl_BEv2
[2020-11-24 16:03:04,789 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-24 16:03:04,790 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-24 16:03:04,790 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-24 16:03:04,790 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-24 16:03:04,790 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-24 16:03:04,790 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-24 16:03:04,790 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-24 16:03:04,790 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-24 16:03:04,790 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-24 16:03:04,831 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3718 states.
[2020-11-24 16:03:04,895 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 16:03:04,895 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 16:03:04,895 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 16:03:04,905 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 16:03:04,905 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
[2020-11-24 16:03:04,905 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-24 16:03:04,905 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3718 states.
[2020-11-24 16:03:04,928 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 16:03:04,928 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 16:03:04,928 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 16:03:04,930 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 16:03:04,930 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L2]                 fail_transferFrom_ONIT0 := false;
[L2]                 call_transferFrom_ONIT0 := false;
[L2]     CALL        call main();
[L4395]              assume null == 0;
[L4396]  CALL        call this := FreshRefGenerator__success();
[L1636]              havoc newRef;
[L1637]              assume Alloc[newRef] == false;
[L1638]              Alloc[newRef] := true;
[L1639]              assume newRef != null;
[L4396]  RET         call this := FreshRefGenerator__success();
[L4397]              assume now >= 0;
[L4398]              assume DType[this] == ONIT;
[L4399]              assume !revert && gas >= 0;
[L4400]  CALL        call CorralChoice_ONIT(this);
[L4275]              havoc msgsender_MSG;
[L4276]              havoc msgvalue_MSG;
[L4277]              havoc choice;
[L4278]              havoc __ret_0_owner;
[L4279]              havoc __ret_0_newOwner;
[L4280]              havoc account_s293;
[L4281]              havoc __ret_0_isOwner;
[L4282]              havoc _newOwner_s313;
[L4283]              havoc __ret_0_acceptOwnership;
[L4284]              havoc account_s390;
[L4285]              havoc __ret_0_isPauser;
[L4286]              havoc account_s402;
[L4287]              havoc account_s414;
[L4288]              havoc __ret_0_paused;
[L4289]              havoc to_s1288;
[L4290]              havoc value_s1288;
[L4291]              havoc __ret_0_transfer;
[L4292]              havoc spender_s711;
[L4293]              havoc value_s711;
[L4294]              havoc __ret_0_approve;
[L4295]              havoc from_s1322;
[L4296]              havoc to_s1322;
[L4297]              havoc value_s1322;
[L4298]              havoc __ret_0_transferFrom;
[L4299]              havoc __ret_0_totalSupply;
[L4300]              havoc owner_s1254;
[L4301]              havoc __ret_0_balanceOf;
[L4302]              havoc owner_s656;
[L4303]              havoc spender_s656;
[L4304]              havoc __ret_0_allowance;
[L4305]              havoc spender_s809;
[L4306]              havoc addedValue_s809;
[L4307]              havoc __ret_0_increaseAllowance;
[L4308]              havoc spender_s858;
[L4309]              havoc subtractedValue_s858;
[L4310]              havoc __ret_0_decreaseAllowance;
[L4311]              havoc name_s1105;
[L4312]              havoc symbol_s1105;
[L4313]              havoc decimals_s1105;
[L4314]              havoc __ret_0_name;
[L4315]              havoc __ret_0_symbol;
[L4316]              havoc __ret_0_decimals;
[L4317]              havoc __ret_0_implementation;
[L4318]              havoc arg1693_s0;
[L4319]              havoc arg1694_s0;
[L4320]              havoc __ret_0_timelockList;
[L4321]              havoc arg1695_s0;
[L4322]              havoc __ret_0_frozenAccount;
[L4323]              havoc holder_s1351;
[L4324]              havoc __ret_0_freezeAccount;
[L4325]              havoc holder_s1379;
[L4326]              havoc __ret_0_unfreezeAccount;
[L4327]              havoc holder_s1410;
[L4328]              havoc value_s1410;
[L4329]              havoc releaseTime_s1410;
[L4330]              havoc __ret_0_lock;
[L4331]              havoc holder_s1439;
[L4332]              havoc value_s1439;
[L4333]              havoc releaseTime_s1439;
[L4334]              havoc __ret_0_transferWithLock;
[L4335]              havoc holder_s1468;
[L4336]              havoc idx_s1468;
[L4337]              havoc __ret_0_unlock;
[L4338]              havoc _newImplementation_s1486;
[L4339]              havoc value_s1663;
[L4340]              havoc __ret_0_mint;
[L4341]              havoc tmpNow;
[L4342]              havoc gas;
[L4343]              assume gas > 4000000 && gas <= 8000000;
[L4344]              tmpNow := now;
[L4345]              havoc now;
[L4346]              assume now > tmpNow;
[L4347]              assume msgsender_MSG != null;
[L4348]  COND TRUE   choice == 6
[L4349]              gas := gas - 21000;
[L4350]  COND FALSE  !(gas >= 0)
[L4400]  RET         call CorralChoice_ONIT(this);

Loop:
[L4400]        assume true;

[2020-11-24 16:03:04,948 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 16:03:04,948 INFO  L82        PathProgramCache]: Analyzing trace with hash -1335291800, now seen corresponding path program 1 times
[2020-11-24 16:03:04,954 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 16:03:04,997 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 16:03:05,044 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 16:03:05,046 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 16:03:05,047 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-24 16:03:05,051 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 16:03:05,246 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-24 16:03:05,247 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-24 16:03:05,248 INFO  L87              Difference]: Start difference. First operand 3718 states. Second operand 3 states.
[2020-11-24 16:03:05,456 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 16:03:05,456 INFO  L93              Difference]: Finished difference Result 1374 states and 1653 transitions.
[2020-11-24 16:03:05,456 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-24 16:03:05,458 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 1374 states and 1653 transitions.
[2020-11-24 16:03:05,466 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 16:03:05,471 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 1374 states to 349 states and 409 transitions.
[2020-11-24 16:03:05,472 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 3
[2020-11-24 16:03:05,473 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 146
[2020-11-24 16:03:05,473 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 349 states and 409 transitions.
[2020-11-24 16:03:05,475 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 16:03:05,476 INFO  L728         BuchiCegarLoop]: Abstraction has 349 states and 409 transitions.
[2020-11-24 16:03:05,487 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 349 states and 409 transitions.
[2020-11-24 16:03:05,500 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 349 to 349.
[2020-11-24 16:03:05,501 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 349 states.
[2020-11-24 16:03:05,502 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 349 states to 349 states and 409 transitions.
[2020-11-24 16:03:05,503 INFO  L751         BuchiCegarLoop]: Abstraction has 349 states and 409 transitions.
[2020-11-24 16:03:05,503 INFO  L631         BuchiCegarLoop]: Abstraction has 349 states and 409 transitions.
[2020-11-24 16:03:05,503 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-24 16:03:05,503 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 349 states and 409 transitions.
[2020-11-24 16:03:05,505 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 16:03:05,505 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 16:03:05,505 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 16:03:05,506 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 16:03:05,506 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L2]                 fail_transferFrom_ONIT0 := false;
[L2]                 call_transferFrom_ONIT0 := false;
[L2]     CALL        call main();
[L4395]              assume null == 0;
[L4396]  CALL        call this := FreshRefGenerator__success();
[L1636]              havoc newRef;
[L1637]              assume Alloc[newRef] == false;
[L1638]              Alloc[newRef] := true;
[L1639]              assume newRef != null;
[L4396]  RET         call this := FreshRefGenerator__success();
[L4397]              assume now >= 0;
[L4398]              assume DType[this] == ONIT;
[L4399]              assume !revert && gas >= 0;
[L4400]  CALL        call CorralChoice_ONIT(this);
[L4275]              havoc msgsender_MSG;
[L4276]              havoc msgvalue_MSG;
[L4277]              havoc choice;
[L4278]              havoc __ret_0_owner;
[L4279]              havoc __ret_0_newOwner;
[L4280]              havoc account_s293;
[L4281]              havoc __ret_0_isOwner;
[L4282]              havoc _newOwner_s313;
[L4283]              havoc __ret_0_acceptOwnership;
[L4284]              havoc account_s390;
[L4285]              havoc __ret_0_isPauser;
[L4286]              havoc account_s402;
[L4287]              havoc account_s414;
[L4288]              havoc __ret_0_paused;
[L4289]              havoc to_s1288;
[L4290]              havoc value_s1288;
[L4291]              havoc __ret_0_transfer;
[L4292]              havoc spender_s711;
[L4293]              havoc value_s711;
[L4294]              havoc __ret_0_approve;
[L4295]              havoc from_s1322;
[L4296]              havoc to_s1322;
[L4297]              havoc value_s1322;
[L4298]              havoc __ret_0_transferFrom;
[L4299]              havoc __ret_0_totalSupply;
[L4300]              havoc owner_s1254;
[L4301]              havoc __ret_0_balanceOf;
[L4302]              havoc owner_s656;
[L4303]              havoc spender_s656;
[L4304]              havoc __ret_0_allowance;
[L4305]              havoc spender_s809;
[L4306]              havoc addedValue_s809;
[L4307]              havoc __ret_0_increaseAllowance;
[L4308]              havoc spender_s858;
[L4309]              havoc subtractedValue_s858;
[L4310]              havoc __ret_0_decreaseAllowance;
[L4311]              havoc name_s1105;
[L4312]              havoc symbol_s1105;
[L4313]              havoc decimals_s1105;
[L4314]              havoc __ret_0_name;
[L4315]              havoc __ret_0_symbol;
[L4316]              havoc __ret_0_decimals;
[L4317]              havoc __ret_0_implementation;
[L4318]              havoc arg1693_s0;
[L4319]              havoc arg1694_s0;
[L4320]              havoc __ret_0_timelockList;
[L4321]              havoc arg1695_s0;
[L4322]              havoc __ret_0_frozenAccount;
[L4323]              havoc holder_s1351;
[L4324]              havoc __ret_0_freezeAccount;
[L4325]              havoc holder_s1379;
[L4326]              havoc __ret_0_unfreezeAccount;
[L4327]              havoc holder_s1410;
[L4328]              havoc value_s1410;
[L4329]              havoc releaseTime_s1410;
[L4330]              havoc __ret_0_lock;
[L4331]              havoc holder_s1439;
[L4332]              havoc value_s1439;
[L4333]              havoc releaseTime_s1439;
[L4334]              havoc __ret_0_transferWithLock;
[L4335]              havoc holder_s1468;
[L4336]              havoc idx_s1468;
[L4337]              havoc __ret_0_unlock;
[L4338]              havoc _newImplementation_s1486;
[L4339]              havoc value_s1663;
[L4340]              havoc __ret_0_mint;
[L4341]              havoc tmpNow;
[L4342]              havoc gas;
[L4343]              assume gas > 4000000 && gas <= 8000000;
[L4344]              tmpNow := now;
[L4345]              havoc now;
[L4346]              assume now > tmpNow;
[L4347]              assume msgsender_MSG != null;
[L4348]  COND FALSE  !(choice == 6)
[L4355]  COND FALSE  !(choice == 5)
[L4362]  COND TRUE   choice == 4
[L4363]              gas := gas - 21000;
[L4364]  COND TRUE   gas >= 0
[L4365]              assume value_s1322 >= 0 && value_s1322 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4366]              assume msgvalue_MSG == 0;
[L4367]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_ONIT(this, msgsender_MSG, msgvalue_MSG, from_s1322, to_s1322, value_s1322);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((((from_s1322 != to_s1322 && ((value_s1322 > _balances_ERC20[this][from_s1322] || value_s1322 > _allowed_ERC20[this][from_s1322][msgsender_MSG]) || _balances_ERC20[this][to_s1322] + value_s1322 >= 115792089237316195423570985008687907853269984665640564039457584007913129639936)) && value_s1322 >= 0) && value_s1322 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][to_s1322] >= 0) && _balances_ERC20[this][to_s1322] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][from_s1322] >= 0) && _balances_ERC20[this][from_s1322] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowed_ERC20[this][from_s1322][msgsender_MSG] >= 0) && _allowed_ERC20[this][from_s1322][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transferFrom_ONIT0 := true;
[L2]                 call_transferFrom_ONIT0 := false;
[L2]                 revert := revert_hold;
[L959]               havoc __exception;
[L960]               revert := false;
[L961]   COND FALSE  !(__exception)
[L997]   CALL        call __ret_0_ := transferFrom~address~address~uint256_ONIT__success(this, msgsender_MSG, msgvalue_MSG, from_s1322, to_s1322, value_s1322);
[L2370]  CALL        call notFrozen_pre__success(this, msgsender_MSG, msgvalue_MSG, from_s1322);
[L3582]  COND FALSE  !(!!frozenAccount_ONIT[this][_holder_s1185])
[L2370]  RET         call notFrozen_pre__success(this, msgsender_MSG, msgvalue_MSG, from_s1322);
[L2371]  COND TRUE   revert
[L997]   RET         call __ret_0_ := transferFrom~address~address~uint256_ONIT__success(this, msgsender_MSG, msgvalue_MSG, from_s1322, to_s1322, value_s1322);
[L998]               assume !revert && gas >= 0;
[L4367]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_ONIT(this, msgsender_MSG, msgvalue_MSG, from_s1322, to_s1322, value_s1322);
[L4400]  RET         call CorralChoice_ONIT(this);

Loop:
[L4400]        assume true;

[2020-11-24 16:03:05,508 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 16:03:05,508 INFO  L82        PathProgramCache]: Analyzing trace with hash 259437250, now seen corresponding path program 1 times
[2020-11-24 16:03:05,509 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 16:03:05,519 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 16:03:05,538 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 16:03:05,538 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 16:03:05,538 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [5] imperfect sequences [] total 5
[2020-11-24 16:03:05,539 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 16:03:05,540 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 5 interpolants.
[2020-11-24 16:03:05,540 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=9, Invalid=11, Unknown=0, NotChecked=0, Total=20
[2020-11-24 16:03:05,540 INFO  L87              Difference]: Start difference. First operand 349 states and 409 transitions. cyclomatic complexity: 62 Second operand 5 states.
[2020-11-24 16:03:05,586 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 16:03:05,587 INFO  L93              Difference]: Finished difference Result 401 states and 458 transitions.
[2020-11-24 16:03:05,589 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-24 16:03:05,589 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 401 states and 458 transitions.
[2020-11-24 16:03:05,593 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 16:03:05,596 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 401 states to 401 states and 458 transitions.
[2020-11-24 16:03:05,596 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 170
[2020-11-24 16:03:05,596 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 170
[2020-11-24 16:03:05,596 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 401 states and 458 transitions.
[2020-11-24 16:03:05,598 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 16:03:05,598 INFO  L728         BuchiCegarLoop]: Abstraction has 401 states and 458 transitions.
[2020-11-24 16:03:05,598 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 401 states and 458 transitions.
[2020-11-24 16:03:05,605 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 401 to 397.
[2020-11-24 16:03:05,605 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 397 states.
[2020-11-24 16:03:05,606 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 397 states to 397 states and 454 transitions.
[2020-11-24 16:03:05,606 INFO  L751         BuchiCegarLoop]: Abstraction has 397 states and 454 transitions.
[2020-11-24 16:03:05,606 INFO  L631         BuchiCegarLoop]: Abstraction has 397 states and 454 transitions.
[2020-11-24 16:03:05,606 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-24 16:03:05,606 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 397 states and 454 transitions.
[2020-11-24 16:03:05,608 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 16:03:05,608 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 16:03:05,608 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 16:03:05,609 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 16:03:05,609 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L2]                 fail_transferFrom_ONIT0 := false;
[L2]                 call_transferFrom_ONIT0 := false;
[L2]     CALL        call main();
[L4395]              assume null == 0;
[L4396]  CALL        call this := FreshRefGenerator__success();
[L1636]              havoc newRef;
[L1637]              assume Alloc[newRef] == false;
[L1638]              Alloc[newRef] := true;
[L1639]              assume newRef != null;
[L4396]  RET         call this := FreshRefGenerator__success();
[L4397]              assume now >= 0;
[L4398]              assume DType[this] == ONIT;
[L4399]              assume !revert && gas >= 0;
[L4400]  CALL        call CorralChoice_ONIT(this);
[L4275]              havoc msgsender_MSG;
[L4276]              havoc msgvalue_MSG;
[L4277]              havoc choice;
[L4278]              havoc __ret_0_owner;
[L4279]              havoc __ret_0_newOwner;
[L4280]              havoc account_s293;
[L4281]              havoc __ret_0_isOwner;
[L4282]              havoc _newOwner_s313;
[L4283]              havoc __ret_0_acceptOwnership;
[L4284]              havoc account_s390;
[L4285]              havoc __ret_0_isPauser;
[L4286]              havoc account_s402;
[L4287]              havoc account_s414;
[L4288]              havoc __ret_0_paused;
[L4289]              havoc to_s1288;
[L4290]              havoc value_s1288;
[L4291]              havoc __ret_0_transfer;
[L4292]              havoc spender_s711;
[L4293]              havoc value_s711;
[L4294]              havoc __ret_0_approve;
[L4295]              havoc from_s1322;
[L4296]              havoc to_s1322;
[L4297]              havoc value_s1322;
[L4298]              havoc __ret_0_transferFrom;
[L4299]              havoc __ret_0_totalSupply;
[L4300]              havoc owner_s1254;
[L4301]              havoc __ret_0_balanceOf;
[L4302]              havoc owner_s656;
[L4303]              havoc spender_s656;
[L4304]              havoc __ret_0_allowance;
[L4305]              havoc spender_s809;
[L4306]              havoc addedValue_s809;
[L4307]              havoc __ret_0_increaseAllowance;
[L4308]              havoc spender_s858;
[L4309]              havoc subtractedValue_s858;
[L4310]              havoc __ret_0_decreaseAllowance;
[L4311]              havoc name_s1105;
[L4312]              havoc symbol_s1105;
[L4313]              havoc decimals_s1105;
[L4314]              havoc __ret_0_name;
[L4315]              havoc __ret_0_symbol;
[L4316]              havoc __ret_0_decimals;
[L4317]              havoc __ret_0_implementation;
[L4318]              havoc arg1693_s0;
[L4319]              havoc arg1694_s0;
[L4320]              havoc __ret_0_timelockList;
[L4321]              havoc arg1695_s0;
[L4322]              havoc __ret_0_frozenAccount;
[L4323]              havoc holder_s1351;
[L4324]              havoc __ret_0_freezeAccount;
[L4325]              havoc holder_s1379;
[L4326]              havoc __ret_0_unfreezeAccount;
[L4327]              havoc holder_s1410;
[L4328]              havoc value_s1410;
[L4329]              havoc releaseTime_s1410;
[L4330]              havoc __ret_0_lock;
[L4331]              havoc holder_s1439;
[L4332]              havoc value_s1439;
[L4333]              havoc releaseTime_s1439;
[L4334]              havoc __ret_0_transferWithLock;
[L4335]              havoc holder_s1468;
[L4336]              havoc idx_s1468;
[L4337]              havoc __ret_0_unlock;
[L4338]              havoc _newImplementation_s1486;
[L4339]              havoc value_s1663;
[L4340]              havoc __ret_0_mint;
[L4341]              havoc tmpNow;
[L4342]              havoc gas;
[L4343]              assume gas > 4000000 && gas <= 8000000;
[L4344]              tmpNow := now;
[L4345]              havoc now;
[L4346]              assume now > tmpNow;
[L4347]              assume msgsender_MSG != null;
[L4348]  COND FALSE  !(choice == 6)
[L4355]  COND FALSE  !(choice == 5)
[L4362]  COND TRUE   choice == 4
[L4363]              gas := gas - 21000;
[L4364]  COND TRUE   gas >= 0
[L4365]              assume value_s1322 >= 0 && value_s1322 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4366]              assume msgvalue_MSG == 0;
[L4367]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_ONIT(this, msgsender_MSG, msgvalue_MSG, from_s1322, to_s1322, value_s1322);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((((from_s1322 != to_s1322 && ((value_s1322 > _balances_ERC20[this][from_s1322] || value_s1322 > _allowed_ERC20[this][from_s1322][msgsender_MSG]) || _balances_ERC20[this][to_s1322] + value_s1322 >= 115792089237316195423570985008687907853269984665640564039457584007913129639936)) && value_s1322 >= 0) && value_s1322 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][to_s1322] >= 0) && _balances_ERC20[this][to_s1322] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][from_s1322] >= 0) && _balances_ERC20[this][from_s1322] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowed_ERC20[this][from_s1322][msgsender_MSG] >= 0) && _allowed_ERC20[this][from_s1322][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transferFrom_ONIT0 := true;
[L2]                 call_transferFrom_ONIT0 := false;
[L2]                 revert := revert_hold;
[L959]               havoc __exception;
[L960]               revert := false;
[L961]   COND FALSE  !(__exception)
[L997]   CALL        call __ret_0_ := transferFrom~address~address~uint256_ONIT__success(this, msgsender_MSG, msgvalue_MSG, from_s1322, to_s1322, value_s1322);
[L2370]  CALL        call notFrozen_pre__success(this, msgsender_MSG, msgvalue_MSG, from_s1322);
[L3582]  COND TRUE   !!frozenAccount_ONIT[this][_holder_s1185]
[L3583]              revert := true;
[L2370]  RET         call notFrozen_pre__success(this, msgsender_MSG, msgvalue_MSG, from_s1322);
[L2371]  COND TRUE   revert
[L997]   RET         call __ret_0_ := transferFrom~address~address~uint256_ONIT__success(this, msgsender_MSG, msgvalue_MSG, from_s1322, to_s1322, value_s1322);
[L998]               assume !revert && gas >= 0;
[L4367]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_ONIT(this, msgsender_MSG, msgvalue_MSG, from_s1322, to_s1322, value_s1322);
[L4400]  RET         call CorralChoice_ONIT(this);

Loop:
[L4400]        assume true;

[2020-11-24 16:03:05,611 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 16:03:05,611 INFO  L82        PathProgramCache]: Analyzing trace with hash -2137759121, now seen corresponding path program 1 times
[2020-11-24 16:03:05,612 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 16:03:05,619 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 16:03:05,635 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 16:03:05,636 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 16:03:05,636 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-24 16:03:05,636 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 16:03:05,636 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-24 16:03:05,636 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-24 16:03:05,636 INFO  L87              Difference]: Start difference. First operand 397 states and 454 transitions. cyclomatic complexity: 59 Second operand 3 states.
[2020-11-24 16:03:05,646 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 16:03:05,646 INFO  L93              Difference]: Finished difference Result 401 states and 442 transitions.
[2020-11-24 16:03:05,646 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-24 16:03:05,646 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 401 states and 442 transitions.
[2020-11-24 16:03:05,648 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 16:03:05,649 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 401 states to 344 states and 375 transitions.
[2020-11-24 16:03:05,649 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 145
[2020-11-24 16:03:05,650 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 145
[2020-11-24 16:03:05,650 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 344 states and 375 transitions.
[2020-11-24 16:03:05,650 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 16:03:05,650 INFO  L728         BuchiCegarLoop]: Abstraction has 344 states and 375 transitions.
[2020-11-24 16:03:05,650 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 344 states and 375 transitions.
[2020-11-24 16:03:05,653 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 344 to 344.
[2020-11-24 16:03:05,653 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 344 states.
[2020-11-24 16:03:05,654 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 344 states to 344 states and 375 transitions.
[2020-11-24 16:03:05,654 INFO  L751         BuchiCegarLoop]: Abstraction has 344 states and 375 transitions.
[2020-11-24 16:03:05,654 INFO  L631         BuchiCegarLoop]: Abstraction has 344 states and 375 transitions.
[2020-11-24 16:03:05,654 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-24 16:03:05,654 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 344 states and 375 transitions.
[2020-11-24 16:03:05,655 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 16:03:05,655 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 16:03:05,655 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 16:03:05,656 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 16:03:05,657 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L2]                 fail_transferFrom_ONIT0 := false;
[L2]                 call_transferFrom_ONIT0 := false;
[L2]     CALL        call main();
[L4395]              assume null == 0;
[L4396]  CALL        call this := FreshRefGenerator__success();
[L1636]              havoc newRef;
[L1637]              assume Alloc[newRef] == false;
[L1638]              Alloc[newRef] := true;
[L1639]              assume newRef != null;
[L4396]  RET         call this := FreshRefGenerator__success();
[L4397]              assume now >= 0;
[L4398]              assume DType[this] == ONIT;
[L4399]              assume !revert && gas >= 0;
[L4400]  CALL        call CorralChoice_ONIT(this);
[L4275]              havoc msgsender_MSG;
[L4276]              havoc msgvalue_MSG;
[L4277]              havoc choice;
[L4278]              havoc __ret_0_owner;
[L4279]              havoc __ret_0_newOwner;
[L4280]              havoc account_s293;
[L4281]              havoc __ret_0_isOwner;
[L4282]              havoc _newOwner_s313;
[L4283]              havoc __ret_0_acceptOwnership;
[L4284]              havoc account_s390;
[L4285]              havoc __ret_0_isPauser;
[L4286]              havoc account_s402;
[L4287]              havoc account_s414;
[L4288]              havoc __ret_0_paused;
[L4289]              havoc to_s1288;
[L4290]              havoc value_s1288;
[L4291]              havoc __ret_0_transfer;
[L4292]              havoc spender_s711;
[L4293]              havoc value_s711;
[L4294]              havoc __ret_0_approve;
[L4295]              havoc from_s1322;
[L4296]              havoc to_s1322;
[L4297]              havoc value_s1322;
[L4298]              havoc __ret_0_transferFrom;
[L4299]              havoc __ret_0_totalSupply;
[L4300]              havoc owner_s1254;
[L4301]              havoc __ret_0_balanceOf;
[L4302]              havoc owner_s656;
[L4303]              havoc spender_s656;
[L4304]              havoc __ret_0_allowance;
[L4305]              havoc spender_s809;
[L4306]              havoc addedValue_s809;
[L4307]              havoc __ret_0_increaseAllowance;
[L4308]              havoc spender_s858;
[L4309]              havoc subtractedValue_s858;
[L4310]              havoc __ret_0_decreaseAllowance;
[L4311]              havoc name_s1105;
[L4312]              havoc symbol_s1105;
[L4313]              havoc decimals_s1105;
[L4314]              havoc __ret_0_name;
[L4315]              havoc __ret_0_symbol;
[L4316]              havoc __ret_0_decimals;
[L4317]              havoc __ret_0_implementation;
[L4318]              havoc arg1693_s0;
[L4319]              havoc arg1694_s0;
[L4320]              havoc __ret_0_timelockList;
[L4321]              havoc arg1695_s0;
[L4322]              havoc __ret_0_frozenAccount;
[L4323]              havoc holder_s1351;
[L4324]              havoc __ret_0_freezeAccount;
[L4325]              havoc holder_s1379;
[L4326]              havoc __ret_0_unfreezeAccount;
[L4327]              havoc holder_s1410;
[L4328]              havoc value_s1410;
[L4329]              havoc releaseTime_s1410;
[L4330]              havoc __ret_0_lock;
[L4331]              havoc holder_s1439;
[L4332]              havoc value_s1439;
[L4333]              havoc releaseTime_s1439;
[L4334]              havoc __ret_0_transferWithLock;
[L4335]              havoc holder_s1468;
[L4336]              havoc idx_s1468;
[L4337]              havoc __ret_0_unlock;
[L4338]              havoc _newImplementation_s1486;
[L4339]              havoc value_s1663;
[L4340]              havoc __ret_0_mint;
[L4341]              havoc tmpNow;
[L4342]              havoc gas;
[L4343]              assume gas > 4000000 && gas <= 8000000;
[L4344]              tmpNow := now;
[L4345]              havoc now;
[L4346]              assume now > tmpNow;
[L4347]              assume msgsender_MSG != null;
[L4348]  COND FALSE  !(choice == 6)
[L4355]  COND FALSE  !(choice == 5)
[L4362]  COND TRUE   choice == 4
[L4363]              gas := gas - 21000;
[L4364]  COND TRUE   gas >= 0
[L4365]              assume value_s1322 >= 0 && value_s1322 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4366]              assume msgvalue_MSG == 0;
[L4367]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_ONIT(this, msgsender_MSG, msgvalue_MSG, from_s1322, to_s1322, value_s1322);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((((from_s1322 != to_s1322 && ((value_s1322 > _balances_ERC20[this][from_s1322] || value_s1322 > _allowed_ERC20[this][from_s1322][msgsender_MSG]) || _balances_ERC20[this][to_s1322] + value_s1322 >= 115792089237316195423570985008687907853269984665640564039457584007913129639936)) && value_s1322 >= 0) && value_s1322 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][to_s1322] >= 0) && _balances_ERC20[this][to_s1322] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][from_s1322] >= 0) && _balances_ERC20[this][from_s1322] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowed_ERC20[this][from_s1322][msgsender_MSG] >= 0) && _allowed_ERC20[this][from_s1322][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transferFrom_ONIT0 := true;
[L2]                 call_transferFrom_ONIT0 := false;
[L2]                 revert := revert_hold;
[L959]               havoc __exception;
[L960]               revert := false;
[L961]   COND FALSE  !(__exception)
[L997]   CALL        call __ret_0_ := transferFrom~address~address~uint256_ONIT__success(this, msgsender_MSG, msgvalue_MSG, from_s1322, to_s1322, value_s1322);
[L2370]  CALL        call notFrozen_pre__success(this, msgsender_MSG, msgvalue_MSG, from_s1322);
[L3582]  COND FALSE  !(!!frozenAccount_ONIT[this][_holder_s1185])
[L2370]  RET         call notFrozen_pre__success(this, msgsender_MSG, msgvalue_MSG, from_s1322);
[L2371]  COND FALSE  !(revert)
[L2374]  COND FALSE  !(alloc_timelockList_ONIT_lvl0[timelockList_ONIT[this]][from_s1322] == false)
[L2385]  COND FALSE  !(Length[M_Ref_Ref[timelockList_ONIT[this]][from_s1322]] > 0)
[L2391]  COND TRUE   DType[this] == ONIT
[L2392]  CALL        call __var_24 := transferFrom~address~address~uint256_ERC20Pausable__success(this, msgsender_MSG, msgvalue_MSG, from_s1322, to_s1322, value_s1322);
[L2088]  CALL        call whenNotPaused_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L3558]  COND FALSE  !(!!_paused_Pausable[this])
[L2088]  RET         call whenNotPaused_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L2089]  COND FALSE  !(revert)
[L2092]  COND TRUE   DType[this] == ONIT
[L2093]  CALL        call __var_11 := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s1074, to_s1074, value_s1074);
[L1926]  CALL        call __var_5 := sub~uint256~uint256_SafeMath__success(this, this, 0, _allowed_ERC20[this][from_s760][msgsender_MSG], value_s760);
[L1679]  COND FALSE  !(!(b_s82 <= a_s82))
[L1683]              c_s82 := (a_s82 - b_s82) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1684]              __ret_0_ := c_s82;
[L1926]  RET         call __var_5 := sub~uint256~uint256_SafeMath__success(this, this, 0, _allowed_ERC20[this][from_s760][msgsender_MSG], value_s760);
[L1927]  COND FALSE  !(revert)
[L1930]              sum__allowed1[from_s760] := sum__allowed1[from_s760] - _allowed_ERC20[this][from_s760][msgsender_MSG];
[L1931]              _allowed_ERC20[this][from_s760][msgsender_MSG] := __var_5;
[L1932]              sum__allowed1[from_s760] := sum__allowed1[from_s760] + _allowed_ERC20[this][from_s760][msgsender_MSG];
[L1933]  COND FALSE  !(DType[this] == ONIT)
[L1938]  COND TRUE   DType[this] == ERC20Pausable
[L1939]  CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s760, to_s760, value_s760);
[L1987]              __var_6 := null;
[L1988]  COND FALSE  !(!(to_s904 != null))
[L1992]  CALL        call __var_7 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][from_s904], value_s904);
[L1679]  COND FALSE  !(!(b_s82 <= a_s82))
[L1683]              c_s82 := (a_s82 - b_s82) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1684]              __ret_0_ := c_s82;
[L1992]  RET         call __var_7 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][from_s904], value_s904);
[L1993]  COND FALSE  !(revert)
[L1996]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][from_s904];
[L1997]              _balances_ERC20[this][from_s904] := __var_7;
[L1998]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][from_s904];
[L1999]  CALL        call __var_8 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][to_s904], value_s904);
[L1703]              c_s106 := (a_s106 + b_s106) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1704]  COND FALSE  !(!(c_s106 >= a_s106))
[L1708]              __ret_0_ := c_s106;
[L1999]  RET         call __var_8 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][to_s904], value_s904);
[L2000]  COND FALSE  !(revert)
[L2003]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][to_s904];
[L2004]              _balances_ERC20[this][to_s904] := __var_8;
[L2005]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][to_s904];
[L2006]              assert { :EventEmitted "Transfer_ERC20" } true;
[L1939]  RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s760, to_s760, value_s760);
[L1940]  COND FALSE  !(revert)
[L1951]              assert { :EventEmitted "Approval_ERC20" } true;
[L1952]              __ret_0_ := true;
[L2093]  RET         call __var_11 := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s1074, to_s1074, value_s1074);
[L2094]  COND FALSE  !(revert)
[L2105]              __ret_0_ := __var_11;
[L2392]  RET         call __var_24 := transferFrom~address~address~uint256_ERC20Pausable__success(this, msgsender_MSG, msgvalue_MSG, from_s1322, to_s1322, value_s1322);
[L2393]  COND FALSE  !(revert)
[L2399]              __ret_0_ := __var_24;
[L997]   RET         call __ret_0_ := transferFrom~address~address~uint256_ONIT__success(this, msgsender_MSG, msgvalue_MSG, from_s1322, to_s1322, value_s1322);
[L998]               assume !revert && gas >= 0;
[L4367]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_ONIT(this, msgsender_MSG, msgvalue_MSG, from_s1322, to_s1322, value_s1322);
[L4400]  RET         call CorralChoice_ONIT(this);

Loop:
[L4400]        assume true;

[2020-11-24 16:03:05,659 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 16:03:05,659 INFO  L82        PathProgramCache]: Analyzing trace with hash 1805070455, now seen corresponding path program 1 times
[2020-11-24 16:03:05,660 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 16:03:05,670 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 16:03:05,711 INFO  L134       CoverageAnalysis]: Checked inductivity of 5 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 5 trivial. 0 not checked.
[2020-11-24 16:03:05,712 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 16:03:05,712 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [5] imperfect sequences [] total 5
[2020-11-24 16:03:05,712 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 16:03:05,712 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 5 interpolants.
[2020-11-24 16:03:05,712 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=7, Invalid=13, Unknown=0, NotChecked=0, Total=20
[2020-11-24 16:03:05,712 INFO  L87              Difference]: Start difference. First operand 344 states and 375 transitions. cyclomatic complexity: 33 Second operand 5 states.
[2020-11-24 16:03:05,732 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 16:03:05,732 INFO  L93              Difference]: Finished difference Result 361 states and 392 transitions.
[2020-11-24 16:03:05,732 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 5 states. 
[2020-11-24 16:03:05,732 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 361 states and 392 transitions.
[2020-11-24 16:03:05,734 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 16:03:05,735 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 361 states to 335 states and 362 transitions.
[2020-11-24 16:03:05,735 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 141
[2020-11-24 16:03:05,735 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 141
[2020-11-24 16:03:05,735 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 335 states and 362 transitions.
[2020-11-24 16:03:05,736 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 16:03:05,736 INFO  L728         BuchiCegarLoop]: Abstraction has 335 states and 362 transitions.
[2020-11-24 16:03:05,736 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 335 states and 362 transitions.
[2020-11-24 16:03:05,738 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 335 to 335.
[2020-11-24 16:03:05,738 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 335 states.
[2020-11-24 16:03:05,739 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 335 states to 335 states and 362 transitions.
[2020-11-24 16:03:05,739 INFO  L751         BuchiCegarLoop]: Abstraction has 335 states and 362 transitions.
[2020-11-24 16:03:05,739 INFO  L631         BuchiCegarLoop]: Abstraction has 335 states and 362 transitions.
[2020-11-24 16:03:05,739 INFO  L445         BuchiCegarLoop]: ======== Iteration 5============
[2020-11-24 16:03:05,739 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 335 states and 362 transitions.
[2020-11-24 16:03:05,740 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 16:03:05,740 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 16:03:05,740 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 16:03:05,741 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 16:03:05,741 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L2]                 fail_transferFrom_ONIT0 := false;
[L2]                 call_transferFrom_ONIT0 := false;
[L2]     CALL        call main();
[L4395]              assume null == 0;
[L4396]  CALL        call this := FreshRefGenerator__success();
[L1636]              havoc newRef;
[L1637]              assume Alloc[newRef] == false;
[L1638]              Alloc[newRef] := true;
[L1639]              assume newRef != null;
[L4396]  RET         call this := FreshRefGenerator__success();
[L4397]              assume now >= 0;
[L4398]              assume DType[this] == ONIT;
[L4399]              assume !revert && gas >= 0;
[L4400]  CALL        call CorralChoice_ONIT(this);
[L4275]              havoc msgsender_MSG;
[L4276]              havoc msgvalue_MSG;
[L4277]              havoc choice;
[L4278]              havoc __ret_0_owner;
[L4279]              havoc __ret_0_newOwner;
[L4280]              havoc account_s293;
[L4281]              havoc __ret_0_isOwner;
[L4282]              havoc _newOwner_s313;
[L4283]              havoc __ret_0_acceptOwnership;
[L4284]              havoc account_s390;
[L4285]              havoc __ret_0_isPauser;
[L4286]              havoc account_s402;
[L4287]              havoc account_s414;
[L4288]              havoc __ret_0_paused;
[L4289]              havoc to_s1288;
[L4290]              havoc value_s1288;
[L4291]              havoc __ret_0_transfer;
[L4292]              havoc spender_s711;
[L4293]              havoc value_s711;
[L4294]              havoc __ret_0_approve;
[L4295]              havoc from_s1322;
[L4296]              havoc to_s1322;
[L4297]              havoc value_s1322;
[L4298]              havoc __ret_0_transferFrom;
[L4299]              havoc __ret_0_totalSupply;
[L4300]              havoc owner_s1254;
[L4301]              havoc __ret_0_balanceOf;
[L4302]              havoc owner_s656;
[L4303]              havoc spender_s656;
[L4304]              havoc __ret_0_allowance;
[L4305]              havoc spender_s809;
[L4306]              havoc addedValue_s809;
[L4307]              havoc __ret_0_increaseAllowance;
[L4308]              havoc spender_s858;
[L4309]              havoc subtractedValue_s858;
[L4310]              havoc __ret_0_decreaseAllowance;
[L4311]              havoc name_s1105;
[L4312]              havoc symbol_s1105;
[L4313]              havoc decimals_s1105;
[L4314]              havoc __ret_0_name;
[L4315]              havoc __ret_0_symbol;
[L4316]              havoc __ret_0_decimals;
[L4317]              havoc __ret_0_implementation;
[L4318]              havoc arg1693_s0;
[L4319]              havoc arg1694_s0;
[L4320]              havoc __ret_0_timelockList;
[L4321]              havoc arg1695_s0;
[L4322]              havoc __ret_0_frozenAccount;
[L4323]              havoc holder_s1351;
[L4324]              havoc __ret_0_freezeAccount;
[L4325]              havoc holder_s1379;
[L4326]              havoc __ret_0_unfreezeAccount;
[L4327]              havoc holder_s1410;
[L4328]              havoc value_s1410;
[L4329]              havoc releaseTime_s1410;
[L4330]              havoc __ret_0_lock;
[L4331]              havoc holder_s1439;
[L4332]              havoc value_s1439;
[L4333]              havoc releaseTime_s1439;
[L4334]              havoc __ret_0_transferWithLock;
[L4335]              havoc holder_s1468;
[L4336]              havoc idx_s1468;
[L4337]              havoc __ret_0_unlock;
[L4338]              havoc _newImplementation_s1486;
[L4339]              havoc value_s1663;
[L4340]              havoc __ret_0_mint;
[L4341]              havoc tmpNow;
[L4342]              havoc gas;
[L4343]              assume gas > 4000000 && gas <= 8000000;
[L4344]              tmpNow := now;
[L4345]              havoc now;
[L4346]              assume now > tmpNow;
[L4347]              assume msgsender_MSG != null;
[L4348]  COND FALSE  !(choice == 6)
[L4355]  COND FALSE  !(choice == 5)
[L4362]  COND TRUE   choice == 4
[L4363]              gas := gas - 21000;
[L4364]  COND TRUE   gas >= 0
[L4365]              assume value_s1322 >= 0 && value_s1322 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4366]              assume msgvalue_MSG == 0;
[L4367]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_ONIT(this, msgsender_MSG, msgvalue_MSG, from_s1322, to_s1322, value_s1322);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((((from_s1322 != to_s1322 && ((value_s1322 > _balances_ERC20[this][from_s1322] || value_s1322 > _allowed_ERC20[this][from_s1322][msgsender_MSG]) || _balances_ERC20[this][to_s1322] + value_s1322 >= 115792089237316195423570985008687907853269984665640564039457584007913129639936)) && value_s1322 >= 0) && value_s1322 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][to_s1322] >= 0) && _balances_ERC20[this][to_s1322] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][from_s1322] >= 0) && _balances_ERC20[this][from_s1322] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowed_ERC20[this][from_s1322][msgsender_MSG] >= 0) && _allowed_ERC20[this][from_s1322][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transferFrom_ONIT0 := true;
[L2]                 call_transferFrom_ONIT0 := false;
[L2]                 revert := revert_hold;
[L959]               havoc __exception;
[L960]               revert := false;
[L961]   COND FALSE  !(__exception)
[L997]   CALL        call __ret_0_ := transferFrom~address~address~uint256_ONIT__success(this, msgsender_MSG, msgvalue_MSG, from_s1322, to_s1322, value_s1322);
[L2370]  CALL        call notFrozen_pre__success(this, msgsender_MSG, msgvalue_MSG, from_s1322);
[L3582]  COND FALSE  !(!!frozenAccount_ONIT[this][_holder_s1185])
[L2370]  RET         call notFrozen_pre__success(this, msgsender_MSG, msgvalue_MSG, from_s1322);
[L2371]  COND FALSE  !(revert)
[L2374]  COND FALSE  !(alloc_timelockList_ONIT_lvl0[timelockList_ONIT[this]][from_s1322] == false)
[L2385]  COND FALSE  !(Length[M_Ref_Ref[timelockList_ONIT[this]][from_s1322]] > 0)
[L2391]  COND TRUE   DType[this] == ONIT
[L2392]  CALL        call __var_24 := transferFrom~address~address~uint256_ERC20Pausable__success(this, msgsender_MSG, msgvalue_MSG, from_s1322, to_s1322, value_s1322);
[L2088]  CALL        call whenNotPaused_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L3558]  COND FALSE  !(!!_paused_Pausable[this])
[L2088]  RET         call whenNotPaused_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L2089]  COND FALSE  !(revert)
[L2092]  COND TRUE   DType[this] == ONIT
[L2093]  CALL        call __var_11 := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s1074, to_s1074, value_s1074);
[L1926]  CALL        call __var_5 := sub~uint256~uint256_SafeMath__success(this, this, 0, _allowed_ERC20[this][from_s760][msgsender_MSG], value_s760);
[L1679]  COND FALSE  !(!(b_s82 <= a_s82))
[L1683]              c_s82 := (a_s82 - b_s82) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1684]              __ret_0_ := c_s82;
[L1926]  RET         call __var_5 := sub~uint256~uint256_SafeMath__success(this, this, 0, _allowed_ERC20[this][from_s760][msgsender_MSG], value_s760);
[L1927]  COND FALSE  !(revert)
[L1930]              sum__allowed1[from_s760] := sum__allowed1[from_s760] - _allowed_ERC20[this][from_s760][msgsender_MSG];
[L1931]              _allowed_ERC20[this][from_s760][msgsender_MSG] := __var_5;
[L1932]              sum__allowed1[from_s760] := sum__allowed1[from_s760] + _allowed_ERC20[this][from_s760][msgsender_MSG];
[L1933]  COND TRUE   DType[this] == ONIT
[L1934]  CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s760, to_s760, value_s760);
[L1987]              __var_6 := null;
[L1988]  COND FALSE  !(!(to_s904 != null))
[L1992]  CALL        call __var_7 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][from_s904], value_s904);
[L1679]  COND FALSE  !(!(b_s82 <= a_s82))
[L1683]              c_s82 := (a_s82 - b_s82) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1684]              __ret_0_ := c_s82;
[L1992]  RET         call __var_7 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][from_s904], value_s904);
[L1993]  COND FALSE  !(revert)
[L1996]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][from_s904];
[L1997]              _balances_ERC20[this][from_s904] := __var_7;
[L1998]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][from_s904];
[L1999]  CALL        call __var_8 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][to_s904], value_s904);
[L1703]              c_s106 := (a_s106 + b_s106) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1704]  COND FALSE  !(!(c_s106 >= a_s106))
[L1708]              __ret_0_ := c_s106;
[L1999]  RET         call __var_8 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][to_s904], value_s904);
[L2000]  COND FALSE  !(revert)
[L2003]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][to_s904];
[L2004]              _balances_ERC20[this][to_s904] := __var_8;
[L2005]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][to_s904];
[L2006]              assert { :EventEmitted "Transfer_ERC20" } true;
[L1934]  RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s760, to_s760, value_s760);
[L1935]  COND FALSE  !(revert)
[L1951]              assert { :EventEmitted "Approval_ERC20" } true;
[L1952]              __ret_0_ := true;
[L2093]  RET         call __var_11 := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s1074, to_s1074, value_s1074);
[L2094]  COND FALSE  !(revert)
[L2105]              __ret_0_ := __var_11;
[L2392]  RET         call __var_24 := transferFrom~address~address~uint256_ERC20Pausable__success(this, msgsender_MSG, msgvalue_MSG, from_s1322, to_s1322, value_s1322);
[L2393]  COND FALSE  !(revert)
[L2399]              __ret_0_ := __var_24;
[L997]   RET         call __ret_0_ := transferFrom~address~address~uint256_ONIT__success(this, msgsender_MSG, msgvalue_MSG, from_s1322, to_s1322, value_s1322);
[L998]               assume !revert && gas >= 0;
[L4367]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_ONIT(this, msgsender_MSG, msgvalue_MSG, from_s1322, to_s1322, value_s1322);
[L4400]  RET         call CorralChoice_ONIT(this);

Loop:
[L4400]        assume true;

[2020-11-24 16:03:05,743 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 16:03:05,743 INFO  L82        PathProgramCache]: Analyzing trace with hash 1905388217, now seen corresponding path program 1 times
[2020-11-24 16:03:05,744 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 16:03:05,767 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 16:03:05,964 INFO  L134       CoverageAnalysis]: Checked inductivity of 5 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 5 trivial. 0 not checked.
[2020-11-24 16:03:05,964 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 16:03:05,964 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [19] imperfect sequences [] total 19
[2020-11-24 16:03:05,964 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 16:03:05,965 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 19 interpolants.
[2020-11-24 16:03:05,965 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=44, Invalid=298, Unknown=0, NotChecked=0, Total=342
[2020-11-24 16:03:05,965 INFO  L87              Difference]: Start difference. First operand 335 states and 362 transitions. cyclomatic complexity: 29 Second operand 19 states.
[2020-11-24 16:03:06,619 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 16:03:06,619 INFO  L93              Difference]: Finished difference Result 365 states and 398 transitions.
[2020-11-24 16:03:06,619 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 19 states. 
[2020-11-24 16:03:06,619 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 365 states and 398 transitions.
[2020-11-24 16:03:06,621 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 16:03:06,622 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 365 states to 349 states and 379 transitions.
[2020-11-24 16:03:06,622 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 141
[2020-11-24 16:03:06,622 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 141
[2020-11-24 16:03:06,622 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 349 states and 379 transitions.
[2020-11-24 16:03:06,623 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 16:03:06,623 INFO  L728         BuchiCegarLoop]: Abstraction has 349 states and 379 transitions.
[2020-11-24 16:03:06,623 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 349 states and 379 transitions.
[2020-11-24 16:03:06,626 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 349 to 348.
[2020-11-24 16:03:06,626 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 348 states.
[2020-11-24 16:03:06,627 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 348 states to 348 states and 377 transitions.
[2020-11-24 16:03:06,627 INFO  L751         BuchiCegarLoop]: Abstraction has 348 states and 377 transitions.
[2020-11-24 16:03:06,627 INFO  L631         BuchiCegarLoop]: Abstraction has 348 states and 377 transitions.
[2020-11-24 16:03:06,627 INFO  L445         BuchiCegarLoop]: ======== Iteration 6============
[2020-11-24 16:03:06,627 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 348 states and 377 transitions.
[2020-11-24 16:03:06,628 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 16:03:06,628 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 16:03:06,628 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 16:03:06,629 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [3, 3, 3, 3, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 16:03:06,629 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L2]                 fail_transferFrom_ONIT0 := false;
[L2]                 call_transferFrom_ONIT0 := false;
[L2]     CALL        call main();
[L4395]              assume null == 0;
[L4396]  CALL        call this := FreshRefGenerator__success();
[L1636]              havoc newRef;
[L1637]              assume Alloc[newRef] == false;
[L1638]              Alloc[newRef] := true;
[L1639]              assume newRef != null;
[L4396]  RET         call this := FreshRefGenerator__success();
[L4397]              assume now >= 0;
[L4398]              assume DType[this] == ONIT;
[L4399]              assume !revert && gas >= 0;
[L4400]  CALL        call CorralChoice_ONIT(this);
[L4275]              havoc msgsender_MSG;
[L4276]              havoc msgvalue_MSG;
[L4277]              havoc choice;
[L4278]              havoc __ret_0_owner;
[L4279]              havoc __ret_0_newOwner;
[L4280]              havoc account_s293;
[L4281]              havoc __ret_0_isOwner;
[L4282]              havoc _newOwner_s313;
[L4283]              havoc __ret_0_acceptOwnership;
[L4284]              havoc account_s390;
[L4285]              havoc __ret_0_isPauser;
[L4286]              havoc account_s402;
[L4287]              havoc account_s414;
[L4288]              havoc __ret_0_paused;
[L4289]              havoc to_s1288;
[L4290]              havoc value_s1288;
[L4291]              havoc __ret_0_transfer;
[L4292]              havoc spender_s711;
[L4293]              havoc value_s711;
[L4294]              havoc __ret_0_approve;
[L4295]              havoc from_s1322;
[L4296]              havoc to_s1322;
[L4297]              havoc value_s1322;
[L4298]              havoc __ret_0_transferFrom;
[L4299]              havoc __ret_0_totalSupply;
[L4300]              havoc owner_s1254;
[L4301]              havoc __ret_0_balanceOf;
[L4302]              havoc owner_s656;
[L4303]              havoc spender_s656;
[L4304]              havoc __ret_0_allowance;
[L4305]              havoc spender_s809;
[L4306]              havoc addedValue_s809;
[L4307]              havoc __ret_0_increaseAllowance;
[L4308]              havoc spender_s858;
[L4309]              havoc subtractedValue_s858;
[L4310]              havoc __ret_0_decreaseAllowance;
[L4311]              havoc name_s1105;
[L4312]              havoc symbol_s1105;
[L4313]              havoc decimals_s1105;
[L4314]              havoc __ret_0_name;
[L4315]              havoc __ret_0_symbol;
[L4316]              havoc __ret_0_decimals;
[L4317]              havoc __ret_0_implementation;
[L4318]              havoc arg1693_s0;
[L4319]              havoc arg1694_s0;
[L4320]              havoc __ret_0_timelockList;
[L4321]              havoc arg1695_s0;
[L4322]              havoc __ret_0_frozenAccount;
[L4323]              havoc holder_s1351;
[L4324]              havoc __ret_0_freezeAccount;
[L4325]              havoc holder_s1379;
[L4326]              havoc __ret_0_unfreezeAccount;
[L4327]              havoc holder_s1410;
[L4328]              havoc value_s1410;
[L4329]              havoc releaseTime_s1410;
[L4330]              havoc __ret_0_lock;
[L4331]              havoc holder_s1439;
[L4332]              havoc value_s1439;
[L4333]              havoc releaseTime_s1439;
[L4334]              havoc __ret_0_transferWithLock;
[L4335]              havoc holder_s1468;
[L4336]              havoc idx_s1468;
[L4337]              havoc __ret_0_unlock;
[L4338]              havoc _newImplementation_s1486;
[L4339]              havoc value_s1663;
[L4340]              havoc __ret_0_mint;
[L4341]              havoc tmpNow;
[L4342]              havoc gas;
[L4343]              assume gas > 4000000 && gas <= 8000000;
[L4344]              tmpNow := now;
[L4345]              havoc now;
[L4346]              assume now > tmpNow;
[L4347]              assume msgsender_MSG != null;
[L4348]  COND FALSE  !(choice == 6)
[L4355]  COND FALSE  !(choice == 5)
[L4362]  COND TRUE   choice == 4
[L4363]              gas := gas - 21000;
[L4364]  COND TRUE   gas >= 0
[L4365]              assume value_s1322 >= 0 && value_s1322 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4366]              assume msgvalue_MSG == 0;
[L4367]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_ONIT(this, msgsender_MSG, msgvalue_MSG, from_s1322, to_s1322, value_s1322);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((((from_s1322 != to_s1322 && ((value_s1322 > _balances_ERC20[this][from_s1322] || value_s1322 > _allowed_ERC20[this][from_s1322][msgsender_MSG]) || _balances_ERC20[this][to_s1322] + value_s1322 >= 115792089237316195423570985008687907853269984665640564039457584007913129639936)) && value_s1322 >= 0) && value_s1322 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][to_s1322] >= 0) && _balances_ERC20[this][to_s1322] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][from_s1322] >= 0) && _balances_ERC20[this][from_s1322] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowed_ERC20[this][from_s1322][msgsender_MSG] >= 0) && _allowed_ERC20[this][from_s1322][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transferFrom_ONIT0 := true;
[L2]                 call_transferFrom_ONIT0 := false;
[L2]                 revert := revert_hold;
[L959]               havoc __exception;
[L960]               revert := false;
[L961]   COND FALSE  !(__exception)
[L997]   CALL        call __ret_0_ := transferFrom~address~address~uint256_ONIT__success(this, msgsender_MSG, msgvalue_MSG, from_s1322, to_s1322, value_s1322);
[L2370]  CALL        call notFrozen_pre__success(this, msgsender_MSG, msgvalue_MSG, from_s1322);
[L3582]  COND FALSE  !(!!frozenAccount_ONIT[this][_holder_s1185])
[L2370]  RET         call notFrozen_pre__success(this, msgsender_MSG, msgvalue_MSG, from_s1322);
[L2371]  COND FALSE  !(revert)
[L2374]  COND FALSE  !(alloc_timelockList_ONIT_lvl0[timelockList_ONIT[this]][from_s1322] == false)
[L2385]  COND TRUE   Length[M_Ref_Ref[timelockList_ONIT[this]][from_s1322]] > 0
[L2386]  CALL        call __var_23 := _autoUnlock~address_ONIT__success(this, msgsender_MSG, msgvalue_MSG, from_s1322);
[L2653]  COND FALSE  !(alloc_timelockList_ONIT_lvl0[timelockList_ONIT[this]][holder_s1645] == false)
[L2664]              idx_s1645 := 0;
[L2665]  COND TRUE   idx_s1645 < Length[M_Ref_Ref[timelockList_ONIT[this]][holder_s1645]]
[L2667]  COND FALSE  !(alloc_timelockList_ONIT_lvl0[timelockList_ONIT[this]][holder_s1645] == false)
[L2678]  COND TRUE   _releaseTime_ONIT.LockInfo[M_int_Ref[M_Ref_Ref[timelockList_ONIT[this]][holder_s1645]][idx_s1645]] <= now
[L2679]  CALL        call __var_36 := _unlock~address~uint256_ONIT__success(this, msgsender_MSG, msgvalue_MSG, holder_s1645, idx_s1645);
[L2512]  COND FALSE  !(alloc_timelockList_ONIT_lvl0[timelockList_ONIT[this]][holder_s1600] == false)
[L2523]              lockinfo_s1600 := M_int_Ref[M_Ref_Ref[timelockList_ONIT[this]][holder_s1600]][idx_s1600];
[L2524]              releaseAmount_s1600 := _amount_ONIT.LockInfo[lockinfo_s1600];
[L2525]  COND FALSE  !(alloc_timelockList_ONIT_lvl0[timelockList_ONIT[this]][holder_s1600] == false)
[L2536]  COND FALSE  !(alloc_timelockList_ONIT_lvl0[timelockList_ONIT[this]][holder_s1600] == false)
[L2547]  COND FALSE  !(alloc_timelockList_ONIT_lvl0[timelockList_ONIT[this]][holder_s1600] == false)
[L2558]  CALL        call __var_29 := sub~uint256~uint256_SafeMath__success(this, this, 0, Length[M_Ref_Ref[timelockList_ONIT[this]][holder_s1600]], 1);
[L1679]  COND FALSE  !(!(b_s82 <= a_s82))
[L1683]              c_s82 := (a_s82 - b_s82) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1684]              __ret_0_ := c_s82;
[L2558]  RET         call __var_29 := sub~uint256~uint256_SafeMath__success(this, this, 0, Length[M_Ref_Ref[timelockList_ONIT[this]][holder_s1600]], 1);
[L2559]  COND FALSE  !(revert)
[L2562]  COND FALSE  !(alloc_timelockList_ONIT_lvl0[timelockList_ONIT[this]][holder_s1600] == false)
[L2573]              M_int_Ref[M_Ref_Ref[timelockList_ONIT[this]][holder_s1600]][idx_s1600] := M_int_Ref[M_Ref_Ref[timelockList_ONIT[this]][holder_s1600]][__var_29];
[L2574]  COND FALSE  !(alloc_timelockList_ONIT_lvl0[timelockList_ONIT[this]][holder_s1600] == false)
[L2585]              Length[M_Ref_Ref[timelockList_ONIT[this]][holder_s1600]] := (Length[M_Ref_Ref[timelockList_ONIT[this]][holder_s1600]] - 1) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2586]              assert { :EventEmitted "Unlock_ONIT" } true;
[L2587]  CALL        call __var_33 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][holder_s1600], releaseAmount_s1600);
[L1703]              c_s106 := (a_s106 + b_s106) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1704]  COND FALSE  !(!(c_s106 >= a_s106))
[L1708]              __ret_0_ := c_s106;
[L2587]  RET         call __var_33 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][holder_s1600], releaseAmount_s1600);
[L2588]  COND FALSE  !(revert)
[L2591]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][holder_s1600];
[L2592]              _balances_ERC20[this][holder_s1600] := __var_33;
[L2593]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][holder_s1600];
[L2594]              __ret_0_ := true;
[L2679]  RET         call __var_36 := _unlock~address~uint256_ONIT__success(this, msgsender_MSG, msgvalue_MSG, holder_s1645, idx_s1645);
[L2680]  COND FALSE  !(revert)
[L2683]  COND FALSE  !(__var_36)
[L2687]              idx_s1645 := (idx_s1645 + 1) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2688]  COND TRUE   gas < 0
[L2386]  RET         call __var_23 := _autoUnlock~address_ONIT__success(this, msgsender_MSG, msgvalue_MSG, from_s1322);
[L2387]  COND FALSE  !(revert)
[L2391]  COND TRUE   DType[this] == ONIT
[L2392]  CALL        call __var_24 := transferFrom~address~address~uint256_ERC20Pausable__success(this, msgsender_MSG, msgvalue_MSG, from_s1322, to_s1322, value_s1322);
[L2088]  CALL        call whenNotPaused_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L3558]  COND FALSE  !(!!_paused_Pausable[this])
[L2088]  RET         call whenNotPaused_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L2089]  COND FALSE  !(revert)
[L2092]  COND TRUE   DType[this] == ONIT
[L2093]  CALL        call __var_11 := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s1074, to_s1074, value_s1074);
[L1926]  CALL        call __var_5 := sub~uint256~uint256_SafeMath__success(this, this, 0, _allowed_ERC20[this][from_s760][msgsender_MSG], value_s760);
[L1679]  COND FALSE  !(!(b_s82 <= a_s82))
[L1683]              c_s82 := (a_s82 - b_s82) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1684]              __ret_0_ := c_s82;
[L1926]  RET         call __var_5 := sub~uint256~uint256_SafeMath__success(this, this, 0, _allowed_ERC20[this][from_s760][msgsender_MSG], value_s760);
[L1927]  COND FALSE  !(revert)
[L1930]              sum__allowed1[from_s760] := sum__allowed1[from_s760] - _allowed_ERC20[this][from_s760][msgsender_MSG];
[L1931]              _allowed_ERC20[this][from_s760][msgsender_MSG] := __var_5;
[L1932]              sum__allowed1[from_s760] := sum__allowed1[from_s760] + _allowed_ERC20[this][from_s760][msgsender_MSG];
[L1933]  COND TRUE   DType[this] == ONIT
[L1934]  CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s760, to_s760, value_s760);
[L1987]              __var_6 := null;
[L1988]  COND FALSE  !(!(to_s904 != null))
[L1992]  CALL        call __var_7 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][from_s904], value_s904);
[L1679]  COND FALSE  !(!(b_s82 <= a_s82))
[L1683]              c_s82 := (a_s82 - b_s82) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1684]              __ret_0_ := c_s82;
[L1992]  RET         call __var_7 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][from_s904], value_s904);
[L1993]  COND FALSE  !(revert)
[L1996]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][from_s904];
[L1997]              _balances_ERC20[this][from_s904] := __var_7;
[L1998]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][from_s904];
[L1999]  CALL        call __var_8 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][to_s904], value_s904);
[L1703]              c_s106 := (a_s106 + b_s106) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1704]  COND FALSE  !(!(c_s106 >= a_s106))
[L1708]              __ret_0_ := c_s106;
[L1999]  RET         call __var_8 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][to_s904], value_s904);
[L2000]  COND FALSE  !(revert)
[L2003]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][to_s904];
[L2004]              _balances_ERC20[this][to_s904] := __var_8;
[L2005]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][to_s904];
[L2006]              assert { :EventEmitted "Transfer_ERC20" } true;
[L1934]  RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s760, to_s760, value_s760);
[L1935]  COND FALSE  !(revert)
[L1951]              assert { :EventEmitted "Approval_ERC20" } true;
[L1952]              __ret_0_ := true;
[L2093]  RET         call __var_11 := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s1074, to_s1074, value_s1074);
[L2094]  COND FALSE  !(revert)
[L2105]              __ret_0_ := __var_11;
[L2392]  RET         call __var_24 := transferFrom~address~address~uint256_ERC20Pausable__success(this, msgsender_MSG, msgvalue_MSG, from_s1322, to_s1322, value_s1322);
[L2393]  COND FALSE  !(revert)
[L2399]              __ret_0_ := __var_24;
[L997]   RET         call __ret_0_ := transferFrom~address~address~uint256_ONIT__success(this, msgsender_MSG, msgvalue_MSG, from_s1322, to_s1322, value_s1322);
[L998]               assume !revert && gas >= 0;
[L4367]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_ONIT(this, msgsender_MSG, msgvalue_MSG, from_s1322, to_s1322, value_s1322);
[L4400]  RET         call CorralChoice_ONIT(this);

Loop:
[L4400]        assume true;

[2020-11-24 16:03:06,632 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 16:03:06,632 INFO  L82        PathProgramCache]: Analyzing trace with hash 1243462928, now seen corresponding path program 1 times
[2020-11-24 16:03:06,633 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 16:03:06,641 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 16:03:06,669 INFO  L134       CoverageAnalysis]: Checked inductivity of 20 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 20 trivial. 0 not checked.
[2020-11-24 16:03:06,670 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 16:03:06,670 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-24 16:03:06,670 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 16:03:06,670 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-24 16:03:06,670 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-24 16:03:06,670 INFO  L87              Difference]: Start difference. First operand 348 states and 377 transitions. cyclomatic complexity: 32 Second operand 4 states.
[2020-11-24 16:03:06,688 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 16:03:06,688 INFO  L93              Difference]: Finished difference Result 348 states and 376 transitions.
[2020-11-24 16:03:06,688 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-24 16:03:06,688 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 348 states and 376 transitions.
[2020-11-24 16:03:06,690 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 16:03:06,691 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 348 states to 348 states and 376 transitions.
[2020-11-24 16:03:06,691 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 141
[2020-11-24 16:03:06,691 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 141
[2020-11-24 16:03:06,691 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 348 states and 376 transitions.
[2020-11-24 16:03:06,691 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 16:03:06,691 INFO  L728         BuchiCegarLoop]: Abstraction has 348 states and 376 transitions.
[2020-11-24 16:03:06,692 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 348 states and 376 transitions.
[2020-11-24 16:03:06,694 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 348 to 348.
[2020-11-24 16:03:06,694 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 348 states.
[2020-11-24 16:03:06,695 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 348 states to 348 states and 376 transitions.
[2020-11-24 16:03:06,695 INFO  L751         BuchiCegarLoop]: Abstraction has 348 states and 376 transitions.
[2020-11-24 16:03:06,695 INFO  L631         BuchiCegarLoop]: Abstraction has 348 states and 376 transitions.
[2020-11-24 16:03:06,695 INFO  L445         BuchiCegarLoop]: ======== Iteration 7============
[2020-11-24 16:03:06,695 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 348 states and 376 transitions.
[2020-11-24 16:03:06,696 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 16:03:06,696 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 16:03:06,696 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 16:03:06,696 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [3, 3, 3, 3, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 16:03:06,697 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L2]                 fail_transferFrom_ONIT0 := false;
[L2]                 call_transferFrom_ONIT0 := false;
[L2]     CALL        call main();
[L4395]              assume null == 0;
[L4396]  CALL        call this := FreshRefGenerator__success();
[L1636]              havoc newRef;
[L1637]              assume Alloc[newRef] == false;
[L1638]              Alloc[newRef] := true;
[L1639]              assume newRef != null;
[L4396]  RET         call this := FreshRefGenerator__success();
[L4397]              assume now >= 0;
[L4398]              assume DType[this] == ONIT;
[L4399]              assume !revert && gas >= 0;
[L4400]  CALL        call CorralChoice_ONIT(this);
[L4275]              havoc msgsender_MSG;
[L4276]              havoc msgvalue_MSG;
[L4277]              havoc choice;
[L4278]              havoc __ret_0_owner;
[L4279]              havoc __ret_0_newOwner;
[L4280]              havoc account_s293;
[L4281]              havoc __ret_0_isOwner;
[L4282]              havoc _newOwner_s313;
[L4283]              havoc __ret_0_acceptOwnership;
[L4284]              havoc account_s390;
[L4285]              havoc __ret_0_isPauser;
[L4286]              havoc account_s402;
[L4287]              havoc account_s414;
[L4288]              havoc __ret_0_paused;
[L4289]              havoc to_s1288;
[L4290]              havoc value_s1288;
[L4291]              havoc __ret_0_transfer;
[L4292]              havoc spender_s711;
[L4293]              havoc value_s711;
[L4294]              havoc __ret_0_approve;
[L4295]              havoc from_s1322;
[L4296]              havoc to_s1322;
[L4297]              havoc value_s1322;
[L4298]              havoc __ret_0_transferFrom;
[L4299]              havoc __ret_0_totalSupply;
[L4300]              havoc owner_s1254;
[L4301]              havoc __ret_0_balanceOf;
[L4302]              havoc owner_s656;
[L4303]              havoc spender_s656;
[L4304]              havoc __ret_0_allowance;
[L4305]              havoc spender_s809;
[L4306]              havoc addedValue_s809;
[L4307]              havoc __ret_0_increaseAllowance;
[L4308]              havoc spender_s858;
[L4309]              havoc subtractedValue_s858;
[L4310]              havoc __ret_0_decreaseAllowance;
[L4311]              havoc name_s1105;
[L4312]              havoc symbol_s1105;
[L4313]              havoc decimals_s1105;
[L4314]              havoc __ret_0_name;
[L4315]              havoc __ret_0_symbol;
[L4316]              havoc __ret_0_decimals;
[L4317]              havoc __ret_0_implementation;
[L4318]              havoc arg1693_s0;
[L4319]              havoc arg1694_s0;
[L4320]              havoc __ret_0_timelockList;
[L4321]              havoc arg1695_s0;
[L4322]              havoc __ret_0_frozenAccount;
[L4323]              havoc holder_s1351;
[L4324]              havoc __ret_0_freezeAccount;
[L4325]              havoc holder_s1379;
[L4326]              havoc __ret_0_unfreezeAccount;
[L4327]              havoc holder_s1410;
[L4328]              havoc value_s1410;
[L4329]              havoc releaseTime_s1410;
[L4330]              havoc __ret_0_lock;
[L4331]              havoc holder_s1439;
[L4332]              havoc value_s1439;
[L4333]              havoc releaseTime_s1439;
[L4334]              havoc __ret_0_transferWithLock;
[L4335]              havoc holder_s1468;
[L4336]              havoc idx_s1468;
[L4337]              havoc __ret_0_unlock;
[L4338]              havoc _newImplementation_s1486;
[L4339]              havoc value_s1663;
[L4340]              havoc __ret_0_mint;
[L4341]              havoc tmpNow;
[L4342]              havoc gas;
[L4343]              assume gas > 4000000 && gas <= 8000000;
[L4344]              tmpNow := now;
[L4345]              havoc now;
[L4346]              assume now > tmpNow;
[L4347]              assume msgsender_MSG != null;
[L4348]  COND FALSE  !(choice == 6)
[L4355]  COND FALSE  !(choice == 5)
[L4362]  COND TRUE   choice == 4
[L4363]              gas := gas - 21000;
[L4364]  COND TRUE   gas >= 0
[L4365]              assume value_s1322 >= 0 && value_s1322 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4366]              assume msgvalue_MSG == 0;
[L4367]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_ONIT(this, msgsender_MSG, msgvalue_MSG, from_s1322, to_s1322, value_s1322);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((((from_s1322 != to_s1322 && ((value_s1322 > _balances_ERC20[this][from_s1322] || value_s1322 > _allowed_ERC20[this][from_s1322][msgsender_MSG]) || _balances_ERC20[this][to_s1322] + value_s1322 >= 115792089237316195423570985008687907853269984665640564039457584007913129639936)) && value_s1322 >= 0) && value_s1322 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][to_s1322] >= 0) && _balances_ERC20[this][to_s1322] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][from_s1322] >= 0) && _balances_ERC20[this][from_s1322] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowed_ERC20[this][from_s1322][msgsender_MSG] >= 0) && _allowed_ERC20[this][from_s1322][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transferFrom_ONIT0 := true;
[L2]                 call_transferFrom_ONIT0 := false;
[L2]                 revert := revert_hold;
[L959]               havoc __exception;
[L960]               revert := false;
[L961]   COND FALSE  !(__exception)
[L997]   CALL        call __ret_0_ := transferFrom~address~address~uint256_ONIT__success(this, msgsender_MSG, msgvalue_MSG, from_s1322, to_s1322, value_s1322);
[L2370]  CALL        call notFrozen_pre__success(this, msgsender_MSG, msgvalue_MSG, from_s1322);
[L3582]  COND FALSE  !(!!frozenAccount_ONIT[this][_holder_s1185])
[L2370]  RET         call notFrozen_pre__success(this, msgsender_MSG, msgvalue_MSG, from_s1322);
[L2371]  COND FALSE  !(revert)
[L2374]  COND FALSE  !(alloc_timelockList_ONIT_lvl0[timelockList_ONIT[this]][from_s1322] == false)
[L2385]  COND TRUE   Length[M_Ref_Ref[timelockList_ONIT[this]][from_s1322]] > 0
[L2386]  CALL        call __var_23 := _autoUnlock~address_ONIT__success(this, msgsender_MSG, msgvalue_MSG, from_s1322);
[L2653]  COND FALSE  !(alloc_timelockList_ONIT_lvl0[timelockList_ONIT[this]][holder_s1645] == false)
[L2664]              idx_s1645 := 0;
[L2665]  COND TRUE   idx_s1645 < Length[M_Ref_Ref[timelockList_ONIT[this]][holder_s1645]]
[L2667]  COND FALSE  !(alloc_timelockList_ONIT_lvl0[timelockList_ONIT[this]][holder_s1645] == false)
[L2678]  COND TRUE   _releaseTime_ONIT.LockInfo[M_int_Ref[M_Ref_Ref[timelockList_ONIT[this]][holder_s1645]][idx_s1645]] <= now
[L2679]  CALL        call __var_36 := _unlock~address~uint256_ONIT__success(this, msgsender_MSG, msgvalue_MSG, holder_s1645, idx_s1645);
[L2512]  COND FALSE  !(alloc_timelockList_ONIT_lvl0[timelockList_ONIT[this]][holder_s1600] == false)
[L2523]              lockinfo_s1600 := M_int_Ref[M_Ref_Ref[timelockList_ONIT[this]][holder_s1600]][idx_s1600];
[L2524]              releaseAmount_s1600 := _amount_ONIT.LockInfo[lockinfo_s1600];
[L2525]  COND FALSE  !(alloc_timelockList_ONIT_lvl0[timelockList_ONIT[this]][holder_s1600] == false)
[L2536]  COND FALSE  !(alloc_timelockList_ONIT_lvl0[timelockList_ONIT[this]][holder_s1600] == false)
[L2547]  COND FALSE  !(alloc_timelockList_ONIT_lvl0[timelockList_ONIT[this]][holder_s1600] == false)
[L2558]  CALL        call __var_29 := sub~uint256~uint256_SafeMath__success(this, this, 0, Length[M_Ref_Ref[timelockList_ONIT[this]][holder_s1600]], 1);
[L1679]  COND FALSE  !(!(b_s82 <= a_s82))
[L1683]              c_s82 := (a_s82 - b_s82) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1684]              __ret_0_ := c_s82;
[L2558]  RET         call __var_29 := sub~uint256~uint256_SafeMath__success(this, this, 0, Length[M_Ref_Ref[timelockList_ONIT[this]][holder_s1600]], 1);
[L2559]  COND FALSE  !(revert)
[L2562]  COND FALSE  !(alloc_timelockList_ONIT_lvl0[timelockList_ONIT[this]][holder_s1600] == false)
[L2573]              M_int_Ref[M_Ref_Ref[timelockList_ONIT[this]][holder_s1600]][idx_s1600] := M_int_Ref[M_Ref_Ref[timelockList_ONIT[this]][holder_s1600]][__var_29];
[L2574]  COND FALSE  !(alloc_timelockList_ONIT_lvl0[timelockList_ONIT[this]][holder_s1600] == false)
[L2585]              Length[M_Ref_Ref[timelockList_ONIT[this]][holder_s1600]] := (Length[M_Ref_Ref[timelockList_ONIT[this]][holder_s1600]] - 1) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2586]              assert { :EventEmitted "Unlock_ONIT" } true;
[L2587]  CALL        call __var_33 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][holder_s1600], releaseAmount_s1600);
[L1703]              c_s106 := (a_s106 + b_s106) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1704]  COND FALSE  !(!(c_s106 >= a_s106))
[L1708]              __ret_0_ := c_s106;
[L2587]  RET         call __var_33 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][holder_s1600], releaseAmount_s1600);
[L2588]  COND FALSE  !(revert)
[L2591]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][holder_s1600];
[L2592]              _balances_ERC20[this][holder_s1600] := __var_33;
[L2593]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][holder_s1600];
[L2594]              __ret_0_ := true;
[L2679]  RET         call __var_36 := _unlock~address~uint256_ONIT__success(this, msgsender_MSG, msgvalue_MSG, holder_s1645, idx_s1645);
[L2680]  COND FALSE  !(revert)
[L2683]  COND FALSE  !(__var_36)
[L2687]              idx_s1645 := (idx_s1645 + 1) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2688]  COND FALSE  !(gas < 0)
[L2665]  COND FALSE  !(idx_s1645 < Length[M_Ref_Ref[timelockList_ONIT[this]][holder_s1645]])
[L2692]              __ret_0_ := true;
[L2386]  RET         call __var_23 := _autoUnlock~address_ONIT__success(this, msgsender_MSG, msgvalue_MSG, from_s1322);
[L2387]  COND FALSE  !(revert)
[L2391]  COND TRUE   DType[this] == ONIT
[L2392]  CALL        call __var_24 := transferFrom~address~address~uint256_ERC20Pausable__success(this, msgsender_MSG, msgvalue_MSG, from_s1322, to_s1322, value_s1322);
[L2088]  CALL        call whenNotPaused_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L3558]  COND FALSE  !(!!_paused_Pausable[this])
[L2088]  RET         call whenNotPaused_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L2089]  COND FALSE  !(revert)
[L2092]  COND TRUE   DType[this] == ONIT
[L2093]  CALL        call __var_11 := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s1074, to_s1074, value_s1074);
[L1926]  CALL        call __var_5 := sub~uint256~uint256_SafeMath__success(this, this, 0, _allowed_ERC20[this][from_s760][msgsender_MSG], value_s760);
[L1679]  COND FALSE  !(!(b_s82 <= a_s82))
[L1683]              c_s82 := (a_s82 - b_s82) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1684]              __ret_0_ := c_s82;
[L1926]  RET         call __var_5 := sub~uint256~uint256_SafeMath__success(this, this, 0, _allowed_ERC20[this][from_s760][msgsender_MSG], value_s760);
[L1927]  COND FALSE  !(revert)
[L1930]              sum__allowed1[from_s760] := sum__allowed1[from_s760] - _allowed_ERC20[this][from_s760][msgsender_MSG];
[L1931]              _allowed_ERC20[this][from_s760][msgsender_MSG] := __var_5;
[L1932]              sum__allowed1[from_s760] := sum__allowed1[from_s760] + _allowed_ERC20[this][from_s760][msgsender_MSG];
[L1933]  COND TRUE   DType[this] == ONIT
[L1934]  CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s760, to_s760, value_s760);
[L1987]              __var_6 := null;
[L1988]  COND FALSE  !(!(to_s904 != null))
[L1992]  CALL        call __var_7 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][from_s904], value_s904);
[L1679]  COND FALSE  !(!(b_s82 <= a_s82))
[L1683]              c_s82 := (a_s82 - b_s82) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1684]              __ret_0_ := c_s82;
[L1992]  RET         call __var_7 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][from_s904], value_s904);
[L1993]  COND FALSE  !(revert)
[L1996]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][from_s904];
[L1997]              _balances_ERC20[this][from_s904] := __var_7;
[L1998]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][from_s904];
[L1999]  CALL        call __var_8 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][to_s904], value_s904);
[L1703]              c_s106 := (a_s106 + b_s106) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1704]  COND FALSE  !(!(c_s106 >= a_s106))
[L1708]              __ret_0_ := c_s106;
[L1999]  RET         call __var_8 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][to_s904], value_s904);
[L2000]  COND FALSE  !(revert)
[L2003]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][to_s904];
[L2004]              _balances_ERC20[this][to_s904] := __var_8;
[L2005]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][to_s904];
[L2006]              assert { :EventEmitted "Transfer_ERC20" } true;
[L1934]  RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s760, to_s760, value_s760);
[L1935]  COND FALSE  !(revert)
[L1951]              assert { :EventEmitted "Approval_ERC20" } true;
[L1952]              __ret_0_ := true;
[L2093]  RET         call __var_11 := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s1074, to_s1074, value_s1074);
[L2094]  COND FALSE  !(revert)
[L2105]              __ret_0_ := __var_11;
[L2392]  RET         call __var_24 := transferFrom~address~address~uint256_ERC20Pausable__success(this, msgsender_MSG, msgvalue_MSG, from_s1322, to_s1322, value_s1322);
[L2393]  COND FALSE  !(revert)
[L2399]              __ret_0_ := __var_24;
[L997]   RET         call __ret_0_ := transferFrom~address~address~uint256_ONIT__success(this, msgsender_MSG, msgvalue_MSG, from_s1322, to_s1322, value_s1322);
[L998]               assume !revert && gas >= 0;
[L4367]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_ONIT(this, msgsender_MSG, msgvalue_MSG, from_s1322, to_s1322, value_s1322);
[L4400]  RET         call CorralChoice_ONIT(this);

Loop:
[L4400]        assume true;

[2020-11-24 16:03:06,699 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 16:03:06,699 INFO  L82        PathProgramCache]: Analyzing trace with hash 1434362539, now seen corresponding path program 1 times
[2020-11-24 16:03:06,700 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 16:03:06,708 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 16:03:06,734 INFO  L134       CoverageAnalysis]: Checked inductivity of 21 backedges. 1 proven. 0 refuted. 0 times theorem prover too weak. 20 trivial. 0 not checked.
[2020-11-24 16:03:06,734 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 16:03:06,734 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-24 16:03:06,734 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 16:03:06,734 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-24 16:03:06,734 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-24 16:03:06,734 INFO  L87              Difference]: Start difference. First operand 348 states and 376 transitions. cyclomatic complexity: 31 Second operand 4 states.
[2020-11-24 16:03:06,737 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 16:03:06,737 INFO  L93              Difference]: Finished difference Result 349 states and 377 transitions.
[2020-11-24 16:03:06,737 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-24 16:03:06,737 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 349 states and 377 transitions.
[2020-11-24 16:03:06,739 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 16:03:06,740 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 349 states to 349 states and 377 transitions.
[2020-11-24 16:03:06,740 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 141
[2020-11-24 16:03:06,740 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 141
[2020-11-24 16:03:06,740 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 349 states and 377 transitions.
[2020-11-24 16:03:06,741 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 16:03:06,741 INFO  L728         BuchiCegarLoop]: Abstraction has 349 states and 377 transitions.
[2020-11-24 16:03:06,741 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 349 states and 377 transitions.
[2020-11-24 16:03:06,743 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 349 to 348.
[2020-11-24 16:03:06,744 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 348 states.
[2020-11-24 16:03:06,744 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 348 states to 348 states and 375 transitions.
[2020-11-24 16:03:06,744 INFO  L751         BuchiCegarLoop]: Abstraction has 348 states and 375 transitions.
[2020-11-24 16:03:06,744 INFO  L631         BuchiCegarLoop]: Abstraction has 348 states and 375 transitions.
[2020-11-24 16:03:06,744 INFO  L445         BuchiCegarLoop]: ======== Iteration 8============
[2020-11-24 16:03:06,744 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 348 states and 375 transitions.
[2020-11-24 16:03:06,745 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 16:03:06,745 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 16:03:06,745 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 16:03:06,746 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [3, 3, 3, 3, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 16:03:06,746 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L2]                 fail_transferFrom_ONIT0 := false;
[L2]                 call_transferFrom_ONIT0 := false;
[L2]     CALL        call main();
[L4395]              assume null == 0;
[L4396]  CALL        call this := FreshRefGenerator__success();
[L1636]              havoc newRef;
[L1637]              assume Alloc[newRef] == false;
[L1638]              Alloc[newRef] := true;
[L1639]              assume newRef != null;
[L4396]  RET         call this := FreshRefGenerator__success();
[L4397]              assume now >= 0;
[L4398]              assume DType[this] == ONIT;
[L4399]              assume !revert && gas >= 0;
[L4400]  CALL        call CorralChoice_ONIT(this);
[L4275]              havoc msgsender_MSG;
[L4276]              havoc msgvalue_MSG;
[L4277]              havoc choice;
[L4278]              havoc __ret_0_owner;
[L4279]              havoc __ret_0_newOwner;
[L4280]              havoc account_s293;
[L4281]              havoc __ret_0_isOwner;
[L4282]              havoc _newOwner_s313;
[L4283]              havoc __ret_0_acceptOwnership;
[L4284]              havoc account_s390;
[L4285]              havoc __ret_0_isPauser;
[L4286]              havoc account_s402;
[L4287]              havoc account_s414;
[L4288]              havoc __ret_0_paused;
[L4289]              havoc to_s1288;
[L4290]              havoc value_s1288;
[L4291]              havoc __ret_0_transfer;
[L4292]              havoc spender_s711;
[L4293]              havoc value_s711;
[L4294]              havoc __ret_0_approve;
[L4295]              havoc from_s1322;
[L4296]              havoc to_s1322;
[L4297]              havoc value_s1322;
[L4298]              havoc __ret_0_transferFrom;
[L4299]              havoc __ret_0_totalSupply;
[L4300]              havoc owner_s1254;
[L4301]              havoc __ret_0_balanceOf;
[L4302]              havoc owner_s656;
[L4303]              havoc spender_s656;
[L4304]              havoc __ret_0_allowance;
[L4305]              havoc spender_s809;
[L4306]              havoc addedValue_s809;
[L4307]              havoc __ret_0_increaseAllowance;
[L4308]              havoc spender_s858;
[L4309]              havoc subtractedValue_s858;
[L4310]              havoc __ret_0_decreaseAllowance;
[L4311]              havoc name_s1105;
[L4312]              havoc symbol_s1105;
[L4313]              havoc decimals_s1105;
[L4314]              havoc __ret_0_name;
[L4315]              havoc __ret_0_symbol;
[L4316]              havoc __ret_0_decimals;
[L4317]              havoc __ret_0_implementation;
[L4318]              havoc arg1693_s0;
[L4319]              havoc arg1694_s0;
[L4320]              havoc __ret_0_timelockList;
[L4321]              havoc arg1695_s0;
[L4322]              havoc __ret_0_frozenAccount;
[L4323]              havoc holder_s1351;
[L4324]              havoc __ret_0_freezeAccount;
[L4325]              havoc holder_s1379;
[L4326]              havoc __ret_0_unfreezeAccount;
[L4327]              havoc holder_s1410;
[L4328]              havoc value_s1410;
[L4329]              havoc releaseTime_s1410;
[L4330]              havoc __ret_0_lock;
[L4331]              havoc holder_s1439;
[L4332]              havoc value_s1439;
[L4333]              havoc releaseTime_s1439;
[L4334]              havoc __ret_0_transferWithLock;
[L4335]              havoc holder_s1468;
[L4336]              havoc idx_s1468;
[L4337]              havoc __ret_0_unlock;
[L4338]              havoc _newImplementation_s1486;
[L4339]              havoc value_s1663;
[L4340]              havoc __ret_0_mint;
[L4341]              havoc tmpNow;
[L4342]              havoc gas;
[L4343]              assume gas > 4000000 && gas <= 8000000;
[L4344]              tmpNow := now;
[L4345]              havoc now;
[L4346]              assume now > tmpNow;
[L4347]              assume msgsender_MSG != null;
[L4348]  COND FALSE  !(choice == 6)
[L4355]  COND FALSE  !(choice == 5)
[L4362]  COND TRUE   choice == 4
[L4363]              gas := gas - 21000;
[L4364]  COND TRUE   gas >= 0
[L4365]              assume value_s1322 >= 0 && value_s1322 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4366]              assume msgvalue_MSG == 0;
[L4367]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_ONIT(this, msgsender_MSG, msgvalue_MSG, from_s1322, to_s1322, value_s1322);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((((from_s1322 != to_s1322 && ((value_s1322 > _balances_ERC20[this][from_s1322] || value_s1322 > _allowed_ERC20[this][from_s1322][msgsender_MSG]) || _balances_ERC20[this][to_s1322] + value_s1322 >= 115792089237316195423570985008687907853269984665640564039457584007913129639936)) && value_s1322 >= 0) && value_s1322 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][to_s1322] >= 0) && _balances_ERC20[this][to_s1322] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][from_s1322] >= 0) && _balances_ERC20[this][from_s1322] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowed_ERC20[this][from_s1322][msgsender_MSG] >= 0) && _allowed_ERC20[this][from_s1322][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transferFrom_ONIT0 := true;
[L2]                 call_transferFrom_ONIT0 := false;
[L2]                 revert := revert_hold;
[L959]               havoc __exception;
[L960]               revert := false;
[L961]   COND FALSE  !(__exception)
[L997]   CALL        call __ret_0_ := transferFrom~address~address~uint256_ONIT__success(this, msgsender_MSG, msgvalue_MSG, from_s1322, to_s1322, value_s1322);
[L2370]  CALL        call notFrozen_pre__success(this, msgsender_MSG, msgvalue_MSG, from_s1322);
[L3582]  COND FALSE  !(!!frozenAccount_ONIT[this][_holder_s1185])
[L2370]  RET         call notFrozen_pre__success(this, msgsender_MSG, msgvalue_MSG, from_s1322);
[L2371]  COND FALSE  !(revert)
[L2374]  COND FALSE  !(alloc_timelockList_ONIT_lvl0[timelockList_ONIT[this]][from_s1322] == false)
[L2385]  COND TRUE   Length[M_Ref_Ref[timelockList_ONIT[this]][from_s1322]] > 0
[L2386]  CALL        call __var_23 := _autoUnlock~address_ONIT__success(this, msgsender_MSG, msgvalue_MSG, from_s1322);
[L2653]  COND FALSE  !(alloc_timelockList_ONIT_lvl0[timelockList_ONIT[this]][holder_s1645] == false)
[L2664]              idx_s1645 := 0;
[L2665]  COND TRUE   idx_s1645 < Length[M_Ref_Ref[timelockList_ONIT[this]][holder_s1645]]
[L2667]  COND FALSE  !(alloc_timelockList_ONIT_lvl0[timelockList_ONIT[this]][holder_s1645] == false)
[L2678]  COND TRUE   _releaseTime_ONIT.LockInfo[M_int_Ref[M_Ref_Ref[timelockList_ONIT[this]][holder_s1645]][idx_s1645]] <= now
[L2679]  CALL        call __var_36 := _unlock~address~uint256_ONIT__success(this, msgsender_MSG, msgvalue_MSG, holder_s1645, idx_s1645);
[L2512]  COND FALSE  !(alloc_timelockList_ONIT_lvl0[timelockList_ONIT[this]][holder_s1600] == false)
[L2523]              lockinfo_s1600 := M_int_Ref[M_Ref_Ref[timelockList_ONIT[this]][holder_s1600]][idx_s1600];
[L2524]              releaseAmount_s1600 := _amount_ONIT.LockInfo[lockinfo_s1600];
[L2525]  COND FALSE  !(alloc_timelockList_ONIT_lvl0[timelockList_ONIT[this]][holder_s1600] == false)
[L2536]  COND FALSE  !(alloc_timelockList_ONIT_lvl0[timelockList_ONIT[this]][holder_s1600] == false)
[L2547]  COND FALSE  !(alloc_timelockList_ONIT_lvl0[timelockList_ONIT[this]][holder_s1600] == false)
[L2558]  CALL        call __var_29 := sub~uint256~uint256_SafeMath__success(this, this, 0, Length[M_Ref_Ref[timelockList_ONIT[this]][holder_s1600]], 1);
[L1679]  COND FALSE  !(!(b_s82 <= a_s82))
[L1683]              c_s82 := (a_s82 - b_s82) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1684]              __ret_0_ := c_s82;
[L2558]  RET         call __var_29 := sub~uint256~uint256_SafeMath__success(this, this, 0, Length[M_Ref_Ref[timelockList_ONIT[this]][holder_s1600]], 1);
[L2559]  COND FALSE  !(revert)
[L2562]  COND FALSE  !(alloc_timelockList_ONIT_lvl0[timelockList_ONIT[this]][holder_s1600] == false)
[L2573]              M_int_Ref[M_Ref_Ref[timelockList_ONIT[this]][holder_s1600]][idx_s1600] := M_int_Ref[M_Ref_Ref[timelockList_ONIT[this]][holder_s1600]][__var_29];
[L2574]  COND FALSE  !(alloc_timelockList_ONIT_lvl0[timelockList_ONIT[this]][holder_s1600] == false)
[L2585]              Length[M_Ref_Ref[timelockList_ONIT[this]][holder_s1600]] := (Length[M_Ref_Ref[timelockList_ONIT[this]][holder_s1600]] - 1) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2586]              assert { :EventEmitted "Unlock_ONIT" } true;
[L2587]  CALL        call __var_33 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][holder_s1600], releaseAmount_s1600);
[L1703]              c_s106 := (a_s106 + b_s106) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1704]  COND FALSE  !(!(c_s106 >= a_s106))
[L1708]              __ret_0_ := c_s106;
[L2587]  RET         call __var_33 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][holder_s1600], releaseAmount_s1600);
[L2588]  COND FALSE  !(revert)
[L2591]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][holder_s1600];
[L2592]              _balances_ERC20[this][holder_s1600] := __var_33;
[L2593]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][holder_s1600];
[L2594]              __ret_0_ := true;
[L2679]  RET         call __var_36 := _unlock~address~uint256_ONIT__success(this, msgsender_MSG, msgvalue_MSG, holder_s1645, idx_s1645);
[L2680]  COND FALSE  !(revert)
[L2683]  COND TRUE   __var_36
[L2684]              idx_s1645 := (idx_s1645 - 1) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2687]              idx_s1645 := (idx_s1645 + 1) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2688]  COND FALSE  !(gas < 0)
[L2665]  COND FALSE  !(idx_s1645 < Length[M_Ref_Ref[timelockList_ONIT[this]][holder_s1645]])
[L2692]              __ret_0_ := true;
[L2386]  RET         call __var_23 := _autoUnlock~address_ONIT__success(this, msgsender_MSG, msgvalue_MSG, from_s1322);
[L2387]  COND FALSE  !(revert)
[L2391]  COND TRUE   DType[this] == ONIT
[L2392]  CALL        call __var_24 := transferFrom~address~address~uint256_ERC20Pausable__success(this, msgsender_MSG, msgvalue_MSG, from_s1322, to_s1322, value_s1322);
[L2088]  CALL        call whenNotPaused_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L3558]  COND FALSE  !(!!_paused_Pausable[this])
[L2088]  RET         call whenNotPaused_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L2089]  COND FALSE  !(revert)
[L2092]  COND TRUE   DType[this] == ONIT
[L2093]  CALL        call __var_11 := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s1074, to_s1074, value_s1074);
[L1926]  CALL        call __var_5 := sub~uint256~uint256_SafeMath__success(this, this, 0, _allowed_ERC20[this][from_s760][msgsender_MSG], value_s760);
[L1679]  COND FALSE  !(!(b_s82 <= a_s82))
[L1683]              c_s82 := (a_s82 - b_s82) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1684]              __ret_0_ := c_s82;
[L1926]  RET         call __var_5 := sub~uint256~uint256_SafeMath__success(this, this, 0, _allowed_ERC20[this][from_s760][msgsender_MSG], value_s760);
[L1927]  COND FALSE  !(revert)
[L1930]              sum__allowed1[from_s760] := sum__allowed1[from_s760] - _allowed_ERC20[this][from_s760][msgsender_MSG];
[L1931]              _allowed_ERC20[this][from_s760][msgsender_MSG] := __var_5;
[L1932]              sum__allowed1[from_s760] := sum__allowed1[from_s760] + _allowed_ERC20[this][from_s760][msgsender_MSG];
[L1933]  COND FALSE  !(DType[this] == ONIT)
[L1938]  COND FALSE  !(DType[this] == ERC20Pausable)
[L1943]  COND TRUE   DType[this] == ERC20
[L1944]  CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s760, to_s760, value_s760);
[L1987]              __var_6 := null;
[L1988]  COND FALSE  !(!(to_s904 != null))
[L1992]  CALL        call __var_7 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][from_s904], value_s904);
[L1679]  COND FALSE  !(!(b_s82 <= a_s82))
[L1683]              c_s82 := (a_s82 - b_s82) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1684]              __ret_0_ := c_s82;
[L1992]  RET         call __var_7 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][from_s904], value_s904);
[L1993]  COND FALSE  !(revert)
[L1996]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][from_s904];
[L1997]              _balances_ERC20[this][from_s904] := __var_7;
[L1998]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][from_s904];
[L1999]  CALL        call __var_8 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][to_s904], value_s904);
[L1703]              c_s106 := (a_s106 + b_s106) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1704]  COND FALSE  !(!(c_s106 >= a_s106))
[L1708]              __ret_0_ := c_s106;
[L1999]  RET         call __var_8 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][to_s904], value_s904);
[L2000]  COND FALSE  !(revert)
[L2003]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][to_s904];
[L2004]              _balances_ERC20[this][to_s904] := __var_8;
[L2005]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][to_s904];
[L2006]              assert { :EventEmitted "Transfer_ERC20" } true;
[L1944]  RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s760, to_s760, value_s760);
[L1945]  COND FALSE  !(revert)
[L1951]              assert { :EventEmitted "Approval_ERC20" } true;
[L1952]              __ret_0_ := true;
[L2093]  RET         call __var_11 := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s1074, to_s1074, value_s1074);
[L2094]  COND FALSE  !(revert)
[L2105]              __ret_0_ := __var_11;
[L2392]  RET         call __var_24 := transferFrom~address~address~uint256_ERC20Pausable__success(this, msgsender_MSG, msgvalue_MSG, from_s1322, to_s1322, value_s1322);
[L2393]  COND FALSE  !(revert)
[L2399]              __ret_0_ := __var_24;
[L997]   RET         call __ret_0_ := transferFrom~address~address~uint256_ONIT__success(this, msgsender_MSG, msgvalue_MSG, from_s1322, to_s1322, value_s1322);
[L998]               assume !revert && gas >= 0;
[L4367]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_ONIT(this, msgsender_MSG, msgvalue_MSG, from_s1322, to_s1322, value_s1322);
[L4400]  RET         call CorralChoice_ONIT(this);

Loop:
[L4400]        assume true;

[2020-11-24 16:03:06,748 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 16:03:06,749 INFO  L82        PathProgramCache]: Analyzing trace with hash 1788031181, now seen corresponding path program 1 times
[2020-11-24 16:03:06,749 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 16:03:06,758 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 16:03:06,788 INFO  L134       CoverageAnalysis]: Checked inductivity of 21 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 21 trivial. 0 not checked.
[2020-11-24 16:03:06,788 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 16:03:06,789 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [5] imperfect sequences [] total 5
[2020-11-24 16:03:06,789 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 16:03:06,789 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 5 interpolants.
[2020-11-24 16:03:06,789 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=7, Invalid=13, Unknown=0, NotChecked=0, Total=20
[2020-11-24 16:03:06,789 INFO  L87              Difference]: Start difference. First operand 348 states and 375 transitions. cyclomatic complexity: 30 Second operand 5 states.
[2020-11-24 16:03:06,799 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 16:03:06,799 INFO  L93              Difference]: Finished difference Result 357 states and 383 transitions.
[2020-11-24 16:03:06,799 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 5 states. 
[2020-11-24 16:03:06,799 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 357 states and 383 transitions.
[2020-11-24 16:03:06,800 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 16:03:06,801 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 357 states to 342 states and 367 transitions.
[2020-11-24 16:03:06,801 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 139
[2020-11-24 16:03:06,801 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 139
[2020-11-24 16:03:06,801 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 342 states and 367 transitions.
[2020-11-24 16:03:06,802 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 16:03:06,802 INFO  L728         BuchiCegarLoop]: Abstraction has 342 states and 367 transitions.
[2020-11-24 16:03:06,802 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 342 states and 367 transitions.
[2020-11-24 16:03:06,804 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 342 to 342.
[2020-11-24 16:03:06,805 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 342 states.
[2020-11-24 16:03:06,805 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 342 states to 342 states and 367 transitions.
[2020-11-24 16:03:06,805 INFO  L751         BuchiCegarLoop]: Abstraction has 342 states and 367 transitions.
[2020-11-24 16:03:06,805 INFO  L631         BuchiCegarLoop]: Abstraction has 342 states and 367 transitions.
[2020-11-24 16:03:06,805 INFO  L445         BuchiCegarLoop]: ======== Iteration 9============
[2020-11-24 16:03:06,805 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 342 states and 367 transitions.
[2020-11-24 16:03:06,806 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 16:03:06,806 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 16:03:06,806 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 16:03:06,807 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [3, 3, 3, 3, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 16:03:06,807 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L2]                 fail_transferFrom_ONIT0 := false;
[L2]                 call_transferFrom_ONIT0 := false;
[L2]     CALL        call main();
[L4395]              assume null == 0;
[L4396]  CALL        call this := FreshRefGenerator__success();
[L1636]              havoc newRef;
[L1637]              assume Alloc[newRef] == false;
[L1638]              Alloc[newRef] := true;
[L1639]              assume newRef != null;
[L4396]  RET         call this := FreshRefGenerator__success();
[L4397]              assume now >= 0;
[L4398]              assume DType[this] == ONIT;
[L4399]              assume !revert && gas >= 0;
[L4400]  CALL        call CorralChoice_ONIT(this);
[L4275]              havoc msgsender_MSG;
[L4276]              havoc msgvalue_MSG;
[L4277]              havoc choice;
[L4278]              havoc __ret_0_owner;
[L4279]              havoc __ret_0_newOwner;
[L4280]              havoc account_s293;
[L4281]              havoc __ret_0_isOwner;
[L4282]              havoc _newOwner_s313;
[L4283]              havoc __ret_0_acceptOwnership;
[L4284]              havoc account_s390;
[L4285]              havoc __ret_0_isPauser;
[L4286]              havoc account_s402;
[L4287]              havoc account_s414;
[L4288]              havoc __ret_0_paused;
[L4289]              havoc to_s1288;
[L4290]              havoc value_s1288;
[L4291]              havoc __ret_0_transfer;
[L4292]              havoc spender_s711;
[L4293]              havoc value_s711;
[L4294]              havoc __ret_0_approve;
[L4295]              havoc from_s1322;
[L4296]              havoc to_s1322;
[L4297]              havoc value_s1322;
[L4298]              havoc __ret_0_transferFrom;
[L4299]              havoc __ret_0_totalSupply;
[L4300]              havoc owner_s1254;
[L4301]              havoc __ret_0_balanceOf;
[L4302]              havoc owner_s656;
[L4303]              havoc spender_s656;
[L4304]              havoc __ret_0_allowance;
[L4305]              havoc spender_s809;
[L4306]              havoc addedValue_s809;
[L4307]              havoc __ret_0_increaseAllowance;
[L4308]              havoc spender_s858;
[L4309]              havoc subtractedValue_s858;
[L4310]              havoc __ret_0_decreaseAllowance;
[L4311]              havoc name_s1105;
[L4312]              havoc symbol_s1105;
[L4313]              havoc decimals_s1105;
[L4314]              havoc __ret_0_name;
[L4315]              havoc __ret_0_symbol;
[L4316]              havoc __ret_0_decimals;
[L4317]              havoc __ret_0_implementation;
[L4318]              havoc arg1693_s0;
[L4319]              havoc arg1694_s0;
[L4320]              havoc __ret_0_timelockList;
[L4321]              havoc arg1695_s0;
[L4322]              havoc __ret_0_frozenAccount;
[L4323]              havoc holder_s1351;
[L4324]              havoc __ret_0_freezeAccount;
[L4325]              havoc holder_s1379;
[L4326]              havoc __ret_0_unfreezeAccount;
[L4327]              havoc holder_s1410;
[L4328]              havoc value_s1410;
[L4329]              havoc releaseTime_s1410;
[L4330]              havoc __ret_0_lock;
[L4331]              havoc holder_s1439;
[L4332]              havoc value_s1439;
[L4333]              havoc releaseTime_s1439;
[L4334]              havoc __ret_0_transferWithLock;
[L4335]              havoc holder_s1468;
[L4336]              havoc idx_s1468;
[L4337]              havoc __ret_0_unlock;
[L4338]              havoc _newImplementation_s1486;
[L4339]              havoc value_s1663;
[L4340]              havoc __ret_0_mint;
[L4341]              havoc tmpNow;
[L4342]              havoc gas;
[L4343]              assume gas > 4000000 && gas <= 8000000;
[L4344]              tmpNow := now;
[L4345]              havoc now;
[L4346]              assume now > tmpNow;
[L4347]              assume msgsender_MSG != null;
[L4348]  COND FALSE  !(choice == 6)
[L4355]  COND FALSE  !(choice == 5)
[L4362]  COND TRUE   choice == 4
[L4363]              gas := gas - 21000;
[L4364]  COND TRUE   gas >= 0
[L4365]              assume value_s1322 >= 0 && value_s1322 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4366]              assume msgvalue_MSG == 0;
[L4367]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_ONIT(this, msgsender_MSG, msgvalue_MSG, from_s1322, to_s1322, value_s1322);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((((from_s1322 != to_s1322 && ((value_s1322 > _balances_ERC20[this][from_s1322] || value_s1322 > _allowed_ERC20[this][from_s1322][msgsender_MSG]) || _balances_ERC20[this][to_s1322] + value_s1322 >= 115792089237316195423570985008687907853269984665640564039457584007913129639936)) && value_s1322 >= 0) && value_s1322 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][to_s1322] >= 0) && _balances_ERC20[this][to_s1322] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][from_s1322] >= 0) && _balances_ERC20[this][from_s1322] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowed_ERC20[this][from_s1322][msgsender_MSG] >= 0) && _allowed_ERC20[this][from_s1322][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transferFrom_ONIT0 := true;
[L2]                 call_transferFrom_ONIT0 := false;
[L2]                 revert := revert_hold;
[L959]               havoc __exception;
[L960]               revert := false;
[L961]   COND FALSE  !(__exception)
[L997]   CALL        call __ret_0_ := transferFrom~address~address~uint256_ONIT__success(this, msgsender_MSG, msgvalue_MSG, from_s1322, to_s1322, value_s1322);
[L2370]  CALL        call notFrozen_pre__success(this, msgsender_MSG, msgvalue_MSG, from_s1322);
[L3582]  COND FALSE  !(!!frozenAccount_ONIT[this][_holder_s1185])
[L2370]  RET         call notFrozen_pre__success(this, msgsender_MSG, msgvalue_MSG, from_s1322);
[L2371]  COND FALSE  !(revert)
[L2374]  COND FALSE  !(alloc_timelockList_ONIT_lvl0[timelockList_ONIT[this]][from_s1322] == false)
[L2385]  COND TRUE   Length[M_Ref_Ref[timelockList_ONIT[this]][from_s1322]] > 0
[L2386]  CALL        call __var_23 := _autoUnlock~address_ONIT__success(this, msgsender_MSG, msgvalue_MSG, from_s1322);
[L2653]  COND FALSE  !(alloc_timelockList_ONIT_lvl0[timelockList_ONIT[this]][holder_s1645] == false)
[L2664]              idx_s1645 := 0;
[L2665]  COND TRUE   idx_s1645 < Length[M_Ref_Ref[timelockList_ONIT[this]][holder_s1645]]
[L2667]  COND FALSE  !(alloc_timelockList_ONIT_lvl0[timelockList_ONIT[this]][holder_s1645] == false)
[L2678]  COND TRUE   _releaseTime_ONIT.LockInfo[M_int_Ref[M_Ref_Ref[timelockList_ONIT[this]][holder_s1645]][idx_s1645]] <= now
[L2679]  CALL        call __var_36 := _unlock~address~uint256_ONIT__success(this, msgsender_MSG, msgvalue_MSG, holder_s1645, idx_s1645);
[L2512]  COND FALSE  !(alloc_timelockList_ONIT_lvl0[timelockList_ONIT[this]][holder_s1600] == false)
[L2523]              lockinfo_s1600 := M_int_Ref[M_Ref_Ref[timelockList_ONIT[this]][holder_s1600]][idx_s1600];
[L2524]              releaseAmount_s1600 := _amount_ONIT.LockInfo[lockinfo_s1600];
[L2525]  COND FALSE  !(alloc_timelockList_ONIT_lvl0[timelockList_ONIT[this]][holder_s1600] == false)
[L2536]  COND FALSE  !(alloc_timelockList_ONIT_lvl0[timelockList_ONIT[this]][holder_s1600] == false)
[L2547]  COND FALSE  !(alloc_timelockList_ONIT_lvl0[timelockList_ONIT[this]][holder_s1600] == false)
[L2558]  CALL        call __var_29 := sub~uint256~uint256_SafeMath__success(this, this, 0, Length[M_Ref_Ref[timelockList_ONIT[this]][holder_s1600]], 1);
[L1679]  COND FALSE  !(!(b_s82 <= a_s82))
[L1683]              c_s82 := (a_s82 - b_s82) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1684]              __ret_0_ := c_s82;
[L2558]  RET         call __var_29 := sub~uint256~uint256_SafeMath__success(this, this, 0, Length[M_Ref_Ref[timelockList_ONIT[this]][holder_s1600]], 1);
[L2559]  COND FALSE  !(revert)
[L2562]  COND FALSE  !(alloc_timelockList_ONIT_lvl0[timelockList_ONIT[this]][holder_s1600] == false)
[L2573]              M_int_Ref[M_Ref_Ref[timelockList_ONIT[this]][holder_s1600]][idx_s1600] := M_int_Ref[M_Ref_Ref[timelockList_ONIT[this]][holder_s1600]][__var_29];
[L2574]  COND FALSE  !(alloc_timelockList_ONIT_lvl0[timelockList_ONIT[this]][holder_s1600] == false)
[L2585]              Length[M_Ref_Ref[timelockList_ONIT[this]][holder_s1600]] := (Length[M_Ref_Ref[timelockList_ONIT[this]][holder_s1600]] - 1) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2586]              assert { :EventEmitted "Unlock_ONIT" } true;
[L2587]  CALL        call __var_33 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][holder_s1600], releaseAmount_s1600);
[L1703]              c_s106 := (a_s106 + b_s106) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1704]  COND FALSE  !(!(c_s106 >= a_s106))
[L1708]              __ret_0_ := c_s106;
[L2587]  RET         call __var_33 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][holder_s1600], releaseAmount_s1600);
[L2588]  COND FALSE  !(revert)
[L2591]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][holder_s1600];
[L2592]              _balances_ERC20[this][holder_s1600] := __var_33;
[L2593]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][holder_s1600];
[L2594]              __ret_0_ := true;
[L2679]  RET         call __var_36 := _unlock~address~uint256_ONIT__success(this, msgsender_MSG, msgvalue_MSG, holder_s1645, idx_s1645);
[L2680]  COND FALSE  !(revert)
[L2683]  COND TRUE   __var_36
[L2684]              idx_s1645 := (idx_s1645 - 1) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2687]              idx_s1645 := (idx_s1645 + 1) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2688]  COND FALSE  !(gas < 0)
[L2665]  COND FALSE  !(idx_s1645 < Length[M_Ref_Ref[timelockList_ONIT[this]][holder_s1645]])
[L2692]              __ret_0_ := true;
[L2386]  RET         call __var_23 := _autoUnlock~address_ONIT__success(this, msgsender_MSG, msgvalue_MSG, from_s1322);
[L2387]  COND FALSE  !(revert)
[L2391]  COND TRUE   DType[this] == ONIT
[L2392]  CALL        call __var_24 := transferFrom~address~address~uint256_ERC20Pausable__success(this, msgsender_MSG, msgvalue_MSG, from_s1322, to_s1322, value_s1322);
[L2088]  CALL        call whenNotPaused_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L3558]  COND FALSE  !(!!_paused_Pausable[this])
[L2088]  RET         call whenNotPaused_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L2089]  COND FALSE  !(revert)
[L2092]  COND TRUE   DType[this] == ONIT
[L2093]  CALL        call __var_11 := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s1074, to_s1074, value_s1074);
[L1926]  CALL        call __var_5 := sub~uint256~uint256_SafeMath__success(this, this, 0, _allowed_ERC20[this][from_s760][msgsender_MSG], value_s760);
[L1679]  COND FALSE  !(!(b_s82 <= a_s82))
[L1683]              c_s82 := (a_s82 - b_s82) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1684]              __ret_0_ := c_s82;
[L1926]  RET         call __var_5 := sub~uint256~uint256_SafeMath__success(this, this, 0, _allowed_ERC20[this][from_s760][msgsender_MSG], value_s760);
[L1927]  COND FALSE  !(revert)
[L1930]              sum__allowed1[from_s760] := sum__allowed1[from_s760] - _allowed_ERC20[this][from_s760][msgsender_MSG];
[L1931]              _allowed_ERC20[this][from_s760][msgsender_MSG] := __var_5;
[L1932]              sum__allowed1[from_s760] := sum__allowed1[from_s760] + _allowed_ERC20[this][from_s760][msgsender_MSG];
[L1933]  COND TRUE   DType[this] == ONIT
[L1934]  CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s760, to_s760, value_s760);
[L1987]              __var_6 := null;
[L1988]  COND FALSE  !(!(to_s904 != null))
[L1992]  CALL        call __var_7 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][from_s904], value_s904);
[L1679]  COND FALSE  !(!(b_s82 <= a_s82))
[L1683]              c_s82 := (a_s82 - b_s82) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1684]              __ret_0_ := c_s82;
[L1992]  RET         call __var_7 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][from_s904], value_s904);
[L1993]  COND FALSE  !(revert)
[L1996]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][from_s904];
[L1997]              _balances_ERC20[this][from_s904] := __var_7;
[L1998]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][from_s904];
[L1999]  CALL        call __var_8 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][to_s904], value_s904);
[L1703]              c_s106 := (a_s106 + b_s106) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1704]  COND FALSE  !(!(c_s106 >= a_s106))
[L1708]              __ret_0_ := c_s106;
[L1999]  RET         call __var_8 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][to_s904], value_s904);
[L2000]  COND FALSE  !(revert)
[L2003]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][to_s904];
[L2004]              _balances_ERC20[this][to_s904] := __var_8;
[L2005]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][to_s904];
[L2006]              assert { :EventEmitted "Transfer_ERC20" } true;
[L1934]  RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s760, to_s760, value_s760);
[L1935]  COND FALSE  !(revert)
[L1951]              assert { :EventEmitted "Approval_ERC20" } true;
[L1952]              __ret_0_ := true;
[L2093]  RET         call __var_11 := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s1074, to_s1074, value_s1074);
[L2094]  COND FALSE  !(revert)
[L2105]              __ret_0_ := __var_11;
[L2392]  RET         call __var_24 := transferFrom~address~address~uint256_ERC20Pausable__success(this, msgsender_MSG, msgvalue_MSG, from_s1322, to_s1322, value_s1322);
[L2393]  COND FALSE  !(revert)
[L2399]              __ret_0_ := __var_24;
[L997]   RET         call __ret_0_ := transferFrom~address~address~uint256_ONIT__success(this, msgsender_MSG, msgvalue_MSG, from_s1322, to_s1322, value_s1322);
[L998]               assume !revert && gas >= 0;
[L4367]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_ONIT(this, msgsender_MSG, msgvalue_MSG, from_s1322, to_s1322, value_s1322);
[L4400]  RET         call CorralChoice_ONIT(this);

Loop:
[L4400]        assume true;

[2020-11-24 16:03:06,809 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 16:03:06,809 INFO  L82        PathProgramCache]: Analyzing trace with hash 766047771, now seen corresponding path program 1 times
[2020-11-24 16:03:06,810 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 16:03:06,828 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 16:03:06,849 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 16:03:06,905 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 16:03:06,905 INFO  L82        PathProgramCache]: Analyzing trace with hash 16405, now seen corresponding path program 1 times
[2020-11-24 16:03:06,905 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 16:03:06,906 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 16:03:06,906 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 16:03:06,907 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 16:03:06,907 INFO  L82        PathProgramCache]: Analyzing trace with hash -2022306501, now seen corresponding path program 1 times
[2020-11-24 16:03:06,908 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 16:03:06,925 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 16:03:06,945 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
[2020-11-24 16:03:07,178 WARN  L188               SmtUtils]: Spent 141.00 ms on a formula simplification. DAG size of input: 112 DAG size of output: 111
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 277 to 547
Garbage collection #5: 547 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 547 to 1093
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #5: 547 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 547 to 1093
[2020-11-24 16:03:07,444 WARN  L188               SmtUtils]: Spent 122.00 ms on a formula simplification. DAG size of input: 131 DAG size of output: 127
Garbage collection #1: 41 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 41 to 79
Garbage collection #2: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #3: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #4: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #5: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
[2020-11-24 16:03:07,608 WARN  L188               SmtUtils]: Spent 117.00 ms on a formula simplification. DAG size of input: 121 DAG size of output: 116
Garbage collection #1: 41 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 41 to 79
Garbage collection #2: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #3: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #4: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #5: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
[2020-11-24 16:03:07,806 WARN  L188               SmtUtils]: Spent 115.00 ms on a formula simplification. DAG size of input: 105 DAG size of output: 104
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #5: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
[2020-11-24 16:03:07,988 WARN  L188               SmtUtils]: Spent 119.00 ms on a formula simplification. DAG size of input: 124 DAG size of output: 123
Garbage collection #1: 41 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 41 to 79
Garbage collection #2: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #3: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #4: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #5: 619 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 619 to 1237
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #4: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #5: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 277 to 547
Garbage collection #5: 547 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 547 to 1093
[2020-11-24 16:03:08,736 WARN  L188               SmtUtils]: Spent 350.00 ms on a formula simplification. DAG size of input: 220 DAG size of output: 205
Garbage collection #1: 67 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 67 to 131
Garbage collection #2: 131 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 131 to 257
Garbage collection #3: 257 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 257 to 509
Garbage collection #4: 509 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 509 to 1013
Garbage collection #5: 1013 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1013 to 2017
Garbage collection #6: 2017 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2017 to 4027
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #5: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
[2020-11-24 16:03:09,055 WARN  L188               SmtUtils]: Spent 254.00 ms on a formula simplification. DAG size of input: 179 DAG size of output: 174
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 883 to 1759
[2020-11-24 16:03:09,193 WARN  L188               SmtUtils]: Spent 135.00 ms on a formula simplification that was a NOOP. DAG size: 156
[2020-11-24 16:03:09,550 WARN  L188               SmtUtils]: Spent 356.00 ms on a formula simplification. DAG size of input: 198 DAG size of output: 185
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #6: 1759 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1759 to 3517
Garbage collection #1: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #2: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #3: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #4: 317 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 317 to 631
Garbage collection #5: 631 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 631 to 1259
Garbage collection #6: 1259 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1259 to 2503
[2020-11-24 16:03:09,724 WARN  L188               SmtUtils]: Spent 162.00 ms on a formula simplification that was a NOOP. DAG size: 135
[2020-11-24 16:03:10,554 WARN  L188               SmtUtils]: Spent 828.00 ms on a formula simplification. DAG size of input: 365 DAG size of output: 360
Garbage collection #1: 131 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 131 to 257
Garbage collection #2: 257 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 257 to 509
Garbage collection #3: 509 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 509 to 1013
Garbage collection #4: 1013 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1013 to 2017
Garbage collection #5: 2017 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 2017 to 4027
Garbage collection #6: 4027 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 4027 to 8053
Garbage collection #7: 8053 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 8053 to 16103
[2020-11-24 16:03:11,377 WARN  L188               SmtUtils]: Spent 815.00 ms on a formula simplification that was a NOOP. DAG size: 337
[2020-11-24 16:03:12,765 WARN  L188               SmtUtils]: Spent 1.38 s on a formula simplification. DAG size of input: 364 DAG size of output: 355
Garbage collection #1: 127 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 127 to 251
Garbage collection #2: 251 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 251 to 499
Garbage collection #3: 499 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 499 to 997
Garbage collection #4: 997 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 997 to 1993
Garbage collection #5: 1993 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1993 to 3967
Garbage collection #6: 3967 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3967 to 7933
Garbage collection #7: 7933 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 7933 to 15859
Garbage collection #1: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #2: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #3: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #4: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #5: 1237 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1237 to 2473
Garbage collection #6: 2473 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2473 to 4943
Garbage collection #7: 4943 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4943 to 9883
[2020-11-24 16:03:13,129 WARN  L188               SmtUtils]: Spent 349.00 ms on a formula simplification that was a NOOP. DAG size: 245
[2020-11-24 16:03:13,859 WARN  L188               SmtUtils]: Spent 728.00 ms on a formula simplification that was a NOOP. DAG size: 435
Garbage collection #1: 167 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 167 to 331
Garbage collection #2: 331 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 331 to 661
Garbage collection #3: 661 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 661 to 1321
Garbage collection #4: 1321 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1321 to 2633
Garbage collection #5: 2633 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2633 to 5261
Garbage collection #6: 5261 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 5261 to 10513
Garbage collection #7: 10513 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 10513 to 21023
[2020-11-24 16:03:14,521 WARN  L188               SmtUtils]: Spent 651.00 ms on a formula simplification that was a NOOP. DAG size: 342
[2020-11-24 16:03:15,320 WARN  L188               SmtUtils]: Spent 795.00 ms on a formula simplification. DAG size of input: 361 DAG size of output: 356
Garbage collection #1: 127 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 127 to 251
Garbage collection #2: 251 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 251 to 499
Garbage collection #3: 499 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 499 to 997
Garbage collection #4: 997 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 997 to 1993
Garbage collection #5: 1993 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1993 to 3967
Garbage collection #6: 3967 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3967 to 7933
Garbage collection #1: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #2: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #3: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #4: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #5: 1237 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1237 to 2473
Garbage collection #6: 2473 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2473 to 4943
[2020-11-24 16:03:15,513 WARN  L188               SmtUtils]: Spent 185.00 ms on a formula simplification that was a NOOP. DAG size: 245
[2020-11-24 16:03:15,864 WARN  L188               SmtUtils]: Spent 329.00 ms on a formula simplification that was a NOOP. DAG size: 339
Garbage collection #1: 127 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 127 to 251
Garbage collection #2: 251 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 251 to 499
Garbage collection #3: 499 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 499 to 997
Garbage collection #4: 997 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 997 to 1993
Garbage collection #5: 1993 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1993 to 3967
Garbage collection #6: 3967 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3967 to 7933
Garbage collection #1: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #2: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #3: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #4: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #5: 1093 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1093 to 2179
Garbage collection #6: 2179 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2179 to 4357
[2020-11-24 16:03:16,051 WARN  L188               SmtUtils]: Spent 180.00 ms on a formula simplification that was a NOOP. DAG size: 245
[2020-11-24 16:03:16,661 WARN  L188               SmtUtils]: Spent 608.00 ms on a formula simplification. DAG size of input: 341 DAG size of output: 340
Garbage collection #1: 127 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 127 to 251
Garbage collection #2: 251 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 251 to 499
Garbage collection #3: 499 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 499 to 997
Garbage collection #4: 997 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 997 to 1993
Garbage collection #5: 1993 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1993 to 3967
Garbage collection #6: 3967 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3967 to 7933
Garbage collection #1: 127 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 127 to 251
Garbage collection #2: 251 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 251 to 499
Garbage collection #3: 499 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 499 to 997
Garbage collection #4: 997 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 997 to 1993
Garbage collection #5: 1993 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1993 to 3967
Garbage collection #6: 3967 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3967 to 7933
[2020-11-24 16:03:16,969 WARN  L188               SmtUtils]: Spent 304.00 ms on a formula simplification that was a NOOP. DAG size: 336
[2020-11-24 16:03:16,987 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 16:03:16,994 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 24.11 04:03:16 BasicIcfg
[2020-11-24 16:03:16,994 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-24 16:03:16,994 INFO  L168              Benchmark]: Toolchain (without parser) took 14982.84 ms. Allocated memory was 1.0 GB in the beginning and 2.3 GB in the end (delta: 1.3 GB). Free memory was 935.2 MB in the beginning and 809.0 MB in the end (delta: 126.2 MB). Peak memory consumption was 1.4 GB. Max. memory is 15.3 GB.
[2020-11-24 16:03:16,995 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.15 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-24 16:03:16,995 INFO  L168              Benchmark]: Boogie Preprocessor took 82.30 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 924.5 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
[2020-11-24 16:03:16,995 INFO  L168              Benchmark]: UtopiaSpecLang took 68.68 ms. Allocated memory is still 1.0 GB. Free memory was 924.5 MB in the beginning and 919.1 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-24 16:03:16,995 INFO  L168              Benchmark]: Boogie Printer took 16.97 ms. Allocated memory is still 1.0 GB. Free memory was 919.1 MB in the beginning and 913.7 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-24 16:03:16,996 INFO  L168              Benchmark]: RCFGBuilder took 792.15 ms. Allocated memory is still 1.0 GB. Free memory was 913.7 MB in the beginning and 773.9 MB in the end (delta: 139.8 MB). Peak memory consumption was 139.8 MB. Max. memory is 15.3 GB.
[2020-11-24 16:03:16,996 INFO  L168              Benchmark]: UtopiaLTL2Aut took 37.39 ms. Allocated memory is still 1.0 GB. Free memory was 773.9 MB in the beginning and 770.3 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
[2020-11-24 16:03:16,996 INFO  L168              Benchmark]: BÃ¼chi Program Product took 1606.97 ms. Allocated memory was 1.0 GB in the beginning and 1.2 GB in the end (delta: 170.4 MB). Free memory was 770.3 MB in the beginning and 794.8 MB in the end (delta: -24.5 MB). Peak memory consumption was 145.9 MB. Max. memory is 15.3 GB.
[2020-11-24 16:03:16,997 INFO  L168              Benchmark]: BlockEncodingV2 took 129.38 ms. Allocated memory is still 1.2 GB. Free memory was 794.8 MB in the beginning and 736.1 MB in the end (delta: 58.6 MB). Peak memory consumption was 58.6 MB. Max. memory is 15.3 GB.
[2020-11-24 16:03:16,997 INFO  L168              Benchmark]: BuchiAutomizer took 12246.26 ms. Allocated memory was 1.2 GB in the beginning and 2.3 GB in the end (delta: 1.1 GB). Free memory was 736.1 MB in the beginning and 809.0 MB in the end (delta: -72.9 MB). Peak memory consumption was 1.0 GB. Max. memory is 15.3 GB.
[2020-11-24 16:03:16,999 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    3832 locations, 6765 edges
  - StatisticsResult: Encoded RCFG
    3718 locations, 6492 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.15 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 82.30 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 924.5 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 68.68 ms. Allocated memory is still 1.0 GB. Free memory was 924.5 MB in the beginning and 919.1 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 16.97 ms. Allocated memory is still 1.0 GB. Free memory was 919.1 MB in the beginning and 913.7 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * RCFGBuilder took 792.15 ms. Allocated memory is still 1.0 GB. Free memory was 913.7 MB in the beginning and 773.9 MB in the end (delta: 139.8 MB). Peak memory consumption was 139.8 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 37.39 ms. Allocated memory is still 1.0 GB. Free memory was 773.9 MB in the beginning and 770.3 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 1606.97 ms. Allocated memory was 1.0 GB in the beginning and 1.2 GB in the end (delta: 170.4 MB). Free memory was 770.3 MB in the beginning and 794.8 MB in the end (delta: -24.5 MB). Peak memory consumption was 145.9 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 129.38 ms. Allocated memory is still 1.2 GB. Free memory was 794.8 MB in the beginning and 736.1 MB in the end (delta: 58.6 MB). Peak memory consumption was 58.6 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 12246.26 ms. Allocated memory was 1.2 GB in the beginning and 2.3 GB in the end (delta: 1.1 GB). Free memory was 736.1 MB in the beginning and 809.0 MB in the end (delta: -72.9 MB). Peak memory consumption was 1.0 GB. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    1610 locations, 2107 edges
  - StatisticsResult: BuchiProgram size
    3832 locations, 6765 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 8 terminating modules (8 trivial, 0 deterministic, 0 nondeterministic) and one nonterminating remainder module.8 modules have a trivial ranking function, the largest among these consists of 19 locations. The remainder module has 342 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 12.2s and 9 iterations.  TraceHistogramMax:3. Analysis of lassos took 10.7s. Construction of modules took 0.6s. BÃ¼chi inclusion checks took 0.5s. Highest rank in rank-based complementation 0. Minimization of det autom 8. Minimization of nondet autom 0. Automata minimization 0.0s AutomataMinimizationTime, 8 MinimizatonAttempts, 6 StatesRemovedByMinimization, 3 NontrivialMinimizations. Non-live state removal took 0.0s Buchi closure took 0.0s. Biggest automaton had 397 states and ocurred in iteration 2.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 4267 SDtfs, 2964 SDslu, 6068 SDs, 0 SdLazy, 3235 SolverSat, 1164 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 0.6s Time	LassoAnalysisResults: nont1 unkn0 SFLI0 SFLT0 conc0 concLT0 SILN0 SILU8 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - TransactionCounterexample: Violation of LTL property LTL
    Found an infinite, lasso-shaped execution that violates the LTL property LTL.
Stem:
ONIT(115792089237316195423570985008687907853269984665640564039457584007913129639953).transferFrom~address~address~uint256.gas(3979001)({from : 115792089237316195423570985008687907853269984665640564039457584007913129639952, from : 115792089237316195423570985008687907853269984665640564039457584007913129639947, to : 115792089237316195423570985008687907853269984665640564039457584007913129639946, value : 115792089237316195423570985008687907853269984665640564039457584007913129639935});
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((((from_s1322 != to_s1322 && ((value_s1322 > _balances_ERC20[this][from_s1322] || value_s1322 > _allowed_ERC20[this][from_s1322][msgsender_MSG]) || _balances_ERC20[this][to_s1322] + value_s1322 >= 115792089237316195423570985008687907853269984665640564039457584007913129639936)) && value_s1322 >= 0) && value_s1322 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][to_s1322] >= 0) && _balances_ERC20[this][to_s1322] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][from_s1322] >= 0) && _balances_ERC20[this][from_s1322] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowed_ERC20[this][from_s1322][msgsender_MSG] >= 0) && _allowed_ERC20[this][from_s1322][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transferFrom_ONIT0 := true;
[L2]                 call_transferFrom_ONIT0 := false;
[L2]                 revert := revert_hold;
[L959]               havoc __exception;
[L960]               revert := false;
[L961]   COND FALSE  !(__exception)
[L997]   CALL        call __ret_0_ := transferFrom~address~address~uint256_ONIT__success(this, msgsender_MSG, msgvalue_MSG, from_s1322, to_s1322, value_s1322);
[L2370]  CALL        call notFrozen_pre__success(this, msgsender_MSG, msgvalue_MSG, from_s1322);
[L3582]  COND FALSE  !(!!frozenAccount_ONIT[this][_holder_s1185])
[L2370]  RET         call notFrozen_pre__success(this, msgsender_MSG, msgvalue_MSG, from_s1322);
[L2371]  COND FALSE  !(revert)
[L2374]  COND FALSE  !(alloc_timelockList_ONIT_lvl0[timelockList_ONIT[this]][from_s1322] == false)
[L2385]  COND TRUE   Length[M_Ref_Ref[timelockList_ONIT[this]][from_s1322]] > 0
[L2386]  CALL        call __var_23 := _autoUnlock~address_ONIT__success(this, msgsender_MSG, msgvalue_MSG, from_s1322);
[L2653]  COND FALSE  !(alloc_timelockList_ONIT_lvl0[timelockList_ONIT[this]][holder_s1645] == false)
[L2664]              idx_s1645 := 0;
[L2665]  COND TRUE   idx_s1645 < Length[M_Ref_Ref[timelockList_ONIT[this]][holder_s1645]]
[L2667]  COND FALSE  !(alloc_timelockList_ONIT_lvl0[timelockList_ONIT[this]][holder_s1645] == false)
[L2678]  COND TRUE   _releaseTime_ONIT.LockInfo[M_int_Ref[M_Ref_Ref[timelockList_ONIT[this]][holder_s1645]][idx_s1645]] <= now
[L2679]  CALL        call __var_36 := _unlock~address~uint256_ONIT__success(this, msgsender_MSG, msgvalue_MSG, holder_s1645, idx_s1645);
[L2512]  COND FALSE  !(alloc_timelockList_ONIT_lvl0[timelockList_ONIT[this]][holder_s1600] == false)
[L2523]              lockinfo_s1600 := M_int_Ref[M_Ref_Ref[timelockList_ONIT[this]][holder_s1600]][idx_s1600];
[L2524]              releaseAmount_s1600 := _amount_ONIT.LockInfo[lockinfo_s1600];
[L2525]  COND FALSE  !(alloc_timelockList_ONIT_lvl0[timelockList_ONIT[this]][holder_s1600] == false)
[L2536]  COND FALSE  !(alloc_timelockList_ONIT_lvl0[timelockList_ONIT[this]][holder_s1600] == false)
[L2547]  COND FALSE  !(alloc_timelockList_ONIT_lvl0[timelockList_ONIT[this]][holder_s1600] == false)
[L2558]  CALL        call __var_29 := sub~uint256~uint256_SafeMath__success(this, this, 0, Length[M_Ref_Ref[timelockList_ONIT[this]][holder_s1600]], 1);
[L1679]  COND FALSE  !(!(b_s82 <= a_s82))
[L1683]              c_s82 := (a_s82 - b_s82) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1684]              __ret_0_ := c_s82;
[L2558]  RET         call __var_29 := sub~uint256~uint256_SafeMath__success(this, this, 0, Length[M_Ref_Ref[timelockList_ONIT[this]][holder_s1600]], 1);
[L2559]  COND FALSE  !(revert)
[L2562]  COND FALSE  !(alloc_timelockList_ONIT_lvl0[timelockList_ONIT[this]][holder_s1600] == false)
[L2573]              M_int_Ref[M_Ref_Ref[timelockList_ONIT[this]][holder_s1600]][idx_s1600] := M_int_Ref[M_Ref_Ref[timelockList_ONIT[this]][holder_s1600]][__var_29];
[L2574]  COND FALSE  !(alloc_timelockList_ONIT_lvl0[timelockList_ONIT[this]][holder_s1600] == false)
[L2585]              Length[M_Ref_Ref[timelockList_ONIT[this]][holder_s1600]] := (Length[M_Ref_Ref[timelockList_ONIT[this]][holder_s1600]] - 1) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2586]              assert { :EventEmitted "Unlock_ONIT" } true;
[L2587]  CALL        call __var_33 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][holder_s1600], releaseAmount_s1600);
[L1703]              c_s106 := (a_s106 + b_s106) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1704]  COND FALSE  !(!(c_s106 >= a_s106))
[L1708]              __ret_0_ := c_s106;
[L2587]  RET         call __var_33 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][holder_s1600], releaseAmount_s1600);
[L2588]  COND FALSE  !(revert)
[L2591]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][holder_s1600];
[L2592]              _balances_ERC20[this][holder_s1600] := __var_33;
[L2593]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][holder_s1600];
[L2594]              __ret_0_ := true;
[L2679]  RET         call __var_36 := _unlock~address~uint256_ONIT__success(this, msgsender_MSG, msgvalue_MSG, holder_s1645, idx_s1645);
[L2680]  COND FALSE  !(revert)
[L2683]  COND TRUE   __var_36
[L2684]              idx_s1645 := (idx_s1645 - 1) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2687]              idx_s1645 := (idx_s1645 + 1) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2688]  COND FALSE  !(gas < 0)
[L2665]  COND FALSE  !(idx_s1645 < Length[M_Ref_Ref[timelockList_ONIT[this]][holder_s1645]])
[L2692]              __ret_0_ := true;
[L2386]  RET         call __var_23 := _autoUnlock~address_ONIT__success(this, msgsender_MSG, msgvalue_MSG, from_s1322);
[L2387]  COND FALSE  !(revert)
[L2391]  COND TRUE   DType[this] == ONIT
[L2392]  CALL        call __var_24 := transferFrom~address~address~uint256_ERC20Pausable__success(this, msgsender_MSG, msgvalue_MSG, from_s1322, to_s1322, value_s1322);
[L2088]  CALL        call whenNotPaused_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L3558]  COND FALSE  !(!!_paused_Pausable[this])
[L2088]  RET         call whenNotPaused_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L2089]  COND FALSE  !(revert)
[L2092]  COND TRUE   DType[this] == ONIT
[L2093]  CALL        call __var_11 := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s1074, to_s1074, value_s1074);
[L1926]  CALL        call __var_5 := sub~uint256~uint256_SafeMath__success(this, this, 0, _allowed_ERC20[this][from_s760][msgsender_MSG], value_s760);
[L1679]  COND FALSE  !(!(b_s82 <= a_s82))
[L1683]              c_s82 := (a_s82 - b_s82) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1684]              __ret_0_ := c_s82;
[L1926]  RET         call __var_5 := sub~uint256~uint256_SafeMath__success(this, this, 0, _allowed_ERC20[this][from_s760][msgsender_MSG], value_s760);
[L1927]  COND FALSE  !(revert)
[L1930]              sum__allowed1[from_s760] := sum__allowed1[from_s760] - _allowed_ERC20[this][from_s760][msgsender_MSG];
[L1931]              _allowed_ERC20[this][from_s760][msgsender_MSG] := __var_5;
[L1932]              sum__allowed1[from_s760] := sum__allowed1[from_s760] + _allowed_ERC20[this][from_s760][msgsender_MSG];
[L1933]  COND TRUE   DType[this] == ONIT
[L1934]  CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s760, to_s760, value_s760);
[L1987]              __var_6 := null;
[L1988]  COND FALSE  !(!(to_s904 != null))
[L1992]  CALL        call __var_7 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][from_s904], value_s904);
[L1679]  COND FALSE  !(!(b_s82 <= a_s82))
[L1683]              c_s82 := (a_s82 - b_s82) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1684]              __ret_0_ := c_s82;
[L1992]  RET         call __var_7 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][from_s904], value_s904);
[L1993]  COND FALSE  !(revert)
[L1996]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][from_s904];
[L1997]              _balances_ERC20[this][from_s904] := __var_7;
[L1998]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][from_s904];
[L1999]  CALL        call __var_8 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][to_s904], value_s904);
[L1703]              c_s106 := (a_s106 + b_s106) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1704]  COND FALSE  !(!(c_s106 >= a_s106))
[L1708]              __ret_0_ := c_s106;
[L1999]  RET         call __var_8 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][to_s904], value_s904);
[L2000]  COND FALSE  !(revert)
[L2003]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][to_s904];
[L2004]              _balances_ERC20[this][to_s904] := __var_8;
[L2005]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][to_s904];
[L2006]              assert { :EventEmitted "Transfer_ERC20" } true;
[L1934]  RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s760, to_s760, value_s760);
[L1935]  COND FALSE  !(revert)
[L1951]              assert { :EventEmitted "Approval_ERC20" } true;
[L1952]              __ret_0_ := true;
[L2093]  RET         call __var_11 := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s1074, to_s1074, value_s1074);
[L2094]  COND FALSE  !(revert)
[L2105]              __ret_0_ := __var_11;
[L2392]  RET         call __var_24 := transferFrom~address~address~uint256_ERC20Pausable__success(this, msgsender_MSG, msgvalue_MSG, from_s1322, to_s1322, value_s1322);
[L2393]  COND FALSE  !(revert)
[L2399]              __ret_0_ := __var_24;
[L997]   RET         call __ret_0_ := transferFrom~address~address~uint256_ONIT__success(this, msgsender_MSG, msgvalue_MSG, from_s1322, to_s1322, value_s1322);
[L998]               assume !revert && gas >= 0;
[L4367]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_ONIT(this, msgsender_MSG, msgvalue_MSG, from_s1322, to_s1322, value_s1322);

Loop:

End of lasso representation.
RESULT: Ultimate could not prove your program: Toolchain returned no result.
Received shutdown request...
