This is Ultimate 0.1.24-f1553f5-m
[2020-11-24 15:48:45,045 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-24 15:48:45,046 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-24 15:48:45,058 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-24 15:48:45,059 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-24 15:48:45,059 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-24 15:48:45,060 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-24 15:48:45,062 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-24 15:48:45,063 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-24 15:48:45,064 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-24 15:48:45,065 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-24 15:48:45,065 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-24 15:48:45,066 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-24 15:48:45,067 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-24 15:48:45,067 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-24 15:48:45,068 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-24 15:48:45,069 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-24 15:48:45,070 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-24 15:48:45,071 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-24 15:48:45,072 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-24 15:48:45,073 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-24 15:48:45,074 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-24 15:48:45,076 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-24 15:48:45,076 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-24 15:48:45,076 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-24 15:48:45,076 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-24 15:48:45,077 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-24 15:48:45,077 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-24 15:48:45,078 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-24 15:48:45,078 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-24 15:48:45,078 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-24 15:48:45,079 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-24 15:48:45,079 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-24 15:48:45,080 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-24 15:48:45,081 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-24 15:48:45,081 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-24 15:48:45,081 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-24 15:48:45,082 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-24 15:48:45,082 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-24 15:48:45,083 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-24 15:48:45,083 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-24 15:48:45,083 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-24 15:48:45,091 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-24 15:48:45,091 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-24 15:48:45,092 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-24 15:48:45,092 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-24 15:48:45,093 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-24 15:48:45,093 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-24 15:48:45,093 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-24 15:48:45,093 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-24 15:48:45,093 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-24 15:48:45,093 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-24 15:48:45,093 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-24 15:48:45,093 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-24 15:48:45,094 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-24 15:48:45,094 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-24 15:48:45,094 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-24 15:48:45,094 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-24 15:48:45,094 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-24 15:48:45,094 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-24 15:48:45,094 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-24 15:48:45,094 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-24 15:48:45,094 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-24 15:48:45,095 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-24 15:48:45,095 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-24 15:48:45,095 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-24 15:48:45,095 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-24 15:48:45,095 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-24 15:48:45,117 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-24 15:48:45,129 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-24 15:48:45,132 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-24 15:48:45,134 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-24 15:48:45,134 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-24 15:48:45,135 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/MyAdvancedToken_0x86c9f9df4a0bfc9a52eb3d16bcce3bc50d1a34ae_transferfrom-self.bpl
[2020-11-24 15:48:45,135 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/MyAdvancedToken_0x86c9f9df4a0bfc9a52eb3d16bcce3bc50d1a34ae_transferfrom-self.bpl'
[2020-11-24 15:48:45,203 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-24 15:48:45,204 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-24 15:48:45,204 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-24 15:48:45,204 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-24 15:48:45,204 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-24 15:48:45,221 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "MyAdvancedToken_0x86c9f9df4a0bfc9a52eb3d16bcce3bc50d1a34ae_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 03:48:45" (1/1) ...
[2020-11-24 15:48:45,222 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "MyAdvancedToken_0x86c9f9df4a0bfc9a52eb3d16bcce3bc50d1a34ae_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 03:48:45" (1/1) ...
[2020-11-24 15:48:45,244 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "MyAdvancedToken_0x86c9f9df4a0bfc9a52eb3d16bcce3bc50d1a34ae_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 03:48:45" (1/1) ...
[2020-11-24 15:48:45,245 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "MyAdvancedToken_0x86c9f9df4a0bfc9a52eb3d16bcce3bc50d1a34ae_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 03:48:45" (1/1) ...
[2020-11-24 15:48:45,263 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "MyAdvancedToken_0x86c9f9df4a0bfc9a52eb3d16bcce3bc50d1a34ae_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 03:48:45" (1/1) ...
[2020-11-24 15:48:45,270 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "MyAdvancedToken_0x86c9f9df4a0bfc9a52eb3d16bcce3bc50d1a34ae_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 03:48:45" (1/1) ...
[2020-11-24 15:48:45,275 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "MyAdvancedToken_0x86c9f9df4a0bfc9a52eb3d16bcce3bc50d1a34ae_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 03:48:45" (1/1) ...
[2020-11-24 15:48:45,282 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-24 15:48:45,283 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-24 15:48:45,283 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-24 15:48:45,285 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-24 15:48:45,289 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "MyAdvancedToken_0x86c9f9df4a0bfc9a52eb3d16bcce3bc50d1a34ae_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 03:48:45" (1/1) ...
[2020-11-24 15:48:45,303 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(TokenERC20.transferFrom(from, to, value), (p1 != from || p2 != msg.sender) && from == to && value <= balanceOf_TokenERC20[this][from] && value <= allowance_TokenERC20[this][from][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_TokenERC20[this][to] >= 0 && balanceOf_TokenERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_TokenERC20[this][from] >= 0 &&  balanceOf_TokenERC20[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && allowance_TokenERC20[this][from][msg.sender] >= 0 && allowance_TokenERC20[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(TokenERC20.transferFrom(from, to, value), return == true && allowance_TokenERC20[this][from][msg.sender] == old(allowance_TokenERC20[this][from][msg.sender]) - value && totalSupply_TokenERC20[this] == old(totalSupply_TokenERC20[this]) && balanceOf_TokenERC20[this] == old(balanceOf_TokenERC20[this]) && allowance_TokenERC20[this][p1][p2] == old(allowance_TokenERC20[this][p1][p2]) && sellPrice_MyAdvancedToken[this] == old(sellPrice_MyAdvancedToken[this]) && buyPrice_MyAdvancedToken[this] == old(buyPrice_MyAdvancedToken[this]) && frozenAccount_MyAdvancedToken[this] == old(frozenAccount_MyAdvancedToken[this]) && name_TokenERC20[this] == old(name_TokenERC20[this]) && symbol_TokenERC20[this] == old(symbol_TokenERC20[this]) && decimals_TokenERC20[this] == old(decimals_TokenERC20[this]) && owner_owned[this] == old(owner_owned[this]))))
[2020-11-24 15:48:45,308 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(TokenERC20.transferFrom(from, to, value), (p1 != from || p2 != msg.sender) && from == to && value <= balanceOf_TokenERC20[this][from] && value <= allowance_TokenERC20[this][from][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_TokenERC20[this][to] >= 0 && balanceOf_TokenERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_TokenERC20[this][from] >= 0 &&  balanceOf_TokenERC20[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && allowance_TokenERC20[this][from][msg.sender] >= 0 && allowance_TokenERC20[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(TokenERC20.transferFrom(from, to, value), return == true && allowance_TokenERC20[this][from][msg.sender] == old(allowance_TokenERC20[this][from][msg.sender]) - value && totalSupply_TokenERC20[this] == old(totalSupply_TokenERC20[this]) && balanceOf_TokenERC20[this] == old(balanceOf_TokenERC20[this]) && allowance_TokenERC20[this][p1][p2] == old(allowance_TokenERC20[this][p1][p2]) && sellPrice_MyAdvancedToken[this] == old(sellPrice_MyAdvancedToken[this]) && buyPrice_MyAdvancedToken[this] == old(buyPrice_MyAdvancedToken[this]) && frozenAccount_MyAdvancedToken[this] == old(frozenAccount_MyAdvancedToken[this]) && name_TokenERC20[this] == old(name_TokenERC20[this]) && symbol_TokenERC20[this] == old(symbol_TokenERC20[this]) && decimals_TokenERC20[this] == old(decimals_TokenERC20[this]) && owner_owned[this] == old(owner_owned[this]))))
[2020-11-24 15:48:45,316 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(TokenERC20.transferFrom(from, to, value), (p1 != from || p2 != msg.sender) && from == to && value <= balanceOf_TokenERC20[this][from] && value <= allowance_TokenERC20[this][from][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_TokenERC20[this][to] >= 0 && balanceOf_TokenERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_TokenERC20[this][from] >= 0 &&  balanceOf_TokenERC20[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && allowance_TokenERC20[this][from][msg.sender] >= 0 && allowance_TokenERC20[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(TokenERC20.transferFrom(from, to, value), return == true && allowance_TokenERC20[this][from][msg.sender] == old(allowance_TokenERC20[this][from][msg.sender]) - value && totalSupply_TokenERC20[this] == old(totalSupply_TokenERC20[this]) && balanceOf_TokenERC20[this] == old(balanceOf_TokenERC20[this]) && allowance_TokenERC20[this][p1][p2] == old(allowance_TokenERC20[this][p1][p2]) && sellPrice_MyAdvancedToken[this] == old(sellPrice_MyAdvancedToken[this]) && buyPrice_MyAdvancedToken[this] == old(buyPrice_MyAdvancedToken[this]) && frozenAccount_MyAdvancedToken[this] == old(frozenAccount_MyAdvancedToken[this]) && name_TokenERC20[this] == old(name_TokenERC20[this]) && symbol_TokenERC20[this] == old(symbol_TokenERC20[this]) && decimals_TokenERC20[this] == old(decimals_TokenERC20[this]) && owner_owned[this] == old(owner_owned[this]))))
[2020-11-24 15:48:45,322 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( ( ( ( ( p1!=_from_s261 || p2!=msg.sender ) && _from_s261==_to_s261 ) && _value_s261<=balanceOf_TokenERC20[this][_from_s261] ) && _value_s261<=allowance_TokenERC20[this][_from_s261][msg.sender] ) && _value_s261>=0 ) && _value_s261<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && balanceOf_TokenERC20[this][_to_s261]>=0 ) && balanceOf_TokenERC20[this][_to_s261]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && balanceOf_TokenERC20[this][_from_s261]>=0 ) && balanceOf_TokenERC20[this][_from_s261]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && allowance_TokenERC20[this][_from_s261][msg.sender]>=0 ) && allowance_TokenERC20[this][_from_s261][msg.sender]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICOR,BinaryExpression[COMPNEQ,IdentifierExpression[p1,GLOBAL],IdentifierExpression[_from_s261,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]],BinaryExpression[COMPNEQ,IdentifierExpression[p2,GLOBAL],IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],BinaryExpression[COMPEQ,IdentifierExpression[_from_s261,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>],IdentifierExpression[_to_s261,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],BinaryExpression[COMPLEQ,IdentifierExpression[_value_s261,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>],ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],[IdentifierExpression[_from_s261,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]]]],BinaryExpression[COMPLEQ,IdentifierExpression[_value_s261,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>],ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowance_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],[IdentifierExpression[_from_s261,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]]]],BinaryExpression[COMPGEQ,IdentifierExpression[_value_s261,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>],IntegerLiteral[0]]],BinaryExpression[COMPLT,IdentifierExpression[_value_s261,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],[IdentifierExpression[_to_s261,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],[IdentifierExpression[_to_s261,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],[IdentifierExpression[_from_s261,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],[IdentifierExpression[_from_s261,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowance_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],[IdentifierExpression[_from_s261,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowance_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],[IdentifierExpression[_from_s261,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]]
[2020-11-24 15:48:45,326 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( ( ( ( success_s261==true && allowance_TokenERC20[this][_from_s261][msg.sender]==( ( old(allowance_TokenERC20[this][_from_s261][msg.sender]) ) - _value_s261 ) ) && totalSupply_TokenERC20[this]==( old(totalSupply_TokenERC20[this]) ) ) && balanceOf_TokenERC20[this]==( old(balanceOf_TokenERC20[this]) ) ) && allowance_TokenERC20[this][p1][p2]==( old(allowance_TokenERC20[this][p1][p2]) ) ) && sellPrice_MyAdvancedToken[this]==( old(sellPrice_MyAdvancedToken[this]) ) ) && buyPrice_MyAdvancedToken[this]==( old(buyPrice_MyAdvancedToken[this]) ) ) && frozenAccount_MyAdvancedToken[this]==( old(frozenAccount_MyAdvancedToken[this]) ) ) && name_TokenERC20[this]==( old(name_TokenERC20[this]) ) ) && symbol_TokenERC20[this]==( old(symbol_TokenERC20[this]) ) ) && decimals_TokenERC20[this]==( old(decimals_TokenERC20[this]) ) ) && owner_owned[this]==( old(owner_owned[this]) ) ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[success_s261,<IMPLEMENTATION_OUTPARAM,transferFrom~address~address~uint256_TokenERC20>],BooleanLiteral[true]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowance_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],[IdentifierExpression[_from_s261,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],BinaryExpression[ARITHMINUS,UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowance_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],[IdentifierExpression[_from_s261,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]]],IdentifierExpression[_value_s261,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[totalSupply_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[totalSupply_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[balanceOf_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[balanceOf_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowance_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],[IdentifierExpression[p1,GLOBAL]]],[IdentifierExpression[p2,GLOBAL]]],UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowance_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],[IdentifierExpression[p1,GLOBAL]]],[IdentifierExpression[p2,GLOBAL]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[sellPrice_MyAdvancedToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[sellPrice_MyAdvancedToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[buyPrice_MyAdvancedToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[buyPrice_MyAdvancedToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[frozenAccount_MyAdvancedToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[frozenAccount_MyAdvancedToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[name_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[name_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[symbol_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[symbol_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[decimals_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[decimals_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[owner_owned,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[owner_owned,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]]]]]
[2020-11-24 15:48:45,329 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(TokenERC20.transferFrom(from, to, value), (p1 != from || p2 != msg.sender) && from == to && value <= balanceOf_TokenERC20[this][from] && value <= allowance_TokenERC20[this][from][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_TokenERC20[this][to] >= 0 && balanceOf_TokenERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_TokenERC20[this][from] >= 0 &&  balanceOf_TokenERC20[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && allowance_TokenERC20[this][from][msg.sender] >= 0 && allowance_TokenERC20[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(TokenERC20.transferFrom(from, to, value), return == true && allowance_TokenERC20[this][from][msg.sender] == old(allowance_TokenERC20[this][from][msg.sender]) - value && totalSupply_TokenERC20[this] == old(totalSupply_TokenERC20[this]) && balanceOf_TokenERC20[this] == old(balanceOf_TokenERC20[this]) && allowance_TokenERC20[this][p1][p2] == old(allowance_TokenERC20[this][p1][p2]) && sellPrice_MyAdvancedToken[this] == old(sellPrice_MyAdvancedToken[this]) && buyPrice_MyAdvancedToken[this] == old(buyPrice_MyAdvancedToken[this]) && frozenAccount_MyAdvancedToken[this] == old(frozenAccount_MyAdvancedToken[this]) && name_TokenERC20[this] == old(name_TokenERC20[this]) && symbol_TokenERC20[this] == old(symbol_TokenERC20[this]) && decimals_TokenERC20[this] == old(decimals_TokenERC20[this]) && owner_owned[this] == old(owner_owned[this]))))
[2020-11-24 15:48:45,330 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_transferFrom_TokenERC200) ==> ( <>AP(success_transferFrom_TokenERC200) ) ) )
Executed UtopiaSpecLang
[2020-11-24 15:48:45,335 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 03:48:45 PropertyContainer
[2020-11-24 15:48:45,335 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-24 15:48:45,335 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-24 15:48:45,335 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-24 15:48:45,335 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-24 15:48:45,336 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "MyAdvancedToken_0x86c9f9df4a0bfc9a52eb3d16bcce3bc50d1a34ae_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 03:48:45" (1/2) ...
[2020-11-24 15:48:45,336 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-24 15:48:45,337 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-24 15:48:45,346 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 03:48:45" (2/2) ...
[2020-11-24 15:48:45,346 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-24 15:48:45,346 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-24 15:48:45,346 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-24 15:48:45,346 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-24 15:48:45,347 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "MyAdvancedToken_0x86c9f9df4a0bfc9a52eb3d16bcce3bc50d1a34ae_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 03:48:45" (1/2) ...
[2020-11-24 15:48:45,404 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-24 15:48:45,404 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_TokenERC20__success
[2020-11-24 15:48:45,404 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_TokenERC20
[2020-11-24 15:48:45,405 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_TokenERC20
[2020-11-24 15:48:45,405 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_TokenERC20
[2020-11-24 15:48:45,405 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_TokenERC20
[2020-11-24 15:48:45,405 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_TokenERC20
[2020-11-24 15:48:45,405 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_TokenERC20
[2020-11-24 15:48:45,405 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_TokenERC20
[2020-11-24 15:48:45,405 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_TokenERC20
[2020-11-24 15:48:45,405 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_TokenERC20
[2020-11-24 15:48:45,405 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_TokenERC20
[2020-11-24 15:48:45,405 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_TokenERC20
[2020-11-24 15:48:45,406 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_TokenERC20
[2020-11-24 15:48:45,406 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_MyAdvancedToken__success
[2020-11-24 15:48:45,406 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-24 15:48:45,406 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-24 15:48:45,406 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-24 15:48:45,406 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__success
[2020-11-24 15:48:45,406 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_owned
[2020-11-24 15:48:45,406 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_owned
[2020-11-24 15:48:45,406 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_tokenRecipient
[2020-11-24 15:48:45,407 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_tokenRecipient
[2020-11-24 15:48:45,407 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_TokenERC20
[2020-11-24 15:48:45,407 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_TokenERC20
[2020-11-24 15:48:45,407 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_MyAdvancedToken
[2020-11-24 15:48:45,407 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-24 15:48:45,407 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-24 15:48:45,407 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_TokenERC20__fail
[2020-11-24 15:48:45,407 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_TokenERC20__success
[2020-11-24 15:48:45,407 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_TokenERC20__fail
[2020-11-24 15:48:45,407 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_TokenERC20__success
[2020-11-24 15:48:45,407 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_TokenERC20__fail
[2020-11-24 15:48:45,408 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_TokenERC20__success
[2020-11-24 15:48:45,408 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_TokenERC20__fail
[2020-11-24 15:48:45,408 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_TokenERC20__success
[2020-11-24 15:48:45,408 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_TokenERC20__fail
[2020-11-24 15:48:45,408 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_TokenERC20__success
[2020-11-24 15:48:45,408 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_TokenERC20__fail
[2020-11-24 15:48:45,408 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_TokenERC20__success
[2020-11-24 15:48:45,408 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_TokenERC20__fail
[2020-11-24 15:48:45,408 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_MyAdvancedToken__fail
[2020-11-24 15:48:45,408 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-24 15:48:45,408 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-24 15:48:45,408 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-24 15:48:45,408 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__fail
[2020-11-24 15:48:45,409 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-24 15:48:45,409 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-24 15:48:45,409 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_TokenERC20__fail
[2020-11-24 15:48:45,409 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_TokenERC20__success
[2020-11-24 15:48:45,409 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_TokenERC20__fail
[2020-11-24 15:48:45,409 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_TokenERC20__success
[2020-11-24 15:48:45,409 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_TokenERC20__fail
[2020-11-24 15:48:45,409 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_TokenERC20__success
[2020-11-24 15:48:45,409 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_TokenERC20__fail
[2020-11-24 15:48:45,409 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_TokenERC20__success
[2020-11-24 15:48:45,409 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_TokenERC20__fail
[2020-11-24 15:48:45,409 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_TokenERC20__success
[2020-11-24 15:48:45,409 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_TokenERC20__fail
[2020-11-24 15:48:45,409 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_TokenERC20__success
[2020-11-24 15:48:45,410 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_TokenERC20__fail
[2020-11-24 15:48:45,410 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_TokenERC20__success
[2020-11-24 15:48:45,410 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_MyAdvancedToken__fail
[2020-11-24 15:48:45,410 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_MyAdvancedToken__success
[2020-11-24 15:48:45,410 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-24 15:48:45,410 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-24 15:48:45,410 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-24 15:48:45,410 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-24 15:48:45,410 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-24 15:48:45,410 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-24 15:48:45,410 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__fail
[2020-11-24 15:48:45,410 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__success
[2020-11-24 15:48:45,410 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_owned
[2020-11-24 15:48:45,411 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_owned
[2020-11-24 15:48:45,411 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_tokenRecipient
[2020-11-24 15:48:45,411 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_tokenRecipient
[2020-11-24 15:48:45,411 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_TokenERC20
[2020-11-24 15:48:45,411 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_TokenERC20
[2020-11-24 15:48:45,411 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_MyAdvancedToken
[2020-11-24 15:48:45,411 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-24 15:48:45,411 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-24 15:48:45,411 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-24 15:48:45,578 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 15:48:45,765 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 15:48:45,765 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 15:48:45,766 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 15:48:45,919 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-24 15:48:45,919 INFO  L286             CfgBuilder]: Removed 4 assue(true) statements.
[2020-11-24 15:48:45,921 INFO  L202        PluginConnector]: Adding new model MyAdvancedToken_0x86c9f9df4a0bfc9a52eb3d16bcce3bc50d1a34ae_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 03:48:45 BoogieIcfgContainer
[2020-11-24 15:48:45,921 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 03:48:45" (2/2) ...
[2020-11-24 15:48:45,921 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-24 15:48:45,922 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@33bad24f and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 03:48:45, skipping insertion in model container
[2020-11-24 15:48:45,922 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-24 15:48:45,922 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-24 15:48:45,922 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-24 15:48:45,923 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-24 15:48:45,924 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "MyAdvancedToken_0x86c9f9df4a0bfc9a52eb3d16bcce3bc50d1a34ae_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 03:48:45" (1/3) ...
[2020-11-24 15:48:45,924 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@5da5956e and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 03:48:45, skipping insertion in model container
[2020-11-24 15:48:45,924 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 03:48:45" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-24 15:48:45,964 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 03:48:45 NWAContainer
[2020-11-24 15:48:45,964 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-24 15:48:45,964 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-24 15:48:45,965 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-24 15:48:45,965 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-24 15:48:45,966 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "MyAdvancedToken_0x86c9f9df4a0bfc9a52eb3d16bcce3bc50d1a34ae_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 03:48:45" (3/4) ...
[2020-11-24 15:48:45,967 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@29f83cba and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 03:48:45, skipping insertion in model container
[2020-11-24 15:48:45,967 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 03:48:45" (4/4) ...
[2020-11-24 15:48:45,970 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-24 15:48:45,973 INFO  L110   BuchiProductObserver]: Initial RCFG 670 locations, 837 edges
[2020-11-24 15:48:45,973 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-24 15:48:45,983 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-24 15:48:46,945 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-24 15:48:46,948 INFO  L110   BuchiProductObserver]: BuchiProgram size 1548 locations, 2699 edges
[2020-11-24 15:48:46,948 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 03:48:46 BoogieIcfgContainer
[2020-11-24 15:48:46,948 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-24 15:48:46,948 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-24 15:48:46,949 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-24 15:48:46,950 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-24 15:48:46,951 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 03:48:46" (1/1) ...
[2020-11-24 15:48:47,003 INFO  L313           BlockEncoder]: Initial Icfg 1548 locations, 2699 edges
[2020-11-24 15:48:47,004 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-24 15:48:47,004 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-24 15:48:47,004 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-24 15:48:47,005 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-24 15:48:47,013 INFO  L70    emoveInfeasibleEdges]: Removed 51 edges and 11 locations because of local infeasibility
[2020-11-24 15:48:47,018 INFO  L70        RemoveSinkStates]: Removed 14 edges and 9 locations by removing sink states
[2020-11-24 15:48:47,025 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-24 15:48:47,027 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-24 15:48:47,029 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-24 15:48:47,029 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-24 15:48:47,032 INFO  L313           BlockEncoder]: Encoded RCFG 1514 locations, 2614 edges
[2020-11-24 15:48:47,032 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 24.11 03:48:47 BasicIcfg
[2020-11-24 15:48:47,033 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-24 15:48:47,033 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-24 15:48:47,033 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-24 15:48:47,035 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-24 15:48:47,036 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 15:48:47,036 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "MyAdvancedToken_0x86c9f9df4a0bfc9a52eb3d16bcce3bc50d1a34ae_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 03:48:45" (1/6) ...
[2020-11-24 15:48:47,038 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@135ac941 and model type MyAdvancedToken_0x86c9f9df4a0bfc9a52eb3d16bcce3bc50d1a34ae_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 24.11 03:48:47, skipping insertion in model container
[2020-11-24 15:48:47,038 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 15:48:47,038 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 03:48:45" (2/6) ...
[2020-11-24 15:48:47,038 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@135ac941 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 24.11 03:48:47, skipping insertion in model container
[2020-11-24 15:48:47,038 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 15:48:47,038 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "MyAdvancedToken_0x86c9f9df4a0bfc9a52eb3d16bcce3bc50d1a34ae_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 03:48:45" (3/6) ...
[2020-11-24 15:48:47,039 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@135ac941 and model type MyAdvancedToken_0x86c9f9df4a0bfc9a52eb3d16bcce3bc50d1a34ae_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 24.11 03:48:47, skipping insertion in model container
[2020-11-24 15:48:47,039 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 15:48:47,039 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 03:48:45" (4/6) ...
[2020-11-24 15:48:47,039 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@135ac941 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 24.11 03:48:47, skipping insertion in model container
[2020-11-24 15:48:47,039 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 15:48:47,039 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 03:48:46" (5/6) ...
[2020-11-24 15:48:47,039 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@135ac941 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 24.11 03:48:47, skipping insertion in model container
[2020-11-24 15:48:47,039 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 15:48:47,040 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 24.11 03:48:47" (6/6) ...
[2020-11-24 15:48:47,041 INFO  L404   chiAutomizerObserver]: Analyzing ICFG MyAdvancedToken_0x86c9f9df4a0bfc9a52eb3d16bcce3bc50d1a34ae_transferfrom-self.bpl_BEv2
[2020-11-24 15:48:47,081 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-24 15:48:47,082 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-24 15:48:47,082 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-24 15:48:47,082 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-24 15:48:47,082 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-24 15:48:47,082 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-24 15:48:47,082 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-24 15:48:47,082 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-24 15:48:47,083 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-24 15:48:47,104 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1514 states.
[2020-11-24 15:48:47,148 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 15:48:47,148 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 15:48:47,148 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 15:48:47,157 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 15:48:47,158 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
[2020-11-24 15:48:47,158 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-24 15:48:47,158 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1514 states.
[2020-11-24 15:48:47,168 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 15:48:47,168 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 15:48:47,169 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 15:48:47,170 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 15:48:47,171 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L3]                 success_transferFrom_TokenERC200 := false;
[L3]                 call_transferFrom_TokenERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L1941]              assume null == 0;
[L1942]  CALL        call this := FreshRefGenerator__success();
[L748]               havoc newRef;
[L749]               assume Alloc[newRef] == false;
[L750]               Alloc[newRef] := true;
[L751]               assume newRef != null;
[L1942]  RET         call this := FreshRefGenerator__success();
[L1943]              assume now >= 0;
[L1944]              assume DType[this] == MyAdvancedToken;
[L1945]              assume !revert && gas >= 0;
[L1946]  CALL        call CorralChoice_MyAdvancedToken(this);
[L1834]              havoc msgsender_MSG;
[L1835]              havoc msgvalue_MSG;
[L1836]              havoc choice;
[L1837]              havoc __ret_0_owner;
[L1838]              havoc newOwner_s35;
[L1839]              havoc __ret_0_name;
[L1840]              havoc __ret_0_symbol;
[L1841]              havoc __ret_0_decimals;
[L1842]              havoc __ret_0_totalSupply;
[L1843]              havoc arg662_s0;
[L1844]              havoc __ret_0_balanceOf;
[L1845]              havoc arg663_s0;
[L1846]              havoc arg664_s0;
[L1847]              havoc __ret_0_allowance;
[L1848]              havoc initialSupply_s124;
[L1849]              havoc tokenName_s124;
[L1850]              havoc tokenSymbol_s124;
[L1851]              havoc _to_s221;
[L1852]              havoc _value_s221;
[L1853]              havoc success_s221;
[L1854]              havoc _from_s261;
[L1855]              havoc _to_s261;
[L1856]              havoc _value_s261;
[L1857]              havoc success_s261;
[L1858]              havoc _spender_s289;
[L1859]              havoc _value_s289;
[L1860]              havoc success_s289;
[L1861]              havoc _spender_s327;
[L1862]              havoc _value_s327;
[L1863]              havoc _extraData_s327;
[L1864]              havoc success_s327;
[L1865]              havoc _value_s363;
[L1866]              havoc success_s363;
[L1867]              havoc _from_s418;
[L1868]              havoc _value_s418;
[L1869]              havoc success_s418;
[L1870]              havoc __ret_0_sellPrice;
[L1871]              havoc __ret_0_buyPrice;
[L1872]              havoc arg665_s0;
[L1873]              havoc __ret_0_frozenAccount;
[L1874]              havoc initialSupply_s452;
[L1875]              havoc tokenName_s452;
[L1876]              havoc tokenSymbol_s452;
[L1877]              havoc target_s560;
[L1878]              havoc mintedAmount_s560;
[L1879]              havoc target_s581;
[L1880]              havoc freeze_s581;
[L1881]              havoc newSellPrice_s599;
[L1882]              havoc newBuyPrice_s599;
[L1883]              havoc amount_s659;
[L1884]              havoc tmpNow;
[L1885]              havoc gas;
[L1886]              assume gas > 4000000 && gas <= 8000000;
[L1887]              tmpNow := now;
[L1888]              havoc now;
[L1889]              assume now > tmpNow;
[L1890]              assume msgsender_MSG != null;
[L1891]  COND TRUE   choice == 6
[L1892]              gas := gas - 21000;
[L1893]  COND FALSE  !(gas >= 0)
[L1946]  RET         call CorralChoice_MyAdvancedToken(this);

Loop:
[L1946]        assume true;

[2020-11-24 15:48:47,188 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 15:48:47,188 INFO  L82        PathProgramCache]: Analyzing trace with hash -1048045137, now seen corresponding path program 1 times
[2020-11-24 15:48:47,193 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 15:48:47,217 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 15:48:47,281 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 15:48:47,283 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 15:48:47,283 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [5] imperfect sequences [] total 5
[2020-11-24 15:48:47,286 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 15:48:47,396 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 5 interpolants.
[2020-11-24 15:48:47,397 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=9, Invalid=11, Unknown=0, NotChecked=0, Total=20
[2020-11-24 15:48:47,400 INFO  L87              Difference]: Start difference. First operand 1514 states. Second operand 5 states.
[2020-11-24 15:48:47,593 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 15:48:47,593 INFO  L93              Difference]: Finished difference Result 678 states and 760 transitions.
[2020-11-24 15:48:47,593 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-24 15:48:47,595 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 678 states and 760 transitions.
[2020-11-24 15:48:47,600 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 15:48:47,606 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 678 states to 248 states and 273 transitions.
[2020-11-24 15:48:47,607 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 4
[2020-11-24 15:48:47,608 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 248
[2020-11-24 15:48:47,608 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 248 states and 273 transitions.
[2020-11-24 15:48:47,610 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 15:48:47,610 INFO  L728         BuchiCegarLoop]: Abstraction has 248 states and 273 transitions.
[2020-11-24 15:48:47,625 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 248 states and 273 transitions.
[2020-11-24 15:48:47,640 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 248 to 248.
[2020-11-24 15:48:47,641 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 248 states.
[2020-11-24 15:48:47,642 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 248 states to 248 states and 273 transitions.
[2020-11-24 15:48:47,643 INFO  L751         BuchiCegarLoop]: Abstraction has 248 states and 273 transitions.
[2020-11-24 15:48:47,643 INFO  L631         BuchiCegarLoop]: Abstraction has 248 states and 273 transitions.
[2020-11-24 15:48:47,643 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-24 15:48:47,643 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 248 states and 273 transitions.
[2020-11-24 15:48:47,645 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 15:48:47,645 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 15:48:47,645 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 15:48:47,646 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 15:48:47,646 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L3]                 success_transferFrom_TokenERC200 := false;
[L3]                 call_transferFrom_TokenERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L1941]              assume null == 0;
[L1942]  CALL        call this := FreshRefGenerator__success();
[L748]               havoc newRef;
[L749]               assume Alloc[newRef] == false;
[L750]               Alloc[newRef] := true;
[L751]               assume newRef != null;
[L1942]  RET         call this := FreshRefGenerator__success();
[L1943]              assume now >= 0;
[L1944]              assume DType[this] == MyAdvancedToken;
[L1945]              assume !revert && gas >= 0;
[L1946]  CALL        call CorralChoice_MyAdvancedToken(this);
[L1834]              havoc msgsender_MSG;
[L1835]              havoc msgvalue_MSG;
[L1836]              havoc choice;
[L1837]              havoc __ret_0_owner;
[L1838]              havoc newOwner_s35;
[L1839]              havoc __ret_0_name;
[L1840]              havoc __ret_0_symbol;
[L1841]              havoc __ret_0_decimals;
[L1842]              havoc __ret_0_totalSupply;
[L1843]              havoc arg662_s0;
[L1844]              havoc __ret_0_balanceOf;
[L1845]              havoc arg663_s0;
[L1846]              havoc arg664_s0;
[L1847]              havoc __ret_0_allowance;
[L1848]              havoc initialSupply_s124;
[L1849]              havoc tokenName_s124;
[L1850]              havoc tokenSymbol_s124;
[L1851]              havoc _to_s221;
[L1852]              havoc _value_s221;
[L1853]              havoc success_s221;
[L1854]              havoc _from_s261;
[L1855]              havoc _to_s261;
[L1856]              havoc _value_s261;
[L1857]              havoc success_s261;
[L1858]              havoc _spender_s289;
[L1859]              havoc _value_s289;
[L1860]              havoc success_s289;
[L1861]              havoc _spender_s327;
[L1862]              havoc _value_s327;
[L1863]              havoc _extraData_s327;
[L1864]              havoc success_s327;
[L1865]              havoc _value_s363;
[L1866]              havoc success_s363;
[L1867]              havoc _from_s418;
[L1868]              havoc _value_s418;
[L1869]              havoc success_s418;
[L1870]              havoc __ret_0_sellPrice;
[L1871]              havoc __ret_0_buyPrice;
[L1872]              havoc arg665_s0;
[L1873]              havoc __ret_0_frozenAccount;
[L1874]              havoc initialSupply_s452;
[L1875]              havoc tokenName_s452;
[L1876]              havoc tokenSymbol_s452;
[L1877]              havoc target_s560;
[L1878]              havoc mintedAmount_s560;
[L1879]              havoc target_s581;
[L1880]              havoc freeze_s581;
[L1881]              havoc newSellPrice_s599;
[L1882]              havoc newBuyPrice_s599;
[L1883]              havoc amount_s659;
[L1884]              havoc tmpNow;
[L1885]              havoc gas;
[L1886]              assume gas > 4000000 && gas <= 8000000;
[L1887]              tmpNow := now;
[L1888]              havoc now;
[L1889]              assume now > tmpNow;
[L1890]              assume msgsender_MSG != null;
[L1891]  COND FALSE  !(choice == 6)
[L1897]  COND FALSE  !(choice == 5)
[L1903]  COND FALSE  !(choice == 4)
[L1909]  COND FALSE  !(choice == 3)
[L1916]  COND TRUE   choice == 2
[L1917]              gas := gas - 21000;
[L1918]  COND TRUE   gas >= 0
[L1919]              assume _value_s261 >= 0 && _value_s261 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1920]              assume msgvalue_MSG == 0;
[L1921]  CALL        call success_s261 := transferFrom~address~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, _from_s261, _to_s261, _value_s261);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != _from_s261 || p2 != msgsender_MSG) && _from_s261 == _to_s261) && _value_s261 <= balanceOf_TokenERC20[this][_from_s261]) && _value_s261 <= allowance_TokenERC20[this][_from_s261][msgsender_MSG]) && _value_s261 >= 0) && _value_s261 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_TokenERC20[this][_to_s261] >= 0) && balanceOf_TokenERC20[this][_to_s261] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_TokenERC20[this][_from_s261] >= 0) && balanceOf_TokenERC20[this][_from_s261] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowance_TokenERC20[this][_from_s261][msgsender_MSG] >= 0) && allowance_TokenERC20[this][_from_s261][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_TokenERC200 := true;
[L3]                 call_transferFrom_TokenERC200 := false;
[L3]                 revert := revert_hold;
[L151]               havoc __exception;
[L152]               revert := false;
[L153]   COND FALSE  !(__exception)
[L180]   CALL        call success_s261 := transferFrom~address~address~uint256_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, _from_s261, _to_s261, _value_s261);
[L874]   COND TRUE   !(_value_s261 <= allowance_TokenERC20[this][_from_s261][msgsender_MSG])
[L875]               revert := true;
[L180]   RET         call success_s261 := transferFrom~address~address~uint256_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, _from_s261, _to_s261, _value_s261);
[L181]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((((((success_s261 == true && allowance_TokenERC20[this][_from_s261][msgsender_MSG] == old(allowance_TokenERC20[this][_from_s261][msgsender_MSG]) - _value_s261) && totalSupply_TokenERC20[this] == old(totalSupply_TokenERC20[this])) && balanceOf_TokenERC20[this] == old(balanceOf_TokenERC20[this])) && allowance_TokenERC20[this][p1][p2] == old(allowance_TokenERC20[this][p1][p2])) && sellPrice_MyAdvancedToken[this] == old(sellPrice_MyAdvancedToken[this])) && buyPrice_MyAdvancedToken[this] == old(buyPrice_MyAdvancedToken[this])) && frozenAccount_MyAdvancedToken[this] == old(frozenAccount_MyAdvancedToken[this])) && name_TokenERC20[this] == old(name_TokenERC20[this])) && symbol_TokenERC20[this] == old(symbol_TokenERC20[this])) && decimals_TokenERC20[this] == old(decimals_TokenERC20[this])) && owner_owned[this] == old(owner_owned[this]));
[L3]                 revert := revert_hold;
[L1921]  RET         call success_s261 := transferFrom~address~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, _from_s261, _to_s261, _value_s261);
[L1946]  RET         call CorralChoice_MyAdvancedToken(this);

Loop:
[L1946]        assume true;

[2020-11-24 15:48:47,650 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 15:48:47,650 INFO  L82        PathProgramCache]: Analyzing trace with hash 1168943566, now seen corresponding path program 1 times
[2020-11-24 15:48:47,651 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 15:48:47,663 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 15:48:47,681 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 15:48:47,681 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 15:48:47,681 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-24 15:48:47,683 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 15:48:47,683 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-24 15:48:47,683 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-24 15:48:47,683 INFO  L87              Difference]: Start difference. First operand 248 states and 273 transitions. cyclomatic complexity: 26 Second operand 3 states.
[2020-11-24 15:48:47,692 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 15:48:47,692 INFO  L93              Difference]: Finished difference Result 279 states and 303 transitions.
[2020-11-24 15:48:47,692 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-24 15:48:47,693 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 279 states and 303 transitions.
[2020-11-24 15:48:47,695 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 2
[2020-11-24 15:48:47,696 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 279 states to 258 states and 272 transitions.
[2020-11-24 15:48:47,697 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 258
[2020-11-24 15:48:47,697 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 258
[2020-11-24 15:48:47,697 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 258 states and 272 transitions.
[2020-11-24 15:48:47,698 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 15:48:47,698 INFO  L728         BuchiCegarLoop]: Abstraction has 258 states and 272 transitions.
[2020-11-24 15:48:47,698 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 258 states and 272 transitions.
[2020-11-24 15:48:47,704 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 258 to 247.
[2020-11-24 15:48:47,704 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 247 states.
[2020-11-24 15:48:47,705 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 247 states to 247 states and 261 transitions.
[2020-11-24 15:48:47,705 INFO  L751         BuchiCegarLoop]: Abstraction has 247 states and 261 transitions.
[2020-11-24 15:48:47,705 INFO  L631         BuchiCegarLoop]: Abstraction has 247 states and 261 transitions.
[2020-11-24 15:48:47,705 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-24 15:48:47,705 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 247 states and 261 transitions.
[2020-11-24 15:48:47,706 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 15:48:47,707 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 15:48:47,707 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 15:48:47,708 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 15:48:47,708 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L3]                 success_transferFrom_TokenERC200 := false;
[L3]                 call_transferFrom_TokenERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L1941]              assume null == 0;
[L1942]  CALL        call this := FreshRefGenerator__success();
[L748]               havoc newRef;
[L749]               assume Alloc[newRef] == false;
[L750]               Alloc[newRef] := true;
[L751]               assume newRef != null;
[L1942]  RET         call this := FreshRefGenerator__success();
[L1943]              assume now >= 0;
[L1944]              assume DType[this] == MyAdvancedToken;
[L1945]              assume !revert && gas >= 0;
[L1946]  CALL        call CorralChoice_MyAdvancedToken(this);
[L1834]              havoc msgsender_MSG;
[L1835]              havoc msgvalue_MSG;
[L1836]              havoc choice;
[L1837]              havoc __ret_0_owner;
[L1838]              havoc newOwner_s35;
[L1839]              havoc __ret_0_name;
[L1840]              havoc __ret_0_symbol;
[L1841]              havoc __ret_0_decimals;
[L1842]              havoc __ret_0_totalSupply;
[L1843]              havoc arg662_s0;
[L1844]              havoc __ret_0_balanceOf;
[L1845]              havoc arg663_s0;
[L1846]              havoc arg664_s0;
[L1847]              havoc __ret_0_allowance;
[L1848]              havoc initialSupply_s124;
[L1849]              havoc tokenName_s124;
[L1850]              havoc tokenSymbol_s124;
[L1851]              havoc _to_s221;
[L1852]              havoc _value_s221;
[L1853]              havoc success_s221;
[L1854]              havoc _from_s261;
[L1855]              havoc _to_s261;
[L1856]              havoc _value_s261;
[L1857]              havoc success_s261;
[L1858]              havoc _spender_s289;
[L1859]              havoc _value_s289;
[L1860]              havoc success_s289;
[L1861]              havoc _spender_s327;
[L1862]              havoc _value_s327;
[L1863]              havoc _extraData_s327;
[L1864]              havoc success_s327;
[L1865]              havoc _value_s363;
[L1866]              havoc success_s363;
[L1867]              havoc _from_s418;
[L1868]              havoc _value_s418;
[L1869]              havoc success_s418;
[L1870]              havoc __ret_0_sellPrice;
[L1871]              havoc __ret_0_buyPrice;
[L1872]              havoc arg665_s0;
[L1873]              havoc __ret_0_frozenAccount;
[L1874]              havoc initialSupply_s452;
[L1875]              havoc tokenName_s452;
[L1876]              havoc tokenSymbol_s452;
[L1877]              havoc target_s560;
[L1878]              havoc mintedAmount_s560;
[L1879]              havoc target_s581;
[L1880]              havoc freeze_s581;
[L1881]              havoc newSellPrice_s599;
[L1882]              havoc newBuyPrice_s599;
[L1883]              havoc amount_s659;
[L1884]              havoc tmpNow;
[L1885]              havoc gas;
[L1886]              assume gas > 4000000 && gas <= 8000000;
[L1887]              tmpNow := now;
[L1888]              havoc now;
[L1889]              assume now > tmpNow;
[L1890]              assume msgsender_MSG != null;
[L1891]  COND FALSE  !(choice == 6)
[L1897]  COND FALSE  !(choice == 5)
[L1903]  COND FALSE  !(choice == 4)
[L1909]  COND FALSE  !(choice == 3)
[L1916]  COND TRUE   choice == 2
[L1917]              gas := gas - 21000;
[L1918]  COND TRUE   gas >= 0
[L1919]              assume _value_s261 >= 0 && _value_s261 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1920]              assume msgvalue_MSG == 0;
[L1921]  CALL        call success_s261 := transferFrom~address~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, _from_s261, _to_s261, _value_s261);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != _from_s261 || p2 != msgsender_MSG) && _from_s261 == _to_s261) && _value_s261 <= balanceOf_TokenERC20[this][_from_s261]) && _value_s261 <= allowance_TokenERC20[this][_from_s261][msgsender_MSG]) && _value_s261 >= 0) && _value_s261 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_TokenERC20[this][_to_s261] >= 0) && balanceOf_TokenERC20[this][_to_s261] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_TokenERC20[this][_from_s261] >= 0) && balanceOf_TokenERC20[this][_from_s261] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowance_TokenERC20[this][_from_s261][msgsender_MSG] >= 0) && allowance_TokenERC20[this][_from_s261][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_TokenERC200 := true;
[L3]                 call_transferFrom_TokenERC200 := false;
[L3]                 revert := revert_hold;
[L151]               havoc __exception;
[L152]               revert := false;
[L153]   COND TRUE   __exception
[L154]               __tmp__Balance := Balance;
[L155]               __tmp__DType := DType;
[L156]               __tmp__Alloc := Alloc;
[L157]               __tmp__balance_ADDR := balance_ADDR;
[L158]               __tmp__M_Ref_int := M_Ref_int;
[L159]               __tmp__sum_balanceOf0 := sum_balanceOf0;
[L160]               __tmp__alloc_allowance_TokenERC20_lvl0 := alloc_allowance_TokenERC20_lvl0;
[L161]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L162]               __tmp__sum_allowance1 := sum_allowance1;
[L163]               __tmp__M_Ref_bool := M_Ref_bool;
[L164]               __tmp__sum_frozenAccount2 := sum_frozenAccount2;
[L165]               __tmp__Length := Length;
[L166]               __tmp__now := now;
[L167]               __tmp__owner_owned := owner_owned;
[L168]               __tmp__name_TokenERC20 := name_TokenERC20;
[L169]               __tmp__symbol_TokenERC20 := symbol_TokenERC20;
[L170]               __tmp__decimals_TokenERC20 := decimals_TokenERC20;
[L171]               __tmp__totalSupply_TokenERC20 := totalSupply_TokenERC20;
[L172]               __tmp__balanceOf_TokenERC20 := balanceOf_TokenERC20;
[L173]               __tmp__allowance_TokenERC20 := allowance_TokenERC20;
[L174]               __tmp__sellPrice_MyAdvancedToken := sellPrice_MyAdvancedToken;
[L175]               __tmp__buyPrice_MyAdvancedToken := buyPrice_MyAdvancedToken;
[L176]               __tmp__frozenAccount_MyAdvancedToken := frozenAccount_MyAdvancedToken;
[L177]   CALL        call success_s261 := transferFrom~address~address~uint256_TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, _from_s261, _to_s261, _value_s261);
[L848]   COND TRUE   !(_value_s261 <= __tmp__allowance_TokenERC20[this][_from_s261][msgsender_MSG])
[L849]               revert := true;
[L177]   RET         call success_s261 := transferFrom~address~address~uint256_TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, _from_s261, _to_s261, _value_s261);
[L178]               assume revert || gas < 0;
[L1921]  RET         call success_s261 := transferFrom~address~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, _from_s261, _to_s261, _value_s261);
[L1946]  RET         call CorralChoice_MyAdvancedToken(this);

Loop:
[L1946]        assume true;

[2020-11-24 15:48:47,711 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 15:48:47,711 INFO  L82        PathProgramCache]: Analyzing trace with hash -2099682331, now seen corresponding path program 1 times
[2020-11-24 15:48:47,712 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 15:48:47,723 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 15:48:47,773 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 15:48:47,773 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 15:48:47,774 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [6] imperfect sequences [] total 6
[2020-11-24 15:48:47,774 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 15:48:47,774 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 6 interpolants.
[2020-11-24 15:48:47,774 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=9, Invalid=21, Unknown=0, NotChecked=0, Total=30
[2020-11-24 15:48:47,774 INFO  L87              Difference]: Start difference. First operand 247 states and 261 transitions. cyclomatic complexity: 15 Second operand 6 states.
[2020-11-24 15:48:47,883 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 15:48:47,883 INFO  L93              Difference]: Finished difference Result 256 states and 269 transitions.
[2020-11-24 15:48:47,883 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 7 states. 
[2020-11-24 15:48:47,883 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 256 states and 269 transitions.
[2020-11-24 15:48:47,885 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 2
[2020-11-24 15:48:47,886 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 256 states to 253 states and 266 transitions.
[2020-11-24 15:48:47,886 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 253
[2020-11-24 15:48:47,887 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 253
[2020-11-24 15:48:47,887 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 253 states and 266 transitions.
[2020-11-24 15:48:47,887 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 15:48:47,888 INFO  L728         BuchiCegarLoop]: Abstraction has 253 states and 266 transitions.
[2020-11-24 15:48:47,888 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 253 states and 266 transitions.
[2020-11-24 15:48:47,891 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 253 to 246.
[2020-11-24 15:48:47,891 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 246 states.
[2020-11-24 15:48:47,892 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 246 states to 246 states and 259 transitions.
[2020-11-24 15:48:47,892 INFO  L751         BuchiCegarLoop]: Abstraction has 246 states and 259 transitions.
[2020-11-24 15:48:47,892 INFO  L631         BuchiCegarLoop]: Abstraction has 246 states and 259 transitions.
[2020-11-24 15:48:47,892 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-24 15:48:47,892 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 246 states and 259 transitions.
[2020-11-24 15:48:47,893 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 15:48:47,894 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 15:48:47,894 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 15:48:47,895 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 15:48:47,895 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L3]                 success_transferFrom_TokenERC200 := false;
[L3]                 call_transferFrom_TokenERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L1941]              assume null == 0;
[L1942]  CALL        call this := FreshRefGenerator__success();
[L748]               havoc newRef;
[L749]               assume Alloc[newRef] == false;
[L750]               Alloc[newRef] := true;
[L751]               assume newRef != null;
[L1942]  RET         call this := FreshRefGenerator__success();
[L1943]              assume now >= 0;
[L1944]              assume DType[this] == MyAdvancedToken;
[L1945]              assume !revert && gas >= 0;
[L1946]  CALL        call CorralChoice_MyAdvancedToken(this);
[L1834]              havoc msgsender_MSG;
[L1835]              havoc msgvalue_MSG;
[L1836]              havoc choice;
[L1837]              havoc __ret_0_owner;
[L1838]              havoc newOwner_s35;
[L1839]              havoc __ret_0_name;
[L1840]              havoc __ret_0_symbol;
[L1841]              havoc __ret_0_decimals;
[L1842]              havoc __ret_0_totalSupply;
[L1843]              havoc arg662_s0;
[L1844]              havoc __ret_0_balanceOf;
[L1845]              havoc arg663_s0;
[L1846]              havoc arg664_s0;
[L1847]              havoc __ret_0_allowance;
[L1848]              havoc initialSupply_s124;
[L1849]              havoc tokenName_s124;
[L1850]              havoc tokenSymbol_s124;
[L1851]              havoc _to_s221;
[L1852]              havoc _value_s221;
[L1853]              havoc success_s221;
[L1854]              havoc _from_s261;
[L1855]              havoc _to_s261;
[L1856]              havoc _value_s261;
[L1857]              havoc success_s261;
[L1858]              havoc _spender_s289;
[L1859]              havoc _value_s289;
[L1860]              havoc success_s289;
[L1861]              havoc _spender_s327;
[L1862]              havoc _value_s327;
[L1863]              havoc _extraData_s327;
[L1864]              havoc success_s327;
[L1865]              havoc _value_s363;
[L1866]              havoc success_s363;
[L1867]              havoc _from_s418;
[L1868]              havoc _value_s418;
[L1869]              havoc success_s418;
[L1870]              havoc __ret_0_sellPrice;
[L1871]              havoc __ret_0_buyPrice;
[L1872]              havoc arg665_s0;
[L1873]              havoc __ret_0_frozenAccount;
[L1874]              havoc initialSupply_s452;
[L1875]              havoc tokenName_s452;
[L1876]              havoc tokenSymbol_s452;
[L1877]              havoc target_s560;
[L1878]              havoc mintedAmount_s560;
[L1879]              havoc target_s581;
[L1880]              havoc freeze_s581;
[L1881]              havoc newSellPrice_s599;
[L1882]              havoc newBuyPrice_s599;
[L1883]              havoc amount_s659;
[L1884]              havoc tmpNow;
[L1885]              havoc gas;
[L1886]              assume gas > 4000000 && gas <= 8000000;
[L1887]              tmpNow := now;
[L1888]              havoc now;
[L1889]              assume now > tmpNow;
[L1890]              assume msgsender_MSG != null;
[L1891]  COND FALSE  !(choice == 6)
[L1897]  COND FALSE  !(choice == 5)
[L1903]  COND FALSE  !(choice == 4)
[L1909]  COND FALSE  !(choice == 3)
[L1916]  COND TRUE   choice == 2
[L1917]              gas := gas - 21000;
[L1918]  COND TRUE   gas >= 0
[L1919]              assume _value_s261 >= 0 && _value_s261 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1920]              assume msgvalue_MSG == 0;
[L1921]  CALL        call success_s261 := transferFrom~address~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, _from_s261, _to_s261, _value_s261);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != _from_s261 || p2 != msgsender_MSG) && _from_s261 == _to_s261) && _value_s261 <= balanceOf_TokenERC20[this][_from_s261]) && _value_s261 <= allowance_TokenERC20[this][_from_s261][msgsender_MSG]) && _value_s261 >= 0) && _value_s261 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_TokenERC20[this][_to_s261] >= 0) && balanceOf_TokenERC20[this][_to_s261] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_TokenERC20[this][_from_s261] >= 0) && balanceOf_TokenERC20[this][_from_s261] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowance_TokenERC20[this][_from_s261][msgsender_MSG] >= 0) && allowance_TokenERC20[this][_from_s261][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_TokenERC200 := true;
[L3]                 call_transferFrom_TokenERC200 := false;
[L3]                 revert := revert_hold;
[L151]               havoc __exception;
[L152]               revert := false;
[L153]   COND FALSE  !(__exception)
[L180]   CALL        call success_s261 := transferFrom~address~address~uint256_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, _from_s261, _to_s261, _value_s261);
[L874]   COND FALSE  !(!(_value_s261 <= allowance_TokenERC20[this][_from_s261][msgsender_MSG]))
[L878]               sum_allowance1[_from_s261] := sum_allowance1[_from_s261] - allowance_TokenERC20[this][_from_s261][msgsender_MSG];
[L879]               allowance_TokenERC20[this][_from_s261][msgsender_MSG] := (allowance_TokenERC20[this][_from_s261][msgsender_MSG] - _value_s261) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L880]               sum_allowance1[_from_s261] := sum_allowance1[_from_s261] + allowance_TokenERC20[this][_from_s261][msgsender_MSG];
[L881]   COND TRUE   DType[this] == MyAdvancedToken
[L882]   CALL        call _transfer~address~address~uint256_MyAdvancedToken__success(this, msgsender_MSG, msgvalue_MSG, _from_s261, _to_s261, _value_s261);
[L988]               __var_2 := null;
[L989]   COND FALSE  !(!(_to_s522 != null))
[L993]   COND FALSE  !(!(balanceOf_TokenERC20[this][_from_s522] >= _value_s522))
[L997]   COND FALSE  !(!((balanceOf_TokenERC20[this][_to_s522] + _value_s522) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 >= balanceOf_TokenERC20[this][_to_s522]))
[L1001]  COND FALSE  !(!!frozenAccount_MyAdvancedToken[this][_from_s522])
[L1005]  COND FALSE  !(!!frozenAccount_MyAdvancedToken[this][_to_s522])
[L1009]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_TokenERC20[this][_from_s522];
[L1010]              balanceOf_TokenERC20[this][_from_s522] := (balanceOf_TokenERC20[this][_from_s522] - _value_s522) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1011]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_TokenERC20[this][_from_s522];
[L1012]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_TokenERC20[this][_to_s522];
[L1013]              balanceOf_TokenERC20[this][_to_s522] := (balanceOf_TokenERC20[this][_to_s522] + _value_s522) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1014]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_TokenERC20[this][_to_s522];
[L1015]              assert { :EventEmitted "Transfer_MyAdvancedToken" } true;
[L882]   RET         call _transfer~address~address~uint256_MyAdvancedToken__success(this, msgsender_MSG, msgvalue_MSG, _from_s261, _to_s261, _value_s261);
[L883]   COND FALSE  !(revert)
[L894]               success_s261 := true;
[L180]   RET         call success_s261 := transferFrom~address~address~uint256_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, _from_s261, _to_s261, _value_s261);
[L181]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((((((success_s261 == true && allowance_TokenERC20[this][_from_s261][msgsender_MSG] == old(allowance_TokenERC20[this][_from_s261][msgsender_MSG]) - _value_s261) && totalSupply_TokenERC20[this] == old(totalSupply_TokenERC20[this])) && balanceOf_TokenERC20[this] == old(balanceOf_TokenERC20[this])) && allowance_TokenERC20[this][p1][p2] == old(allowance_TokenERC20[this][p1][p2])) && sellPrice_MyAdvancedToken[this] == old(sellPrice_MyAdvancedToken[this])) && buyPrice_MyAdvancedToken[this] == old(buyPrice_MyAdvancedToken[this])) && frozenAccount_MyAdvancedToken[this] == old(frozenAccount_MyAdvancedToken[this])) && name_TokenERC20[this] == old(name_TokenERC20[this])) && symbol_TokenERC20[this] == old(symbol_TokenERC20[this])) && decimals_TokenERC20[this] == old(decimals_TokenERC20[this])) && owner_owned[this] == old(owner_owned[this]));
[L3]                 revert := revert_hold;
[L1921]  RET         call success_s261 := transferFrom~address~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, _from_s261, _to_s261, _value_s261);
[L1946]  RET         call CorralChoice_MyAdvancedToken(this);

Loop:
[L1946]        assume true;

[2020-11-24 15:48:47,898 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 15:48:47,898 INFO  L82        PathProgramCache]: Analyzing trace with hash -385076531, now seen corresponding path program 1 times
[2020-11-24 15:48:47,899 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 15:48:47,992 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 15:48:48,319 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 15:48:48,319 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 15:48:48,319 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [13] imperfect sequences [] total 13
[2020-11-24 15:48:48,320 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 15:48:48,320 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 13 interpolants.
[2020-11-24 15:48:48,320 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=31, Invalid=125, Unknown=0, NotChecked=0, Total=156
[2020-11-24 15:48:48,321 INFO  L87              Difference]: Start difference. First operand 246 states and 259 transitions. cyclomatic complexity: 14 Second operand 13 states.
[2020-11-24 15:48:48,669 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 15:48:48,669 INFO  L93              Difference]: Finished difference Result 267 states and 279 transitions.
[2020-11-24 15:48:48,669 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 12 states. 
[2020-11-24 15:48:48,669 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 267 states and 279 transitions.
[2020-11-24 15:48:48,671 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 2
[2020-11-24 15:48:48,673 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 267 states to 234 states and 246 transitions.
[2020-11-24 15:48:48,673 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 234
[2020-11-24 15:48:48,673 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 234
[2020-11-24 15:48:48,673 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 234 states and 246 transitions.
[2020-11-24 15:48:48,674 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 15:48:48,674 INFO  L728         BuchiCegarLoop]: Abstraction has 234 states and 246 transitions.
[2020-11-24 15:48:48,674 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 234 states and 246 transitions.
[2020-11-24 15:48:48,677 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 234 to 227.
[2020-11-24 15:48:48,677 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 227 states.
[2020-11-24 15:48:48,678 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 227 states to 227 states and 239 transitions.
[2020-11-24 15:48:48,678 INFO  L751         BuchiCegarLoop]: Abstraction has 227 states and 239 transitions.
[2020-11-24 15:48:48,678 INFO  L631         BuchiCegarLoop]: Abstraction has 227 states and 239 transitions.
[2020-11-24 15:48:48,678 INFO  L445         BuchiCegarLoop]: ======== Iteration 5============
[2020-11-24 15:48:48,678 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 227 states and 239 transitions.
[2020-11-24 15:48:48,679 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 15:48:48,679 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 15:48:48,680 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 15:48:48,681 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 15:48:48,681 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L3]                 success_transferFrom_TokenERC200 := false;
[L3]                 call_transferFrom_TokenERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L1941]              assume null == 0;
[L1942]  CALL        call this := FreshRefGenerator__success();
[L748]               havoc newRef;
[L749]               assume Alloc[newRef] == false;
[L750]               Alloc[newRef] := true;
[L751]               assume newRef != null;
[L1942]  RET         call this := FreshRefGenerator__success();
[L1943]              assume now >= 0;
[L1944]              assume DType[this] == MyAdvancedToken;
[L1945]              assume !revert && gas >= 0;
[L1946]  CALL        call CorralChoice_MyAdvancedToken(this);
[L1834]              havoc msgsender_MSG;
[L1835]              havoc msgvalue_MSG;
[L1836]              havoc choice;
[L1837]              havoc __ret_0_owner;
[L1838]              havoc newOwner_s35;
[L1839]              havoc __ret_0_name;
[L1840]              havoc __ret_0_symbol;
[L1841]              havoc __ret_0_decimals;
[L1842]              havoc __ret_0_totalSupply;
[L1843]              havoc arg662_s0;
[L1844]              havoc __ret_0_balanceOf;
[L1845]              havoc arg663_s0;
[L1846]              havoc arg664_s0;
[L1847]              havoc __ret_0_allowance;
[L1848]              havoc initialSupply_s124;
[L1849]              havoc tokenName_s124;
[L1850]              havoc tokenSymbol_s124;
[L1851]              havoc _to_s221;
[L1852]              havoc _value_s221;
[L1853]              havoc success_s221;
[L1854]              havoc _from_s261;
[L1855]              havoc _to_s261;
[L1856]              havoc _value_s261;
[L1857]              havoc success_s261;
[L1858]              havoc _spender_s289;
[L1859]              havoc _value_s289;
[L1860]              havoc success_s289;
[L1861]              havoc _spender_s327;
[L1862]              havoc _value_s327;
[L1863]              havoc _extraData_s327;
[L1864]              havoc success_s327;
[L1865]              havoc _value_s363;
[L1866]              havoc success_s363;
[L1867]              havoc _from_s418;
[L1868]              havoc _value_s418;
[L1869]              havoc success_s418;
[L1870]              havoc __ret_0_sellPrice;
[L1871]              havoc __ret_0_buyPrice;
[L1872]              havoc arg665_s0;
[L1873]              havoc __ret_0_frozenAccount;
[L1874]              havoc initialSupply_s452;
[L1875]              havoc tokenName_s452;
[L1876]              havoc tokenSymbol_s452;
[L1877]              havoc target_s560;
[L1878]              havoc mintedAmount_s560;
[L1879]              havoc target_s581;
[L1880]              havoc freeze_s581;
[L1881]              havoc newSellPrice_s599;
[L1882]              havoc newBuyPrice_s599;
[L1883]              havoc amount_s659;
[L1884]              havoc tmpNow;
[L1885]              havoc gas;
[L1886]              assume gas > 4000000 && gas <= 8000000;
[L1887]              tmpNow := now;
[L1888]              havoc now;
[L1889]              assume now > tmpNow;
[L1890]              assume msgsender_MSG != null;
[L1891]  COND FALSE  !(choice == 6)
[L1897]  COND FALSE  !(choice == 5)
[L1903]  COND FALSE  !(choice == 4)
[L1909]  COND FALSE  !(choice == 3)
[L1916]  COND TRUE   choice == 2
[L1917]              gas := gas - 21000;
[L1918]  COND TRUE   gas >= 0
[L1919]              assume _value_s261 >= 0 && _value_s261 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1920]              assume msgvalue_MSG == 0;
[L1921]  CALL        call success_s261 := transferFrom~address~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, _from_s261, _to_s261, _value_s261);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != _from_s261 || p2 != msgsender_MSG) && _from_s261 == _to_s261) && _value_s261 <= balanceOf_TokenERC20[this][_from_s261]) && _value_s261 <= allowance_TokenERC20[this][_from_s261][msgsender_MSG]) && _value_s261 >= 0) && _value_s261 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_TokenERC20[this][_to_s261] >= 0) && balanceOf_TokenERC20[this][_to_s261] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_TokenERC20[this][_from_s261] >= 0) && balanceOf_TokenERC20[this][_from_s261] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowance_TokenERC20[this][_from_s261][msgsender_MSG] >= 0) && allowance_TokenERC20[this][_from_s261][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_TokenERC200 := true;
[L3]                 call_transferFrom_TokenERC200 := false;
[L3]                 revert := revert_hold;
[L151]               havoc __exception;
[L152]               revert := false;
[L153]   COND FALSE  !(__exception)
[L180]   CALL        call success_s261 := transferFrom~address~address~uint256_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, _from_s261, _to_s261, _value_s261);
[L874]   COND FALSE  !(!(_value_s261 <= allowance_TokenERC20[this][_from_s261][msgsender_MSG]))
[L878]               sum_allowance1[_from_s261] := sum_allowance1[_from_s261] - allowance_TokenERC20[this][_from_s261][msgsender_MSG];
[L879]               allowance_TokenERC20[this][_from_s261][msgsender_MSG] := (allowance_TokenERC20[this][_from_s261][msgsender_MSG] - _value_s261) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L880]               sum_allowance1[_from_s261] := sum_allowance1[_from_s261] + allowance_TokenERC20[this][_from_s261][msgsender_MSG];
[L881]   COND FALSE  !(DType[this] == MyAdvancedToken)
[L886]   COND TRUE   DType[this] == TokenERC20
[L887]   CALL        call _transfer~address~address~uint256_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, _from_s261, _to_s261, _value_s261);
[L784]               __var_1 := null;
[L785]   COND FALSE  !(!(_to_s202 != null))
[L789]   COND FALSE  !(!(balanceOf_TokenERC20[this][_from_s202] >= _value_s202))
[L793]   COND FALSE  !(!((balanceOf_TokenERC20[this][_to_s202] + _value_s202) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 > balanceOf_TokenERC20[this][_to_s202]))
[L797]               previousBalances_s202 := (balanceOf_TokenERC20[this][_from_s202] + balanceOf_TokenERC20[this][_to_s202]) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L798]               sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_TokenERC20[this][_from_s202];
[L799]               balanceOf_TokenERC20[this][_from_s202] := (balanceOf_TokenERC20[this][_from_s202] - _value_s202) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L800]               sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_TokenERC20[this][_from_s202];
[L801]               sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_TokenERC20[this][_to_s202];
[L802]               balanceOf_TokenERC20[this][_to_s202] := (balanceOf_TokenERC20[this][_to_s202] + _value_s202) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L803]               sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_TokenERC20[this][_to_s202];
[L804]               assert { :EventEmitted "Transfer_TokenERC20" } true;
[L805]               assert (balanceOf_TokenERC20[this][_from_s202] + balanceOf_TokenERC20[this][_to_s202]) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 == previousBalances_s202;
[L887]   RET         call _transfer~address~address~uint256_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, _from_s261, _to_s261, _value_s261);
[L888]   COND FALSE  !(revert)
[L894]               success_s261 := true;
[L180]   RET         call success_s261 := transferFrom~address~address~uint256_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, _from_s261, _to_s261, _value_s261);
[L181]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((((((success_s261 == true && allowance_TokenERC20[this][_from_s261][msgsender_MSG] == old(allowance_TokenERC20[this][_from_s261][msgsender_MSG]) - _value_s261) && totalSupply_TokenERC20[this] == old(totalSupply_TokenERC20[this])) && balanceOf_TokenERC20[this] == old(balanceOf_TokenERC20[this])) && allowance_TokenERC20[this][p1][p2] == old(allowance_TokenERC20[this][p1][p2])) && sellPrice_MyAdvancedToken[this] == old(sellPrice_MyAdvancedToken[this])) && buyPrice_MyAdvancedToken[this] == old(buyPrice_MyAdvancedToken[this])) && frozenAccount_MyAdvancedToken[this] == old(frozenAccount_MyAdvancedToken[this])) && name_TokenERC20[this] == old(name_TokenERC20[this])) && symbol_TokenERC20[this] == old(symbol_TokenERC20[this])) && decimals_TokenERC20[this] == old(decimals_TokenERC20[this])) && owner_owned[this] == old(owner_owned[this]));
[L3]                 revert := revert_hold;
[L1921]  RET         call success_s261 := transferFrom~address~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, _from_s261, _to_s261, _value_s261);
[L1946]  RET         call CorralChoice_MyAdvancedToken(this);

Loop:
[L1946]        assume true;

[2020-11-24 15:48:48,683 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 15:48:48,683 INFO  L82        PathProgramCache]: Analyzing trace with hash -47593864, now seen corresponding path program 1 times
[2020-11-24 15:48:48,684 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 15:48:48,693 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 15:48:48,728 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 15:48:48,728 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 15:48:48,728 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [6] imperfect sequences [] total 6
[2020-11-24 15:48:48,729 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 15:48:48,729 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 6 interpolants.
[2020-11-24 15:48:48,729 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=9, Invalid=21, Unknown=0, NotChecked=0, Total=30
[2020-11-24 15:48:48,729 INFO  L87              Difference]: Start difference. First operand 227 states and 239 transitions. cyclomatic complexity: 13 Second operand 6 states.
[2020-11-24 15:48:48,744 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 15:48:48,744 INFO  L93              Difference]: Finished difference Result 232 states and 243 transitions.
[2020-11-24 15:48:48,744 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 6 states. 
[2020-11-24 15:48:48,744 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 232 states and 243 transitions.
[2020-11-24 15:48:48,746 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 15:48:48,747 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 232 states to 191 states and 202 transitions.
[2020-11-24 15:48:48,747 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 191
[2020-11-24 15:48:48,747 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 191
[2020-11-24 15:48:48,747 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 191 states and 202 transitions.
[2020-11-24 15:48:48,748 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 15:48:48,748 INFO  L728         BuchiCegarLoop]: Abstraction has 191 states and 202 transitions.
[2020-11-24 15:48:48,748 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 191 states and 202 transitions.
[2020-11-24 15:48:48,750 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 191 to 191.
[2020-11-24 15:48:48,750 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 191 states.
[2020-11-24 15:48:48,751 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 191 states to 191 states and 202 transitions.
[2020-11-24 15:48:48,751 INFO  L751         BuchiCegarLoop]: Abstraction has 191 states and 202 transitions.
[2020-11-24 15:48:48,751 INFO  L631         BuchiCegarLoop]: Abstraction has 191 states and 202 transitions.
[2020-11-24 15:48:48,751 INFO  L445         BuchiCegarLoop]: ======== Iteration 6============
[2020-11-24 15:48:48,751 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 191 states and 202 transitions.
[2020-11-24 15:48:48,752 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 15:48:48,752 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 15:48:48,752 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 15:48:48,753 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 15:48:48,754 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L3]                 success_transferFrom_TokenERC200 := false;
[L3]                 call_transferFrom_TokenERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L1941]              assume null == 0;
[L1942]  CALL        call this := FreshRefGenerator__success();
[L748]               havoc newRef;
[L749]               assume Alloc[newRef] == false;
[L750]               Alloc[newRef] := true;
[L751]               assume newRef != null;
[L1942]  RET         call this := FreshRefGenerator__success();
[L1943]              assume now >= 0;
[L1944]              assume DType[this] == MyAdvancedToken;
[L1945]              assume !revert && gas >= 0;
[L1946]  CALL        call CorralChoice_MyAdvancedToken(this);
[L1834]              havoc msgsender_MSG;
[L1835]              havoc msgvalue_MSG;
[L1836]              havoc choice;
[L1837]              havoc __ret_0_owner;
[L1838]              havoc newOwner_s35;
[L1839]              havoc __ret_0_name;
[L1840]              havoc __ret_0_symbol;
[L1841]              havoc __ret_0_decimals;
[L1842]              havoc __ret_0_totalSupply;
[L1843]              havoc arg662_s0;
[L1844]              havoc __ret_0_balanceOf;
[L1845]              havoc arg663_s0;
[L1846]              havoc arg664_s0;
[L1847]              havoc __ret_0_allowance;
[L1848]              havoc initialSupply_s124;
[L1849]              havoc tokenName_s124;
[L1850]              havoc tokenSymbol_s124;
[L1851]              havoc _to_s221;
[L1852]              havoc _value_s221;
[L1853]              havoc success_s221;
[L1854]              havoc _from_s261;
[L1855]              havoc _to_s261;
[L1856]              havoc _value_s261;
[L1857]              havoc success_s261;
[L1858]              havoc _spender_s289;
[L1859]              havoc _value_s289;
[L1860]              havoc success_s289;
[L1861]              havoc _spender_s327;
[L1862]              havoc _value_s327;
[L1863]              havoc _extraData_s327;
[L1864]              havoc success_s327;
[L1865]              havoc _value_s363;
[L1866]              havoc success_s363;
[L1867]              havoc _from_s418;
[L1868]              havoc _value_s418;
[L1869]              havoc success_s418;
[L1870]              havoc __ret_0_sellPrice;
[L1871]              havoc __ret_0_buyPrice;
[L1872]              havoc arg665_s0;
[L1873]              havoc __ret_0_frozenAccount;
[L1874]              havoc initialSupply_s452;
[L1875]              havoc tokenName_s452;
[L1876]              havoc tokenSymbol_s452;
[L1877]              havoc target_s560;
[L1878]              havoc mintedAmount_s560;
[L1879]              havoc target_s581;
[L1880]              havoc freeze_s581;
[L1881]              havoc newSellPrice_s599;
[L1882]              havoc newBuyPrice_s599;
[L1883]              havoc amount_s659;
[L1884]              havoc tmpNow;
[L1885]              havoc gas;
[L1886]              assume gas > 4000000 && gas <= 8000000;
[L1887]              tmpNow := now;
[L1888]              havoc now;
[L1889]              assume now > tmpNow;
[L1890]              assume msgsender_MSG != null;
[L1891]  COND FALSE  !(choice == 6)
[L1897]  COND FALSE  !(choice == 5)
[L1903]  COND FALSE  !(choice == 4)
[L1909]  COND FALSE  !(choice == 3)
[L1916]  COND TRUE   choice == 2
[L1917]              gas := gas - 21000;
[L1918]  COND TRUE   gas >= 0
[L1919]              assume _value_s261 >= 0 && _value_s261 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1920]              assume msgvalue_MSG == 0;
[L1921]  CALL        call success_s261 := transferFrom~address~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, _from_s261, _to_s261, _value_s261);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != _from_s261 || p2 != msgsender_MSG) && _from_s261 == _to_s261) && _value_s261 <= balanceOf_TokenERC20[this][_from_s261]) && _value_s261 <= allowance_TokenERC20[this][_from_s261][msgsender_MSG]) && _value_s261 >= 0) && _value_s261 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_TokenERC20[this][_to_s261] >= 0) && balanceOf_TokenERC20[this][_to_s261] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_TokenERC20[this][_from_s261] >= 0) && balanceOf_TokenERC20[this][_from_s261] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowance_TokenERC20[this][_from_s261][msgsender_MSG] >= 0) && allowance_TokenERC20[this][_from_s261][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_TokenERC200 := true;
[L3]                 call_transferFrom_TokenERC200 := false;
[L3]                 revert := revert_hold;
[L151]               havoc __exception;
[L152]               revert := false;
[L153]   COND TRUE   __exception
[L154]               __tmp__Balance := Balance;
[L155]               __tmp__DType := DType;
[L156]               __tmp__Alloc := Alloc;
[L157]               __tmp__balance_ADDR := balance_ADDR;
[L158]               __tmp__M_Ref_int := M_Ref_int;
[L159]               __tmp__sum_balanceOf0 := sum_balanceOf0;
[L160]               __tmp__alloc_allowance_TokenERC20_lvl0 := alloc_allowance_TokenERC20_lvl0;
[L161]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L162]               __tmp__sum_allowance1 := sum_allowance1;
[L163]               __tmp__M_Ref_bool := M_Ref_bool;
[L164]               __tmp__sum_frozenAccount2 := sum_frozenAccount2;
[L165]               __tmp__Length := Length;
[L166]               __tmp__now := now;
[L167]               __tmp__owner_owned := owner_owned;
[L168]               __tmp__name_TokenERC20 := name_TokenERC20;
[L169]               __tmp__symbol_TokenERC20 := symbol_TokenERC20;
[L170]               __tmp__decimals_TokenERC20 := decimals_TokenERC20;
[L171]               __tmp__totalSupply_TokenERC20 := totalSupply_TokenERC20;
[L172]               __tmp__balanceOf_TokenERC20 := balanceOf_TokenERC20;
[L173]               __tmp__allowance_TokenERC20 := allowance_TokenERC20;
[L174]               __tmp__sellPrice_MyAdvancedToken := sellPrice_MyAdvancedToken;
[L175]               __tmp__buyPrice_MyAdvancedToken := buyPrice_MyAdvancedToken;
[L176]               __tmp__frozenAccount_MyAdvancedToken := frozenAccount_MyAdvancedToken;
[L177]   CALL        call success_s261 := transferFrom~address~address~uint256_TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, _from_s261, _to_s261, _value_s261);
[L848]   COND FALSE  !(!(_value_s261 <= __tmp__allowance_TokenERC20[this][_from_s261][msgsender_MSG]))
[L852]               __tmp__sum_allowance1[_from_s261] := __tmp__sum_allowance1[_from_s261] - __tmp__allowance_TokenERC20[this][_from_s261][msgsender_MSG];
[L853]               __tmp__allowance_TokenERC20[this][_from_s261][msgsender_MSG] := (__tmp__allowance_TokenERC20[this][_from_s261][msgsender_MSG] - _value_s261) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L854]               __tmp__sum_allowance1[_from_s261] := __tmp__sum_allowance1[_from_s261] + __tmp__allowance_TokenERC20[this][_from_s261][msgsender_MSG];
[L855]   COND TRUE   __tmp__DType[this] == MyAdvancedToken
[L856]   CALL        call _transfer~address~address~uint256_MyAdvancedToken__fail(this, msgsender_MSG, msgvalue_MSG, _from_s261, _to_s261, _value_s261);
[L956]               __var_2 := null;
[L957]   COND TRUE   !(_to_s522 != null)
[L958]               revert := true;
[L856]   RET         call _transfer~address~address~uint256_MyAdvancedToken__fail(this, msgsender_MSG, msgvalue_MSG, _from_s261, _to_s261, _value_s261);
[L857]   COND TRUE   revert
[L177]   RET         call success_s261 := transferFrom~address~address~uint256_TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, _from_s261, _to_s261, _value_s261);
[L178]               assume revert || gas < 0;
[L1921]  RET         call success_s261 := transferFrom~address~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, _from_s261, _to_s261, _value_s261);
[L1946]  RET         call CorralChoice_MyAdvancedToken(this);

Loop:
[L1946]        assume true;

[2020-11-24 15:48:48,756 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 15:48:48,756 INFO  L82        PathProgramCache]: Analyzing trace with hash 1896478155, now seen corresponding path program 1 times
[2020-11-24 15:48:48,757 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 15:48:48,767 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 15:48:48,779 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 15:48:48,826 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 15:48:48,827 INFO  L82        PathProgramCache]: Analyzing trace with hash 7555, now seen corresponding path program 1 times
[2020-11-24 15:48:48,827 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 15:48:48,828 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 15:48:48,828 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 15:48:48,830 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 15:48:48,830 INFO  L82        PathProgramCache]: Analyzing trace with hash -1338711815, now seen corresponding path program 1 times
[2020-11-24 15:48:48,830 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 15:48:48,855 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 15:48:48,867 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #5: 397 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 397 to 787
[2020-11-24 15:48:49,302 WARN  L188               SmtUtils]: Spent 218.00 ms on a formula simplification. DAG size of input: 189 DAG size of output: 179
Garbage collection #1: 67 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 67 to 131
Garbage collection #2: 131 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 131 to 257
Garbage collection #3: 257 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 257 to 509
Garbage collection #4: 509 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 509 to 1013
Garbage collection #5: 1013 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1013 to 2017
Garbage collection #1: 47 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 47 to 89
Garbage collection #2: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #3: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #4: 337 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 337 to 673
Garbage collection #5: 673 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 673 to 1327
Garbage collection #6: 1327 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 1327 to 2647
Garbage collection #7: 2647 nodes / 0 free / 0.0s / 0.002s total
Resizing node table from 2647 to 5281
[2020-11-24 15:48:49,573 WARN  L188               SmtUtils]: Spent 243.00 ms on a formula simplification. DAG size of input: 134 DAG size of output: 128
[2020-11-24 15:48:49,825 WARN  L188               SmtUtils]: Spent 250.00 ms on a formula simplification that was a NOOP. DAG size: 298
Garbage collection #1: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #2: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #3: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #4: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #5: 1759 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1759 to 3517
Garbage collection #6: 3517 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 3517 to 7027
Garbage collection #7: 7027 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 7027 to 14051
[2020-11-24 15:48:50,857 WARN  L188               SmtUtils]: Spent 1.01 s on a formula simplification. DAG size of input: 246 DAG size of output: 246
[2020-11-24 15:48:52,014 WARN  L188               SmtUtils]: Spent 1.15 s on a formula simplification. DAG size of input: 281 DAG size of output: 266
Garbage collection #1: 97 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 3019 to 6037
Garbage collection #7: 6037 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 6037 to 12073
Garbage collection #8: 12073 nodes / 0 free / 0.0s / 0.002s total
Resizing node table from 12073 to 24137
Garbage collection #1: 67 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 67 to 131
Garbage collection #2: 131 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 131 to 257
Garbage collection #3: 257 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 257 to 509
Garbage collection #4: 509 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 509 to 1013
Garbage collection #5: 1013 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 1013 to 2017
Garbage collection #6: 2017 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 2017 to 4027
Garbage collection #7: 4027 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 4027 to 8053
Garbage collection #8: 8053 nodes / 0 free / 0.001s / 0.003s total
Resizing node table from 8053 to 16103
[2020-11-24 15:48:52,818 WARN  L188               SmtUtils]: Spent 772.00 ms on a formula simplification. DAG size of input: 211 DAG size of output: 157
[2020-11-24 15:48:53,154 WARN  L188               SmtUtils]: Spent 334.00 ms on a formula simplification that was a NOOP. DAG size: 318
Garbage collection #1: 127 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 127 to 251
Garbage collection #2: 251 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 251 to 499
Garbage collection #3: 499 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 499 to 997
Garbage collection #4: 997 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 997 to 1993
Garbage collection #5: 1993 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1993 to 3967
Garbage collection #6: 3967 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3967 to 7933
Garbage collection #7: 7933 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 7933 to 15859
[2020-11-24 15:48:53,699 WARN  L188               SmtUtils]: Spent 533.00 ms on a formula simplification. DAG size of input: 254 DAG size of output: 249
[2020-11-24 15:48:54,167 WARN  L188               SmtUtils]: Spent 466.00 ms on a formula simplification. DAG size of input: 268 DAG size of output: 263
Garbage collection #1: 97 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3019 to 6037
Garbage collection #7: 6037 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 6037 to 12073
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #6: 1759 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1759 to 3517
[2020-11-24 15:48:54,341 WARN  L188               SmtUtils]: Spent 166.00 ms on a formula simplification. DAG size of input: 152 DAG size of output: 152
[2020-11-24 15:48:54,555 WARN  L188               SmtUtils]: Spent 202.00 ms on a formula simplification that was a NOOP. DAG size: 252
Garbage collection #1: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #2: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #3: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #4: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #5: 1327 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1327 to 2647
Garbage collection #6: 2647 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2647 to 5281
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 883 to 1759
Garbage collection #6: 1759 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 1759 to 3517
[2020-11-24 15:48:54,991 WARN  L188               SmtUtils]: Spent 430.00 ms on a formula simplification. DAG size of input: 177 DAG size of output: 168
[2020-11-24 15:48:55,596 WARN  L188               SmtUtils]: Spent 603.00 ms on a formula simplification. DAG size of input: 270 DAG size of output: 269
Garbage collection #1: 97 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3019 to 6037
Garbage collection #1: 97 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3019 to 6037
Garbage collection #7: 6037 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 6037 to 12073
Garbage collection #8: 12073 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 12073 to 24137
[2020-11-24 15:48:56,489 WARN  L188               SmtUtils]: Spent 885.00 ms on a formula simplification. DAG size of input: 273 DAG size of output: 264
[2020-11-24 15:48:56,499 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 15:48:56,504 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 24.11 03:48:56 BasicIcfg
[2020-11-24 15:48:56,504 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-24 15:48:56,504 INFO  L168              Benchmark]: Toolchain (without parser) took 11300.95 ms. Allocated memory was 1.0 GB in the beginning and 1.9 GB in the end (delta: 832.0 MB). Free memory was 940.6 MB in the beginning and 827.2 MB in the end (delta: 113.4 MB). Peak memory consumption was 946.2 MB. Max. memory is 15.3 GB.
[2020-11-24 15:48:56,505 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.19 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-24 15:48:56,505 INFO  L168              Benchmark]: Boogie Preprocessor took 78.35 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 935.2 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-24 15:48:56,506 INFO  L168              Benchmark]: UtopiaSpecLang took 52.32 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 929.8 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-24 15:48:56,506 INFO  L168              Benchmark]: Boogie Printer took 10.65 ms. Allocated memory is still 1.0 GB. Free memory is still 929.8 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-24 15:48:56,506 INFO  L168              Benchmark]: RCFGBuilder took 575.61 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 876.1 MB in the end (delta: 53.7 MB). Peak memory consumption was 53.7 MB. Max. memory is 15.3 GB.
[2020-11-24 15:48:56,507 INFO  L168              Benchmark]: UtopiaLTL2Aut took 42.32 ms. Allocated memory is still 1.0 GB. Free memory was 876.1 MB in the beginning and 872.5 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
[2020-11-24 15:48:56,507 INFO  L168              Benchmark]: BÃ¼chi Program Product took 983.80 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 69.2 MB). Free memory was 872.5 MB in the beginning and 933.4 MB in the end (delta: -60.9 MB). Peak memory consumption was 156.4 MB. Max. memory is 15.3 GB.
[2020-11-24 15:48:56,507 INFO  L168              Benchmark]: BlockEncodingV2 took 84.12 ms. Allocated memory is still 1.1 GB. Free memory was 933.4 MB in the beginning and 901.2 MB in the end (delta: 32.3 MB). Peak memory consumption was 32.3 MB. Max. memory is 15.3 GB.
[2020-11-24 15:48:56,508 INFO  L168              Benchmark]: BuchiAutomizer took 9470.80 ms. Allocated memory was 1.1 GB in the beginning and 1.9 GB in the end (delta: 762.8 MB). Free memory was 901.2 MB in the beginning and 827.2 MB in the end (delta: 74.0 MB). Peak memory consumption was 837.5 MB. Max. memory is 15.3 GB.
[2020-11-24 15:48:56,510 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    1548 locations, 2699 edges
  - StatisticsResult: Encoded RCFG
    1514 locations, 2614 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.19 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 78.35 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 935.2 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 52.32 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 929.8 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 10.65 ms. Allocated memory is still 1.0 GB. Free memory is still 929.8 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * RCFGBuilder took 575.61 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 876.1 MB in the end (delta: 53.7 MB). Peak memory consumption was 53.7 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 42.32 ms. Allocated memory is still 1.0 GB. Free memory was 876.1 MB in the beginning and 872.5 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 983.80 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 69.2 MB). Free memory was 872.5 MB in the beginning and 933.4 MB in the end (delta: -60.9 MB). Peak memory consumption was 156.4 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 84.12 ms. Allocated memory is still 1.1 GB. Free memory was 933.4 MB in the beginning and 901.2 MB in the end (delta: 32.3 MB). Peak memory consumption was 32.3 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 9470.80 ms. Allocated memory was 1.1 GB in the beginning and 1.9 GB in the end (delta: 762.8 MB). Free memory was 901.2 MB in the beginning and 827.2 MB in the end (delta: 74.0 MB). Peak memory consumption was 837.5 MB. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    670 locations, 837 edges
  - StatisticsResult: BuchiProgram size
    1548 locations, 2699 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 5 terminating modules (5 trivial, 0 deterministic, 0 nondeterministic) and one nonterminating remainder module.5 modules have a trivial ranking function, the largest among these consists of 13 locations. The remainder module has 191 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 9.4s and 6 iterations.  TraceHistogramMax:1. Analysis of lassos took 8.4s. Construction of modules took 0.4s. BÃ¼chi inclusion checks took 0.3s. Highest rank in rank-based complementation 0. Minimization of det autom 5. Minimization of nondet autom 0. Automata minimization 0.0s AutomataMinimizationTime, 5 MinimizatonAttempts, 25 StatesRemovedByMinimization, 3 NontrivialMinimizations. Non-live state removal took 0.0s Buchi closure took 0.0s. Biggest automaton had 248 states and ocurred in iteration 1.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 1724 SDtfs, 1243 SDslu, 2451 SDs, 0 SdLazy, 1647 SolverSat, 547 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 0.4s Time	LassoAnalysisResults: nont1 unkn0 SFLI0 SFLT0 conc0 concLT0 SILN0 SILU5 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - TransactionCounterexample: Violation of LTL property LTL
    Found an infinite, lasso-shaped execution that violates the LTL property LTL.
Stem:
TokenERC20(12).transferFrom~address~address~uint256.gas(3979001)({from : 13, _from : 0, _to : 0, _value : 0});
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != _from_s261 || p2 != msgsender_MSG) && _from_s261 == _to_s261) && _value_s261 <= balanceOf_TokenERC20[this][_from_s261]) && _value_s261 <= allowance_TokenERC20[this][_from_s261][msgsender_MSG]) && _value_s261 >= 0) && _value_s261 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_TokenERC20[this][_to_s261] >= 0) && balanceOf_TokenERC20[this][_to_s261] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_TokenERC20[this][_from_s261] >= 0) && balanceOf_TokenERC20[this][_from_s261] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowance_TokenERC20[this][_from_s261][msgsender_MSG] >= 0) && allowance_TokenERC20[this][_from_s261][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_TokenERC200 := true;
[L3]                 call_transferFrom_TokenERC200 := false;
[L3]                 revert := revert_hold;
[L151]               havoc __exception;
[L152]               revert := false;
[L153]   COND TRUE   __exception
[L154]               __tmp__Balance := Balance;
[L155]               __tmp__DType := DType;
[L156]               __tmp__Alloc := Alloc;
[L157]               __tmp__balance_ADDR := balance_ADDR;
[L158]               __tmp__M_Ref_int := M_Ref_int;
[L159]               __tmp__sum_balanceOf0 := sum_balanceOf0;
[L160]               __tmp__alloc_allowance_TokenERC20_lvl0 := alloc_allowance_TokenERC20_lvl0;
[L161]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L162]               __tmp__sum_allowance1 := sum_allowance1;
[L163]               __tmp__M_Ref_bool := M_Ref_bool;
[L164]               __tmp__sum_frozenAccount2 := sum_frozenAccount2;
[L165]               __tmp__Length := Length;
[L166]               __tmp__now := now;
[L167]               __tmp__owner_owned := owner_owned;
[L168]               __tmp__name_TokenERC20 := name_TokenERC20;
[L169]               __tmp__symbol_TokenERC20 := symbol_TokenERC20;
[L170]               __tmp__decimals_TokenERC20 := decimals_TokenERC20;
[L171]               __tmp__totalSupply_TokenERC20 := totalSupply_TokenERC20;
[L172]               __tmp__balanceOf_TokenERC20 := balanceOf_TokenERC20;
[L173]               __tmp__allowance_TokenERC20 := allowance_TokenERC20;
[L174]               __tmp__sellPrice_MyAdvancedToken := sellPrice_MyAdvancedToken;
[L175]               __tmp__buyPrice_MyAdvancedToken := buyPrice_MyAdvancedToken;
[L176]               __tmp__frozenAccount_MyAdvancedToken := frozenAccount_MyAdvancedToken;
[L177]   CALL        call success_s261 := transferFrom~address~address~uint256_TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, _from_s261, _to_s261, _value_s261);
[L848]   COND FALSE  !(!(_value_s261 <= __tmp__allowance_TokenERC20[this][_from_s261][msgsender_MSG]))
[L852]               __tmp__sum_allowance1[_from_s261] := __tmp__sum_allowance1[_from_s261] - __tmp__allowance_TokenERC20[this][_from_s261][msgsender_MSG];
[L853]               __tmp__allowance_TokenERC20[this][_from_s261][msgsender_MSG] := (__tmp__allowance_TokenERC20[this][_from_s261][msgsender_MSG] - _value_s261) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L854]               __tmp__sum_allowance1[_from_s261] := __tmp__sum_allowance1[_from_s261] + __tmp__allowance_TokenERC20[this][_from_s261][msgsender_MSG];
[L855]   COND TRUE   __tmp__DType[this] == MyAdvancedToken
[L856]   CALL        call _transfer~address~address~uint256_MyAdvancedToken__fail(this, msgsender_MSG, msgvalue_MSG, _from_s261, _to_s261, _value_s261);
[L956]               __var_2 := null;
[L957]   COND TRUE   !(_to_s522 != null)
[L958]               revert := true;
[L856]   RET         call _transfer~address~address~uint256_MyAdvancedToken__fail(this, msgsender_MSG, msgvalue_MSG, _from_s261, _to_s261, _value_s261);
[L857]   COND TRUE   revert
[L177]   RET         call success_s261 := transferFrom~address~address~uint256_TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, _from_s261, _to_s261, _value_s261);
[L178]               assume revert || gas < 0;
[L1921]  RET         call success_s261 := transferFrom~address~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, _from_s261, _to_s261, _value_s261);

Loop:

End of lasso representation.
RESULT: Ultimate could not prove your program: Toolchain returned no result.
Received shutdown request...
