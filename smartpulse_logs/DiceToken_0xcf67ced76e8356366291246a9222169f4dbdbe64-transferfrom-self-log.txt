This is Ultimate 0.1.24-f1553f5-m
[2020-11-24 18:28:53,956 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-24 18:28:53,957 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-24 18:28:53,970 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-24 18:28:53,970 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-24 18:28:53,970 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-24 18:28:53,971 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-24 18:28:53,973 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-24 18:28:53,975 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-24 18:28:53,975 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-24 18:28:53,976 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-24 18:28:53,977 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-24 18:28:53,977 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-24 18:28:53,978 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-24 18:28:53,979 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-24 18:28:53,980 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-24 18:28:53,981 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-24 18:28:53,982 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-24 18:28:53,984 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-24 18:28:53,985 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-24 18:28:53,986 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-24 18:28:53,987 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-24 18:28:53,989 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-24 18:28:53,989 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-24 18:28:53,989 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-24 18:28:53,990 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-24 18:28:53,990 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-24 18:28:53,991 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-24 18:28:53,991 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-24 18:28:53,991 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-24 18:28:53,992 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-24 18:28:53,992 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-24 18:28:53,993 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-24 18:28:53,993 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-24 18:28:53,994 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-24 18:28:53,994 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-24 18:28:53,995 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-24 18:28:53,995 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-24 18:28:53,995 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-24 18:28:53,996 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-24 18:28:53,996 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-24 18:28:53,996 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-24 18:28:54,004 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-24 18:28:54,005 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-24 18:28:54,005 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-24 18:28:54,006 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-24 18:28:54,006 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-24 18:28:54,006 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-24 18:28:54,006 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-24 18:28:54,006 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-24 18:28:54,006 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-24 18:28:54,006 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-24 18:28:54,006 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-24 18:28:54,006 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-24 18:28:54,007 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-24 18:28:54,007 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-24 18:28:54,007 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-24 18:28:54,007 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-24 18:28:54,007 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-24 18:28:54,007 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-24 18:28:54,007 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-24 18:28:54,007 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-24 18:28:54,007 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-24 18:28:54,007 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-24 18:28:54,008 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-24 18:28:54,008 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-24 18:28:54,008 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-24 18:28:54,008 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-24 18:28:54,033 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-24 18:28:54,050 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-24 18:28:54,056 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-24 18:28:54,058 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-24 18:28:54,059 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-24 18:28:54,060 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/DiceToken_0xcf67ced76e8356366291246a9222169f4dbdbe64_transferfrom-self.bpl
[2020-11-24 18:28:54,060 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/DiceToken_0xcf67ced76e8356366291246a9222169f4dbdbe64_transferfrom-self.bpl'
[2020-11-24 18:28:54,118 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-24 18:28:54,119 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-24 18:28:54,120 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-24 18:28:54,120 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-24 18:28:54,120 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-24 18:28:54,137 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "DiceToken_0xcf67ced76e8356366291246a9222169f4dbdbe64_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 06:28:54" (1/1) ...
[2020-11-24 18:28:54,138 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "DiceToken_0xcf67ced76e8356366291246a9222169f4dbdbe64_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 06:28:54" (1/1) ...
[2020-11-24 18:28:54,157 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "DiceToken_0xcf67ced76e8356366291246a9222169f4dbdbe64_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 06:28:54" (1/1) ...
[2020-11-24 18:28:54,158 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "DiceToken_0xcf67ced76e8356366291246a9222169f4dbdbe64_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 06:28:54" (1/1) ...
[2020-11-24 18:28:54,173 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "DiceToken_0xcf67ced76e8356366291246a9222169f4dbdbe64_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 06:28:54" (1/1) ...
[2020-11-24 18:28:54,181 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "DiceToken_0xcf67ced76e8356366291246a9222169f4dbdbe64_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 06:28:54" (1/1) ...
[2020-11-24 18:28:54,187 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "DiceToken_0xcf67ced76e8356366291246a9222169f4dbdbe64_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 06:28:54" (1/1) ...
[2020-11-24 18:28:54,194 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-24 18:28:54,195 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-24 18:28:54,195 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-24 18:28:54,197 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-24 18:28:54,201 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "DiceToken_0xcf67ced76e8356366291246a9222169f4dbdbe64_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 06:28:54" (1/1) ...
[2020-11-24 18:28:54,214 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(DiceToken.transferFrom(from, to, value), (p1 != from || p2 != msg.sender) && from == to && value <= balances_DiceToken[this][from] && value <= allowed_DiceToken[this][from][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_DiceToken[this][to] >= 0 && balances_DiceToken[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_DiceToken[this][from] >= 0 &&  balances_DiceToken[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && allowed_DiceToken[this][from][msg.sender] >= 0 && allowed_DiceToken[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(DiceToken.transferFrom(from, to, value), return == true && allowed_DiceToken[this][from][msg.sender] == old(allowed_DiceToken[this][from][msg.sender]) - value && _totalSupply_DiceToken[this] == old(_totalSupply_DiceToken[this]) && balances_DiceToken[this] == old(balances_DiceToken[this]) && allowed_DiceToken[this][p1][p2] == old(allowed_DiceToken[this][p1][p2]) && symbol_DiceToken[this] == old(symbol_DiceToken[this]) && name_DiceToken[this] == old(name_DiceToken[this]) && decimals_DiceToken[this] == old(decimals_DiceToken[this]) && owner_Owned[this] == old(owner_Owned[this]) && newOwner_Owned[this] == old(newOwner_Owned[this]))))
[2020-11-24 18:28:54,220 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(DiceToken.transferFrom(from, to, value), (p1 != from || p2 != msg.sender) && from == to && value <= balances_DiceToken[this][from] && value <= allowed_DiceToken[this][from][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_DiceToken[this][to] >= 0 && balances_DiceToken[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_DiceToken[this][from] >= 0 &&  balances_DiceToken[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && allowed_DiceToken[this][from][msg.sender] >= 0 && allowed_DiceToken[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(DiceToken.transferFrom(from, to, value), return == true && allowed_DiceToken[this][from][msg.sender] == old(allowed_DiceToken[this][from][msg.sender]) - value && _totalSupply_DiceToken[this] == old(_totalSupply_DiceToken[this]) && balances_DiceToken[this] == old(balances_DiceToken[this]) && allowed_DiceToken[this][p1][p2] == old(allowed_DiceToken[this][p1][p2]) && symbol_DiceToken[this] == old(symbol_DiceToken[this]) && name_DiceToken[this] == old(name_DiceToken[this]) && decimals_DiceToken[this] == old(decimals_DiceToken[this]) && owner_Owned[this] == old(owner_Owned[this]) && newOwner_Owned[this] == old(newOwner_Owned[this]))))
[2020-11-24 18:28:54,228 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(DiceToken.transferFrom(from, to, value), (p1 != from || p2 != msg.sender) && from == to && value <= balances_DiceToken[this][from] && value <= allowed_DiceToken[this][from][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_DiceToken[this][to] >= 0 && balances_DiceToken[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_DiceToken[this][from] >= 0 &&  balances_DiceToken[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && allowed_DiceToken[this][from][msg.sender] >= 0 && allowed_DiceToken[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(DiceToken.transferFrom(from, to, value), return == true && allowed_DiceToken[this][from][msg.sender] == old(allowed_DiceToken[this][from][msg.sender]) - value && _totalSupply_DiceToken[this] == old(_totalSupply_DiceToken[this]) && balances_DiceToken[this] == old(balances_DiceToken[this]) && allowed_DiceToken[this][p1][p2] == old(allowed_DiceToken[this][p1][p2]) && symbol_DiceToken[this] == old(symbol_DiceToken[this]) && name_DiceToken[this] == old(name_DiceToken[this]) && decimals_DiceToken[this] == old(decimals_DiceToken[this]) && owner_Owned[this] == old(owner_Owned[this]) && newOwner_Owned[this] == old(newOwner_Owned[this]))))
[2020-11-24 18:28:54,234 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( ( ( ( ( p1!=from_s453 || p2!=msg.sender ) && from_s453==to_s453 ) && tokens_s453<=balances_DiceToken[this][from_s453] ) && tokens_s453<=allowed_DiceToken[this][from_s453][msg.sender] ) && tokens_s453>=0 ) && tokens_s453<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && balances_DiceToken[this][to_s453]>=0 ) && balances_DiceToken[this][to_s453]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && balances_DiceToken[this][from_s453]>=0 ) && balances_DiceToken[this][from_s453]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && allowed_DiceToken[this][from_s453][msg.sender]>=0 ) && allowed_DiceToken[this][from_s453][msg.sender]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICOR,BinaryExpression[COMPNEQ,IdentifierExpression[p1,GLOBAL],IdentifierExpression[from_s453,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DiceToken>]],BinaryExpression[COMPNEQ,IdentifierExpression[p2,GLOBAL],IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DiceToken>]]],BinaryExpression[COMPEQ,IdentifierExpression[from_s453,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DiceToken>],IdentifierExpression[to_s453,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DiceToken>]]],BinaryExpression[COMPLEQ,IdentifierExpression[tokens_s453,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DiceToken>],ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_DiceToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DiceToken>]]],[IdentifierExpression[from_s453,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DiceToken>]]]]],BinaryExpression[COMPLEQ,IdentifierExpression[tokens_s453,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DiceToken>],ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowed_DiceToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DiceToken>]]],[IdentifierExpression[from_s453,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DiceToken>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DiceToken>]]]]],BinaryExpression[COMPGEQ,IdentifierExpression[tokens_s453,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DiceToken>],IntegerLiteral[0]]],BinaryExpression[COMPLT,IdentifierExpression[tokens_s453,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DiceToken>],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_DiceToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DiceToken>]]],[IdentifierExpression[to_s453,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DiceToken>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_DiceToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DiceToken>]]],[IdentifierExpression[to_s453,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DiceToken>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_DiceToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DiceToken>]]],[IdentifierExpression[from_s453,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DiceToken>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_DiceToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DiceToken>]]],[IdentifierExpression[from_s453,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DiceToken>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowed_DiceToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DiceToken>]]],[IdentifierExpression[from_s453,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DiceToken>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DiceToken>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowed_DiceToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DiceToken>]]],[IdentifierExpression[from_s453,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DiceToken>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DiceToken>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]]
[2020-11-24 18:28:54,237 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( ( success_s453==true && allowed_DiceToken[this][from_s453][msg.sender]==( ( old(allowed_DiceToken[this][from_s453][msg.sender]) ) - tokens_s453 ) ) && _totalSupply_DiceToken[this]==( old(_totalSupply_DiceToken[this]) ) ) && balances_DiceToken[this]==( old(balances_DiceToken[this]) ) ) && allowed_DiceToken[this][p1][p2]==( old(allowed_DiceToken[this][p1][p2]) ) ) && symbol_DiceToken[this]==( old(symbol_DiceToken[this]) ) ) && name_DiceToken[this]==( old(name_DiceToken[this]) ) ) && decimals_DiceToken[this]==( old(decimals_DiceToken[this]) ) ) && owner_Owned[this]==( old(owner_Owned[this]) ) ) && newOwner_Owned[this]==( old(newOwner_Owned[this]) ) ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[success_s453,<IMPLEMENTATION_OUTPARAM,transferFrom~address~address~uint256_DiceToken>],BooleanLiteral[true]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowed_DiceToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DiceToken>]]],[IdentifierExpression[from_s453,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DiceToken>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DiceToken>]]],BinaryExpression[ARITHMINUS,UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowed_DiceToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DiceToken>]]],[IdentifierExpression[from_s453,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DiceToken>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DiceToken>]]]],IdentifierExpression[tokens_s453,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DiceToken>]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_totalSupply_DiceToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DiceToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_totalSupply_DiceToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DiceToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[balances_DiceToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DiceToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[balances_DiceToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DiceToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowed_DiceToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DiceToken>]]],[IdentifierExpression[p1,GLOBAL]]],[IdentifierExpression[p2,GLOBAL]]],UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowed_DiceToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DiceToken>]]],[IdentifierExpression[p1,GLOBAL]]],[IdentifierExpression[p2,GLOBAL]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[symbol_DiceToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DiceToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[symbol_DiceToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DiceToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[name_DiceToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DiceToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[name_DiceToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DiceToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[decimals_DiceToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DiceToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[decimals_DiceToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DiceToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[owner_Owned,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DiceToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[owner_Owned,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DiceToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[newOwner_Owned,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DiceToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[newOwner_Owned,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DiceToken>]]]]]]
[2020-11-24 18:28:54,240 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(DiceToken.transferFrom(from, to, value), (p1 != from || p2 != msg.sender) && from == to && value <= balances_DiceToken[this][from] && value <= allowed_DiceToken[this][from][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_DiceToken[this][to] >= 0 && balances_DiceToken[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_DiceToken[this][from] >= 0 &&  balances_DiceToken[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && allowed_DiceToken[this][from][msg.sender] >= 0 && allowed_DiceToken[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(DiceToken.transferFrom(from, to, value), return == true && allowed_DiceToken[this][from][msg.sender] == old(allowed_DiceToken[this][from][msg.sender]) - value && _totalSupply_DiceToken[this] == old(_totalSupply_DiceToken[this]) && balances_DiceToken[this] == old(balances_DiceToken[this]) && allowed_DiceToken[this][p1][p2] == old(allowed_DiceToken[this][p1][p2]) && symbol_DiceToken[this] == old(symbol_DiceToken[this]) && name_DiceToken[this] == old(name_DiceToken[this]) && decimals_DiceToken[this] == old(decimals_DiceToken[this]) && owner_Owned[this] == old(owner_Owned[this]) && newOwner_Owned[this] == old(newOwner_Owned[this]))))
[2020-11-24 18:28:54,241 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_transferFrom_DiceToken0) ==> ( <>AP(success_transferFrom_DiceToken0) ) ) )
Executed UtopiaSpecLang
[2020-11-24 18:28:54,245 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 06:28:54 PropertyContainer
[2020-11-24 18:28:54,246 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-24 18:28:54,246 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-24 18:28:54,246 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-24 18:28:54,246 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-24 18:28:54,247 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "DiceToken_0xcf67ced76e8356366291246a9222169f4dbdbe64_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 06:28:54" (1/2) ...
[2020-11-24 18:28:54,247 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-24 18:28:54,247 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-24 18:28:54,254 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 06:28:54" (2/2) ...
[2020-11-24 18:28:54,254 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-24 18:28:54,255 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-24 18:28:54,255 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-24 18:28:54,255 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-24 18:28:54,255 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "DiceToken_0xcf67ced76e8356366291246a9222169f4dbdbe64_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 06:28:54" (1/2) ...
[2020-11-24 18:28:54,309 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-24 18:28:54,309 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__success
[2020-11-24 18:28:54,309 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__success
[2020-11-24 18:28:54,309 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_DiceToken
[2020-11-24 18:28:54,309 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_DiceToken
[2020-11-24 18:28:54,309 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_DiceToken
[2020-11-24 18:28:54,309 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_DiceToken
[2020-11-24 18:28:54,310 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_DiceToken
[2020-11-24 18:28:54,310 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_DiceToken
[2020-11-24 18:28:54,310 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_DiceToken
[2020-11-24 18:28:54,310 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_DiceToken
[2020-11-24 18:28:54,310 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_DiceToken
[2020-11-24 18:28:54,310 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_DiceToken
[2020-11-24 18:28:54,310 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_DiceToken
[2020-11-24 18:28:54,311 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_DiceToken
[2020-11-24 18:28:54,311 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-24 18:28:54,311 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-24 18:28:54,311 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-24 18:28:54,311 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__success
[2020-11-24 18:28:54,311 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_SafeMath
[2020-11-24 18:28:54,311 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_SafeMath
[2020-11-24 18:28:54,311 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20Interface
[2020-11-24 18:28:54,311 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20Interface
[2020-11-24 18:28:54,311 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_Owned
[2020-11-24 18:28:54,311 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_Owned
[2020-11-24 18:28:54,312 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_DiceToken
[2020-11-24 18:28:54,312 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-24 18:28:54,312 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-24 18:28:54,312 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__fail
[2020-11-24 18:28:54,312 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-24 18:28:54,312 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_DiceToken__success
[2020-11-24 18:28:54,312 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_DiceToken__fail
[2020-11-24 18:28:54,312 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_DiceToken__success
[2020-11-24 18:28:54,312 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_DiceToken__fail
[2020-11-24 18:28:54,312 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_DiceToken__success
[2020-11-24 18:28:54,312 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_DiceToken__fail
[2020-11-24 18:28:54,312 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_DiceToken__success
[2020-11-24 18:28:54,312 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_DiceToken__fail
[2020-11-24 18:28:54,313 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_DiceToken__success
[2020-11-24 18:28:54,313 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_DiceToken__fail
[2020-11-24 18:28:54,313 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_DiceToken__success
[2020-11-24 18:28:54,313 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_DiceToken__fail
[2020-11-24 18:28:54,313 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-24 18:28:54,313 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-24 18:28:54,313 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-24 18:28:54,313 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__fail
[2020-11-24 18:28:54,313 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-24 18:28:54,313 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-24 18:28:54,313 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__fail
[2020-11-24 18:28:54,313 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__success
[2020-11-24 18:28:54,313 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-24 18:28:54,314 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__success
[2020-11-24 18:28:54,314 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_DiceToken__fail
[2020-11-24 18:28:54,314 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_DiceToken__success
[2020-11-24 18:28:54,314 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_DiceToken__fail
[2020-11-24 18:28:54,314 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_DiceToken__success
[2020-11-24 18:28:54,314 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_DiceToken__fail
[2020-11-24 18:28:54,314 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_DiceToken__success
[2020-11-24 18:28:54,314 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_DiceToken__fail
[2020-11-24 18:28:54,314 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_DiceToken__success
[2020-11-24 18:28:54,314 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_DiceToken__fail
[2020-11-24 18:28:54,314 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_DiceToken__success
[2020-11-24 18:28:54,314 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_DiceToken__fail
[2020-11-24 18:28:54,314 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_DiceToken__success
[2020-11-24 18:28:54,314 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-24 18:28:54,315 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-24 18:28:54,315 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-24 18:28:54,315 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-24 18:28:54,315 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-24 18:28:54,315 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-24 18:28:54,315 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__fail
[2020-11-24 18:28:54,315 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__success
[2020-11-24 18:28:54,315 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_SafeMath
[2020-11-24 18:28:54,315 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_SafeMath
[2020-11-24 18:28:54,315 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20Interface
[2020-11-24 18:28:54,315 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20Interface
[2020-11-24 18:28:54,315 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_Owned
[2020-11-24 18:28:54,315 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_Owned
[2020-11-24 18:28:54,316 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_DiceToken
[2020-11-24 18:28:54,316 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-24 18:28:54,316 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-24 18:28:54,316 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-24 18:28:54,483 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 18:28:54,597 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 18:28:54,597 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 18:28:54,598 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 18:28:54,725 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-24 18:28:54,725 INFO  L286             CfgBuilder]: Removed 4 assue(true) statements.
[2020-11-24 18:28:54,726 INFO  L202        PluginConnector]: Adding new model DiceToken_0xcf67ced76e8356366291246a9222169f4dbdbe64_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 06:28:54 BoogieIcfgContainer
[2020-11-24 18:28:54,727 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 06:28:54" (2/2) ...
[2020-11-24 18:28:54,727 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-24 18:28:54,727 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@13116024 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 06:28:54, skipping insertion in model container
[2020-11-24 18:28:54,727 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-24 18:28:54,727 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-24 18:28:54,728 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-24 18:28:54,729 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-24 18:28:54,729 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "DiceToken_0xcf67ced76e8356366291246a9222169f4dbdbe64_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 06:28:54" (1/3) ...
[2020-11-24 18:28:54,730 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@7d5e39bd and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 06:28:54, skipping insertion in model container
[2020-11-24 18:28:54,730 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 06:28:54" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-24 18:28:54,767 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 06:28:54 NWAContainer
[2020-11-24 18:28:54,767 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-24 18:28:54,767 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-24 18:28:54,767 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-24 18:28:54,768 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-24 18:28:54,769 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "DiceToken_0xcf67ced76e8356366291246a9222169f4dbdbe64_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 06:28:54" (3/4) ...
[2020-11-24 18:28:54,769 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@1637ee90 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 06:28:54, skipping insertion in model container
[2020-11-24 18:28:54,770 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 06:28:54" (4/4) ...
[2020-11-24 18:28:54,773 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-24 18:28:54,775 INFO  L110   BuchiProductObserver]: Initial RCFG 524 locations, 627 edges
[2020-11-24 18:28:54,776 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-24 18:28:54,784 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-24 18:28:55,572 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-24 18:28:55,574 INFO  L110   BuchiProductObserver]: BuchiProgram size 1216 locations, 2022 edges
[2020-11-24 18:28:55,575 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 06:28:55 BoogieIcfgContainer
[2020-11-24 18:28:55,575 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-24 18:28:55,575 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-24 18:28:55,575 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-24 18:28:55,577 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-24 18:28:55,578 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 06:28:55" (1/1) ...
[2020-11-24 18:28:55,615 INFO  L313           BlockEncoder]: Initial Icfg 1216 locations, 2022 edges
[2020-11-24 18:28:55,616 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-24 18:28:55,616 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-24 18:28:55,616 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-24 18:28:55,617 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-24 18:28:55,624 INFO  L70    emoveInfeasibleEdges]: Removed 39 edges and 11 locations because of local infeasibility
[2020-11-24 18:28:55,628 INFO  L70        RemoveSinkStates]: Removed 2 edges and 1 locations by removing sink states
[2020-11-24 18:28:55,632 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-24 18:28:55,634 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-24 18:28:55,635 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-24 18:28:55,636 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-24 18:28:55,638 INFO  L313           BlockEncoder]: Encoded RCFG 1190 locations, 1961 edges
[2020-11-24 18:28:55,638 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 24.11 06:28:55 BasicIcfg
[2020-11-24 18:28:55,638 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-24 18:28:55,639 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-24 18:28:55,639 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-24 18:28:55,641 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-24 18:28:55,641 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 18:28:55,641 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "DiceToken_0xcf67ced76e8356366291246a9222169f4dbdbe64_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 06:28:54" (1/6) ...
[2020-11-24 18:28:55,643 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@34a0cc6f and model type DiceToken_0xcf67ced76e8356366291246a9222169f4dbdbe64_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 24.11 06:28:55, skipping insertion in model container
[2020-11-24 18:28:55,643 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 18:28:55,644 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 06:28:54" (2/6) ...
[2020-11-24 18:28:55,644 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@34a0cc6f and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 24.11 06:28:55, skipping insertion in model container
[2020-11-24 18:28:55,644 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 18:28:55,644 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "DiceToken_0xcf67ced76e8356366291246a9222169f4dbdbe64_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 06:28:54" (3/6) ...
[2020-11-24 18:28:55,644 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@34a0cc6f and model type DiceToken_0xcf67ced76e8356366291246a9222169f4dbdbe64_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 24.11 06:28:55, skipping insertion in model container
[2020-11-24 18:28:55,644 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 18:28:55,644 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 06:28:54" (4/6) ...
[2020-11-24 18:28:55,645 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@34a0cc6f and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 24.11 06:28:55, skipping insertion in model container
[2020-11-24 18:28:55,645 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 18:28:55,645 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 06:28:55" (5/6) ...
[2020-11-24 18:28:55,645 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@34a0cc6f and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 24.11 06:28:55, skipping insertion in model container
[2020-11-24 18:28:55,645 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 18:28:55,645 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 24.11 06:28:55" (6/6) ...
[2020-11-24 18:28:55,647 INFO  L404   chiAutomizerObserver]: Analyzing ICFG DiceToken_0xcf67ced76e8356366291246a9222169f4dbdbe64_transferfrom-self.bpl_BEv2
[2020-11-24 18:28:55,684 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-24 18:28:55,685 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-24 18:28:55,685 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-24 18:28:55,685 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-24 18:28:55,685 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-24 18:28:55,685 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-24 18:28:55,685 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-24 18:28:55,685 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-24 18:28:55,685 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-24 18:28:55,702 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1190 states.
[2020-11-24 18:28:55,744 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 18:28:55,745 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 18:28:55,745 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 18:28:55,755 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 18:28:55,755 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
[2020-11-24 18:28:55,755 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-24 18:28:55,755 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1190 states.
[2020-11-24 18:28:55,764 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 18:28:55,764 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 18:28:55,764 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 18:28:55,766 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 18:28:55,766 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L3]                 success_transferFrom_DiceToken0 := false;
[L3]                 call_transferFrom_DiceToken0 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L1471]              assume null == 0;
[L1472]  CALL        call this := FreshRefGenerator__success();
[L611]               havoc newRef;
[L612]               assume Alloc[newRef] == false;
[L613]               Alloc[newRef] := true;
[L614]               assume newRef != null;
[L1472]  RET         call this := FreshRefGenerator__success();
[L1473]              assume now >= 0;
[L1474]              assume DType[this] == DiceToken;
[L1475]              assume !revert && gas >= 0;
[L1476]  CALL        call CorralChoice_DiceToken(this);
[L1388]              havoc msgsender_MSG;
[L1389]              havoc msgvalue_MSG;
[L1390]              havoc choice;
[L1391]              havoc __ret_0_totalSupply;
[L1392]              havoc tokenOwner_s323;
[L1393]              havoc balance_s323;
[L1394]              havoc tokenOwner_s469;
[L1395]              havoc spender_s469;
[L1396]              havoc remaining_s469;
[L1397]              havoc to_s366;
[L1398]              havoc tokens_s366;
[L1399]              havoc success_s366;
[L1400]              havoc spender_s394;
[L1401]              havoc tokens_s394;
[L1402]              havoc success_s394;
[L1403]              havoc from_s453;
[L1404]              havoc to_s453;
[L1405]              havoc tokens_s453;
[L1406]              havoc success_s453;
[L1407]              havoc __ret_0_owner;
[L1408]              havoc __ret_0_newOwner;
[L1409]              havoc _newOwner_s205;
[L1410]              havoc __ret_0_symbol;
[L1411]              havoc __ret_0_name;
[L1412]              havoc __ret_0_decimals;
[L1413]              havoc __ret_0__totalSupply;
[L1414]              havoc tokenAddress_s496;
[L1415]              havoc tokens_s496;
[L1416]              havoc success_s496;
[L1417]              havoc tmpNow;
[L1418]              havoc gas;
[L1419]              assume gas > 4000000 && gas <= 8000000;
[L1420]              tmpNow := now;
[L1421]              havoc now;
[L1422]              assume now > tmpNow;
[L1423]              assume msgsender_MSG != null;
[L1424]  COND TRUE   choice == 6
[L1425]              gas := gas - 21000;
[L1426]  COND FALSE  !(gas >= 0)
[L1476]  RET         call CorralChoice_DiceToken(this);

Loop:
[L1476]        assume true;

[2020-11-24 18:28:55,782 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 18:28:55,782 INFO  L82        PathProgramCache]: Analyzing trace with hash -1630211155, now seen corresponding path program 1 times
[2020-11-24 18:28:55,787 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 18:28:55,806 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 18:28:55,859 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 18:28:55,861 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 18:28:55,861 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-24 18:28:55,865 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 18:28:55,877 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-24 18:28:55,877 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-24 18:28:55,879 INFO  L87              Difference]: Start difference. First operand 1190 states. Second operand 3 states.
[2020-11-24 18:28:56,073 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 18:28:56,073 INFO  L93              Difference]: Finished difference Result 558 states and 612 transitions.
[2020-11-24 18:28:56,073 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-24 18:28:56,075 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 558 states and 612 transitions.
[2020-11-24 18:28:56,080 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 18:28:56,085 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 558 states to 184 states and 197 transitions.
[2020-11-24 18:28:56,086 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 4
[2020-11-24 18:28:56,087 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 130
[2020-11-24 18:28:56,087 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 184 states and 197 transitions.
[2020-11-24 18:28:56,089 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 18:28:56,089 INFO  L728         BuchiCegarLoop]: Abstraction has 184 states and 197 transitions.
[2020-11-24 18:28:56,104 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 184 states and 197 transitions.
[2020-11-24 18:28:56,118 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 184 to 184.
[2020-11-24 18:28:56,118 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 184 states.
[2020-11-24 18:28:56,119 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 184 states to 184 states and 197 transitions.
[2020-11-24 18:28:56,120 INFO  L751         BuchiCegarLoop]: Abstraction has 184 states and 197 transitions.
[2020-11-24 18:28:56,120 INFO  L631         BuchiCegarLoop]: Abstraction has 184 states and 197 transitions.
[2020-11-24 18:28:56,120 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-24 18:28:56,120 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 184 states and 197 transitions.
[2020-11-24 18:28:56,122 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 18:28:56,122 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 18:28:56,122 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 18:28:56,124 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 18:28:56,124 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L3]                 success_transferFrom_DiceToken0 := false;
[L3]                 call_transferFrom_DiceToken0 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L1471]              assume null == 0;
[L1472]  CALL        call this := FreshRefGenerator__success();
[L611]               havoc newRef;
[L612]               assume Alloc[newRef] == false;
[L613]               Alloc[newRef] := true;
[L614]               assume newRef != null;
[L1472]  RET         call this := FreshRefGenerator__success();
[L1473]              assume now >= 0;
[L1474]              assume DType[this] == DiceToken;
[L1475]              assume !revert && gas >= 0;
[L1476]  CALL        call CorralChoice_DiceToken(this);
[L1388]              havoc msgsender_MSG;
[L1389]              havoc msgvalue_MSG;
[L1390]              havoc choice;
[L1391]              havoc __ret_0_totalSupply;
[L1392]              havoc tokenOwner_s323;
[L1393]              havoc balance_s323;
[L1394]              havoc tokenOwner_s469;
[L1395]              havoc spender_s469;
[L1396]              havoc remaining_s469;
[L1397]              havoc to_s366;
[L1398]              havoc tokens_s366;
[L1399]              havoc success_s366;
[L1400]              havoc spender_s394;
[L1401]              havoc tokens_s394;
[L1402]              havoc success_s394;
[L1403]              havoc from_s453;
[L1404]              havoc to_s453;
[L1405]              havoc tokens_s453;
[L1406]              havoc success_s453;
[L1407]              havoc __ret_0_owner;
[L1408]              havoc __ret_0_newOwner;
[L1409]              havoc _newOwner_s205;
[L1410]              havoc __ret_0_symbol;
[L1411]              havoc __ret_0_name;
[L1412]              havoc __ret_0_decimals;
[L1413]              havoc __ret_0__totalSupply;
[L1414]              havoc tokenAddress_s496;
[L1415]              havoc tokens_s496;
[L1416]              havoc success_s496;
[L1417]              havoc tmpNow;
[L1418]              havoc gas;
[L1419]              assume gas > 4000000 && gas <= 8000000;
[L1420]              tmpNow := now;
[L1421]              havoc now;
[L1422]              assume now > tmpNow;
[L1423]              assume msgsender_MSG != null;
[L1424]  COND FALSE  !(choice == 6)
[L1430]  COND FALSE  !(choice == 5)
[L1436]  COND FALSE  !(choice == 4)
[L1442]  COND FALSE  !(choice == 3)
[L1449]  COND FALSE  !(choice == 2)
[L1456]  COND TRUE   choice == 1
[L1457]              gas := gas - 21000;
[L1458]  COND TRUE   gas >= 0
[L1459]              assume tokens_s453 >= 0 && tokens_s453 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1460]              assume msgvalue_MSG == 0;
[L1461]  CALL        call success_s453 := transferFrom~address~address~uint256_DiceToken(this, msgsender_MSG, msgvalue_MSG, from_s453, to_s453, tokens_s453);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != from_s453 || p2 != msgsender_MSG) && from_s453 == to_s453) && tokens_s453 <= balances_DiceToken[this][from_s453]) && tokens_s453 <= allowed_DiceToken[this][from_s453][msgsender_MSG]) && tokens_s453 >= 0) && tokens_s453 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_DiceToken[this][to_s453] >= 0) && balances_DiceToken[this][to_s453] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_DiceToken[this][from_s453] >= 0) && balances_DiceToken[this][from_s453] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_DiceToken[this][from_s453][msgsender_MSG] >= 0) && allowed_DiceToken[this][from_s453][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_DiceToken0 := true;
[L3]                 call_transferFrom_DiceToken0 := false;
[L3]                 revert := revert_hold;
[L301]               havoc __exception;
[L302]               revert := false;
[L303]   COND FALSE  !(__exception)
[L326]   CALL        call success_s453 := transferFrom~address~address~uint256_DiceToken__success(this, msgsender_MSG, msgvalue_MSG, from_s453, to_s453, tokens_s453);
[L780]   CALL        call __var_4 := sub~uint256~uint256_SafeMath__success(this, this, 0, balances_DiceToken[this][from_s453], tokens_s453);
[L646]   COND TRUE   !(b_s45 <= a_s45)
[L647]               revert := true;
[L780]   RET         call __var_4 := sub~uint256~uint256_SafeMath__success(this, this, 0, balances_DiceToken[this][from_s453], tokens_s453);
[L781]   COND TRUE   revert
[L326]   RET         call success_s453 := transferFrom~address~address~uint256_DiceToken__success(this, msgsender_MSG, msgvalue_MSG, from_s453, to_s453, tokens_s453);
[L327]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((((success_s453 == true && allowed_DiceToken[this][from_s453][msgsender_MSG] == old(allowed_DiceToken[this][from_s453][msgsender_MSG]) - tokens_s453) && _totalSupply_DiceToken[this] == old(_totalSupply_DiceToken[this])) && balances_DiceToken[this] == old(balances_DiceToken[this])) && allowed_DiceToken[this][p1][p2] == old(allowed_DiceToken[this][p1][p2])) && symbol_DiceToken[this] == old(symbol_DiceToken[this])) && name_DiceToken[this] == old(name_DiceToken[this])) && decimals_DiceToken[this] == old(decimals_DiceToken[this])) && owner_Owned[this] == old(owner_Owned[this])) && newOwner_Owned[this] == old(newOwner_Owned[this]));
[L3]                 revert := revert_hold;
[L1461]  RET         call success_s453 := transferFrom~address~address~uint256_DiceToken(this, msgsender_MSG, msgvalue_MSG, from_s453, to_s453, tokens_s453);
[L1476]  RET         call CorralChoice_DiceToken(this);

Loop:
[L1476]        assume true;

[2020-11-24 18:28:56,126 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 18:28:56,127 INFO  L82        PathProgramCache]: Analyzing trace with hash 1925221640, now seen corresponding path program 1 times
[2020-11-24 18:28:56,128 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 18:28:56,140 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 18:28:56,159 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 18:28:56,159 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 18:28:56,159 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-24 18:28:56,161 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 18:28:56,161 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-24 18:28:56,161 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-24 18:28:56,161 INFO  L87              Difference]: Start difference. First operand 184 states and 197 transitions. cyclomatic complexity: 14 Second operand 3 states.
[2020-11-24 18:28:56,170 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 18:28:56,170 INFO  L93              Difference]: Finished difference Result 219 states and 233 transitions.
[2020-11-24 18:28:56,170 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-24 18:28:56,170 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 219 states and 233 transitions.
[2020-11-24 18:28:56,172 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 2
[2020-11-24 18:28:56,174 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 219 states to 203 states and 212 transitions.
[2020-11-24 18:28:56,174 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 146
[2020-11-24 18:28:56,174 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 151
[2020-11-24 18:28:56,174 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 203 states and 212 transitions.
[2020-11-24 18:28:56,175 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 18:28:56,175 INFO  L728         BuchiCegarLoop]: Abstraction has 203 states and 212 transitions.
[2020-11-24 18:28:56,176 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 203 states and 212 transitions.
[2020-11-24 18:28:56,182 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 203 to 192.
[2020-11-24 18:28:56,182 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 192 states.
[2020-11-24 18:28:56,182 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 192 states to 192 states and 201 transitions.
[2020-11-24 18:28:56,183 INFO  L751         BuchiCegarLoop]: Abstraction has 192 states and 201 transitions.
[2020-11-24 18:28:56,183 INFO  L631         BuchiCegarLoop]: Abstraction has 192 states and 201 transitions.
[2020-11-24 18:28:56,183 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-24 18:28:56,183 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 192 states and 201 transitions.
[2020-11-24 18:28:56,184 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 18:28:56,184 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 18:28:56,184 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 18:28:56,185 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 18:28:56,185 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L3]                 success_transferFrom_DiceToken0 := false;
[L3]                 call_transferFrom_DiceToken0 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L1471]              assume null == 0;
[L1472]  CALL        call this := FreshRefGenerator__success();
[L611]               havoc newRef;
[L612]               assume Alloc[newRef] == false;
[L613]               Alloc[newRef] := true;
[L614]               assume newRef != null;
[L1472]  RET         call this := FreshRefGenerator__success();
[L1473]              assume now >= 0;
[L1474]              assume DType[this] == DiceToken;
[L1475]              assume !revert && gas >= 0;
[L1476]  CALL        call CorralChoice_DiceToken(this);
[L1388]              havoc msgsender_MSG;
[L1389]              havoc msgvalue_MSG;
[L1390]              havoc choice;
[L1391]              havoc __ret_0_totalSupply;
[L1392]              havoc tokenOwner_s323;
[L1393]              havoc balance_s323;
[L1394]              havoc tokenOwner_s469;
[L1395]              havoc spender_s469;
[L1396]              havoc remaining_s469;
[L1397]              havoc to_s366;
[L1398]              havoc tokens_s366;
[L1399]              havoc success_s366;
[L1400]              havoc spender_s394;
[L1401]              havoc tokens_s394;
[L1402]              havoc success_s394;
[L1403]              havoc from_s453;
[L1404]              havoc to_s453;
[L1405]              havoc tokens_s453;
[L1406]              havoc success_s453;
[L1407]              havoc __ret_0_owner;
[L1408]              havoc __ret_0_newOwner;
[L1409]              havoc _newOwner_s205;
[L1410]              havoc __ret_0_symbol;
[L1411]              havoc __ret_0_name;
[L1412]              havoc __ret_0_decimals;
[L1413]              havoc __ret_0__totalSupply;
[L1414]              havoc tokenAddress_s496;
[L1415]              havoc tokens_s496;
[L1416]              havoc success_s496;
[L1417]              havoc tmpNow;
[L1418]              havoc gas;
[L1419]              assume gas > 4000000 && gas <= 8000000;
[L1420]              tmpNow := now;
[L1421]              havoc now;
[L1422]              assume now > tmpNow;
[L1423]              assume msgsender_MSG != null;
[L1424]  COND FALSE  !(choice == 6)
[L1430]  COND FALSE  !(choice == 5)
[L1436]  COND FALSE  !(choice == 4)
[L1442]  COND FALSE  !(choice == 3)
[L1449]  COND FALSE  !(choice == 2)
[L1456]  COND TRUE   choice == 1
[L1457]              gas := gas - 21000;
[L1458]  COND TRUE   gas >= 0
[L1459]              assume tokens_s453 >= 0 && tokens_s453 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1460]              assume msgvalue_MSG == 0;
[L1461]  CALL        call success_s453 := transferFrom~address~address~uint256_DiceToken(this, msgsender_MSG, msgvalue_MSG, from_s453, to_s453, tokens_s453);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != from_s453 || p2 != msgsender_MSG) && from_s453 == to_s453) && tokens_s453 <= balances_DiceToken[this][from_s453]) && tokens_s453 <= allowed_DiceToken[this][from_s453][msgsender_MSG]) && tokens_s453 >= 0) && tokens_s453 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_DiceToken[this][to_s453] >= 0) && balances_DiceToken[this][to_s453] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_DiceToken[this][from_s453] >= 0) && balances_DiceToken[this][from_s453] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_DiceToken[this][from_s453][msgsender_MSG] >= 0) && allowed_DiceToken[this][from_s453][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_DiceToken0 := true;
[L3]                 call_transferFrom_DiceToken0 := false;
[L3]                 revert := revert_hold;
[L301]               havoc __exception;
[L302]               revert := false;
[L303]   COND TRUE   __exception
[L304]               __tmp__Balance := Balance;
[L305]               __tmp__DType := DType;
[L306]               __tmp__Alloc := Alloc;
[L307]               __tmp__balance_ADDR := balance_ADDR;
[L308]               __tmp__M_Ref_int := M_Ref_int;
[L309]               __tmp__sum_balances0 := sum_balances0;
[L310]               __tmp__alloc_allowed_DiceToken_lvl0 := alloc_allowed_DiceToken_lvl0;
[L311]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L312]               __tmp__sum_allowed1 := sum_allowed1;
[L313]               __tmp__Length := Length;
[L314]               __tmp__now := now;
[L315]               __tmp__owner_Owned := owner_Owned;
[L316]               __tmp__newOwner_Owned := newOwner_Owned;
[L317]               __tmp__symbol_DiceToken := symbol_DiceToken;
[L318]               __tmp__name_DiceToken := name_DiceToken;
[L319]               __tmp__decimals_DiceToken := decimals_DiceToken;
[L320]               __tmp___totalSupply_DiceToken := _totalSupply_DiceToken;
[L321]               __tmp__balances_DiceToken := balances_DiceToken;
[L322]               __tmp__allowed_DiceToken := allowed_DiceToken;
[L323]   CALL        call success_s453 := transferFrom~address~address~uint256_DiceToken__fail(this, msgsender_MSG, msgvalue_MSG, from_s453, to_s453, tokens_s453);
[L750]   CALL        call __var_4 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __tmp__balances_DiceToken[this][from_s453], tokens_s453);
[L637]   COND TRUE   !(b_s45 <= a_s45)
[L638]               revert := true;
[L750]   RET         call __var_4 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __tmp__balances_DiceToken[this][from_s453], tokens_s453);
[L751]   COND TRUE   revert
[L323]   RET         call success_s453 := transferFrom~address~address~uint256_DiceToken__fail(this, msgsender_MSG, msgvalue_MSG, from_s453, to_s453, tokens_s453);
[L324]               assume revert || gas < 0;
[L1461]  RET         call success_s453 := transferFrom~address~address~uint256_DiceToken(this, msgsender_MSG, msgvalue_MSG, from_s453, to_s453, tokens_s453);
[L1476]  RET         call CorralChoice_DiceToken(this);

Loop:
[L1476]        assume true;

[2020-11-24 18:28:56,188 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 18:28:56,188 INFO  L82        PathProgramCache]: Analyzing trace with hash -1792194326, now seen corresponding path program 1 times
[2020-11-24 18:28:56,188 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 18:28:56,199 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 18:28:56,266 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 18:28:56,266 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 18:28:56,266 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [7] imperfect sequences [] total 7
[2020-11-24 18:28:56,267 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 18:28:56,267 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 7 interpolants.
[2020-11-24 18:28:56,267 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=11, Invalid=31, Unknown=0, NotChecked=0, Total=42
[2020-11-24 18:28:56,267 INFO  L87              Difference]: Start difference. First operand 192 states and 201 transitions. cyclomatic complexity: 10 Second operand 7 states.
[2020-11-24 18:28:56,369 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 18:28:56,369 INFO  L93              Difference]: Finished difference Result 207 states and 215 transitions.
[2020-11-24 18:28:56,369 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 8 states. 
[2020-11-24 18:28:56,370 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 207 states and 215 transitions.
[2020-11-24 18:28:56,371 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 2
[2020-11-24 18:28:56,372 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 207 states to 203 states and 211 transitions.
[2020-11-24 18:28:56,372 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 151
[2020-11-24 18:28:56,373 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 151
[2020-11-24 18:28:56,373 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 203 states and 211 transitions.
[2020-11-24 18:28:56,374 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 18:28:56,374 INFO  L728         BuchiCegarLoop]: Abstraction has 203 states and 211 transitions.
[2020-11-24 18:28:56,374 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 203 states and 211 transitions.
[2020-11-24 18:28:56,378 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 203 to 190.
[2020-11-24 18:28:56,379 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 190 states.
[2020-11-24 18:28:56,379 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 190 states to 190 states and 198 transitions.
[2020-11-24 18:28:56,379 INFO  L751         BuchiCegarLoop]: Abstraction has 190 states and 198 transitions.
[2020-11-24 18:28:56,379 INFO  L631         BuchiCegarLoop]: Abstraction has 190 states and 198 transitions.
[2020-11-24 18:28:56,380 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-24 18:28:56,380 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 190 states and 198 transitions.
[2020-11-24 18:28:56,380 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 18:28:56,381 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 18:28:56,381 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 18:28:56,382 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 18:28:56,382 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L3]                 success_transferFrom_DiceToken0 := false;
[L3]                 call_transferFrom_DiceToken0 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L1471]              assume null == 0;
[L1472]  CALL        call this := FreshRefGenerator__success();
[L611]               havoc newRef;
[L612]               assume Alloc[newRef] == false;
[L613]               Alloc[newRef] := true;
[L614]               assume newRef != null;
[L1472]  RET         call this := FreshRefGenerator__success();
[L1473]              assume now >= 0;
[L1474]              assume DType[this] == DiceToken;
[L1475]              assume !revert && gas >= 0;
[L1476]  CALL        call CorralChoice_DiceToken(this);
[L1388]              havoc msgsender_MSG;
[L1389]              havoc msgvalue_MSG;
[L1390]              havoc choice;
[L1391]              havoc __ret_0_totalSupply;
[L1392]              havoc tokenOwner_s323;
[L1393]              havoc balance_s323;
[L1394]              havoc tokenOwner_s469;
[L1395]              havoc spender_s469;
[L1396]              havoc remaining_s469;
[L1397]              havoc to_s366;
[L1398]              havoc tokens_s366;
[L1399]              havoc success_s366;
[L1400]              havoc spender_s394;
[L1401]              havoc tokens_s394;
[L1402]              havoc success_s394;
[L1403]              havoc from_s453;
[L1404]              havoc to_s453;
[L1405]              havoc tokens_s453;
[L1406]              havoc success_s453;
[L1407]              havoc __ret_0_owner;
[L1408]              havoc __ret_0_newOwner;
[L1409]              havoc _newOwner_s205;
[L1410]              havoc __ret_0_symbol;
[L1411]              havoc __ret_0_name;
[L1412]              havoc __ret_0_decimals;
[L1413]              havoc __ret_0__totalSupply;
[L1414]              havoc tokenAddress_s496;
[L1415]              havoc tokens_s496;
[L1416]              havoc success_s496;
[L1417]              havoc tmpNow;
[L1418]              havoc gas;
[L1419]              assume gas > 4000000 && gas <= 8000000;
[L1420]              tmpNow := now;
[L1421]              havoc now;
[L1422]              assume now > tmpNow;
[L1423]              assume msgsender_MSG != null;
[L1424]  COND FALSE  !(choice == 6)
[L1430]  COND FALSE  !(choice == 5)
[L1436]  COND FALSE  !(choice == 4)
[L1442]  COND FALSE  !(choice == 3)
[L1449]  COND FALSE  !(choice == 2)
[L1456]  COND TRUE   choice == 1
[L1457]              gas := gas - 21000;
[L1458]  COND TRUE   gas >= 0
[L1459]              assume tokens_s453 >= 0 && tokens_s453 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1460]              assume msgvalue_MSG == 0;
[L1461]  CALL        call success_s453 := transferFrom~address~address~uint256_DiceToken(this, msgsender_MSG, msgvalue_MSG, from_s453, to_s453, tokens_s453);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != from_s453 || p2 != msgsender_MSG) && from_s453 == to_s453) && tokens_s453 <= balances_DiceToken[this][from_s453]) && tokens_s453 <= allowed_DiceToken[this][from_s453][msgsender_MSG]) && tokens_s453 >= 0) && tokens_s453 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_DiceToken[this][to_s453] >= 0) && balances_DiceToken[this][to_s453] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_DiceToken[this][from_s453] >= 0) && balances_DiceToken[this][from_s453] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_DiceToken[this][from_s453][msgsender_MSG] >= 0) && allowed_DiceToken[this][from_s453][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_DiceToken0 := true;
[L3]                 call_transferFrom_DiceToken0 := false;
[L3]                 revert := revert_hold;
[L301]               havoc __exception;
[L302]               revert := false;
[L303]   COND TRUE   __exception
[L304]               __tmp__Balance := Balance;
[L305]               __tmp__DType := DType;
[L306]               __tmp__Alloc := Alloc;
[L307]               __tmp__balance_ADDR := balance_ADDR;
[L308]               __tmp__M_Ref_int := M_Ref_int;
[L309]               __tmp__sum_balances0 := sum_balances0;
[L310]               __tmp__alloc_allowed_DiceToken_lvl0 := alloc_allowed_DiceToken_lvl0;
[L311]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L312]               __tmp__sum_allowed1 := sum_allowed1;
[L313]               __tmp__Length := Length;
[L314]               __tmp__now := now;
[L315]               __tmp__owner_Owned := owner_Owned;
[L316]               __tmp__newOwner_Owned := newOwner_Owned;
[L317]               __tmp__symbol_DiceToken := symbol_DiceToken;
[L318]               __tmp__name_DiceToken := name_DiceToken;
[L319]               __tmp__decimals_DiceToken := decimals_DiceToken;
[L320]               __tmp___totalSupply_DiceToken := _totalSupply_DiceToken;
[L321]               __tmp__balances_DiceToken := balances_DiceToken;
[L322]               __tmp__allowed_DiceToken := allowed_DiceToken;
[L323]   CALL        call success_s453 := transferFrom~address~address~uint256_DiceToken__fail(this, msgsender_MSG, msgvalue_MSG, from_s453, to_s453, tokens_s453);
[L750]   CALL        call __var_4 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __tmp__balances_DiceToken[this][from_s453], tokens_s453);
[L637]   COND FALSE  !(!(b_s45 <= a_s45))
[L641]               c_s45 := (a_s45 - b_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L750]   RET         call __var_4 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __tmp__balances_DiceToken[this][from_s453], tokens_s453);
[L751]   COND TRUE   revert
[L323]   RET         call success_s453 := transferFrom~address~address~uint256_DiceToken__fail(this, msgsender_MSG, msgvalue_MSG, from_s453, to_s453, tokens_s453);
[L324]               assume revert || gas < 0;
[L1461]  RET         call success_s453 := transferFrom~address~address~uint256_DiceToken(this, msgsender_MSG, msgvalue_MSG, from_s453, to_s453, tokens_s453);
[L1476]  RET         call CorralChoice_DiceToken(this);

Loop:
[L1476]        assume true;

[2020-11-24 18:28:56,384 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 18:28:56,384 INFO  L82        PathProgramCache]: Analyzing trace with hash -761188192, now seen corresponding path program 1 times
[2020-11-24 18:28:56,385 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 18:28:56,394 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 18:28:56,413 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 18:28:56,413 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 18:28:56,413 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [5] imperfect sequences [] total 5
[2020-11-24 18:28:56,414 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 18:28:56,414 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 5 interpolants.
[2020-11-24 18:28:56,414 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=9, Invalid=11, Unknown=0, NotChecked=0, Total=20
[2020-11-24 18:28:56,414 INFO  L87              Difference]: Start difference. First operand 190 states and 198 transitions. cyclomatic complexity: 9 Second operand 5 states.
[2020-11-24 18:28:56,426 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 18:28:56,426 INFO  L93              Difference]: Finished difference Result 201 states and 206 transitions.
[2020-11-24 18:28:56,426 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-24 18:28:56,427 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 201 states and 206 transitions.
[2020-11-24 18:28:56,428 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 2
[2020-11-24 18:28:56,429 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 201 states to 201 states and 206 transitions.
[2020-11-24 18:28:56,429 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 149
[2020-11-24 18:28:56,429 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 149
[2020-11-24 18:28:56,429 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 201 states and 206 transitions.
[2020-11-24 18:28:56,430 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 18:28:56,430 INFO  L728         BuchiCegarLoop]: Abstraction has 201 states and 206 transitions.
[2020-11-24 18:28:56,430 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 201 states and 206 transitions.
[2020-11-24 18:28:56,432 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 201 to 190.
[2020-11-24 18:28:56,432 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 190 states.
[2020-11-24 18:28:56,433 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 190 states to 190 states and 195 transitions.
[2020-11-24 18:28:56,433 INFO  L751         BuchiCegarLoop]: Abstraction has 190 states and 195 transitions.
[2020-11-24 18:28:56,433 INFO  L631         BuchiCegarLoop]: Abstraction has 190 states and 195 transitions.
[2020-11-24 18:28:56,433 INFO  L445         BuchiCegarLoop]: ======== Iteration 5============
[2020-11-24 18:28:56,433 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 190 states and 195 transitions.
[2020-11-24 18:28:56,434 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 18:28:56,434 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 18:28:56,434 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 18:28:56,435 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 18:28:56,435 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L3]                 success_transferFrom_DiceToken0 := false;
[L3]                 call_transferFrom_DiceToken0 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L1471]              assume null == 0;
[L1472]  CALL        call this := FreshRefGenerator__success();
[L611]               havoc newRef;
[L612]               assume Alloc[newRef] == false;
[L613]               Alloc[newRef] := true;
[L614]               assume newRef != null;
[L1472]  RET         call this := FreshRefGenerator__success();
[L1473]              assume now >= 0;
[L1474]              assume DType[this] == DiceToken;
[L1475]              assume !revert && gas >= 0;
[L1476]  CALL        call CorralChoice_DiceToken(this);
[L1388]              havoc msgsender_MSG;
[L1389]              havoc msgvalue_MSG;
[L1390]              havoc choice;
[L1391]              havoc __ret_0_totalSupply;
[L1392]              havoc tokenOwner_s323;
[L1393]              havoc balance_s323;
[L1394]              havoc tokenOwner_s469;
[L1395]              havoc spender_s469;
[L1396]              havoc remaining_s469;
[L1397]              havoc to_s366;
[L1398]              havoc tokens_s366;
[L1399]              havoc success_s366;
[L1400]              havoc spender_s394;
[L1401]              havoc tokens_s394;
[L1402]              havoc success_s394;
[L1403]              havoc from_s453;
[L1404]              havoc to_s453;
[L1405]              havoc tokens_s453;
[L1406]              havoc success_s453;
[L1407]              havoc __ret_0_owner;
[L1408]              havoc __ret_0_newOwner;
[L1409]              havoc _newOwner_s205;
[L1410]              havoc __ret_0_symbol;
[L1411]              havoc __ret_0_name;
[L1412]              havoc __ret_0_decimals;
[L1413]              havoc __ret_0__totalSupply;
[L1414]              havoc tokenAddress_s496;
[L1415]              havoc tokens_s496;
[L1416]              havoc success_s496;
[L1417]              havoc tmpNow;
[L1418]              havoc gas;
[L1419]              assume gas > 4000000 && gas <= 8000000;
[L1420]              tmpNow := now;
[L1421]              havoc now;
[L1422]              assume now > tmpNow;
[L1423]              assume msgsender_MSG != null;
[L1424]  COND FALSE  !(choice == 6)
[L1430]  COND FALSE  !(choice == 5)
[L1436]  COND FALSE  !(choice == 4)
[L1442]  COND FALSE  !(choice == 3)
[L1449]  COND FALSE  !(choice == 2)
[L1456]  COND TRUE   choice == 1
[L1457]              gas := gas - 21000;
[L1458]  COND TRUE   gas >= 0
[L1459]              assume tokens_s453 >= 0 && tokens_s453 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1460]              assume msgvalue_MSG == 0;
[L1461]  CALL        call success_s453 := transferFrom~address~address~uint256_DiceToken(this, msgsender_MSG, msgvalue_MSG, from_s453, to_s453, tokens_s453);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != from_s453 || p2 != msgsender_MSG) && from_s453 == to_s453) && tokens_s453 <= balances_DiceToken[this][from_s453]) && tokens_s453 <= allowed_DiceToken[this][from_s453][msgsender_MSG]) && tokens_s453 >= 0) && tokens_s453 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_DiceToken[this][to_s453] >= 0) && balances_DiceToken[this][to_s453] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_DiceToken[this][from_s453] >= 0) && balances_DiceToken[this][from_s453] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_DiceToken[this][from_s453][msgsender_MSG] >= 0) && allowed_DiceToken[this][from_s453][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_DiceToken0 := true;
[L3]                 call_transferFrom_DiceToken0 := false;
[L3]                 revert := revert_hold;
[L301]               havoc __exception;
[L302]               revert := false;
[L303]   COND FALSE  !(__exception)
[L326]   CALL        call success_s453 := transferFrom~address~address~uint256_DiceToken__success(this, msgsender_MSG, msgvalue_MSG, from_s453, to_s453, tokens_s453);
[L780]   CALL        call __var_4 := sub~uint256~uint256_SafeMath__success(this, this, 0, balances_DiceToken[this][from_s453], tokens_s453);
[L646]   COND FALSE  !(!(b_s45 <= a_s45))
[L650]               c_s45 := (a_s45 - b_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L780]   RET         call __var_4 := sub~uint256~uint256_SafeMath__success(this, this, 0, balances_DiceToken[this][from_s453], tokens_s453);
[L781]   COND FALSE  !(revert)
[L784]               sum_balances0[this] := sum_balances0[this] - balances_DiceToken[this][from_s453];
[L785]               balances_DiceToken[this][from_s453] := __var_4;
[L786]               sum_balances0[this] := sum_balances0[this] + balances_DiceToken[this][from_s453];
[L787]   CALL        call __var_5 := sub~uint256~uint256_SafeMath__success(this, this, 0, allowed_DiceToken[this][from_s453][msgsender_MSG], tokens_s453);
[L646]   COND FALSE  !(!(b_s45 <= a_s45))
[L650]               c_s45 := (a_s45 - b_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L787]   RET         call __var_5 := sub~uint256~uint256_SafeMath__success(this, this, 0, allowed_DiceToken[this][from_s453][msgsender_MSG], tokens_s453);
[L788]   COND FALSE  !(revert)
[L791]               sum_allowed1[from_s453] := sum_allowed1[from_s453] - allowed_DiceToken[this][from_s453][msgsender_MSG];
[L792]               allowed_DiceToken[this][from_s453][msgsender_MSG] := __var_5;
[L793]               sum_allowed1[from_s453] := sum_allowed1[from_s453] + allowed_DiceToken[this][from_s453][msgsender_MSG];
[L794]   CALL        call __var_6 := add~uint256~uint256_SafeMath__success(this, this, 0, balances_DiceToken[this][to_s453], tokens_s453);
[L628]               c_s23 := (a_s23 + b_s23) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L629]   COND FALSE  !(!(c_s23 >= a_s23))
[L794]   RET         call __var_6 := add~uint256~uint256_SafeMath__success(this, this, 0, balances_DiceToken[this][to_s453], tokens_s453);
[L795]   COND FALSE  !(revert)
[L798]               sum_balances0[this] := sum_balances0[this] - balances_DiceToken[this][to_s453];
[L799]               balances_DiceToken[this][to_s453] := __var_6;
[L800]               sum_balances0[this] := sum_balances0[this] + balances_DiceToken[this][to_s453];
[L801]               assert { :EventEmitted "Transfer_DiceToken" } true;
[L802]               success_s453 := true;
[L326]   RET         call success_s453 := transferFrom~address~address~uint256_DiceToken__success(this, msgsender_MSG, msgvalue_MSG, from_s453, to_s453, tokens_s453);
[L327]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((((success_s453 == true && allowed_DiceToken[this][from_s453][msgsender_MSG] == old(allowed_DiceToken[this][from_s453][msgsender_MSG]) - tokens_s453) && _totalSupply_DiceToken[this] == old(_totalSupply_DiceToken[this])) && balances_DiceToken[this] == old(balances_DiceToken[this])) && allowed_DiceToken[this][p1][p2] == old(allowed_DiceToken[this][p1][p2])) && symbol_DiceToken[this] == old(symbol_DiceToken[this])) && name_DiceToken[this] == old(name_DiceToken[this])) && decimals_DiceToken[this] == old(decimals_DiceToken[this])) && owner_Owned[this] == old(owner_Owned[this])) && newOwner_Owned[this] == old(newOwner_Owned[this]));
[L3]                 revert := revert_hold;
[L1461]  RET         call success_s453 := transferFrom~address~address~uint256_DiceToken(this, msgsender_MSG, msgvalue_MSG, from_s453, to_s453, tokens_s453);
[L1476]  RET         call CorralChoice_DiceToken(this);

Loop:
[L1476]        assume true;

[2020-11-24 18:28:56,438 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 18:28:56,438 INFO  L82        PathProgramCache]: Analyzing trace with hash 810428641, now seen corresponding path program 1 times
[2020-11-24 18:28:56,438 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 18:28:56,564 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 18:28:57,108 INFO  L134       CoverageAnalysis]: Checked inductivity of 4 backedges. 0 proven. 2 refuted. 0 times theorem prover too weak. 2 trivial. 0 not checked.
[2020-11-24 18:28:57,108 INFO  L312   seRefinementStrategy]: Constructing automaton from 0 perfect and 1 imperfect interpolant sequences.
[2020-11-24 18:28:57,108 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [] imperfect sequences [19] total 19
[2020-11-24 18:28:57,108 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 18:28:57,109 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 19 interpolants.
[2020-11-24 18:28:57,109 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=40, Invalid=302, Unknown=0, NotChecked=0, Total=342
[2020-11-24 18:28:57,109 INFO  L87              Difference]: Start difference. First operand 190 states and 195 transitions. cyclomatic complexity: 6 Second operand 19 states.
[2020-11-24 18:28:57,629 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 18:28:57,630 INFO  L93              Difference]: Finished difference Result 189 states and 193 transitions.
[2020-11-24 18:28:57,630 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 17 states. 
[2020-11-24 18:28:57,630 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 189 states and 193 transitions.
[2020-11-24 18:28:57,631 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 18:28:57,631 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 189 states to 149 states and 152 transitions.
[2020-11-24 18:28:57,631 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 112
[2020-11-24 18:28:57,632 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 112
[2020-11-24 18:28:57,632 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 149 states and 152 transitions.
[2020-11-24 18:28:57,632 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 18:28:57,632 INFO  L728         BuchiCegarLoop]: Abstraction has 149 states and 152 transitions.
[2020-11-24 18:28:57,632 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 149 states and 152 transitions.
[2020-11-24 18:28:57,633 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 149 to 149.
[2020-11-24 18:28:57,634 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 149 states.
[2020-11-24 18:28:57,634 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 149 states to 149 states and 152 transitions.
[2020-11-24 18:28:57,634 INFO  L751         BuchiCegarLoop]: Abstraction has 149 states and 152 transitions.
[2020-11-24 18:28:57,634 INFO  L631         BuchiCegarLoop]: Abstraction has 149 states and 152 transitions.
[2020-11-24 18:28:57,634 INFO  L445         BuchiCegarLoop]: ======== Iteration 6============
[2020-11-24 18:28:57,634 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 149 states and 152 transitions.
[2020-11-24 18:28:57,635 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 18:28:57,635 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 18:28:57,635 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 18:28:57,636 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 18:28:57,636 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L3]                 success_transferFrom_DiceToken0 := false;
[L3]                 call_transferFrom_DiceToken0 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L1471]              assume null == 0;
[L1472]  CALL        call this := FreshRefGenerator__success();
[L611]               havoc newRef;
[L612]               assume Alloc[newRef] == false;
[L613]               Alloc[newRef] := true;
[L614]               assume newRef != null;
[L1472]  RET         call this := FreshRefGenerator__success();
[L1473]              assume now >= 0;
[L1474]              assume DType[this] == DiceToken;
[L1475]              assume !revert && gas >= 0;
[L1476]  CALL        call CorralChoice_DiceToken(this);
[L1388]              havoc msgsender_MSG;
[L1389]              havoc msgvalue_MSG;
[L1390]              havoc choice;
[L1391]              havoc __ret_0_totalSupply;
[L1392]              havoc tokenOwner_s323;
[L1393]              havoc balance_s323;
[L1394]              havoc tokenOwner_s469;
[L1395]              havoc spender_s469;
[L1396]              havoc remaining_s469;
[L1397]              havoc to_s366;
[L1398]              havoc tokens_s366;
[L1399]              havoc success_s366;
[L1400]              havoc spender_s394;
[L1401]              havoc tokens_s394;
[L1402]              havoc success_s394;
[L1403]              havoc from_s453;
[L1404]              havoc to_s453;
[L1405]              havoc tokens_s453;
[L1406]              havoc success_s453;
[L1407]              havoc __ret_0_owner;
[L1408]              havoc __ret_0_newOwner;
[L1409]              havoc _newOwner_s205;
[L1410]              havoc __ret_0_symbol;
[L1411]              havoc __ret_0_name;
[L1412]              havoc __ret_0_decimals;
[L1413]              havoc __ret_0__totalSupply;
[L1414]              havoc tokenAddress_s496;
[L1415]              havoc tokens_s496;
[L1416]              havoc success_s496;
[L1417]              havoc tmpNow;
[L1418]              havoc gas;
[L1419]              assume gas > 4000000 && gas <= 8000000;
[L1420]              tmpNow := now;
[L1421]              havoc now;
[L1422]              assume now > tmpNow;
[L1423]              assume msgsender_MSG != null;
[L1424]  COND FALSE  !(choice == 6)
[L1430]  COND FALSE  !(choice == 5)
[L1436]  COND FALSE  !(choice == 4)
[L1442]  COND FALSE  !(choice == 3)
[L1449]  COND FALSE  !(choice == 2)
[L1456]  COND TRUE   choice == 1
[L1457]              gas := gas - 21000;
[L1458]  COND TRUE   gas >= 0
[L1459]              assume tokens_s453 >= 0 && tokens_s453 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1460]              assume msgvalue_MSG == 0;
[L1461]  CALL        call success_s453 := transferFrom~address~address~uint256_DiceToken(this, msgsender_MSG, msgvalue_MSG, from_s453, to_s453, tokens_s453);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != from_s453 || p2 != msgsender_MSG) && from_s453 == to_s453) && tokens_s453 <= balances_DiceToken[this][from_s453]) && tokens_s453 <= allowed_DiceToken[this][from_s453][msgsender_MSG]) && tokens_s453 >= 0) && tokens_s453 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_DiceToken[this][to_s453] >= 0) && balances_DiceToken[this][to_s453] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_DiceToken[this][from_s453] >= 0) && balances_DiceToken[this][from_s453] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_DiceToken[this][from_s453][msgsender_MSG] >= 0) && allowed_DiceToken[this][from_s453][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_DiceToken0 := true;
[L3]                 call_transferFrom_DiceToken0 := false;
[L3]                 revert := revert_hold;
[L301]               havoc __exception;
[L302]               revert := false;
[L303]   COND TRUE   __exception
[L304]               __tmp__Balance := Balance;
[L305]               __tmp__DType := DType;
[L306]               __tmp__Alloc := Alloc;
[L307]               __tmp__balance_ADDR := balance_ADDR;
[L308]               __tmp__M_Ref_int := M_Ref_int;
[L309]               __tmp__sum_balances0 := sum_balances0;
[L310]               __tmp__alloc_allowed_DiceToken_lvl0 := alloc_allowed_DiceToken_lvl0;
[L311]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L312]               __tmp__sum_allowed1 := sum_allowed1;
[L313]               __tmp__Length := Length;
[L314]               __tmp__now := now;
[L315]               __tmp__owner_Owned := owner_Owned;
[L316]               __tmp__newOwner_Owned := newOwner_Owned;
[L317]               __tmp__symbol_DiceToken := symbol_DiceToken;
[L318]               __tmp__name_DiceToken := name_DiceToken;
[L319]               __tmp__decimals_DiceToken := decimals_DiceToken;
[L320]               __tmp___totalSupply_DiceToken := _totalSupply_DiceToken;
[L321]               __tmp__balances_DiceToken := balances_DiceToken;
[L322]               __tmp__allowed_DiceToken := allowed_DiceToken;
[L323]   CALL        call success_s453 := transferFrom~address~address~uint256_DiceToken__fail(this, msgsender_MSG, msgvalue_MSG, from_s453, to_s453, tokens_s453);
[L750]   CALL        call __var_4 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __tmp__balances_DiceToken[this][from_s453], tokens_s453);
[L637]   COND FALSE  !(!(b_s45 <= a_s45))
[L641]               c_s45 := (a_s45 - b_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L750]   RET         call __var_4 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __tmp__balances_DiceToken[this][from_s453], tokens_s453);
[L751]   COND FALSE  !(revert)
[L754]               __tmp__sum_balances0[this] := __tmp__sum_balances0[this] - __tmp__balances_DiceToken[this][from_s453];
[L755]               __tmp__balances_DiceToken[this][from_s453] := __var_4;
[L756]               __tmp__sum_balances0[this] := __tmp__sum_balances0[this] + __tmp__balances_DiceToken[this][from_s453];
[L757]   CALL        call __var_5 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __tmp__allowed_DiceToken[this][from_s453][msgsender_MSG], tokens_s453);
[L637]   COND TRUE   !(b_s45 <= a_s45)
[L638]               revert := true;
[L757]   RET         call __var_5 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __tmp__allowed_DiceToken[this][from_s453][msgsender_MSG], tokens_s453);
[L758]   COND TRUE   revert
[L323]   RET         call success_s453 := transferFrom~address~address~uint256_DiceToken__fail(this, msgsender_MSG, msgvalue_MSG, from_s453, to_s453, tokens_s453);
[L324]               assume revert || gas < 0;
[L1461]  RET         call success_s453 := transferFrom~address~address~uint256_DiceToken(this, msgsender_MSG, msgvalue_MSG, from_s453, to_s453, tokens_s453);
[L1476]  RET         call CorralChoice_DiceToken(this);

Loop:
[L1476]        assume true;

[2020-11-24 18:28:57,638 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 18:28:57,638 INFO  L82        PathProgramCache]: Analyzing trace with hash -588801388, now seen corresponding path program 1 times
[2020-11-24 18:28:57,639 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 18:28:57,646 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 18:28:57,665 INFO  L134       CoverageAnalysis]: Checked inductivity of 3 backedges. 2 proven. 0 refuted. 0 times theorem prover too weak. 1 trivial. 0 not checked.
[2020-11-24 18:28:57,666 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 18:28:57,666 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [7] imperfect sequences [] total 7
[2020-11-24 18:28:57,666 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 18:28:57,666 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 7 interpolants.
[2020-11-24 18:28:57,667 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=11, Invalid=31, Unknown=0, NotChecked=0, Total=42
[2020-11-24 18:28:57,667 INFO  L87              Difference]: Start difference. First operand 149 states and 152 transitions. cyclomatic complexity: 4 Second operand 7 states.
[2020-11-24 18:28:57,688 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 18:28:57,688 INFO  L93              Difference]: Finished difference Result 151 states and 153 transitions.
[2020-11-24 18:28:57,688 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 8 states. 
[2020-11-24 18:28:57,689 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 151 states and 153 transitions.
[2020-11-24 18:28:57,689 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 18:28:57,690 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 151 states to 144 states and 146 transitions.
[2020-11-24 18:28:57,690 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 107
[2020-11-24 18:28:57,690 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 107
[2020-11-24 18:28:57,690 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 144 states and 146 transitions.
[2020-11-24 18:28:57,690 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 18:28:57,690 INFO  L728         BuchiCegarLoop]: Abstraction has 144 states and 146 transitions.
[2020-11-24 18:28:57,690 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 144 states and 146 transitions.
[2020-11-24 18:28:57,691 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 144 to 144.
[2020-11-24 18:28:57,691 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 144 states.
[2020-11-24 18:28:57,692 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 144 states to 144 states and 146 transitions.
[2020-11-24 18:28:57,692 INFO  L751         BuchiCegarLoop]: Abstraction has 144 states and 146 transitions.
[2020-11-24 18:28:57,692 INFO  L631         BuchiCegarLoop]: Abstraction has 144 states and 146 transitions.
[2020-11-24 18:28:57,692 INFO  L445         BuchiCegarLoop]: ======== Iteration 7============
[2020-11-24 18:28:57,692 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 144 states and 146 transitions.
[2020-11-24 18:28:57,692 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 18:28:57,692 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 18:28:57,693 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 18:28:57,693 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 18:28:57,693 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L3]                 success_transferFrom_DiceToken0 := false;
[L3]                 call_transferFrom_DiceToken0 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L1471]              assume null == 0;
[L1472]  CALL        call this := FreshRefGenerator__success();
[L611]               havoc newRef;
[L612]               assume Alloc[newRef] == false;
[L613]               Alloc[newRef] := true;
[L614]               assume newRef != null;
[L1472]  RET         call this := FreshRefGenerator__success();
[L1473]              assume now >= 0;
[L1474]              assume DType[this] == DiceToken;
[L1475]              assume !revert && gas >= 0;
[L1476]  CALL        call CorralChoice_DiceToken(this);
[L1388]              havoc msgsender_MSG;
[L1389]              havoc msgvalue_MSG;
[L1390]              havoc choice;
[L1391]              havoc __ret_0_totalSupply;
[L1392]              havoc tokenOwner_s323;
[L1393]              havoc balance_s323;
[L1394]              havoc tokenOwner_s469;
[L1395]              havoc spender_s469;
[L1396]              havoc remaining_s469;
[L1397]              havoc to_s366;
[L1398]              havoc tokens_s366;
[L1399]              havoc success_s366;
[L1400]              havoc spender_s394;
[L1401]              havoc tokens_s394;
[L1402]              havoc success_s394;
[L1403]              havoc from_s453;
[L1404]              havoc to_s453;
[L1405]              havoc tokens_s453;
[L1406]              havoc success_s453;
[L1407]              havoc __ret_0_owner;
[L1408]              havoc __ret_0_newOwner;
[L1409]              havoc _newOwner_s205;
[L1410]              havoc __ret_0_symbol;
[L1411]              havoc __ret_0_name;
[L1412]              havoc __ret_0_decimals;
[L1413]              havoc __ret_0__totalSupply;
[L1414]              havoc tokenAddress_s496;
[L1415]              havoc tokens_s496;
[L1416]              havoc success_s496;
[L1417]              havoc tmpNow;
[L1418]              havoc gas;
[L1419]              assume gas > 4000000 && gas <= 8000000;
[L1420]              tmpNow := now;
[L1421]              havoc now;
[L1422]              assume now > tmpNow;
[L1423]              assume msgsender_MSG != null;
[L1424]  COND FALSE  !(choice == 6)
[L1430]  COND FALSE  !(choice == 5)
[L1436]  COND FALSE  !(choice == 4)
[L1442]  COND FALSE  !(choice == 3)
[L1449]  COND FALSE  !(choice == 2)
[L1456]  COND TRUE   choice == 1
[L1457]              gas := gas - 21000;
[L1458]  COND TRUE   gas >= 0
[L1459]              assume tokens_s453 >= 0 && tokens_s453 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1460]              assume msgvalue_MSG == 0;
[L1461]  CALL        call success_s453 := transferFrom~address~address~uint256_DiceToken(this, msgsender_MSG, msgvalue_MSG, from_s453, to_s453, tokens_s453);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != from_s453 || p2 != msgsender_MSG) && from_s453 == to_s453) && tokens_s453 <= balances_DiceToken[this][from_s453]) && tokens_s453 <= allowed_DiceToken[this][from_s453][msgsender_MSG]) && tokens_s453 >= 0) && tokens_s453 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_DiceToken[this][to_s453] >= 0) && balances_DiceToken[this][to_s453] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_DiceToken[this][from_s453] >= 0) && balances_DiceToken[this][from_s453] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_DiceToken[this][from_s453][msgsender_MSG] >= 0) && allowed_DiceToken[this][from_s453][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_DiceToken0 := true;
[L3]                 call_transferFrom_DiceToken0 := false;
[L3]                 revert := revert_hold;
[L301]               havoc __exception;
[L302]               revert := false;
[L303]   COND TRUE   __exception
[L304]               __tmp__Balance := Balance;
[L305]               __tmp__DType := DType;
[L306]               __tmp__Alloc := Alloc;
[L307]               __tmp__balance_ADDR := balance_ADDR;
[L308]               __tmp__M_Ref_int := M_Ref_int;
[L309]               __tmp__sum_balances0 := sum_balances0;
[L310]               __tmp__alloc_allowed_DiceToken_lvl0 := alloc_allowed_DiceToken_lvl0;
[L311]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L312]               __tmp__sum_allowed1 := sum_allowed1;
[L313]               __tmp__Length := Length;
[L314]               __tmp__now := now;
[L315]               __tmp__owner_Owned := owner_Owned;
[L316]               __tmp__newOwner_Owned := newOwner_Owned;
[L317]               __tmp__symbol_DiceToken := symbol_DiceToken;
[L318]               __tmp__name_DiceToken := name_DiceToken;
[L319]               __tmp__decimals_DiceToken := decimals_DiceToken;
[L320]               __tmp___totalSupply_DiceToken := _totalSupply_DiceToken;
[L321]               __tmp__balances_DiceToken := balances_DiceToken;
[L322]               __tmp__allowed_DiceToken := allowed_DiceToken;
[L323]   CALL        call success_s453 := transferFrom~address~address~uint256_DiceToken__fail(this, msgsender_MSG, msgvalue_MSG, from_s453, to_s453, tokens_s453);
[L750]   CALL        call __var_4 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __tmp__balances_DiceToken[this][from_s453], tokens_s453);
[L637]   COND FALSE  !(!(b_s45 <= a_s45))
[L641]               c_s45 := (a_s45 - b_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L750]   RET         call __var_4 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __tmp__balances_DiceToken[this][from_s453], tokens_s453);
[L751]   COND FALSE  !(revert)
[L754]               __tmp__sum_balances0[this] := __tmp__sum_balances0[this] - __tmp__balances_DiceToken[this][from_s453];
[L755]               __tmp__balances_DiceToken[this][from_s453] := __var_4;
[L756]               __tmp__sum_balances0[this] := __tmp__sum_balances0[this] + __tmp__balances_DiceToken[this][from_s453];
[L757]   CALL        call __var_5 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __tmp__allowed_DiceToken[this][from_s453][msgsender_MSG], tokens_s453);
[L637]   COND FALSE  !(!(b_s45 <= a_s45))
[L641]               c_s45 := (a_s45 - b_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L757]   RET         call __var_5 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __tmp__allowed_DiceToken[this][from_s453][msgsender_MSG], tokens_s453);
[L758]   COND FALSE  !(revert)
[L761]               __tmp__sum_allowed1[from_s453] := __tmp__sum_allowed1[from_s453] - __tmp__allowed_DiceToken[this][from_s453][msgsender_MSG];
[L762]               __tmp__allowed_DiceToken[this][from_s453][msgsender_MSG] := __var_5;
[L763]               __tmp__sum_allowed1[from_s453] := __tmp__sum_allowed1[from_s453] + __tmp__allowed_DiceToken[this][from_s453][msgsender_MSG];
[L764]   CALL        call __var_6 := add~uint256~uint256_SafeMath__fail(this, this, 0, __tmp__balances_DiceToken[this][to_s453], tokens_s453);
[L619]               c_s23 := (a_s23 + b_s23) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L620]   COND TRUE   !(c_s23 >= a_s23)
[L621]               revert := true;
[L764]   RET         call __var_6 := add~uint256~uint256_SafeMath__fail(this, this, 0, __tmp__balances_DiceToken[this][to_s453], tokens_s453);
[L765]   COND TRUE   revert
[L323]   RET         call success_s453 := transferFrom~address~address~uint256_DiceToken__fail(this, msgsender_MSG, msgvalue_MSG, from_s453, to_s453, tokens_s453);
[L324]               assume revert || gas < 0;
[L1461]  RET         call success_s453 := transferFrom~address~address~uint256_DiceToken(this, msgsender_MSG, msgvalue_MSG, from_s453, to_s453, tokens_s453);
[L1476]  RET         call CorralChoice_DiceToken(this);

Loop:
[L1476]        assume true;

[2020-11-24 18:28:57,695 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 18:28:57,695 INFO  L82        PathProgramCache]: Analyzing trace with hash -1819912033, now seen corresponding path program 1 times
[2020-11-24 18:28:57,695 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 18:28:57,702 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 18:28:57,751 INFO  L134       CoverageAnalysis]: Checked inductivity of 4 backedges. 0 proven. 3 refuted. 0 times theorem prover too weak. 1 trivial. 0 not checked.
[2020-11-24 18:28:57,751 INFO  L312   seRefinementStrategy]: Constructing automaton from 0 perfect and 1 imperfect interpolant sequences.
[2020-11-24 18:28:57,751 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [] imperfect sequences [12] total 12
[2020-11-24 18:28:57,751 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 18:28:57,751 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 12 interpolants.
[2020-11-24 18:28:57,751 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=23, Invalid=109, Unknown=0, NotChecked=0, Total=132
[2020-11-24 18:28:57,752 INFO  L87              Difference]: Start difference. First operand 144 states and 146 transitions. cyclomatic complexity: 3 Second operand 12 states.
[2020-11-24 18:28:57,808 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 18:28:57,808 INFO  L93              Difference]: Finished difference Result 146 states and 147 transitions.
[2020-11-24 18:28:57,808 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 13 states. 
[2020-11-24 18:28:57,808 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 146 states and 147 transitions.
[2020-11-24 18:28:57,809 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 18:28:57,810 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 146 states to 139 states and 140 transitions.
[2020-11-24 18:28:57,810 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 102
[2020-11-24 18:28:57,810 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 102
[2020-11-24 18:28:57,810 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 139 states and 140 transitions.
[2020-11-24 18:28:57,810 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 18:28:57,810 INFO  L728         BuchiCegarLoop]: Abstraction has 139 states and 140 transitions.
[2020-11-24 18:28:57,810 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 139 states and 140 transitions.
[2020-11-24 18:28:57,811 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 139 to 139.
[2020-11-24 18:28:57,811 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 139 states.
[2020-11-24 18:28:57,812 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 139 states to 139 states and 140 transitions.
[2020-11-24 18:28:57,812 INFO  L751         BuchiCegarLoop]: Abstraction has 139 states and 140 transitions.
[2020-11-24 18:28:57,812 INFO  L631         BuchiCegarLoop]: Abstraction has 139 states and 140 transitions.
[2020-11-24 18:28:57,812 INFO  L445         BuchiCegarLoop]: ======== Iteration 8============
[2020-11-24 18:28:57,812 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 139 states and 140 transitions.
[2020-11-24 18:28:57,812 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 18:28:57,812 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 18:28:57,812 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 18:28:57,813 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 18:28:57,813 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L3]                 success_transferFrom_DiceToken0 := false;
[L3]                 call_transferFrom_DiceToken0 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L1471]              assume null == 0;
[L1472]  CALL        call this := FreshRefGenerator__success();
[L611]               havoc newRef;
[L612]               assume Alloc[newRef] == false;
[L613]               Alloc[newRef] := true;
[L614]               assume newRef != null;
[L1472]  RET         call this := FreshRefGenerator__success();
[L1473]              assume now >= 0;
[L1474]              assume DType[this] == DiceToken;
[L1475]              assume !revert && gas >= 0;
[L1476]  CALL        call CorralChoice_DiceToken(this);
[L1388]              havoc msgsender_MSG;
[L1389]              havoc msgvalue_MSG;
[L1390]              havoc choice;
[L1391]              havoc __ret_0_totalSupply;
[L1392]              havoc tokenOwner_s323;
[L1393]              havoc balance_s323;
[L1394]              havoc tokenOwner_s469;
[L1395]              havoc spender_s469;
[L1396]              havoc remaining_s469;
[L1397]              havoc to_s366;
[L1398]              havoc tokens_s366;
[L1399]              havoc success_s366;
[L1400]              havoc spender_s394;
[L1401]              havoc tokens_s394;
[L1402]              havoc success_s394;
[L1403]              havoc from_s453;
[L1404]              havoc to_s453;
[L1405]              havoc tokens_s453;
[L1406]              havoc success_s453;
[L1407]              havoc __ret_0_owner;
[L1408]              havoc __ret_0_newOwner;
[L1409]              havoc _newOwner_s205;
[L1410]              havoc __ret_0_symbol;
[L1411]              havoc __ret_0_name;
[L1412]              havoc __ret_0_decimals;
[L1413]              havoc __ret_0__totalSupply;
[L1414]              havoc tokenAddress_s496;
[L1415]              havoc tokens_s496;
[L1416]              havoc success_s496;
[L1417]              havoc tmpNow;
[L1418]              havoc gas;
[L1419]              assume gas > 4000000 && gas <= 8000000;
[L1420]              tmpNow := now;
[L1421]              havoc now;
[L1422]              assume now > tmpNow;
[L1423]              assume msgsender_MSG != null;
[L1424]  COND FALSE  !(choice == 6)
[L1430]  COND FALSE  !(choice == 5)
[L1436]  COND FALSE  !(choice == 4)
[L1442]  COND FALSE  !(choice == 3)
[L1449]  COND FALSE  !(choice == 2)
[L1456]  COND TRUE   choice == 1
[L1457]              gas := gas - 21000;
[L1458]  COND TRUE   gas >= 0
[L1459]              assume tokens_s453 >= 0 && tokens_s453 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1460]              assume msgvalue_MSG == 0;
[L1461]  CALL        call success_s453 := transferFrom~address~address~uint256_DiceToken(this, msgsender_MSG, msgvalue_MSG, from_s453, to_s453, tokens_s453);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != from_s453 || p2 != msgsender_MSG) && from_s453 == to_s453) && tokens_s453 <= balances_DiceToken[this][from_s453]) && tokens_s453 <= allowed_DiceToken[this][from_s453][msgsender_MSG]) && tokens_s453 >= 0) && tokens_s453 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_DiceToken[this][to_s453] >= 0) && balances_DiceToken[this][to_s453] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_DiceToken[this][from_s453] >= 0) && balances_DiceToken[this][from_s453] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_DiceToken[this][from_s453][msgsender_MSG] >= 0) && allowed_DiceToken[this][from_s453][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_DiceToken0 := true;
[L3]                 call_transferFrom_DiceToken0 := false;
[L3]                 revert := revert_hold;
[L301]               havoc __exception;
[L302]               revert := false;
[L303]   COND TRUE   __exception
[L304]               __tmp__Balance := Balance;
[L305]               __tmp__DType := DType;
[L306]               __tmp__Alloc := Alloc;
[L307]               __tmp__balance_ADDR := balance_ADDR;
[L308]               __tmp__M_Ref_int := M_Ref_int;
[L309]               __tmp__sum_balances0 := sum_balances0;
[L310]               __tmp__alloc_allowed_DiceToken_lvl0 := alloc_allowed_DiceToken_lvl0;
[L311]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L312]               __tmp__sum_allowed1 := sum_allowed1;
[L313]               __tmp__Length := Length;
[L314]               __tmp__now := now;
[L315]               __tmp__owner_Owned := owner_Owned;
[L316]               __tmp__newOwner_Owned := newOwner_Owned;
[L317]               __tmp__symbol_DiceToken := symbol_DiceToken;
[L318]               __tmp__name_DiceToken := name_DiceToken;
[L319]               __tmp__decimals_DiceToken := decimals_DiceToken;
[L320]               __tmp___totalSupply_DiceToken := _totalSupply_DiceToken;
[L321]               __tmp__balances_DiceToken := balances_DiceToken;
[L322]               __tmp__allowed_DiceToken := allowed_DiceToken;
[L323]   CALL        call success_s453 := transferFrom~address~address~uint256_DiceToken__fail(this, msgsender_MSG, msgvalue_MSG, from_s453, to_s453, tokens_s453);
[L750]   CALL        call __var_4 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __tmp__balances_DiceToken[this][from_s453], tokens_s453);
[L637]   COND FALSE  !(!(b_s45 <= a_s45))
[L641]               c_s45 := (a_s45 - b_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L750]   RET         call __var_4 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __tmp__balances_DiceToken[this][from_s453], tokens_s453);
[L751]   COND FALSE  !(revert)
[L754]               __tmp__sum_balances0[this] := __tmp__sum_balances0[this] - __tmp__balances_DiceToken[this][from_s453];
[L755]               __tmp__balances_DiceToken[this][from_s453] := __var_4;
[L756]               __tmp__sum_balances0[this] := __tmp__sum_balances0[this] + __tmp__balances_DiceToken[this][from_s453];
[L757]   CALL        call __var_5 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __tmp__allowed_DiceToken[this][from_s453][msgsender_MSG], tokens_s453);
[L637]   COND FALSE  !(!(b_s45 <= a_s45))
[L641]               c_s45 := (a_s45 - b_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L757]   RET         call __var_5 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __tmp__allowed_DiceToken[this][from_s453][msgsender_MSG], tokens_s453);
[L758]   COND FALSE  !(revert)
[L761]               __tmp__sum_allowed1[from_s453] := __tmp__sum_allowed1[from_s453] - __tmp__allowed_DiceToken[this][from_s453][msgsender_MSG];
[L762]               __tmp__allowed_DiceToken[this][from_s453][msgsender_MSG] := __var_5;
[L763]               __tmp__sum_allowed1[from_s453] := __tmp__sum_allowed1[from_s453] + __tmp__allowed_DiceToken[this][from_s453][msgsender_MSG];
[L764]   CALL        call __var_6 := add~uint256~uint256_SafeMath__fail(this, this, 0, __tmp__balances_DiceToken[this][to_s453], tokens_s453);
[L619]               c_s23 := (a_s23 + b_s23) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L620]   COND FALSE  !(!(c_s23 >= a_s23))
[L764]   RET         call __var_6 := add~uint256~uint256_SafeMath__fail(this, this, 0, __tmp__balances_DiceToken[this][to_s453], tokens_s453);
[L765]   COND FALSE  !(revert)
[L768]               __tmp__sum_balances0[this] := __tmp__sum_balances0[this] - __tmp__balances_DiceToken[this][to_s453];
[L769]               __tmp__balances_DiceToken[this][to_s453] := __var_6;
[L770]               __tmp__sum_balances0[this] := __tmp__sum_balances0[this] + __tmp__balances_DiceToken[this][to_s453];
[L771]               success_s453 := true;
[L323]   RET         call success_s453 := transferFrom~address~address~uint256_DiceToken__fail(this, msgsender_MSG, msgvalue_MSG, from_s453, to_s453, tokens_s453);
[L324]               assume revert || gas < 0;
[L1461]  RET         call success_s453 := transferFrom~address~address~uint256_DiceToken(this, msgsender_MSG, msgvalue_MSG, from_s453, to_s453, tokens_s453);
[L1476]  RET         call CorralChoice_DiceToken(this);

Loop:
[L1476]        assume true;

[2020-11-24 18:28:57,815 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 18:28:57,815 INFO  L82        PathProgramCache]: Analyzing trace with hash -1386030153, now seen corresponding path program 1 times
[2020-11-24 18:28:57,815 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 18:28:57,820 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 18:28:57,833 INFO  L134       CoverageAnalysis]: Checked inductivity of 4 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 4 trivial. 0 not checked.
[2020-11-24 18:28:57,834 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 18:28:57,834 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [5] imperfect sequences [] total 5
[2020-11-24 18:28:57,834 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 18:28:57,834 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 5 interpolants.
[2020-11-24 18:28:57,834 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=7, Invalid=13, Unknown=0, NotChecked=0, Total=20
[2020-11-24 18:28:57,834 INFO  L87              Difference]: Start difference. First operand 139 states and 140 transitions. cyclomatic complexity: 2 Second operand 5 states.
[2020-11-24 18:28:57,841 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 18:28:57,841 INFO  L93              Difference]: Finished difference Result 132 states and 132 transitions.
[2020-11-24 18:28:57,841 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 5 states. 
[2020-11-24 18:28:57,841 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 132 states and 132 transitions.
[2020-11-24 18:28:57,842 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-24 18:28:57,842 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 132 states to 0 states and 0 transitions.
[2020-11-24 18:28:57,842 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 0
[2020-11-24 18:28:57,842 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 0
[2020-11-24 18:28:57,842 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 0 states and 0 transitions.
[2020-11-24 18:28:57,842 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 18:28:57,842 INFO  L728         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-24 18:28:57,842 INFO  L751         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-24 18:28:57,843 INFO  L631         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-24 18:28:57,843 INFO  L445         BuchiCegarLoop]: ======== Iteration 9============
[2020-11-24 18:28:57,843 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 0 states and 0 transitions.
[2020-11-24 18:28:57,843 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-24 18:28:57,843 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is true
[2020-11-24 18:28:57,846 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 24.11 06:28:57 BasicIcfg
[2020-11-24 18:28:57,846 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-24 18:28:57,846 INFO  L168              Benchmark]: Toolchain (without parser) took 3727.71 ms. Allocated memory was 1.0 GB in the beginning and 1.3 GB in the end (delta: 290.5 MB). Free memory was 945.9 MB in the beginning and 947.5 MB in the end (delta: -1.5 MB). Peak memory consumption was 288.9 MB. Max. memory is 15.3 GB.
[2020-11-24 18:28:57,847 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.16 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-24 18:28:57,847 INFO  L168              Benchmark]: Boogie Preprocessor took 75.29 ms. Allocated memory is still 1.0 GB. Free memory is still 945.9 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-24 18:28:57,847 INFO  L168              Benchmark]: UtopiaSpecLang took 50.56 ms. Allocated memory is still 1.0 GB. Free memory was 945.9 MB in the beginning and 940.6 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-24 18:28:57,848 INFO  L168              Benchmark]: Boogie Printer took 8.65 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 935.2 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-24 18:28:57,848 INFO  L168              Benchmark]: RCFGBuilder took 472.57 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 897.6 MB in the end (delta: 37.6 MB). Peak memory consumption was 37.6 MB. Max. memory is 15.3 GB.
[2020-11-24 18:28:57,848 INFO  L168              Benchmark]: UtopiaLTL2Aut took 39.48 ms. Allocated memory is still 1.0 GB. Free memory was 897.6 MB in the beginning and 888.7 MB in the end (delta: 8.9 MB). Peak memory consumption was 8.9 MB. Max. memory is 15.3 GB.
[2020-11-24 18:28:57,848 INFO  L168              Benchmark]: BÃ¼chi Program Product took 807.94 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 54.0 MB). Free memory was 888.7 MB in the beginning and 1.0 GB in the end (delta: -124.2 MB). Peak memory consumption was 170.2 MB. Max. memory is 15.3 GB.
[2020-11-24 18:28:57,849 INFO  L168              Benchmark]: BlockEncodingV2 took 63.12 ms. Allocated memory is still 1.1 GB. Free memory was 1.0 GB in the beginning and 986.9 MB in the end (delta: 26.0 MB). Peak memory consumption was 26.0 MB. Max. memory is 15.3 GB.
[2020-11-24 18:28:57,849 INFO  L168              Benchmark]: BuchiAutomizer took 2207.13 ms. Allocated memory was 1.1 GB in the beginning and 1.3 GB in the end (delta: 236.5 MB). Free memory was 980.8 MB in the beginning and 947.5 MB in the end (delta: 33.3 MB). Peak memory consumption was 269.7 MB. Max. memory is 15.3 GB.
[2020-11-24 18:28:57,851 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    1216 locations, 2022 edges
  - StatisticsResult: Encoded RCFG
    1190 locations, 1961 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.16 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 75.29 ms. Allocated memory is still 1.0 GB. Free memory is still 945.9 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 50.56 ms. Allocated memory is still 1.0 GB. Free memory was 945.9 MB in the beginning and 940.6 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 8.65 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 935.2 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * RCFGBuilder took 472.57 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 897.6 MB in the end (delta: 37.6 MB). Peak memory consumption was 37.6 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 39.48 ms. Allocated memory is still 1.0 GB. Free memory was 897.6 MB in the beginning and 888.7 MB in the end (delta: 8.9 MB). Peak memory consumption was 8.9 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 807.94 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 54.0 MB). Free memory was 888.7 MB in the beginning and 1.0 GB in the end (delta: -124.2 MB). Peak memory consumption was 170.2 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 63.12 ms. Allocated memory is still 1.1 GB. Free memory was 1.0 GB in the beginning and 986.9 MB in the end (delta: 26.0 MB). Peak memory consumption was 26.0 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 2207.13 ms. Allocated memory was 1.1 GB in the beginning and 1.3 GB in the end (delta: 236.5 MB). Free memory was 980.8 MB in the beginning and 947.5 MB in the end (delta: 33.3 MB). Peak memory consumption was 269.7 MB. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    524 locations, 627 edges
  - StatisticsResult: BuchiProgram size
    1216 locations, 2022 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 8 terminating modules (8 trivial, 0 deterministic, 0 nondeterministic). 8 modules have a trivial ranking function, the largest among these consists of 19 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 2.1s and 9 iterations.  TraceHistogramMax:2. Analysis of lassos took 1.0s. Construction of modules took 0.4s. BÃ¼chi inclusion checks took 0.4s. Highest rank in rank-based complementation 0. Minimization of det autom 8. Minimization of nondet autom 0. Automata minimization 0.0s AutomataMinimizationTime, 7 MinimizatonAttempts, 35 StatesRemovedByMinimization, 3 NontrivialMinimizations. Non-live state removal took 0.0s Buchi closure took 0.0s. Biggest automaton had 192 states and ocurred in iteration 2.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 1740 SDtfs, 1561 SDslu, 3513 SDs, 0 SdLazy, 1812 SolverSat, 493 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 0.4s Time	LassoAnalysisResults: nont0 unkn0 SFLI0 SFLT0 conc0 concLT0 SILN0 SILU8 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - AllSpecificationsHoldResult: All specifications hold
    Buchi Automizer proved that the LTL property ! ( ( []( (call_transferFrom_DiceToken0) ==> ( <>(success_transferFrom_DiceToken0) ) ) )) holds
RESULT: Ultimate proved your program to be correct!
Received shutdown request...
