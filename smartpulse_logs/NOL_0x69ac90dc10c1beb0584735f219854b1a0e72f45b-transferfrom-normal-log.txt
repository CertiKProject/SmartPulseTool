This is Ultimate 0.1.24-f1553f5-m
[2020-11-24 15:50:37,374 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-24 15:50:37,376 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-24 15:50:37,386 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-24 15:50:37,387 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-24 15:50:37,387 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-24 15:50:37,388 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-24 15:50:37,390 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-24 15:50:37,391 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-24 15:50:37,392 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-24 15:50:37,393 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-24 15:50:37,393 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-24 15:50:37,394 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-24 15:50:37,395 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-24 15:50:37,395 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-24 15:50:37,396 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-24 15:50:37,396 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-24 15:50:37,398 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-24 15:50:37,400 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-24 15:50:37,403 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-24 15:50:37,404 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-24 15:50:37,406 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-24 15:50:37,410 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-24 15:50:37,410 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-24 15:50:37,410 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-24 15:50:37,412 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-24 15:50:37,412 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-24 15:50:37,413 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-24 15:50:37,413 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-24 15:50:37,413 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-24 15:50:37,413 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-24 15:50:37,414 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-24 15:50:37,414 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-24 15:50:37,415 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-24 15:50:37,415 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-24 15:50:37,416 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-24 15:50:37,416 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-24 15:50:37,416 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-24 15:50:37,416 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-24 15:50:37,417 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-24 15:50:37,418 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-24 15:50:37,418 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-24 15:50:37,425 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-24 15:50:37,425 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-24 15:50:37,426 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-24 15:50:37,426 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-24 15:50:37,426 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-24 15:50:37,427 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-24 15:50:37,427 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-24 15:50:37,427 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-24 15:50:37,427 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-24 15:50:37,427 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-24 15:50:37,427 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-24 15:50:37,427 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-24 15:50:37,427 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-24 15:50:37,427 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-24 15:50:37,428 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-24 15:50:37,428 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-24 15:50:37,428 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-24 15:50:37,428 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-24 15:50:37,428 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-24 15:50:37,428 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-24 15:50:37,428 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-24 15:50:37,428 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-24 15:50:37,428 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-24 15:50:37,428 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-24 15:50:37,429 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-24 15:50:37,429 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-24 15:50:37,450 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-24 15:50:37,461 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-24 15:50:37,464 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-24 15:50:37,465 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-24 15:50:37,465 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-24 15:50:37,466 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/NOL_0x69ac90dc10c1beb0584735f219854b1a0e72f45b_transferfrom-normal.bpl
[2020-11-24 15:50:37,466 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/NOL_0x69ac90dc10c1beb0584735f219854b1a0e72f45b_transferfrom-normal.bpl'
[2020-11-24 15:50:37,524 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-24 15:50:37,525 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-24 15:50:37,525 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-24 15:50:37,525 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-24 15:50:37,525 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-24 15:50:37,541 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "NOL_0x69ac90dc10c1beb0584735f219854b1a0e72f45b_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 03:50:37" (1/1) ...
[2020-11-24 15:50:37,542 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "NOL_0x69ac90dc10c1beb0584735f219854b1a0e72f45b_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 03:50:37" (1/1) ...
[2020-11-24 15:50:37,564 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "NOL_0x69ac90dc10c1beb0584735f219854b1a0e72f45b_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 03:50:37" (1/1) ...
[2020-11-24 15:50:37,565 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "NOL_0x69ac90dc10c1beb0584735f219854b1a0e72f45b_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 03:50:37" (1/1) ...
[2020-11-24 15:50:37,579 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "NOL_0x69ac90dc10c1beb0584735f219854b1a0e72f45b_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 03:50:37" (1/1) ...
[2020-11-24 15:50:37,587 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "NOL_0x69ac90dc10c1beb0584735f219854b1a0e72f45b_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 03:50:37" (1/1) ...
[2020-11-24 15:50:37,591 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "NOL_0x69ac90dc10c1beb0584735f219854b1a0e72f45b_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 03:50:37" (1/1) ...
[2020-11-24 15:50:37,597 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-24 15:50:37,598 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-24 15:50:37,598 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-24 15:50:37,600 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-24 15:50:37,603 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "NOL_0x69ac90dc10c1beb0584735f219854b1a0e72f45b_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 03:50:37" (1/1) ...
[2020-11-24 15:50:37,617 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(TokenERC20.transferFrom(from, to, value), p1 != from && p1 != to && (p2 != from || p3 != msg.sender) && from != to && value <= balanceOf_TokenERC20[this][from] && value <= allowance_TokenERC20[this][from][msg.sender] && balanceOf_TokenERC20[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_TokenERC20[this][to] >= 0 && balanceOf_TokenERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_TokenERC20[this][from] >= 0 &&  balanceOf_TokenERC20[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && allowance_TokenERC20[this][from][msg.sender] >= 0 && allowance_TokenERC20[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(TokenERC20.transferFrom(from, to, value), return == true && balanceOf_TokenERC20[this][from] == old(balanceOf_TokenERC20[this][from]) - value && balanceOf_TokenERC20[this][to] == old(balanceOf_TokenERC20[this][to]) + value && allowance_TokenERC20[this][from][msg.sender] == old(allowance_TokenERC20[this][from][msg.sender]) - value && totalSupply_TokenERC20[this] == old(totalSupply_TokenERC20[this]) && balanceOf_TokenERC20[this][p1] == old(balanceOf_TokenERC20[this][p1]) && allowance_TokenERC20[this][p2][p3] == old(allowance_TokenERC20[this][p2][p3]) && sellPrice_NOL[this] == old(sellPrice_NOL[this]) && buyPrice_NOL[this] == old(buyPrice_NOL[this]) && frozenAccount_NOL[this] == old(frozenAccount_NOL[this]) && name_TokenERC20[this] == old(name_TokenERC20[this]) && symbol_TokenERC20[this] == old(symbol_TokenERC20[this]) && decimals_TokenERC20[this] == old(decimals_TokenERC20[this]) && owner_owned[this] == old(owner_owned[this]))))
[2020-11-24 15:50:37,623 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(TokenERC20.transferFrom(from, to, value), p1 != from && p1 != to && (p2 != from || p3 != msg.sender) && from != to && value <= balanceOf_TokenERC20[this][from] && value <= allowance_TokenERC20[this][from][msg.sender] && balanceOf_TokenERC20[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_TokenERC20[this][to] >= 0 && balanceOf_TokenERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_TokenERC20[this][from] >= 0 &&  balanceOf_TokenERC20[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && allowance_TokenERC20[this][from][msg.sender] >= 0 && allowance_TokenERC20[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(TokenERC20.transferFrom(from, to, value), return == true && balanceOf_TokenERC20[this][from] == old(balanceOf_TokenERC20[this][from]) - value && balanceOf_TokenERC20[this][to] == old(balanceOf_TokenERC20[this][to]) + value && allowance_TokenERC20[this][from][msg.sender] == old(allowance_TokenERC20[this][from][msg.sender]) - value && totalSupply_TokenERC20[this] == old(totalSupply_TokenERC20[this]) && balanceOf_TokenERC20[this][p1] == old(balanceOf_TokenERC20[this][p1]) && allowance_TokenERC20[this][p2][p3] == old(allowance_TokenERC20[this][p2][p3]) && sellPrice_NOL[this] == old(sellPrice_NOL[this]) && buyPrice_NOL[this] == old(buyPrice_NOL[this]) && frozenAccount_NOL[this] == old(frozenAccount_NOL[this]) && name_TokenERC20[this] == old(name_TokenERC20[this]) && symbol_TokenERC20[this] == old(symbol_TokenERC20[this]) && decimals_TokenERC20[this] == old(decimals_TokenERC20[this]) && owner_owned[this] == old(owner_owned[this]))))
[2020-11-24 15:50:37,631 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(TokenERC20.transferFrom(from, to, value), p1 != from && p1 != to && (p2 != from || p3 != msg.sender) && from != to && value <= balanceOf_TokenERC20[this][from] && value <= allowance_TokenERC20[this][from][msg.sender] && balanceOf_TokenERC20[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_TokenERC20[this][to] >= 0 && balanceOf_TokenERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_TokenERC20[this][from] >= 0 &&  balanceOf_TokenERC20[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && allowance_TokenERC20[this][from][msg.sender] >= 0 && allowance_TokenERC20[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(TokenERC20.transferFrom(from, to, value), return == true && balanceOf_TokenERC20[this][from] == old(balanceOf_TokenERC20[this][from]) - value && balanceOf_TokenERC20[this][to] == old(balanceOf_TokenERC20[this][to]) + value && allowance_TokenERC20[this][from][msg.sender] == old(allowance_TokenERC20[this][from][msg.sender]) - value && totalSupply_TokenERC20[this] == old(totalSupply_TokenERC20[this]) && balanceOf_TokenERC20[this][p1] == old(balanceOf_TokenERC20[this][p1]) && allowance_TokenERC20[this][p2][p3] == old(allowance_TokenERC20[this][p2][p3]) && sellPrice_NOL[this] == old(sellPrice_NOL[this]) && buyPrice_NOL[this] == old(buyPrice_NOL[this]) && frozenAccount_NOL[this] == old(frozenAccount_NOL[this]) && name_TokenERC20[this] == old(name_TokenERC20[this]) && symbol_TokenERC20[this] == old(symbol_TokenERC20[this]) && decimals_TokenERC20[this] == old(decimals_TokenERC20[this]) && owner_owned[this] == old(owner_owned[this]))))
[2020-11-24 15:50:37,637 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( ( ( ( ( ( ( p1!=_from_s261 && p1!=_to_s261 ) && ( p2!=_from_s261 || p3!=msg.sender ) ) && _from_s261!=_to_s261 ) && _value_s261<=balanceOf_TokenERC20[this][_from_s261] ) && _value_s261<=allowance_TokenERC20[this][_from_s261][msg.sender] ) && ( balanceOf_TokenERC20[this][_to_s261] + _value_s261 )<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && _value_s261>=0 ) && _value_s261<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && balanceOf_TokenERC20[this][_to_s261]>=0 ) && balanceOf_TokenERC20[this][_to_s261]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && balanceOf_TokenERC20[this][_from_s261]>=0 ) && balanceOf_TokenERC20[this][_from_s261]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && allowance_TokenERC20[this][_from_s261][msg.sender]>=0 ) && allowance_TokenERC20[this][_from_s261][msg.sender]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPNEQ,IdentifierExpression[p1,GLOBAL],IdentifierExpression[_from_s261,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]],BinaryExpression[COMPNEQ,IdentifierExpression[p1,GLOBAL],IdentifierExpression[_to_s261,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],BinaryExpression[LOGICOR,BinaryExpression[COMPNEQ,IdentifierExpression[p2,GLOBAL],IdentifierExpression[_from_s261,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]],BinaryExpression[COMPNEQ,IdentifierExpression[p3,GLOBAL],IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]]],BinaryExpression[COMPNEQ,IdentifierExpression[_from_s261,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>],IdentifierExpression[_to_s261,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],BinaryExpression[COMPLEQ,IdentifierExpression[_value_s261,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>],ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],[IdentifierExpression[_from_s261,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]]]],BinaryExpression[COMPLEQ,IdentifierExpression[_value_s261,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>],ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowance_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],[IdentifierExpression[_from_s261,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]]]],BinaryExpression[COMPLT,BinaryExpression[ARITHPLUS,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],[IdentifierExpression[_to_s261,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],IdentifierExpression[_value_s261,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,IdentifierExpression[_value_s261,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>],IntegerLiteral[0]]],BinaryExpression[COMPLT,IdentifierExpression[_value_s261,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],[IdentifierExpression[_to_s261,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],[IdentifierExpression[_to_s261,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],[IdentifierExpression[_from_s261,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],[IdentifierExpression[_from_s261,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowance_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],[IdentifierExpression[_from_s261,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowance_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],[IdentifierExpression[_from_s261,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]]
[2020-11-24 15:50:37,641 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( ( ( ( ( ( success_s261==true && balanceOf_TokenERC20[this][_from_s261]==( ( old(balanceOf_TokenERC20[this][_from_s261]) ) - _value_s261 ) ) && balanceOf_TokenERC20[this][_to_s261]==( ( old(balanceOf_TokenERC20[this][_to_s261]) ) + _value_s261 ) ) && allowance_TokenERC20[this][_from_s261][msg.sender]==( ( old(allowance_TokenERC20[this][_from_s261][msg.sender]) ) - _value_s261 ) ) && totalSupply_TokenERC20[this]==( old(totalSupply_TokenERC20[this]) ) ) && balanceOf_TokenERC20[this][p1]==( old(balanceOf_TokenERC20[this][p1]) ) ) && allowance_TokenERC20[this][p2][p3]==( old(allowance_TokenERC20[this][p2][p3]) ) ) && sellPrice_NOL[this]==( old(sellPrice_NOL[this]) ) ) && buyPrice_NOL[this]==( old(buyPrice_NOL[this]) ) ) && frozenAccount_NOL[this]==( old(frozenAccount_NOL[this]) ) ) && name_TokenERC20[this]==( old(name_TokenERC20[this]) ) ) && symbol_TokenERC20[this]==( old(symbol_TokenERC20[this]) ) ) && decimals_TokenERC20[this]==( old(decimals_TokenERC20[this]) ) ) && owner_owned[this]==( old(owner_owned[this]) ) ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[success_s261,<IMPLEMENTATION_OUTPARAM,transferFrom~address~address~uint256_TokenERC20>],BooleanLiteral[true]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],[IdentifierExpression[_from_s261,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],BinaryExpression[ARITHMINUS,UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],[IdentifierExpression[_from_s261,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]]],IdentifierExpression[_value_s261,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],[IdentifierExpression[_to_s261,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],BinaryExpression[ARITHPLUS,UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],[IdentifierExpression[_to_s261,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]]],IdentifierExpression[_value_s261,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowance_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],[IdentifierExpression[_from_s261,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],BinaryExpression[ARITHMINUS,UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowance_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],[IdentifierExpression[_from_s261,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]]],IdentifierExpression[_value_s261,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[totalSupply_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[totalSupply_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],[IdentifierExpression[p1,GLOBAL]]],UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],[IdentifierExpression[p1,GLOBAL]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowance_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],[IdentifierExpression[p2,GLOBAL]]],[IdentifierExpression[p3,GLOBAL]]],UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowance_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],[IdentifierExpression[p2,GLOBAL]]],[IdentifierExpression[p3,GLOBAL]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[sellPrice_NOL,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[sellPrice_NOL,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[buyPrice_NOL,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[buyPrice_NOL,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[frozenAccount_NOL,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[frozenAccount_NOL,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[name_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[name_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[symbol_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[symbol_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[decimals_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[decimals_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[owner_owned,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[owner_owned,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]]]]]
[2020-11-24 15:50:37,644 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(TokenERC20.transferFrom(from, to, value), p1 != from && p1 != to && (p2 != from || p3 != msg.sender) && from != to && value <= balanceOf_TokenERC20[this][from] && value <= allowance_TokenERC20[this][from][msg.sender] && balanceOf_TokenERC20[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_TokenERC20[this][to] >= 0 && balanceOf_TokenERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_TokenERC20[this][from] >= 0 &&  balanceOf_TokenERC20[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && allowance_TokenERC20[this][from][msg.sender] >= 0 && allowance_TokenERC20[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(TokenERC20.transferFrom(from, to, value), return == true && balanceOf_TokenERC20[this][from] == old(balanceOf_TokenERC20[this][from]) - value && balanceOf_TokenERC20[this][to] == old(balanceOf_TokenERC20[this][to]) + value && allowance_TokenERC20[this][from][msg.sender] == old(allowance_TokenERC20[this][from][msg.sender]) - value && totalSupply_TokenERC20[this] == old(totalSupply_TokenERC20[this]) && balanceOf_TokenERC20[this][p1] == old(balanceOf_TokenERC20[this][p1]) && allowance_TokenERC20[this][p2][p3] == old(allowance_TokenERC20[this][p2][p3]) && sellPrice_NOL[this] == old(sellPrice_NOL[this]) && buyPrice_NOL[this] == old(buyPrice_NOL[this]) && frozenAccount_NOL[this] == old(frozenAccount_NOL[this]) && name_TokenERC20[this] == old(name_TokenERC20[this]) && symbol_TokenERC20[this] == old(symbol_TokenERC20[this]) && decimals_TokenERC20[this] == old(decimals_TokenERC20[this]) && owner_owned[this] == old(owner_owned[this]))))
[2020-11-24 15:50:37,644 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_transferFrom_TokenERC200) ==> ( <>AP(success_transferFrom_TokenERC200) ) ) )
Executed UtopiaSpecLang
[2020-11-24 15:50:37,650 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 03:50:37 PropertyContainer
[2020-11-24 15:50:37,650 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-24 15:50:37,650 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-24 15:50:37,650 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-24 15:50:37,651 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-24 15:50:37,651 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "NOL_0x69ac90dc10c1beb0584735f219854b1a0e72f45b_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 03:50:37" (1/2) ...
[2020-11-24 15:50:37,652 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-24 15:50:37,652 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-24 15:50:37,660 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 03:50:37" (2/2) ...
[2020-11-24 15:50:37,661 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-24 15:50:37,661 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-24 15:50:37,661 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-24 15:50:37,661 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-24 15:50:37,662 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "NOL_0x69ac90dc10c1beb0584735f219854b1a0e72f45b_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 03:50:37" (1/2) ...
[2020-11-24 15:50:37,716 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-24 15:50:37,717 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_TokenERC20__success
[2020-11-24 15:50:37,717 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_TokenERC20
[2020-11-24 15:50:37,717 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_TokenERC20
[2020-11-24 15:50:37,717 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_TokenERC20
[2020-11-24 15:50:37,717 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_TokenERC20
[2020-11-24 15:50:37,717 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_TokenERC20
[2020-11-24 15:50:37,717 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_TokenERC20
[2020-11-24 15:50:37,717 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_TokenERC20
[2020-11-24 15:50:37,717 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_TokenERC20
[2020-11-24 15:50:37,717 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_TokenERC20
[2020-11-24 15:50:37,718 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_TokenERC20
[2020-11-24 15:50:37,718 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_TokenERC20
[2020-11-24 15:50:37,718 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_TokenERC20
[2020-11-24 15:50:37,718 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_NOL__success
[2020-11-24 15:50:37,718 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-24 15:50:37,718 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-24 15:50:37,718 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-24 15:50:37,718 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__success
[2020-11-24 15:50:37,718 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_owned
[2020-11-24 15:50:37,721 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_owned
[2020-11-24 15:50:37,721 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_tokenRecipient
[2020-11-24 15:50:37,721 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_tokenRecipient
[2020-11-24 15:50:37,722 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_TokenERC20
[2020-11-24 15:50:37,722 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_TokenERC20
[2020-11-24 15:50:37,722 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_NOL
[2020-11-24 15:50:37,722 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-24 15:50:37,722 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-24 15:50:37,722 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_TokenERC20__fail
[2020-11-24 15:50:37,722 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_TokenERC20__success
[2020-11-24 15:50:37,722 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_TokenERC20__fail
[2020-11-24 15:50:37,722 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_TokenERC20__success
[2020-11-24 15:50:37,722 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_TokenERC20__fail
[2020-11-24 15:50:37,722 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_TokenERC20__success
[2020-11-24 15:50:37,723 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_TokenERC20__fail
[2020-11-24 15:50:37,723 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_TokenERC20__success
[2020-11-24 15:50:37,723 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_TokenERC20__fail
[2020-11-24 15:50:37,723 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_TokenERC20__success
[2020-11-24 15:50:37,723 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_TokenERC20__fail
[2020-11-24 15:50:37,723 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_TokenERC20__success
[2020-11-24 15:50:37,723 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_TokenERC20__fail
[2020-11-24 15:50:37,723 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_NOL__fail
[2020-11-24 15:50:37,723 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-24 15:50:37,723 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-24 15:50:37,723 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-24 15:50:37,723 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__fail
[2020-11-24 15:50:37,723 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-24 15:50:37,724 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-24 15:50:37,724 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_TokenERC20__fail
[2020-11-24 15:50:37,724 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_TokenERC20__success
[2020-11-24 15:50:37,724 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_TokenERC20__fail
[2020-11-24 15:50:37,724 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_TokenERC20__success
[2020-11-24 15:50:37,724 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_TokenERC20__fail
[2020-11-24 15:50:37,724 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_TokenERC20__success
[2020-11-24 15:50:37,724 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_TokenERC20__fail
[2020-11-24 15:50:37,724 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_TokenERC20__success
[2020-11-24 15:50:37,724 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_TokenERC20__fail
[2020-11-24 15:50:37,724 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_TokenERC20__success
[2020-11-24 15:50:37,724 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_TokenERC20__fail
[2020-11-24 15:50:37,724 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_TokenERC20__success
[2020-11-24 15:50:37,724 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_TokenERC20__fail
[2020-11-24 15:50:37,725 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_TokenERC20__success
[2020-11-24 15:50:37,725 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_NOL__fail
[2020-11-24 15:50:37,725 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_NOL__success
[2020-11-24 15:50:37,725 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-24 15:50:37,725 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-24 15:50:37,725 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-24 15:50:37,725 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-24 15:50:37,725 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-24 15:50:37,725 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-24 15:50:37,725 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__fail
[2020-11-24 15:50:37,725 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__success
[2020-11-24 15:50:37,725 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_owned
[2020-11-24 15:50:37,725 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_owned
[2020-11-24 15:50:37,726 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_tokenRecipient
[2020-11-24 15:50:37,726 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_tokenRecipient
[2020-11-24 15:50:37,726 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_TokenERC20
[2020-11-24 15:50:37,726 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_TokenERC20
[2020-11-24 15:50:37,726 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_NOL
[2020-11-24 15:50:37,726 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-24 15:50:37,726 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-24 15:50:37,726 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-24 15:50:37,886 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 15:50:38,065 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 15:50:38,065 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 15:50:38,065 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 15:50:38,241 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-24 15:50:38,241 INFO  L286             CfgBuilder]: Removed 4 assue(true) statements.
[2020-11-24 15:50:38,242 INFO  L202        PluginConnector]: Adding new model NOL_0x69ac90dc10c1beb0584735f219854b1a0e72f45b_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 03:50:38 BoogieIcfgContainer
[2020-11-24 15:50:38,243 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 03:50:37" (2/2) ...
[2020-11-24 15:50:38,243 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-24 15:50:38,243 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@7730df20 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 03:50:38, skipping insertion in model container
[2020-11-24 15:50:38,243 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-24 15:50:38,243 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-24 15:50:38,244 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-24 15:50:38,245 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-24 15:50:38,245 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "NOL_0x69ac90dc10c1beb0584735f219854b1a0e72f45b_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 03:50:37" (1/3) ...
[2020-11-24 15:50:38,246 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@2bc2cd75 and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 03:50:38, skipping insertion in model container
[2020-11-24 15:50:38,246 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 03:50:37" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-24 15:50:38,283 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 03:50:38 NWAContainer
[2020-11-24 15:50:38,283 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-24 15:50:38,283 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-24 15:50:38,283 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-24 15:50:38,284 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-24 15:50:38,285 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "NOL_0x69ac90dc10c1beb0584735f219854b1a0e72f45b_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 03:50:38" (3/4) ...
[2020-11-24 15:50:38,285 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@1ed47b0f and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 03:50:38, skipping insertion in model container
[2020-11-24 15:50:38,286 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 03:50:38" (4/4) ...
[2020-11-24 15:50:38,289 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-24 15:50:38,291 INFO  L110   BuchiProductObserver]: Initial RCFG 671 locations, 838 edges
[2020-11-24 15:50:38,292 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-24 15:50:38,302 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-24 15:50:39,241 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-24 15:50:39,243 INFO  L110   BuchiProductObserver]: BuchiProgram size 1550 locations, 2702 edges
[2020-11-24 15:50:39,243 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 03:50:39 BoogieIcfgContainer
[2020-11-24 15:50:39,243 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-24 15:50:39,244 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-24 15:50:39,244 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-24 15:50:39,245 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-24 15:50:39,245 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 03:50:39" (1/1) ...
[2020-11-24 15:50:39,284 INFO  L313           BlockEncoder]: Initial Icfg 1550 locations, 2702 edges
[2020-11-24 15:50:39,284 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-24 15:50:39,284 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-24 15:50:39,285 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-24 15:50:39,285 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-24 15:50:39,291 INFO  L70    emoveInfeasibleEdges]: Removed 51 edges and 11 locations because of local infeasibility
[2020-11-24 15:50:39,295 INFO  L70        RemoveSinkStates]: Removed 14 edges and 9 locations by removing sink states
[2020-11-24 15:50:39,302 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-24 15:50:39,304 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-24 15:50:39,306 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-24 15:50:39,306 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-24 15:50:39,309 INFO  L313           BlockEncoder]: Encoded RCFG 1516 locations, 2617 edges
[2020-11-24 15:50:39,309 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 24.11 03:50:39 BasicIcfg
[2020-11-24 15:50:39,309 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-24 15:50:39,310 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-24 15:50:39,310 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-24 15:50:39,312 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-24 15:50:39,313 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 15:50:39,313 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "NOL_0x69ac90dc10c1beb0584735f219854b1a0e72f45b_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 03:50:37" (1/6) ...
[2020-11-24 15:50:39,314 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@2d737879 and model type NOL_0x69ac90dc10c1beb0584735f219854b1a0e72f45b_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 24.11 03:50:39, skipping insertion in model container
[2020-11-24 15:50:39,314 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 15:50:39,314 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 03:50:37" (2/6) ...
[2020-11-24 15:50:39,314 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@2d737879 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 24.11 03:50:39, skipping insertion in model container
[2020-11-24 15:50:39,314 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 15:50:39,314 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "NOL_0x69ac90dc10c1beb0584735f219854b1a0e72f45b_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 03:50:38" (3/6) ...
[2020-11-24 15:50:39,315 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@2d737879 and model type NOL_0x69ac90dc10c1beb0584735f219854b1a0e72f45b_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 24.11 03:50:39, skipping insertion in model container
[2020-11-24 15:50:39,315 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 15:50:39,315 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 03:50:38" (4/6) ...
[2020-11-24 15:50:39,315 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@2d737879 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 24.11 03:50:39, skipping insertion in model container
[2020-11-24 15:50:39,315 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 15:50:39,315 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 03:50:39" (5/6) ...
[2020-11-24 15:50:39,316 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@2d737879 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 24.11 03:50:39, skipping insertion in model container
[2020-11-24 15:50:39,316 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 15:50:39,316 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 24.11 03:50:39" (6/6) ...
[2020-11-24 15:50:39,317 INFO  L404   chiAutomizerObserver]: Analyzing ICFG NOL_0x69ac90dc10c1beb0584735f219854b1a0e72f45b_transferfrom-normal.bpl_BEv2
[2020-11-24 15:50:39,353 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-24 15:50:39,353 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-24 15:50:39,353 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-24 15:50:39,353 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-24 15:50:39,353 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-24 15:50:39,353 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-24 15:50:39,353 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-24 15:50:39,353 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-24 15:50:39,354 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-24 15:50:39,371 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1516 states.
[2020-11-24 15:50:39,405 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 15:50:39,405 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 15:50:39,405 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 15:50:39,412 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 15:50:39,412 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
[2020-11-24 15:50:39,412 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-24 15:50:39,413 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1516 states.
[2020-11-24 15:50:39,423 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 15:50:39,423 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 15:50:39,423 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 15:50:39,425 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 15:50:39,425 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L3]                 success_transferFrom_TokenERC200 := false;
[L3]                 call_transferFrom_TokenERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p3;
[L3]                 havoc p2;
[L3]                 havoc p1;
[L1941]              assume null == 0;
[L1942]  CALL        call this := FreshRefGenerator__success();
[L748]               havoc newRef;
[L749]               assume Alloc[newRef] == false;
[L750]               Alloc[newRef] := true;
[L751]               assume newRef != null;
[L1942]  RET         call this := FreshRefGenerator__success();
[L1943]              assume now >= 0;
[L1944]              assume DType[this] == NOL;
[L1945]              assume !revert && gas >= 0;
[L1946]  CALL        call CorralChoice_NOL(this);
[L1834]              havoc msgsender_MSG;
[L1835]              havoc msgvalue_MSG;
[L1836]              havoc choice;
[L1837]              havoc __ret_0_owner;
[L1838]              havoc newOwner_s35;
[L1839]              havoc __ret_0_name;
[L1840]              havoc __ret_0_symbol;
[L1841]              havoc __ret_0_decimals;
[L1842]              havoc __ret_0_totalSupply;
[L1843]              havoc arg662_s0;
[L1844]              havoc __ret_0_balanceOf;
[L1845]              havoc arg663_s0;
[L1846]              havoc arg664_s0;
[L1847]              havoc __ret_0_allowance;
[L1848]              havoc initialSupply_s124;
[L1849]              havoc tokenName_s124;
[L1850]              havoc tokenSymbol_s124;
[L1851]              havoc _to_s221;
[L1852]              havoc _value_s221;
[L1853]              havoc success_s221;
[L1854]              havoc _from_s261;
[L1855]              havoc _to_s261;
[L1856]              havoc _value_s261;
[L1857]              havoc success_s261;
[L1858]              havoc _spender_s289;
[L1859]              havoc _value_s289;
[L1860]              havoc success_s289;
[L1861]              havoc _spender_s327;
[L1862]              havoc _value_s327;
[L1863]              havoc _extraData_s327;
[L1864]              havoc success_s327;
[L1865]              havoc _value_s363;
[L1866]              havoc success_s363;
[L1867]              havoc _from_s418;
[L1868]              havoc _value_s418;
[L1869]              havoc success_s418;
[L1870]              havoc __ret_0_sellPrice;
[L1871]              havoc __ret_0_buyPrice;
[L1872]              havoc arg665_s0;
[L1873]              havoc __ret_0_frozenAccount;
[L1874]              havoc initialSupply_s452;
[L1875]              havoc tokenName_s452;
[L1876]              havoc tokenSymbol_s452;
[L1877]              havoc target_s560;
[L1878]              havoc mintedAmount_s560;
[L1879]              havoc target_s581;
[L1880]              havoc freeze_s581;
[L1881]              havoc newSellPrice_s599;
[L1882]              havoc newBuyPrice_s599;
[L1883]              havoc amount_s659;
[L1884]              havoc tmpNow;
[L1885]              havoc gas;
[L1886]              assume gas > 4000000 && gas <= 8000000;
[L1887]              tmpNow := now;
[L1888]              havoc now;
[L1889]              assume now > tmpNow;
[L1890]              assume msgsender_MSG != null;
[L1891]  COND TRUE   choice == 6
[L1892]              gas := gas - 21000;
[L1893]  COND FALSE  !(gas >= 0)
[L1946]  RET         call CorralChoice_NOL(this);

Loop:
[L1946]        assume true;

[2020-11-24 15:50:39,439 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 15:50:39,439 INFO  L82        PathProgramCache]: Analyzing trace with hash -294427671, now seen corresponding path program 1 times
[2020-11-24 15:50:39,444 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 15:50:39,462 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 15:50:39,509 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 15:50:39,511 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 15:50:39,511 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-24 15:50:39,515 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 15:50:39,617 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-24 15:50:39,618 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-24 15:50:39,620 INFO  L87              Difference]: Start difference. First operand 1516 states. Second operand 3 states.
[2020-11-24 15:50:39,721 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 15:50:39,722 INFO  L93              Difference]: Finished difference Result 679 states and 761 transitions.
[2020-11-24 15:50:39,722 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-24 15:50:39,723 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 679 states and 761 transitions.
[2020-11-24 15:50:39,727 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 15:50:39,731 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 679 states to 249 states and 274 transitions.
[2020-11-24 15:50:39,732 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 4
[2020-11-24 15:50:39,733 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 249
[2020-11-24 15:50:39,733 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 249 states and 274 transitions.
[2020-11-24 15:50:39,734 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 15:50:39,734 INFO  L728         BuchiCegarLoop]: Abstraction has 249 states and 274 transitions.
[2020-11-24 15:50:39,745 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 249 states and 274 transitions.
[2020-11-24 15:50:39,759 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 249 to 249.
[2020-11-24 15:50:39,760 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 249 states.
[2020-11-24 15:50:39,760 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 249 states to 249 states and 274 transitions.
[2020-11-24 15:50:39,761 INFO  L751         BuchiCegarLoop]: Abstraction has 249 states and 274 transitions.
[2020-11-24 15:50:39,761 INFO  L631         BuchiCegarLoop]: Abstraction has 249 states and 274 transitions.
[2020-11-24 15:50:39,761 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-24 15:50:39,761 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 249 states and 274 transitions.
[2020-11-24 15:50:39,762 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 15:50:39,762 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 15:50:39,763 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 15:50:39,763 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 15:50:39,763 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L3]                 success_transferFrom_TokenERC200 := false;
[L3]                 call_transferFrom_TokenERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p3;
[L3]                 havoc p2;
[L3]                 havoc p1;
[L1941]              assume null == 0;
[L1942]  CALL        call this := FreshRefGenerator__success();
[L748]               havoc newRef;
[L749]               assume Alloc[newRef] == false;
[L750]               Alloc[newRef] := true;
[L751]               assume newRef != null;
[L1942]  RET         call this := FreshRefGenerator__success();
[L1943]              assume now >= 0;
[L1944]              assume DType[this] == NOL;
[L1945]              assume !revert && gas >= 0;
[L1946]  CALL        call CorralChoice_NOL(this);
[L1834]              havoc msgsender_MSG;
[L1835]              havoc msgvalue_MSG;
[L1836]              havoc choice;
[L1837]              havoc __ret_0_owner;
[L1838]              havoc newOwner_s35;
[L1839]              havoc __ret_0_name;
[L1840]              havoc __ret_0_symbol;
[L1841]              havoc __ret_0_decimals;
[L1842]              havoc __ret_0_totalSupply;
[L1843]              havoc arg662_s0;
[L1844]              havoc __ret_0_balanceOf;
[L1845]              havoc arg663_s0;
[L1846]              havoc arg664_s0;
[L1847]              havoc __ret_0_allowance;
[L1848]              havoc initialSupply_s124;
[L1849]              havoc tokenName_s124;
[L1850]              havoc tokenSymbol_s124;
[L1851]              havoc _to_s221;
[L1852]              havoc _value_s221;
[L1853]              havoc success_s221;
[L1854]              havoc _from_s261;
[L1855]              havoc _to_s261;
[L1856]              havoc _value_s261;
[L1857]              havoc success_s261;
[L1858]              havoc _spender_s289;
[L1859]              havoc _value_s289;
[L1860]              havoc success_s289;
[L1861]              havoc _spender_s327;
[L1862]              havoc _value_s327;
[L1863]              havoc _extraData_s327;
[L1864]              havoc success_s327;
[L1865]              havoc _value_s363;
[L1866]              havoc success_s363;
[L1867]              havoc _from_s418;
[L1868]              havoc _value_s418;
[L1869]              havoc success_s418;
[L1870]              havoc __ret_0_sellPrice;
[L1871]              havoc __ret_0_buyPrice;
[L1872]              havoc arg665_s0;
[L1873]              havoc __ret_0_frozenAccount;
[L1874]              havoc initialSupply_s452;
[L1875]              havoc tokenName_s452;
[L1876]              havoc tokenSymbol_s452;
[L1877]              havoc target_s560;
[L1878]              havoc mintedAmount_s560;
[L1879]              havoc target_s581;
[L1880]              havoc freeze_s581;
[L1881]              havoc newSellPrice_s599;
[L1882]              havoc newBuyPrice_s599;
[L1883]              havoc amount_s659;
[L1884]              havoc tmpNow;
[L1885]              havoc gas;
[L1886]              assume gas > 4000000 && gas <= 8000000;
[L1887]              tmpNow := now;
[L1888]              havoc now;
[L1889]              assume now > tmpNow;
[L1890]              assume msgsender_MSG != null;
[L1891]  COND FALSE  !(choice == 6)
[L1897]  COND FALSE  !(choice == 5)
[L1903]  COND FALSE  !(choice == 4)
[L1909]  COND FALSE  !(choice == 3)
[L1916]  COND TRUE   choice == 2
[L1917]              gas := gas - 21000;
[L1918]  COND TRUE   gas >= 0
[L1919]              assume _value_s261 >= 0 && _value_s261 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1920]              assume msgvalue_MSG == 0;
[L1921]  CALL        call success_s261 := transferFrom~address~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, _from_s261, _to_s261, _value_s261);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != _from_s261 && p1 != _to_s261) && (p2 != _from_s261 || p3 != msgsender_MSG)) && _from_s261 != _to_s261) && _value_s261 <= balanceOf_TokenERC20[this][_from_s261]) && _value_s261 <= allowance_TokenERC20[this][_from_s261][msgsender_MSG]) && balanceOf_TokenERC20[this][_to_s261] + _value_s261 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _value_s261 >= 0) && _value_s261 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_TokenERC20[this][_to_s261] >= 0) && balanceOf_TokenERC20[this][_to_s261] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_TokenERC20[this][_from_s261] >= 0) && balanceOf_TokenERC20[this][_from_s261] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowance_TokenERC20[this][_from_s261][msgsender_MSG] >= 0) && allowance_TokenERC20[this][_from_s261][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_TokenERC200 := true;
[L3]                 call_transferFrom_TokenERC200 := false;
[L3]                 revert := revert_hold;
[L151]               havoc __exception;
[L152]               revert := false;
[L153]   COND FALSE  !(__exception)
[L180]   CALL        call success_s261 := transferFrom~address~address~uint256_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, _from_s261, _to_s261, _value_s261);
[L874]   COND TRUE   !(_value_s261 <= allowance_TokenERC20[this][_from_s261][msgsender_MSG])
[L875]               revert := true;
[L180]   RET         call success_s261 := transferFrom~address~address~uint256_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, _from_s261, _to_s261, _value_s261);
[L181]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((((((((success_s261 == true && balanceOf_TokenERC20[this][_from_s261] == old(balanceOf_TokenERC20[this][_from_s261]) - _value_s261) && balanceOf_TokenERC20[this][_to_s261] == old(balanceOf_TokenERC20[this][_to_s261]) + _value_s261) && allowance_TokenERC20[this][_from_s261][msgsender_MSG] == old(allowance_TokenERC20[this][_from_s261][msgsender_MSG]) - _value_s261) && totalSupply_TokenERC20[this] == old(totalSupply_TokenERC20[this])) && balanceOf_TokenERC20[this][p1] == old(balanceOf_TokenERC20[this][p1])) && allowance_TokenERC20[this][p2][p3] == old(allowance_TokenERC20[this][p2][p3])) && sellPrice_NOL[this] == old(sellPrice_NOL[this])) && buyPrice_NOL[this] == old(buyPrice_NOL[this])) && frozenAccount_NOL[this] == old(frozenAccount_NOL[this])) && name_TokenERC20[this] == old(name_TokenERC20[this])) && symbol_TokenERC20[this] == old(symbol_TokenERC20[this])) && decimals_TokenERC20[this] == old(decimals_TokenERC20[this])) && owner_owned[this] == old(owner_owned[this]));
[L3]                 revert := revert_hold;
[L1921]  RET         call success_s261 := transferFrom~address~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, _from_s261, _to_s261, _value_s261);
[L1946]  RET         call CorralChoice_NOL(this);

Loop:
[L1946]        assume true;

[2020-11-24 15:50:39,766 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 15:50:39,766 INFO  L82        PathProgramCache]: Analyzing trace with hash 854987552, now seen corresponding path program 1 times
[2020-11-24 15:50:39,767 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 15:50:39,776 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 15:50:39,789 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 15:50:39,789 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 15:50:39,789 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-24 15:50:39,790 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 15:50:39,790 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-24 15:50:39,791 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-24 15:50:39,791 INFO  L87              Difference]: Start difference. First operand 249 states and 274 transitions. cyclomatic complexity: 26 Second operand 3 states.
[2020-11-24 15:50:39,798 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 15:50:39,798 INFO  L93              Difference]: Finished difference Result 280 states and 304 transitions.
[2020-11-24 15:50:39,798 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-24 15:50:39,798 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 280 states and 304 transitions.
[2020-11-24 15:50:39,800 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 2
[2020-11-24 15:50:39,801 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 280 states to 259 states and 273 transitions.
[2020-11-24 15:50:39,801 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 259
[2020-11-24 15:50:39,802 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 259
[2020-11-24 15:50:39,802 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 259 states and 273 transitions.
[2020-11-24 15:50:39,802 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 15:50:39,802 INFO  L728         BuchiCegarLoop]: Abstraction has 259 states and 273 transitions.
[2020-11-24 15:50:39,803 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 259 states and 273 transitions.
[2020-11-24 15:50:39,806 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 259 to 248.
[2020-11-24 15:50:39,807 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 248 states.
[2020-11-24 15:50:39,807 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 248 states to 248 states and 262 transitions.
[2020-11-24 15:50:39,807 INFO  L751         BuchiCegarLoop]: Abstraction has 248 states and 262 transitions.
[2020-11-24 15:50:39,807 INFO  L631         BuchiCegarLoop]: Abstraction has 248 states and 262 transitions.
[2020-11-24 15:50:39,807 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-24 15:50:39,808 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 248 states and 262 transitions.
[2020-11-24 15:50:39,809 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 15:50:39,809 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 15:50:39,809 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 15:50:39,810 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 15:50:39,810 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L3]                 success_transferFrom_TokenERC200 := false;
[L3]                 call_transferFrom_TokenERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p3;
[L3]                 havoc p2;
[L3]                 havoc p1;
[L1941]              assume null == 0;
[L1942]  CALL        call this := FreshRefGenerator__success();
[L748]               havoc newRef;
[L749]               assume Alloc[newRef] == false;
[L750]               Alloc[newRef] := true;
[L751]               assume newRef != null;
[L1942]  RET         call this := FreshRefGenerator__success();
[L1943]              assume now >= 0;
[L1944]              assume DType[this] == NOL;
[L1945]              assume !revert && gas >= 0;
[L1946]  CALL        call CorralChoice_NOL(this);
[L1834]              havoc msgsender_MSG;
[L1835]              havoc msgvalue_MSG;
[L1836]              havoc choice;
[L1837]              havoc __ret_0_owner;
[L1838]              havoc newOwner_s35;
[L1839]              havoc __ret_0_name;
[L1840]              havoc __ret_0_symbol;
[L1841]              havoc __ret_0_decimals;
[L1842]              havoc __ret_0_totalSupply;
[L1843]              havoc arg662_s0;
[L1844]              havoc __ret_0_balanceOf;
[L1845]              havoc arg663_s0;
[L1846]              havoc arg664_s0;
[L1847]              havoc __ret_0_allowance;
[L1848]              havoc initialSupply_s124;
[L1849]              havoc tokenName_s124;
[L1850]              havoc tokenSymbol_s124;
[L1851]              havoc _to_s221;
[L1852]              havoc _value_s221;
[L1853]              havoc success_s221;
[L1854]              havoc _from_s261;
[L1855]              havoc _to_s261;
[L1856]              havoc _value_s261;
[L1857]              havoc success_s261;
[L1858]              havoc _spender_s289;
[L1859]              havoc _value_s289;
[L1860]              havoc success_s289;
[L1861]              havoc _spender_s327;
[L1862]              havoc _value_s327;
[L1863]              havoc _extraData_s327;
[L1864]              havoc success_s327;
[L1865]              havoc _value_s363;
[L1866]              havoc success_s363;
[L1867]              havoc _from_s418;
[L1868]              havoc _value_s418;
[L1869]              havoc success_s418;
[L1870]              havoc __ret_0_sellPrice;
[L1871]              havoc __ret_0_buyPrice;
[L1872]              havoc arg665_s0;
[L1873]              havoc __ret_0_frozenAccount;
[L1874]              havoc initialSupply_s452;
[L1875]              havoc tokenName_s452;
[L1876]              havoc tokenSymbol_s452;
[L1877]              havoc target_s560;
[L1878]              havoc mintedAmount_s560;
[L1879]              havoc target_s581;
[L1880]              havoc freeze_s581;
[L1881]              havoc newSellPrice_s599;
[L1882]              havoc newBuyPrice_s599;
[L1883]              havoc amount_s659;
[L1884]              havoc tmpNow;
[L1885]              havoc gas;
[L1886]              assume gas > 4000000 && gas <= 8000000;
[L1887]              tmpNow := now;
[L1888]              havoc now;
[L1889]              assume now > tmpNow;
[L1890]              assume msgsender_MSG != null;
[L1891]  COND FALSE  !(choice == 6)
[L1897]  COND FALSE  !(choice == 5)
[L1903]  COND FALSE  !(choice == 4)
[L1909]  COND FALSE  !(choice == 3)
[L1916]  COND TRUE   choice == 2
[L1917]              gas := gas - 21000;
[L1918]  COND TRUE   gas >= 0
[L1919]              assume _value_s261 >= 0 && _value_s261 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1920]              assume msgvalue_MSG == 0;
[L1921]  CALL        call success_s261 := transferFrom~address~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, _from_s261, _to_s261, _value_s261);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != _from_s261 && p1 != _to_s261) && (p2 != _from_s261 || p3 != msgsender_MSG)) && _from_s261 != _to_s261) && _value_s261 <= balanceOf_TokenERC20[this][_from_s261]) && _value_s261 <= allowance_TokenERC20[this][_from_s261][msgsender_MSG]) && balanceOf_TokenERC20[this][_to_s261] + _value_s261 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _value_s261 >= 0) && _value_s261 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_TokenERC20[this][_to_s261] >= 0) && balanceOf_TokenERC20[this][_to_s261] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_TokenERC20[this][_from_s261] >= 0) && balanceOf_TokenERC20[this][_from_s261] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowance_TokenERC20[this][_from_s261][msgsender_MSG] >= 0) && allowance_TokenERC20[this][_from_s261][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_TokenERC200 := true;
[L3]                 call_transferFrom_TokenERC200 := false;
[L3]                 revert := revert_hold;
[L151]               havoc __exception;
[L152]               revert := false;
[L153]   COND TRUE   __exception
[L154]               __tmp__Balance := Balance;
[L155]               __tmp__DType := DType;
[L156]               __tmp__Alloc := Alloc;
[L157]               __tmp__balance_ADDR := balance_ADDR;
[L158]               __tmp__M_Ref_int := M_Ref_int;
[L159]               __tmp__sum_balanceOf0 := sum_balanceOf0;
[L160]               __tmp__alloc_allowance_TokenERC20_lvl0 := alloc_allowance_TokenERC20_lvl0;
[L161]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L162]               __tmp__sum_allowance1 := sum_allowance1;
[L163]               __tmp__M_Ref_bool := M_Ref_bool;
[L164]               __tmp__sum_frozenAccount2 := sum_frozenAccount2;
[L165]               __tmp__Length := Length;
[L166]               __tmp__now := now;
[L167]               __tmp__owner_owned := owner_owned;
[L168]               __tmp__name_TokenERC20 := name_TokenERC20;
[L169]               __tmp__symbol_TokenERC20 := symbol_TokenERC20;
[L170]               __tmp__decimals_TokenERC20 := decimals_TokenERC20;
[L171]               __tmp__totalSupply_TokenERC20 := totalSupply_TokenERC20;
[L172]               __tmp__balanceOf_TokenERC20 := balanceOf_TokenERC20;
[L173]               __tmp__allowance_TokenERC20 := allowance_TokenERC20;
[L174]               __tmp__sellPrice_NOL := sellPrice_NOL;
[L175]               __tmp__buyPrice_NOL := buyPrice_NOL;
[L176]               __tmp__frozenAccount_NOL := frozenAccount_NOL;
[L177]   CALL        call success_s261 := transferFrom~address~address~uint256_TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, _from_s261, _to_s261, _value_s261);
[L848]   COND TRUE   !(_value_s261 <= __tmp__allowance_TokenERC20[this][_from_s261][msgsender_MSG])
[L849]               revert := true;
[L177]   RET         call success_s261 := transferFrom~address~address~uint256_TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, _from_s261, _to_s261, _value_s261);
[L178]               assume revert || gas < 0;
[L1921]  RET         call success_s261 := transferFrom~address~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, _from_s261, _to_s261, _value_s261);
[L1946]  RET         call CorralChoice_NOL(this);

Loop:
[L1946]        assume true;

[2020-11-24 15:50:39,812 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 15:50:39,812 INFO  L82        PathProgramCache]: Analyzing trace with hash 425976270, now seen corresponding path program 1 times
[2020-11-24 15:50:39,813 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 15:50:39,820 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 15:50:39,861 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 15:50:39,861 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 15:50:39,861 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [6] imperfect sequences [] total 6
[2020-11-24 15:50:39,861 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 15:50:39,862 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 6 interpolants.
[2020-11-24 15:50:39,862 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=9, Invalid=21, Unknown=0, NotChecked=0, Total=30
[2020-11-24 15:50:39,862 INFO  L87              Difference]: Start difference. First operand 248 states and 262 transitions. cyclomatic complexity: 15 Second operand 6 states.
[2020-11-24 15:50:39,974 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 15:50:39,974 INFO  L93              Difference]: Finished difference Result 257 states and 270 transitions.
[2020-11-24 15:50:39,974 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 7 states. 
[2020-11-24 15:50:39,975 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 257 states and 270 transitions.
[2020-11-24 15:50:39,976 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 2
[2020-11-24 15:50:39,977 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 257 states to 254 states and 267 transitions.
[2020-11-24 15:50:39,977 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 254
[2020-11-24 15:50:39,977 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 254
[2020-11-24 15:50:39,977 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 254 states and 267 transitions.
[2020-11-24 15:50:39,978 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 15:50:39,978 INFO  L728         BuchiCegarLoop]: Abstraction has 254 states and 267 transitions.
[2020-11-24 15:50:39,978 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 254 states and 267 transitions.
[2020-11-24 15:50:39,981 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 254 to 247.
[2020-11-24 15:50:39,981 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 247 states.
[2020-11-24 15:50:39,981 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 247 states to 247 states and 260 transitions.
[2020-11-24 15:50:39,981 INFO  L751         BuchiCegarLoop]: Abstraction has 247 states and 260 transitions.
[2020-11-24 15:50:39,982 INFO  L631         BuchiCegarLoop]: Abstraction has 247 states and 260 transitions.
[2020-11-24 15:50:39,982 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-24 15:50:39,982 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 247 states and 260 transitions.
[2020-11-24 15:50:39,982 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 15:50:39,983 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 15:50:39,983 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 15:50:39,984 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 15:50:39,984 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L3]                 success_transferFrom_TokenERC200 := false;
[L3]                 call_transferFrom_TokenERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p3;
[L3]                 havoc p2;
[L3]                 havoc p1;
[L1941]              assume null == 0;
[L1942]  CALL        call this := FreshRefGenerator__success();
[L748]               havoc newRef;
[L749]               assume Alloc[newRef] == false;
[L750]               Alloc[newRef] := true;
[L751]               assume newRef != null;
[L1942]  RET         call this := FreshRefGenerator__success();
[L1943]              assume now >= 0;
[L1944]              assume DType[this] == NOL;
[L1945]              assume !revert && gas >= 0;
[L1946]  CALL        call CorralChoice_NOL(this);
[L1834]              havoc msgsender_MSG;
[L1835]              havoc msgvalue_MSG;
[L1836]              havoc choice;
[L1837]              havoc __ret_0_owner;
[L1838]              havoc newOwner_s35;
[L1839]              havoc __ret_0_name;
[L1840]              havoc __ret_0_symbol;
[L1841]              havoc __ret_0_decimals;
[L1842]              havoc __ret_0_totalSupply;
[L1843]              havoc arg662_s0;
[L1844]              havoc __ret_0_balanceOf;
[L1845]              havoc arg663_s0;
[L1846]              havoc arg664_s0;
[L1847]              havoc __ret_0_allowance;
[L1848]              havoc initialSupply_s124;
[L1849]              havoc tokenName_s124;
[L1850]              havoc tokenSymbol_s124;
[L1851]              havoc _to_s221;
[L1852]              havoc _value_s221;
[L1853]              havoc success_s221;
[L1854]              havoc _from_s261;
[L1855]              havoc _to_s261;
[L1856]              havoc _value_s261;
[L1857]              havoc success_s261;
[L1858]              havoc _spender_s289;
[L1859]              havoc _value_s289;
[L1860]              havoc success_s289;
[L1861]              havoc _spender_s327;
[L1862]              havoc _value_s327;
[L1863]              havoc _extraData_s327;
[L1864]              havoc success_s327;
[L1865]              havoc _value_s363;
[L1866]              havoc success_s363;
[L1867]              havoc _from_s418;
[L1868]              havoc _value_s418;
[L1869]              havoc success_s418;
[L1870]              havoc __ret_0_sellPrice;
[L1871]              havoc __ret_0_buyPrice;
[L1872]              havoc arg665_s0;
[L1873]              havoc __ret_0_frozenAccount;
[L1874]              havoc initialSupply_s452;
[L1875]              havoc tokenName_s452;
[L1876]              havoc tokenSymbol_s452;
[L1877]              havoc target_s560;
[L1878]              havoc mintedAmount_s560;
[L1879]              havoc target_s581;
[L1880]              havoc freeze_s581;
[L1881]              havoc newSellPrice_s599;
[L1882]              havoc newBuyPrice_s599;
[L1883]              havoc amount_s659;
[L1884]              havoc tmpNow;
[L1885]              havoc gas;
[L1886]              assume gas > 4000000 && gas <= 8000000;
[L1887]              tmpNow := now;
[L1888]              havoc now;
[L1889]              assume now > tmpNow;
[L1890]              assume msgsender_MSG != null;
[L1891]  COND FALSE  !(choice == 6)
[L1897]  COND FALSE  !(choice == 5)
[L1903]  COND FALSE  !(choice == 4)
[L1909]  COND FALSE  !(choice == 3)
[L1916]  COND TRUE   choice == 2
[L1917]              gas := gas - 21000;
[L1918]  COND TRUE   gas >= 0
[L1919]              assume _value_s261 >= 0 && _value_s261 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1920]              assume msgvalue_MSG == 0;
[L1921]  CALL        call success_s261 := transferFrom~address~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, _from_s261, _to_s261, _value_s261);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != _from_s261 && p1 != _to_s261) && (p2 != _from_s261 || p3 != msgsender_MSG)) && _from_s261 != _to_s261) && _value_s261 <= balanceOf_TokenERC20[this][_from_s261]) && _value_s261 <= allowance_TokenERC20[this][_from_s261][msgsender_MSG]) && balanceOf_TokenERC20[this][_to_s261] + _value_s261 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _value_s261 >= 0) && _value_s261 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_TokenERC20[this][_to_s261] >= 0) && balanceOf_TokenERC20[this][_to_s261] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_TokenERC20[this][_from_s261] >= 0) && balanceOf_TokenERC20[this][_from_s261] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowance_TokenERC20[this][_from_s261][msgsender_MSG] >= 0) && allowance_TokenERC20[this][_from_s261][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_TokenERC200 := true;
[L3]                 call_transferFrom_TokenERC200 := false;
[L3]                 revert := revert_hold;
[L151]               havoc __exception;
[L152]               revert := false;
[L153]   COND FALSE  !(__exception)
[L180]   CALL        call success_s261 := transferFrom~address~address~uint256_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, _from_s261, _to_s261, _value_s261);
[L874]   COND FALSE  !(!(_value_s261 <= allowance_TokenERC20[this][_from_s261][msgsender_MSG]))
[L878]               sum_allowance1[_from_s261] := sum_allowance1[_from_s261] - allowance_TokenERC20[this][_from_s261][msgsender_MSG];
[L879]               allowance_TokenERC20[this][_from_s261][msgsender_MSG] := (allowance_TokenERC20[this][_from_s261][msgsender_MSG] - _value_s261) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L880]               sum_allowance1[_from_s261] := sum_allowance1[_from_s261] + allowance_TokenERC20[this][_from_s261][msgsender_MSG];
[L881]   COND TRUE   DType[this] == NOL
[L882]   CALL        call _transfer~address~address~uint256_NOL__success(this, msgsender_MSG, msgvalue_MSG, _from_s261, _to_s261, _value_s261);
[L988]               __var_2 := null;
[L989]   COND FALSE  !(!(_to_s522 != null))
[L993]   COND FALSE  !(!(balanceOf_TokenERC20[this][_from_s522] >= _value_s522))
[L997]   COND FALSE  !(!((balanceOf_TokenERC20[this][_to_s522] + _value_s522) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 >= balanceOf_TokenERC20[this][_to_s522]))
[L1001]  COND FALSE  !(!!frozenAccount_NOL[this][_from_s522])
[L1005]  COND FALSE  !(!!frozenAccount_NOL[this][_to_s522])
[L1009]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_TokenERC20[this][_from_s522];
[L1010]              balanceOf_TokenERC20[this][_from_s522] := (balanceOf_TokenERC20[this][_from_s522] - _value_s522) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1011]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_TokenERC20[this][_from_s522];
[L1012]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_TokenERC20[this][_to_s522];
[L1013]              balanceOf_TokenERC20[this][_to_s522] := (balanceOf_TokenERC20[this][_to_s522] + _value_s522) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1014]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_TokenERC20[this][_to_s522];
[L1015]              assert { :EventEmitted "Transfer_NOL" } true;
[L882]   RET         call _transfer~address~address~uint256_NOL__success(this, msgsender_MSG, msgvalue_MSG, _from_s261, _to_s261, _value_s261);
[L883]   COND FALSE  !(revert)
[L894]               success_s261 := true;
[L180]   RET         call success_s261 := transferFrom~address~address~uint256_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, _from_s261, _to_s261, _value_s261);
[L181]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((((((((success_s261 == true && balanceOf_TokenERC20[this][_from_s261] == old(balanceOf_TokenERC20[this][_from_s261]) - _value_s261) && balanceOf_TokenERC20[this][_to_s261] == old(balanceOf_TokenERC20[this][_to_s261]) + _value_s261) && allowance_TokenERC20[this][_from_s261][msgsender_MSG] == old(allowance_TokenERC20[this][_from_s261][msgsender_MSG]) - _value_s261) && totalSupply_TokenERC20[this] == old(totalSupply_TokenERC20[this])) && balanceOf_TokenERC20[this][p1] == old(balanceOf_TokenERC20[this][p1])) && allowance_TokenERC20[this][p2][p3] == old(allowance_TokenERC20[this][p2][p3])) && sellPrice_NOL[this] == old(sellPrice_NOL[this])) && buyPrice_NOL[this] == old(buyPrice_NOL[this])) && frozenAccount_NOL[this] == old(frozenAccount_NOL[this])) && name_TokenERC20[this] == old(name_TokenERC20[this])) && symbol_TokenERC20[this] == old(symbol_TokenERC20[this])) && decimals_TokenERC20[this] == old(decimals_TokenERC20[this])) && owner_owned[this] == old(owner_owned[this]));
[L3]                 revert := revert_hold;
[L1921]  RET         call success_s261 := transferFrom~address~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, _from_s261, _to_s261, _value_s261);
[L1946]  RET         call CorralChoice_NOL(this);

Loop:
[L1946]        assume true;

[2020-11-24 15:50:39,987 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 15:50:39,988 INFO  L82        PathProgramCache]: Analyzing trace with hash 1227037383, now seen corresponding path program 1 times
[2020-11-24 15:50:39,989 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 15:50:40,061 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 15:50:40,658 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 15:50:40,658 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 15:50:40,658 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [15] imperfect sequences [] total 15
[2020-11-24 15:50:40,659 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 15:50:40,659 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 15 interpolants.
[2020-11-24 15:50:40,659 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=35, Invalid=175, Unknown=0, NotChecked=0, Total=210
[2020-11-24 15:50:40,659 INFO  L87              Difference]: Start difference. First operand 247 states and 260 transitions. cyclomatic complexity: 14 Second operand 15 states.
[2020-11-24 15:50:41,298 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 15:50:41,298 INFO  L93              Difference]: Finished difference Result 268 states and 280 transitions.
[2020-11-24 15:50:41,298 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 14 states. 
[2020-11-24 15:50:41,298 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 268 states and 280 transitions.
[2020-11-24 15:50:41,299 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 2
[2020-11-24 15:50:41,300 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 268 states to 235 states and 247 transitions.
[2020-11-24 15:50:41,300 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 235
[2020-11-24 15:50:41,300 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 235
[2020-11-24 15:50:41,300 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 235 states and 247 transitions.
[2020-11-24 15:50:41,301 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 15:50:41,301 INFO  L728         BuchiCegarLoop]: Abstraction has 235 states and 247 transitions.
[2020-11-24 15:50:41,301 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 235 states and 247 transitions.
[2020-11-24 15:50:41,303 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 235 to 228.
[2020-11-24 15:50:41,303 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 228 states.
[2020-11-24 15:50:41,304 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 228 states to 228 states and 240 transitions.
[2020-11-24 15:50:41,304 INFO  L751         BuchiCegarLoop]: Abstraction has 228 states and 240 transitions.
[2020-11-24 15:50:41,304 INFO  L631         BuchiCegarLoop]: Abstraction has 228 states and 240 transitions.
[2020-11-24 15:50:41,304 INFO  L445         BuchiCegarLoop]: ======== Iteration 5============
[2020-11-24 15:50:41,304 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 228 states and 240 transitions.
[2020-11-24 15:50:41,305 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 15:50:41,305 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 15:50:41,305 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 15:50:41,306 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 15:50:41,306 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L3]                 success_transferFrom_TokenERC200 := false;
[L3]                 call_transferFrom_TokenERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p3;
[L3]                 havoc p2;
[L3]                 havoc p1;
[L1941]              assume null == 0;
[L1942]  CALL        call this := FreshRefGenerator__success();
[L748]               havoc newRef;
[L749]               assume Alloc[newRef] == false;
[L750]               Alloc[newRef] := true;
[L751]               assume newRef != null;
[L1942]  RET         call this := FreshRefGenerator__success();
[L1943]              assume now >= 0;
[L1944]              assume DType[this] == NOL;
[L1945]              assume !revert && gas >= 0;
[L1946]  CALL        call CorralChoice_NOL(this);
[L1834]              havoc msgsender_MSG;
[L1835]              havoc msgvalue_MSG;
[L1836]              havoc choice;
[L1837]              havoc __ret_0_owner;
[L1838]              havoc newOwner_s35;
[L1839]              havoc __ret_0_name;
[L1840]              havoc __ret_0_symbol;
[L1841]              havoc __ret_0_decimals;
[L1842]              havoc __ret_0_totalSupply;
[L1843]              havoc arg662_s0;
[L1844]              havoc __ret_0_balanceOf;
[L1845]              havoc arg663_s0;
[L1846]              havoc arg664_s0;
[L1847]              havoc __ret_0_allowance;
[L1848]              havoc initialSupply_s124;
[L1849]              havoc tokenName_s124;
[L1850]              havoc tokenSymbol_s124;
[L1851]              havoc _to_s221;
[L1852]              havoc _value_s221;
[L1853]              havoc success_s221;
[L1854]              havoc _from_s261;
[L1855]              havoc _to_s261;
[L1856]              havoc _value_s261;
[L1857]              havoc success_s261;
[L1858]              havoc _spender_s289;
[L1859]              havoc _value_s289;
[L1860]              havoc success_s289;
[L1861]              havoc _spender_s327;
[L1862]              havoc _value_s327;
[L1863]              havoc _extraData_s327;
[L1864]              havoc success_s327;
[L1865]              havoc _value_s363;
[L1866]              havoc success_s363;
[L1867]              havoc _from_s418;
[L1868]              havoc _value_s418;
[L1869]              havoc success_s418;
[L1870]              havoc __ret_0_sellPrice;
[L1871]              havoc __ret_0_buyPrice;
[L1872]              havoc arg665_s0;
[L1873]              havoc __ret_0_frozenAccount;
[L1874]              havoc initialSupply_s452;
[L1875]              havoc tokenName_s452;
[L1876]              havoc tokenSymbol_s452;
[L1877]              havoc target_s560;
[L1878]              havoc mintedAmount_s560;
[L1879]              havoc target_s581;
[L1880]              havoc freeze_s581;
[L1881]              havoc newSellPrice_s599;
[L1882]              havoc newBuyPrice_s599;
[L1883]              havoc amount_s659;
[L1884]              havoc tmpNow;
[L1885]              havoc gas;
[L1886]              assume gas > 4000000 && gas <= 8000000;
[L1887]              tmpNow := now;
[L1888]              havoc now;
[L1889]              assume now > tmpNow;
[L1890]              assume msgsender_MSG != null;
[L1891]  COND FALSE  !(choice == 6)
[L1897]  COND FALSE  !(choice == 5)
[L1903]  COND FALSE  !(choice == 4)
[L1909]  COND FALSE  !(choice == 3)
[L1916]  COND TRUE   choice == 2
[L1917]              gas := gas - 21000;
[L1918]  COND TRUE   gas >= 0
[L1919]              assume _value_s261 >= 0 && _value_s261 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1920]              assume msgvalue_MSG == 0;
[L1921]  CALL        call success_s261 := transferFrom~address~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, _from_s261, _to_s261, _value_s261);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != _from_s261 && p1 != _to_s261) && (p2 != _from_s261 || p3 != msgsender_MSG)) && _from_s261 != _to_s261) && _value_s261 <= balanceOf_TokenERC20[this][_from_s261]) && _value_s261 <= allowance_TokenERC20[this][_from_s261][msgsender_MSG]) && balanceOf_TokenERC20[this][_to_s261] + _value_s261 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _value_s261 >= 0) && _value_s261 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_TokenERC20[this][_to_s261] >= 0) && balanceOf_TokenERC20[this][_to_s261] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_TokenERC20[this][_from_s261] >= 0) && balanceOf_TokenERC20[this][_from_s261] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowance_TokenERC20[this][_from_s261][msgsender_MSG] >= 0) && allowance_TokenERC20[this][_from_s261][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_TokenERC200 := true;
[L3]                 call_transferFrom_TokenERC200 := false;
[L3]                 revert := revert_hold;
[L151]               havoc __exception;
[L152]               revert := false;
[L153]   COND FALSE  !(__exception)
[L180]   CALL        call success_s261 := transferFrom~address~address~uint256_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, _from_s261, _to_s261, _value_s261);
[L874]   COND FALSE  !(!(_value_s261 <= allowance_TokenERC20[this][_from_s261][msgsender_MSG]))
[L878]               sum_allowance1[_from_s261] := sum_allowance1[_from_s261] - allowance_TokenERC20[this][_from_s261][msgsender_MSG];
[L879]               allowance_TokenERC20[this][_from_s261][msgsender_MSG] := (allowance_TokenERC20[this][_from_s261][msgsender_MSG] - _value_s261) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L880]               sum_allowance1[_from_s261] := sum_allowance1[_from_s261] + allowance_TokenERC20[this][_from_s261][msgsender_MSG];
[L881]   COND FALSE  !(DType[this] == NOL)
[L886]   COND TRUE   DType[this] == TokenERC20
[L887]   CALL        call _transfer~address~address~uint256_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, _from_s261, _to_s261, _value_s261);
[L784]               __var_1 := null;
[L785]   COND FALSE  !(!(_to_s202 != null))
[L789]   COND FALSE  !(!(balanceOf_TokenERC20[this][_from_s202] >= _value_s202))
[L793]   COND FALSE  !(!((balanceOf_TokenERC20[this][_to_s202] + _value_s202) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 > balanceOf_TokenERC20[this][_to_s202]))
[L797]               previousBalances_s202 := (balanceOf_TokenERC20[this][_from_s202] + balanceOf_TokenERC20[this][_to_s202]) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L798]               sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_TokenERC20[this][_from_s202];
[L799]               balanceOf_TokenERC20[this][_from_s202] := (balanceOf_TokenERC20[this][_from_s202] - _value_s202) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L800]               sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_TokenERC20[this][_from_s202];
[L801]               sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_TokenERC20[this][_to_s202];
[L802]               balanceOf_TokenERC20[this][_to_s202] := (balanceOf_TokenERC20[this][_to_s202] + _value_s202) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L803]               sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_TokenERC20[this][_to_s202];
[L804]               assert { :EventEmitted "Transfer_TokenERC20" } true;
[L805]               assert (balanceOf_TokenERC20[this][_from_s202] + balanceOf_TokenERC20[this][_to_s202]) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 == previousBalances_s202;
[L887]   RET         call _transfer~address~address~uint256_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, _from_s261, _to_s261, _value_s261);
[L888]   COND FALSE  !(revert)
[L894]               success_s261 := true;
[L180]   RET         call success_s261 := transferFrom~address~address~uint256_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, _from_s261, _to_s261, _value_s261);
[L181]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((((((((success_s261 == true && balanceOf_TokenERC20[this][_from_s261] == old(balanceOf_TokenERC20[this][_from_s261]) - _value_s261) && balanceOf_TokenERC20[this][_to_s261] == old(balanceOf_TokenERC20[this][_to_s261]) + _value_s261) && allowance_TokenERC20[this][_from_s261][msgsender_MSG] == old(allowance_TokenERC20[this][_from_s261][msgsender_MSG]) - _value_s261) && totalSupply_TokenERC20[this] == old(totalSupply_TokenERC20[this])) && balanceOf_TokenERC20[this][p1] == old(balanceOf_TokenERC20[this][p1])) && allowance_TokenERC20[this][p2][p3] == old(allowance_TokenERC20[this][p2][p3])) && sellPrice_NOL[this] == old(sellPrice_NOL[this])) && buyPrice_NOL[this] == old(buyPrice_NOL[this])) && frozenAccount_NOL[this] == old(frozenAccount_NOL[this])) && name_TokenERC20[this] == old(name_TokenERC20[this])) && symbol_TokenERC20[this] == old(symbol_TokenERC20[this])) && decimals_TokenERC20[this] == old(decimals_TokenERC20[this])) && owner_owned[this] == old(owner_owned[this]));
[L3]                 revert := revert_hold;
[L1921]  RET         call success_s261 := transferFrom~address~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, _from_s261, _to_s261, _value_s261);
[L1946]  RET         call CorralChoice_NOL(this);

Loop:
[L1946]        assume true;

[2020-11-24 15:50:41,308 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 15:50:41,308 INFO  L82        PathProgramCache]: Analyzing trace with hash 520928918, now seen corresponding path program 1 times
[2020-11-24 15:50:41,309 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 15:50:41,317 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 15:50:41,334 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 15:50:41,335 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 15:50:41,335 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [6] imperfect sequences [] total 6
[2020-11-24 15:50:41,335 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 15:50:41,335 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 6 interpolants.
[2020-11-24 15:50:41,336 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=9, Invalid=21, Unknown=0, NotChecked=0, Total=30
[2020-11-24 15:50:41,336 INFO  L87              Difference]: Start difference. First operand 228 states and 240 transitions. cyclomatic complexity: 13 Second operand 6 states.
[2020-11-24 15:50:41,346 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 15:50:41,347 INFO  L93              Difference]: Finished difference Result 233 states and 244 transitions.
[2020-11-24 15:50:41,347 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 6 states. 
[2020-11-24 15:50:41,347 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 233 states and 244 transitions.
[2020-11-24 15:50:41,348 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 15:50:41,350 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 233 states to 192 states and 203 transitions.
[2020-11-24 15:50:41,350 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 192
[2020-11-24 15:50:41,350 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 192
[2020-11-24 15:50:41,350 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 192 states and 203 transitions.
[2020-11-24 15:50:41,350 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 15:50:41,350 INFO  L728         BuchiCegarLoop]: Abstraction has 192 states and 203 transitions.
[2020-11-24 15:50:41,351 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 192 states and 203 transitions.
[2020-11-24 15:50:41,352 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 192 to 192.
[2020-11-24 15:50:41,352 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 192 states.
[2020-11-24 15:50:41,353 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 192 states to 192 states and 203 transitions.
[2020-11-24 15:50:41,353 INFO  L751         BuchiCegarLoop]: Abstraction has 192 states and 203 transitions.
[2020-11-24 15:50:41,353 INFO  L631         BuchiCegarLoop]: Abstraction has 192 states and 203 transitions.
[2020-11-24 15:50:41,353 INFO  L445         BuchiCegarLoop]: ======== Iteration 6============
[2020-11-24 15:50:41,353 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 192 states and 203 transitions.
[2020-11-24 15:50:41,354 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 15:50:41,354 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 15:50:41,354 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 15:50:41,355 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 15:50:41,356 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L3]                 success_transferFrom_TokenERC200 := false;
[L3]                 call_transferFrom_TokenERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p3;
[L3]                 havoc p2;
[L3]                 havoc p1;
[L1941]              assume null == 0;
[L1942]  CALL        call this := FreshRefGenerator__success();
[L748]               havoc newRef;
[L749]               assume Alloc[newRef] == false;
[L750]               Alloc[newRef] := true;
[L751]               assume newRef != null;
[L1942]  RET         call this := FreshRefGenerator__success();
[L1943]              assume now >= 0;
[L1944]              assume DType[this] == NOL;
[L1945]              assume !revert && gas >= 0;
[L1946]  CALL        call CorralChoice_NOL(this);
[L1834]              havoc msgsender_MSG;
[L1835]              havoc msgvalue_MSG;
[L1836]              havoc choice;
[L1837]              havoc __ret_0_owner;
[L1838]              havoc newOwner_s35;
[L1839]              havoc __ret_0_name;
[L1840]              havoc __ret_0_symbol;
[L1841]              havoc __ret_0_decimals;
[L1842]              havoc __ret_0_totalSupply;
[L1843]              havoc arg662_s0;
[L1844]              havoc __ret_0_balanceOf;
[L1845]              havoc arg663_s0;
[L1846]              havoc arg664_s0;
[L1847]              havoc __ret_0_allowance;
[L1848]              havoc initialSupply_s124;
[L1849]              havoc tokenName_s124;
[L1850]              havoc tokenSymbol_s124;
[L1851]              havoc _to_s221;
[L1852]              havoc _value_s221;
[L1853]              havoc success_s221;
[L1854]              havoc _from_s261;
[L1855]              havoc _to_s261;
[L1856]              havoc _value_s261;
[L1857]              havoc success_s261;
[L1858]              havoc _spender_s289;
[L1859]              havoc _value_s289;
[L1860]              havoc success_s289;
[L1861]              havoc _spender_s327;
[L1862]              havoc _value_s327;
[L1863]              havoc _extraData_s327;
[L1864]              havoc success_s327;
[L1865]              havoc _value_s363;
[L1866]              havoc success_s363;
[L1867]              havoc _from_s418;
[L1868]              havoc _value_s418;
[L1869]              havoc success_s418;
[L1870]              havoc __ret_0_sellPrice;
[L1871]              havoc __ret_0_buyPrice;
[L1872]              havoc arg665_s0;
[L1873]              havoc __ret_0_frozenAccount;
[L1874]              havoc initialSupply_s452;
[L1875]              havoc tokenName_s452;
[L1876]              havoc tokenSymbol_s452;
[L1877]              havoc target_s560;
[L1878]              havoc mintedAmount_s560;
[L1879]              havoc target_s581;
[L1880]              havoc freeze_s581;
[L1881]              havoc newSellPrice_s599;
[L1882]              havoc newBuyPrice_s599;
[L1883]              havoc amount_s659;
[L1884]              havoc tmpNow;
[L1885]              havoc gas;
[L1886]              assume gas > 4000000 && gas <= 8000000;
[L1887]              tmpNow := now;
[L1888]              havoc now;
[L1889]              assume now > tmpNow;
[L1890]              assume msgsender_MSG != null;
[L1891]  COND FALSE  !(choice == 6)
[L1897]  COND FALSE  !(choice == 5)
[L1903]  COND FALSE  !(choice == 4)
[L1909]  COND FALSE  !(choice == 3)
[L1916]  COND TRUE   choice == 2
[L1917]              gas := gas - 21000;
[L1918]  COND TRUE   gas >= 0
[L1919]              assume _value_s261 >= 0 && _value_s261 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1920]              assume msgvalue_MSG == 0;
[L1921]  CALL        call success_s261 := transferFrom~address~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, _from_s261, _to_s261, _value_s261);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != _from_s261 && p1 != _to_s261) && (p2 != _from_s261 || p3 != msgsender_MSG)) && _from_s261 != _to_s261) && _value_s261 <= balanceOf_TokenERC20[this][_from_s261]) && _value_s261 <= allowance_TokenERC20[this][_from_s261][msgsender_MSG]) && balanceOf_TokenERC20[this][_to_s261] + _value_s261 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _value_s261 >= 0) && _value_s261 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_TokenERC20[this][_to_s261] >= 0) && balanceOf_TokenERC20[this][_to_s261] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_TokenERC20[this][_from_s261] >= 0) && balanceOf_TokenERC20[this][_from_s261] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowance_TokenERC20[this][_from_s261][msgsender_MSG] >= 0) && allowance_TokenERC20[this][_from_s261][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_TokenERC200 := true;
[L3]                 call_transferFrom_TokenERC200 := false;
[L3]                 revert := revert_hold;
[L151]               havoc __exception;
[L152]               revert := false;
[L153]   COND TRUE   __exception
[L154]               __tmp__Balance := Balance;
[L155]               __tmp__DType := DType;
[L156]               __tmp__Alloc := Alloc;
[L157]               __tmp__balance_ADDR := balance_ADDR;
[L158]               __tmp__M_Ref_int := M_Ref_int;
[L159]               __tmp__sum_balanceOf0 := sum_balanceOf0;
[L160]               __tmp__alloc_allowance_TokenERC20_lvl0 := alloc_allowance_TokenERC20_lvl0;
[L161]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L162]               __tmp__sum_allowance1 := sum_allowance1;
[L163]               __tmp__M_Ref_bool := M_Ref_bool;
[L164]               __tmp__sum_frozenAccount2 := sum_frozenAccount2;
[L165]               __tmp__Length := Length;
[L166]               __tmp__now := now;
[L167]               __tmp__owner_owned := owner_owned;
[L168]               __tmp__name_TokenERC20 := name_TokenERC20;
[L169]               __tmp__symbol_TokenERC20 := symbol_TokenERC20;
[L170]               __tmp__decimals_TokenERC20 := decimals_TokenERC20;
[L171]               __tmp__totalSupply_TokenERC20 := totalSupply_TokenERC20;
[L172]               __tmp__balanceOf_TokenERC20 := balanceOf_TokenERC20;
[L173]               __tmp__allowance_TokenERC20 := allowance_TokenERC20;
[L174]               __tmp__sellPrice_NOL := sellPrice_NOL;
[L175]               __tmp__buyPrice_NOL := buyPrice_NOL;
[L176]               __tmp__frozenAccount_NOL := frozenAccount_NOL;
[L177]   CALL        call success_s261 := transferFrom~address~address~uint256_TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, _from_s261, _to_s261, _value_s261);
[L848]   COND FALSE  !(!(_value_s261 <= __tmp__allowance_TokenERC20[this][_from_s261][msgsender_MSG]))
[L852]               __tmp__sum_allowance1[_from_s261] := __tmp__sum_allowance1[_from_s261] - __tmp__allowance_TokenERC20[this][_from_s261][msgsender_MSG];
[L853]               __tmp__allowance_TokenERC20[this][_from_s261][msgsender_MSG] := (__tmp__allowance_TokenERC20[this][_from_s261][msgsender_MSG] - _value_s261) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L854]               __tmp__sum_allowance1[_from_s261] := __tmp__sum_allowance1[_from_s261] + __tmp__allowance_TokenERC20[this][_from_s261][msgsender_MSG];
[L855]   COND TRUE   __tmp__DType[this] == NOL
[L856]   CALL        call _transfer~address~address~uint256_NOL__fail(this, msgsender_MSG, msgvalue_MSG, _from_s261, _to_s261, _value_s261);
[L956]               __var_2 := null;
[L957]   COND TRUE   !(_to_s522 != null)
[L958]               revert := true;
[L856]   RET         call _transfer~address~address~uint256_NOL__fail(this, msgsender_MSG, msgvalue_MSG, _from_s261, _to_s261, _value_s261);
[L857]   COND TRUE   revert
[L177]   RET         call success_s261 := transferFrom~address~address~uint256_TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, _from_s261, _to_s261, _value_s261);
[L178]               assume revert || gas < 0;
[L1921]  RET         call success_s261 := transferFrom~address~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, _from_s261, _to_s261, _value_s261);
[L1946]  RET         call CorralChoice_NOL(this);

Loop:
[L1946]        assume true;

[2020-11-24 15:50:41,357 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 15:50:41,357 INFO  L82        PathProgramCache]: Analyzing trace with hash 987296751, now seen corresponding path program 1 times
[2020-11-24 15:50:41,358 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 15:50:41,364 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 15:50:41,371 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 15:50:41,406 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 15:50:41,406 INFO  L82        PathProgramCache]: Analyzing trace with hash 7563, now seen corresponding path program 1 times
[2020-11-24 15:50:41,407 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 15:50:41,407 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 15:50:41,407 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 15:50:41,408 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 15:50:41,408 INFO  L82        PathProgramCache]: Analyzing trace with hash 541435741, now seen corresponding path program 1 times
[2020-11-24 15:50:41,409 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 15:50:41,414 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 15:50:41,421 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 139 to 277
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #5: 397 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 397 to 787
[2020-11-24 15:50:41,900 WARN  L188               SmtUtils]: Spent 277.00 ms on a formula simplification. DAG size of input: 197 DAG size of output: 189
Garbage collection #1: 67 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 67 to 131
Garbage collection #2: 131 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 131 to 257
Garbage collection #3: 257 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 257 to 509
Garbage collection #4: 509 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 509 to 1013
Garbage collection #5: 1013 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1013 to 2017
Garbage collection #6: 2017 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2017 to 4027
Garbage collection #1: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #2: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #3: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #4: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #5: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #6: 1571 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 1571 to 3137
Garbage collection #7: 3137 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 3137 to 6271
Garbage collection #8: 6271 nodes / 0 free / 0.001s / 0.003s total
Resizing node table from 6271 to 12541
[2020-11-24 15:50:42,223 WARN  L188               SmtUtils]: Spent 288.00 ms on a formula simplification. DAG size of input: 144 DAG size of output: 138
[2020-11-24 15:50:42,521 WARN  L188               SmtUtils]: Spent 296.00 ms on a formula simplification that was a NOOP. DAG size: 308
Garbage collection #1: 127 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 127 to 251
Garbage collection #2: 251 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 251 to 499
Garbage collection #3: 499 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 499 to 997
Garbage collection #4: 997 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 997 to 1993
Garbage collection #5: 1993 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 1993 to 3967
Garbage collection #6: 3967 nodes / 0 free / 0.001s / 0.003s total
Resizing node table from 3967 to 7933
Garbage collection #7: 7933 nodes / 0 free / 0.002s / 0.005s total
Resizing node table from 7933 to 15859
[2020-11-24 15:50:43,948 WARN  L188               SmtUtils]: Spent 1.40 s on a formula simplification. DAG size of input: 256 DAG size of output: 256
[2020-11-24 15:50:45,522 WARN  L188               SmtUtils]: Spent 1.57 s on a formula simplification. DAG size of input: 291 DAG size of output: 276
Garbage collection #1: 97 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 3019 to 6037
Garbage collection #7: 6037 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 6037 to 12073
Garbage collection #8: 12073 nodes / 0 free / 0.001s / 0.003s total
Resizing node table from 12073 to 24137
Garbage collection #9: 24137 nodes / 0 free / 0.001s / 0.004s total
Resizing node table from 24137 to 48271
Garbage collection #1: 67 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 67 to 131
Garbage collection #2: 131 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 131 to 257
Garbage collection #3: 257 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 257 to 509
Garbage collection #4: 509 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 509 to 1013
Garbage collection #5: 1013 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1013 to 2017
Garbage collection #6: 2017 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2017 to 4027
Garbage collection #7: 4027 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4027 to 8053
[2020-11-24 15:50:47,006 WARN  L188               SmtUtils]: Spent 1.45 s on a formula simplification. DAG size of input: 193 DAG size of output: 177
[2020-11-24 15:50:47,605 WARN  L188               SmtUtils]: Spent 597.00 ms on a formula simplification that was a NOOP. DAG size: 338
Garbage collection #1: 127 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 127 to 251
Garbage collection #2: 251 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 251 to 499
Garbage collection #3: 499 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 499 to 997
Garbage collection #4: 997 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 997 to 1993
Garbage collection #5: 1993 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1993 to 3967
Garbage collection #6: 3967 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3967 to 7933
Garbage collection #7: 7933 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 7933 to 15859
[2020-11-24 15:50:49,979 WARN  L188               SmtUtils]: Spent 2.36 s on a formula simplification. DAG size of input: 280 DAG size of output: 271
[2020-11-24 15:50:50,870 WARN  L188               SmtUtils]: Spent 888.00 ms on a formula simplification. DAG size of input: 290 DAG size of output: 285
Garbage collection #1: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #2: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #3: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #4: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #5: 1571 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1571 to 3137
Garbage collection #6: 3137 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3137 to 6271
Garbage collection #7: 6271 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 6271 to 12541
Garbage collection #1: 67 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 67 to 131
Garbage collection #2: 131 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 131 to 257
Garbage collection #3: 257 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 257 to 509
Garbage collection #4: 509 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 509 to 1013
Garbage collection #5: 1013 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1013 to 2017
Garbage collection #6: 2017 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2017 to 4027
[2020-11-24 15:50:51,386 WARN  L188               SmtUtils]: Spent 503.00 ms on a formula simplification. DAG size of input: 189 DAG size of output: 180
[2020-11-24 15:50:51,728 WARN  L188               SmtUtils]: Spent 328.00 ms on a formula simplification that was a NOOP. DAG size: 283
Garbage collection #1: 101 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 101 to 199
Garbage collection #2: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #3: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #4: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #5: 1571 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1571 to 3137
Garbage collection #6: 3137 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3137 to 6271
Garbage collection #1: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #2: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #3: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #4: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #5: 1093 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1093 to 2179
Garbage collection #6: 2179 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2179 to 4357
Garbage collection #7: 4357 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4357 to 8713
Garbage collection #8: 8713 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 8713 to 17419
[2020-11-24 15:50:55,905 WARN  L188               SmtUtils]: Spent 4.15 s on a formula simplification. DAG size of input: 318 DAG size of output: 212
[2020-11-24 15:50:58,937 WARN  L188               SmtUtils]: Spent 3.03 s on a formula simplification. DAG size of input: 317 DAG size of output: 316
Garbage collection #1: 109 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 109 to 211
Garbage collection #2: 211 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 211 to 421
Garbage collection #3: 421 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 421 to 839
Garbage collection #4: 839 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 839 to 1669
Garbage collection #5: 1669 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1669 to 3331
Garbage collection #6: 3331 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3331 to 6661
Garbage collection #7: 6661 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 6661 to 13313
Garbage collection #8: 13313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13313 to 26597
Garbage collection #1: 127 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 127 to 251
Garbage collection #2: 251 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 251 to 499
Garbage collection #3: 499 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 499 to 997
Garbage collection #4: 997 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 997 to 1993
Garbage collection #5: 1993 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1993 to 3967
Garbage collection #6: 3967 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3967 to 7933
Garbage collection #7: 7933 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 7933 to 15859
Garbage collection #8: 15859 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 15859 to 31699
Garbage collection #9: 31699 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 31699 to 63397
Garbage collection #10: 63397 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 63397 to 113383
Garbage collection #11: 113383 nodes / 0 free / 0.002s / 0.004s total
Resizing node table from 113383 to 163367
Garbage collection #12: 163367 nodes / 0 free / 0.003s / 0.007s total
Resizing node table from 163367 to 213361
[2020-11-24 15:52:58,955 WARN  L188               SmtUtils]: Spent 1.97 m on a formula simplification. DAG size of input: 5087 DAG size of output: 312
[2020-11-24 15:52:58,965 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 15:52:58,970 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 24.11 03:52:58 BasicIcfg
[2020-11-24 15:52:58,970 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-24 15:52:58,970 INFO  L168              Benchmark]: Toolchain (without parser) took 141445.77 ms. Allocated memory was 1.0 GB in the beginning and 2.9 GB in the end (delta: 1.9 GB). Free memory was 945.9 MB in the beginning and 581.9 MB in the end (delta: 364.1 MB). Peak memory consumption was 3.9 GB. Max. memory is 15.3 GB.
[2020-11-24 15:52:58,970 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.14 ms. Allocated memory is still 1.0 GB. Free memory is still 956.7 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-24 15:52:58,971 INFO  L168              Benchmark]: Boogie Preprocessor took 72.28 ms. Allocated memory is still 1.0 GB. Free memory was 945.9 MB in the beginning and 935.2 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
[2020-11-24 15:52:58,971 INFO  L168              Benchmark]: UtopiaSpecLang took 52.51 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 929.8 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-24 15:52:58,971 INFO  L168              Benchmark]: Boogie Printer took 10.32 ms. Allocated memory is still 1.0 GB. Free memory is still 929.8 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-24 15:52:58,971 INFO  L168              Benchmark]: RCFGBuilder took 582.35 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 876.1 MB in the end (delta: 53.7 MB). Peak memory consumption was 53.7 MB. Max. memory is 15.3 GB.
[2020-11-24 15:52:58,972 INFO  L168              Benchmark]: UtopiaLTL2Aut took 39.44 ms. Allocated memory is still 1.0 GB. Free memory was 876.1 MB in the beginning and 867.2 MB in the end (delta: 8.9 MB). Peak memory consumption was 8.9 MB. Max. memory is 15.3 GB.
[2020-11-24 15:52:58,972 INFO  L168              Benchmark]: BÃ¼chi Program Product took 960.36 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 55.1 MB). Free memory was 867.2 MB in the beginning and 913.0 MB in the end (delta: -45.8 MB). Peak memory consumption was 151.0 MB. Max. memory is 15.3 GB.
[2020-11-24 15:52:58,973 INFO  L168              Benchmark]: BlockEncodingV2 took 65.90 ms. Allocated memory is still 1.1 GB. Free memory was 913.0 MB in the beginning and 881.6 MB in the end (delta: 31.4 MB). Peak memory consumption was 31.4 MB. Max. memory is 15.3 GB.
[2020-11-24 15:52:58,973 INFO  L168              Benchmark]: BuchiAutomizer took 139659.76 ms. Allocated memory was 1.1 GB in the beginning and 2.9 GB in the end (delta: 1.9 GB). Free memory was 881.6 MB in the beginning and 581.9 MB in the end (delta: 299.7 MB). Peak memory consumption was 3.8 GB. Max. memory is 15.3 GB.
[2020-11-24 15:52:58,975 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    1550 locations, 2702 edges
  - StatisticsResult: Encoded RCFG
    1516 locations, 2617 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.14 ms. Allocated memory is still 1.0 GB. Free memory is still 956.7 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 72.28 ms. Allocated memory is still 1.0 GB. Free memory was 945.9 MB in the beginning and 935.2 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 52.51 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 929.8 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 10.32 ms. Allocated memory is still 1.0 GB. Free memory is still 929.8 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * RCFGBuilder took 582.35 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 876.1 MB in the end (delta: 53.7 MB). Peak memory consumption was 53.7 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 39.44 ms. Allocated memory is still 1.0 GB. Free memory was 876.1 MB in the beginning and 867.2 MB in the end (delta: 8.9 MB). Peak memory consumption was 8.9 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 960.36 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 55.1 MB). Free memory was 867.2 MB in the beginning and 913.0 MB in the end (delta: -45.8 MB). Peak memory consumption was 151.0 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 65.90 ms. Allocated memory is still 1.1 GB. Free memory was 913.0 MB in the beginning and 881.6 MB in the end (delta: 31.4 MB). Peak memory consumption was 31.4 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 139659.76 ms. Allocated memory was 1.1 GB in the beginning and 2.9 GB in the end (delta: 1.9 GB). Free memory was 881.6 MB in the beginning and 581.9 MB in the end (delta: 299.7 MB). Peak memory consumption was 3.8 GB. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    671 locations, 838 edges
  - StatisticsResult: BuchiProgram size
    1550 locations, 2702 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 5 terminating modules (5 trivial, 0 deterministic, 0 nondeterministic) and one nonterminating remainder module.5 modules have a trivial ranking function, the largest among these consists of 15 locations. The remainder module has 192 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 139.6s and 6 iterations.  TraceHistogramMax:1. Analysis of lassos took 138.4s. Construction of modules took 0.6s. BÃ¼chi inclusion checks took 0.3s. Highest rank in rank-based complementation 0. Minimization of det autom 5. Minimization of nondet autom 0. Automata minimization 0.0s AutomataMinimizationTime, 5 MinimizatonAttempts, 25 StatesRemovedByMinimization, 3 NontrivialMinimizations. Non-live state removal took 0.0s Buchi closure took 0.0s. Biggest automaton had 249 states and ocurred in iteration 1.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 1728 SDtfs, 1240 SDslu, 2843 SDs, 0 SdLazy, 1660 SolverSat, 542 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 0.6s Time	LassoAnalysisResults: nont1 unkn0 SFLI0 SFLT0 conc0 concLT0 SILN0 SILU5 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - TransactionCounterexample: Violation of LTL property LTL
    Found an infinite, lasso-shaped execution that violates the LTL property LTL.
Stem:
TokenERC20(16).transferFrom~address~address~uint256.gas(3979001)({from : 14, _from : 13, _to : 0, _value : 0});
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != _from_s261 && p1 != _to_s261) && (p2 != _from_s261 || p3 != msgsender_MSG)) && _from_s261 != _to_s261) && _value_s261 <= balanceOf_TokenERC20[this][_from_s261]) && _value_s261 <= allowance_TokenERC20[this][_from_s261][msgsender_MSG]) && balanceOf_TokenERC20[this][_to_s261] + _value_s261 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _value_s261 >= 0) && _value_s261 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_TokenERC20[this][_to_s261] >= 0) && balanceOf_TokenERC20[this][_to_s261] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_TokenERC20[this][_from_s261] >= 0) && balanceOf_TokenERC20[this][_from_s261] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowance_TokenERC20[this][_from_s261][msgsender_MSG] >= 0) && allowance_TokenERC20[this][_from_s261][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_TokenERC200 := true;
[L3]                 call_transferFrom_TokenERC200 := false;
[L3]                 revert := revert_hold;
[L151]               havoc __exception;
[L152]               revert := false;
[L153]   COND TRUE   __exception
[L154]               __tmp__Balance := Balance;
[L155]               __tmp__DType := DType;
[L156]               __tmp__Alloc := Alloc;
[L157]               __tmp__balance_ADDR := balance_ADDR;
[L158]               __tmp__M_Ref_int := M_Ref_int;
[L159]               __tmp__sum_balanceOf0 := sum_balanceOf0;
[L160]               __tmp__alloc_allowance_TokenERC20_lvl0 := alloc_allowance_TokenERC20_lvl0;
[L161]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L162]               __tmp__sum_allowance1 := sum_allowance1;
[L163]               __tmp__M_Ref_bool := M_Ref_bool;
[L164]               __tmp__sum_frozenAccount2 := sum_frozenAccount2;
[L165]               __tmp__Length := Length;
[L166]               __tmp__now := now;
[L167]               __tmp__owner_owned := owner_owned;
[L168]               __tmp__name_TokenERC20 := name_TokenERC20;
[L169]               __tmp__symbol_TokenERC20 := symbol_TokenERC20;
[L170]               __tmp__decimals_TokenERC20 := decimals_TokenERC20;
[L171]               __tmp__totalSupply_TokenERC20 := totalSupply_TokenERC20;
[L172]               __tmp__balanceOf_TokenERC20 := balanceOf_TokenERC20;
[L173]               __tmp__allowance_TokenERC20 := allowance_TokenERC20;
[L174]               __tmp__sellPrice_NOL := sellPrice_NOL;
[L175]               __tmp__buyPrice_NOL := buyPrice_NOL;
[L176]               __tmp__frozenAccount_NOL := frozenAccount_NOL;
[L177]   CALL        call success_s261 := transferFrom~address~address~uint256_TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, _from_s261, _to_s261, _value_s261);
[L848]   COND FALSE  !(!(_value_s261 <= __tmp__allowance_TokenERC20[this][_from_s261][msgsender_MSG]))
[L852]               __tmp__sum_allowance1[_from_s261] := __tmp__sum_allowance1[_from_s261] - __tmp__allowance_TokenERC20[this][_from_s261][msgsender_MSG];
[L853]               __tmp__allowance_TokenERC20[this][_from_s261][msgsender_MSG] := (__tmp__allowance_TokenERC20[this][_from_s261][msgsender_MSG] - _value_s261) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L854]               __tmp__sum_allowance1[_from_s261] := __tmp__sum_allowance1[_from_s261] + __tmp__allowance_TokenERC20[this][_from_s261][msgsender_MSG];
[L855]   COND TRUE   __tmp__DType[this] == NOL
[L856]   CALL        call _transfer~address~address~uint256_NOL__fail(this, msgsender_MSG, msgvalue_MSG, _from_s261, _to_s261, _value_s261);
[L956]               __var_2 := null;
[L957]   COND TRUE   !(_to_s522 != null)
[L958]               revert := true;
[L856]   RET         call _transfer~address~address~uint256_NOL__fail(this, msgsender_MSG, msgvalue_MSG, _from_s261, _to_s261, _value_s261);
[L857]   COND TRUE   revert
[L177]   RET         call success_s261 := transferFrom~address~address~uint256_TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, _from_s261, _to_s261, _value_s261);
[L178]               assume revert || gas < 0;
[L1921]  RET         call success_s261 := transferFrom~address~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, _from_s261, _to_s261, _value_s261);

Loop:

End of lasso representation.
RESULT: Ultimate could not prove your program: Toolchain returned no result.
Received shutdown request...
