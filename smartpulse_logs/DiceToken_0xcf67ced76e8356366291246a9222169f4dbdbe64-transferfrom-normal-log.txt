This is Ultimate 0.1.24-f1553f5-m
[2020-11-24 18:28:48,018 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-24 18:28:48,019 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-24 18:28:48,031 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-24 18:28:48,031 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-24 18:28:48,032 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-24 18:28:48,033 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-24 18:28:48,034 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-24 18:28:48,036 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-24 18:28:48,036 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-24 18:28:48,037 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-24 18:28:48,037 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-24 18:28:48,038 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-24 18:28:48,039 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-24 18:28:48,040 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-24 18:28:48,040 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-24 18:28:48,041 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-24 18:28:48,042 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-24 18:28:48,044 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-24 18:28:48,045 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-24 18:28:48,046 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-24 18:28:48,047 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-24 18:28:48,048 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-24 18:28:48,049 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-24 18:28:48,049 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-24 18:28:48,049 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-24 18:28:48,050 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-24 18:28:48,050 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-24 18:28:48,050 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-24 18:28:48,051 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-24 18:28:48,051 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-24 18:28:48,052 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-24 18:28:48,052 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-24 18:28:48,053 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-24 18:28:48,053 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-24 18:28:48,053 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-24 18:28:48,054 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-24 18:28:48,054 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-24 18:28:48,054 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-24 18:28:48,055 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-24 18:28:48,055 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-24 18:28:48,056 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-24 18:28:48,063 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-24 18:28:48,063 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-24 18:28:48,064 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-24 18:28:48,064 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-24 18:28:48,064 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-24 18:28:48,065 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-24 18:28:48,065 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-24 18:28:48,065 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-24 18:28:48,065 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-24 18:28:48,065 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-24 18:28:48,065 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-24 18:28:48,065 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-24 18:28:48,065 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-24 18:28:48,065 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-24 18:28:48,066 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-24 18:28:48,066 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-24 18:28:48,066 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-24 18:28:48,066 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-24 18:28:48,066 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-24 18:28:48,066 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-24 18:28:48,066 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-24 18:28:48,066 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-24 18:28:48,066 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-24 18:28:48,066 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-24 18:28:48,067 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-24 18:28:48,067 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-24 18:28:48,088 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-24 18:28:48,098 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-24 18:28:48,101 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-24 18:28:48,102 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-24 18:28:48,103 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-24 18:28:48,103 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/DiceToken_0xcf67ced76e8356366291246a9222169f4dbdbe64_transferfrom-normal.bpl
[2020-11-24 18:28:48,103 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/DiceToken_0xcf67ced76e8356366291246a9222169f4dbdbe64_transferfrom-normal.bpl'
[2020-11-24 18:28:48,161 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-24 18:28:48,162 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-24 18:28:48,162 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-24 18:28:48,163 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-24 18:28:48,163 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-24 18:28:48,179 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "DiceToken_0xcf67ced76e8356366291246a9222169f4dbdbe64_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 06:28:48" (1/1) ...
[2020-11-24 18:28:48,180 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "DiceToken_0xcf67ced76e8356366291246a9222169f4dbdbe64_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 06:28:48" (1/1) ...
[2020-11-24 18:28:48,204 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "DiceToken_0xcf67ced76e8356366291246a9222169f4dbdbe64_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 06:28:48" (1/1) ...
[2020-11-24 18:28:48,205 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "DiceToken_0xcf67ced76e8356366291246a9222169f4dbdbe64_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 06:28:48" (1/1) ...
[2020-11-24 18:28:48,219 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "DiceToken_0xcf67ced76e8356366291246a9222169f4dbdbe64_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 06:28:48" (1/1) ...
[2020-11-24 18:28:48,225 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "DiceToken_0xcf67ced76e8356366291246a9222169f4dbdbe64_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 06:28:48" (1/1) ...
[2020-11-24 18:28:48,229 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "DiceToken_0xcf67ced76e8356366291246a9222169f4dbdbe64_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 06:28:48" (1/1) ...
[2020-11-24 18:28:48,235 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-24 18:28:48,235 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-24 18:28:48,236 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-24 18:28:48,238 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-24 18:28:48,242 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "DiceToken_0xcf67ced76e8356366291246a9222169f4dbdbe64_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 06:28:48" (1/1) ...
[2020-11-24 18:28:48,254 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(DiceToken.transferFrom(from, to, value), p1 != from && p1 != to && (p2 != from || p3 != msg.sender) && from != to && value <= balances_DiceToken[this][from] && value <= allowed_DiceToken[this][from][msg.sender] && balances_DiceToken[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_DiceToken[this][to] >= 0 && balances_DiceToken[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_DiceToken[this][from] >= 0 &&  balances_DiceToken[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && allowed_DiceToken[this][from][msg.sender] >= 0 && allowed_DiceToken[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(DiceToken.transferFrom(from, to, value), return == true && balances_DiceToken[this][from] == old(balances_DiceToken[this][from]) - value && balances_DiceToken[this][to] == old(balances_DiceToken[this][to]) + value && allowed_DiceToken[this][from][msg.sender] == old(allowed_DiceToken[this][from][msg.sender]) - value && _totalSupply_DiceToken[this] == old(_totalSupply_DiceToken[this]) && balances_DiceToken[this][p1] == old(balances_DiceToken[this][p1]) && allowed_DiceToken[this][p2][p3] == old(allowed_DiceToken[this][p2][p3]) && symbol_DiceToken[this] == old(symbol_DiceToken[this]) && name_DiceToken[this] == old(name_DiceToken[this]) && decimals_DiceToken[this] == old(decimals_DiceToken[this]) && owner_Owned[this] == old(owner_Owned[this]) && newOwner_Owned[this] == old(newOwner_Owned[this]))))
[2020-11-24 18:28:48,259 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(DiceToken.transferFrom(from, to, value), p1 != from && p1 != to && (p2 != from || p3 != msg.sender) && from != to && value <= balances_DiceToken[this][from] && value <= allowed_DiceToken[this][from][msg.sender] && balances_DiceToken[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_DiceToken[this][to] >= 0 && balances_DiceToken[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_DiceToken[this][from] >= 0 &&  balances_DiceToken[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && allowed_DiceToken[this][from][msg.sender] >= 0 && allowed_DiceToken[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(DiceToken.transferFrom(from, to, value), return == true && balances_DiceToken[this][from] == old(balances_DiceToken[this][from]) - value && balances_DiceToken[this][to] == old(balances_DiceToken[this][to]) + value && allowed_DiceToken[this][from][msg.sender] == old(allowed_DiceToken[this][from][msg.sender]) - value && _totalSupply_DiceToken[this] == old(_totalSupply_DiceToken[this]) && balances_DiceToken[this][p1] == old(balances_DiceToken[this][p1]) && allowed_DiceToken[this][p2][p3] == old(allowed_DiceToken[this][p2][p3]) && symbol_DiceToken[this] == old(symbol_DiceToken[this]) && name_DiceToken[this] == old(name_DiceToken[this]) && decimals_DiceToken[this] == old(decimals_DiceToken[this]) && owner_Owned[this] == old(owner_Owned[this]) && newOwner_Owned[this] == old(newOwner_Owned[this]))))
[2020-11-24 18:28:48,267 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(DiceToken.transferFrom(from, to, value), p1 != from && p1 != to && (p2 != from || p3 != msg.sender) && from != to && value <= balances_DiceToken[this][from] && value <= allowed_DiceToken[this][from][msg.sender] && balances_DiceToken[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_DiceToken[this][to] >= 0 && balances_DiceToken[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_DiceToken[this][from] >= 0 &&  balances_DiceToken[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && allowed_DiceToken[this][from][msg.sender] >= 0 && allowed_DiceToken[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(DiceToken.transferFrom(from, to, value), return == true && balances_DiceToken[this][from] == old(balances_DiceToken[this][from]) - value && balances_DiceToken[this][to] == old(balances_DiceToken[this][to]) + value && allowed_DiceToken[this][from][msg.sender] == old(allowed_DiceToken[this][from][msg.sender]) - value && _totalSupply_DiceToken[this] == old(_totalSupply_DiceToken[this]) && balances_DiceToken[this][p1] == old(balances_DiceToken[this][p1]) && allowed_DiceToken[this][p2][p3] == old(allowed_DiceToken[this][p2][p3]) && symbol_DiceToken[this] == old(symbol_DiceToken[this]) && name_DiceToken[this] == old(name_DiceToken[this]) && decimals_DiceToken[this] == old(decimals_DiceToken[this]) && owner_Owned[this] == old(owner_Owned[this]) && newOwner_Owned[this] == old(newOwner_Owned[this]))))
[2020-11-24 18:28:48,273 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( ( ( ( ( ( ( p1!=from_s453 && p1!=to_s453 ) && ( p2!=from_s453 || p3!=msg.sender ) ) && from_s453!=to_s453 ) && tokens_s453<=balances_DiceToken[this][from_s453] ) && tokens_s453<=allowed_DiceToken[this][from_s453][msg.sender] ) && ( balances_DiceToken[this][to_s453] + tokens_s453 )<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && tokens_s453>=0 ) && tokens_s453<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && balances_DiceToken[this][to_s453]>=0 ) && balances_DiceToken[this][to_s453]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && balances_DiceToken[this][from_s453]>=0 ) && balances_DiceToken[this][from_s453]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && allowed_DiceToken[this][from_s453][msg.sender]>=0 ) && allowed_DiceToken[this][from_s453][msg.sender]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPNEQ,IdentifierExpression[p1,GLOBAL],IdentifierExpression[from_s453,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DiceToken>]],BinaryExpression[COMPNEQ,IdentifierExpression[p1,GLOBAL],IdentifierExpression[to_s453,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DiceToken>]]],BinaryExpression[LOGICOR,BinaryExpression[COMPNEQ,IdentifierExpression[p2,GLOBAL],IdentifierExpression[from_s453,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DiceToken>]],BinaryExpression[COMPNEQ,IdentifierExpression[p3,GLOBAL],IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DiceToken>]]]],BinaryExpression[COMPNEQ,IdentifierExpression[from_s453,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DiceToken>],IdentifierExpression[to_s453,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DiceToken>]]],BinaryExpression[COMPLEQ,IdentifierExpression[tokens_s453,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DiceToken>],ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_DiceToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DiceToken>]]],[IdentifierExpression[from_s453,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DiceToken>]]]]],BinaryExpression[COMPLEQ,IdentifierExpression[tokens_s453,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DiceToken>],ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowed_DiceToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DiceToken>]]],[IdentifierExpression[from_s453,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DiceToken>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DiceToken>]]]]],BinaryExpression[COMPLT,BinaryExpression[ARITHPLUS,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_DiceToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DiceToken>]]],[IdentifierExpression[to_s453,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DiceToken>]]],IdentifierExpression[tokens_s453,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DiceToken>]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,IdentifierExpression[tokens_s453,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DiceToken>],IntegerLiteral[0]]],BinaryExpression[COMPLT,IdentifierExpression[tokens_s453,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DiceToken>],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_DiceToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DiceToken>]]],[IdentifierExpression[to_s453,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DiceToken>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_DiceToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DiceToken>]]],[IdentifierExpression[to_s453,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DiceToken>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_DiceToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DiceToken>]]],[IdentifierExpression[from_s453,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DiceToken>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_DiceToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DiceToken>]]],[IdentifierExpression[from_s453,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DiceToken>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowed_DiceToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DiceToken>]]],[IdentifierExpression[from_s453,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DiceToken>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DiceToken>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowed_DiceToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DiceToken>]]],[IdentifierExpression[from_s453,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DiceToken>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DiceToken>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]]
[2020-11-24 18:28:48,276 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( ( ( ( success_s453==true && balances_DiceToken[this][from_s453]==( ( old(balances_DiceToken[this][from_s453]) ) - tokens_s453 ) ) && balances_DiceToken[this][to_s453]==( ( old(balances_DiceToken[this][to_s453]) ) + tokens_s453 ) ) && allowed_DiceToken[this][from_s453][msg.sender]==( ( old(allowed_DiceToken[this][from_s453][msg.sender]) ) - tokens_s453 ) ) && _totalSupply_DiceToken[this]==( old(_totalSupply_DiceToken[this]) ) ) && balances_DiceToken[this][p1]==( old(balances_DiceToken[this][p1]) ) ) && allowed_DiceToken[this][p2][p3]==( old(allowed_DiceToken[this][p2][p3]) ) ) && symbol_DiceToken[this]==( old(symbol_DiceToken[this]) ) ) && name_DiceToken[this]==( old(name_DiceToken[this]) ) ) && decimals_DiceToken[this]==( old(decimals_DiceToken[this]) ) ) && owner_Owned[this]==( old(owner_Owned[this]) ) ) && newOwner_Owned[this]==( old(newOwner_Owned[this]) ) ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[success_s453,<IMPLEMENTATION_OUTPARAM,transferFrom~address~address~uint256_DiceToken>],BooleanLiteral[true]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_DiceToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DiceToken>]]],[IdentifierExpression[from_s453,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DiceToken>]]],BinaryExpression[ARITHMINUS,UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_DiceToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DiceToken>]]],[IdentifierExpression[from_s453,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DiceToken>]]]],IdentifierExpression[tokens_s453,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DiceToken>]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_DiceToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DiceToken>]]],[IdentifierExpression[to_s453,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DiceToken>]]],BinaryExpression[ARITHPLUS,UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_DiceToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DiceToken>]]],[IdentifierExpression[to_s453,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DiceToken>]]]],IdentifierExpression[tokens_s453,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DiceToken>]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowed_DiceToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DiceToken>]]],[IdentifierExpression[from_s453,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DiceToken>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DiceToken>]]],BinaryExpression[ARITHMINUS,UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowed_DiceToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DiceToken>]]],[IdentifierExpression[from_s453,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DiceToken>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DiceToken>]]]],IdentifierExpression[tokens_s453,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DiceToken>]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_totalSupply_DiceToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DiceToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_totalSupply_DiceToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DiceToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_DiceToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DiceToken>]]],[IdentifierExpression[p1,GLOBAL]]],UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_DiceToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DiceToken>]]],[IdentifierExpression[p1,GLOBAL]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowed_DiceToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DiceToken>]]],[IdentifierExpression[p2,GLOBAL]]],[IdentifierExpression[p3,GLOBAL]]],UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowed_DiceToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DiceToken>]]],[IdentifierExpression[p2,GLOBAL]]],[IdentifierExpression[p3,GLOBAL]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[symbol_DiceToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DiceToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[symbol_DiceToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DiceToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[name_DiceToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DiceToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[name_DiceToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DiceToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[decimals_DiceToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DiceToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[decimals_DiceToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DiceToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[owner_Owned,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DiceToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[owner_Owned,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DiceToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[newOwner_Owned,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DiceToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[newOwner_Owned,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DiceToken>]]]]]]
[2020-11-24 18:28:48,279 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(DiceToken.transferFrom(from, to, value), p1 != from && p1 != to && (p2 != from || p3 != msg.sender) && from != to && value <= balances_DiceToken[this][from] && value <= allowed_DiceToken[this][from][msg.sender] && balances_DiceToken[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_DiceToken[this][to] >= 0 && balances_DiceToken[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_DiceToken[this][from] >= 0 &&  balances_DiceToken[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && allowed_DiceToken[this][from][msg.sender] >= 0 && allowed_DiceToken[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(DiceToken.transferFrom(from, to, value), return == true && balances_DiceToken[this][from] == old(balances_DiceToken[this][from]) - value && balances_DiceToken[this][to] == old(balances_DiceToken[this][to]) + value && allowed_DiceToken[this][from][msg.sender] == old(allowed_DiceToken[this][from][msg.sender]) - value && _totalSupply_DiceToken[this] == old(_totalSupply_DiceToken[this]) && balances_DiceToken[this][p1] == old(balances_DiceToken[this][p1]) && allowed_DiceToken[this][p2][p3] == old(allowed_DiceToken[this][p2][p3]) && symbol_DiceToken[this] == old(symbol_DiceToken[this]) && name_DiceToken[this] == old(name_DiceToken[this]) && decimals_DiceToken[this] == old(decimals_DiceToken[this]) && owner_Owned[this] == old(owner_Owned[this]) && newOwner_Owned[this] == old(newOwner_Owned[this]))))
[2020-11-24 18:28:48,280 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_transferFrom_DiceToken0) ==> ( <>AP(success_transferFrom_DiceToken0) ) ) )
Executed UtopiaSpecLang
[2020-11-24 18:28:48,284 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 06:28:48 PropertyContainer
[2020-11-24 18:28:48,285 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-24 18:28:48,285 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-24 18:28:48,285 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-24 18:28:48,285 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-24 18:28:48,286 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "DiceToken_0xcf67ced76e8356366291246a9222169f4dbdbe64_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 06:28:48" (1/2) ...
[2020-11-24 18:28:48,286 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-24 18:28:48,286 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-24 18:28:48,294 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 06:28:48" (2/2) ...
[2020-11-24 18:28:48,294 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-24 18:28:48,295 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-24 18:28:48,295 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-24 18:28:48,295 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-24 18:28:48,297 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "DiceToken_0xcf67ced76e8356366291246a9222169f4dbdbe64_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 06:28:48" (1/2) ...
[2020-11-24 18:28:48,360 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-24 18:28:48,360 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__success
[2020-11-24 18:28:48,361 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__success
[2020-11-24 18:28:48,361 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_DiceToken
[2020-11-24 18:28:48,361 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_DiceToken
[2020-11-24 18:28:48,361 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_DiceToken
[2020-11-24 18:28:48,361 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_DiceToken
[2020-11-24 18:28:48,361 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_DiceToken
[2020-11-24 18:28:48,361 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_DiceToken
[2020-11-24 18:28:48,361 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_DiceToken
[2020-11-24 18:28:48,361 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_DiceToken
[2020-11-24 18:28:48,361 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_DiceToken
[2020-11-24 18:28:48,361 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_DiceToken
[2020-11-24 18:28:48,362 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_DiceToken
[2020-11-24 18:28:48,362 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_DiceToken
[2020-11-24 18:28:48,362 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-24 18:28:48,362 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-24 18:28:48,362 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-24 18:28:48,362 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__success
[2020-11-24 18:28:48,362 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_SafeMath
[2020-11-24 18:28:48,362 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_SafeMath
[2020-11-24 18:28:48,362 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20Interface
[2020-11-24 18:28:48,362 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20Interface
[2020-11-24 18:28:48,362 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_Owned
[2020-11-24 18:28:48,363 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_Owned
[2020-11-24 18:28:48,363 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_DiceToken
[2020-11-24 18:28:48,363 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-24 18:28:48,364 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-24 18:28:48,364 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__fail
[2020-11-24 18:28:48,364 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-24 18:28:48,364 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_DiceToken__success
[2020-11-24 18:28:48,364 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_DiceToken__fail
[2020-11-24 18:28:48,365 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_DiceToken__success
[2020-11-24 18:28:48,365 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_DiceToken__fail
[2020-11-24 18:28:48,365 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_DiceToken__success
[2020-11-24 18:28:48,365 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_DiceToken__fail
[2020-11-24 18:28:48,365 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_DiceToken__success
[2020-11-24 18:28:48,366 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_DiceToken__fail
[2020-11-24 18:28:48,366 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_DiceToken__success
[2020-11-24 18:28:48,366 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_DiceToken__fail
[2020-11-24 18:28:48,366 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_DiceToken__success
[2020-11-24 18:28:48,366 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_DiceToken__fail
[2020-11-24 18:28:48,367 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-24 18:28:48,367 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-24 18:28:48,367 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-24 18:28:48,367 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__fail
[2020-11-24 18:28:48,367 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-24 18:28:48,368 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-24 18:28:48,368 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__fail
[2020-11-24 18:28:48,368 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__success
[2020-11-24 18:28:48,368 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-24 18:28:48,368 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__success
[2020-11-24 18:28:48,368 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_DiceToken__fail
[2020-11-24 18:28:48,369 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_DiceToken__success
[2020-11-24 18:28:48,369 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_DiceToken__fail
[2020-11-24 18:28:48,369 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_DiceToken__success
[2020-11-24 18:28:48,369 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_DiceToken__fail
[2020-11-24 18:28:48,369 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_DiceToken__success
[2020-11-24 18:28:48,370 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_DiceToken__fail
[2020-11-24 18:28:48,370 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_DiceToken__success
[2020-11-24 18:28:48,370 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_DiceToken__fail
[2020-11-24 18:28:48,370 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_DiceToken__success
[2020-11-24 18:28:48,370 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_DiceToken__fail
[2020-11-24 18:28:48,370 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_DiceToken__success
[2020-11-24 18:28:48,371 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-24 18:28:48,371 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-24 18:28:48,371 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-24 18:28:48,371 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-24 18:28:48,371 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-24 18:28:48,372 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-24 18:28:48,372 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__fail
[2020-11-24 18:28:48,372 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__success
[2020-11-24 18:28:48,372 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_SafeMath
[2020-11-24 18:28:48,372 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_SafeMath
[2020-11-24 18:28:48,373 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20Interface
[2020-11-24 18:28:48,373 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20Interface
[2020-11-24 18:28:48,373 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_Owned
[2020-11-24 18:28:48,373 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_Owned
[2020-11-24 18:28:48,373 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_DiceToken
[2020-11-24 18:28:48,374 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-24 18:28:48,374 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-24 18:28:48,374 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-24 18:28:48,543 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 18:28:48,657 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 18:28:48,658 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 18:28:48,658 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 18:28:48,782 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-24 18:28:48,782 INFO  L286             CfgBuilder]: Removed 4 assue(true) statements.
[2020-11-24 18:28:48,784 INFO  L202        PluginConnector]: Adding new model DiceToken_0xcf67ced76e8356366291246a9222169f4dbdbe64_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 06:28:48 BoogieIcfgContainer
[2020-11-24 18:28:48,784 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 06:28:48" (2/2) ...
[2020-11-24 18:28:48,784 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-24 18:28:48,784 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@5b924ef2 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 06:28:48, skipping insertion in model container
[2020-11-24 18:28:48,784 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-24 18:28:48,785 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-24 18:28:48,785 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-24 18:28:48,786 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-24 18:28:48,786 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "DiceToken_0xcf67ced76e8356366291246a9222169f4dbdbe64_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 06:28:48" (1/3) ...
[2020-11-24 18:28:48,787 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@5bf40916 and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 06:28:48, skipping insertion in model container
[2020-11-24 18:28:48,787 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 06:28:48" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-24 18:28:48,823 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 06:28:48 NWAContainer
[2020-11-24 18:28:48,823 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-24 18:28:48,823 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-24 18:28:48,823 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-24 18:28:48,824 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-24 18:28:48,825 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "DiceToken_0xcf67ced76e8356366291246a9222169f4dbdbe64_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 06:28:48" (3/4) ...
[2020-11-24 18:28:48,825 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@656c4155 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 06:28:48, skipping insertion in model container
[2020-11-24 18:28:48,826 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 06:28:48" (4/4) ...
[2020-11-24 18:28:48,829 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-24 18:28:48,831 INFO  L110   BuchiProductObserver]: Initial RCFG 525 locations, 628 edges
[2020-11-24 18:28:48,832 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-24 18:28:48,841 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-24 18:28:49,672 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-24 18:28:49,675 INFO  L110   BuchiProductObserver]: BuchiProgram size 1218 locations, 2025 edges
[2020-11-24 18:28:49,675 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 06:28:49 BoogieIcfgContainer
[2020-11-24 18:28:49,675 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-24 18:28:49,675 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-24 18:28:49,675 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-24 18:28:49,677 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-24 18:28:49,678 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 06:28:49" (1/1) ...
[2020-11-24 18:28:49,713 INFO  L313           BlockEncoder]: Initial Icfg 1218 locations, 2025 edges
[2020-11-24 18:28:49,714 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-24 18:28:49,714 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-24 18:28:49,714 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-24 18:28:49,715 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-24 18:28:49,722 INFO  L70    emoveInfeasibleEdges]: Removed 39 edges and 11 locations because of local infeasibility
[2020-11-24 18:28:49,725 INFO  L70        RemoveSinkStates]: Removed 2 edges and 1 locations by removing sink states
[2020-11-24 18:28:49,730 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-24 18:28:49,732 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-24 18:28:49,733 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-24 18:28:49,733 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-24 18:28:49,735 INFO  L313           BlockEncoder]: Encoded RCFG 1192 locations, 1964 edges
[2020-11-24 18:28:49,736 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 24.11 06:28:49 BasicIcfg
[2020-11-24 18:28:49,736 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-24 18:28:49,736 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-24 18:28:49,736 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-24 18:28:49,739 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-24 18:28:49,739 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 18:28:49,739 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "DiceToken_0xcf67ced76e8356366291246a9222169f4dbdbe64_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 06:28:48" (1/6) ...
[2020-11-24 18:28:49,745 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@4ee60883 and model type DiceToken_0xcf67ced76e8356366291246a9222169f4dbdbe64_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 24.11 06:28:49, skipping insertion in model container
[2020-11-24 18:28:49,745 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 18:28:49,745 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 06:28:48" (2/6) ...
[2020-11-24 18:28:49,745 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@4ee60883 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 24.11 06:28:49, skipping insertion in model container
[2020-11-24 18:28:49,745 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 18:28:49,745 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "DiceToken_0xcf67ced76e8356366291246a9222169f4dbdbe64_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 06:28:48" (3/6) ...
[2020-11-24 18:28:49,746 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@4ee60883 and model type DiceToken_0xcf67ced76e8356366291246a9222169f4dbdbe64_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 24.11 06:28:49, skipping insertion in model container
[2020-11-24 18:28:49,746 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 18:28:49,746 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 06:28:48" (4/6) ...
[2020-11-24 18:28:49,746 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@4ee60883 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 24.11 06:28:49, skipping insertion in model container
[2020-11-24 18:28:49,746 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 18:28:49,746 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 06:28:49" (5/6) ...
[2020-11-24 18:28:49,747 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@4ee60883 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 24.11 06:28:49, skipping insertion in model container
[2020-11-24 18:28:49,747 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 18:28:49,747 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 24.11 06:28:49" (6/6) ...
[2020-11-24 18:28:49,748 INFO  L404   chiAutomizerObserver]: Analyzing ICFG DiceToken_0xcf67ced76e8356366291246a9222169f4dbdbe64_transferfrom-normal.bpl_BEv2
[2020-11-24 18:28:49,793 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-24 18:28:49,794 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-24 18:28:49,794 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-24 18:28:49,794 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-24 18:28:49,794 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-24 18:28:49,794 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-24 18:28:49,794 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-24 18:28:49,794 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-24 18:28:49,794 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-24 18:28:49,810 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1192 states.
[2020-11-24 18:28:49,847 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 18:28:49,847 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 18:28:49,847 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 18:28:49,855 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 18:28:49,855 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
[2020-11-24 18:28:49,855 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-24 18:28:49,856 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1192 states.
[2020-11-24 18:28:49,865 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 18:28:49,865 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 18:28:49,865 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 18:28:49,866 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 18:28:49,866 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L3]                 success_transferFrom_DiceToken0 := false;
[L3]                 call_transferFrom_DiceToken0 := false;
[L3]     CALL        call main();
[L3]                 havoc p3;
[L3]                 havoc p2;
[L3]                 havoc p1;
[L1471]              assume null == 0;
[L1472]  CALL        call this := FreshRefGenerator__success();
[L611]               havoc newRef;
[L612]               assume Alloc[newRef] == false;
[L613]               Alloc[newRef] := true;
[L614]               assume newRef != null;
[L1472]  RET         call this := FreshRefGenerator__success();
[L1473]              assume now >= 0;
[L1474]              assume DType[this] == DiceToken;
[L1475]              assume !revert && gas >= 0;
[L1476]  CALL        call CorralChoice_DiceToken(this);
[L1388]              havoc msgsender_MSG;
[L1389]              havoc msgvalue_MSG;
[L1390]              havoc choice;
[L1391]              havoc __ret_0_totalSupply;
[L1392]              havoc tokenOwner_s323;
[L1393]              havoc balance_s323;
[L1394]              havoc tokenOwner_s469;
[L1395]              havoc spender_s469;
[L1396]              havoc remaining_s469;
[L1397]              havoc to_s366;
[L1398]              havoc tokens_s366;
[L1399]              havoc success_s366;
[L1400]              havoc spender_s394;
[L1401]              havoc tokens_s394;
[L1402]              havoc success_s394;
[L1403]              havoc from_s453;
[L1404]              havoc to_s453;
[L1405]              havoc tokens_s453;
[L1406]              havoc success_s453;
[L1407]              havoc __ret_0_owner;
[L1408]              havoc __ret_0_newOwner;
[L1409]              havoc _newOwner_s205;
[L1410]              havoc __ret_0_symbol;
[L1411]              havoc __ret_0_name;
[L1412]              havoc __ret_0_decimals;
[L1413]              havoc __ret_0__totalSupply;
[L1414]              havoc tokenAddress_s496;
[L1415]              havoc tokens_s496;
[L1416]              havoc success_s496;
[L1417]              havoc tmpNow;
[L1418]              havoc gas;
[L1419]              assume gas > 4000000 && gas <= 8000000;
[L1420]              tmpNow := now;
[L1421]              havoc now;
[L1422]              assume now > tmpNow;
[L1423]              assume msgsender_MSG != null;
[L1424]  COND TRUE   choice == 6
[L1425]              gas := gas - 21000;
[L1426]  COND FALSE  !(gas >= 0)
[L1476]  RET         call CorralChoice_DiceToken(this);

Loop:
[L1476]        assume true;

[2020-11-24 18:28:49,882 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 18:28:49,883 INFO  L82        PathProgramCache]: Analyzing trace with hash 1998659075, now seen corresponding path program 1 times
[2020-11-24 18:28:49,887 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 18:28:49,906 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 18:28:49,959 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 18:28:49,961 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 18:28:49,961 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [5] imperfect sequences [] total 5
[2020-11-24 18:28:49,965 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 18:28:49,977 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 5 interpolants.
[2020-11-24 18:28:49,977 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=9, Invalid=11, Unknown=0, NotChecked=0, Total=20
[2020-11-24 18:28:49,979 INFO  L87              Difference]: Start difference. First operand 1192 states. Second operand 5 states.
[2020-11-24 18:28:50,211 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 18:28:50,211 INFO  L93              Difference]: Finished difference Result 559 states and 613 transitions.
[2020-11-24 18:28:50,211 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-24 18:28:50,213 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 559 states and 613 transitions.
[2020-11-24 18:28:50,218 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 18:28:50,223 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 559 states to 185 states and 198 transitions.
[2020-11-24 18:28:50,224 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 4
[2020-11-24 18:28:50,225 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 131
[2020-11-24 18:28:50,225 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 185 states and 198 transitions.
[2020-11-24 18:28:50,227 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 18:28:50,227 INFO  L728         BuchiCegarLoop]: Abstraction has 185 states and 198 transitions.
[2020-11-24 18:28:50,242 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 185 states and 198 transitions.
[2020-11-24 18:28:50,254 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 185 to 185.
[2020-11-24 18:28:50,255 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 185 states.
[2020-11-24 18:28:50,256 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 185 states to 185 states and 198 transitions.
[2020-11-24 18:28:50,257 INFO  L751         BuchiCegarLoop]: Abstraction has 185 states and 198 transitions.
[2020-11-24 18:28:50,257 INFO  L631         BuchiCegarLoop]: Abstraction has 185 states and 198 transitions.
[2020-11-24 18:28:50,257 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-24 18:28:50,257 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 185 states and 198 transitions.
[2020-11-24 18:28:50,258 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 18:28:50,258 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 18:28:50,258 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 18:28:50,260 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 18:28:50,260 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L3]                 success_transferFrom_DiceToken0 := false;
[L3]                 call_transferFrom_DiceToken0 := false;
[L3]     CALL        call main();
[L3]                 havoc p3;
[L3]                 havoc p2;
[L3]                 havoc p1;
[L1471]              assume null == 0;
[L1472]  CALL        call this := FreshRefGenerator__success();
[L611]               havoc newRef;
[L612]               assume Alloc[newRef] == false;
[L613]               Alloc[newRef] := true;
[L614]               assume newRef != null;
[L1472]  RET         call this := FreshRefGenerator__success();
[L1473]              assume now >= 0;
[L1474]              assume DType[this] == DiceToken;
[L1475]              assume !revert && gas >= 0;
[L1476]  CALL        call CorralChoice_DiceToken(this);
[L1388]              havoc msgsender_MSG;
[L1389]              havoc msgvalue_MSG;
[L1390]              havoc choice;
[L1391]              havoc __ret_0_totalSupply;
[L1392]              havoc tokenOwner_s323;
[L1393]              havoc balance_s323;
[L1394]              havoc tokenOwner_s469;
[L1395]              havoc spender_s469;
[L1396]              havoc remaining_s469;
[L1397]              havoc to_s366;
[L1398]              havoc tokens_s366;
[L1399]              havoc success_s366;
[L1400]              havoc spender_s394;
[L1401]              havoc tokens_s394;
[L1402]              havoc success_s394;
[L1403]              havoc from_s453;
[L1404]              havoc to_s453;
[L1405]              havoc tokens_s453;
[L1406]              havoc success_s453;
[L1407]              havoc __ret_0_owner;
[L1408]              havoc __ret_0_newOwner;
[L1409]              havoc _newOwner_s205;
[L1410]              havoc __ret_0_symbol;
[L1411]              havoc __ret_0_name;
[L1412]              havoc __ret_0_decimals;
[L1413]              havoc __ret_0__totalSupply;
[L1414]              havoc tokenAddress_s496;
[L1415]              havoc tokens_s496;
[L1416]              havoc success_s496;
[L1417]              havoc tmpNow;
[L1418]              havoc gas;
[L1419]              assume gas > 4000000 && gas <= 8000000;
[L1420]              tmpNow := now;
[L1421]              havoc now;
[L1422]              assume now > tmpNow;
[L1423]              assume msgsender_MSG != null;
[L1424]  COND FALSE  !(choice == 6)
[L1430]  COND FALSE  !(choice == 5)
[L1436]  COND FALSE  !(choice == 4)
[L1442]  COND FALSE  !(choice == 3)
[L1449]  COND FALSE  !(choice == 2)
[L1456]  COND TRUE   choice == 1
[L1457]              gas := gas - 21000;
[L1458]  COND TRUE   gas >= 0
[L1459]              assume tokens_s453 >= 0 && tokens_s453 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1460]              assume msgvalue_MSG == 0;
[L1461]  CALL        call success_s453 := transferFrom~address~address~uint256_DiceToken(this, msgsender_MSG, msgvalue_MSG, from_s453, to_s453, tokens_s453);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != from_s453 && p1 != to_s453) && (p2 != from_s453 || p3 != msgsender_MSG)) && from_s453 != to_s453) && tokens_s453 <= balances_DiceToken[this][from_s453]) && tokens_s453 <= allowed_DiceToken[this][from_s453][msgsender_MSG]) && balances_DiceToken[this][to_s453] + tokens_s453 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && tokens_s453 >= 0) && tokens_s453 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_DiceToken[this][to_s453] >= 0) && balances_DiceToken[this][to_s453] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_DiceToken[this][from_s453] >= 0) && balances_DiceToken[this][from_s453] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_DiceToken[this][from_s453][msgsender_MSG] >= 0) && allowed_DiceToken[this][from_s453][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_DiceToken0 := true;
[L3]                 call_transferFrom_DiceToken0 := false;
[L3]                 revert := revert_hold;
[L301]               havoc __exception;
[L302]               revert := false;
[L303]   COND FALSE  !(__exception)
[L326]   CALL        call success_s453 := transferFrom~address~address~uint256_DiceToken__success(this, msgsender_MSG, msgvalue_MSG, from_s453, to_s453, tokens_s453);
[L780]   CALL        call __var_4 := sub~uint256~uint256_SafeMath__success(this, this, 0, balances_DiceToken[this][from_s453], tokens_s453);
[L646]   COND TRUE   !(b_s45 <= a_s45)
[L647]               revert := true;
[L780]   RET         call __var_4 := sub~uint256~uint256_SafeMath__success(this, this, 0, balances_DiceToken[this][from_s453], tokens_s453);
[L781]   COND TRUE   revert
[L326]   RET         call success_s453 := transferFrom~address~address~uint256_DiceToken__success(this, msgsender_MSG, msgvalue_MSG, from_s453, to_s453, tokens_s453);
[L327]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((((((success_s453 == true && balances_DiceToken[this][from_s453] == old(balances_DiceToken[this][from_s453]) - tokens_s453) && balances_DiceToken[this][to_s453] == old(balances_DiceToken[this][to_s453]) + tokens_s453) && allowed_DiceToken[this][from_s453][msgsender_MSG] == old(allowed_DiceToken[this][from_s453][msgsender_MSG]) - tokens_s453) && _totalSupply_DiceToken[this] == old(_totalSupply_DiceToken[this])) && balances_DiceToken[this][p1] == old(balances_DiceToken[this][p1])) && allowed_DiceToken[this][p2][p3] == old(allowed_DiceToken[this][p2][p3])) && symbol_DiceToken[this] == old(symbol_DiceToken[this])) && name_DiceToken[this] == old(name_DiceToken[this])) && decimals_DiceToken[this] == old(decimals_DiceToken[this])) && owner_Owned[this] == old(owner_Owned[this])) && newOwner_Owned[this] == old(newOwner_Owned[this]));
[L3]                 revert := revert_hold;
[L1461]  RET         call success_s453 := transferFrom~address~address~uint256_DiceToken(this, msgsender_MSG, msgvalue_MSG, from_s453, to_s453, tokens_s453);
[L1476]  RET         call CorralChoice_DiceToken(this);

Loop:
[L1476]        assume true;

[2020-11-24 18:28:50,263 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 18:28:50,264 INFO  L82        PathProgramCache]: Analyzing trace with hash -2075998873, now seen corresponding path program 1 times
[2020-11-24 18:28:50,265 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 18:28:50,276 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 18:28:50,293 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 18:28:50,294 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 18:28:50,294 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-24 18:28:50,295 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 18:28:50,295 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-24 18:28:50,295 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-24 18:28:50,296 INFO  L87              Difference]: Start difference. First operand 185 states and 198 transitions. cyclomatic complexity: 14 Second operand 3 states.
[2020-11-24 18:28:50,303 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 18:28:50,303 INFO  L93              Difference]: Finished difference Result 220 states and 234 transitions.
[2020-11-24 18:28:50,303 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-24 18:28:50,303 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 220 states and 234 transitions.
[2020-11-24 18:28:50,305 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 2
[2020-11-24 18:28:50,307 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 220 states to 204 states and 213 transitions.
[2020-11-24 18:28:50,307 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 147
[2020-11-24 18:28:50,308 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 152
[2020-11-24 18:28:50,308 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 204 states and 213 transitions.
[2020-11-24 18:28:50,309 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 18:28:50,309 INFO  L728         BuchiCegarLoop]: Abstraction has 204 states and 213 transitions.
[2020-11-24 18:28:50,309 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 204 states and 213 transitions.
[2020-11-24 18:28:50,314 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 204 to 193.
[2020-11-24 18:28:50,314 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 193 states.
[2020-11-24 18:28:50,315 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 193 states to 193 states and 202 transitions.
[2020-11-24 18:28:50,315 INFO  L751         BuchiCegarLoop]: Abstraction has 193 states and 202 transitions.
[2020-11-24 18:28:50,315 INFO  L631         BuchiCegarLoop]: Abstraction has 193 states and 202 transitions.
[2020-11-24 18:28:50,315 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-24 18:28:50,315 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 193 states and 202 transitions.
[2020-11-24 18:28:50,316 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 18:28:50,317 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 18:28:50,317 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 18:28:50,318 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 18:28:50,318 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L3]                 success_transferFrom_DiceToken0 := false;
[L3]                 call_transferFrom_DiceToken0 := false;
[L3]     CALL        call main();
[L3]                 havoc p3;
[L3]                 havoc p2;
[L3]                 havoc p1;
[L1471]              assume null == 0;
[L1472]  CALL        call this := FreshRefGenerator__success();
[L611]               havoc newRef;
[L612]               assume Alloc[newRef] == false;
[L613]               Alloc[newRef] := true;
[L614]               assume newRef != null;
[L1472]  RET         call this := FreshRefGenerator__success();
[L1473]              assume now >= 0;
[L1474]              assume DType[this] == DiceToken;
[L1475]              assume !revert && gas >= 0;
[L1476]  CALL        call CorralChoice_DiceToken(this);
[L1388]              havoc msgsender_MSG;
[L1389]              havoc msgvalue_MSG;
[L1390]              havoc choice;
[L1391]              havoc __ret_0_totalSupply;
[L1392]              havoc tokenOwner_s323;
[L1393]              havoc balance_s323;
[L1394]              havoc tokenOwner_s469;
[L1395]              havoc spender_s469;
[L1396]              havoc remaining_s469;
[L1397]              havoc to_s366;
[L1398]              havoc tokens_s366;
[L1399]              havoc success_s366;
[L1400]              havoc spender_s394;
[L1401]              havoc tokens_s394;
[L1402]              havoc success_s394;
[L1403]              havoc from_s453;
[L1404]              havoc to_s453;
[L1405]              havoc tokens_s453;
[L1406]              havoc success_s453;
[L1407]              havoc __ret_0_owner;
[L1408]              havoc __ret_0_newOwner;
[L1409]              havoc _newOwner_s205;
[L1410]              havoc __ret_0_symbol;
[L1411]              havoc __ret_0_name;
[L1412]              havoc __ret_0_decimals;
[L1413]              havoc __ret_0__totalSupply;
[L1414]              havoc tokenAddress_s496;
[L1415]              havoc tokens_s496;
[L1416]              havoc success_s496;
[L1417]              havoc tmpNow;
[L1418]              havoc gas;
[L1419]              assume gas > 4000000 && gas <= 8000000;
[L1420]              tmpNow := now;
[L1421]              havoc now;
[L1422]              assume now > tmpNow;
[L1423]              assume msgsender_MSG != null;
[L1424]  COND FALSE  !(choice == 6)
[L1430]  COND FALSE  !(choice == 5)
[L1436]  COND FALSE  !(choice == 4)
[L1442]  COND FALSE  !(choice == 3)
[L1449]  COND FALSE  !(choice == 2)
[L1456]  COND TRUE   choice == 1
[L1457]              gas := gas - 21000;
[L1458]  COND TRUE   gas >= 0
[L1459]              assume tokens_s453 >= 0 && tokens_s453 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1460]              assume msgvalue_MSG == 0;
[L1461]  CALL        call success_s453 := transferFrom~address~address~uint256_DiceToken(this, msgsender_MSG, msgvalue_MSG, from_s453, to_s453, tokens_s453);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != from_s453 && p1 != to_s453) && (p2 != from_s453 || p3 != msgsender_MSG)) && from_s453 != to_s453) && tokens_s453 <= balances_DiceToken[this][from_s453]) && tokens_s453 <= allowed_DiceToken[this][from_s453][msgsender_MSG]) && balances_DiceToken[this][to_s453] + tokens_s453 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && tokens_s453 >= 0) && tokens_s453 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_DiceToken[this][to_s453] >= 0) && balances_DiceToken[this][to_s453] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_DiceToken[this][from_s453] >= 0) && balances_DiceToken[this][from_s453] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_DiceToken[this][from_s453][msgsender_MSG] >= 0) && allowed_DiceToken[this][from_s453][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_DiceToken0 := true;
[L3]                 call_transferFrom_DiceToken0 := false;
[L3]                 revert := revert_hold;
[L301]               havoc __exception;
[L302]               revert := false;
[L303]   COND TRUE   __exception
[L304]               __tmp__Balance := Balance;
[L305]               __tmp__DType := DType;
[L306]               __tmp__Alloc := Alloc;
[L307]               __tmp__balance_ADDR := balance_ADDR;
[L308]               __tmp__M_Ref_int := M_Ref_int;
[L309]               __tmp__sum_balances0 := sum_balances0;
[L310]               __tmp__alloc_allowed_DiceToken_lvl0 := alloc_allowed_DiceToken_lvl0;
[L311]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L312]               __tmp__sum_allowed1 := sum_allowed1;
[L313]               __tmp__Length := Length;
[L314]               __tmp__now := now;
[L315]               __tmp__owner_Owned := owner_Owned;
[L316]               __tmp__newOwner_Owned := newOwner_Owned;
[L317]               __tmp__symbol_DiceToken := symbol_DiceToken;
[L318]               __tmp__name_DiceToken := name_DiceToken;
[L319]               __tmp__decimals_DiceToken := decimals_DiceToken;
[L320]               __tmp___totalSupply_DiceToken := _totalSupply_DiceToken;
[L321]               __tmp__balances_DiceToken := balances_DiceToken;
[L322]               __tmp__allowed_DiceToken := allowed_DiceToken;
[L323]   CALL        call success_s453 := transferFrom~address~address~uint256_DiceToken__fail(this, msgsender_MSG, msgvalue_MSG, from_s453, to_s453, tokens_s453);
[L750]   CALL        call __var_4 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __tmp__balances_DiceToken[this][from_s453], tokens_s453);
[L637]   COND TRUE   !(b_s45 <= a_s45)
[L638]               revert := true;
[L750]   RET         call __var_4 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __tmp__balances_DiceToken[this][from_s453], tokens_s453);
[L751]   COND TRUE   revert
[L323]   RET         call success_s453 := transferFrom~address~address~uint256_DiceToken__fail(this, msgsender_MSG, msgvalue_MSG, from_s453, to_s453, tokens_s453);
[L324]               assume revert || gas < 0;
[L1461]  RET         call success_s453 := transferFrom~address~address~uint256_DiceToken(this, msgsender_MSG, msgvalue_MSG, from_s453, to_s453, tokens_s453);
[L1476]  RET         call CorralChoice_DiceToken(this);

Loop:
[L1476]        assume true;

[2020-11-24 18:28:50,320 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 18:28:50,321 INFO  L82        PathProgramCache]: Analyzing trace with hash 1130531875, now seen corresponding path program 1 times
[2020-11-24 18:28:50,321 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 18:28:50,331 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 18:28:50,375 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 18:28:50,375 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 18:28:50,375 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [7] imperfect sequences [] total 7
[2020-11-24 18:28:50,376 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 18:28:50,376 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 7 interpolants.
[2020-11-24 18:28:50,376 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=11, Invalid=31, Unknown=0, NotChecked=0, Total=42
[2020-11-24 18:28:50,376 INFO  L87              Difference]: Start difference. First operand 193 states and 202 transitions. cyclomatic complexity: 10 Second operand 7 states.
[2020-11-24 18:28:50,468 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 18:28:50,468 INFO  L93              Difference]: Finished difference Result 208 states and 216 transitions.
[2020-11-24 18:28:50,469 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 8 states. 
[2020-11-24 18:28:50,469 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 208 states and 216 transitions.
[2020-11-24 18:28:50,470 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 2
[2020-11-24 18:28:50,472 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 208 states to 204 states and 212 transitions.
[2020-11-24 18:28:50,472 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 152
[2020-11-24 18:28:50,472 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 152
[2020-11-24 18:28:50,473 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 204 states and 212 transitions.
[2020-11-24 18:28:50,473 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 18:28:50,473 INFO  L728         BuchiCegarLoop]: Abstraction has 204 states and 212 transitions.
[2020-11-24 18:28:50,473 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 204 states and 212 transitions.
[2020-11-24 18:28:50,477 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 204 to 191.
[2020-11-24 18:28:50,477 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 191 states.
[2020-11-24 18:28:50,478 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 191 states to 191 states and 199 transitions.
[2020-11-24 18:28:50,478 INFO  L751         BuchiCegarLoop]: Abstraction has 191 states and 199 transitions.
[2020-11-24 18:28:50,478 INFO  L631         BuchiCegarLoop]: Abstraction has 191 states and 199 transitions.
[2020-11-24 18:28:50,478 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-24 18:28:50,478 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 191 states and 199 transitions.
[2020-11-24 18:28:50,479 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 18:28:50,479 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 18:28:50,479 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 18:28:50,480 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 18:28:50,480 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L3]                 success_transferFrom_DiceToken0 := false;
[L3]                 call_transferFrom_DiceToken0 := false;
[L3]     CALL        call main();
[L3]                 havoc p3;
[L3]                 havoc p2;
[L3]                 havoc p1;
[L1471]              assume null == 0;
[L1472]  CALL        call this := FreshRefGenerator__success();
[L611]               havoc newRef;
[L612]               assume Alloc[newRef] == false;
[L613]               Alloc[newRef] := true;
[L614]               assume newRef != null;
[L1472]  RET         call this := FreshRefGenerator__success();
[L1473]              assume now >= 0;
[L1474]              assume DType[this] == DiceToken;
[L1475]              assume !revert && gas >= 0;
[L1476]  CALL        call CorralChoice_DiceToken(this);
[L1388]              havoc msgsender_MSG;
[L1389]              havoc msgvalue_MSG;
[L1390]              havoc choice;
[L1391]              havoc __ret_0_totalSupply;
[L1392]              havoc tokenOwner_s323;
[L1393]              havoc balance_s323;
[L1394]              havoc tokenOwner_s469;
[L1395]              havoc spender_s469;
[L1396]              havoc remaining_s469;
[L1397]              havoc to_s366;
[L1398]              havoc tokens_s366;
[L1399]              havoc success_s366;
[L1400]              havoc spender_s394;
[L1401]              havoc tokens_s394;
[L1402]              havoc success_s394;
[L1403]              havoc from_s453;
[L1404]              havoc to_s453;
[L1405]              havoc tokens_s453;
[L1406]              havoc success_s453;
[L1407]              havoc __ret_0_owner;
[L1408]              havoc __ret_0_newOwner;
[L1409]              havoc _newOwner_s205;
[L1410]              havoc __ret_0_symbol;
[L1411]              havoc __ret_0_name;
[L1412]              havoc __ret_0_decimals;
[L1413]              havoc __ret_0__totalSupply;
[L1414]              havoc tokenAddress_s496;
[L1415]              havoc tokens_s496;
[L1416]              havoc success_s496;
[L1417]              havoc tmpNow;
[L1418]              havoc gas;
[L1419]              assume gas > 4000000 && gas <= 8000000;
[L1420]              tmpNow := now;
[L1421]              havoc now;
[L1422]              assume now > tmpNow;
[L1423]              assume msgsender_MSG != null;
[L1424]  COND FALSE  !(choice == 6)
[L1430]  COND FALSE  !(choice == 5)
[L1436]  COND FALSE  !(choice == 4)
[L1442]  COND FALSE  !(choice == 3)
[L1449]  COND FALSE  !(choice == 2)
[L1456]  COND TRUE   choice == 1
[L1457]              gas := gas - 21000;
[L1458]  COND TRUE   gas >= 0
[L1459]              assume tokens_s453 >= 0 && tokens_s453 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1460]              assume msgvalue_MSG == 0;
[L1461]  CALL        call success_s453 := transferFrom~address~address~uint256_DiceToken(this, msgsender_MSG, msgvalue_MSG, from_s453, to_s453, tokens_s453);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != from_s453 && p1 != to_s453) && (p2 != from_s453 || p3 != msgsender_MSG)) && from_s453 != to_s453) && tokens_s453 <= balances_DiceToken[this][from_s453]) && tokens_s453 <= allowed_DiceToken[this][from_s453][msgsender_MSG]) && balances_DiceToken[this][to_s453] + tokens_s453 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && tokens_s453 >= 0) && tokens_s453 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_DiceToken[this][to_s453] >= 0) && balances_DiceToken[this][to_s453] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_DiceToken[this][from_s453] >= 0) && balances_DiceToken[this][from_s453] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_DiceToken[this][from_s453][msgsender_MSG] >= 0) && allowed_DiceToken[this][from_s453][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_DiceToken0 := true;
[L3]                 call_transferFrom_DiceToken0 := false;
[L3]                 revert := revert_hold;
[L301]               havoc __exception;
[L302]               revert := false;
[L303]   COND TRUE   __exception
[L304]               __tmp__Balance := Balance;
[L305]               __tmp__DType := DType;
[L306]               __tmp__Alloc := Alloc;
[L307]               __tmp__balance_ADDR := balance_ADDR;
[L308]               __tmp__M_Ref_int := M_Ref_int;
[L309]               __tmp__sum_balances0 := sum_balances0;
[L310]               __tmp__alloc_allowed_DiceToken_lvl0 := alloc_allowed_DiceToken_lvl0;
[L311]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L312]               __tmp__sum_allowed1 := sum_allowed1;
[L313]               __tmp__Length := Length;
[L314]               __tmp__now := now;
[L315]               __tmp__owner_Owned := owner_Owned;
[L316]               __tmp__newOwner_Owned := newOwner_Owned;
[L317]               __tmp__symbol_DiceToken := symbol_DiceToken;
[L318]               __tmp__name_DiceToken := name_DiceToken;
[L319]               __tmp__decimals_DiceToken := decimals_DiceToken;
[L320]               __tmp___totalSupply_DiceToken := _totalSupply_DiceToken;
[L321]               __tmp__balances_DiceToken := balances_DiceToken;
[L322]               __tmp__allowed_DiceToken := allowed_DiceToken;
[L323]   CALL        call success_s453 := transferFrom~address~address~uint256_DiceToken__fail(this, msgsender_MSG, msgvalue_MSG, from_s453, to_s453, tokens_s453);
[L750]   CALL        call __var_4 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __tmp__balances_DiceToken[this][from_s453], tokens_s453);
[L637]   COND FALSE  !(!(b_s45 <= a_s45))
[L641]               c_s45 := (a_s45 - b_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L750]   RET         call __var_4 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __tmp__balances_DiceToken[this][from_s453], tokens_s453);
[L751]   COND TRUE   revert
[L323]   RET         call success_s453 := transferFrom~address~address~uint256_DiceToken__fail(this, msgsender_MSG, msgvalue_MSG, from_s453, to_s453, tokens_s453);
[L324]               assume revert || gas < 0;
[L1461]  RET         call success_s453 := transferFrom~address~address~uint256_DiceToken(this, msgsender_MSG, msgvalue_MSG, from_s453, to_s453, tokens_s453);
[L1476]  RET         call CorralChoice_DiceToken(this);

Loop:
[L1476]        assume true;

[2020-11-24 18:28:50,483 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 18:28:50,483 INFO  L82        PathProgramCache]: Analyzing trace with hash -2133429287, now seen corresponding path program 1 times
[2020-11-24 18:28:50,484 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 18:28:50,492 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 18:28:50,510 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 18:28:50,510 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 18:28:50,510 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [5] imperfect sequences [] total 5
[2020-11-24 18:28:50,511 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 18:28:50,511 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 5 interpolants.
[2020-11-24 18:28:50,511 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=9, Invalid=11, Unknown=0, NotChecked=0, Total=20
[2020-11-24 18:28:50,511 INFO  L87              Difference]: Start difference. First operand 191 states and 199 transitions. cyclomatic complexity: 9 Second operand 5 states.
[2020-11-24 18:28:50,525 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 18:28:50,525 INFO  L93              Difference]: Finished difference Result 202 states and 207 transitions.
[2020-11-24 18:28:50,525 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-24 18:28:50,525 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 202 states and 207 transitions.
[2020-11-24 18:28:50,526 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 2
[2020-11-24 18:28:50,528 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 202 states to 202 states and 207 transitions.
[2020-11-24 18:28:50,528 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 150
[2020-11-24 18:28:50,528 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 150
[2020-11-24 18:28:50,528 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 202 states and 207 transitions.
[2020-11-24 18:28:50,528 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 18:28:50,528 INFO  L728         BuchiCegarLoop]: Abstraction has 202 states and 207 transitions.
[2020-11-24 18:28:50,529 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 202 states and 207 transitions.
[2020-11-24 18:28:50,531 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 202 to 191.
[2020-11-24 18:28:50,531 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 191 states.
[2020-11-24 18:28:50,532 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 191 states to 191 states and 196 transitions.
[2020-11-24 18:28:50,532 INFO  L751         BuchiCegarLoop]: Abstraction has 191 states and 196 transitions.
[2020-11-24 18:28:50,532 INFO  L631         BuchiCegarLoop]: Abstraction has 191 states and 196 transitions.
[2020-11-24 18:28:50,532 INFO  L445         BuchiCegarLoop]: ======== Iteration 5============
[2020-11-24 18:28:50,532 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 191 states and 196 transitions.
[2020-11-24 18:28:50,533 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 18:28:50,533 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 18:28:50,533 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 18:28:50,534 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 18:28:50,534 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L3]                 success_transferFrom_DiceToken0 := false;
[L3]                 call_transferFrom_DiceToken0 := false;
[L3]     CALL        call main();
[L3]                 havoc p3;
[L3]                 havoc p2;
[L3]                 havoc p1;
[L1471]              assume null == 0;
[L1472]  CALL        call this := FreshRefGenerator__success();
[L611]               havoc newRef;
[L612]               assume Alloc[newRef] == false;
[L613]               Alloc[newRef] := true;
[L614]               assume newRef != null;
[L1472]  RET         call this := FreshRefGenerator__success();
[L1473]              assume now >= 0;
[L1474]              assume DType[this] == DiceToken;
[L1475]              assume !revert && gas >= 0;
[L1476]  CALL        call CorralChoice_DiceToken(this);
[L1388]              havoc msgsender_MSG;
[L1389]              havoc msgvalue_MSG;
[L1390]              havoc choice;
[L1391]              havoc __ret_0_totalSupply;
[L1392]              havoc tokenOwner_s323;
[L1393]              havoc balance_s323;
[L1394]              havoc tokenOwner_s469;
[L1395]              havoc spender_s469;
[L1396]              havoc remaining_s469;
[L1397]              havoc to_s366;
[L1398]              havoc tokens_s366;
[L1399]              havoc success_s366;
[L1400]              havoc spender_s394;
[L1401]              havoc tokens_s394;
[L1402]              havoc success_s394;
[L1403]              havoc from_s453;
[L1404]              havoc to_s453;
[L1405]              havoc tokens_s453;
[L1406]              havoc success_s453;
[L1407]              havoc __ret_0_owner;
[L1408]              havoc __ret_0_newOwner;
[L1409]              havoc _newOwner_s205;
[L1410]              havoc __ret_0_symbol;
[L1411]              havoc __ret_0_name;
[L1412]              havoc __ret_0_decimals;
[L1413]              havoc __ret_0__totalSupply;
[L1414]              havoc tokenAddress_s496;
[L1415]              havoc tokens_s496;
[L1416]              havoc success_s496;
[L1417]              havoc tmpNow;
[L1418]              havoc gas;
[L1419]              assume gas > 4000000 && gas <= 8000000;
[L1420]              tmpNow := now;
[L1421]              havoc now;
[L1422]              assume now > tmpNow;
[L1423]              assume msgsender_MSG != null;
[L1424]  COND FALSE  !(choice == 6)
[L1430]  COND FALSE  !(choice == 5)
[L1436]  COND FALSE  !(choice == 4)
[L1442]  COND FALSE  !(choice == 3)
[L1449]  COND FALSE  !(choice == 2)
[L1456]  COND TRUE   choice == 1
[L1457]              gas := gas - 21000;
[L1458]  COND TRUE   gas >= 0
[L1459]              assume tokens_s453 >= 0 && tokens_s453 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1460]              assume msgvalue_MSG == 0;
[L1461]  CALL        call success_s453 := transferFrom~address~address~uint256_DiceToken(this, msgsender_MSG, msgvalue_MSG, from_s453, to_s453, tokens_s453);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != from_s453 && p1 != to_s453) && (p2 != from_s453 || p3 != msgsender_MSG)) && from_s453 != to_s453) && tokens_s453 <= balances_DiceToken[this][from_s453]) && tokens_s453 <= allowed_DiceToken[this][from_s453][msgsender_MSG]) && balances_DiceToken[this][to_s453] + tokens_s453 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && tokens_s453 >= 0) && tokens_s453 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_DiceToken[this][to_s453] >= 0) && balances_DiceToken[this][to_s453] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_DiceToken[this][from_s453] >= 0) && balances_DiceToken[this][from_s453] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_DiceToken[this][from_s453][msgsender_MSG] >= 0) && allowed_DiceToken[this][from_s453][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_DiceToken0 := true;
[L3]                 call_transferFrom_DiceToken0 := false;
[L3]                 revert := revert_hold;
[L301]               havoc __exception;
[L302]               revert := false;
[L303]   COND FALSE  !(__exception)
[L326]   CALL        call success_s453 := transferFrom~address~address~uint256_DiceToken__success(this, msgsender_MSG, msgvalue_MSG, from_s453, to_s453, tokens_s453);
[L780]   CALL        call __var_4 := sub~uint256~uint256_SafeMath__success(this, this, 0, balances_DiceToken[this][from_s453], tokens_s453);
[L646]   COND FALSE  !(!(b_s45 <= a_s45))
[L650]               c_s45 := (a_s45 - b_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L780]   RET         call __var_4 := sub~uint256~uint256_SafeMath__success(this, this, 0, balances_DiceToken[this][from_s453], tokens_s453);
[L781]   COND FALSE  !(revert)
[L784]               sum_balances0[this] := sum_balances0[this] - balances_DiceToken[this][from_s453];
[L785]               balances_DiceToken[this][from_s453] := __var_4;
[L786]               sum_balances0[this] := sum_balances0[this] + balances_DiceToken[this][from_s453];
[L787]   CALL        call __var_5 := sub~uint256~uint256_SafeMath__success(this, this, 0, allowed_DiceToken[this][from_s453][msgsender_MSG], tokens_s453);
[L646]   COND FALSE  !(!(b_s45 <= a_s45))
[L650]               c_s45 := (a_s45 - b_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L787]   RET         call __var_5 := sub~uint256~uint256_SafeMath__success(this, this, 0, allowed_DiceToken[this][from_s453][msgsender_MSG], tokens_s453);
[L788]   COND FALSE  !(revert)
[L791]               sum_allowed1[from_s453] := sum_allowed1[from_s453] - allowed_DiceToken[this][from_s453][msgsender_MSG];
[L792]               allowed_DiceToken[this][from_s453][msgsender_MSG] := __var_5;
[L793]               sum_allowed1[from_s453] := sum_allowed1[from_s453] + allowed_DiceToken[this][from_s453][msgsender_MSG];
[L794]   CALL        call __var_6 := add~uint256~uint256_SafeMath__success(this, this, 0, balances_DiceToken[this][to_s453], tokens_s453);
[L628]               c_s23 := (a_s23 + b_s23) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L629]   COND FALSE  !(!(c_s23 >= a_s23))
[L794]   RET         call __var_6 := add~uint256~uint256_SafeMath__success(this, this, 0, balances_DiceToken[this][to_s453], tokens_s453);
[L795]   COND FALSE  !(revert)
[L798]               sum_balances0[this] := sum_balances0[this] - balances_DiceToken[this][to_s453];
[L799]               balances_DiceToken[this][to_s453] := __var_6;
[L800]               sum_balances0[this] := sum_balances0[this] + balances_DiceToken[this][to_s453];
[L801]               assert { :EventEmitted "Transfer_DiceToken" } true;
[L802]               success_s453 := true;
[L326]   RET         call success_s453 := transferFrom~address~address~uint256_DiceToken__success(this, msgsender_MSG, msgvalue_MSG, from_s453, to_s453, tokens_s453);
[L327]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((((((success_s453 == true && balances_DiceToken[this][from_s453] == old(balances_DiceToken[this][from_s453]) - tokens_s453) && balances_DiceToken[this][to_s453] == old(balances_DiceToken[this][to_s453]) + tokens_s453) && allowed_DiceToken[this][from_s453][msgsender_MSG] == old(allowed_DiceToken[this][from_s453][msgsender_MSG]) - tokens_s453) && _totalSupply_DiceToken[this] == old(_totalSupply_DiceToken[this])) && balances_DiceToken[this][p1] == old(balances_DiceToken[this][p1])) && allowed_DiceToken[this][p2][p3] == old(allowed_DiceToken[this][p2][p3])) && symbol_DiceToken[this] == old(symbol_DiceToken[this])) && name_DiceToken[this] == old(name_DiceToken[this])) && decimals_DiceToken[this] == old(decimals_DiceToken[this])) && owner_Owned[this] == old(owner_Owned[this])) && newOwner_Owned[this] == old(newOwner_Owned[this]));
[L3]                 revert := revert_hold;
[L1461]  RET         call success_s453 := transferFrom~address~address~uint256_DiceToken(this, msgsender_MSG, msgvalue_MSG, from_s453, to_s453, tokens_s453);
[L1476]  RET         call CorralChoice_DiceToken(this);

Loop:
[L1476]        assume true;

[2020-11-24 18:28:50,536 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 18:28:50,536 INFO  L82        PathProgramCache]: Analyzing trace with hash -2120724810, now seen corresponding path program 1 times
[2020-11-24 18:28:50,537 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 18:28:50,725 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 18:28:51,753 INFO  L134       CoverageAnalysis]: Checked inductivity of 4 backedges. 0 proven. 3 refuted. 0 times theorem prover too weak. 1 trivial. 0 not checked.
[2020-11-24 18:28:51,754 INFO  L312   seRefinementStrategy]: Constructing automaton from 0 perfect and 1 imperfect interpolant sequences.
[2020-11-24 18:28:51,754 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [] imperfect sequences [20] total 20
[2020-11-24 18:28:51,754 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 18:28:51,754 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 20 interpolants.
[2020-11-24 18:28:51,755 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=46, Invalid=334, Unknown=0, NotChecked=0, Total=380
[2020-11-24 18:28:51,755 INFO  L87              Difference]: Start difference. First operand 191 states and 196 transitions. cyclomatic complexity: 6 Second operand 20 states.
[2020-11-24 18:28:52,274 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 18:28:52,274 INFO  L93              Difference]: Finished difference Result 190 states and 194 transitions.
[2020-11-24 18:28:52,274 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 17 states. 
[2020-11-24 18:28:52,275 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 190 states and 194 transitions.
[2020-11-24 18:28:52,276 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 18:28:52,276 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 190 states to 150 states and 153 transitions.
[2020-11-24 18:28:52,277 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 113
[2020-11-24 18:28:52,277 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 113
[2020-11-24 18:28:52,277 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 150 states and 153 transitions.
[2020-11-24 18:28:52,277 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 18:28:52,277 INFO  L728         BuchiCegarLoop]: Abstraction has 150 states and 153 transitions.
[2020-11-24 18:28:52,277 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 150 states and 153 transitions.
[2020-11-24 18:28:52,278 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 150 to 150.
[2020-11-24 18:28:52,279 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 150 states.
[2020-11-24 18:28:52,279 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 150 states to 150 states and 153 transitions.
[2020-11-24 18:28:52,279 INFO  L751         BuchiCegarLoop]: Abstraction has 150 states and 153 transitions.
[2020-11-24 18:28:52,279 INFO  L631         BuchiCegarLoop]: Abstraction has 150 states and 153 transitions.
[2020-11-24 18:28:52,279 INFO  L445         BuchiCegarLoop]: ======== Iteration 6============
[2020-11-24 18:28:52,279 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 150 states and 153 transitions.
[2020-11-24 18:28:52,280 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 18:28:52,280 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 18:28:52,280 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 18:28:52,281 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 18:28:52,281 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L3]                 success_transferFrom_DiceToken0 := false;
[L3]                 call_transferFrom_DiceToken0 := false;
[L3]     CALL        call main();
[L3]                 havoc p3;
[L3]                 havoc p2;
[L3]                 havoc p1;
[L1471]              assume null == 0;
[L1472]  CALL        call this := FreshRefGenerator__success();
[L611]               havoc newRef;
[L612]               assume Alloc[newRef] == false;
[L613]               Alloc[newRef] := true;
[L614]               assume newRef != null;
[L1472]  RET         call this := FreshRefGenerator__success();
[L1473]              assume now >= 0;
[L1474]              assume DType[this] == DiceToken;
[L1475]              assume !revert && gas >= 0;
[L1476]  CALL        call CorralChoice_DiceToken(this);
[L1388]              havoc msgsender_MSG;
[L1389]              havoc msgvalue_MSG;
[L1390]              havoc choice;
[L1391]              havoc __ret_0_totalSupply;
[L1392]              havoc tokenOwner_s323;
[L1393]              havoc balance_s323;
[L1394]              havoc tokenOwner_s469;
[L1395]              havoc spender_s469;
[L1396]              havoc remaining_s469;
[L1397]              havoc to_s366;
[L1398]              havoc tokens_s366;
[L1399]              havoc success_s366;
[L1400]              havoc spender_s394;
[L1401]              havoc tokens_s394;
[L1402]              havoc success_s394;
[L1403]              havoc from_s453;
[L1404]              havoc to_s453;
[L1405]              havoc tokens_s453;
[L1406]              havoc success_s453;
[L1407]              havoc __ret_0_owner;
[L1408]              havoc __ret_0_newOwner;
[L1409]              havoc _newOwner_s205;
[L1410]              havoc __ret_0_symbol;
[L1411]              havoc __ret_0_name;
[L1412]              havoc __ret_0_decimals;
[L1413]              havoc __ret_0__totalSupply;
[L1414]              havoc tokenAddress_s496;
[L1415]              havoc tokens_s496;
[L1416]              havoc success_s496;
[L1417]              havoc tmpNow;
[L1418]              havoc gas;
[L1419]              assume gas > 4000000 && gas <= 8000000;
[L1420]              tmpNow := now;
[L1421]              havoc now;
[L1422]              assume now > tmpNow;
[L1423]              assume msgsender_MSG != null;
[L1424]  COND FALSE  !(choice == 6)
[L1430]  COND FALSE  !(choice == 5)
[L1436]  COND FALSE  !(choice == 4)
[L1442]  COND FALSE  !(choice == 3)
[L1449]  COND FALSE  !(choice == 2)
[L1456]  COND TRUE   choice == 1
[L1457]              gas := gas - 21000;
[L1458]  COND TRUE   gas >= 0
[L1459]              assume tokens_s453 >= 0 && tokens_s453 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1460]              assume msgvalue_MSG == 0;
[L1461]  CALL        call success_s453 := transferFrom~address~address~uint256_DiceToken(this, msgsender_MSG, msgvalue_MSG, from_s453, to_s453, tokens_s453);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != from_s453 && p1 != to_s453) && (p2 != from_s453 || p3 != msgsender_MSG)) && from_s453 != to_s453) && tokens_s453 <= balances_DiceToken[this][from_s453]) && tokens_s453 <= allowed_DiceToken[this][from_s453][msgsender_MSG]) && balances_DiceToken[this][to_s453] + tokens_s453 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && tokens_s453 >= 0) && tokens_s453 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_DiceToken[this][to_s453] >= 0) && balances_DiceToken[this][to_s453] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_DiceToken[this][from_s453] >= 0) && balances_DiceToken[this][from_s453] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_DiceToken[this][from_s453][msgsender_MSG] >= 0) && allowed_DiceToken[this][from_s453][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_DiceToken0 := true;
[L3]                 call_transferFrom_DiceToken0 := false;
[L3]                 revert := revert_hold;
[L301]               havoc __exception;
[L302]               revert := false;
[L303]   COND TRUE   __exception
[L304]               __tmp__Balance := Balance;
[L305]               __tmp__DType := DType;
[L306]               __tmp__Alloc := Alloc;
[L307]               __tmp__balance_ADDR := balance_ADDR;
[L308]               __tmp__M_Ref_int := M_Ref_int;
[L309]               __tmp__sum_balances0 := sum_balances0;
[L310]               __tmp__alloc_allowed_DiceToken_lvl0 := alloc_allowed_DiceToken_lvl0;
[L311]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L312]               __tmp__sum_allowed1 := sum_allowed1;
[L313]               __tmp__Length := Length;
[L314]               __tmp__now := now;
[L315]               __tmp__owner_Owned := owner_Owned;
[L316]               __tmp__newOwner_Owned := newOwner_Owned;
[L317]               __tmp__symbol_DiceToken := symbol_DiceToken;
[L318]               __tmp__name_DiceToken := name_DiceToken;
[L319]               __tmp__decimals_DiceToken := decimals_DiceToken;
[L320]               __tmp___totalSupply_DiceToken := _totalSupply_DiceToken;
[L321]               __tmp__balances_DiceToken := balances_DiceToken;
[L322]               __tmp__allowed_DiceToken := allowed_DiceToken;
[L323]   CALL        call success_s453 := transferFrom~address~address~uint256_DiceToken__fail(this, msgsender_MSG, msgvalue_MSG, from_s453, to_s453, tokens_s453);
[L750]   CALL        call __var_4 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __tmp__balances_DiceToken[this][from_s453], tokens_s453);
[L637]   COND FALSE  !(!(b_s45 <= a_s45))
[L641]               c_s45 := (a_s45 - b_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L750]   RET         call __var_4 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __tmp__balances_DiceToken[this][from_s453], tokens_s453);
[L751]   COND FALSE  !(revert)
[L754]               __tmp__sum_balances0[this] := __tmp__sum_balances0[this] - __tmp__balances_DiceToken[this][from_s453];
[L755]               __tmp__balances_DiceToken[this][from_s453] := __var_4;
[L756]               __tmp__sum_balances0[this] := __tmp__sum_balances0[this] + __tmp__balances_DiceToken[this][from_s453];
[L757]   CALL        call __var_5 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __tmp__allowed_DiceToken[this][from_s453][msgsender_MSG], tokens_s453);
[L637]   COND TRUE   !(b_s45 <= a_s45)
[L638]               revert := true;
[L757]   RET         call __var_5 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __tmp__allowed_DiceToken[this][from_s453][msgsender_MSG], tokens_s453);
[L758]   COND TRUE   revert
[L323]   RET         call success_s453 := transferFrom~address~address~uint256_DiceToken__fail(this, msgsender_MSG, msgvalue_MSG, from_s453, to_s453, tokens_s453);
[L324]               assume revert || gas < 0;
[L1461]  RET         call success_s453 := transferFrom~address~address~uint256_DiceToken(this, msgsender_MSG, msgvalue_MSG, from_s453, to_s453, tokens_s453);
[L1476]  RET         call CorralChoice_DiceToken(this);

Loop:
[L1476]        assume true;

[2020-11-24 18:28:52,282 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 18:28:52,282 INFO  L82        PathProgramCache]: Analyzing trace with hash -862321255, now seen corresponding path program 1 times
[2020-11-24 18:28:52,283 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 18:28:52,287 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 18:28:52,321 INFO  L134       CoverageAnalysis]: Checked inductivity of 3 backedges. 2 proven. 0 refuted. 0 times theorem prover too weak. 1 trivial. 0 not checked.
[2020-11-24 18:28:52,322 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 18:28:52,322 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [7] imperfect sequences [] total 7
[2020-11-24 18:28:52,322 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 18:28:52,322 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 7 interpolants.
[2020-11-24 18:28:52,323 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=11, Invalid=31, Unknown=0, NotChecked=0, Total=42
[2020-11-24 18:28:52,323 INFO  L87              Difference]: Start difference. First operand 150 states and 153 transitions. cyclomatic complexity: 4 Second operand 7 states.
[2020-11-24 18:28:52,352 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 18:28:52,352 INFO  L93              Difference]: Finished difference Result 152 states and 154 transitions.
[2020-11-24 18:28:52,352 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 8 states. 
[2020-11-24 18:28:52,352 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 152 states and 154 transitions.
[2020-11-24 18:28:52,354 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 18:28:52,355 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 152 states to 145 states and 147 transitions.
[2020-11-24 18:28:52,355 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 108
[2020-11-24 18:28:52,355 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 108
[2020-11-24 18:28:52,355 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 145 states and 147 transitions.
[2020-11-24 18:28:52,355 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 18:28:52,355 INFO  L728         BuchiCegarLoop]: Abstraction has 145 states and 147 transitions.
[2020-11-24 18:28:52,356 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 145 states and 147 transitions.
[2020-11-24 18:28:52,358 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 145 to 145.
[2020-11-24 18:28:52,358 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 145 states.
[2020-11-24 18:28:52,359 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 145 states to 145 states and 147 transitions.
[2020-11-24 18:28:52,359 INFO  L751         BuchiCegarLoop]: Abstraction has 145 states and 147 transitions.
[2020-11-24 18:28:52,359 INFO  L631         BuchiCegarLoop]: Abstraction has 145 states and 147 transitions.
[2020-11-24 18:28:52,359 INFO  L445         BuchiCegarLoop]: ======== Iteration 7============
[2020-11-24 18:28:52,359 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 145 states and 147 transitions.
[2020-11-24 18:28:52,360 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 18:28:52,360 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 18:28:52,360 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 18:28:52,361 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 18:28:52,362 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L3]                 success_transferFrom_DiceToken0 := false;
[L3]                 call_transferFrom_DiceToken0 := false;
[L3]     CALL        call main();
[L3]                 havoc p3;
[L3]                 havoc p2;
[L3]                 havoc p1;
[L1471]              assume null == 0;
[L1472]  CALL        call this := FreshRefGenerator__success();
[L611]               havoc newRef;
[L612]               assume Alloc[newRef] == false;
[L613]               Alloc[newRef] := true;
[L614]               assume newRef != null;
[L1472]  RET         call this := FreshRefGenerator__success();
[L1473]              assume now >= 0;
[L1474]              assume DType[this] == DiceToken;
[L1475]              assume !revert && gas >= 0;
[L1476]  CALL        call CorralChoice_DiceToken(this);
[L1388]              havoc msgsender_MSG;
[L1389]              havoc msgvalue_MSG;
[L1390]              havoc choice;
[L1391]              havoc __ret_0_totalSupply;
[L1392]              havoc tokenOwner_s323;
[L1393]              havoc balance_s323;
[L1394]              havoc tokenOwner_s469;
[L1395]              havoc spender_s469;
[L1396]              havoc remaining_s469;
[L1397]              havoc to_s366;
[L1398]              havoc tokens_s366;
[L1399]              havoc success_s366;
[L1400]              havoc spender_s394;
[L1401]              havoc tokens_s394;
[L1402]              havoc success_s394;
[L1403]              havoc from_s453;
[L1404]              havoc to_s453;
[L1405]              havoc tokens_s453;
[L1406]              havoc success_s453;
[L1407]              havoc __ret_0_owner;
[L1408]              havoc __ret_0_newOwner;
[L1409]              havoc _newOwner_s205;
[L1410]              havoc __ret_0_symbol;
[L1411]              havoc __ret_0_name;
[L1412]              havoc __ret_0_decimals;
[L1413]              havoc __ret_0__totalSupply;
[L1414]              havoc tokenAddress_s496;
[L1415]              havoc tokens_s496;
[L1416]              havoc success_s496;
[L1417]              havoc tmpNow;
[L1418]              havoc gas;
[L1419]              assume gas > 4000000 && gas <= 8000000;
[L1420]              tmpNow := now;
[L1421]              havoc now;
[L1422]              assume now > tmpNow;
[L1423]              assume msgsender_MSG != null;
[L1424]  COND FALSE  !(choice == 6)
[L1430]  COND FALSE  !(choice == 5)
[L1436]  COND FALSE  !(choice == 4)
[L1442]  COND FALSE  !(choice == 3)
[L1449]  COND FALSE  !(choice == 2)
[L1456]  COND TRUE   choice == 1
[L1457]              gas := gas - 21000;
[L1458]  COND TRUE   gas >= 0
[L1459]              assume tokens_s453 >= 0 && tokens_s453 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1460]              assume msgvalue_MSG == 0;
[L1461]  CALL        call success_s453 := transferFrom~address~address~uint256_DiceToken(this, msgsender_MSG, msgvalue_MSG, from_s453, to_s453, tokens_s453);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != from_s453 && p1 != to_s453) && (p2 != from_s453 || p3 != msgsender_MSG)) && from_s453 != to_s453) && tokens_s453 <= balances_DiceToken[this][from_s453]) && tokens_s453 <= allowed_DiceToken[this][from_s453][msgsender_MSG]) && balances_DiceToken[this][to_s453] + tokens_s453 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && tokens_s453 >= 0) && tokens_s453 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_DiceToken[this][to_s453] >= 0) && balances_DiceToken[this][to_s453] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_DiceToken[this][from_s453] >= 0) && balances_DiceToken[this][from_s453] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_DiceToken[this][from_s453][msgsender_MSG] >= 0) && allowed_DiceToken[this][from_s453][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_DiceToken0 := true;
[L3]                 call_transferFrom_DiceToken0 := false;
[L3]                 revert := revert_hold;
[L301]               havoc __exception;
[L302]               revert := false;
[L303]   COND TRUE   __exception
[L304]               __tmp__Balance := Balance;
[L305]               __tmp__DType := DType;
[L306]               __tmp__Alloc := Alloc;
[L307]               __tmp__balance_ADDR := balance_ADDR;
[L308]               __tmp__M_Ref_int := M_Ref_int;
[L309]               __tmp__sum_balances0 := sum_balances0;
[L310]               __tmp__alloc_allowed_DiceToken_lvl0 := alloc_allowed_DiceToken_lvl0;
[L311]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L312]               __tmp__sum_allowed1 := sum_allowed1;
[L313]               __tmp__Length := Length;
[L314]               __tmp__now := now;
[L315]               __tmp__owner_Owned := owner_Owned;
[L316]               __tmp__newOwner_Owned := newOwner_Owned;
[L317]               __tmp__symbol_DiceToken := symbol_DiceToken;
[L318]               __tmp__name_DiceToken := name_DiceToken;
[L319]               __tmp__decimals_DiceToken := decimals_DiceToken;
[L320]               __tmp___totalSupply_DiceToken := _totalSupply_DiceToken;
[L321]               __tmp__balances_DiceToken := balances_DiceToken;
[L322]               __tmp__allowed_DiceToken := allowed_DiceToken;
[L323]   CALL        call success_s453 := transferFrom~address~address~uint256_DiceToken__fail(this, msgsender_MSG, msgvalue_MSG, from_s453, to_s453, tokens_s453);
[L750]   CALL        call __var_4 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __tmp__balances_DiceToken[this][from_s453], tokens_s453);
[L637]   COND FALSE  !(!(b_s45 <= a_s45))
[L641]               c_s45 := (a_s45 - b_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L750]   RET         call __var_4 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __tmp__balances_DiceToken[this][from_s453], tokens_s453);
[L751]   COND FALSE  !(revert)
[L754]               __tmp__sum_balances0[this] := __tmp__sum_balances0[this] - __tmp__balances_DiceToken[this][from_s453];
[L755]               __tmp__balances_DiceToken[this][from_s453] := __var_4;
[L756]               __tmp__sum_balances0[this] := __tmp__sum_balances0[this] + __tmp__balances_DiceToken[this][from_s453];
[L757]   CALL        call __var_5 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __tmp__allowed_DiceToken[this][from_s453][msgsender_MSG], tokens_s453);
[L637]   COND FALSE  !(!(b_s45 <= a_s45))
[L641]               c_s45 := (a_s45 - b_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L757]   RET         call __var_5 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __tmp__allowed_DiceToken[this][from_s453][msgsender_MSG], tokens_s453);
[L758]   COND FALSE  !(revert)
[L761]               __tmp__sum_allowed1[from_s453] := __tmp__sum_allowed1[from_s453] - __tmp__allowed_DiceToken[this][from_s453][msgsender_MSG];
[L762]               __tmp__allowed_DiceToken[this][from_s453][msgsender_MSG] := __var_5;
[L763]               __tmp__sum_allowed1[from_s453] := __tmp__sum_allowed1[from_s453] + __tmp__allowed_DiceToken[this][from_s453][msgsender_MSG];
[L764]   CALL        call __var_6 := add~uint256~uint256_SafeMath__fail(this, this, 0, __tmp__balances_DiceToken[this][to_s453], tokens_s453);
[L619]               c_s23 := (a_s23 + b_s23) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L620]   COND TRUE   !(c_s23 >= a_s23)
[L621]               revert := true;
[L764]   RET         call __var_6 := add~uint256~uint256_SafeMath__fail(this, this, 0, __tmp__balances_DiceToken[this][to_s453], tokens_s453);
[L765]   COND TRUE   revert
[L323]   RET         call success_s453 := transferFrom~address~address~uint256_DiceToken__fail(this, msgsender_MSG, msgvalue_MSG, from_s453, to_s453, tokens_s453);
[L324]               assume revert || gas < 0;
[L1461]  RET         call success_s453 := transferFrom~address~address~uint256_DiceToken(this, msgsender_MSG, msgvalue_MSG, from_s453, to_s453, tokens_s453);
[L1476]  RET         call CorralChoice_DiceToken(this);

Loop:
[L1476]        assume true;

[2020-11-24 18:28:52,364 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 18:28:52,364 INFO  L82        PathProgramCache]: Analyzing trace with hash 906251143, now seen corresponding path program 1 times
[2020-11-24 18:28:52,365 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 18:28:52,375 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 18:28:52,442 INFO  L134       CoverageAnalysis]: Checked inductivity of 4 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 4 trivial. 0 not checked.
[2020-11-24 18:28:52,442 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 18:28:52,442 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [9] imperfect sequences [] total 9
[2020-11-24 18:28:52,443 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 18:28:52,443 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 9 interpolants.
[2020-11-24 18:28:52,443 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=16, Invalid=56, Unknown=0, NotChecked=0, Total=72
[2020-11-24 18:28:52,443 INFO  L87              Difference]: Start difference. First operand 145 states and 147 transitions. cyclomatic complexity: 3 Second operand 9 states.
[2020-11-24 18:28:52,495 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 18:28:52,495 INFO  L93              Difference]: Finished difference Result 147 states and 148 transitions.
[2020-11-24 18:28:52,495 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 10 states. 
[2020-11-24 18:28:52,495 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 147 states and 148 transitions.
[2020-11-24 18:28:52,496 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 18:28:52,497 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 147 states to 140 states and 141 transitions.
[2020-11-24 18:28:52,497 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 103
[2020-11-24 18:28:52,497 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 103
[2020-11-24 18:28:52,497 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 140 states and 141 transitions.
[2020-11-24 18:28:52,498 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 18:28:52,498 INFO  L728         BuchiCegarLoop]: Abstraction has 140 states and 141 transitions.
[2020-11-24 18:28:52,498 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 140 states and 141 transitions.
[2020-11-24 18:28:52,499 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 140 to 140.
[2020-11-24 18:28:52,499 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 140 states.
[2020-11-24 18:28:52,500 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 140 states to 140 states and 141 transitions.
[2020-11-24 18:28:52,500 INFO  L751         BuchiCegarLoop]: Abstraction has 140 states and 141 transitions.
[2020-11-24 18:28:52,500 INFO  L631         BuchiCegarLoop]: Abstraction has 140 states and 141 transitions.
[2020-11-24 18:28:52,500 INFO  L445         BuchiCegarLoop]: ======== Iteration 8============
[2020-11-24 18:28:52,500 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 140 states and 141 transitions.
[2020-11-24 18:28:52,501 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 18:28:52,501 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 18:28:52,501 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 18:28:52,502 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 18:28:52,502 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L3]                 success_transferFrom_DiceToken0 := false;
[L3]                 call_transferFrom_DiceToken0 := false;
[L3]     CALL        call main();
[L3]                 havoc p3;
[L3]                 havoc p2;
[L3]                 havoc p1;
[L1471]              assume null == 0;
[L1472]  CALL        call this := FreshRefGenerator__success();
[L611]               havoc newRef;
[L612]               assume Alloc[newRef] == false;
[L613]               Alloc[newRef] := true;
[L614]               assume newRef != null;
[L1472]  RET         call this := FreshRefGenerator__success();
[L1473]              assume now >= 0;
[L1474]              assume DType[this] == DiceToken;
[L1475]              assume !revert && gas >= 0;
[L1476]  CALL        call CorralChoice_DiceToken(this);
[L1388]              havoc msgsender_MSG;
[L1389]              havoc msgvalue_MSG;
[L1390]              havoc choice;
[L1391]              havoc __ret_0_totalSupply;
[L1392]              havoc tokenOwner_s323;
[L1393]              havoc balance_s323;
[L1394]              havoc tokenOwner_s469;
[L1395]              havoc spender_s469;
[L1396]              havoc remaining_s469;
[L1397]              havoc to_s366;
[L1398]              havoc tokens_s366;
[L1399]              havoc success_s366;
[L1400]              havoc spender_s394;
[L1401]              havoc tokens_s394;
[L1402]              havoc success_s394;
[L1403]              havoc from_s453;
[L1404]              havoc to_s453;
[L1405]              havoc tokens_s453;
[L1406]              havoc success_s453;
[L1407]              havoc __ret_0_owner;
[L1408]              havoc __ret_0_newOwner;
[L1409]              havoc _newOwner_s205;
[L1410]              havoc __ret_0_symbol;
[L1411]              havoc __ret_0_name;
[L1412]              havoc __ret_0_decimals;
[L1413]              havoc __ret_0__totalSupply;
[L1414]              havoc tokenAddress_s496;
[L1415]              havoc tokens_s496;
[L1416]              havoc success_s496;
[L1417]              havoc tmpNow;
[L1418]              havoc gas;
[L1419]              assume gas > 4000000 && gas <= 8000000;
[L1420]              tmpNow := now;
[L1421]              havoc now;
[L1422]              assume now > tmpNow;
[L1423]              assume msgsender_MSG != null;
[L1424]  COND FALSE  !(choice == 6)
[L1430]  COND FALSE  !(choice == 5)
[L1436]  COND FALSE  !(choice == 4)
[L1442]  COND FALSE  !(choice == 3)
[L1449]  COND FALSE  !(choice == 2)
[L1456]  COND TRUE   choice == 1
[L1457]              gas := gas - 21000;
[L1458]  COND TRUE   gas >= 0
[L1459]              assume tokens_s453 >= 0 && tokens_s453 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1460]              assume msgvalue_MSG == 0;
[L1461]  CALL        call success_s453 := transferFrom~address~address~uint256_DiceToken(this, msgsender_MSG, msgvalue_MSG, from_s453, to_s453, tokens_s453);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != from_s453 && p1 != to_s453) && (p2 != from_s453 || p3 != msgsender_MSG)) && from_s453 != to_s453) && tokens_s453 <= balances_DiceToken[this][from_s453]) && tokens_s453 <= allowed_DiceToken[this][from_s453][msgsender_MSG]) && balances_DiceToken[this][to_s453] + tokens_s453 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && tokens_s453 >= 0) && tokens_s453 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_DiceToken[this][to_s453] >= 0) && balances_DiceToken[this][to_s453] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_DiceToken[this][from_s453] >= 0) && balances_DiceToken[this][from_s453] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_DiceToken[this][from_s453][msgsender_MSG] >= 0) && allowed_DiceToken[this][from_s453][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_DiceToken0 := true;
[L3]                 call_transferFrom_DiceToken0 := false;
[L3]                 revert := revert_hold;
[L301]               havoc __exception;
[L302]               revert := false;
[L303]   COND TRUE   __exception
[L304]               __tmp__Balance := Balance;
[L305]               __tmp__DType := DType;
[L306]               __tmp__Alloc := Alloc;
[L307]               __tmp__balance_ADDR := balance_ADDR;
[L308]               __tmp__M_Ref_int := M_Ref_int;
[L309]               __tmp__sum_balances0 := sum_balances0;
[L310]               __tmp__alloc_allowed_DiceToken_lvl0 := alloc_allowed_DiceToken_lvl0;
[L311]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L312]               __tmp__sum_allowed1 := sum_allowed1;
[L313]               __tmp__Length := Length;
[L314]               __tmp__now := now;
[L315]               __tmp__owner_Owned := owner_Owned;
[L316]               __tmp__newOwner_Owned := newOwner_Owned;
[L317]               __tmp__symbol_DiceToken := symbol_DiceToken;
[L318]               __tmp__name_DiceToken := name_DiceToken;
[L319]               __tmp__decimals_DiceToken := decimals_DiceToken;
[L320]               __tmp___totalSupply_DiceToken := _totalSupply_DiceToken;
[L321]               __tmp__balances_DiceToken := balances_DiceToken;
[L322]               __tmp__allowed_DiceToken := allowed_DiceToken;
[L323]   CALL        call success_s453 := transferFrom~address~address~uint256_DiceToken__fail(this, msgsender_MSG, msgvalue_MSG, from_s453, to_s453, tokens_s453);
[L750]   CALL        call __var_4 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __tmp__balances_DiceToken[this][from_s453], tokens_s453);
[L637]   COND FALSE  !(!(b_s45 <= a_s45))
[L641]               c_s45 := (a_s45 - b_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L750]   RET         call __var_4 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __tmp__balances_DiceToken[this][from_s453], tokens_s453);
[L751]   COND FALSE  !(revert)
[L754]               __tmp__sum_balances0[this] := __tmp__sum_balances0[this] - __tmp__balances_DiceToken[this][from_s453];
[L755]               __tmp__balances_DiceToken[this][from_s453] := __var_4;
[L756]               __tmp__sum_balances0[this] := __tmp__sum_balances0[this] + __tmp__balances_DiceToken[this][from_s453];
[L757]   CALL        call __var_5 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __tmp__allowed_DiceToken[this][from_s453][msgsender_MSG], tokens_s453);
[L637]   COND FALSE  !(!(b_s45 <= a_s45))
[L641]               c_s45 := (a_s45 - b_s45) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L757]   RET         call __var_5 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __tmp__allowed_DiceToken[this][from_s453][msgsender_MSG], tokens_s453);
[L758]   COND FALSE  !(revert)
[L761]               __tmp__sum_allowed1[from_s453] := __tmp__sum_allowed1[from_s453] - __tmp__allowed_DiceToken[this][from_s453][msgsender_MSG];
[L762]               __tmp__allowed_DiceToken[this][from_s453][msgsender_MSG] := __var_5;
[L763]               __tmp__sum_allowed1[from_s453] := __tmp__sum_allowed1[from_s453] + __tmp__allowed_DiceToken[this][from_s453][msgsender_MSG];
[L764]   CALL        call __var_6 := add~uint256~uint256_SafeMath__fail(this, this, 0, __tmp__balances_DiceToken[this][to_s453], tokens_s453);
[L619]               c_s23 := (a_s23 + b_s23) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L620]   COND FALSE  !(!(c_s23 >= a_s23))
[L764]   RET         call __var_6 := add~uint256~uint256_SafeMath__fail(this, this, 0, __tmp__balances_DiceToken[this][to_s453], tokens_s453);
[L765]   COND FALSE  !(revert)
[L768]               __tmp__sum_balances0[this] := __tmp__sum_balances0[this] - __tmp__balances_DiceToken[this][to_s453];
[L769]               __tmp__balances_DiceToken[this][to_s453] := __var_6;
[L770]               __tmp__sum_balances0[this] := __tmp__sum_balances0[this] + __tmp__balances_DiceToken[this][to_s453];
[L771]               success_s453 := true;
[L323]   RET         call success_s453 := transferFrom~address~address~uint256_DiceToken__fail(this, msgsender_MSG, msgvalue_MSG, from_s453, to_s453, tokens_s453);
[L324]               assume revert || gas < 0;
[L1461]  RET         call success_s453 := transferFrom~address~address~uint256_DiceToken(this, msgsender_MSG, msgvalue_MSG, from_s453, to_s453, tokens_s453);
[L1476]  RET         call CorralChoice_DiceToken(this);

Loop:
[L1476]        assume true;

[2020-11-24 18:28:52,504 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 18:28:52,504 INFO  L82        PathProgramCache]: Analyzing trace with hash -1300855982, now seen corresponding path program 1 times
[2020-11-24 18:28:52,504 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 18:28:52,511 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 18:28:52,530 INFO  L134       CoverageAnalysis]: Checked inductivity of 4 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 4 trivial. 0 not checked.
[2020-11-24 18:28:52,530 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 18:28:52,530 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [5] imperfect sequences [] total 5
[2020-11-24 18:28:52,530 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 18:28:52,530 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 5 interpolants.
[2020-11-24 18:28:52,530 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=7, Invalid=13, Unknown=0, NotChecked=0, Total=20
[2020-11-24 18:28:52,531 INFO  L87              Difference]: Start difference. First operand 140 states and 141 transitions. cyclomatic complexity: 2 Second operand 5 states.
[2020-11-24 18:28:52,540 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 18:28:52,540 INFO  L93              Difference]: Finished difference Result 133 states and 133 transitions.
[2020-11-24 18:28:52,540 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 5 states. 
[2020-11-24 18:28:52,540 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 133 states and 133 transitions.
[2020-11-24 18:28:52,541 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-24 18:28:52,541 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 133 states to 0 states and 0 transitions.
[2020-11-24 18:28:52,541 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 0
[2020-11-24 18:28:52,541 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 0
[2020-11-24 18:28:52,541 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 0 states and 0 transitions.
[2020-11-24 18:28:52,541 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 18:28:52,541 INFO  L728         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-24 18:28:52,541 INFO  L751         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-24 18:28:52,541 INFO  L631         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-24 18:28:52,542 INFO  L445         BuchiCegarLoop]: ======== Iteration 9============
[2020-11-24 18:28:52,542 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 0 states and 0 transitions.
[2020-11-24 18:28:52,542 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-24 18:28:52,542 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is true
[2020-11-24 18:28:52,546 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 24.11 06:28:52 BasicIcfg
[2020-11-24 18:28:52,546 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-24 18:28:52,546 INFO  L168              Benchmark]: Toolchain (without parser) took 4384.84 ms. Allocated memory was 1.0 GB in the beginning and 1.3 GB in the end (delta: 269.5 MB). Free memory was 940.6 MB in the beginning and 1.2 GB in the end (delta: -219.0 MB). Peak memory consumption was 50.5 MB. Max. memory is 15.3 GB.
[2020-11-24 18:28:52,547 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.16 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-24 18:28:52,548 INFO  L168              Benchmark]: Boogie Preprocessor took 72.66 ms. Allocated memory is still 1.0 GB. Free memory is still 940.6 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-24 18:28:52,548 INFO  L168              Benchmark]: UtopiaSpecLang took 49.33 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 929.8 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
[2020-11-24 18:28:52,549 INFO  L168              Benchmark]: Boogie Printer took 9.45 ms. Allocated memory is still 1.0 GB. Free memory is still 929.8 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-24 18:28:52,549 INFO  L168              Benchmark]: RCFGBuilder took 489.59 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 892.2 MB in the end (delta: 37.6 MB). Peak memory consumption was 37.6 MB. Max. memory is 15.3 GB.
[2020-11-24 18:28:52,549 INFO  L168              Benchmark]: UtopiaLTL2Aut took 38.32 ms. Allocated memory is still 1.0 GB. Free memory was 892.2 MB in the beginning and 883.3 MB in the end (delta: 9.0 MB). Peak memory consumption was 9.0 MB. Max. memory is 15.3 GB.
[2020-11-24 18:28:52,549 INFO  L168              Benchmark]: BÃ¼chi Program Product took 852.04 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 57.1 MB). Free memory was 883.3 MB in the beginning and 1.0 GB in the end (delta: -127.0 MB). Peak memory consumption was 164.5 MB. Max. memory is 15.3 GB.
[2020-11-24 18:28:52,550 INFO  L168              Benchmark]: BlockEncodingV2 took 60.53 ms. Allocated memory is still 1.1 GB. Free memory was 1.0 GB in the beginning and 981.5 MB in the end (delta: 28.8 MB). Peak memory consumption was 28.8 MB. Max. memory is 15.3 GB.
[2020-11-24 18:28:52,550 INFO  L168              Benchmark]: BuchiAutomizer took 2809.51 ms. Allocated memory was 1.1 GB in the beginning and 1.3 GB in the end (delta: 212.3 MB). Free memory was 981.5 MB in the beginning and 1.2 GB in the end (delta: -178.1 MB). Peak memory consumption was 34.3 MB. Max. memory is 15.3 GB.
[2020-11-24 18:28:52,553 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    1218 locations, 2025 edges
  - StatisticsResult: Encoded RCFG
    1192 locations, 1964 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.16 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 72.66 ms. Allocated memory is still 1.0 GB. Free memory is still 940.6 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 49.33 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 929.8 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 9.45 ms. Allocated memory is still 1.0 GB. Free memory is still 929.8 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * RCFGBuilder took 489.59 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 892.2 MB in the end (delta: 37.6 MB). Peak memory consumption was 37.6 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 38.32 ms. Allocated memory is still 1.0 GB. Free memory was 892.2 MB in the beginning and 883.3 MB in the end (delta: 9.0 MB). Peak memory consumption was 9.0 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 852.04 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 57.1 MB). Free memory was 883.3 MB in the beginning and 1.0 GB in the end (delta: -127.0 MB). Peak memory consumption was 164.5 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 60.53 ms. Allocated memory is still 1.1 GB. Free memory was 1.0 GB in the beginning and 981.5 MB in the end (delta: 28.8 MB). Peak memory consumption was 28.8 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 2809.51 ms. Allocated memory was 1.1 GB in the beginning and 1.3 GB in the end (delta: 212.3 MB). Free memory was 981.5 MB in the beginning and 1.2 GB in the end (delta: -178.1 MB). Peak memory consumption was 34.3 MB. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    525 locations, 628 edges
  - StatisticsResult: BuchiProgram size
    1218 locations, 2025 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 8 terminating modules (8 trivial, 0 deterministic, 0 nondeterministic). 8 modules have a trivial ranking function, the largest among these consists of 20 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 2.7s and 9 iterations.  TraceHistogramMax:2. Analysis of lassos took 1.5s. Construction of modules took 0.5s. BÃ¼chi inclusion checks took 0.4s. Highest rank in rank-based complementation 0. Minimization of det autom 8. Minimization of nondet autom 0. Automata minimization 0.0s AutomataMinimizationTime, 7 MinimizatonAttempts, 35 StatesRemovedByMinimization, 3 NontrivialMinimizations. Non-live state removal took 0.0s Buchi closure took 0.0s. Biggest automaton had 193 states and ocurred in iteration 2.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 1749 SDtfs, 1562 SDslu, 3575 SDs, 0 SdLazy, 2193 SolverSat, 498 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 0.5s Time	LassoAnalysisResults: nont0 unkn0 SFLI0 SFLT0 conc0 concLT0 SILN0 SILU8 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - AllSpecificationsHoldResult: All specifications hold
    Buchi Automizer proved that the LTL property ! ( ( []( (call_transferFrom_DiceToken0) ==> ( <>(success_transferFrom_DiceToken0) ) ) )) holds
RESULT: Ultimate proved your program to be correct!
Received shutdown request...
