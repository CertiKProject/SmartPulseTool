This is Ultimate 0.1.24-f1553f5-m
[2020-11-24 14:46:48,908 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-24 14:46:48,909 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-24 14:46:48,917 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-24 14:46:48,917 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-24 14:46:48,917 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-24 14:46:48,918 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-24 14:46:48,919 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-24 14:46:48,920 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-24 14:46:48,921 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-24 14:46:48,921 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-24 14:46:48,921 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-24 14:46:48,922 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-24 14:46:48,922 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-24 14:46:48,923 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-24 14:46:48,923 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-24 14:46:48,924 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-24 14:46:48,925 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-24 14:46:48,926 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-24 14:46:48,927 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-24 14:46:48,927 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-24 14:46:48,928 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-24 14:46:48,929 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-24 14:46:48,929 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-24 14:46:48,929 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-24 14:46:48,930 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-24 14:46:48,930 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-24 14:46:48,931 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-24 14:46:48,931 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-24 14:46:48,931 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-24 14:46:48,931 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-24 14:46:48,932 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-24 14:46:48,932 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-24 14:46:48,933 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-24 14:46:48,933 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-24 14:46:48,934 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-24 14:46:48,934 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-24 14:46:48,934 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-24 14:46:48,934 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-24 14:46:48,935 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-24 14:46:48,935 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-24 14:46:48,936 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-24 14:46:48,943 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-24 14:46:48,943 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-24 14:46:48,944 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-24 14:46:48,944 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-24 14:46:48,944 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-24 14:46:48,944 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-24 14:46:48,944 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-24 14:46:48,944 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-24 14:46:48,944 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-24 14:46:48,945 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-24 14:46:48,945 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-24 14:46:48,945 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-24 14:46:48,945 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-24 14:46:48,945 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-24 14:46:48,945 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-24 14:46:48,945 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-24 14:46:48,945 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-24 14:46:48,945 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-24 14:46:48,945 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-24 14:46:48,945 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-24 14:46:48,945 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-24 14:46:48,945 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-24 14:46:48,945 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-24 14:46:48,945 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-24 14:46:48,946 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-24 14:46:48,946 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-24 14:46:48,966 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-24 14:46:48,979 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-24 14:46:48,982 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-24 14:46:48,983 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-24 14:46:48,983 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-24 14:46:48,984 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/KOCToken_0xfae2b2f57ce6dce9a089b746e32ede3941b2208b_transfer-self.bpl
[2020-11-24 14:46:48,984 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/KOCToken_0xfae2b2f57ce6dce9a089b746e32ede3941b2208b_transfer-self.bpl'
[2020-11-24 14:46:49,058 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-24 14:46:49,060 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-24 14:46:49,060 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-24 14:46:49,060 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-24 14:46:49,061 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-24 14:46:49,078 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "KOCToken_0xfae2b2f57ce6dce9a089b746e32ede3941b2208b_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 02:46:49" (1/1) ...
[2020-11-24 14:46:49,080 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "KOCToken_0xfae2b2f57ce6dce9a089b746e32ede3941b2208b_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 02:46:49" (1/1) ...
[2020-11-24 14:46:49,104 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "KOCToken_0xfae2b2f57ce6dce9a089b746e32ede3941b2208b_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 02:46:49" (1/1) ...
[2020-11-24 14:46:49,105 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "KOCToken_0xfae2b2f57ce6dce9a089b746e32ede3941b2208b_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 02:46:49" (1/1) ...
[2020-11-24 14:46:49,122 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "KOCToken_0xfae2b2f57ce6dce9a089b746e32ede3941b2208b_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 02:46:49" (1/1) ...
[2020-11-24 14:46:49,131 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "KOCToken_0xfae2b2f57ce6dce9a089b746e32ede3941b2208b_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 02:46:49" (1/1) ...
[2020-11-24 14:46:49,136 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "KOCToken_0xfae2b2f57ce6dce9a089b746e32ede3941b2208b_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 02:46:49" (1/1) ...
[2020-11-24 14:46:49,144 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-24 14:46:49,144 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-24 14:46:49,145 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-24 14:46:49,147 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-24 14:46:49,150 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "KOCToken_0xfae2b2f57ce6dce9a089b746e32ede3941b2208b_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 02:46:49" (1/1) ...
[2020-11-24 14:46:49,166 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(ERC20.transfer(to, value), msg.sender == to && value <= _balances_ERC20[this][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][to] >= 0 && _balances_ERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][msg.sender] >= 0 &&  _balances_ERC20[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(ERC20.transfer(to, value), return == true && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this]) && _balances_ERC20[this] == old(_balances_ERC20[this]) && _allowed_ERC20[this] == old(_allowed_ERC20[this]) && amount_KOCToken[this] == old(amount_KOCToken[this]) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this]) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this]) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]))))
[2020-11-24 14:46:49,172 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(ERC20.transfer(to, value), msg.sender == to && value <= _balances_ERC20[this][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][to] >= 0 && _balances_ERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][msg.sender] >= 0 &&  _balances_ERC20[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(ERC20.transfer(to, value), return == true && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this]) && _balances_ERC20[this] == old(_balances_ERC20[this]) && _allowed_ERC20[this] == old(_allowed_ERC20[this]) && amount_KOCToken[this] == old(amount_KOCToken[this]) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this]) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this]) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]))))
[2020-11-24 14:46:49,179 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(ERC20.transfer(to, value), msg.sender == to && value <= _balances_ERC20[this][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][to] >= 0 && _balances_ERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][msg.sender] >= 0 &&  _balances_ERC20[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(ERC20.transfer(to, value), return == true && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this]) && _balances_ERC20[this] == old(_balances_ERC20[this]) && _allowed_ERC20[this] == old(_allowed_ERC20[this]) && amount_KOCToken[this] == old(amount_KOCToken[this]) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this]) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this]) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]))))
[2020-11-24 14:46:49,185 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( msg.sender==to_s458 && value_s458<=_balances_ERC20[this][msg.sender] ) && value_s458>=0 ) && value_s458<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && _balances_ERC20[this][to_s458]>=0 ) && _balances_ERC20[this][to_s458]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && _balances_ERC20[this][msg.sender]>=0 ) && _balances_ERC20[this][msg.sender]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>],IdentifierExpression[to_s458,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]],BinaryExpression[COMPLEQ,IdentifierExpression[value_s458,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>],ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]]]],BinaryExpression[COMPGEQ,IdentifierExpression[value_s458,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>],IntegerLiteral[0]]],BinaryExpression[COMPLT,IdentifierExpression[value_s458,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],[IdentifierExpression[to_s458,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],[IdentifierExpression[to_s458,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]]
[2020-11-24 14:46:49,187 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( __ret_0_==true && _totalSupply_ERC20[this]==( old(_totalSupply_ERC20[this]) ) ) && _balances_ERC20[this]==( old(_balances_ERC20[this]) ) ) && _allowed_ERC20[this]==( old(_allowed_ERC20[this]) ) ) && amount_KOCToken[this]==( old(amount_KOCToken[this]) ) ) && _name_ERC20Detailed[this]==( old(_name_ERC20Detailed[this]) ) ) && _symbol_ERC20Detailed[this]==( old(_symbol_ERC20Detailed[this]) ) ) && _decimals_ERC20Detailed[this]==( old(_decimals_ERC20Detailed[this]) ) ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[__ret_0_,<IMPLEMENTATION_OUTPARAM,transfer~address~uint256_ERC20>],BooleanLiteral[true]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_totalSupply_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_totalSupply_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_allowed_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_allowed_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[amount_KOCToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[amount_KOCToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_name_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_name_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_symbol_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_symbol_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_decimals_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_decimals_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]]]]]
[2020-11-24 14:46:49,192 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(ERC20.transfer(to, value), msg.sender == to && value <= _balances_ERC20[this][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][to] >= 0 && _balances_ERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][msg.sender] >= 0 &&  _balances_ERC20[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(ERC20.transfer(to, value), return == true && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this]) && _balances_ERC20[this] == old(_balances_ERC20[this]) && _allowed_ERC20[this] == old(_allowed_ERC20[this]) && amount_KOCToken[this] == old(amount_KOCToken[this]) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this]) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this]) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]))))
[2020-11-24 14:46:49,192 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_transfer_ERC200) ==> ( <>AP(success_transfer_ERC200) ) ) )
Executed UtopiaSpecLang
[2020-11-24 14:46:49,198 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 02:46:49 PropertyContainer
[2020-11-24 14:46:49,198 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-24 14:46:49,199 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-24 14:46:49,199 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-24 14:46:49,199 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-24 14:46:49,200 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "KOCToken_0xfae2b2f57ce6dce9a089b746e32ede3941b2208b_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 02:46:49" (1/2) ...
[2020-11-24 14:46:49,200 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-24 14:46:49,200 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-24 14:46:49,211 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 02:46:49" (2/2) ...
[2020-11-24 14:46:49,212 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-24 14:46:49,212 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-24 14:46:49,212 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-24 14:46:49,212 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-24 14:46:49,213 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "KOCToken_0xfae2b2f57ce6dce9a089b746e32ede3941b2208b_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 02:46:49" (1/2) ...
[2020-11-24 14:46:49,265 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-24 14:46:49,265 INFO  L130     BoogieDeclarations]: Found specification of procedure Roles.Role_ctor__success
[2020-11-24 14:46:49,266 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__success
[2020-11-24 14:46:49,266 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__success
[2020-11-24 14:46:49,266 INFO  L130     BoogieDeclarations]: Found specification of procedure add~Role~address_Roles__success
[2020-11-24 14:46:49,266 INFO  L130     BoogieDeclarations]: Found specification of procedure has~Role~address_Roles__success
[2020-11-24 14:46:49,266 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20
[2020-11-24 14:46:49,266 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ERC20
[2020-11-24 14:46:49,266 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20
[2020-11-24 14:46:49,266 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ERC20
[2020-11-24 14:46:49,266 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20
[2020-11-24 14:46:49,266 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ERC20
[2020-11-24 14:46:49,266 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20
[2020-11-24 14:46:49,267 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20
[2020-11-24 14:46:49,267 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20
[2020-11-24 14:46:49,267 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ERC20
[2020-11-24 14:46:49,267 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20
[2020-11-24 14:46:49,267 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20
[2020-11-24 14:46:49,267 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_ERC20__success
[2020-11-24 14:46:49,267 INFO  L130     BoogieDeclarations]: Found specification of procedure _approve~address~address~uint256_ERC20__success
[2020-11-24 14:46:49,267 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-24 14:46:49,267 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-24 14:46:49,267 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-24 14:46:49,267 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyMinter_pre__success
[2020-11-24 14:46:49,268 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_SafeMath
[2020-11-24 14:46:49,268 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_SafeMath
[2020-11-24 14:46:49,268 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_Roles
[2020-11-24 14:46:49,268 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_Roles
[2020-11-24 14:46:49,268 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_MinterRole
[2020-11-24 14:46:49,268 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_MinterRole
[2020-11-24 14:46:49,268 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_IERC20
[2020-11-24 14:46:49,268 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_IERC20
[2020-11-24 14:46:49,268 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20
[2020-11-24 14:46:49,268 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20
[2020-11-24 14:46:49,268 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20Detailed
[2020-11-24 14:46:49,268 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20Detailed
[2020-11-24 14:46:49,268 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20Mintable
[2020-11-24 14:46:49,269 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20Mintable
[2020-11-24 14:46:49,269 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20Capped
[2020-11-24 14:46:49,269 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20Capped
[2020-11-24 14:46:49,269 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20Burnable
[2020-11-24 14:46:49,269 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20Burnable
[2020-11-24 14:46:49,269 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_KOCToken
[2020-11-24 14:46:49,269 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-24 14:46:49,269 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-24 14:46:49,269 INFO  L130     BoogieDeclarations]: Found specification of procedure Roles.Role_ctor__fail
[2020-11-24 14:46:49,269 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-24 14:46:49,269 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__fail
[2020-11-24 14:46:49,269 INFO  L130     BoogieDeclarations]: Found specification of procedure add~Role~address_Roles__fail
[2020-11-24 14:46:49,269 INFO  L130     BoogieDeclarations]: Found specification of procedure has~Role~address_Roles__fail
[2020-11-24 14:46:49,270 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20__success
[2020-11-24 14:46:49,270 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20__fail
[2020-11-24 14:46:49,270 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20__success
[2020-11-24 14:46:49,270 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20__fail
[2020-11-24 14:46:49,270 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20__success
[2020-11-24 14:46:49,270 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20__fail
[2020-11-24 14:46:49,270 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20__success
[2020-11-24 14:46:49,270 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20__fail
[2020-11-24 14:46:49,270 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20__success
[2020-11-24 14:46:49,270 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20__fail
[2020-11-24 14:46:49,270 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20__success
[2020-11-24 14:46:49,270 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20__fail
[2020-11-24 14:46:49,270 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_ERC20__fail
[2020-11-24 14:46:49,271 INFO  L130     BoogieDeclarations]: Found specification of procedure _approve~address~address~uint256_ERC20__fail
[2020-11-24 14:46:49,271 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-24 14:46:49,271 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-24 14:46:49,271 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-24 14:46:49,271 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyMinter_pre__fail
[2020-11-24 14:46:49,271 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-24 14:46:49,271 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-24 14:46:49,271 INFO  L138     BoogieDeclarations]: Found implementation of procedure Roles.Role_ctor__fail
[2020-11-24 14:46:49,271 INFO  L138     BoogieDeclarations]: Found implementation of procedure Roles.Role_ctor__success
[2020-11-24 14:46:49,271 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-24 14:46:49,271 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__success
[2020-11-24 14:46:49,271 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__fail
[2020-11-24 14:46:49,272 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__success
[2020-11-24 14:46:49,272 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~Role~address_Roles__fail
[2020-11-24 14:46:49,272 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~Role~address_Roles__success
[2020-11-24 14:46:49,272 INFO  L138     BoogieDeclarations]: Found implementation of procedure has~Role~address_Roles__fail
[2020-11-24 14:46:49,272 INFO  L138     BoogieDeclarations]: Found implementation of procedure has~Role~address_Roles__success
[2020-11-24 14:46:49,272 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ERC20__fail
[2020-11-24 14:46:49,272 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ERC20__success
[2020-11-24 14:46:49,272 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ERC20__fail
[2020-11-24 14:46:49,272 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ERC20__success
[2020-11-24 14:46:49,272 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ERC20__fail
[2020-11-24 14:46:49,272 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ERC20__success
[2020-11-24 14:46:49,272 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20__fail
[2020-11-24 14:46:49,272 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20__success
[2020-11-24 14:46:49,273 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ERC20__fail
[2020-11-24 14:46:49,273 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ERC20__success
[2020-11-24 14:46:49,273 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20__fail
[2020-11-24 14:46:49,273 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20__success
[2020-11-24 14:46:49,273 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_ERC20__fail
[2020-11-24 14:46:49,273 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_ERC20__success
[2020-11-24 14:46:49,273 INFO  L138     BoogieDeclarations]: Found implementation of procedure _approve~address~address~uint256_ERC20__fail
[2020-11-24 14:46:49,273 INFO  L138     BoogieDeclarations]: Found implementation of procedure _approve~address~address~uint256_ERC20__success
[2020-11-24 14:46:49,273 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-24 14:46:49,273 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-24 14:46:49,273 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-24 14:46:49,273 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-24 14:46:49,274 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-24 14:46:49,274 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-24 14:46:49,274 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyMinter_pre__fail
[2020-11-24 14:46:49,274 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyMinter_pre__success
[2020-11-24 14:46:49,274 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_SafeMath
[2020-11-24 14:46:49,274 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_SafeMath
[2020-11-24 14:46:49,274 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_Roles
[2020-11-24 14:46:49,274 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_Roles
[2020-11-24 14:46:49,274 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_MinterRole
[2020-11-24 14:46:49,274 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_MinterRole
[2020-11-24 14:46:49,274 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_IERC20
[2020-11-24 14:46:49,274 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_IERC20
[2020-11-24 14:46:49,274 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20
[2020-11-24 14:46:49,275 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20
[2020-11-24 14:46:49,275 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20Detailed
[2020-11-24 14:46:49,275 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20Detailed
[2020-11-24 14:46:49,275 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20Mintable
[2020-11-24 14:46:49,275 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20Mintable
[2020-11-24 14:46:49,275 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20Capped
[2020-11-24 14:46:49,275 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20Capped
[2020-11-24 14:46:49,275 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20Burnable
[2020-11-24 14:46:49,275 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20Burnable
[2020-11-24 14:46:49,275 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_KOCToken
[2020-11-24 14:46:49,275 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-24 14:46:49,275 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-24 14:46:49,276 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-24 14:46:49,542 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 14:46:49,542 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 14:46:49,543 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 14:46:49,930 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-24 14:46:49,930 INFO  L286             CfgBuilder]: Removed 10 assue(true) statements.
[2020-11-24 14:46:49,932 INFO  L202        PluginConnector]: Adding new model KOCToken_0xfae2b2f57ce6dce9a089b746e32ede3941b2208b_transfer-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 02:46:49 BoogieIcfgContainer
[2020-11-24 14:46:49,932 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 02:46:49" (2/2) ...
[2020-11-24 14:46:49,932 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-24 14:46:49,932 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@28f4244 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 02:46:49, skipping insertion in model container
[2020-11-24 14:46:49,932 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-24 14:46:49,933 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-24 14:46:49,933 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-24 14:46:49,934 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-24 14:46:49,934 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "KOCToken_0xfae2b2f57ce6dce9a089b746e32ede3941b2208b_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 02:46:49" (1/3) ...
[2020-11-24 14:46:49,935 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@5dc09aed and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 02:46:49, skipping insertion in model container
[2020-11-24 14:46:49,935 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 02:46:49" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-24 14:46:49,972 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 02:46:49 NWAContainer
[2020-11-24 14:46:49,972 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-24 14:46:49,973 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-24 14:46:49,973 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-24 14:46:49,974 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-24 14:46:49,975 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "KOCToken_0xfae2b2f57ce6dce9a089b746e32ede3941b2208b_transfer-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 02:46:49" (3/4) ...
[2020-11-24 14:46:49,975 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@3d1ef7af and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 02:46:49, skipping insertion in model container
[2020-11-24 14:46:49,975 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 02:46:49" (4/4) ...
[2020-11-24 14:46:49,978 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-24 14:46:49,982 INFO  L110   BuchiProductObserver]: Initial RCFG 1088 locations, 1545 edges
[2020-11-24 14:46:49,982 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-24 14:46:49,993 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-24 14:46:51,316 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-24 14:46:51,320 INFO  L110   BuchiProductObserver]: BuchiProgram size 2716 locations, 5085 edges
[2020-11-24 14:46:51,320 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 02:46:51 BoogieIcfgContainer
[2020-11-24 14:46:51,320 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-24 14:46:51,320 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-24 14:46:51,320 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-24 14:46:51,322 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-24 14:46:51,322 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 02:46:51" (1/1) ...
[2020-11-24 14:46:51,387 INFO  L313           BlockEncoder]: Initial Icfg 2716 locations, 5085 edges
[2020-11-24 14:46:51,387 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-24 14:46:51,387 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-24 14:46:51,387 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-24 14:46:51,388 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-24 14:46:51,396 INFO  L70    emoveInfeasibleEdges]: Removed 96 edges and 23 locations because of local infeasibility
[2020-11-24 14:46:51,402 INFO  L70        RemoveSinkStates]: Removed 26 edges and 17 locations by removing sink states
[2020-11-24 14:46:51,408 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-24 14:46:51,411 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-24 14:46:51,413 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-24 14:46:51,413 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-24 14:46:51,416 INFO  L313           BlockEncoder]: Encoded RCFG 2652 locations, 4928 edges
[2020-11-24 14:46:51,417 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 24.11 02:46:51 BasicIcfg
[2020-11-24 14:46:51,417 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-24 14:46:51,417 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-24 14:46:51,417 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-24 14:46:51,419 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-24 14:46:51,419 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 14:46:51,419 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "KOCToken_0xfae2b2f57ce6dce9a089b746e32ede3941b2208b_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 02:46:49" (1/6) ...
[2020-11-24 14:46:51,421 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@27b163e6 and model type KOCToken_0xfae2b2f57ce6dce9a089b746e32ede3941b2208b_transfer-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 24.11 02:46:51, skipping insertion in model container
[2020-11-24 14:46:51,421 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 14:46:51,421 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 02:46:49" (2/6) ...
[2020-11-24 14:46:51,421 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@27b163e6 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 24.11 02:46:51, skipping insertion in model container
[2020-11-24 14:46:51,421 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 14:46:51,421 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "KOCToken_0xfae2b2f57ce6dce9a089b746e32ede3941b2208b_transfer-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 02:46:49" (3/6) ...
[2020-11-24 14:46:51,421 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@27b163e6 and model type KOCToken_0xfae2b2f57ce6dce9a089b746e32ede3941b2208b_transfer-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 24.11 02:46:51, skipping insertion in model container
[2020-11-24 14:46:51,421 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 14:46:51,421 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 02:46:49" (4/6) ...
[2020-11-24 14:46:51,422 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@27b163e6 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 24.11 02:46:51, skipping insertion in model container
[2020-11-24 14:46:51,422 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 14:46:51,422 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 02:46:51" (5/6) ...
[2020-11-24 14:46:51,422 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@27b163e6 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 24.11 02:46:51, skipping insertion in model container
[2020-11-24 14:46:51,422 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 14:46:51,422 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 24.11 02:46:51" (6/6) ...
[2020-11-24 14:46:51,423 INFO  L404   chiAutomizerObserver]: Analyzing ICFG KOCToken_0xfae2b2f57ce6dce9a089b746e32ede3941b2208b_transfer-self.bpl_BEv2
[2020-11-24 14:46:51,453 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-24 14:46:51,454 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-24 14:46:51,454 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-24 14:46:51,454 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-24 14:46:51,454 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-24 14:46:51,454 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-24 14:46:51,454 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-24 14:46:51,454 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-24 14:46:51,454 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-24 14:46:51,475 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2652 states.
[2020-11-24 14:46:51,511 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 14:46:51,511 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 14:46:51,511 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 14:46:51,518 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 14:46:51,518 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
[2020-11-24 14:46:51,518 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-24 14:46:51,518 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2652 states.
[2020-11-24 14:46:51,530 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 14:46:51,530 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 14:46:51,530 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 14:46:51,531 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 14:46:51,531 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L2]                 success_transfer_ERC200 := false;
[L2]                 call_transfer_ERC200 := false;
[L2]     CALL        call main();
[L3295]              assume null == 0;
[L3296]  CALL        call this := FreshRefGenerator__success();
[L988]               havoc newRef;
[L989]               assume Alloc[newRef] == false;
[L990]               Alloc[newRef] := true;
[L991]               assume newRef != null;
[L3296]  RET         call this := FreshRefGenerator__success();
[L3297]              assume now >= 0;
[L3298]              assume DType[this] == KOCToken;
[L3299]              assume !revert && gas >= 0;
[L3300]  CALL        call CorralChoice_KOCToken(this);
[L3207]              havoc msgsender_MSG;
[L3208]              havoc msgvalue_MSG;
[L3209]              havoc choice;
[L3210]              havoc to_s458;
[L3211]              havoc value_s458;
[L3212]              havoc __ret_0_transfer;
[L3213]              havoc spender_s477;
[L3214]              havoc value_s477;
[L3215]              havoc __ret_0_approve;
[L3216]              havoc from_s512;
[L3217]              havoc to_s512;
[L3218]              havoc value_s512;
[L3219]              havoc __ret_0_transferFrom;
[L3220]              havoc __ret_0_totalSupply;
[L3221]              havoc owner_s423;
[L3222]              havoc __ret_0_balanceOf;
[L3223]              havoc owner_s439;
[L3224]              havoc spender_s439;
[L3225]              havoc __ret_0_allowance;
[L3226]              havoc spender_s539;
[L3227]              havoc addedValue_s539;
[L3228]              havoc __ret_0_increaseAllowance;
[L3229]              havoc spender_s566;
[L3230]              havoc subtractedValue_s566;
[L3231]              havoc __ret_0_decreaseAllowance;
[L3232]              havoc name_s795;
[L3233]              havoc symbol_s795;
[L3234]              havoc decimals_s795;
[L3235]              havoc __ret_0_name;
[L3236]              havoc __ret_0_symbol;
[L3237]              havoc __ret_0_decimals;
[L3238]              havoc value_s912;
[L3239]              havoc from_s925;
[L3240]              havoc value_s925;
[L3241]              havoc tmpNow;
[L3242]              havoc gas;
[L3243]              assume gas > 4000000 && gas <= 8000000;
[L3244]              tmpNow := now;
[L3245]              havoc now;
[L3246]              assume now > tmpNow;
[L3247]              assume msgsender_MSG != null;
[L3248]  COND TRUE   choice == 6
[L3249]              gas := gas - 21000;
[L3250]  COND FALSE  !(gas >= 0)
[L3300]  RET         call CorralChoice_KOCToken(this);

Loop:
[L3300]        assume true;

[2020-11-24 14:46:51,543 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 14:46:51,543 INFO  L82        PathProgramCache]: Analyzing trace with hash 1024405179, now seen corresponding path program 1 times
[2020-11-24 14:46:51,548 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 14:46:51,562 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 14:46:51,614 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 14:46:51,616 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 14:46:51,617 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-24 14:46:51,621 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 14:46:51,633 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-24 14:46:51,633 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-24 14:46:51,634 INFO  L87              Difference]: Start difference. First operand 2652 states. Second operand 3 states.
[2020-11-24 14:46:51,865 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 14:46:51,865 INFO  L93              Difference]: Finished difference Result 832 states and 1016 transitions.
[2020-11-24 14:46:51,866 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-24 14:46:51,867 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 832 states and 1016 transitions.
[2020-11-24 14:46:51,872 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 14:46:51,877 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 832 states to 236 states and 273 transitions.
[2020-11-24 14:46:51,877 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 4
[2020-11-24 14:46:51,878 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 236
[2020-11-24 14:46:51,878 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 236 states and 273 transitions.
[2020-11-24 14:46:51,880 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 14:46:51,881 INFO  L728         BuchiCegarLoop]: Abstraction has 236 states and 273 transitions.
[2020-11-24 14:46:51,891 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 236 states and 273 transitions.
[2020-11-24 14:46:51,908 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 236 to 236.
[2020-11-24 14:46:51,910 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 236 states.
[2020-11-24 14:46:51,912 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 236 states to 236 states and 273 transitions.
[2020-11-24 14:46:51,913 INFO  L751         BuchiCegarLoop]: Abstraction has 236 states and 273 transitions.
[2020-11-24 14:46:51,913 INFO  L631         BuchiCegarLoop]: Abstraction has 236 states and 273 transitions.
[2020-11-24 14:46:51,913 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-24 14:46:51,913 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 236 states and 273 transitions.
[2020-11-24 14:46:51,914 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 14:46:51,915 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 14:46:51,915 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 14:46:51,916 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 14:46:51,916 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L2]                 success_transfer_ERC200 := false;
[L2]                 call_transfer_ERC200 := false;
[L2]     CALL        call main();
[L3295]              assume null == 0;
[L3296]  CALL        call this := FreshRefGenerator__success();
[L988]               havoc newRef;
[L989]               assume Alloc[newRef] == false;
[L990]               Alloc[newRef] := true;
[L991]               assume newRef != null;
[L3296]  RET         call this := FreshRefGenerator__success();
[L3297]              assume now >= 0;
[L3298]              assume DType[this] == KOCToken;
[L3299]              assume !revert && gas >= 0;
[L3300]  CALL        call CorralChoice_KOCToken(this);
[L3207]              havoc msgsender_MSG;
[L3208]              havoc msgvalue_MSG;
[L3209]              havoc choice;
[L3210]              havoc to_s458;
[L3211]              havoc value_s458;
[L3212]              havoc __ret_0_transfer;
[L3213]              havoc spender_s477;
[L3214]              havoc value_s477;
[L3215]              havoc __ret_0_approve;
[L3216]              havoc from_s512;
[L3217]              havoc to_s512;
[L3218]              havoc value_s512;
[L3219]              havoc __ret_0_transferFrom;
[L3220]              havoc __ret_0_totalSupply;
[L3221]              havoc owner_s423;
[L3222]              havoc __ret_0_balanceOf;
[L3223]              havoc owner_s439;
[L3224]              havoc spender_s439;
[L3225]              havoc __ret_0_allowance;
[L3226]              havoc spender_s539;
[L3227]              havoc addedValue_s539;
[L3228]              havoc __ret_0_increaseAllowance;
[L3229]              havoc spender_s566;
[L3230]              havoc subtractedValue_s566;
[L3231]              havoc __ret_0_decreaseAllowance;
[L3232]              havoc name_s795;
[L3233]              havoc symbol_s795;
[L3234]              havoc decimals_s795;
[L3235]              havoc __ret_0_name;
[L3236]              havoc __ret_0_symbol;
[L3237]              havoc __ret_0_decimals;
[L3238]              havoc value_s912;
[L3239]              havoc from_s925;
[L3240]              havoc value_s925;
[L3241]              havoc tmpNow;
[L3242]              havoc gas;
[L3243]              assume gas > 4000000 && gas <= 8000000;
[L3244]              tmpNow := now;
[L3245]              havoc now;
[L3246]              assume now > tmpNow;
[L3247]              assume msgsender_MSG != null;
[L3248]  COND TRUE   choice == 6
[L3249]              gas := gas - 21000;
[L3250]  COND TRUE   gas >= 0
[L3251]              assume value_s458 >= 0 && value_s458 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3252]              assume msgvalue_MSG == 0;
[L3253]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, to_s458, value_s458);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == to_s458 && value_s458 <= _balances_ERC20[this][msgsender_MSG]) && value_s458 >= 0) && value_s458 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][to_s458] >= 0) && _balances_ERC20[this][to_s458] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_ERC200 := true;
[L2]                 call_transfer_ERC200 := false;
[L2]                 revert := revert_hold;
[L282]               havoc __exception;
[L283]               revert := false;
[L284]   COND FALSE  !(__exception)
[L311]   CALL        call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, to_s458, value_s458);
[L1188]  COND TRUE   DType[this] == KOCToken
[L1189]  CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s458, value_s458);
[L1453]              __var_5 := null;
[L1454]  COND TRUE   !(to_s612 != null)
[L1455]              revert := true;
[L1189]  RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s458, value_s458);
[L1190]  COND TRUE   revert
[L311]   RET         call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, to_s458, value_s458);
[L312]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !(((((((__ret_0_ == true && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _balances_ERC20[this] == old(_balances_ERC20[this])) && _allowed_ERC20[this] == old(_allowed_ERC20[this])) && amount_KOCToken[this] == old(amount_KOCToken[this])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]));
[L2]                 revert := revert_hold;
[L3253]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, to_s458, value_s458);
[L3300]  RET         call CorralChoice_KOCToken(this);

Loop:
[L3300]        assume true;

[2020-11-24 14:46:51,919 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 14:46:51,919 INFO  L82        PathProgramCache]: Analyzing trace with hash -487686723, now seen corresponding path program 1 times
[2020-11-24 14:46:51,921 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 14:46:51,933 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 14:46:51,966 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 14:46:51,967 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 14:46:51,967 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [7] imperfect sequences [] total 7
[2020-11-24 14:46:51,968 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 14:46:51,968 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 7 interpolants.
[2020-11-24 14:46:51,968 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=11, Invalid=31, Unknown=0, NotChecked=0, Total=42
[2020-11-24 14:46:51,969 INFO  L87              Difference]: Start difference. First operand 236 states and 273 transitions. cyclomatic complexity: 38 Second operand 7 states.
[2020-11-24 14:46:51,997 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 14:46:51,997 INFO  L93              Difference]: Finished difference Result 259 states and 304 transitions.
[2020-11-24 14:46:51,998 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 7 states. 
[2020-11-24 14:46:51,998 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 259 states and 304 transitions.
[2020-11-24 14:46:52,000 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 14:46:52,002 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 259 states to 235 states and 271 transitions.
[2020-11-24 14:46:52,002 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 235
[2020-11-24 14:46:52,003 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 235
[2020-11-24 14:46:52,003 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 235 states and 271 transitions.
[2020-11-24 14:46:52,004 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 14:46:52,004 INFO  L728         BuchiCegarLoop]: Abstraction has 235 states and 271 transitions.
[2020-11-24 14:46:52,004 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 235 states and 271 transitions.
[2020-11-24 14:46:52,009 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 235 to 235.
[2020-11-24 14:46:52,009 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 235 states.
[2020-11-24 14:46:52,009 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 235 states to 235 states and 271 transitions.
[2020-11-24 14:46:52,009 INFO  L751         BuchiCegarLoop]: Abstraction has 235 states and 271 transitions.
[2020-11-24 14:46:52,009 INFO  L631         BuchiCegarLoop]: Abstraction has 235 states and 271 transitions.
[2020-11-24 14:46:52,009 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-24 14:46:52,009 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 235 states and 271 transitions.
[2020-11-24 14:46:52,010 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 14:46:52,010 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 14:46:52,010 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 14:46:52,011 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 14:46:52,011 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L2]                 success_transfer_ERC200 := false;
[L2]                 call_transfer_ERC200 := false;
[L2]     CALL        call main();
[L3295]              assume null == 0;
[L3296]  CALL        call this := FreshRefGenerator__success();
[L988]               havoc newRef;
[L989]               assume Alloc[newRef] == false;
[L990]               Alloc[newRef] := true;
[L991]               assume newRef != null;
[L3296]  RET         call this := FreshRefGenerator__success();
[L3297]              assume now >= 0;
[L3298]              assume DType[this] == KOCToken;
[L3299]              assume !revert && gas >= 0;
[L3300]  CALL        call CorralChoice_KOCToken(this);
[L3207]              havoc msgsender_MSG;
[L3208]              havoc msgvalue_MSG;
[L3209]              havoc choice;
[L3210]              havoc to_s458;
[L3211]              havoc value_s458;
[L3212]              havoc __ret_0_transfer;
[L3213]              havoc spender_s477;
[L3214]              havoc value_s477;
[L3215]              havoc __ret_0_approve;
[L3216]              havoc from_s512;
[L3217]              havoc to_s512;
[L3218]              havoc value_s512;
[L3219]              havoc __ret_0_transferFrom;
[L3220]              havoc __ret_0_totalSupply;
[L3221]              havoc owner_s423;
[L3222]              havoc __ret_0_balanceOf;
[L3223]              havoc owner_s439;
[L3224]              havoc spender_s439;
[L3225]              havoc __ret_0_allowance;
[L3226]              havoc spender_s539;
[L3227]              havoc addedValue_s539;
[L3228]              havoc __ret_0_increaseAllowance;
[L3229]              havoc spender_s566;
[L3230]              havoc subtractedValue_s566;
[L3231]              havoc __ret_0_decreaseAllowance;
[L3232]              havoc name_s795;
[L3233]              havoc symbol_s795;
[L3234]              havoc decimals_s795;
[L3235]              havoc __ret_0_name;
[L3236]              havoc __ret_0_symbol;
[L3237]              havoc __ret_0_decimals;
[L3238]              havoc value_s912;
[L3239]              havoc from_s925;
[L3240]              havoc value_s925;
[L3241]              havoc tmpNow;
[L3242]              havoc gas;
[L3243]              assume gas > 4000000 && gas <= 8000000;
[L3244]              tmpNow := now;
[L3245]              havoc now;
[L3246]              assume now > tmpNow;
[L3247]              assume msgsender_MSG != null;
[L3248]  COND TRUE   choice == 6
[L3249]              gas := gas - 21000;
[L3250]  COND TRUE   gas >= 0
[L3251]              assume value_s458 >= 0 && value_s458 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3252]              assume msgvalue_MSG == 0;
[L3253]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, to_s458, value_s458);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == to_s458 && value_s458 <= _balances_ERC20[this][msgsender_MSG]) && value_s458 >= 0) && value_s458 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][to_s458] >= 0) && _balances_ERC20[this][to_s458] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_ERC200 := true;
[L2]                 call_transfer_ERC200 := false;
[L2]                 revert := revert_hold;
[L282]               havoc __exception;
[L283]               revert := false;
[L284]   COND FALSE  !(__exception)
[L311]   CALL        call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, to_s458, value_s458);
[L1188]  COND TRUE   DType[this] == KOCToken
[L1189]  CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s458, value_s458);
[L1453]              __var_5 := null;
[L1454]  COND FALSE  !(!(to_s612 != null))
[L1458]  CALL        call __var_6 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][from_s612], value_s612);
[L1019]  COND TRUE   !(b_s82 <= a_s82)
[L1020]              revert := true;
[L1458]  RET         call __var_6 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][from_s612], value_s612);
[L1459]  COND TRUE   revert
[L1189]  RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s458, value_s458);
[L1190]  COND TRUE   revert
[L311]   RET         call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, to_s458, value_s458);
[L312]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !(((((((__ret_0_ == true && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _balances_ERC20[this] == old(_balances_ERC20[this])) && _allowed_ERC20[this] == old(_allowed_ERC20[this])) && amount_KOCToken[this] == old(amount_KOCToken[this])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]));
[L2]                 revert := revert_hold;
[L3253]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, to_s458, value_s458);
[L3300]  RET         call CorralChoice_KOCToken(this);

Loop:
[L3300]        assume true;

[2020-11-24 14:46:52,013 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 14:46:52,013 INFO  L82        PathProgramCache]: Analyzing trace with hash -1327919417, now seen corresponding path program 1 times
[2020-11-24 14:46:52,014 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 14:46:52,020 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 14:46:52,033 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 14:46:52,033 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 14:46:52,033 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-24 14:46:52,033 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 14:46:52,034 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-24 14:46:52,034 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-24 14:46:52,034 INFO  L87              Difference]: Start difference. First operand 235 states and 271 transitions. cyclomatic complexity: 37 Second operand 3 states.
[2020-11-24 14:46:52,043 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 14:46:52,043 INFO  L93              Difference]: Finished difference Result 290 states and 333 transitions.
[2020-11-24 14:46:52,043 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-24 14:46:52,043 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 290 states and 333 transitions.
[2020-11-24 14:46:52,044 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 2
[2020-11-24 14:46:52,045 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 290 states to 264 states and 295 transitions.
[2020-11-24 14:46:52,046 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 264
[2020-11-24 14:46:52,046 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 264
[2020-11-24 14:46:52,046 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 264 states and 295 transitions.
[2020-11-24 14:46:52,046 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 14:46:52,046 INFO  L728         BuchiCegarLoop]: Abstraction has 264 states and 295 transitions.
[2020-11-24 14:46:52,047 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 264 states and 295 transitions.
[2020-11-24 14:46:52,050 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 264 to 253.
[2020-11-24 14:46:52,050 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 253 states.
[2020-11-24 14:46:52,050 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 253 states to 253 states and 284 transitions.
[2020-11-24 14:46:52,051 INFO  L751         BuchiCegarLoop]: Abstraction has 253 states and 284 transitions.
[2020-11-24 14:46:52,051 INFO  L631         BuchiCegarLoop]: Abstraction has 253 states and 284 transitions.
[2020-11-24 14:46:52,051 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-24 14:46:52,051 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 253 states and 284 transitions.
[2020-11-24 14:46:52,051 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 14:46:52,052 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 14:46:52,052 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 14:46:52,052 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 14:46:52,052 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L2]                success_transfer_ERC200 := false;
[L2]                call_transfer_ERC200 := false;
[L2]     CALL       call main();
[L3295]             assume null == 0;
[L3296]  CALL       call this := FreshRefGenerator__success();
[L988]              havoc newRef;
[L989]              assume Alloc[newRef] == false;
[L990]              Alloc[newRef] := true;
[L991]              assume newRef != null;
[L3296]  RET        call this := FreshRefGenerator__success();
[L3297]             assume now >= 0;
[L3298]             assume DType[this] == KOCToken;
[L3299]             assume !revert && gas >= 0;
[L3300]  CALL       call CorralChoice_KOCToken(this);
[L3207]             havoc msgsender_MSG;
[L3208]             havoc msgvalue_MSG;
[L3209]             havoc choice;
[L3210]             havoc to_s458;
[L3211]             havoc value_s458;
[L3212]             havoc __ret_0_transfer;
[L3213]             havoc spender_s477;
[L3214]             havoc value_s477;
[L3215]             havoc __ret_0_approve;
[L3216]             havoc from_s512;
[L3217]             havoc to_s512;
[L3218]             havoc value_s512;
[L3219]             havoc __ret_0_transferFrom;
[L3220]             havoc __ret_0_totalSupply;
[L3221]             havoc owner_s423;
[L3222]             havoc __ret_0_balanceOf;
[L3223]             havoc owner_s439;
[L3224]             havoc spender_s439;
[L3225]             havoc __ret_0_allowance;
[L3226]             havoc spender_s539;
[L3227]             havoc addedValue_s539;
[L3228]             havoc __ret_0_increaseAllowance;
[L3229]             havoc spender_s566;
[L3230]             havoc subtractedValue_s566;
[L3231]             havoc __ret_0_decreaseAllowance;
[L3232]             havoc name_s795;
[L3233]             havoc symbol_s795;
[L3234]             havoc decimals_s795;
[L3235]             havoc __ret_0_name;
[L3236]             havoc __ret_0_symbol;
[L3237]             havoc __ret_0_decimals;
[L3238]             havoc value_s912;
[L3239]             havoc from_s925;
[L3240]             havoc value_s925;
[L3241]             havoc tmpNow;
[L3242]             havoc gas;
[L3243]             assume gas > 4000000 && gas <= 8000000;
[L3244]             tmpNow := now;
[L3245]             havoc now;
[L3246]             assume now > tmpNow;
[L3247]             assume msgsender_MSG != null;
[L3248]  COND TRUE  choice == 6
[L3249]             gas := gas - 21000;
[L3250]  COND TRUE  gas >= 0
[L3251]             assume value_s458 >= 0 && value_s458 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3252]             assume msgvalue_MSG == 0;
[L3253]  CALL       call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, to_s458, value_s458);
[L2]                revert_hold := revert;
[L2]                revert := false;
[L2]                assume ((((((msgsender_MSG == to_s458 && value_s458 <= _balances_ERC20[this][msgsender_MSG]) && value_s458 >= 0) && value_s458 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][to_s458] >= 0) && _balances_ERC20[this][to_s458] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                call_transfer_ERC200 := true;
[L2]                call_transfer_ERC200 := false;
[L2]                revert := revert_hold;
[L282]              havoc __exception;
[L283]              revert := false;
[L284]   COND TRUE  __exception
[L285]              __tmp__Balance := Balance;
[L286]              __tmp__DType := DType;
[L287]              __tmp__Alloc := Alloc;
[L288]              __tmp__balance_ADDR := balance_ADDR;
[L289]              __tmp__M_Ref_bool := M_Ref_bool;
[L290]              __tmp__sum := sum;
[L291]              __tmp__M_Ref_int := M_Ref_int;
[L292]              __tmp__sum__balances0 := sum__balances0;
[L293]              __tmp__alloc__allowed_ERC20_lvl0 := alloc__allowed_ERC20_lvl0;
[L294]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L295]              __tmp__sum__allowed1 := sum__allowed1;
[L296]              __tmp__Length := Length;
[L297]              __tmp__now := now;
[L298]              __tmp__bearer_Roles.Role := bearer_Roles.Role;
[L299]              __tmp___minters_MinterRole := _minters_MinterRole;
[L300]              __tmp___balances_ERC20 := _balances_ERC20;
[L301]              __tmp___allowed_ERC20 := _allowed_ERC20;
[L302]              __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L303]              __tmp___name_ERC20Detailed := _name_ERC20Detailed;
[L304]              __tmp___symbol_ERC20Detailed := _symbol_ERC20Detailed;
[L305]              __tmp___decimals_ERC20Detailed := _decimals_ERC20Detailed;
[L306]              __tmp___cap_ERC20Capped := _cap_ERC20Capped;
[L307]              __tmp__amount_KOCToken := amount_KOCToken;
[L308]   CALL       call __ret_0_ := transfer~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, to_s458, value_s458);
[L1154]  COND TRUE  __tmp__DType[this] == KOCToken
[L1155]  CALL       call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s458, value_s458);
[L1427]             __var_5 := null;
[L1428]  COND TRUE  !(to_s612 != null)
[L1429]             revert := true;
[L1155]  RET        call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s458, value_s458);
[L1156]  COND TRUE  revert
[L308]   RET        call __ret_0_ := transfer~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, to_s458, value_s458);
[L309]              assume revert || gas < 0;
[L3253]  RET        call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, to_s458, value_s458);
[L3300]  RET        call CorralChoice_KOCToken(this);

Loop:
[L3300]        assume true;

[2020-11-24 14:46:52,054 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 14:46:52,054 INFO  L82        PathProgramCache]: Analyzing trace with hash 487408700, now seen corresponding path program 1 times
[2020-11-24 14:46:52,055 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 14:46:52,061 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 14:46:52,078 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 14:46:52,079 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 14:46:52,079 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [7] imperfect sequences [] total 7
[2020-11-24 14:46:52,079 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 14:46:52,080 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 7 interpolants.
[2020-11-24 14:46:52,080 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=11, Invalid=31, Unknown=0, NotChecked=0, Total=42
[2020-11-24 14:46:52,080 INFO  L87              Difference]: Start difference. First operand 253 states and 284 transitions. cyclomatic complexity: 32 Second operand 7 states.
[2020-11-24 14:46:52,105 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 14:46:52,105 INFO  L93              Difference]: Finished difference Result 271 states and 305 transitions.
[2020-11-24 14:46:52,106 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 7 states. 
[2020-11-24 14:46:52,106 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 271 states and 305 transitions.
[2020-11-24 14:46:52,108 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 14:46:52,109 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 271 states to 252 states and 282 transitions.
[2020-11-24 14:46:52,109 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 252
[2020-11-24 14:46:52,110 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 252
[2020-11-24 14:46:52,110 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 252 states and 282 transitions.
[2020-11-24 14:46:52,110 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 14:46:52,110 INFO  L728         BuchiCegarLoop]: Abstraction has 252 states and 282 transitions.
[2020-11-24 14:46:52,111 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 252 states and 282 transitions.
[2020-11-24 14:46:52,113 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 252 to 252.
[2020-11-24 14:46:52,114 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 252 states.
[2020-11-24 14:46:52,114 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 252 states to 252 states and 282 transitions.
[2020-11-24 14:46:52,114 INFO  L751         BuchiCegarLoop]: Abstraction has 252 states and 282 transitions.
[2020-11-24 14:46:52,114 INFO  L631         BuchiCegarLoop]: Abstraction has 252 states and 282 transitions.
[2020-11-24 14:46:52,115 INFO  L445         BuchiCegarLoop]: ======== Iteration 5============
[2020-11-24 14:46:52,115 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 252 states and 282 transitions.
[2020-11-24 14:46:52,116 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 14:46:52,116 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 14:46:52,116 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 14:46:52,117 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 14:46:52,117 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L2]                 success_transfer_ERC200 := false;
[L2]                 call_transfer_ERC200 := false;
[L2]     CALL        call main();
[L3295]              assume null == 0;
[L3296]  CALL        call this := FreshRefGenerator__success();
[L988]               havoc newRef;
[L989]               assume Alloc[newRef] == false;
[L990]               Alloc[newRef] := true;
[L991]               assume newRef != null;
[L3296]  RET         call this := FreshRefGenerator__success();
[L3297]              assume now >= 0;
[L3298]              assume DType[this] == KOCToken;
[L3299]              assume !revert && gas >= 0;
[L3300]  CALL        call CorralChoice_KOCToken(this);
[L3207]              havoc msgsender_MSG;
[L3208]              havoc msgvalue_MSG;
[L3209]              havoc choice;
[L3210]              havoc to_s458;
[L3211]              havoc value_s458;
[L3212]              havoc __ret_0_transfer;
[L3213]              havoc spender_s477;
[L3214]              havoc value_s477;
[L3215]              havoc __ret_0_approve;
[L3216]              havoc from_s512;
[L3217]              havoc to_s512;
[L3218]              havoc value_s512;
[L3219]              havoc __ret_0_transferFrom;
[L3220]              havoc __ret_0_totalSupply;
[L3221]              havoc owner_s423;
[L3222]              havoc __ret_0_balanceOf;
[L3223]              havoc owner_s439;
[L3224]              havoc spender_s439;
[L3225]              havoc __ret_0_allowance;
[L3226]              havoc spender_s539;
[L3227]              havoc addedValue_s539;
[L3228]              havoc __ret_0_increaseAllowance;
[L3229]              havoc spender_s566;
[L3230]              havoc subtractedValue_s566;
[L3231]              havoc __ret_0_decreaseAllowance;
[L3232]              havoc name_s795;
[L3233]              havoc symbol_s795;
[L3234]              havoc decimals_s795;
[L3235]              havoc __ret_0_name;
[L3236]              havoc __ret_0_symbol;
[L3237]              havoc __ret_0_decimals;
[L3238]              havoc value_s912;
[L3239]              havoc from_s925;
[L3240]              havoc value_s925;
[L3241]              havoc tmpNow;
[L3242]              havoc gas;
[L3243]              assume gas > 4000000 && gas <= 8000000;
[L3244]              tmpNow := now;
[L3245]              havoc now;
[L3246]              assume now > tmpNow;
[L3247]              assume msgsender_MSG != null;
[L3248]  COND TRUE   choice == 6
[L3249]              gas := gas - 21000;
[L3250]  COND TRUE   gas >= 0
[L3251]              assume value_s458 >= 0 && value_s458 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3252]              assume msgvalue_MSG == 0;
[L3253]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, to_s458, value_s458);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == to_s458 && value_s458 <= _balances_ERC20[this][msgsender_MSG]) && value_s458 >= 0) && value_s458 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][to_s458] >= 0) && _balances_ERC20[this][to_s458] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_ERC200 := true;
[L2]                 call_transfer_ERC200 := false;
[L2]                 revert := revert_hold;
[L282]               havoc __exception;
[L283]               revert := false;
[L284]   COND FALSE  !(__exception)
[L311]   CALL        call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, to_s458, value_s458);
[L1188]  COND TRUE   DType[this] == KOCToken
[L1189]  CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s458, value_s458);
[L1453]              __var_5 := null;
[L1454]  COND FALSE  !(!(to_s612 != null))
[L1458]  CALL        call __var_6 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][from_s612], value_s612);
[L1019]  COND FALSE  !(!(b_s82 <= a_s82))
[L1023]              c_s82 := (a_s82 - b_s82) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1024]              __ret_0_ := c_s82;
[L1458]  RET         call __var_6 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][from_s612], value_s612);
[L1459]  COND FALSE  !(revert)
[L1462]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][from_s612];
[L1463]              _balances_ERC20[this][from_s612] := __var_6;
[L1464]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][from_s612];
[L1465]  CALL        call __var_7 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][to_s612], value_s612);
[L1043]              c_s106 := (a_s106 + b_s106) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1044]  COND FALSE  !(!(c_s106 >= a_s106))
[L1048]              __ret_0_ := c_s106;
[L1465]  RET         call __var_7 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][to_s612], value_s612);
[L1466]  COND FALSE  !(revert)
[L1469]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][to_s612];
[L1470]              _balances_ERC20[this][to_s612] := __var_7;
[L1471]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][to_s612];
[L1472]              assert { :EventEmitted "Transfer_ERC20" } true;
[L1189]  RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s458, value_s458);
[L1190]  COND FALSE  !(revert)
[L1216]              __ret_0_ := true;
[L311]   RET         call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, to_s458, value_s458);
[L312]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !(((((((__ret_0_ == true && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _balances_ERC20[this] == old(_balances_ERC20[this])) && _allowed_ERC20[this] == old(_allowed_ERC20[this])) && amount_KOCToken[this] == old(amount_KOCToken[this])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]));
[L2]                 revert := revert_hold;
[L3253]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, to_s458, value_s458);
[L3300]  RET         call CorralChoice_KOCToken(this);

Loop:
[L3300]        assume true;

[2020-11-24 14:46:52,119 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 14:46:52,119 INFO  L82        PathProgramCache]: Analyzing trace with hash -1295779973, now seen corresponding path program 1 times
[2020-11-24 14:46:52,121 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 14:46:52,177 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 14:46:52,545 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 14:46:52,546 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 14:46:52,546 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [21] imperfect sequences [] total 21
[2020-11-24 14:46:52,546 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 14:46:52,546 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 21 interpolants.
[2020-11-24 14:46:52,546 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=54, Invalid=366, Unknown=0, NotChecked=0, Total=420
[2020-11-24 14:46:52,547 INFO  L87              Difference]: Start difference. First operand 252 states and 282 transitions. cyclomatic complexity: 31 Second operand 21 states.
[2020-11-24 14:46:53,133 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 14:46:53,134 INFO  L93              Difference]: Finished difference Result 257 states and 286 transitions.
[2020-11-24 14:46:53,134 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 21 states. 
[2020-11-24 14:46:53,134 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 257 states and 286 transitions.
[2020-11-24 14:46:53,149 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 14:46:53,151 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 257 states to 187 states and 208 transitions.
[2020-11-24 14:46:53,151 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 187
[2020-11-24 14:46:53,151 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 187
[2020-11-24 14:46:53,151 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 187 states and 208 transitions.
[2020-11-24 14:46:53,152 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 14:46:53,152 INFO  L728         BuchiCegarLoop]: Abstraction has 187 states and 208 transitions.
[2020-11-24 14:46:53,152 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 187 states and 208 transitions.
[2020-11-24 14:46:53,155 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 187 to 187.
[2020-11-24 14:46:53,155 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 187 states.
[2020-11-24 14:46:53,156 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 187 states to 187 states and 208 transitions.
[2020-11-24 14:46:53,156 INFO  L751         BuchiCegarLoop]: Abstraction has 187 states and 208 transitions.
[2020-11-24 14:46:53,156 INFO  L631         BuchiCegarLoop]: Abstraction has 187 states and 208 transitions.
[2020-11-24 14:46:53,156 INFO  L445         BuchiCegarLoop]: ======== Iteration 6============
[2020-11-24 14:46:53,156 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 187 states and 208 transitions.
[2020-11-24 14:46:53,158 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 14:46:53,158 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 14:46:53,158 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 14:46:53,159 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 14:46:53,159 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L2]                 success_transfer_ERC200 := false;
[L2]                 call_transfer_ERC200 := false;
[L2]     CALL        call main();
[L3295]              assume null == 0;
[L3296]  CALL        call this := FreshRefGenerator__success();
[L988]               havoc newRef;
[L989]               assume Alloc[newRef] == false;
[L990]               Alloc[newRef] := true;
[L991]               assume newRef != null;
[L3296]  RET         call this := FreshRefGenerator__success();
[L3297]              assume now >= 0;
[L3298]              assume DType[this] == KOCToken;
[L3299]              assume !revert && gas >= 0;
[L3300]  CALL        call CorralChoice_KOCToken(this);
[L3207]              havoc msgsender_MSG;
[L3208]              havoc msgvalue_MSG;
[L3209]              havoc choice;
[L3210]              havoc to_s458;
[L3211]              havoc value_s458;
[L3212]              havoc __ret_0_transfer;
[L3213]              havoc spender_s477;
[L3214]              havoc value_s477;
[L3215]              havoc __ret_0_approve;
[L3216]              havoc from_s512;
[L3217]              havoc to_s512;
[L3218]              havoc value_s512;
[L3219]              havoc __ret_0_transferFrom;
[L3220]              havoc __ret_0_totalSupply;
[L3221]              havoc owner_s423;
[L3222]              havoc __ret_0_balanceOf;
[L3223]              havoc owner_s439;
[L3224]              havoc spender_s439;
[L3225]              havoc __ret_0_allowance;
[L3226]              havoc spender_s539;
[L3227]              havoc addedValue_s539;
[L3228]              havoc __ret_0_increaseAllowance;
[L3229]              havoc spender_s566;
[L3230]              havoc subtractedValue_s566;
[L3231]              havoc __ret_0_decreaseAllowance;
[L3232]              havoc name_s795;
[L3233]              havoc symbol_s795;
[L3234]              havoc decimals_s795;
[L3235]              havoc __ret_0_name;
[L3236]              havoc __ret_0_symbol;
[L3237]              havoc __ret_0_decimals;
[L3238]              havoc value_s912;
[L3239]              havoc from_s925;
[L3240]              havoc value_s925;
[L3241]              havoc tmpNow;
[L3242]              havoc gas;
[L3243]              assume gas > 4000000 && gas <= 8000000;
[L3244]              tmpNow := now;
[L3245]              havoc now;
[L3246]              assume now > tmpNow;
[L3247]              assume msgsender_MSG != null;
[L3248]  COND TRUE   choice == 6
[L3249]              gas := gas - 21000;
[L3250]  COND TRUE   gas >= 0
[L3251]              assume value_s458 >= 0 && value_s458 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3252]              assume msgvalue_MSG == 0;
[L3253]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, to_s458, value_s458);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == to_s458 && value_s458 <= _balances_ERC20[this][msgsender_MSG]) && value_s458 >= 0) && value_s458 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][to_s458] >= 0) && _balances_ERC20[this][to_s458] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_ERC200 := true;
[L2]                 call_transfer_ERC200 := false;
[L2]                 revert := revert_hold;
[L282]               havoc __exception;
[L283]               revert := false;
[L284]   COND TRUE   __exception
[L285]               __tmp__Balance := Balance;
[L286]               __tmp__DType := DType;
[L287]               __tmp__Alloc := Alloc;
[L288]               __tmp__balance_ADDR := balance_ADDR;
[L289]               __tmp__M_Ref_bool := M_Ref_bool;
[L290]               __tmp__sum := sum;
[L291]               __tmp__M_Ref_int := M_Ref_int;
[L292]               __tmp__sum__balances0 := sum__balances0;
[L293]               __tmp__alloc__allowed_ERC20_lvl0 := alloc__allowed_ERC20_lvl0;
[L294]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L295]               __tmp__sum__allowed1 := sum__allowed1;
[L296]               __tmp__Length := Length;
[L297]               __tmp__now := now;
[L298]               __tmp__bearer_Roles.Role := bearer_Roles.Role;
[L299]               __tmp___minters_MinterRole := _minters_MinterRole;
[L300]               __tmp___balances_ERC20 := _balances_ERC20;
[L301]               __tmp___allowed_ERC20 := _allowed_ERC20;
[L302]               __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L303]               __tmp___name_ERC20Detailed := _name_ERC20Detailed;
[L304]               __tmp___symbol_ERC20Detailed := _symbol_ERC20Detailed;
[L305]               __tmp___decimals_ERC20Detailed := _decimals_ERC20Detailed;
[L306]               __tmp___cap_ERC20Capped := _cap_ERC20Capped;
[L307]               __tmp__amount_KOCToken := amount_KOCToken;
[L308]   CALL        call __ret_0_ := transfer~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, to_s458, value_s458);
[L1154]  COND TRUE   __tmp__DType[this] == KOCToken
[L1155]  CALL        call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s458, value_s458);
[L1427]              __var_5 := null;
[L1428]  COND FALSE  !(!(to_s612 != null))
[L1432]  CALL        call __var_6 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __tmp___balances_ERC20[this][from_s612], value_s612);
[L1007]  COND TRUE   !(b_s82 <= a_s82)
[L1008]              revert := true;
[L1432]  RET         call __var_6 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __tmp___balances_ERC20[this][from_s612], value_s612);
[L1433]  COND TRUE   revert
[L1155]  RET         call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s458, value_s458);
[L1156]  COND TRUE   revert
[L308]   RET         call __ret_0_ := transfer~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, to_s458, value_s458);
[L309]               assume revert || gas < 0;
[L3253]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, to_s458, value_s458);
[L3300]  RET         call CorralChoice_KOCToken(this);

Loop:
[L3300]        assume true;

[2020-11-24 14:46:53,162 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 14:46:53,162 INFO  L82        PathProgramCache]: Analyzing trace with hash 1916850146, now seen corresponding path program 1 times
[2020-11-24 14:46:53,163 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 14:46:53,167 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 14:46:53,206 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 14:46:53,206 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 14:46:53,207 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [8] imperfect sequences [] total 8
[2020-11-24 14:46:53,207 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 14:46:53,207 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 8 interpolants.
[2020-11-24 14:46:53,207 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=13, Invalid=43, Unknown=0, NotChecked=0, Total=56
[2020-11-24 14:46:53,207 INFO  L87              Difference]: Start difference. First operand 187 states and 208 transitions. cyclomatic complexity: 22 Second operand 8 states.
[2020-11-24 14:46:53,263 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 14:46:53,264 INFO  L93              Difference]: Finished difference Result 219 states and 247 transitions.
[2020-11-24 14:46:53,264 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 9 states. 
[2020-11-24 14:46:53,264 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 219 states and 247 transitions.
[2020-11-24 14:46:53,265 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 14:46:53,266 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 219 states to 200 states and 224 transitions.
[2020-11-24 14:46:53,266 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 200
[2020-11-24 14:46:53,267 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 200
[2020-11-24 14:46:53,267 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 200 states and 224 transitions.
[2020-11-24 14:46:53,267 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 14:46:53,267 INFO  L728         BuchiCegarLoop]: Abstraction has 200 states and 224 transitions.
[2020-11-24 14:46:53,267 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 200 states and 224 transitions.
[2020-11-24 14:46:53,270 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 200 to 182.
[2020-11-24 14:46:53,270 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 182 states.
[2020-11-24 14:46:53,271 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 182 states to 182 states and 202 transitions.
[2020-11-24 14:46:53,271 INFO  L751         BuchiCegarLoop]: Abstraction has 182 states and 202 transitions.
[2020-11-24 14:46:53,271 INFO  L631         BuchiCegarLoop]: Abstraction has 182 states and 202 transitions.
[2020-11-24 14:46:53,271 INFO  L445         BuchiCegarLoop]: ======== Iteration 7============
[2020-11-24 14:46:53,271 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 182 states and 202 transitions.
[2020-11-24 14:46:53,272 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 14:46:53,272 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 14:46:53,272 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 14:46:53,273 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 14:46:53,273 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L2]                 success_transfer_ERC200 := false;
[L2]                 call_transfer_ERC200 := false;
[L2]     CALL        call main();
[L3295]              assume null == 0;
[L3296]  CALL        call this := FreshRefGenerator__success();
[L988]               havoc newRef;
[L989]               assume Alloc[newRef] == false;
[L990]               Alloc[newRef] := true;
[L991]               assume newRef != null;
[L3296]  RET         call this := FreshRefGenerator__success();
[L3297]              assume now >= 0;
[L3298]              assume DType[this] == KOCToken;
[L3299]              assume !revert && gas >= 0;
[L3300]  CALL        call CorralChoice_KOCToken(this);
[L3207]              havoc msgsender_MSG;
[L3208]              havoc msgvalue_MSG;
[L3209]              havoc choice;
[L3210]              havoc to_s458;
[L3211]              havoc value_s458;
[L3212]              havoc __ret_0_transfer;
[L3213]              havoc spender_s477;
[L3214]              havoc value_s477;
[L3215]              havoc __ret_0_approve;
[L3216]              havoc from_s512;
[L3217]              havoc to_s512;
[L3218]              havoc value_s512;
[L3219]              havoc __ret_0_transferFrom;
[L3220]              havoc __ret_0_totalSupply;
[L3221]              havoc owner_s423;
[L3222]              havoc __ret_0_balanceOf;
[L3223]              havoc owner_s439;
[L3224]              havoc spender_s439;
[L3225]              havoc __ret_0_allowance;
[L3226]              havoc spender_s539;
[L3227]              havoc addedValue_s539;
[L3228]              havoc __ret_0_increaseAllowance;
[L3229]              havoc spender_s566;
[L3230]              havoc subtractedValue_s566;
[L3231]              havoc __ret_0_decreaseAllowance;
[L3232]              havoc name_s795;
[L3233]              havoc symbol_s795;
[L3234]              havoc decimals_s795;
[L3235]              havoc __ret_0_name;
[L3236]              havoc __ret_0_symbol;
[L3237]              havoc __ret_0_decimals;
[L3238]              havoc value_s912;
[L3239]              havoc from_s925;
[L3240]              havoc value_s925;
[L3241]              havoc tmpNow;
[L3242]              havoc gas;
[L3243]              assume gas > 4000000 && gas <= 8000000;
[L3244]              tmpNow := now;
[L3245]              havoc now;
[L3246]              assume now > tmpNow;
[L3247]              assume msgsender_MSG != null;
[L3248]  COND TRUE   choice == 6
[L3249]              gas := gas - 21000;
[L3250]  COND TRUE   gas >= 0
[L3251]              assume value_s458 >= 0 && value_s458 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3252]              assume msgvalue_MSG == 0;
[L3253]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, to_s458, value_s458);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == to_s458 && value_s458 <= _balances_ERC20[this][msgsender_MSG]) && value_s458 >= 0) && value_s458 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][to_s458] >= 0) && _balances_ERC20[this][to_s458] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_ERC200 := true;
[L2]                 call_transfer_ERC200 := false;
[L2]                 revert := revert_hold;
[L282]               havoc __exception;
[L283]               revert := false;
[L284]   COND TRUE   __exception
[L285]               __tmp__Balance := Balance;
[L286]               __tmp__DType := DType;
[L287]               __tmp__Alloc := Alloc;
[L288]               __tmp__balance_ADDR := balance_ADDR;
[L289]               __tmp__M_Ref_bool := M_Ref_bool;
[L290]               __tmp__sum := sum;
[L291]               __tmp__M_Ref_int := M_Ref_int;
[L292]               __tmp__sum__balances0 := sum__balances0;
[L293]               __tmp__alloc__allowed_ERC20_lvl0 := alloc__allowed_ERC20_lvl0;
[L294]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L295]               __tmp__sum__allowed1 := sum__allowed1;
[L296]               __tmp__Length := Length;
[L297]               __tmp__now := now;
[L298]               __tmp__bearer_Roles.Role := bearer_Roles.Role;
[L299]               __tmp___minters_MinterRole := _minters_MinterRole;
[L300]               __tmp___balances_ERC20 := _balances_ERC20;
[L301]               __tmp___allowed_ERC20 := _allowed_ERC20;
[L302]               __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L303]               __tmp___name_ERC20Detailed := _name_ERC20Detailed;
[L304]               __tmp___symbol_ERC20Detailed := _symbol_ERC20Detailed;
[L305]               __tmp___decimals_ERC20Detailed := _decimals_ERC20Detailed;
[L306]               __tmp___cap_ERC20Capped := _cap_ERC20Capped;
[L307]               __tmp__amount_KOCToken := amount_KOCToken;
[L308]   CALL        call __ret_0_ := transfer~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, to_s458, value_s458);
[L1154]  COND TRUE   __tmp__DType[this] == KOCToken
[L1155]  CALL        call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s458, value_s458);
[L1427]              __var_5 := null;
[L1428]  COND FALSE  !(!(to_s612 != null))
[L1432]  CALL        call __var_6 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __tmp___balances_ERC20[this][from_s612], value_s612);
[L1007]  COND FALSE  !(!(b_s82 <= a_s82))
[L1011]              c_s82 := (a_s82 - b_s82) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1012]              __ret_0_ := c_s82;
[L1432]  RET         call __var_6 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __tmp___balances_ERC20[this][from_s612], value_s612);
[L1433]  COND TRUE   revert
[L1155]  RET         call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s458, value_s458);
[L1156]  COND TRUE   revert
[L308]   RET         call __ret_0_ := transfer~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, to_s458, value_s458);
[L309]               assume revert || gas < 0;
[L3253]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, to_s458, value_s458);
[L3300]  RET         call CorralChoice_KOCToken(this);

Loop:
[L3300]        assume true;

[2020-11-24 14:46:53,275 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 14:46:53,275 INFO  L82        PathProgramCache]: Analyzing trace with hash 1511156174, now seen corresponding path program 1 times
[2020-11-24 14:46:53,276 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 14:46:53,282 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 14:46:53,303 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 14:46:53,303 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 14:46:53,303 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [5] imperfect sequences [] total 5
[2020-11-24 14:46:53,304 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 14:46:53,304 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 5 interpolants.
[2020-11-24 14:46:53,304 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=9, Invalid=11, Unknown=0, NotChecked=0, Total=20
[2020-11-24 14:46:53,304 INFO  L87              Difference]: Start difference. First operand 182 states and 202 transitions. cyclomatic complexity: 21 Second operand 5 states.
[2020-11-24 14:46:53,322 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 14:46:53,322 INFO  L93              Difference]: Finished difference Result 193 states and 206 transitions.
[2020-11-24 14:46:53,323 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-24 14:46:53,323 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 193 states and 206 transitions.
[2020-11-24 14:46:53,324 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 2
[2020-11-24 14:46:53,325 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 193 states to 193 states and 206 transitions.
[2020-11-24 14:46:53,325 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 193
[2020-11-24 14:46:53,325 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 193
[2020-11-24 14:46:53,325 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 193 states and 206 transitions.
[2020-11-24 14:46:53,326 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 14:46:53,326 INFO  L728         BuchiCegarLoop]: Abstraction has 193 states and 206 transitions.
[2020-11-24 14:46:53,326 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 193 states and 206 transitions.
[2020-11-24 14:46:53,328 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 193 to 182.
[2020-11-24 14:46:53,328 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 182 states.
[2020-11-24 14:46:53,328 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 182 states to 182 states and 195 transitions.
[2020-11-24 14:46:53,329 INFO  L751         BuchiCegarLoop]: Abstraction has 182 states and 195 transitions.
[2020-11-24 14:46:53,329 INFO  L631         BuchiCegarLoop]: Abstraction has 182 states and 195 transitions.
[2020-11-24 14:46:53,329 INFO  L445         BuchiCegarLoop]: ======== Iteration 8============
[2020-11-24 14:46:53,329 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 182 states and 195 transitions.
[2020-11-24 14:46:53,329 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 14:46:53,330 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 14:46:53,330 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 14:46:53,330 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 14:46:53,330 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L2]                 success_transfer_ERC200 := false;
[L2]                 call_transfer_ERC200 := false;
[L2]     CALL        call main();
[L3295]              assume null == 0;
[L3296]  CALL        call this := FreshRefGenerator__success();
[L988]               havoc newRef;
[L989]               assume Alloc[newRef] == false;
[L990]               Alloc[newRef] := true;
[L991]               assume newRef != null;
[L3296]  RET         call this := FreshRefGenerator__success();
[L3297]              assume now >= 0;
[L3298]              assume DType[this] == KOCToken;
[L3299]              assume !revert && gas >= 0;
[L3300]  CALL        call CorralChoice_KOCToken(this);
[L3207]              havoc msgsender_MSG;
[L3208]              havoc msgvalue_MSG;
[L3209]              havoc choice;
[L3210]              havoc to_s458;
[L3211]              havoc value_s458;
[L3212]              havoc __ret_0_transfer;
[L3213]              havoc spender_s477;
[L3214]              havoc value_s477;
[L3215]              havoc __ret_0_approve;
[L3216]              havoc from_s512;
[L3217]              havoc to_s512;
[L3218]              havoc value_s512;
[L3219]              havoc __ret_0_transferFrom;
[L3220]              havoc __ret_0_totalSupply;
[L3221]              havoc owner_s423;
[L3222]              havoc __ret_0_balanceOf;
[L3223]              havoc owner_s439;
[L3224]              havoc spender_s439;
[L3225]              havoc __ret_0_allowance;
[L3226]              havoc spender_s539;
[L3227]              havoc addedValue_s539;
[L3228]              havoc __ret_0_increaseAllowance;
[L3229]              havoc spender_s566;
[L3230]              havoc subtractedValue_s566;
[L3231]              havoc __ret_0_decreaseAllowance;
[L3232]              havoc name_s795;
[L3233]              havoc symbol_s795;
[L3234]              havoc decimals_s795;
[L3235]              havoc __ret_0_name;
[L3236]              havoc __ret_0_symbol;
[L3237]              havoc __ret_0_decimals;
[L3238]              havoc value_s912;
[L3239]              havoc from_s925;
[L3240]              havoc value_s925;
[L3241]              havoc tmpNow;
[L3242]              havoc gas;
[L3243]              assume gas > 4000000 && gas <= 8000000;
[L3244]              tmpNow := now;
[L3245]              havoc now;
[L3246]              assume now > tmpNow;
[L3247]              assume msgsender_MSG != null;
[L3248]  COND TRUE   choice == 6
[L3249]              gas := gas - 21000;
[L3250]  COND TRUE   gas >= 0
[L3251]              assume value_s458 >= 0 && value_s458 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3252]              assume msgvalue_MSG == 0;
[L3253]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, to_s458, value_s458);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == to_s458 && value_s458 <= _balances_ERC20[this][msgsender_MSG]) && value_s458 >= 0) && value_s458 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][to_s458] >= 0) && _balances_ERC20[this][to_s458] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_ERC200 := true;
[L2]                 call_transfer_ERC200 := false;
[L2]                 revert := revert_hold;
[L282]               havoc __exception;
[L283]               revert := false;
[L284]   COND TRUE   __exception
[L285]               __tmp__Balance := Balance;
[L286]               __tmp__DType := DType;
[L287]               __tmp__Alloc := Alloc;
[L288]               __tmp__balance_ADDR := balance_ADDR;
[L289]               __tmp__M_Ref_bool := M_Ref_bool;
[L290]               __tmp__sum := sum;
[L291]               __tmp__M_Ref_int := M_Ref_int;
[L292]               __tmp__sum__balances0 := sum__balances0;
[L293]               __tmp__alloc__allowed_ERC20_lvl0 := alloc__allowed_ERC20_lvl0;
[L294]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L295]               __tmp__sum__allowed1 := sum__allowed1;
[L296]               __tmp__Length := Length;
[L297]               __tmp__now := now;
[L298]               __tmp__bearer_Roles.Role := bearer_Roles.Role;
[L299]               __tmp___minters_MinterRole := _minters_MinterRole;
[L300]               __tmp___balances_ERC20 := _balances_ERC20;
[L301]               __tmp___allowed_ERC20 := _allowed_ERC20;
[L302]               __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L303]               __tmp___name_ERC20Detailed := _name_ERC20Detailed;
[L304]               __tmp___symbol_ERC20Detailed := _symbol_ERC20Detailed;
[L305]               __tmp___decimals_ERC20Detailed := _decimals_ERC20Detailed;
[L306]               __tmp___cap_ERC20Capped := _cap_ERC20Capped;
[L307]               __tmp__amount_KOCToken := amount_KOCToken;
[L308]   CALL        call __ret_0_ := transfer~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, to_s458, value_s458);
[L1154]  COND TRUE   __tmp__DType[this] == KOCToken
[L1155]  CALL        call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s458, value_s458);
[L1427]              __var_5 := null;
[L1428]  COND FALSE  !(!(to_s612 != null))
[L1432]  CALL        call __var_6 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __tmp___balances_ERC20[this][from_s612], value_s612);
[L1007]  COND FALSE  !(!(b_s82 <= a_s82))
[L1011]              c_s82 := (a_s82 - b_s82) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1012]              __ret_0_ := c_s82;
[L1432]  RET         call __var_6 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __tmp___balances_ERC20[this][from_s612], value_s612);
[L1433]  COND FALSE  !(revert)
[L1436]              __tmp__sum__balances0[this] := __tmp__sum__balances0[this] - __tmp___balances_ERC20[this][from_s612];
[L1437]              __tmp___balances_ERC20[this][from_s612] := __var_6;
[L1438]              __tmp__sum__balances0[this] := __tmp__sum__balances0[this] + __tmp___balances_ERC20[this][from_s612];
[L1439]  CALL        call __var_7 := add~uint256~uint256_SafeMath__fail(this, this, 0, __tmp___balances_ERC20[this][to_s612], value_s612);
[L1031]              c_s106 := (a_s106 + b_s106) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1032]  COND TRUE   !(c_s106 >= a_s106)
[L1033]              revert := true;
[L1439]  RET         call __var_7 := add~uint256~uint256_SafeMath__fail(this, this, 0, __tmp___balances_ERC20[this][to_s612], value_s612);
[L1440]  COND TRUE   revert
[L1155]  RET         call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s458, value_s458);
[L1156]  COND TRUE   revert
[L308]   RET         call __ret_0_ := transfer~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, to_s458, value_s458);
[L309]               assume revert || gas < 0;
[L3253]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, to_s458, value_s458);
[L3300]  RET         call CorralChoice_KOCToken(this);

Loop:
[L3300]        assume true;

[2020-11-24 14:46:53,332 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 14:46:53,332 INFO  L82        PathProgramCache]: Analyzing trace with hash -1026083669, now seen corresponding path program 1 times
[2020-11-24 14:46:53,333 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 14:46:53,342 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 14:46:53,428 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 14:46:53,428 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 14:46:53,429 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [16] imperfect sequences [] total 16
[2020-11-24 14:46:53,429 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 14:46:53,429 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 16 interpolants.
[2020-11-24 14:46:53,429 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=32, Invalid=208, Unknown=0, NotChecked=0, Total=240
[2020-11-24 14:46:53,429 INFO  L87              Difference]: Start difference. First operand 182 states and 195 transitions. cyclomatic complexity: 14 Second operand 16 states.
[2020-11-24 14:46:53,562 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 14:46:53,562 INFO  L93              Difference]: Finished difference Result 188 states and 200 transitions.
[2020-11-24 14:46:53,562 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 18 states. 
[2020-11-24 14:46:53,562 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 188 states and 200 transitions.
[2020-11-24 14:46:53,563 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 14:46:53,564 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 188 states to 165 states and 173 transitions.
[2020-11-24 14:46:53,564 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 165
[2020-11-24 14:46:53,564 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 165
[2020-11-24 14:46:53,565 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 165 states and 173 transitions.
[2020-11-24 14:46:53,565 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 14:46:53,565 INFO  L728         BuchiCegarLoop]: Abstraction has 165 states and 173 transitions.
[2020-11-24 14:46:53,565 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 165 states and 173 transitions.
[2020-11-24 14:46:53,567 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 165 to 165.
[2020-11-24 14:46:53,567 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 165 states.
[2020-11-24 14:46:53,567 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 165 states to 165 states and 173 transitions.
[2020-11-24 14:46:53,567 INFO  L751         BuchiCegarLoop]: Abstraction has 165 states and 173 transitions.
[2020-11-24 14:46:53,567 INFO  L631         BuchiCegarLoop]: Abstraction has 165 states and 173 transitions.
[2020-11-24 14:46:53,567 INFO  L445         BuchiCegarLoop]: ======== Iteration 9============
[2020-11-24 14:46:53,567 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 165 states and 173 transitions.
[2020-11-24 14:46:53,568 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 1
[2020-11-24 14:46:53,568 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 14:46:53,568 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 14:46:53,569 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 14:46:53,569 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1]
Stem:
[L2]                 success_transfer_ERC200 := false;
[L2]                 call_transfer_ERC200 := false;
[L2]     CALL        call main();
[L3295]              assume null == 0;
[L3296]  CALL        call this := FreshRefGenerator__success();
[L988]               havoc newRef;
[L989]               assume Alloc[newRef] == false;
[L990]               Alloc[newRef] := true;
[L991]               assume newRef != null;
[L3296]  RET         call this := FreshRefGenerator__success();
[L3297]              assume now >= 0;
[L3298]              assume DType[this] == KOCToken;
[L3299]              assume !revert && gas >= 0;
[L3300]  CALL        call CorralChoice_KOCToken(this);
[L3207]              havoc msgsender_MSG;
[L3208]              havoc msgvalue_MSG;
[L3209]              havoc choice;
[L3210]              havoc to_s458;
[L3211]              havoc value_s458;
[L3212]              havoc __ret_0_transfer;
[L3213]              havoc spender_s477;
[L3214]              havoc value_s477;
[L3215]              havoc __ret_0_approve;
[L3216]              havoc from_s512;
[L3217]              havoc to_s512;
[L3218]              havoc value_s512;
[L3219]              havoc __ret_0_transferFrom;
[L3220]              havoc __ret_0_totalSupply;
[L3221]              havoc owner_s423;
[L3222]              havoc __ret_0_balanceOf;
[L3223]              havoc owner_s439;
[L3224]              havoc spender_s439;
[L3225]              havoc __ret_0_allowance;
[L3226]              havoc spender_s539;
[L3227]              havoc addedValue_s539;
[L3228]              havoc __ret_0_increaseAllowance;
[L3229]              havoc spender_s566;
[L3230]              havoc subtractedValue_s566;
[L3231]              havoc __ret_0_decreaseAllowance;
[L3232]              havoc name_s795;
[L3233]              havoc symbol_s795;
[L3234]              havoc decimals_s795;
[L3235]              havoc __ret_0_name;
[L3236]              havoc __ret_0_symbol;
[L3237]              havoc __ret_0_decimals;
[L3238]              havoc value_s912;
[L3239]              havoc from_s925;
[L3240]              havoc value_s925;
[L3241]              havoc tmpNow;
[L3242]              havoc gas;
[L3243]              assume gas > 4000000 && gas <= 8000000;
[L3244]              tmpNow := now;
[L3245]              havoc now;
[L3246]              assume now > tmpNow;
[L3247]              assume msgsender_MSG != null;
[L3248]  COND TRUE   choice == 6
[L3249]              gas := gas - 21000;
[L3250]  COND TRUE   gas >= 0
[L3251]              assume value_s458 >= 0 && value_s458 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3252]              assume msgvalue_MSG == 0;
[L3253]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, to_s458, value_s458);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == to_s458 && value_s458 <= _balances_ERC20[this][msgsender_MSG]) && value_s458 >= 0) && value_s458 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][to_s458] >= 0) && _balances_ERC20[this][to_s458] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_ERC200 := true;
[L2]                 call_transfer_ERC200 := false;
[L2]                 revert := revert_hold;
[L282]               havoc __exception;
[L283]               revert := false;
[L284]   COND TRUE   __exception
[L285]               __tmp__Balance := Balance;
[L286]               __tmp__DType := DType;
[L287]               __tmp__Alloc := Alloc;
[L288]               __tmp__balance_ADDR := balance_ADDR;
[L289]               __tmp__M_Ref_bool := M_Ref_bool;
[L290]               __tmp__sum := sum;
[L291]               __tmp__M_Ref_int := M_Ref_int;
[L292]               __tmp__sum__balances0 := sum__balances0;
[L293]               __tmp__alloc__allowed_ERC20_lvl0 := alloc__allowed_ERC20_lvl0;
[L294]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L295]               __tmp__sum__allowed1 := sum__allowed1;
[L296]               __tmp__Length := Length;
[L297]               __tmp__now := now;
[L298]               __tmp__bearer_Roles.Role := bearer_Roles.Role;
[L299]               __tmp___minters_MinterRole := _minters_MinterRole;
[L300]               __tmp___balances_ERC20 := _balances_ERC20;
[L301]               __tmp___allowed_ERC20 := _allowed_ERC20;
[L302]               __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L303]               __tmp___name_ERC20Detailed := _name_ERC20Detailed;
[L304]               __tmp___symbol_ERC20Detailed := _symbol_ERC20Detailed;
[L305]               __tmp___decimals_ERC20Detailed := _decimals_ERC20Detailed;
[L306]               __tmp___cap_ERC20Capped := _cap_ERC20Capped;
[L307]               __tmp__amount_KOCToken := amount_KOCToken;
[L308]   CALL        call __ret_0_ := transfer~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, to_s458, value_s458);
[L1154]  COND TRUE   __tmp__DType[this] == KOCToken
[L1155]  CALL        call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s458, value_s458);
[L1427]              __var_5 := null;
[L1428]  COND FALSE  !(!(to_s612 != null))
[L1432]  CALL        call __var_6 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __tmp___balances_ERC20[this][from_s612], value_s612);
[L1007]  COND FALSE  !(!(b_s82 <= a_s82))
[L1011]              c_s82 := (a_s82 - b_s82) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1012]              __ret_0_ := c_s82;
[L1432]  RET         call __var_6 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __tmp___balances_ERC20[this][from_s612], value_s612);
[L1433]  COND FALSE  !(revert)
[L1436]              __tmp__sum__balances0[this] := __tmp__sum__balances0[this] - __tmp___balances_ERC20[this][from_s612];
[L1437]              __tmp___balances_ERC20[this][from_s612] := __var_6;
[L1438]              __tmp__sum__balances0[this] := __tmp__sum__balances0[this] + __tmp___balances_ERC20[this][from_s612];
[L1439]  CALL        call __var_7 := add~uint256~uint256_SafeMath__fail(this, this, 0, __tmp___balances_ERC20[this][to_s612], value_s612);
[L1031]              c_s106 := (a_s106 + b_s106) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1032]  COND FALSE  !(!(c_s106 >= a_s106))
[L1036]              __ret_0_ := c_s106;
[L1439]  RET         call __var_7 := add~uint256~uint256_SafeMath__fail(this, this, 0, __tmp___balances_ERC20[this][to_s612], value_s612);
[L1440]  COND FALSE  !(revert)
[L1443]              __tmp__sum__balances0[this] := __tmp__sum__balances0[this] - __tmp___balances_ERC20[this][to_s612];
[L1444]              __tmp___balances_ERC20[this][to_s612] := __var_7;
[L1445]              __tmp__sum__balances0[this] := __tmp__sum__balances0[this] + __tmp___balances_ERC20[this][to_s612];
[L1155]  RET         call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s458, value_s458);
[L1156]  COND FALSE  !(revert)
[L1182]              __ret_0_ := true;
[L308]   RET         call __ret_0_ := transfer~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, to_s458, value_s458);
[L309]               assume revert || gas < 0;
[L3253]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, to_s458, value_s458);
[L3300]  RET         call CorralChoice_KOCToken(this);

Loop:
[L3300]        assume true;

[2020-11-24 14:46:53,571 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 14:46:53,571 INFO  L82        PathProgramCache]: Analyzing trace with hash 128508701, now seen corresponding path program 1 times
[2020-11-24 14:46:53,572 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 14:46:53,579 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 14:46:53,599 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 14:46:53,600 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 14:46:53,600 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [5] imperfect sequences [] total 5
[2020-11-24 14:46:53,600 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 14:46:53,600 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 5 interpolants.
[2020-11-24 14:46:53,600 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=7, Invalid=13, Unknown=0, NotChecked=0, Total=20
[2020-11-24 14:46:53,600 INFO  L87              Difference]: Start difference. First operand 165 states and 173 transitions. cyclomatic complexity: 9 Second operand 5 states.
[2020-11-24 14:46:53,617 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 14:46:53,617 INFO  L93              Difference]: Finished difference Result 158 states and 165 transitions.
[2020-11-24 14:46:53,617 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 5 states. 
[2020-11-24 14:46:53,617 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 158 states and 165 transitions.
[2020-11-24 14:46:53,618 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-24 14:46:53,618 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 158 states to 0 states and 0 transitions.
[2020-11-24 14:46:53,618 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 0
[2020-11-24 14:46:53,618 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 0
[2020-11-24 14:46:53,618 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 0 states and 0 transitions.
[2020-11-24 14:46:53,618 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 14:46:53,618 INFO  L728         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-24 14:46:53,618 INFO  L751         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-24 14:46:53,618 INFO  L631         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-24 14:46:53,619 INFO  L445         BuchiCegarLoop]: ======== Iteration 10============
[2020-11-24 14:46:53,619 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 0 states and 0 transitions.
[2020-11-24 14:46:53,619 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-24 14:46:53,619 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is true
[2020-11-24 14:46:53,623 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 24.11 02:46:53 BasicIcfg
[2020-11-24 14:46:53,623 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-24 14:46:53,623 INFO  L168              Benchmark]: Toolchain (without parser) took 4564.28 ms. Allocated memory was 1.0 GB in the beginning and 1.4 GB in the end (delta: 326.6 MB). Free memory was 940.6 MB in the beginning and 1.0 GB in the end (delta: -66.0 MB). Peak memory consumption was 260.7 MB. Max. memory is 15.3 GB.
[2020-11-24 14:46:53,625 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.15 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-24 14:46:53,625 INFO  L168              Benchmark]: Boogie Preprocessor took 83.89 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 929.8 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
[2020-11-24 14:46:53,625 INFO  L168              Benchmark]: UtopiaSpecLang took 54.01 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 924.5 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-24 14:46:53,626 INFO  L168              Benchmark]: Boogie Printer took 12.97 ms. Allocated memory is still 1.0 GB. Free memory is still 924.5 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-24 14:46:53,626 INFO  L168              Benchmark]: RCFGBuilder took 720.66 ms. Allocated memory is still 1.0 GB. Free memory was 924.5 MB in the beginning and 811.7 MB in the end (delta: 112.7 MB). Peak memory consumption was 112.7 MB. Max. memory is 15.3 GB.
[2020-11-24 14:46:53,627 INFO  L168              Benchmark]: UtopiaLTL2Aut took 39.77 ms. Allocated memory is still 1.0 GB. Free memory was 811.7 MB in the beginning and 808.1 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
[2020-11-24 14:46:53,627 INFO  L168              Benchmark]: BÃ¼chi Program Product took 1347.38 ms. Allocated memory was 1.0 GB in the beginning and 1.2 GB in the end (delta: 185.1 MB). Free memory was 808.1 MB in the beginning and 1.1 GB in the end (delta: -250.4 MB). Peak memory consumption was 180.9 MB. Max. memory is 15.3 GB.
[2020-11-24 14:46:53,627 INFO  L168              Benchmark]: BlockEncodingV2 took 96.49 ms. Allocated memory is still 1.2 GB. Free memory was 1.1 GB in the beginning and 994.9 MB in the end (delta: 63.7 MB). Peak memory consumption was 63.7 MB. Max. memory is 15.3 GB.
[2020-11-24 14:46:53,628 INFO  L168              Benchmark]: BuchiAutomizer took 2205.79 ms. Allocated memory was 1.2 GB in the beginning and 1.4 GB in the end (delta: 141.6 MB). Free memory was 994.9 MB in the beginning and 1.0 GB in the end (delta: -11.7 MB). Peak memory consumption was 129.9 MB. Max. memory is 15.3 GB.
[2020-11-24 14:46:53,631 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    2716 locations, 5085 edges
  - StatisticsResult: Encoded RCFG
    2652 locations, 4928 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.15 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 83.89 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 929.8 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 54.01 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 924.5 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 12.97 ms. Allocated memory is still 1.0 GB. Free memory is still 924.5 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * RCFGBuilder took 720.66 ms. Allocated memory is still 1.0 GB. Free memory was 924.5 MB in the beginning and 811.7 MB in the end (delta: 112.7 MB). Peak memory consumption was 112.7 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 39.77 ms. Allocated memory is still 1.0 GB. Free memory was 811.7 MB in the beginning and 808.1 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 1347.38 ms. Allocated memory was 1.0 GB in the beginning and 1.2 GB in the end (delta: 185.1 MB). Free memory was 808.1 MB in the beginning and 1.1 GB in the end (delta: -250.4 MB). Peak memory consumption was 180.9 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 96.49 ms. Allocated memory is still 1.2 GB. Free memory was 1.1 GB in the beginning and 994.9 MB in the end (delta: 63.7 MB). Peak memory consumption was 63.7 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 2205.79 ms. Allocated memory was 1.2 GB in the beginning and 1.4 GB in the end (delta: 141.6 MB). Free memory was 994.9 MB in the beginning and 1.0 GB in the end (delta: -11.7 MB). Peak memory consumption was 129.9 MB. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    1088 locations, 1545 edges
  - StatisticsResult: BuchiProgram size
    2716 locations, 5085 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 9 terminating modules (9 trivial, 0 deterministic, 0 nondeterministic). 9 modules have a trivial ranking function, the largest among these consists of 21 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 2.1s and 10 iterations.  TraceHistogramMax:1. Analysis of lassos took 0.8s. Construction of modules took 0.5s. BÃ¼chi inclusion checks took 0.5s. Highest rank in rank-based complementation 0. Minimization of det autom 9. Minimization of nondet autom 0. Automata minimization 0.0s AutomataMinimizationTime, 8 MinimizatonAttempts, 40 StatesRemovedByMinimization, 3 NontrivialMinimizations. Non-live state removal took 0.0s Buchi closure took 0.0s. Biggest automaton had 253 states and ocurred in iteration 3.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 2703 SDtfs, 2129 SDslu, 6774 SDs, 0 SdLazy, 2283 SolverSat, 788 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 0.5s Time	LassoAnalysisResults: nont0 unkn0 SFLI0 SFLT0 conc0 concLT0 SILN0 SILU9 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - AllSpecificationsHoldResult: All specifications hold
    Buchi Automizer proved that the LTL property ! ( ( []( (call_transfer_ERC200) ==> ( <>(success_transfer_ERC200) ) ) )) holds
RESULT: Ultimate proved your program to be correct!
Received shutdown request...
